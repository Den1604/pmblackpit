% Automatically dumped from section 1B

#new:Actor $1B_SuperBlooper {
% stats
[Index]        CAb 
[Level]        65`b 
[MaxHP]        70`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021F554_1B 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8021F6AC_1B 
[Script]      $Script_Init_8021F71C_1B 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        -111`b -88`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b  60`b % dx dy
[StatusIcon]   40`b  80`b % dx dy
}

#new:Function $Function_80218680_1B {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021876C_1B {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o48
	SW        RA, 14 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	COPY      A3, A0
	LAW       V0, 801512F0
	ADDIU     V1, R0, 1
	JAL       ~Func:set_background_color_blend
	SB        V1, 0 (V0)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o48
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	LW        V1, 70 (S0)
	ADDIU     V0, R0, 14
	SUBU      V0, V0, V1
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	SW        V0, 70 (S0)
	SLTIU     V0, V0, 1
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	SLL       V0, V0, 1
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218804_1B {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o1C
	SW        RA, 14 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o1C
	CLEAR     A0
	COPY      A1, A0
	LW        V0, 70 (S0)
	COPY      A2, A0
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	BEQ       V0, R0, .o58
	SW        V0, 70 (S0)
	BEQ       R0, R0, .o70
	CLEAR     V0
	.o58
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	COPY      A3, A0
	ADDIU     V0, R0, 2
	.o70
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218884_1B {
	ADDIU     SP, SP, FFB0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_variable
	COPY      A0, S1
	LIF       F0, 40.0
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	ADD.S     F0, F22, F0
	MOV.S     F12, F28
	MFC1      A2, F20
	MFC1      A3, F0
	JAL       ~Func:atan2
	MOV.S     F14, F26
	LIF       F2, 10.0
	CLEAR     A0
	SUB.S     F20, F20, F2
	LIF       F2, 60.0
	LIF       F4, 2.5
	ADD.S     F22, F22, F2
	LIF       F2, 20.0
	ADDIU     V0, R0, 28
	SW        V0, 14 (SP)
	SWC1      F4, 10 (SP)
	ADD.S     F24, F24, F2
	MFC1      A1, F20
	MFC1      A2, F22
	MFC1      A3, F24
	JAL       80071B10
	MOV.S     F20, F0
	LW        V1, C (V0)
	SWC1      F20, 38 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, 2
	SW        A0, 18 (V1)
	LW        V1, C (V0)
	SW        A0, 1C (V1)
	LW        V1, C (V0)
	SW        A0, 20 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, 50
	SW        A0, 28 (V1)
	LW        V1, C (V0)
	SW        A0, 2C (V1)
	LW        V1, C (V0)
	SW        A0, 30 (V1)
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 50
}

#new:Function $Function_80218A20_1B {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218A78_1B {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218B2C_1B {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Script $Script_8021EF60_1B {
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    If  *Var[B]  >  00000014 
        Sub   *Var[B]  00000014 
    Else
        Set   *Var[B]  00000000 
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Set   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[0] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[1] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[2] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Set   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[4] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[5] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[6] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Return
    End
}

#new:Script $Script_8021F43C_1B {
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  0000000C 
    ExecWait  $Script_8021EF60_1B 
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021F494_1B {
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F4D0_1B {
.Status:Normal    0050000C
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    0050000C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F50C_1B {
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End
}

#new:DefenseTable $DefenseTable_8021F548_1B {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021F554_1B {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     70`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:StatusTable $StatusTable_8021F600_1B {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8021F6AC_1B {
00020000 01000000 005000FF $IdleAnimations_8021F494_1B $DefenseTable_8021F548_1B 00000000 00000000 00000000 00000000 
00800000 02001400 003C00FF 00000000 $DefenseTable_8021F548_1B 00000000 00000000 00E20000 00000000 
}

#new:Script $Script_Init_8021F71C_1B {
    Call  ForceHomePos  ( .Actor:Self 0000005A 0000002D FFFFFFF6 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetActorScale ( .Actor:Self *Fixed[2.0] *Fixed[2.0] *Fixed[2.0] )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_SuperBlooper_1B )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F7E0_1B )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FC18_1B )
    Return
    End
}

#new:Script $Script_Idle_8021F7E0_1B {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000000 
    Call  GetActorPos       ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  B
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F4D0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Label  B
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Call  GetActorPos       ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  C
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F4D0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Wait  3`
    Label  C
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F50C_1B )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  FFFFFFF6 
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8021FC18_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoNormalHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  $Script_80220100_1B 
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Set   *Var[1]  00500005 
            Set   *Var[2]  00500006 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Set   *Var[1]  00500005 
            Set   *Var[2]  00500006 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500006 
            ExecWait  $Script_80220100_1B 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  $Script_80220100_1B 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
        CaseOR  ==  0000001D % 1D
        CaseOR  ==  0000001E % 1E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500000 
            ExecWait  DoImmune 
        EndCaseGroup
        CaseOR  ==  .Event:StarBeam % 13
        CaseOR  ==  00000014 % 14
            ExecWait  $Script_80221E80_1B 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:ShockHit % 2F
            ExecWait  $Script_80221E80_1B 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoJumpBack 
            ExecWait  $Script_8021F43C_1B 
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_80221E80_1B 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  $Script_80220100_1B 
            Return
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8021F43C_1B 
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500000 
            ExecWait  DoRecover 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80220100_1B {
    ExecWait  DoDeath 
    Return
    End
}

#new:Script $Script_TakeTurn_SuperBlooper_1B {
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000003 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
            EndIf
        Case  ==  00000001 
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000 
                Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
            Else
                Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
                If  *Var[0]  !=  .False 
                    Call  ActorExists   ( .Actor:Enemy2 *Var[0] )
                    If  *Var[0]  !=  .False 
                        Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
                    EndIf
                EndIf
            EndIf
        Default
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0] 
        Case  ==  .True 
            Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
            ExecWait  $Script_SpawnBabies_1B 
            Return
        Case  ==  00000002 
            Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
            ExecWait  $Script_Enrage_1B 
            Return
        Case  ==  00000003 
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
            ExecWait  $Script_EnragedTackle_1B 
            Return
        Default
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000 
                Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                Call  RandInt       ( 00000064 *Var[0] )
                If  *Var[0]  <  00000032 
                    ExecWait  $Script_Tackle_SuperBlooper_1B 
                Else
                    ExecWait  $Script_SprayInk_SuperBlooper_1B 
                EndIf
            Else
                ExecWait  $Script_Tackle_SuperBlooper_1B 
            EndIf
    EndSwitch
    Return
    End
}

#new:Script $Script_Tackle_SuperBlooper_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000064 
    Set   *Var[3]  0000000F 
    ExecWait  $Script_8021EF60_1B 
    Call  PlaySoundAtActor  ( .Actor:Self 000003DD )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Set   *Var[0]  00000000 
                Loop  00000024 
                    Add   *Var[0]  0000001E 
                    Call  SetActorYaw   ( .Actor:Self *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            ExecWait  $Script_8021F43C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Set   *Var[0]  00000000 
        Loop  00000010 
            Add   *Var[0]  0000001E 
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000001E 
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000010 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 % 100000
        Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    ExecWait  $Script_8021F43C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SprayInk_SuperBlooper_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000055 
    Add   *Var[1]  0000002D 
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos       ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    If  *Var[B]  >  0000001E 
        Sub   *Var[B]  0000001E 
    Else
        Set   *Var[B]  00000000 
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Set   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[0] 
    MulF  *Var[7]  *Fixed[0.5] 
    Set   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[1] 
    MulF  *Var[8]  *Fixed[0.5] 
    Set   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[2] 
    MulF  *Var[9]  *Fixed[0.5] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500003 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  0000001E 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FlyToGoal     ( .Actor:Self 00000010 00000000 .Easing:Linear )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000028 00000000 )
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 FFFFFFD8 )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DE )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Add   *Var[3]  00000001 
    Sub   *Var[4]  0000001E 
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218884_1B ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] )
    Call  EnemyTestTarget       ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            ExecWait  $Script_8021F43C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  80269EAC  ( 0000001A )
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
    Wait  30`
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    ExecWait  $Script_8021F43C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SpawnBabies_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000032 )
    Call  SetBattleCamZoom  ( 0000014A )
    Call  MoveBattleCamOver ( 00000028 )
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
    Call  $Function_8021876C_1B ( )
    Call  $Function_80218680_1B ( 00000032 00000014 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[0.3] )
    EndThread
    Call  UseCamPreset  ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000041 )
    Call  SetBattleCamZoom      ( 000000F0 )
    Call  MoveBattleCamOver     ( 0000000F )
    Call  SetAnimation  ( .Actor:Self 00000001 00500009 )
    Wait  15`
    Call  $Function_80218680_1B ( 00000064 00000014 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[0.4] )
    EndThread
    Call  UseCamPreset  ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000050 )
    Call  SetBattleCamZoom      ( 00000096 )
    Call  MoveBattleCamOver     ( 0000000F )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000A )
    Wait  15`
    Call  $Function_80218680_1B ( 00000096 00000014 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[0.5] )
    EndThread
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 0000005F )
    Call  SetBattleCamZoom  ( 0000003C )
    Call  MoveBattleCamOver ( 0000000F )
    Call  SetAnimation      ( .Actor:Self 00000001 0050000B )
    Wait  30`
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetAnimation      ( .Actor:Self 00000001 00500003 )
    Wait  10`
    Call  ActorExists       ( .Actor:Enemy1 *Var[1] )
    If  *Var[1]  ==  .False 
        Call  PlaySoundAtActor  ( .Actor:Self 000003D9 )
        Call  SummonEnemy       ( $SpecialFormation_80221EFC_1B 00000000 )
    EndIf
    Call  ActorExists   ( .Actor:Enemy2 *Var[1] )
    If  *Var[1]  ==  .False 
        Call  PlaySoundAtActor  ( .Actor:Self 000003D9 )
        Call  SummonEnemy       ( $SpecialFormation_80221F18_1B 00000000 )
    EndIf
    Wait  2`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
    Call  $Function_80218804_1B ( )
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    Return
    End
}

#new:Script $Script_Enrage_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 0000001C )
    Call  SetBattleCamZoom  ( 00000129 )
    Call  MoveBattleCamOver ( 00000032 )
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
    Call  $Function_8021876C_1B ( )
    Call  $Function_80218680_1B ( 00000046 00000050 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000028 *Fixed[0.3] )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00500009 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000A )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000B )
    Wait  10`
    ExecWait  $Script_80221DC4_1B 
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  $Function_80218804_1B ( )
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    Return
    End
}

#new:Script $Script_EnragedTackle_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000064 
    Set   *Var[3]  0000000F 
    ExecWait  $Script_8021EF60_1B 
    Call  PlaySoundAtActor  ( .Actor:Self 000003DD )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Set   *Var[0]  00000000 
                Loop  00000024 
                    Add   *Var[0]  0000001E 
                    Call  SetActorYaw   ( .Actor:Self *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            ExecWait  $Script_80221E80_1B 
            If  *Var[F]  ==  00000005 
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            ExecWait  $Script_8021F43C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Set   *Var[0]  00000000 
        Loop  00000010 
            Add   *Var[0]  0000001E 
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000001E 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
    Call  GetStatusFlags        ( .Actor:Player *Var[E] )
    If  *Var[E]  &  00100000 
        Goto  0
    EndIf
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 0000000A 00000040 )
    Call  GetPlayerHP       ( *Var[E] )
    If  *Var[E]  ==  00000000 
        Goto  1
    EndIf
    Thread
        Set   *Var[0]  00000000 
        Loop  00000014 
            Add   *Var[0]  00000024 
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.4] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
    Label  0
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 )
    Label  1
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 
        Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    ExecWait  $Script_80221E80_1B 
    ExecWait  $Script_8021F43C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80221DC4_1B {
    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
    Call  8026ED20      ( FFFFFF81 00000001 00000001 )
    Call  8026EBF8      ( FFFFFF81 00000001 00000000 00000002 00000000 00000006 0000000C 00000006 00000000 00000000 )
    Call  8026EA7C      ( FFFFFF81 00000001 0000000F )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F600_1B )
    Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
    Return
    End
}

#new:Script $Script_80221E80_1B {
    Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
    Call  8026ED20  ( FFFFFF81 00000001 00000000 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F554_1B )
    Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
    Return
    End
}

#new:Vector3D $Vector3D_80221EF0_1B {
400` 0` 0`
}

#new:SpecialFormation $SpecialFormation_80221EFC_1B {
$BlooperBaby_1B $Vector3D_80221EF0_1B 0000005F 0000001E 00000044 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80221F18_1B {
$BlooperBaby_1B $Vector3D_80221EF0_1B 0000005E 00000086 0000002D 00000000 00000000 
}

#new:Script $Script_80221F40_1B {
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    If  *Var[B]  >  00000014 
        Sub   *Var[B]  00000014 
    Else
        Set   *Var[B]  00000000 
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Set   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[0] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[1] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[2] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Set   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[4] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[5] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[6] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Return
    End
}

#new:Script $Script_8022241C_1B {
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  0000000C 
    ExecWait  $Script_80221F40_1B 
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80222474_1B {
.Status:Normal    00510000
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510000
.Status:End
}

#new:IdleAnimations $IdleAnimations_802224B0_1B {
.Status:Normal    00510001
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510001
.Status:End
}

#new:IdleAnimations $IdleAnimations_802224EC_1B {
.Status:Normal    00510000
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510000
.Status:End
}

#new:DefenseTable $DefenseTable_80222528_1B {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80222534_1B {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink      0`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_802225E0_1B {
00020000 01000000 005500FF $IdleAnimations_80222474_1B $DefenseTable_80222528_1B 00000000 00000000 00000000 00000000 
00800000 02001B00 000000FF 00000000 $DefenseTable_80222528_1B 00000000 00000000 01F30000 00000000 
}

#new:Actor $BlooperBaby_1B {
% stats
[Index]        CCb 
[Level]         0`b 
[MaxHP]         6`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80222534_1B 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_802225E0_1B 
[Script]      $Script_Init_80222650_1B 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  25`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -12`b  20`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_Init_80222650_1B {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022319C_1B )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80222CF8_1B )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Call  $Function_80218A20_1B ( 00000050 00000014 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Sub   *Var[2]  0000000A 
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000014 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 00000008 00000000 .Easing:Linear )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Call  $Function_80218A20_1B ( 00000050 00000014 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000000C FFFFFFFE .Easing:CubicOut )
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802228C0_1B )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_802228C0_1B {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000000 
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  B
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224B0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00510000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 00510001 )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Label  B
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000005 
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  C
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224B0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00510000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 00510001 )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Wait  3`
    Label  C
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224EC_1B )
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  FFFFFFFB 
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80222CF8_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoNormalHit 
            SetConst  *Var[1]  00510003 
            ExecWait  $Script_80223170_1B 
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Set   *Var[1]  00510004 
            Set   *Var[2]  00510005 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Set   *Var[1]  00510004 
            Set   *Var[2]  00510005 
            ExecWait  DoBurnHit 
            SetConst  *Var[1]  00510005 
            ExecWait  $Script_80223170_1B 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510003 
            ExecWait  $Script_80223170_1B 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510000 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoJumpBack 
            ExecWait  $Script_8022241C_1B 
        CaseOR  ==  .Event:ShockDeath % 26
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510003 
            ExecWait  $Script_80223170_1B 
            Return
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8022241C_1B 
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510000 
            ExecWait  DoRecover 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223170_1B {
    SetConst  *Var[0]  00000001 
    ExecWait  DoDeath 
    Return
    End
}

#new:Script $Script_TakeTurn_8022319C_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000064 
    Set   *Var[3]  0000000C 
    ExecWait  $Script_80221F40_1B 
    Thread
        Wait  2`
        Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            ExecWait  $Script_8022241C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        CaseOR  ==  .HitResult:HitStatic % 7
        CaseOR  ==  .HitResult:Immune % 8
            Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            If  *Var[F]  ==  00000007 
                Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000000 00000040 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
            ExecWait  $Script_8022241C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000032 
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000145 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 00510002 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  0000000A 
    Sub   *Var[2]  00000005 
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000010 .False .True .False )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 00510008 )
    Call  ShowMessageBox    ( 00000031 00007FFF )
    Call  802694A4  ( 00000001 )
    Call  LoadActionCommand ( 00000006 )
    Call  802A9000 ( )
    Call  802691C8  ( 00000001 0000000F 00000000 00000000 00000000 00000000 )
    Wait  10`
    Call  SetBattleFlagBits ( 00004000 .False )
    Call  802A9110  ( 00000000 00007FFF 00000003 )
    Loop  00000005 
        Call  UseIdleAnimation  ( .Actor:Player .False )
        Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
        Set   *Flag[00]  .False 
        Loop  0000000A 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000003 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  UseIdleAnimation  ( .Actor:Player .True )
        Call  80269EAC  ( 00000001 )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
        Call  StartRumble       ( 00000002 )
        Call  GetLastDamage     ( .Actor:Player *Var[3] )
        If  *Var[3]  !=  00000000 
            Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
            Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000000A 
            Call  $Function_80218A78_1B ( *Var[0] *Var[1] *Var[2] *Var[3] )
            Thread
                Wait  15`
                Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                Call  $Function_80218B2C_1B ( *Var[0] *Var[1] *Var[2] *Var[3] )
            EndThread
            Add   *Var[0]  00000014 
            Add   *Var[1]  00000014 
            Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Add   *Var[0]  *Var[3] 
            If  *Var[0]  >  *Var[1] 
                Set   *Var[0]  *Var[1] 
            EndIf
            Call  SetEnemyHP    ( .Actor:Self *Var[0] )
        Else
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  80276F1C      ( 00000042 )
            Call  80269470 ( )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000003 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  GetPlayerHP   ( *Var[1] )
        If  *Var[1]  ==  00000000 
            Call  80276F1C  ( 00000042 )
            Call  80269470 ( )
            BreakLoop
        EndIf
        Set   *Flag[00]  .False 
        Loop  0000000C 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            BreakLoop
        EndIf
    EndLoop
    Call  80276F1C  ( 00000042 )
    Call  80269470 ( )
    Call  UseIdleAnimation  ( .Actor:Player .True )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 
        Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    EndIf
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    ExecWait  $Script_8022241C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

