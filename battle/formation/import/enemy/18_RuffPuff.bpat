% Automatically dumped from section 18

#new:Actor $18_RuffPuff {
% stats
[Index]        34b 
[Level]        19`b 
[MaxHP]        10`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802225F8_18 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_802226A4_18 
[Script]      $Script_Init_802226F0_18 
% move effectiveness
[Escape]       50`b 
[Item]         40`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802181F0_18 {
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:IdleAnimations $IdleAnimations_802225A0_18 {
.Status:Normal    007D0001
.Status:Stone     007D0000
.Status:Sleep     007D0009
.Status:Poison    007D0001
.Status:Stop      007D0000
.Status:Static    007D0001
.Status:Paralyze  007D0000
.Status:Dizzy     007D000B
.Status:End
}

#new:DefenseTable $DefenseTable_802225E4_18 {
.Element:Normal 00000000
.Element:Mystery00000000
.Element:End
}

#new:StatusTable $StatusTable_802225F8_18 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     90`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   40`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_802226A4_18 {
00800000 01000000 FE1A00FF $IdleAnimations_802225A0_18 $DefenseTable_802225E4_18 00000000 00000000 00F30000 00000000 
}

#new:Script $Script_Init_802226F0_18 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222DE8_18 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022273C_18 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222898_18 )
    Return
    End
}

#new:Script $Script_Idle_8022273C_18 {
    Set   *Var[F]  00000000 
    Loop
        Call  $Function_802181F0_18 ( *Var[F] *Var[0] *Fixed[0.97] *Fixed[1.03] 0000000F 00000000 00000000 )
        Call  $Function_802181F0_18 ( *Var[F] *Var[1] *Fixed[1.03] *Fixed[0.97] 0000000F 00000000 00000000 )
        Add   *Var[F]  00000001 
        Call  SetActorScale ( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
        If  *Var[F]  >=  0000001E 
            Set   *Var[F]  00000000 
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80222820_18 {
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 007D0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:SinOut )
    Return
    End
}

#new:Script $Script_HandleEvent_80222898_18 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0007 
            SetConst  *Var[2]  007D0008 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0007 
            SetConst  *Var[2]  007D0008 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0008 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoJumpBack 
            ExecWait  $Script_80222820_18 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0006 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_80222820_18 
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0004 
            SetConst  *Var[2]  007D0006 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0004 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007D0004 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222DE8_18 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 007D0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 007D0001 )
    Wait  5`
    Call  SetAnimation  ( .Actor:Self 00000001 007D0005 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                SetF  *Var[0]  *Fixed[0.0] 
                Loop  0000000F 
                    AddF  *Var[0]  *Fixed[12.0] 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                SetF  *Var[0]  *Fixed[180.0] 
                Loop  0000000A 
                    AddF  *Var[0]  *Fixed[18.0] 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self FFFFFFE2 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  AddGoalPos    ( .Actor:Self FFFFFFEC 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80222820_18 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000D 00000000 )
        SetF  *Var[0]  *Fixed[0.0] 
        Loop  00000008 
            AddF  *Var[0]  *Fixed[22.5] 
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                SetF  *Var[0]  *Fixed[180.0] 
                Loop  0000000A 
                    SubF  *Var[0]  *Fixed[22.5] 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self 0000001E 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[5.0] )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_80222820_18 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

