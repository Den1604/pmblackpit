% Automatically dumped from section 12

#new:Actor $12_HammerBros {
% stats
[Index]        4Bb 
[Level]        27`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80221034_12 
% ai
[PartsCount]    6`s 
[PartsTable]  $PartsTable_802210E0_12 
[Script]      $Script_Init_802211E0_12 
% move effectiveness
[Escape]       30`b 
[Item]         40`b 
[AirLift]      75`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80220FD0_12 {
.Status:Normal    005A0002
.Status:Stone     005A0000
.Status:Sleep     005A0011
.Status:Poison    005A0002
.Status:Stop      005A0000
.Status:Static    005A0002
.Status:Paralyze  005A0000
.Status:Dizzy     005A0012
.Status:Fear      005A0012
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022101C_12 {
.Status:Normal    005A000D
.Status:End
}

#new:DefenseTable $DefenseTable_80221028_12 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_80221034_12 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_802210E0_12 {
00800000 01000000 FD2300FF $IdleAnimations_80220FD0_12 $DefenseTable_80221028_12 00000000 00000000 FDF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8022101C_12 $DefenseTable_80221028_12 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_8022101C_12 $DefenseTable_80221028_12 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8022101C_12 $DefenseTable_80221028_12 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8022101C_12 $DefenseTable_80221028_12 00000000 00000000 00000000 00000000 
00120001 06000000 000000FF $IdleAnimations_8022101C_12 $DefenseTable_80221028_12 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_802211E0_12 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222DCC_12 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80221244_12 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802213A0_12 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80221244_12 {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  &  00001000 
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Default
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000023 )
                    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
                Case  ==  00000001 
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            EndSwitch
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_802213A0_12 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000E 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000F 
            SetConst  *Var[2]  005A0010 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000F 
            SetConst  *Var[2]  005A0010 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A0010 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000E 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000E 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000E 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A0015 
            ExecWait  DoImmune 
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000 
                Call  SetAnimation  ( .Actor:Self 00000001 005A0017 )
                Wait  10`
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000E 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A0002 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A0007 
            SetConst  *Var[2]  005A000E 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A0007 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000 
                If  *Var[0]  &  00080000 
                    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFE 00000001 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFB 00000003 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A000E 
            ExecWait  DoBlowAway 
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  005A0002 
            ExecWait  DoImmune 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802218B4_12 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        ChildThread
            Set   *Var[0]  00000000 
            Label  0
            Add   *Var[0]  00000014 
            Mod   *Var[0]  00000168 
            Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
            Wait  1`
            Goto  0
        EndChildThread
        Call  SetPartPos        ( .Actor:Self 00000002 00000000 00000032 00000000 )
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
        Call  SetAnimation      ( .Actor:Self 00000001 005A000C )
        Goto  64
    EndIf
    ChildThread
        Set   *Var[0]  00000000 
        Label  0
        Add   *Var[0]  00000014 
        Mod   *Var[0]  00000168 
        Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
        Wait  1`
        Goto  0
    EndChildThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000017 
    Add   *Var[1]  00000017 
    Sub   *Var[2]  00000002 
    Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
    Wait  8`
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Label  64
    Thread
        Wait  15`
        Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
    EndThread
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
            Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002E9 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014 
            Set   *Var[1]  0000000A 
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Sub   *Var[0]  00000028 
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Sub   *Var[0]  0000001E 
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
            Sub   *Var[0]  00000014 
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  15`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002E9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 80080332 00000005 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetPartOffset ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032 
            Set   *Var[1]  0000000A 
            Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
            Sub   *Var[0]  0000001E 
            Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
            Sub   *Var[0]  00000014 
            Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  20`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022212C_12 {
    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
    Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
    Wait  4`
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .False )
    Call  SetPartSounds ( .Actor:Self *Var[0] .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtPart   ( .Actor:Self *Var[0] 000002E9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Set   *Var[2]  0000000A 
    Call  RandInt       ( 0000003C *Var[4] )
    Set   *Var[5]  0000001E 
    Sub   *Var[5]  *Var[4] 
    Add   *Var[1]  *Var[5] 
    Call  SetPartJumpGravity    ( .Actor:Self *Var[0] *Fixed[1.3] )
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
    Sub   *Var[1]  00000032 
    Set   *Var[2]  0000000A 
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
    Sub   *Var[1]  0000001E 
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
    Sub   *Var[1]  00000014 
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Return
    End
}

#new:Script $Script_80222378_12 {
    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
    Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
    Wait  4`
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .False )
    Call  SetPartSounds ( .Actor:Self *Var[0] .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtPart   ( .Actor:Self *Var[0] 000002E9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[0] *Fixed[1.3] )
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
    Sub   *Var[1]  00000032 
    Set   *Var[2]  0000000A 
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
    Sub   *Var[1]  0000001E 
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
    Sub   *Var[1]  00000014 
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Return
    End
}

#new:Script $Script_80222570_12 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Thread
        Set   *Var[0]  00000000 
        Loop  00000064 
            Add   *Var[0]  00000014 
            Mod   *Var[0]  00000168 
            Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000005 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000006 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000017 
    Add   *Var[1]  00000017 
    Sub   *Var[2]  00000002 
    Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Set   *Var[0]  00000002 
            Exec  $Script_8022212C_12 
            Wait  5`
            Set   *Var[0]  00000003 
            Exec  $Script_8022212C_12 
            Wait  5`
            Set   *Var[0]  00000004 
            Exec  $Script_8022212C_12 
            Wait  5`
            Set   *Var[0]  00000005 
            Exec  $Script_8022212C_12 
            Wait  5`
            Set   *Var[0]  00000006 
            Exec  $Script_8022212C_12 
            Wait  5`
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
            If  *Var[A]  ==  00000005 
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Set   *Var[0]  00000002 
        Exec  $Script_80222378_12 
        Wait  5`
        Set   *Var[0]  00000003 
        Exec  $Script_80222378_12 
        Wait  5`
        Set   *Var[0]  00000004 
        Exec  $Script_80222378_12 
        Wait  5`
        Set   *Var[0]  00000005 
        Exec  $Script_80222378_12 
        Wait  5`
        Set   *Var[0]  00000006 
        Exec  $Script_80222378_12 
    EndThread
    Wait  21`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000010 )
    Wait  5`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Wait  5`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Wait  5`
    Call  SetAnimation      ( .Actor:Self 00000001 005A0002 )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Wait  5`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 80080332 00000002 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  20`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222DCC_12 {
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
    MulF  *Var[0]  *Fixed[100.0] 
    DivF  *Var[0]  *Var[1] 
    If  *Var[0]  >  00000022 
        ExecWait  $Script_802218B4_12 
    Else
        ExecWait  $Script_80222570_12 
    EndIf
    Return
    End
}

