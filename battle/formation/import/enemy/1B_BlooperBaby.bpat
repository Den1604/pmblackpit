% Automatically dumped from section 1B

#new:Actor $1B_BlooperBaby {
% stats
[Index]        CCb 
[Level]         0`b 
[MaxHP]         6`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80222534_1B 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_802225E0_1B 
[Script]      $Script_Init_80222650_1B 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  25`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -12`b  20`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}

#new:Function $Function_80218A20_1B {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218A78_1B {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218B2C_1B {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Script $Script_80221F40_1B {
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    If  *Var[B]  >  00000014 
        Sub   *Var[B]  00000014 
    Else
        Set   *Var[B]  00000000 
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Set   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[0] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[1] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[2] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Set   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[4] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[5] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[6] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Return
    End
}

#new:Script $Script_8022241C_1B {
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  0000000C 
    ExecWait  $Script_80221F40_1B 
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80222474_1B {
.Status:Normal    00510000
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510000
.Status:End
}

#new:IdleAnimations $IdleAnimations_802224B0_1B {
.Status:Normal    00510001
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510001
.Status:End
}

#new:IdleAnimations $IdleAnimations_802224EC_1B {
.Status:Normal    00510000
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510000
.Status:End
}

#new:DefenseTable $DefenseTable_80222528_1B {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80222534_1B {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink      0`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_802225E0_1B {
00020000 01000000 005500FF $IdleAnimations_80222474_1B $DefenseTable_80222528_1B 00000000 00000000 00000000 00000000 
00800000 02001B00 000000FF 00000000 $DefenseTable_80222528_1B 00000000 00000000 01F30000 00000000 
}

#new:Script $Script_Init_80222650_1B {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022319C_1B )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80222CF8_1B )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Call  $Function_80218A20_1B ( 00000050 00000014 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
    Call  GetActorPos   ( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Sub   *Var[2]  0000000A 
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000014 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 00000008 00000000 .Easing:Linear )
    Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
    Call  $Function_80218A20_1B ( 00000050 00000014 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000000C FFFFFFFE .Easing:CubicOut )
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802228C0_1B )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_802228C0_1B {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000000 
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  B
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224B0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00510000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 00510001 )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Label  B
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000005 
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  C
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224B0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00510000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 00510001 )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Wait  3`
    Label  C
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224EC_1B )
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  FFFFFFFB 
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80222CF8_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoNormalHit 
            SetConst  *Var[1]  00510003 
            ExecWait  $Script_80223170_1B 
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Set   *Var[1]  00510004 
            Set   *Var[2]  00510005 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Set   *Var[1]  00510004 
            Set   *Var[2]  00510005 
            ExecWait  DoBurnHit 
            SetConst  *Var[1]  00510005 
            ExecWait  $Script_80223170_1B 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510003 
            ExecWait  $Script_80223170_1B 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510000 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoJumpBack 
            ExecWait  $Script_8022241C_1B 
        CaseOR  ==  .Event:ShockDeath % 26
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510002 
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510003 
            ExecWait  $Script_80223170_1B 
            Return
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8022241C_1B 
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00510000 
            ExecWait  DoRecover 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223170_1B {
    SetConst  *Var[0]  00000001 
    ExecWait  DoDeath 
    Return
    End
}

#new:Script $Script_TakeTurn_8022319C_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000064 
    Set   *Var[3]  0000000C 
    ExecWait  $Script_80221F40_1B 
    Thread
        Wait  2`
        Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            ExecWait  $Script_8022241C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        CaseOR  ==  .HitResult:HitStatic % 7
        CaseOR  ==  .HitResult:Immune % 8
            Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            If  *Var[F]  ==  00000007 
                Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000000 00000040 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
            ExecWait  $Script_8022241C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000032 
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000145 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 00510002 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  0000000A 
    Sub   *Var[2]  00000005 
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000010 .False .True .False )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 00510008 )
    Call  ShowMessageBox    ( 00000031 00007FFF )
    Call  802694A4  ( 00000001 )
    Call  LoadActionCommand ( 00000006 )
    Call  802A9000 ( )
    Call  802691C8  ( 00000001 0000000F 00000000 00000000 00000000 00000000 )
    Wait  10`
    Call  SetBattleFlagBits ( 00004000 .False )
    Call  802A9110  ( 00000000 00007FFF 00000003 )
    Loop  00000005 
        Call  UseIdleAnimation  ( .Actor:Player .False )
        Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
        Set   *Flag[00]  .False 
        Loop  0000000A 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000003 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  UseIdleAnimation  ( .Actor:Player .True )
        Call  80269EAC  ( 00000001 )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
        Call  StartRumble       ( 00000002 )
        Call  GetLastDamage     ( .Actor:Player *Var[3] )
        If  *Var[3]  !=  00000000 
            Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
            Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000000A 
            Call  $Function_80218A78_1B ( *Var[0] *Var[1] *Var[2] *Var[3] )
            Thread
                Wait  15`
                Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                Call  $Function_80218B2C_1B ( *Var[0] *Var[1] *Var[2] *Var[3] )
            EndThread
            Add   *Var[0]  00000014 
            Add   *Var[1]  00000014 
            Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Add   *Var[0]  *Var[3] 
            If  *Var[0]  >  *Var[1] 
                Set   *Var[0]  *Var[1] 
            EndIf
            Call  SetEnemyHP    ( .Actor:Self *Var[0] )
        Else
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  80276F1C      ( 00000042 )
            Call  80269470 ( )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000003 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
        Set   *Flag[00]  .False 
        Loop  00000002 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            BreakLoop
        EndIf
        Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  GetPlayerHP   ( *Var[1] )
        If  *Var[1]  ==  00000000 
            Call  80276F1C  ( 00000042 )
            Call  80269470 ( )
            BreakLoop
        EndIf
        Set   *Flag[00]  .False 
        Loop  0000000C 
            Call  GetActionSuccessCopy  ( *Var[1] )
            If  *Var[1]  ==  00000001 
                Set   *Flag[00]  .True 
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
        If  *Flag[00]  ==  .True 
            Call  80276F1C  ( 00000042 )
            BreakLoop
        EndIf
    EndLoop
    Call  80276F1C  ( 00000042 )
    Call  80269470 ( )
    Call  UseIdleAnimation  ( .Actor:Player .True )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 
        Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
    EndIf
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    ExecWait  $Script_8022241C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

