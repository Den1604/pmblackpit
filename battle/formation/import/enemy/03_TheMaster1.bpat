% Automatically dumped from section 03

#new:Actor $03_TheMaster1 {
% stats
[Index]        7Ab 
[Level]         0`b 
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022A2B8_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022A364_03 
[Script]      $Script_Init_8022A3B0_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  35`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  30`b % dx dy
[StatusIcon]   10`b  30`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022A260_03 {
.Status:Normal    00A20005
.Status:Stone     00A20000
.Status:Sleep     00A2001C
.Status:Poison    00A20000
.Status:Stop      00A20000
.Status:Static    00A20000
.Status:Paralyze  00A20000
.Status:Dizzy     00A2001E
.Status:Dizzy     00A2001E
.Status:End
}

#new:DefenseTable $DefenseTable_8022A2AC_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8022A2B8_03 {
.Status:Normal     50`
.Status:Default    50`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      40`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     60`
.Status:Stop       70`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8022A364_03 {
00800000 01000000 FB1C00FF $IdleAnimations_8022A260_03 $DefenseTable_8022A2AC_03 00000000 00000000 02F90000 00000000 
}

#new:Script $Script_Init_8022A3B0_03 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022AA54_03 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022A494_03 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B2CC_03 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022B06C_03 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000002 )
    Set   *Flag_KMR_48  .True 
    Call  SetBattleFlagBits ( 00800000 .True )
    Return
    End
}

#new:Script $Script_Idle_8022A494_03 {
    Return
    End
}

#new:Script $Script_8022A4A4_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20017 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A2001A 
            SetConst  *Var[2]  00A2001B 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A2001A 
            SetConst  *Var[2]  00A2001B 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20019 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20017 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20017 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20017 
            ExecWait  DoJumpBack 
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00A20005 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20002 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20017 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20019 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20017 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20019 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20017 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20019 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20002 
            ExecWait  DoReturnHome 
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20002 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A20007 
            SetConst  *Var[2]  00A20017 
            ExecWait  DoScareAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022AA54_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.6] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
    Wait  10`
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00A20010 )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00A20011 )
        Wait  7`
        Call  SetAnimation  ( .Actor:Self 00000001 00A20012 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  RunToGoal ( .Actor:Self 00000008 .True )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014 
            Set   *Var[1]  00000000 
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RunToGoal     ( .Actor:Self 0000000A .True )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Wait  3`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000006 00000030 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014 
            Set   *Var[1]  00000000 
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RunToGoal     ( .Actor:Self 0000000A .True )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8022B06C_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000A 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  UseCamPreset  ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak    ( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            EndIf
        Case  ==  0000000C 
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00351000 
                BreakCase
            EndIf
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Div   *Var[1]  00000002 
            If  *Var[0]  <=  *Var[1] 
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020031 .Actor:Self 00000001 00A20009 00A20005 ) % You have natural talent.
                BreakCase
            EndIf
            Call  GetPlayerHP   ( *Var[0] )
            If  *Var[0]  <=  00000005 
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020032 .Actor:Self 00000001 00A20009 00A20005 ) % Mario, I'm afraid I must finish you.
                BreakCase
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_8022B2CC_03 {
    ExecWait  $Script_8022A4A4_03 
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00351000 
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  00000240 
        Call  GetLastDamage ( .Actor:Self *Var[0] )
        If  *Var[0]  >  00000000 
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
        EndIf
    EndIf
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[A] )
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[B] )
            Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  003F1000 % 3F1000
                BreakCase
            EndIf
            Set   *Flag[00]  .False 
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[0] 
                CaseOR  ==  00000001 % 1
                CaseOR  ==  00000000 % 0
                    Set   *Flag[00]  .True 
                EndCaseGroup
            EndSwitch
            If  *Flag[00]  ==  .False 
                BreakCase
            EndIf
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  EnableIdleScript  ( .Actor:Self 00000000 )
            If  *Var[A]  ==  00000001 
                If  *Var[B]  >  00000002 
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000000A )
                    Call  ActorSpeak    ( 00020030 .Actor:Self 00000001 00A20009 00A20005 ) % Hm! Excellent move.
                    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
                EndIf
            Else
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 0002002F .Actor:Self 00000001 00A20009 00A20005 ) % Foolish! That won't work on me.
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
        EndCaseGroup
    EndSwitch
    Return
    End
}

