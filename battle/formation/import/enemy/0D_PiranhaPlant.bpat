% Automatically dumped from section 0D

#new:Actor $0D_PiranhaPlant {
% stats
[Index]        19b 
[Level]        11`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D3A0_0D 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021D44C_0D 
[Script]      $Script_Init_8021D498_0D 
% move effectiveness
[Escape]       70`b 
[Item]         40`b 
[AirLift]      20`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]   -7`b  33`b % dx dy
[StatusIcon]   10`b  33`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021D330_0D {
.Status:Normal    00370001
.Status:Stone     00370000
.Status:Sleep     00370000
.Status:Poison    00370001
.Status:Stop      00370000
.Status:Static    00370001
.Status:Paralyze  00370000
.Status:Dizzy     00370001
.Status:Fear      00370001
.Status:End
}

#new:DefenseTable $DefenseTable_8021D394_0D {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021D3A0_0D {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021D44C_0D {
00800000 01000000 002300FF $IdleAnimations_8021D330_0D $DefenseTable_8021D394_0D 00000010 00000000 00F60000 00000000 
}

#new:Script $Script_Init_8021D498_0D {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021DCD4_0D )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021D4E4_0D )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D60C_0D )
    Return
    End
}

#new:Script $Script_Idle_8021D4E4_0D {
    Return
    End
}

#new:Script $Script_8021D4F4_0D {
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
    Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
    Wait  10`
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    Call  SetAnimation      ( .Actor:Self 00000001 00370003 )
    Wait  10`
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
    Return
    End
}

#new:Script $Script_HandleEvent_8021D60C_0D {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0037000A 
            SetConst  *Var[2]  0037000B 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0037000A 
            SetConst  *Var[2]  0037000B 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0037000B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoShockHit 
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021D4F4_0D 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Thread
                Wait  10`
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  &  00080000 
                    Add   *Var[0]  00000000 
                    Add   *Var[1]  0000000E 
                Else
                    Add   *Var[0]  00000000 
                    Add   *Var[1]  00000023 
                EndIf
                Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  20`
            EndThread
            Loop  00000028 
                Call  SetAnimation  ( .Actor:Self 00000001 00370001 )
                Wait  1`
                Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
                Wait  1`
            EndLoop
            Call  SetAnimation  ( .Actor:Self 00000001 00370001 )
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoNormalHit 
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
            Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
            Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
            Wait  8`
            Call  8027D32C  ( FFFFFF81 )
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  RemoveActor       ( .Actor:Self )
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00370009 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021DCD4_0D {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
        Call  UseCamPreset      ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
        Call  MoveBattleCamOver ( 00000001 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000014 
        Set   *Var[1]  00000000 
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Wait  15`
        Goto  7B
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
    Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Wait  8`
    Call  UseCamPreset      ( 00000013 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014 
    Set   *Var[1]  00000000 
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 0000002D )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  &  00080000 
        Add   *Var[0]  00000008 
        Add   *Var[0]  FFFFFFFD 
    Else
        Add   *Var[0]  00000014 
    EndIf
    Set   *Var[1]  00000000 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000014 .False .False .False )
    Label  7B
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00370003 )
    Wait  8`
    Call  SetAnimation      ( .Actor:Self 00000001 00370005 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  GetStatusFlags    ( .Actor:Self *Var[5] )
            If  *Var[5]  !&  00080000 
                Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
                Wait  2`
            EndIf
            Thread
                Wait  6`
                Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00370007 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00370008 )
            Wait  2`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021D4F4_0D 
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
    Wait  2`
    Thread
        Wait  6`
        Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00370007 )
    Wait  10`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  2`
            Call  SetAnimation  ( .Actor:Self 00000001 00370008 )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021D4F4_0D 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

