% Automatically dumped from section 14

#new:Actor $14_SpearGuy {
% stats
[Index]        2Ab 
[Level]        16`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218698_14 
% ai
[PartsCount]    4`s 
[PartsTable]  $PartsTable_802187F0_14 
[Script]      $Script_Init_80218980_14 
% move effectiveness
[Escape]       50`b 
[Item]         70`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218000_14 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:IdleAnimations $IdleAnimations_802185C0_14 {
.Status:Normal    00420004
.Status:Stone     00420002
.Status:Sleep     0042000D
.Status:Poison    0042000F
.Status:Stop      00420002
.Status:Static    00420004
.Status:Paralyze  00420002
.Status:Dizzy     0042000F
.Status:Fear      0042000F
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021860C_14 {
.Status:Normal    00420003
.Status:Stone     0042000D
.Status:Sleep     0042000D
.Status:Poison    0042000F
.Status:Stop      00420001
.Status:Static    00420003
.Status:Paralyze  00420001
.Status:Dizzy     0042000F
.Status:Fear      0042000F
.Status:End
}

#new:IdleAnimations $IdleAnimations_80218658_14 {
.Status:Normal    00420014
.Status:End
}

#new:IdleAnimations $IdleAnimations_80218664_14 {
.Status:Normal    00420019
.Status:End
}

#new:DefenseTable $DefenseTable_80218670_14 {
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80218684_14 {
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End
}

#new:StatusTable $StatusTable_80218698_14 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:StatusTable $StatusTable_80218744_14 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_802187F0_14 {
00800000 02000000 001600FF $IdleAnimations_802185C0_14 $DefenseTable_80218670_14 00010000 00000000 FDF80000 00000000 
00022001 01000000 001800FF $IdleAnimations_8021BF40_14 $DefenseTable_80218684_14 00000000 00000000 FFF60000 00000000 
00122001 03000000 000000FF $IdleAnimations_80218658_14 $DefenseTable_80218684_14 00000000 00000000 00000000 00000000 
00122001 04000000 000000FF $IdleAnimations_80218664_14 $DefenseTable_80218684_14 00000000 00000000 00000000 00000000 
}

#new:Actor $SpearGuy_14 {
% stats
[Index]        2Ab 
[Level]        16`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218698_14 
% ai
[PartsCount]    4`s 
[PartsTable]  $PartsTable_802187F0_14 
[Script]      $Script_Init_80218980_14 
% move effectiveness
[Escape]       50`b 
[Item]         70`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_SetSpearStance_14 {
    Switch  *Var[0] 
        Case  ==  00000002 
        Case  ==  00000000 
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_802185C0_14 )
            Call  SetPartEventFlags ( .Actor:Self 00000002 00010000 )
        Case  ==  00000001 
            Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C_14 )
            Call  SetPartEventFlags ( .Actor:Self 00000002 00000010 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_80218980_14 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            ExecWait  $Script_SetSpearStance_14 
            Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
        Case  ==  00000001 
            ExecWait  $Script_SetSpearStance_14 
            Call  SetPartEventFlags ( .Actor:Self 00000002 00000010 )
            Call  SetAnimation      ( .Actor:Self 00000002 00420003 )
    EndSwitch
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021BCB4_14 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218E3C_14 )
    Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_80218B24_14 )
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  GetEncounterState ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000002 
        CaseOR  ==  00000004 
        CaseOR  ==  00000006 
            Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C_14 )
            Call  SetAnimation      ( .Actor:Self 00000002 00420003 )
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_NextTurn_80218B24_14 {
    Call  BindNextTurn  ( .Actor:Self 00000000 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80218BE0_14 )
    Return
    End
}

#new:Script $Script_80218B5C_14 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000000 
        Call  GetStatusFlags    ( .Actor:Self *Var[B] )
        If  *Var[B]  &  00049000 
        Else
            Set   *Var[1]  *Var[2] 
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_Idle_80218BE0_14 {
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00049000 
                Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C_14 )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .True )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
            Else
                Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_802185C0_14 )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .False )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .True )
            EndIf
        Case  ==  00000001 
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C_14 )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .True )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80218D7C_14 {
    Call  UseCamPreset  ( 00000002 )
    SetConst  *Var[0]  00000002 
    SetConst  *Var[1]  00420006 
    ExecWait  DoReturnHome 
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
        Case  ==  00000001 
            Call  SetAnimation  ( .Actor:Self 00000002 00420003 )
    EndSwitch
    Return
    End
}

#new:Script $Script_HandleEvent_80218E3C_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420007 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  GetStatusFlags    ( .Actor:Self *Var[B] )
                If  *Var[B]  &  00049000 
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  0042000A 
                    SetConst  *Var[2]  0042000C 
                Else
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  0042000B 
                    SetConst  *Var[2]  FFFFFFFF 
                EndIf
            Else
                SetConst  *Var[0]  00000002 
                SetConst  *Var[1]  0042000A 
                SetConst  *Var[2]  0042000C 
            EndIf
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  GetStatusFlags    ( .Actor:Self *Var[B] )
                If  *Var[B]  &  00049000 
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  0042000A 
                    SetConst  *Var[2]  0042000C 
                    ExecWait  DoBurnHit 
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  0042000C 
                    ExecWait  DoDeath 
                Else
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  0042000B 
                    SetConst  *Var[2]  FFFFFFFF 
                    ExecWait  DoBurnHit 
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  0042000B 
                    ExecWait  DoDeath 
                EndIf
            Else
                SetConst  *Var[0]  00000002 
                SetConst  *Var[1]  0042000A 
                SetConst  *Var[2]  0042000C 
                ExecWait  DoBurnHit 
                SetConst  *Var[0]  00000002 
                SetConst  *Var[1]  0042000C 
                ExecWait  DoDeath 
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420007 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420007 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420009 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420007 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420007 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoJumpBack 
            ExecWait  $Script_80218D7C_14 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420007 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420009 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420003 
            SetConst  *Var[2]  00420004 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420007 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420009 
            SetConst  *Var[2]  00420008 
            ExecWait  $Script_80218B5C_14 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  00420004 
                    ExecWait  DoRecover 
                Case  ==  00000001 
                    SetConst  *Var[0]  00000002 
                    SetConst  *Var[1]  00420003 
                    ExecWait  DoRecover 
            EndSwitch
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420006 
            SetConst  *Var[2]  00420007 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420004 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00420004 
            ExecWait  DoBlowAway 
            Return
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Set   *Flag[00]  .False 
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
            Switch  *Var[A] 
                Case  ==  00000000 
                    If  *Var[3]  &  00080000 
                        Add   *Var[0]  FFFFFFF5 
                        Add   *Var[1]  00000003 
                        Set   *Flag[00]  .True 
                    EndIf
                    If  *Var[3]  &  00040000 
                        Add   *Var[0]  FFFFFFFC 
                        Add   *Var[1]  00000024 
                        Set   *Flag[00]  .True 
                    EndIf
                    If  *Var[3]  &  00001000 
                        Add   *Var[0]  FFFFFFF8 
                        Add   *Var[1]  00000024 
                        Set   *Flag[00]  .True 
                    EndIf
                    If  *Flag[00]  ==  .False 
                        Add   *Var[0]  FFFFFFE4 
                        Add   *Var[1]  00000008 
                    EndIf
                Case  ==  00000001 
                    If  *Var[3]  &  00080000 
                        Add   *Var[0]  FFFFFFFC 
                        Add   *Var[1]  0000000F 
                        Set   *Flag[00]  .True 
                    EndIf
                    If  *Var[3]  &  00040000 
                        Add   *Var[0]  FFFFFFFC 
                        Add   *Var[1]  00000024 
                        Set   *Flag[00]  .True 
                    EndIf
                    If  *Var[3]  &  00001000 
                        Add   *Var[0]  FFFFFFF8 
                        Add   *Var[1]  00000024 
                        Set   *Flag[00]  .True 
                    EndIf
                    If  *Flag[00]  ==  .False 
                        Add   *Var[0]  FFFFFFF6 
                        Add   *Var[1]  00000026 
                    EndIf
            EndSwitch
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SpearStab_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00420006 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Add   *Var[0]  0000000A 
    Else
        Add   *Var[0]  00000019 
    EndIf
    Set   *Var[1]  00000000 
    Add   *Var[2]  00000001 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
    Wait  5`
    Call  SetAnimation  ( .Actor:Self 00000002 0042001A )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  PlaySoundAtActor      ( .Actor:Self 00000309 )
            Call  SetAnimation  ( .Actor:Self 00000002 0042001B )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Sub   *Var[0]  00000014 
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            ExecWait  $Script_80218D7C_14 
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 00000309 )
    Call  SetAnimation      ( .Actor:Self 00000002 0042001B )
    Wait  5`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  20`
            ExecWait  $Script_80218D7C_14 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SummonBackup_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  UseCamPreset      ( 00000001 )
    Call  SetAnimation      ( .Actor:Self 00000002 00420005 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
    EndThread
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000A 
    Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420010 )
    Wait  25`
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
    EndThread
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014 
    Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420010 )
    Wait  30`
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000A 
    Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F 
    Call  PlayEffect    ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor      ( .Actor:Self 0000206D )
    Call  SetAnimation  ( .Actor:Self 00000002 0042000E )
    Wait  20`
    Call  GetOriginalActorType  ( .Actor:Self *Var[0] )
    Call  EnemyCreateTargetList ( 00008004 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[1] *Var[2] )
    Call  GetOriginalActorType  ( *Var[1] *Var[2] )
    If  *Var[0]  ==  *Var[2] 
        Call  SetAnimation      ( *Var[1] 00000002 00420004 )
        Call  GetIndexFromHome  ( *Var[1] *Var[3] )
        If  *Var[A]  <  *Var[3] 
            Call  GetActorVar   ( *Var[1] 00000000 *Var[4] )
            If  *Var[4]  ==  00000000 
                Call  SetActorVar       ( *Var[1] 00000000 00000001 )
                Call  SetIdleAnimations ( *Var[1] 00000002 $IdleAnimations_8021860C_14 )
                Call  SetPartEventFlags ( *Var[1] 00000002 00000010 )
                Call  SetAnimation      ( *Var[1] 00000002 00420003 )
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[1] )
    If  *Var[1]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Set   *Flag[00]  .False 
    Call  EnemyCreateTargetList ( 00008004 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetIndexFromHome      ( *Var[0] *Var[1] )
    If  *Var[1]  <  *Var[A] 
        Set   *Flag[00]  .True 
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    If  *Flag[00]  ==  .False 
        Call  SummonEnemy   ( $SpecialFormation_8021A8C0_14 00000000 )
    Else
        Call  SummonEnemy   ( $SpecialFormation_8021A8DC_14 00000000 )
    EndIf
    Set   *Var[B]  *Var[0] 
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( *Var[B] 00000002 00420010 )
    Call  SetGoalToIndex    ( *Var[B] *Var[A] )
    Call  GetGoalPos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000DC 
    Call  SetActorPos   ( *Var[B] *Var[0] 00000000 00000000 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
        Wait  15`
    EndThread
    Call  SetActorSpeed ( *Var[B] *Fixed[4.0] )
    Call  RunToGoal     ( *Var[B] 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  PlaySoundAtActor      ( .Actor:Self 0000206D )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F 
    Call  PlayEffect    ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation  ( *Var[B] 00000002 0042000E )
    Wait  20`
    If  *Flag[00]  ==  .False 
        Call  SetAnimation  ( *Var[B] 00000002 00420004 )
    Else
        Call  SetAnimation  ( *Var[B] 00000002 00420003 )
    EndIf
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[B] )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetActorVar   ( *Var[B] 00000001 00000001 )
        Case  ==  00000001 
            Call  SetActorVar   ( *Var[B] 00000001 00000002 )
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000001 00000003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Vector3D $Vector3D_8021A8B4_14 {
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A8C0_14 {
$SpearGuy_14 $Vector3D_8021A8B4_14 00000064 00000000 00000000 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_8021A8DC_14 {
$SpearGuy_14 $Vector3D_8021A8B4_14 00000064 00000001 00000000 00000000 00000000 
}

#new:Script $Script_BecomeShyGuy_14 {
    Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
    Wait  10`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000002 00420013 )
    Wait  5`
    Call  SetAnimation  ( .Actor:Self 00000002 00420018 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000A 
    Add   *Var[1]  0000000F 
    Sub   *Var[2]  00000001 
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits       ( .Actor:Self 00000004 00000001 .False )
    Call  SetPartJumpGravity    ( .Actor:Self 00000004 *Fixed[0.5] )
    Add   *Var[0]  00000032 
    Sub   *Var[2]  0000001E 
    Thread
        Loop  0000000F 
            Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 0000000A )
            Wait  1`
            Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 FFFFFFF6 )
            Wait  1`
        EndLoop
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
    Thread
        Loop  0000000A 
            Call  GetPartOffset ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( 00000011 00000003 *Var[0] *Var[1] *Var[2] 00000005 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Call  PlaySoundAtPart   ( .Actor:Self 00000004 000002FC )
    Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Jump 00000000 00000000 )
    Call  JumpPartTo    ( .Actor:Self 00000004 *Var[0] 00000000 *Var[2] 0000001E .True )
    Wait  5`
    Call  SetPartFlags  ( .Actor:Self 00000002 00022005 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00022005 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00022005 )
    ExecWait  $Script_8021BF8C_14 
    Call  SetActorType  ( .Actor:Self 0000001F )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80218744_14 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_SpearThrow_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000002 00420006 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8 
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420015 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Sub   *Var[0]  00000064 
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Sub   *Var[0]  00000046 
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetAnimation  ( .Actor:Self 00000002 00420011 )
            Wait  5`
            Thread
                Call  SetAnimation  ( .Actor:Self 00000002 00420017 )
                Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  00000014 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                Sub   *Var[0]  0000000A 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                Call  SetAnimation  ( .Actor:Self 00000002 00420012 )
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] 00000014 *Var[2] )
            Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
            Thread
                Call  MakeLerp  ( FFFFFFE2 0000002D 00000014 .Easing:Linear )
                Label  0
                Call  UpdateLerp ( )
                Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
                Wait  1`
                If  *Var[1]  ==  00000001 
                    Goto  0
                EndIf
            EndThread
            Call  PlaySoundAtPart   ( .Actor:Self 00000003 0000030A )
            Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014 
            Set   *Var[1]  0000000A 
            Add   *Var[2]  00000002 
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.7] )
            Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
            Wait  10`
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Wait  10`
            ExecWait  $Script_BecomeShyGuy_14 
            Call  YieldTurn ( )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000002 00420011 )
    Wait  5`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000002 00420017 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  00000014 
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
        Sub   *Var[0]  0000000A 
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Call  SetAnimation  ( .Actor:Self 00000002 00420012 )
    EndThread
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] 00000014 *Var[2] )
    Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Thread
        Call  MakeLerp  ( FFFFFFE2 0000002D 00000014 .Easing:Linear )
        Label  0
        Call  UpdateLerp ( )
        Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000001 
            Goto  0
        EndIf
    EndThread
    Call  PlaySoundAtPart   ( .Actor:Self 00000003 0000030A )
    Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000002 
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.7] )
    Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Wait  3`
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Wait  20`
    ExecWait  $Script_BecomeShyGuy_14 
    Switch  *Var[0] 
        CaseOR  ==  00000000 
        CaseOR  ==  00000002 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021B770_14 {
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004 
    Switch  *Var[5] 
        Case  ==  00000000 
            Set   *Flag[01]  .True 
        Case  ==  00000001 
            Set   *Flag[02]  .True 
        Case  ==  00000002 
            Set   *Flag[03]  .True 
        Case  ==  00000003 
            Set   *Flag[04]  .True 
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[01]  ==  .False 
        Set   *Var[A]  00000000 
        Return
    EndIf
    If  *Flag[02]  ==  .False 
        Set   *Var[A]  00000001 
        Return
    EndIf
    If  *Flag[03]  ==  .False 
        Set   *Var[A]  00000002 
        Return
    EndIf
    If  *Flag[04]  ==  .False 
        Set   *Var[A]  00000003 
        Return
    EndIf
    Set   *Var[A]  FFFFFFFF 
    Return
    End
}

#new:Script $Script_8021B96C_14 {
    Set   *Var[9]  00000000 
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2] 
        Case  ==  00000029 
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000 
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  !=  00000002 
                    Add   *Var[9]  00000001 
                EndIf
            EndIf
        Case  ==  0000002A 
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000 
                Call  GetActorVar   ( *Var[0] 00000001 *Var[3] )
                If  *Var[3]  <  00000002 
                    Add   *Var[9]  00000001 
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_8021BB18_14 {
    Call  GetIndexFromHome  ( .Actor:Self *Var[A] )
    Set   *Flag[00]  .False 
    Call  EnemyCreateTargetList ( 00008004 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    If  *Var[1]  <  *Var[A] 
        Set   *Flag[00]  .True 
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .True 
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  .Actor:Player % 0
            Set   *Var[0]  00000001 
            ExecWait  $Script_SetSpearStance_14 
        EndIf
    Else
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001 
            Set   *Var[0]  00000000 
            ExecWait  $Script_SetSpearStance_14 
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021BCB4_14 {
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        ExecWait  $Script_SpearStab_14 
        ExecWait  $Script_8021BB18_14 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  00000000 
        CaseOR  ==  00000001 
            ExecWait  $Script_8021B770_14 
            If  *Var[A]  ==  FFFFFFFF 
                ExecWait  $Script_SpearStab_14 
                ExecWait  $Script_8021BB18_14 
                Return
            EndIf
            ExecWait  $Script_8021B96C_14 
            Switch  *Var[9] 
                Case  ==  00000001 
                    Call  RandInt   ( 000003E8 *Var[0] )
                    If  *Var[0]  <  0000012C 
                        ExecWait  $Script_SummonBackup_14 
                        Return
                    EndIf
                Case  ==  00000002 
                    Call  RandInt   ( 000003E8 *Var[0] )
                    If  *Var[0]  <  00000096 
                        ExecWait  $Script_SummonBackup_14 
                        Return
                    EndIf
                Case  ==  00000003 
                    Call  RandInt   ( 000003E8 *Var[0] )
                    If  *Var[0]  <  00000064 
                        ExecWait  $Script_SummonBackup_14 
                        Return
                    EndIf
            EndSwitch
            ExecWait  $Script_SpearStab_14 
            ExecWait  $Script_8021BB18_14 
        EndCaseGroup
        Case  ==  00000002 
            Call  EnemyCreateTargetList ( 00008002 )
            Call  GetTargetListLength   ( *Var[0] )
            If  *Var[0]  ==  00000001 
                ExecWait  $Script_SpearThrow_14 
                Return
            EndIf
            ExecWait  $Script_SpearStab_14 
            ExecWait  $Script_8021BB18_14 
        Case  ==  00000003 
            ExecWait  $Script_SpearThrow_14 
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021BF40_14 {
.Status:Normal    003B0001
.Status:Stone     003B0000
.Status:Sleep     003B0012
.Status:Poison    003B0001
.Status:Stop      003B0000
.Status:Static    003B0001
.Status:Paralyze  003B0000
.Status:Dizzy     003B0013
.Status:Fear      003B0013
.Status:End
}

#new:Script $Script_8021BF8C_14 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D8D8_14 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021BFD8_14 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C14C_14 )
    Return
    End
}

#new:Script $Script_Idle_8021BFD8_14 {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000 
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218000_14 ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218000_14 ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021C0E8_14 {
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001 
    SetConst  *Var[1]  003B0003 
    ExecWait  DoReturnHome 
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021C14C_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000D 
            SetConst  *Var[2]  003B000E 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000D 
            SetConst  *Var[2]  003B000E 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoJumpBack 
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021C0E8_14 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0003 
            SetConst  *Var[2]  003B0014 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021C628_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032 
    Set   *Var[1]  00000000 
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0004 
            ExecWait  DoReturnHome 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A 
    Set   *Var[1]  00000000 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Set   *Var[1]  00000000 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_8021C0E8_14 
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021CD50_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050 
    Set   *Var[1]  00000000 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A 
            Set   *Var[1]  00000000 
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0004 
            ExecWait  DoReturnHome 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000 
                Loop  00000014 
                    Sub   *Var[3]  0000001E 
                    If  *Var[3]  <  00000000 
                        Add   *Var[3]  00000168 
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032 
                Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0004 
            ExecWait  DoReturnHome 
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021D8D8_14 {
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000 
        ExecWait  $Script_8021C628_14 
    Else
        ExecWait  $Script_8021CD50_14 
    EndIf
    Return
    End
}

