% Automatically dumped from section 23

#new:Actor $23_IntroBowser {
% stats
[Index]        C0b 
[Level]         0`b 
[MaxHP]        10`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021F22C_23 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021F384_23 
[Script]      $Script_Init_8021F3D0_23 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         80`b  82`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218120_23 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218178_23 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        V1, C (V0)
	LIO       AT, 3D23D70A
	MTC1      AT, F0
	NOP
	SWC1      F0, 38 (V1)
	SWC1      F0, 30 (V1)
	LW        V1, C (V0)
	LIF       F0, 1.875
	NOP
	SWC1      F0, 34 (V1)
	LW        V1, C (V0)
	LIO       AT, 3D4CCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 3C (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802181E4_23 {
	ADDIU     SP, SP, FF58
	SW        S3, 74 (SP)
	COPY      S3, A0
	SW        RA, 88 (SP)
	SW        S7, 84 (SP)
	SW        S6, 80 (SP)
	SW        S5, 7C (SP)
	SW        S4, 78 (SP)
	SW        S2, 70 (SP)
	SW        S1, 6C (SP)
	SW        S0, 68 (SP)
	SDC1      F24, A0 (SP)
	SDC1      F22, 98 (SP)
	SDC1      F20, 90 (SP)
	LW        A0, 148 (S3)
	JAL       ~Func:get_actor
	COPY      S0, A1
	BNE       V0, R0, .o54
	COPY      A0, V0
	BEQ       R0, R0, .o36C
	ADDIU     V0, R0, 2
	.o54
	JAL       ~Func:get_actor_part
	ADDIU     A1, R0, 1
	BEQ       S0, R0, .oAC
	COPY      S5, V0
	CLEAR     S0
	ADDIU     S1, R0, FF
	SW        R0, 74 (S3)
	SW        R0, 78 (S3)
	SW        R0, 70 (S3)
	COPY      A1, S0
	.o7C
	ADDIU     A2, R0, 11
	ADDIU     A3, R0, 14
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        S1, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S5)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, A
	BNE       V0, R0, .o7C
	COPY      A1, S0
	.oAC
	LW        V0, 74 (S3)
	ADDIU     A0, V0, A
	SLTI      V0, A0, 168
	BNE       V0, R0, .oFC
	SW        A0, 74 (S3)
	LIO       V0, B60B60B7
	MULT      A0, V0
	SRA       V1, A0, 1F
	MFHI      T0
	ADDU      V0, T0, A0
	SRA       V0, V0, 8
	SUBU      V0, V0, V1
	SLL       V1, V0, 1
	ADDU      V1, V1, V0
	SLL       V0, V1, 4
	SUBU      V0, V0, V1
	SLL       V0, V0, 3
	SUBU      V0, A0, V0
	SW        V0, 74 (S3)
	.oFC
	CLEAR     S1
	LUI       S2, 8000
	COPY      S0, S1
	LIF       F25, 1.875
	MTC1      R0, F24
	LIF       F23, 3.1875
	MTC1      R0, F22
	LIF       F21, 28.0
	MTC1      R0, F20
	.o12C
	LHU       A0, 76 (S3)
	ADDU      A0, A0, S0
	ADDIU     A0, A0, 78
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 20
	C.LE.D    F20, F0
	NOP
	BC1T      .o178
	ADDU      V0, V0, S1
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o190
	SB        V1, 0 (V0)
	.o178
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S2
	SB        V1, 0 (V0)
	.o190
	LHU       A0, 76 (S3)
	ADDU      A0, A0, S0
	ADDIU     A0, A0, 3C
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 38
	C.LE.D    F20, F0
	NOP
	BC1T      .o1DC
	ADDU      V0, V0, S1
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o1F4
	SB        V1, 0 (V0)
	.o1DC
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S2
	SB        V1, 0 (V0)
	.o1F4
	LHU       A0, 76 (S3)
	ADDU      A0, A0, S0
	ADDIU     A0, A0, B4
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 50
	C.LE.D    F20, F0
	NOP
	BC1T      .o240
	ADDU      V0, V0, S1
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o258
	SB        V1, 0 (V0)
	.o240
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S2
	SB        V1, 0 (V0)
	.o258
	ADDIU     S1, S1, 1
	SLTI      V0, S1, 14
	BNE       V0, R0, .o12C
	ADDIU     S0, S0, 19
	LW        V0, 7C (S5)
	LUI       V1, 4
	AND       V0, V0, V1
	BEQ       V0, R0, .o30C
	CLEAR     S1
	ADDIU     S7, SP, 20
	ADDIU     S6, SP, 38
	ADDIU     S4, SP, 50
	ADDIU     S3, R0, FF
	CLEAR     S0
	.o290
	ADDU      V0, S7, S1
	ADDU      A0, S6, S1
	LBU       V1, 0 (V0)
	ADDU      V0, S4, S1
	LBU       A0, 0 (A0)
	LBU       V0, 0 (V0)
	SLL       V1, V1, 18
	SLL       A0, A0, 10
	OR        V1, V1, A0
	SLL       V0, V0, 8
	OR        V1, V1, V0
	ORI       S2, V1, FF
	COPY      A1, S0
	.o2C4
	ADDIU     A2, R0, C
	COPY      A3, S1
	SW        S2, 10 (SP)
	SW        R0, 14 (SP)
	SW        S3, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S5)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, A
	BNE       V0, R0, .o2C4
	COPY      A1, S0
	ADDIU     S1, S1, 1
	SLTI      V0, S1, 14
	BNE       V0, R0, .o290
	CLEAR     S0
	BEQ       R0, R0, .o36C
	CLEAR     V0
	.o30C
	ADDIU     S2, R0, FF
	COPY      S4, S2
	CLEAR     S0
	.o318
	COPY      A1, S0
	.o31C
	ADDIU     A2, R0, C
	COPY      A3, S1
	SW        S2, 10 (SP)
	SW        R0, 14 (SP)
	SW        S4, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S5)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, A
	BNE       V0, R0, .o31C
	COPY      A1, S0
	ADDIU     S1, S1, 1
	SLTI      V0, S1, 14
	BNE       V0, R0, .o318
	CLEAR     S0
	CLEAR     V0
	SW        R0, 74 (S3)
	SW        R0, 78 (S3)
	SW        R0, 70 (S3)
	.o36C
	LW        RA, 88 (SP)
	LW        S7, 84 (SP)
	LW        S6, 80 (SP)
	LW        S5, 7C (SP)
	LW        S4, 78 (SP)
	LW        S3, 74 (SP)
	LW        S2, 70 (SP)
	LW        S1, 6C (SP)
	LW        S0, 68 (SP)
	LDC1      F24, A0 (SP)
	LDC1      F22, 98 (SP)
	LDC1      F20, 90 (SP)
	JR        RA
	ADDIU     SP, SP, A8
}

#new:Function $Function_80218588_23 {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o48
	SW        RA, 14 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	COPY      A3, A0
	LAW       V0, 801512F0
	ADDIU     V1, R0, 1
	JAL       ~Func:set_background_color_blend
	SB        V1, 0 (V0)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o48
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	LW        V1, 70 (S0)
	ADDIU     V0, R0, 14
	SUBU      V0, V0, V1
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	SW        V0, 70 (S0)
	SLTIU     V0, V0, 1
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	SLL       V0, V0, 1
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218620_23 {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o1C
	SW        RA, 14 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o1C
	CLEAR     A0
	COPY      A1, A0
	LW        V0, 70 (S0)
	COPY      A2, A0
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	BEQ       V0, R0, .o58
	SW        V0, 70 (S0)
	BEQ       R0, R0, .o70
	CLEAR     V0
	.o58
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	COPY      A3, A0
	ADDIU     V0, R0, 2
	.o70
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802186A0_23 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LH        A0, 436 (V0)
	SB        R0, 224 (V0)
	JAL       80047B84
	SB        R0, 223 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802186D0_23 {
	ADDIU     SP, SP, FFA8
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        S2, 20 (SP)
	SW        RA, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S0, 18 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (S1)
	LW        S0, C (S1)
	JAL       ~Func:get_actor
	COPY      S2, A1
	COPY      S3, V0
	BEQ       S3, R0, .o3A0
	ADDIU     V0, R0, 2
	BEQ       S2, R0, .o144
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	CLEAR     S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       ~Func:get_float_variable
	COPY      A0, S1
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	ADDIU     A0, R0, B4
	JAL       ~Func:heap_malloc
	MOV.S     F22, F0
	COPY      S1, V0
	ADDIU     A2, R0, 28
	ADDIU     A1, R0, FF
	ADDIU     A0, R0, 1
	ADDIU     V1, S1, 38
	SW        S1, 78 (S3)
	.oF0
	SWC1      F28, FFCC (V1)
	SWC1      F26, FFD0 (V1)
	SWC1      F24, FFD4 (V1)
	SWC1      F20, FFE0 (V1)
	SWC1      F20, FFD8 (V1)
	SWC1      F22, FFDC (V1)
	SW        A0, FFE4 (V1)
	SW        A2, FFE8 (V1)
	SW        A1, FFEC (V1)
	SW        A1, FFF0 (V1)
	SW        R0, FFF4 (V1)
	SW        R0, FFF8 (V1)
	SW        R0, FFFC (V1)
	SW        R0, 0 (V1)
	ADDIU     V1, V1, 3C
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .oF0
	ADDIU     A0, A0, A
	BEQ       R0, R0, .o3A0
	CLEAR     V0
	.o144
	CLEAR     S4
	COPY      S2, S4
	LW        S1, 78 (S3)
	LIO       AT, 3DCCCCCD
	MTC1      AT, F24
	LIF       F22, 0.5
	LIF       F20, 255.0
	ADDIU     S0, S1, 28
	.o170
	LW        V0, FFF4 (S0)
	BLEZ      V0, .o1E8
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o374
	SW        V0, FFF4 (S0)
	LWC1      F0, FFF0 (S0)
	ADDIU     V0, R0, FFFF
	SW        V0, 14 (SP)
	SWC1      F0, 10 (SP)
	LW        A1, FFDC (S0)
	LW        A2, FFE0 (S0)
	LW        A3, FFE4 (S0)
	JAL       80072A70
	CLEAR     A0
	SW        V0, 0 (S1)
	LW        V0, C (V0)
	LWC1      F0, 4 (S0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, 8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, C (S0)
	LW        V0, C (V0)
	SWC1      F0, 44 (V0)
	LW        V0, 0 (S1)
	LW        V0, C (V0)
	BEQ       R0, R0, .o374
	SH        R0, 0 (V0)
	.o1E8
	LW        V0, 10 (S0)
	BEQ       V0, R0, .o1FC
	NOP
	BEQ       R0, R0, .o374
	ADDIU     S4, S4, 1
	.o1FC
	LWC1      F0, FFE8 (S0)
	LWC1      F8, FFEC (S0)
	SUB.S     F0, F0, F8
	LWC1      F2, FFF8 (S0)
	CVT.S.W   F2, F2
	ABS.S     F0, F0
	MUL.S     F0, F0, F2
	NOP
	LWC1      F6, C (S0)
	LIF       F2, 9.0
	LIF       F4, 40.0
	ADD.S     F6, F6, F2
	LW        V1, FFF8 (S0)
	DIV.S     F0, F0, F4
	ADD.S     F0, F0, F8
	SLTI      V0, V1, B
	SWC1      F6, C (S0)
	BEQ       V0, R0, .o2BC
	SWC1      F0, FFF0 (S0)
	SRL       V0, V1, 1F
	ADDU      V0, V1, V0
	SRA       V0, V0, 1
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	COPY      V0, V1
	MUL.S     F2, F2, F24
	NOP
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F24
	NOP
	ADD.S     F2, F2, F22
	MUL.S     F2, F2, F20
	NOP
	ADD.S     F0, F0, F22
	MUL.S     F0, F0, F20
	NOP
	TRUNC.W.S F10, F2
	SWC1      F10, FFFC (S0)
	TRUNC.W.S F10, F0
	SWC1      F10, 0 (S0)
	.o2BC
	LW        V0, FFF8 (S0)
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o2E4
	SW        V0, FFF8 (S0)
	LW        A0, 0 (S1)
	JAL       ~Func:remove_effect
	NOP
	ADDIU     V0, R0, 1
	BEQ       R0, R0, .o374
	SW        V0, 10 (S0)
	.o2E4
	LW        V0, 0 (S1)
	LWC1      F0, FFDC (S0)
	LW        V0, C (V0)
	SWC1      F0, 4 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFE0 (S0)
	LW        V0, C (V0)
	SWC1      F0, 8 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFE4 (S0)
	LW        V0, C (V0)
	SWC1      F0, C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, 4 (S0)
	LW        V0, C (V0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, 8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, C (S0)
	LW        V0, C (V0)
	SWC1      F0, 44 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF0 (S0)
	LW        V0, C (V0)
	SWC1      F0, 38 (V0)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, FFFC (S0)
	SW        V0, 24 (V1)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, 0 (S0)
	SW        V0, 34 (V1)
	.o374
	ADDIU     S0, S0, 3C
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .o170
	ADDIU     S1, S1, 3C
	SLTI      V0, S4, 3
	BNE       V0, R0, .o3A0
	CLEAR     V0
	JAL       ~Func:heap_free
	COPY      A0, S1
	ADDIU     V0, R0, 2
	.o3A0
	LW        RA, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_80218AA4_23 {
	ADDIU     SP, SP, FFB0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        S2, 20 (SP)
	SW        RA, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S0, 18 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (S1)
	LW        S0, C (S1)
	JAL       ~Func:get_actor
	COPY      S2, A1
	COPY      S4, V0
	BEQ       S4, R0, .o42C
	ADDIU     V0, R0, 2
	BEQ       S2, R0, .o154
	CLEAR     S3
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_float_variable
	COPY      A0, S1
	LB        V1, 210 (S4)
	ADDIU     V0, R0, A
	BNE       V1, V0, .oDC
	MOV.S     F20, F0
	LAD       F2, $ConstDouble_80234740_23
	CVT.D.S   F0, F20
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F20, F0
	.oDC
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 9C
	COPY      S1, V0
	CLEAR     S2
	ADDIU     A2, R0, 32
	ADDIU     A1, R0, FF
	ADDIU     A0, R0, 1
	LIF       F0, 90.0
	ADDIU     V1, S1, 30
	SW        S1, 78 (S4)
	.o108
	SWC1      F26, FFD4 (V1)
	SWC1      F24, FFD8 (V1)
	SWC1      F22, FFDC (V1)
	SWC1      F20, FFE0 (V1)
	SW        A0, FFE4 (V1)
	SW        A2, FFE8 (V1)
	SW        A1, FFEC (V1)
	SW        A1, FFF0 (V1)
	SWC1      F0, FFF4 (V1)
	SW        R0, FFF8 (V1)
	SW        R0, FFFC (V1)
	SW        R0, 0 (V1)
	ADDIU     V1, V1, 34
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .o108
	ADDIU     A0, A0, 10
	BEQ       R0, R0, .o42C
	CLEAR     V0
	.o154
	LW        S1, 78 (S4)
	COPY      S2, S3
	ADDIU     S0, S1, 30
	.o160
	LW        V0, FFE4 (S0)
	BLEZ      V0, .o1CC
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o400
	SW        V0, FFE4 (S0)
	LWC1      F0, FFE0 (S0)
	ADDIU     V0, R0, FFFF
	SW        V0, 14 (SP)
	SWC1      F0, 10 (SP)
	LW        A1, FFD4 (S0)
	LW        A2, FFD8 (S0)
	LW        A3, FFDC (S0)
	JAL       80072A70
	CLEAR     A0
	SW        V0, 0 (S1)
	LW        V0, C (V0)
	LWC1      F0, FFF4 (S0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFFC (S0)
	LW        V0, C (V0)
	BEQ       R0, R0, .o400
	SWC1      F0, 44 (V0)
	.o1CC
	LW        V0, 0 (S0)
	BEQ       V0, R0, .o1E0
	ADDIU     V0, R0, A
	BEQ       R0, R0, .o400
	ADDIU     S3, S3, 1
	.o1E0
	LB        V1, 210 (S4)
	BEQ       V1, V0, .o274
	NOP
	LWC1      F2, FFD8 (S0)
	LIF       F1, 3.0625
	MTC1      R0, F0
	CVT.D.S   F2, F2
	C.LT.D    F2, F0
	LIF       F1, 2.125
	MTC1      R0, F0
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 3.21875
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234748_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 3.3125
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234750_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 1.875
	MTC1      R0, F0
	BEQ       R0, R0, .o2F0
	ADD.D     F0, F2, F0
	.o274
	LWC1      F2, FFD8 (S0)
	LIF       F1, 2.75
	MTC1      R0, F0
	CVT.D.S   F2, F2
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234758_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 2.875
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234760_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 3.0
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234768_23
	BC1FL     .o2F0
	ADD.D     F0, F2, F0
	LAD       F0, $ConstDouble_80234770_23
	ADD.D     F0, F2, F0
	.o2F0
	CVT.S.D   F0, F0
	SWC1      F0, FFD8 (S0)
	LWC1      F0, FFF8 (S0)
	LIF       F2, 18.0
	LW        V1, FFE8 (S0)
	ADD.S     F0, F0, F2
	SLTI      V0, V1, 11
	BEQ       V0, R0, .o34C
	SWC1      F0, FFF8 (S0)
	SLL       V0, V1, 8
	SUBU      V1, V0, V1
	BLTZL     V1, .o328
	ADDIU     V1, V1, F
	.o328
	LW        V0, FFE8 (S0)
	SRA       V1, V1, 4
	SW        V1, FFEC (S0)
	SLL       V1, V0, 8
	SUBU      V0, V1, V0
	BLTZL     V0, .o344
	ADDIU     V0, V0, F
	.o344
	SRA       V0, V0, 4
	SW        V0, FFF0 (S0)
	.o34C
	LW        V0, 0 (S1)
	LWC1      F0, FFD4 (S0)
	LW        V0, C (V0)
	SWC1      F0, 4 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFD8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 8 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFDC (S0)
	LW        V0, C (V0)
	SWC1      F0, C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF4 (S0)
	LW        V0, C (V0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFFC (S0)
	LW        V0, C (V0)
	SWC1      F0, 44 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFE0 (S0)
	LW        V0, C (V0)
	SWC1      F0, 38 (V0)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, FFEC (S0)
	SW        V0, 24 (V1)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, FFF0 (S0)
	SW        V0, 34 (V1)
	LW        V0, FFE8 (S0)
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o400
	SW        V0, FFE8 (S0)
	LW        A0, 0 (S1)
	JAL       ~Func:remove_effect
	NOP
	ADDIU     V0, R0, 1
	SW        V0, 0 (S0)
	.o400
	ADDIU     S0, S0, 34
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .o160
	ADDIU     S1, S1, 34
	SLTI      V0, S3, 3
	BNE       V0, R0, .o42C
	CLEAR     V0
	JAL       ~Func:heap_free
	COPY      A0, S1
	ADDIU     V0, R0, 2
	.o42C
	LW        RA, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 50
}

#new:IdleAnimations $IdleAnimations_8021F1C0_23 {
.Status:Normal    00810002
.Status:Stone     00810000
.Status:Sleep     00810002
.Status:Poison    00810002
.Status:Stop      00810000
.Status:Static    00810000
.Status:Paralyze  00810000
.Status:Paralyze  00810000
.Status:Dizzy     00810002
.Status:Dizzy     00810002
.Status:End
}

#new:DefenseTable $DefenseTable_8021F214_23 {
.Element:Normal 00000000
.Element:End
}

#new:DefenseTable $DefenseTable_8021F220_23 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_8021F22C_23 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:StatusTable $StatusTable_8021F2D8_23 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021F384_23 {
00800000 01000000 EE4800FF $IdleAnimations_8021F1C0_23 $DefenseTable_8021F214_23 00000000 00000000 00F80000 00000000 
}

#new:Script $Script_Init_8021F3D0_23 {
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
    Call  8026E020      ( 00000001 )
    Call  802CDBA4      ( 00000000 00D60004 )
    Call  SetNpcYaw     ( 00000000 0000005A )
    Call  SetNpcPos     ( 00000000 FFFFFF7E 00000000 FFFFFFF4 )
    Call  EnableNpcShadow       ( 00000000 .True )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021FC14_23 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F53C_23 )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_8021F800_23 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F598_23 )
    Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
    Exec  $Script_80220974_23 
    Call  SetBattleFlagBits     ( 00800000 .True )
    Call  SetBattleFlagBits2    ( 02000000 .True )
    Return
    End
}

#new:Script $Script_Idle_8021F53C_23 {
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Label  0
    ExecWait  $Script_80221328_23 
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_NextTurn_8021F598_23 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000A 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                Call  802535B4      ( 00000000 )
                Call  UseCamPreset  ( 00000013 )
                Call  SetBattleCamTarget    ( FFFFFF8D 00000000 00000000 )
                Call  SetBattleCamZoom  ( 00000140 )
                Call  SetBattleCamOffsetZ   ( 00000032 )
                Call  MoveBattleCamOver ( 00000014 )
                Wait  20`
                Call  UseIdleAnimation  ( .Actor:Player .False )
                Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
                Call  SetActorYaw   ( .Actor:Player 000000B4 )
                Call  SpeakToPlayer ( 00000000 00D60002 00D60004 00000005 00000057 ) % Mario, you can do it!
                Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010007 00010008 )
                Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
                Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.5] )
                Call  SetAnimation  ( .Actor:Player 00000000 0003000B )
                Wait  24`
                Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
                Wait  10`
                Call  SetActorYaw   ( .Actor:Player 00000000 )
                Call  UseIdleAnimation  ( .Actor:Player .True )
                Call  UseCamPreset  ( 00000002 )
                Wait  20`
                Call  802535B4      ( 00000001 )
            EndIf
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_8021F800_23 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:BeginFirstStrike % 38
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Set   *Var[1]  0081000D 
            ExecWait  $Script_8021FBA0_23 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Set   *Var[1]  0081000D 
            ExecWait  $Script_8021FBA0_23 
        CaseOR  ==  .Event:BurnDeath % 24
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_8021FBCC_23 
            Return
        Case  ==  .Event:SpinSmashHit % B
            Set   *Var[1]  0081000D 
            ExecWait  $Script_8021FBA0_23 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_8021FBCC_23 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  DoShockHit 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_8021FBCC_23 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001 
            Set   *Var[1]  00810002 
            ExecWait  DoImmune 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000003 
                Call  ActorSpeak    ( 0000005B .Actor:Self 00000001 00810005 00810002 ) % Gwa ha ha ha ha ha! Is that all you've got? How sa ...
            EndIf
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
        Case  ==  .Event:Death % 20
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_8021FBCC_23 
            Return
        Case  ==  .Event:EndFirstStrike % 35
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00810012 
            ExecWait  DoRecover 
            Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
        Case  ==  00000030 % 30
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  DoNormalHit 
            Wait  1000`
        Default
            SetConst  *Var[1]  0081000D 
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Wait  20`
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021FBA0_23 {
    SetConst  *Var[0]  00000001 
    ExecWait  DoNormalHit 
    Return
    End
}

#new:Script $Script_8021FBCC_23 {
    SetConst  *Var[0]  00000001 
    ExecWait  DoNormalHit 
    SetConst  *Var[0]  00000001 
    ExecWait  DoDeath 
    Return
    End
}

#new:Script $Script_TakeTurn_8021FC14_23 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Add   *Var[0]  00000001 
    Call  SetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  <  00000003 
            ExecWait  $Script_IntroClawSwipe_23 
        Case  ==  00000003 
            ExecWait  $Script_IntroUseStarRod_23 
            ExecWait  $Script_IntroClawSwipe_23 
        Case  ==  00000004 
            ExecWait  $Script_IntroClawSwipe_23 
        Case  ==  00000005 
            Call  UseCamPreset      ( 0000000D )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  MoveBattleCamOver ( 0000001E )
            Wait  30`
            Call  ActorSpeak        ( 0000005C .Actor:Self 00000001 00810005 00810002 ) % Yup, just as I expected. Mario's no match for the  ...
            ExecWait  $Script_IntroFireBreath_23 
    EndSwitch
    Return
    End
}

#new:Script $Script_IntroClawSwipe_23 {
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000028 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000028 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
    Wait  25`
    Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
    Wait  3`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
    If  *Var[1]  <  00000003 
        Set   *Var[0]  00000001 
        Call  80269EAC  ( 0000000C )
        Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000000 *Var[0] 00000020 )
    Else
        Set   *Var[0]  00000003 
        Call  80269EAC  ( 0000000C )
        Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000000 *Var[0] 00000020 )
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Thread
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  >=  00000003 
            Call  SetNpcAnimation   ( 00000000 00D60007 )
        Else
            Call  SetNpcAnimation   ( 00000000 00D60006 )
        EndIf
        Wait  45`
        Call  SetNpcAnimation   ( 00000000 00D60004 )
    EndThread
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Wait  30`
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Set   *Var[1]  00810003 
            ExecWait  $Script_80220820_23 
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_IntroFireBreath_23 {
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000001E 
    Add   *Var[1]  00000041 
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000190 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  MoveBattleCamOver ( 00000028 )
    Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
    Wait  35`
    Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
    Wait  10`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000032 
    Add   *Var[1]  00000021 
    Add   *Var[2]  0000000A 
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  00000028 
    Set   *Var[4]  00000014 
    Call  PlayEffect        ( ~FX:FireBreath:Tiny *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000032 00000001 00000018 00000000 00000000 00000000 )
    Call  $Function_80218178_23 ( *Var[F] )
    Thread
        Call  $Function_80218120_23 ( 00000032 00000094 )
        Call  PlaySound ( 000003BD )
        Wait  70`
        Call  PlaySound ( 000007BD )
    EndThread
    Call  SetNpcAnimation   ( 00000000 00D60007 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000037 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 00810018 )
    Wait  30`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:Fire 0000FFFF 00000000 0000000A 00000020 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Thread
                Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
                Wait  15`
                Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
            EndThread
            Wait  60`
            Call  SetNpcAnimation   ( 00000000 00D60006 )
            Loop  00000044 
                Call  GetAnimation  ( .Actor:Player 00000000 *Var[0] )
                If  *Var[0]  ==  00010018 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Call  SetNpcAnimation   ( 00000000 00D6000A )
            Wait  30`
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_IntroUseStarRod_23 {
    Call  UseCamPreset      ( 0000000D )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Wait  30`
    Call  ActorSpeak        ( 00000058 .Actor:Self 00000001 00810005 00810002 ) % Good old Mario...always fighting. You're a thorn i ...
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000F 
    Add   *Var[1]  00000041 
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000140 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  20`
    Thread
        Wait  2`
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000014 
        Add   *Var[1]  0000005A 
        Call  PlayEffect    ( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 0000001E 0000001E 00000007 0000001E 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
    Wait  30`
    Call  ActorSpeak        ( 00000059 .Actor:Self 00000001 0081001F 0081001E ) % Take a look at this! Look what I stole from Star H ...
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
    ExecWait  $Script_80220990_23 
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000F 
    Add   *Var[1]  00000041 
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000140 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  MoveBattleCamOver ( 00000019 )
    Call  ActorSpeak        ( 0000005A .Actor:Self 00000001 00810009 00810001 ) % Gwa ha ha ha ha ha! How do you like that, Mario?!
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021F220_23 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F2D8_23 )
    Return
    End
}

#new:Script $Script_80220820_23 {
    Set   *Var[0]  00000001 
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[D] *Var[E] *Var[F] )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  GetDist2D     ( *Var[9] *Var[A] *Var[C] *Var[D] *Var[F] )
    If  *Var[9]  >=  *Fixed[5.0] 
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
    EndIf
    If  *Var[B]  ==  000000B4 
        Loop  0000000F 
            Sub   *Var[B]  0000000C 
            Call  SetActorYaw   ( .Actor:Self *Var[B] )
            Wait  1`
        EndLoop
    EndIf
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_80220974_23 {
    Call  $Function_802181E4_23 ( )
    Return
    End
}

#new:Script $Script_80220990_23 {
    Call  $Function_80218588_23 ( )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[3]  !&  00080000 
        Add   *Var[0]  0000000F 
        Add   *Var[1]  0000005A 
        Thread
            Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
            Add   *Var[2]  0000000A 
            Call  $Function_802186D0_23 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.05] )
        EndThread
    Else
        Add   *Var[0]  00000006 
        Add   *Var[1]  00000024 
        Thread
            Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
            Add   *Var[2]  0000000A 
            Call  $Function_802186D0_23 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.02] )
        EndThread
    EndIf
    Wait  65`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[3]  !&  00080000 
        Add   *Var[0]  0000000F 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:LightRays:SharpA *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Add   *Var[0]  00000006 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:LightRays:SharpA *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
    Wait  30`
    Call  RemoveEffect      ( *Var[F] )
    Call  RemoveEffect      ( *Var[E] )
    Call  RemoveEffect      ( *Var[D] )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00040000 .True )
    Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021F220_23 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F2D8_23 )
    Call  $Function_802186A0_23 ( )
    Wait  3`
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000028 
        Add   *Var[2]  0000000C 
        Call  PlayEffect    ( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 00000046 00000050 00000019 0000003C 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000010 
        Add   *Var[2]  0000000C 
        Call  PlayEffect    ( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 0000001C 00000020 0000000A 0000003C 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 00002125 )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  $Function_80218AA4_23 ( *Var[0] *Var[1] *Var[2] *Fixed[0.8] )
    EndThread
    Wait  75`
    Thread
        Call  $Function_80218620_23 ( )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[3]  !&  00080000 
        Add   *Var[1]  00000028 
    Else
        Add   *Var[1]  00000010 
    EndIf
    Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002124 )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000F 
    Add   *Var[1]  00000041 
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000190 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  MoveBattleCamOver ( 00000020 )
    Wait  32`
    Return
    End
}

#new:Script $Script_80221328_23 {
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[7] )
    If  *Var[7]  !=  00810003 
        If  *Var[3]  ==  00810003 
            Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
        EndIf
        Set   *Var[3]  *Var[7] 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Return
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[5] *Var[6] *Var[7] )
    Sub   *Var[5]  *Var[0] 
    If  *Var[5]  >  FFFFFFE2 
        If  *Var[5]  <  0000001E 
            Set   *Var[3]  *Var[7] 
            Return
        EndIf
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
    Set   *Var[3]  *Var[7] 
    Return
    End
}

#new:ConstDouble $ConstDouble_80234740_23 {
0.400000d
}

#new:ConstDouble $ConstDouble_80234748_23 {
2.400000d
}

#new:ConstDouble $ConstDouble_80234750_23 {
1.600000d
}

#new:ConstDouble $ConstDouble_80234758_23 {
1.200000d
}

#new:ConstDouble $ConstDouble_80234760_23 {
0.960000d
}

#new:ConstDouble $ConstDouble_80234768_23 {
0.400000d
}

#new:ConstDouble $ConstDouble_80234770_23 {
0.640000d
}

