% Automatically dumped from section 03

#new:Actor $03_Chan {
% stats
[Index]        7Db 
[Level]         0`b 
[MaxHP]        15`b 
[Coins]         0`b 
[Flags]       00000800 
[StatusTable] $StatusTable_80219D78_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80219E24_03 
[Script]      $Script_Init_8021CCDC_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         22`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218000_03 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80219D50_03 {
.Element:Normal 00000002
.Element:Fire   00000063
.Element:Blast  00000063
.Element:End
}

#new:DefenseTable $DefenseTable_80219D6C_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80219D78_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      30`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     50`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80219E24_03 {
00800000 01000000 001000FF $IdleAnimations_80219EBC_03 $DefenseTable_80219D50_03 00001000 00000000 01070000 00000000 
}

#new:IdleAnimations $IdleAnimations_80219E70_03 {
.Status:Normal    00A30001
.Status:Stone     00A30000
.Status:Sleep     00A3000A
.Status:Poison    00A30001
.Status:Stop      00A30000
.Status:Static    00A30001
.Status:Paralyze  00A30000
.Status:Dizzy     00A3000B
.Status:Fear      00A3000B
.Status:End
}

#new:IdleAnimations $IdleAnimations_80219EBC_03 {
.Status:Normal    00A30001
.Status:Stone     00A30000
.Status:Sleep     00A3000A
.Status:Poison    00A30001
.Status:Stop      00A30000
.Status:Static    00A30001
.Status:Paralyze  00A30000
.Status:Dizzy     00A3000B
.Status:Fear      00A3000B
.Status:End
}

#new:IdleAnimations $IdleAnimations_80219F08_03 {
.Status:Normal    00A30002
.Status:Stone     00A3000F
.Status:Sleep     00A30010
.Status:Poison    00A30002
.Status:Stop      00A3000F
.Status:Static    00A30002
.Status:Dizzy     00A30011
.Status:Fear      00A30011
.Status:End
}

#new:Script $Script_80219F4C_03 {
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A11C_03 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
        Call  $Function_80218000_03 ( FFFFFFF6 00000000 0000000A 00000000 )
        Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B81C_03 )
        Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A560_03 )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
    Else
        Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
        Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
        Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Chan_03 )
        Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8_03 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70_03 )
        Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    EndIf
    Call  HPBarToHome       ( .Actor:Self )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_8021A11C_03 {
    Return
    End
}

#new:Script $Script_8021A12C_03 {
    Call  8027D32C      ( FFFFFF81 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
    Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
    Call  $Function_80218000_03 ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Chan_03 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8_03 )
    Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D6C_03 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F08_03 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
    Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018 
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000 
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  GetIndexFromPos   ( .Actor:Self *Var[A] )
    Mod   *Var[A]  00000004 
    Call  SetGoalToIndex    ( .Actor:Self *Var[A] )
    Call  GetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetHomePos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Set   *Var[D]  *Var[A] 
    Set   *Var[E]  *Var[B] 
    Set   *Var[F]  *Var[C] 
    Sub   *Var[D]  *Var[0] 
    Sub   *Var[E]  *Var[1] 
    Sub   *Var[F]  *Var[2] 
    Div   *Var[D]  00000002 
    Div   *Var[E]  00000002 
    Div   *Var[F]  00000002 
    Add   *Var[0]  *Var[D] 
    Add   *Var[1]  *Var[E] 
    Add   *Var[2]  *Var[F] 
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 00A30002 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_8021A560_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoNormalHit 
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoNormalHit 
            ExecWait  $Script_8021A12C_03 
        Case  ==  .Event:FlipTrigger % D
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoNormalHit 
            ExecWait  $Script_8021A12C_03 
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30006 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021A12C_03 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30006 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30004 
            ExecWait  DoReturnHome 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoDeath 
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A3000C 
            ExecWait  DoImmune 
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A3000C 
            ExecWait  DoImmune 
            Wait  2`
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00200000 
                ExecWait  $Script_8021A12C_03 
            EndIf
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30004 
            SetConst  *Var[2]  00A30006 
            ExecWait  DoScareAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021AA1C_03 {
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[3] )
    If  *Var[3]  ==  00000002 
        Set   *Var[1]  *Var[2] 
    EndIf
    Return
    End
}

#new:IntTable $IntTable_8021AA6C_03 {
00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015 
00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004 
00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_8021AAB8_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30007 
            ExecWait  $Script_8021AA1C_03 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30006 
                SetConst  *Var[2]  00A30006 
                ExecWait  DoBurnHit 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30014 
                SetConst  *Var[2]  00A30015 
                ExecWait  DoBurnHit 
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30006 
                SetConst  *Var[2]  00A30006 
                ExecWait  DoBurnHit 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30006 
                ExecWait  DoDeath 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30014 
                SetConst  *Var[2]  00A30015 
                ExecWait  DoBurnHit 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30015 
                ExecWait  DoDeath 
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30007 
            ExecWait  $Script_8021AA1C_03 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D6C_03 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F08_03 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 00A30006 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_8021AA6C_03 
            Loop  00000013 
                Get1Int  *Var[0] 
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30004 
            ExecWait  DoReturnHome 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            ExecWait  DoDeath 
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A3000C 
                ExecWait  DoImmune 
                Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30002 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A3000C 
                ExecWait  DoImmune 
                Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30002 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000 
                Add   *Var[1]  00000009 
            Else
                Add   *Var[1]  00000018 
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30007 
            ExecWait  $Script_8021AA1C_03 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30007 
            ExecWait  $Script_8021AA1C_03 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30007 
            ExecWait  $Script_8021AA1C_03 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30006 
            SetConst  *Var[2]  00A30007 
            ExecWait  $Script_8021AA1C_03 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30001 
                ExecWait  DoRecover 
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30004 
                SetConst  *Var[2]  00A30006 
                ExecWait  DoScareAway 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30002 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30004 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30002 
            EndIf
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30006 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30007 
            EndIf
            ExecWait  DoBlowAway 
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A3000C 
                ExecWait  DoImmune 
                Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00A30002 
                ExecWait  DoImmune 
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021B81C_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
    Call  $Function_80218000_03 ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Chan_03 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8_03 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70_03 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004 
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorPos   ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00A30004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
        Wait  8`
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  UseCamPreset      ( 00000005 )
        Call  SetBattleCamZoom  ( 000001AE )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  MoveBattleCamOver ( 0000000A )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetPartYaw    ( .Actor:Self 00000001 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[1]  00000018 
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
            EndThread
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30004 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018 
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  *Var[4] 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E 
            Set   *Var[1]  00000000 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
            EndThread
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30004 
            ExecWait  DoReturnHome 
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
        EndCaseGroup
    EndSwitch
    Label  A
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_Chan_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000002 
        Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
        Sub   *Var[0]  00000001 
        If  *Var[0]  >  00000000 
            Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  UseCamPreset  ( 00000002 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30002 
            SetConst  *Var[2]  00A30001 
            ExecWait  8029BBB4 
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D50_03 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70_03 )
            Call  BindIdle  ( .Actor:Self $Script_Idle_8021A11C_03 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A3000C )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00A30009 )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
    Call  SetAnimation      ( .Actor:Self 00000001 00A30005 )
    Wait  20`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E 
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3] 
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFF6A 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  000000C8 
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
            Wait  10`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
            Wait  8`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00A30004 
            ExecWait  DoReturnHome 
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_8021CCDC_03 {
    ExecWait  $Script_80219F4C_03 
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D0CC_03 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021CD7C_03 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetBattleFlagBits ( 00800000 .True )
    Return
    End
}

#new:Script $Script_NextTurn_8021CD7C_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000A 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  UseCamPreset  ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak    ( 0002001F .Actor:Self 00000001 00A30004 00A30003 ) % Mario! Here comes Chan the man!
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            EndIf
        Case  ==  0000000C 
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000002 
                BreakCase
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  0037100A 
                BreakCase
            EndIf
            SetConst  *Var[A]  00A30004 
            SetConst  *Var[B]  00A30003 
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000002 
                SetConst  *Var[A]  00A30007 
                SetConst  *Var[B]  00A30002 
            EndIf
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Div   *Var[1]  00000002 
            If  *Var[0]  <=  *Var[1] 
                Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                If  *Var[0]  ==  00000000 
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000000A )
                    Call  ActorSpeak    ( 00020021 .Actor:Self 00000001 *Var[A] *Var[B] ) % Hmmm... You have some skills.
                    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
                    BreakCase
                EndIf
            EndIf
            Call  GetPlayerHP   ( *Var[0] )
            If  *Var[0]  <=  00000005 
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020022 .Actor:Self 00000001 *Var[A] *Var[B] ) % Mario, prepare to be finished!
                BreakCase
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_8021D0CC_03 {
    ExecWait  $Script_HandleEvent_8021AAB8_03 
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:FlipTrigger % D
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  .Event:Death % 20
                BreakCase
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  003F1000 % 3F1000
                BreakCase
            EndIf
            Set   *Flag[00]  .False 
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[0] 
                CaseOR  ==  00000001 % 1
                CaseOR  ==  00000000 % 0
                    Set   *Flag[00]  .True 
                EndCaseGroup
            EndSwitch
            If  *Flag[00]  ==  .False 
                BreakCase
            EndIf
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  EnableIdleScript  ( .Actor:Self 00000000 )
            Wait  30`
            Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000002 % 2
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Add   *Var[0]  00000001 
                Switch  *Var[0] 
                    Case  ==  00000001 
                        Call  UseCamPreset      ( 00000002 )
                        Call  MoveBattleCamOver ( 0000000A )
                        Call  ActorSpeak        ( 00020020 .Actor:Self 00000001 00A30007 00A30002 ) % Ow... How dishonorable!
                    Case  ==  00000002 
                    Case  ==  00000003 
                        Set   *Var[0]  00000000 
                EndSwitch
                Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
    EndSwitch
    Return
    End
}

