% Automatically dumped from section 22

#new:Actor $22_DryBones {
% stats
[Index]        47b 
[Level]        30`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021CABC_22 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8021CC14_22 
[Script]      $Script_Init_8021CC84_22 
% move effectiveness
[Escape]       50`b 
[Item]         10`b 
[AirLift]      75`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  15`b % dx dy
[StatusIcon]    3`b  27`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021CA20_22 {
.Status:Normal    00530002
.Status:Stone     00530000
.Status:Sleep     0053000E
.Status:Poison    00530002
.Status:Stop      00530000
.Status:Static    00530002
.Status:Paralyze  00530000
.Status:Dizzy     0053000D
.Status:Fear      0053000D
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA6C_22 {
.Status:Normal    00530001
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA78_22 {
.Status:Normal    0053000F
.Status:End
}

#new:DefenseTable $DefenseTable_8021CA84_22 {
.Element:Normal 00000002
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:End
}

#new:DefenseTable $DefenseTable_8021CAA0_22 {
.Element:Normal 00000063
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:End
}

#new:StatusTable $StatusTable_8021CABC_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     60`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:StatusTable $StatusTable_8021CB68_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021CC14_22 {
00800000 01000000 F81E00FF $IdleAnimations_8021CA20_22 $DefenseTable_8021CA84_22 00000000 00000000 FFF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021CA78_22 $DefenseTable_8021CA84_22 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_8021CC84_22 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DB48_22 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021CF2C_22 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D404_22 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021CCFC_22 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_NextTurn_8021CCFC_22 {
    Call  GetOriginalActorType  ( .Actor:Self *Var[A] )
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    If  *Var[2]  !=  *Var[A] 
        Call  GetActorHP    ( *Var[0] *Var[3] )
        If  *Var[3]  !=  00000000 
            Return
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorVar   ( *Var[0] 00000008 *Var[3] )
    If  *Var[3]  !=  00000001 
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  SetActorFlagBits  ( *Var[0] 00600000 .True )
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Return
    End
}

#new:Script $Script_Idle_8021CF2C_22 {
    Label  0
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    Call  GetStatusFlags    ( .Actor:Self *Var[1] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Switch  *Var[1] 
                Case  &  00001000 
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFA 00000018 )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000001 FFFFFFFB )
                Default
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFF8 0000001E )
                    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
            EndSwitch
        Case  ==  00000001 
            Switch  *Var[1] 
                Case  &  00001000 
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFF 0000000A )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Default
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFF 0000000A )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            EndSwitch
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021D0E8_22 {
    Call  PlaySoundAtActor  ( .Actor:Self 000002D2 )
    Call  SetAnimation      ( .Actor:Self 00000001 00530008 )
    Wait  20`
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA6C_22 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021CAA0_22 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021CB68_22 )
    Call  ClearStatusEffects    ( .Actor:Self )
    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFF 0000000A )
    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
    Call  RandInt   ( 00000000 *Var[0] )
    Add   *Var[0]  00000002 
    Call  SetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Call  GetOriginalActorType  ( .Actor:Self *Var[A] )
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    If  *Var[2]  !=  *Var[A] 
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorVar   ( *Var[0] 00000008 *Var[3] )
    If  *Var[3]  !=  00000001 
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  SetActorFlagBits  ( *Var[0] 00600000 .True )
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_8021D404_22 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00530007 
            ExecWait  DoNormalHit 
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00530007 
            ExecWait  DoNormalHit 
        Case  ==  .Event:BurnHit % E
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .True )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0053000B 
            SetConst  *Var[2]  0053000C 
            ExecWait  DoBurnHit 
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .False )
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0053000B 
            SetConst  *Var[2]  0053000C 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0053000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00530007 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00530007 
            ExecWait  DoSpinSmashHit 
            ExecWait  $Script_8021D0E8_22 
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530002 
                ExecWait  DoImmune 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530001 
                ExecWait  DoImmune 
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00530007 
            ExecWait  DoNormalHit 
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                Wait  10`
                ExecWait  $Script_8021D0E8_22 
            EndIf
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530002 
                ExecWait  DoRecover 
            EndIf
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00530004 
            SetConst  *Var[2]  00530007 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530004 
                ExecWait  DoAirLift 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530009 
                ExecWait  DoAirLift 
            EndIf
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000 
                    If  *Var[0]  &  00080000 
                        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF FFFFFFFE 00000000 )
                    Else
                        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFB 00000000 )
                    EndIf
                EndIf
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530007 
                ExecWait  DoBlowAway 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530009 
                ExecWait  DoBlowAway 
            EndIf
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530002 
                ExecWait  DoImmune 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00530001 
                ExecWait  DoImmune 
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021DAC4_22 {
    Set   *Var[0]  00000000 
    Label  0
    Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
    Add   *Var[0]  0000003C 
    Mod   *Var[0]  00000168 
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_TakeTurn_8021DB48_22 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetAnimation  ( .Actor:Self 00000001 00530006 )
        Goto  64
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        Sub   *Var[0]  00000001 
        If  *Var[0]  ==  00000000 
            Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
            Call  SetAnimation      ( .Actor:Self 00000001 00530009 )
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self 000002D3 )
            Call  SetAnimation      ( .Actor:Self 00000001 0053000A )
            Wait  20`
            Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA20_22 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021CA84_22 )
            Call  SetStatusTable    ( .Actor:Self $StatusTable_8021CABC_22 )
            Call  SetPartFlagBits   ( .Actor:Self 00000001 00002000 .False )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFF8 0000001E )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
            Call  GetEnemyMaxHP     ( .Actor:Self *Var[0] )
            Call  SetEnemyHP        ( .Actor:Self *Var[0] )
        Else
            Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
            Call  SetAnimation      ( .Actor:Self 00000001 00530009 )
            Wait  10`
            Call  SetActorVar       ( .Actor:Self 00000000 *Var[0] )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00530005 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 00530006 )
    Thread
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 00530002 )
    EndThread
    Label  64
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[F]  *Var[0] 
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014 
            Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
            Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002D1 )
            Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
            Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
            Exec  $Script_8021DAC4_22 *Var[A] 
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064 
            Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[12.0] )
            Call  RunPartTo ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Kill  *Var[A] 
            If  *Var[F]  ==  00000005 
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014 
    Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002D1 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Exec  $Script_8021DAC4_22 *Var[A] 
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[12.0] )
    Call  RunPartTo ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetPartOffset     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064 
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000001E .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Kill  *Var[A] 
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

