% Automatically dumped from section 1B

#new:Actor $1B_ElectroBlooper {
% stats
[Index]        C8b 
[Level]        50`b 
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021C664_1B 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8021C7BC_1B 
[Script]      $Script_Init_8021C82C_1B 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         95`b 105`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b  40`b % dx dy
[StatusIcon]   25`b  85`b % dx dy
}

#new:Function $Function_80218200_1B {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802182EC_1B {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o48
	SW        RA, 14 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	COPY      A3, A0
	LAW       V0, 801512F0
	ADDIU     V1, R0, 1
	JAL       ~Func:set_background_color_blend
	SB        V1, 0 (V0)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o48
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	LW        V1, 70 (S0)
	ADDIU     V0, R0, 14
	SUBU      V0, V0, V1
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	SW        V0, 70 (S0)
	SLTIU     V0, V0, 1
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	SLL       V0, V0, 1
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218384_1B {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o1C
	SW        RA, 14 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o1C
	CLEAR     A0
	COPY      A1, A0
	LW        V0, 70 (S0)
	COPY      A2, A0
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	BEQ       V0, R0, .o58
	SW        V0, 70 (S0)
	BEQ       R0, R0, .o70
	CLEAR     V0
	.o58
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	COPY      A3, A0
	ADDIU     V0, R0, 2
	.o70
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218404_1B {
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:get_float_variable
	COPY      A0, S1
	LW        V0, C (S2)
	SWC1      F24, 4 (V0)
	LW        V0, C (S2)
	SWC1      F22, 8 (V0)
	LW        V0, C (S2)
	SWC1      F20, C (V0)
	LW        V1, C (S2)
	SWC1      F0, 38 (V1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_802184E4_1B {
	ADDIU     SP, SP, FFB0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_variable
	COPY      A0, S1
	LIF       F0, 40.0
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	ADD.S     F0, F22, F0
	MOV.S     F12, F28
	MFC1      A2, F20
	MFC1      A3, F0
	JAL       ~Func:atan2
	MOV.S     F14, F26
	LIF       F2, 10.0
	CLEAR     A0
	SUB.S     F20, F20, F2
	LIF       F2, 60.0
	LIF       F4, 2.5
	ADD.S     F22, F22, F2
	LIF       F2, 20.0
	ADDIU     V0, R0, 28
	SW        V0, 14 (SP)
	SWC1      F4, 10 (SP)
	ADD.S     F24, F24, F2
	MFC1      A1, F20
	MFC1      A2, F22
	MFC1      A3, F24
	JAL       80071B10
	MOV.S     F20, F0
	LW        V1, C (V0)
	SWC1      F20, 38 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, 2
	SW        A0, 18 (V1)
	LW        V1, C (V0)
	SW        A0, 1C (V1)
	LW        V1, C (V0)
	SW        A0, 20 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, 50
	SW        A0, 28 (V1)
	LW        V1, C (V0)
	SW        A0, 2C (V1)
	LW        V1, C (V0)
	SW        A0, 30 (V1)
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 50
}

#new:Script $Script_8021C070_1B {
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    If  *Var[B]  >  00000014 
        Sub   *Var[B]  00000014 
    Else
        Set   *Var[B]  00000000 
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Set   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[0] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[1] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[2] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Set   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[0] 
    Add   *Var[7]  *Var[4] 
    MulF  *Var[7]  *Fixed[0.33] 
    Set   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[1] 
    Add   *Var[8]  *Var[5] 
    MulF  *Var[8]  *Fixed[0.33] 
    Set   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[2] 
    Add   *Var[9]  *Var[6] 
    MulF  *Var[9]  *Fixed[0.33] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
    Return
    End
}

#new:Script $Script_8021C54C_1B {
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  0000000C 
    ExecWait  $Script_8021C070_1B 
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021C5A4_1B {
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C5E0_1B {
.Status:Normal    0050000C
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    0050000C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C61C_1B {
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End
}

#new:DefenseTable $DefenseTable_8021C658_1B {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021C664_1B {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     80`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

#new:StatusTable $StatusTable_8021C710_1B {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      25`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     70`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021C7BC_1B {
00020000 01000000 005000FF $IdleAnimations_8021C5A4_1B $DefenseTable_8021C658_1B 00000000 00000000 00000000 00000000 
00800000 02001400 003C00FF 00000000 $DefenseTable_8021C658_1B 00000000 00000000 00DB0000 00000000 
}

#new:Script $Script_Init_8021C82C_1B {
    Call  ForceHomePos  ( .Actor:Self 0000005A 0000002D FFFFFFF6 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetActorScale ( .Actor:Self *Fixed[1.25] *Fixed[1.25] *Fixed[1.0] )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Exec  $Script_UpdateElectictyPosition_1B 
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D40C_1B )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021CAB0_1B )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CEE8_1B )
    Return
    End
}

#new:Script $Script_UpdateElectictyPosition_1B {
    Label  0
    Call  ActorExists   ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  .False 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  .True 
        Goto  63
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  .False 
        Goto  63
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Call  GetStatusFlags    ( .Actor:Self *Var[4] )
    If  *Var[4]  !&  00080000 
        Add   *Var[2]  0000002D 
        SetF  *Var[4]  *Fixed[1.6] 
    Else
        Add   *Var[2]  00000012 
        SetF  *Var[4]  *Fixed[0.64] 
    EndIf
    Call  $Function_80218404_1B ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] )
    Label  63
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_Idle_8021CAB0_1B {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000000 
    Call  GetActorPos       ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  B
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C5E0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Label  B
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Call  GetActorPos       ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[4]  >=  *Var[1] 
        Goto  C
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C5E0_1B )
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Wait  9`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Wait  3`
    Label  C
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00351000 
        Wait  1`
        Goto  0
    EndIf
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C61C_1B )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  FFFFFFF6 
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8021CEE8_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoNormalHit 
            ExecWait  $Script_8021EE44_1B 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoNormalHit 
            ExecWait  $Script_8021EE44_1B 
            SetConst  *Var[1]  00500004 
            ExecWait  $Script_8021D3E0_1B 
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Set   *Var[1]  00500005 
            Set   *Var[2]  00500006 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021EE44_1B 
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Set   *Var[1]  00500005 
            Set   *Var[2]  00500006 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021EE44_1B 
            SetConst  *Var[1]  00500006 
            ExecWait  $Script_8021D3E0_1B 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoSpinSmashHit 
            ExecWait  $Script_8021EE44_1B 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoSpinSmashHit 
            ExecWait  $Script_8021EE44_1B 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  $Script_8021D3E0_1B 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
        CaseOR  ==  0000001D % 1D
        CaseOR  ==  0000001E % 1E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500000 
            ExecWait  DoImmune 
        EndCaseGroup
        CaseOR  ==  .Event:StarBeam % 13
        CaseOR  ==  00000014 % 14
            ExecWait  $Script_8021EE44_1B 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoJumpBack 
            ExecWait  $Script_8021C54C_1B 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500004 
            ExecWait  $Script_8021D3E0_1B 
            Return
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8021C54C_1B 
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00500000 
            ExecWait  DoRecover 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D3E0_1B {
    SetConst  *Var[0]  00000001 
    ExecWait  DoDeath 
    Return
    End
}

#new:Script $Script_TakeTurn_8021D40C_1B {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
        ExecWait  $Script_ElectroTackle_1B 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    If  *Var[0]  ==  00000001 
        ExecWait  $Script_Electrify_1B 
        Return
    Else
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000 
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032 
                ExecWait  $Script_Tackle_ElectroBlooper_1B 
            Else
                ExecWait  $Script_SprayInk_ElectroBlooper_1B 
            EndIf
        Else
            ExecWait  $Script_Tackle_ElectroBlooper_1B 
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_Electrify_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000041 
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000140 )
    Call  MoveBattleCamOver ( 00000032 )
    Wait  20`
    Call  $Function_802182EC_1B ( )
    Call  $Function_80218200_1B ( 00000046 00000050 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000028 *Fixed[0.3] )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00500009 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000A )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 0050000B )
    Wait  10`
    ExecWait  $Script_8021EC88_1B 
    Wait  20`
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  $Function_80218384_1B ( )
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    Return
    End
}

#new:Script $Script_Tackle_ElectroBlooper_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000070 
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 000001F4 )
        Call  MoveBattleCamOver ( 00000082 )
    Else
        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000052 
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 00000181 )
        Call  MoveBattleCamOver ( 00000082 )
    EndIf
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000064 
    Set   *Var[3]  0000000F 
    ExecWait  $Script_8021C070_1B 
    Call  PlaySoundAtActor  ( .Actor:Self 000003DD )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Set   *Var[0]  00000000 
                Loop  00000024 
                    Add   *Var[0]  0000001E 
                    Call  SetActorYaw   ( .Actor:Self *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000014 )
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            ExecWait  $Script_8021C54C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Set   *Var[0]  00000000 
        Loop  00000010 
            Add   *Var[0]  0000001E 
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000001E 
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000010 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 % 100000
        Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    ExecWait  $Script_8021C54C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_ElectroTackle_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000070 
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 000001F4 )
        Call  MoveBattleCamOver ( 00000082 )
    Else
        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000052 
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 00000181 )
        Call  MoveBattleCamOver ( 00000082 )
    EndIf
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000064 
    Set   *Var[3]  0000000F 
    ExecWait  $Script_8021C070_1B 
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:Electric 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Set   *Var[0]  00000000 
                Loop  00000024 
                    Add   *Var[0]  0000001E 
                    Call  SetActorYaw   ( .Actor:Self *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000014 )
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            ExecWait  $Script_8021C54C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Set   *Var[0]  00000000 
        Loop  00000010 
            Add   *Var[0]  0000001E 
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000001E 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:Electric 00000008 00000000 00000006 00000020 )
    If  *Var[F]  !=  00000007 
        ExecWait  $Script_8021EE44_1B 
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 
        Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    ExecWait  $Script_8021C54C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SprayInk_ElectroBlooper_1B {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000055 
    Add   *Var[1]  0000002D 
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos       ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    If  *Var[B]  >  0000001E 
        Sub   *Var[B]  0000001E 
    Else
        Set   *Var[B]  00000000 
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Thread
        Call  UseCamPreset      ( 00000013 )
        Sub   *Var[0]  0000001E 
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 0000015E )
        Call  MoveBattleCamOver ( 00000050 )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
    Call  PlaySoundAtActor  ( .Actor:Self 000003DC )
    Set   *Var[7]  *Var[4] 
    Add   *Var[7]  *Var[0] 
    MulF  *Var[7]  *Fixed[0.5] 
    Set   *Var[8]  *Var[5] 
    Add   *Var[8]  *Var[1] 
    MulF  *Var[8]  *Fixed[0.5] 
    Set   *Var[9]  *Var[6] 
    Add   *Var[9]  *Var[2] 
    MulF  *Var[9]  *Fixed[0.5] 
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[7] *Var[8] *Var[9] )
    Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  FallToGoal    ( .Actor:Self 00000008 )
    Call  PlaySoundAtActor  ( .Actor:Self 000003DC )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00500003 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Sub   *Var[B]  0000001E 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FlyToGoal     ( .Actor:Self 00000010 00000000 .Easing:Linear )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000028 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD8 )
    Call  PlaySoundAtActor  ( .Actor:Self 000003DE )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Add   *Var[3]  00000001 
    Sub   *Var[4]  0000001C 
    Sub   *Var[5]  00000003 
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  $Function_802184E4_1B ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            ExecWait  $Script_8021C54C_1B 
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  80269EAC  ( 0000001A )
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
    Wait  30`
    Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    ExecWait  $Script_8021C54C_1B 
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021EC88_1B {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000000 
        Return
    EndIf
    Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000 
        Add   *Var[1]  0000002D 
        SetF  *Var[3]  *Fixed[1.6] 
    Else
        Add   *Var[1]  00000012 
        SetF  *Var[3]  *Fixed[0.64] 
    EndIf
    Call  PlayEffect        ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Var[3] FFFFFFFF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetActorVar       ( .Actor:Self 00000001 *Var[F] )
    Call  PlaySoundAtActor  ( .Actor:Self 0000035C )
    Call  SetPartEventFlags ( .Actor:Self 00000002 00400080 )
    Call  8026ED20  ( FFFFFF81 00000001 00000001 )
    Call  8026EA7C  ( FFFFFF81 00000001 00000004 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021C710_1B )
    Return
    End
}

#new:Script $Script_8021EE44_1B {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000001 
        Return
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  RemoveEffect  ( *Var[0] )
        Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    EndIf
    Call  SetPartEventFlags ( .Actor:Self 00000002 00000000 )
    Call  8026ED20  ( FFFFFF81 00000001 00000000 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021C664_1B )
    Return
    End
}

