% Automatically dumped from section 18

#new:Actor $18_Lakitu {
% stats
[Index]        2Eb 
[Level]        20`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80219F38_18 
% ai
[PartsCount]    3`s 
[PartsTable]  $PartsTable_80219FE4_18 
[Script]      $Script_Init_8021A078_18 
% move effectiveness
[Escape]       40`b 
[Item]         50`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -11`b  20`b % dx dy
[StatusIcon]   10`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219EC0_18 {
.Status:Normal    00490001
.Status:Stone     00490000
.Status:Sleep     00490008
.Status:Poison    00490001
.Status:Stop      00490000
.Status:Static    00490001
.Status:Paralyze  00490000
.Status:Dizzy     00490009
.Status:Fear      00490009
.Status:End
}

#new:IdleAnimations $IdleAnimations_80219F0C_18 {
.Status:Normal    0049000B
.Status:End
}

#new:IdleAnimations $IdleAnimations_80219F18_18 {
.Status:Normal    004A0001
.Status:End
}

#new:DefenseTable $DefenseTable_80219F24_18 {
.Element:Normal 00000000
.Element:Mystery00000000
.Element:End
}

#new:StatusTable $StatusTable_80219F38_18 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80219FE4_18 {
00800000 01000000 FB2300FF $IdleAnimations_80219EC0_18 $DefenseTable_80219F24_18 00000000 00000000 00F30000 00000000 
00120001 02000000 000000FF $IdleAnimations_80219F0C_18 $DefenseTable_80219F24_18 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_80219F18_18 $DefenseTable_80219F24_18 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_8021A078_18 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021BD2C_18 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A0DC_18 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A16C_18 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021A0DC_18 {
    Return
    End
}

#new:Script $Script_8021A0EC_18 {
    Call  SetAnimation  ( .Actor:Self 00000001 00490003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021A16C_18 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490005 
            SetConst  *Var[2]  00490006 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490005 
            SetConst  *Var[2]  00490006 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490006 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoJumpBack 
            ExecWait  $Script_8021A0EC_18 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8021A0EC_18 
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490003 
            SetConst  *Var[2]  00490004 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00490004 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_ThrowSpint_18 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00490003 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    Call  SetAnimation  ( .Actor:Self 00000002 0049000B )
    Call  SetAnimation  ( .Actor:Self 00000001 00490012 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 00490013 )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFFD 
        Add   *Var[1]  00000010 
        Add   *Var[2]  00000002 
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[0.4] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C 
        Add   *Var[2]  00000000 
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFF8 
        Add   *Var[1]  00000028 
        Add   *Var[2]  00000005 
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000001E 
        Add   *Var[2]  00000002 
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00490015 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000002 0049000C )
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020D2 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
            Sub   *Var[0]  0000001E 
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000A .True )
            Sub   *Var[0]  00000014 
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000005 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  20`
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021A0EC_18 
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Thread
                Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  00000028 
                Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
                Sub   *Var[0]  0000001E 
                Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000A .True )
                Sub   *Var[0]  00000014 
                Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000005 .True )
                Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            EndThread
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021A0EC_18 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Vector3D $Vector3D_8021B01C_18 {
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021B028_18 {
$Spiny_18 $Vector3D_8021B01C_18 00000064 00000001 00000000 00000000 00000000 
}

#new:Script $Script_SummonSpiny_18 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SummonEnemy       ( $SpecialFormation_8021B028_18 00000000 )
    Call  CopyStatusEffects ( .Actor:Self *Var[0] )
    Set   *Var[B]  *Var[0] 
    Call  SetAnimation      ( .Actor:Self 00000002 0049000B )
    Call  SetAnimation      ( .Actor:Self 00000001 00490012 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 00490013 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 % 80000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFFD 
        Add   *Var[1]  00000010 
        Add   *Var[2]  00000002 
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[0.4] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C 
        Add   *Var[2]  00000000 
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFF8 
        Add   *Var[1]  00000028 
        Add   *Var[2]  00000005 
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000001E 
        Add   *Var[2]  00000002 
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00490015 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    EndThread
    Call  UseCamPreset  ( 00000002 )
    Call  PlaySoundAtPart       ( .Actor:Self 00000002 000020D2 )
    Call  SetPartSounds ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000002 0049000C )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.6] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000028 
    Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000C .True )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] )
    Sub   *Var[0]  0000001E 
    Thread
        Call  SetPartRotationOffset ( .Actor:Self 00000003 00000000 00000010 00000000 )
        Set   *Var[0]  00000000 
        Set   *Var[1]  00000000 
        Set   *Flag[00]  .False 
        Loop  0000000C 
            Add   *Var[0]  0000001E 
            Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
            Add   *Var[1]  00000001 
            If  *Var[1]  >=  00000006 
                If  *Flag[00]  ==  .True 
                    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
                    Set   *Flag[00]  .False 
                Else
                    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
                    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
                    Set   *Flag[00]  .True 
                EndIf
            EndIf
            Wait  1`
        EndLoop
    EndThread
    Thread
        Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.3] )
        Call  JumpPartTo    ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000C .True )
    EndThread
    Wait  1`
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
    Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000C .True )
    Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  GetPartOffset ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits       ( .Actor:Self 00000002 00000001 .True )
    Call  SetPartFlagBits       ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation  ( *Var[B] 00000001 004A0001 )
    Wait  20`
    Call  SetAnimation  ( *Var[B] 00000001 004A0004 )
    Call  SetGoalToIndex        ( *Var[B] *Var[A] )
    Call  GetGoalPos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  GetActorPos   ( *Var[B] *Var[3] *Var[4] *Var[5] )
    If  *Var[0]  <  *Var[3] 
        Call  SetActorYaw   ( *Var[B] 00000000 )
    Else
        Call  SetActorYaw   ( *Var[B] 000000B4 )
    EndIf
    Call  SetActorSpeed ( *Var[B] *Fixed[4.0] )
    Call  RunToGoal     ( *Var[B] 00000000 .False )
    Call  SetAnimation  ( *Var[B] 00000001 004A0001 )
    Call  SetActorYaw   ( *Var[B] 00000000 )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[B] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Add   *Var[0]  00000001 
    Call  SetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_GetFirstOpenColumn_18 {
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004 
    Switch  *Var[5] 
        Case  ==  00000000 
            Set   *Flag[01]  .True 
        Case  ==  00000001 
            Set   *Flag[02]  .True 
        Case  ==  00000002 
            Set   *Flag[03]  .True 
        Case  ==  00000003 
            Set   *Flag[04]  .True 
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[01]  ==  .False 
        Set   *Var[A]  00000000 
        Return
    EndIf
    If  *Flag[02]  ==  .False 
        Set   *Var[A]  00000001 
        Return
    EndIf
    If  *Flag[03]  ==  .False 
        Set   *Var[A]  00000002 
        Return
    EndIf
    If  *Flag[04]  ==  .False 
        Set   *Var[A]  00000003 
        Return
    EndIf
    Set   *Var[A]  FFFFFFFF 
    Return
    End
}

#new:Script $Script_CountActiveSummoners_18 {
    Set   *Var[9]  00000000 
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2] 
        Case  ==  0000002E 
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000 
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  <  00000003 
                    Add   *Var[9]  00000001 
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021BD2C_18 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  >=  00000003 
        ExecWait  $Script_ThrowSpint_18 
        Return
    EndIf
    ExecWait  $Script_GetFirstOpenColumn_18 
    If  *Var[A]  ==  FFFFFFFF 
        ExecWait  $Script_ThrowSpint_18 
        Return
    EndIf
    ExecWait  $Script_CountActiveSummoners_18 
    Switch  *Var[9] 
        Case  ==  00000001 
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  000001F4 
                ExecWait  $Script_SummonSpiny_18 
                Return
            EndIf
        Case  ==  00000002 
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  000000FA 
                ExecWait  $Script_SummonSpiny_18 
                Return
            EndIf
        Case  ==  00000003 
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000096 
                ExecWait  $Script_SummonSpiny_18 
                Return
            EndIf
    EndSwitch
    ExecWait  $Script_ThrowSpint_18 
    Return
    End
}

#new:Actor $Spiny_18 {
% stats
[Index]        2Fb 
[Level]        19`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021BF8C_18 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8021C038_18 
[Script]      $Script_Init_8021C0A8_18 
% move effectiveness
[Escape]       60`b 
[Item]         60`b 
[AirLift]      75`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

