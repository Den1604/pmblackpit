% Automatically dumped from section 05

#new:Actor $05_Fuzzy {
% stats
[Index]         Ab 
[Level]         6`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022205C_05 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80222108_05 
[Script]      $Script_Init_802221A0_05 
% move effectiveness
[Escape]       50`b 
[Item]         95`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802188B0_05 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218964_05 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80222050_05 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8022205C_05 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80222108_05 {
00800000 01000000 001400FF $IdleAnimations_80222154_05 $DefenseTable_80222050_05 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_80222154_05 {
.Status:Normal    002B0001
.Status:Stone     002B0000
.Status:Sleep     002B000E
.Status:Poison    002B0001
.Status:Stop      002B0000
.Status:Static    002B0001
.Status:Paralyze  002B0000
.Status:Dizzy     002B000F
.Status:Fear      002B000F
.Status:End
}

#new:Script $Script_Init_802221A0_05 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222860_05 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802221EC_05 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802221FC_05 )
    Return
    End
}

#new:Script $Script_Idle_802221EC_05 {
    Return
    End
}

#new:Script $Script_HandleEvent_802221FC_05 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  .Event:Death % 20
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0013 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0008 
            EndIf
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0010 
            SetConst  *Var[2]  002B0012 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0010 
            SetConst  *Var[2]  002B0012 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0012 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0008 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0008 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0008 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0013 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0013 
            ExecWait  DoJumpBack 
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0003 
            ExecWait  8029C0A4 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0013 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0008 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0013 
                ExecWait  DoNormalHit 
                Wait  10`
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0013 
                ExecWait  DoDeath 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0008 
                ExecWait  DoNormalHit 
                Wait  10`
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0008 
                ExecWait  DoDeath 
            EndIf
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0003 
            SetConst  *Var[2]  002B0009 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0003 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222860_05 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032 
        Set   *Var[1]  00000000 
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Goto  64
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032 
    Set   *Var[1]  00000000 
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C 
    Call  SetAnimation      ( .Actor:Self 00000001 002B0001 )
    Label  64
    Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0004 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005 
            Set   *Var[1]  00000000 
            Sub   *Var[2]  00000005 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0005 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000B .False .True .False )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0009 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  4`
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000 
                Set   *Flag[00]  .False 
            Else
                Set   *Flag[00]  .True 
            EndIf
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0005 )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    If  *Flag[00]  ==  .True 
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Wait  10`
    Call  UseIdleAnimation  ( .Actor:Player .False )
    Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0007 )
    Wait  21`
    Call  SetAnimation  ( .Actor:Self 00000001 002B0000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
    Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
    Wait  2`
    Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
    Wait  10`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetLastDamage ( .Actor:Player *Var[3] )
            If  *Var[3]  !=  00000000 
                Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
                Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A 
                Call  $Function_802188B0_05 ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Thread
                    Wait  15`
                    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                    Call  $Function_80218964_05 ( *Var[0] *Var[1] *Var[2] *Var[3] )
                EndThread
                Add   *Var[0]  00000014 
                Add   *Var[1]  00000014 
                Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                Add   *Var[0]  *Var[3] 
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            EndIf
            Thread
                Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
                Wait  2`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
                Wait  2`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
            Wait  1`
            Thread
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C 
            Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

