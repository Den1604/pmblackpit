% Automatically dumped from section 10

#new:Actor $10_SpyGuy {
% stats
[Index]        24b 
[Level]        15`b 
[MaxHP]         7`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802274B8_10 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80227564_10 
[Script]      $Script_Init_802275D4_10 
% move effectiveness
[Escape]       50`b 
[Item]         60`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218880_10 {
	ADDIU     SP, SP, FFD8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	BEQ       A1, R0, .o130
	LW        S0, C (S2)
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 24
	COPY      S1, V0
	SW        S1, 70 (S2)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 20 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 0 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 4 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 8 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 1C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A0, 20 (S1)
	JAL       ~Func:get_item_entity
	SWC1      F0, 10 (S1)
	COPY      S0, V0
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	JAL       ~Func:dist2D
	LW        A3, 8 (S1)
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	LW        A3, 8 (S1)
	JAL       ~Func:atan2
	MOV.S     F20, F0
	LWC1      F4, 10 (S1)
	LWC1      F6, 1C (S1)
	CVT.S.W   F6, F6
	MUL.S     F4, F4, F6
	NOP
	LIF       F2, 0.5
	NOP
	MUL.S     F4, F4, F2
	NOP
	SWC1      F0, C (S1)
	LWC1      F0, 4 (S1)
	LWC1      F2, C (S0)
	SUB.S     F0, F0, F2
	MOV.S     F2, F6
	DIV.S     F0, F0, F6
	ADD.S     F4, F4, F0
	DIV.S     F20, F20, F2
	SWC1      F20, 14 (S1)
	SWC1      F4, 18 (S1)
	.o130
	LW        S1, 70 (S2)
	JAL       ~Func:get_item_entity
	LW        A0, 20 (S1)
	COPY      S0, V0
	BNE       S0, R0, .o158
	NOP
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	BEQ       R0, R0, .o1FC
	ADDIU     V0, R0, 2
	.o158
	LWC1      F12, C (S1)
	JAL       ~Func:sin_deg
	NOP
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 8 (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 8 (S0)
	JAL       ~Func:cos_deg
	LWC1      F12, C (S1)
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 10 (S0)
	SUB.S     F0, F0, F2
	SWC1      F0, 10 (S0)
	LWC1      F0, C (S0)
	LWC1      F2, 18 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, C (S0)
	LWC1      F0, 18 (S1)
	LWC1      F2, 10 (S1)
	LW        V0, 1C (S1)
	SUB.S     F0, F0, F2
	ADDIU     V0, V0, FFFF
	SW        V0, 1C (S1)
	BLTZ      V0, .o1D4
	SWC1      F0, 18 (S1)
	BEQ       R0, R0, .o1FC
	CLEAR     V0
	.o1D4
	LWC1      F0, 0 (S1)
	SWC1      F0, 8 (S0)
	LWC1      F0, 4 (S1)
	SWC1      F0, C (S0)
	LWC1      F0, 8 (S1)
	SWC1      F0, 10 (S0)
	SW        R0, 18 (S1)
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	ADDIU     V0, R0, 1
	.o1FC
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218A98_10 {
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	JAL       ~Func:get_item_entity
	COPY      A0, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      S1, V0
	LWC1      F0, 8 (S1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, C (S1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 10 (S1)
	LW        A1, 0 (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218B38_10 {
	ADDIU     SP, SP, FFC0
	SW        S3, 2C (SP)
	COPY      S3, A0
	SW        S0, 20 (SP)
	CLEAR     S0
	SW        S2, 28 (SP)
	LIA       S2, 800DC070
	SW        S4, 30 (SP)
	LIA       S4, 8010F290
	SW        S5, 34 (SP)
	ADDIU     A0, R0, FFFF
	SW        RA, 38 (SP)
	SW        S1, 24 (SP)
	LB        V0, AE (S2)
	LW        S1, C (S3)
	BNE       V0, A0, .o54
	COPY      S5, S4
	SW        R0, 10 (SP)
	ADDIU     S0, R0, 1
	.o54
	LB        V0, AF (S2)
	BNE       V0, A0, .o70
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 1
	SW        V0, 10 (V1)
	ADDU      S0, S0, V0
	.o70
	LB        V0, B0 (S2)
	BNE       V0, A0, .o8C
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 2
	SW        V0, 10 (V1)
	ADDIU     S0, S0, 1
	.o8C
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 2
	ADDIU     A0, S0, FFFF
	JAL       ~Func:rand_int
	ADDIU     S0, V0, 2
	SLL       V0, V0, 2
	ADDU      V0, SP, V0
	LW        V1, 10 (V0)
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o124
	SLTI      V0, V1, 2
	BEQ       V0, R0, .oD0
	ADDIU     V0, R0, 2
	BEQL      V1, R0, .oE0
	SB        S0, AE (S2)
	BEQ       R0, R0, .o194
	NOP
	.oD0
	BEQL      V1, V0, .o16C
	SB        S0, B0 (S2)
	BEQ       R0, R0, .o194
	NOP
	.oE0
	LW        A1, 0 (S1)
	LB        V0, 1 (S4)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80228748_10)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 1 (S4)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80228754_10)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o124
	SB        S0, AF (S2)
	LW        A1, 0 (S1)
	LB        V0, 0 (S5)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80228760_10)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 0 (S5)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8022876C_10)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o16C
	LW        A1, 0 (S1)
	ADDIU     S1, S1, 4
	COPY      A0, S3
	JAL       ~Func:set_variable
	ADDIU     A2, R0, 16C
	COPY      A0, S3
	LW        A1, 0 (S1)
	ADDIU     A2, R0, 4F
	.o18C
	JAL       ~Func:set_variable
	NOP
	.o194
	LW        RA, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80218CF4_10 {
	ADDIU     SP, SP, FFE8
	LIA       V1, 800DC070
	ADDIU     A2, R0, FFFF
	SW        RA, 10 (SP)
	LB        V0, AE (V1)
	BEQ       V0, A2, .o38
	LW        A1, C (A0)
	LB        V0, AF (V1)
	BEQ       V0, A2, .o38
	NOP
	LB        V0, B0 (V1)
	BNE       V0, A2, .o44
	NOP
	.o38
	LW        A1, 0 (A1)
	BEQ       R0, R0, .o48
	CLEAR     A2
	.o44
	LW        A1, 0 (A1)
	.o48
	JAL       ~Func:set_variable
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218D54_10 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:IdleAnimations $IdleAnimations_80227400_10 {
.Status:Normal    003F0003
.Status:Stone     003F0001
.Status:Sleep     003F000F
.Status:Poison    003F0003
.Status:Stop      003F0001
.Status:Static    003F0003
.Status:Paralyze  003F0001
.Status:Dizzy     003F0012
.Status:Fear      003F0012
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022744C_10 {
.Status:Normal    003F0002
.Status:Stone     003F0000
.Status:Sleep     003F000F
.Status:Poison    003F0002
.Status:Stop      003F0000
.Status:Static    003F0002
.Status:Paralyze  003F0000
.Status:Dizzy     003F0012
.Status:Fear      003F0012
.Status:End
}

#new:IdleAnimations $IdleAnimations_80227498_10 {
.Status:Normal    003F0010
.Status:End
}

#new:DefenseTable $DefenseTable_802274A4_10 {
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End
}

#new:StatusTable $StatusTable_802274B8_10 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      80`
.Status:Fear      100`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80227564_10 {
00800000 01000000 001E00FF $IdleAnimations_80227400_10 $DefenseTable_802274A4_10 00000000 00000000 FFF30000 00000000 
00120001 02000000 001800FF $IdleAnimations_80227498_10 $DefenseTable_802274A4_10 00000000 00000000 FFF60000 00000000 
}

#new:Script $Script_Init_802275D4_10 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802293DC_10 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802276C4_10 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227ABC_10 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  8027D75C      ( FFFFFF81 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022744C_10 )
        Call  SetAnimation      ( .Actor:Self 00000001 003F0002 )
    EndIf
    Return
    End
}

#new:Script $Script_Idle_802276C4_10 {
    Return
    End
}

#new:Script $Script_802276D4_10 {
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    If  *Var[0]  ==  00000000 
        Return
    EndIf
    Call  GetLastDamage ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  0035D000 
        Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetAnimation  ( .Actor:Self 00000001 003F0002 )
        Case  ==  00000001 
            Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
    EndSwitch
    Label  0
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  00000100 
        Wait  1`
        Goto  0
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_80227400_10 )
            Call  SetAnimation  ( .Actor:Self 00000001 003F0017 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003F0019 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
        Case  ==  00000001 
            Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
            Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8022744C_10 )
            Call  SetAnimation  ( .Actor:Self 00000001 003F0018 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003F001A )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 003F0002 )
    EndSwitch
    Wait  10`
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_80227ABC_10 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000B 
            ExecWait  DoNormalHit 
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000B 
            ExecWait  DoNormalHit 
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
            ExecWait  $Script_802276D4_10 
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000D 
            SetConst  *Var[2]  003F000E 
            ExecWait  DoBurnHit 
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
            ExecWait  $Script_802276D4_10 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000D 
            SetConst  *Var[2]  003F000E 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000B 
            ExecWait  DoSpinSmashHit 
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
            ExecWait  $Script_802276D4_10 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000B 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000C 
            ExecWait  DoDeath 
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  003F0002 
            Else
                SetConst  *Var[1]  003F0003 
            EndIf
            ExecWait  DoImmune 
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  003F0002 
            Else
                SetConst  *Var[1]  003F0003 
            EndIf
            ExecWait  DoImmune 
            ExecWait  $Script_802276D4_10 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000B 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  003F0002 
            Else
                SetConst  *Var[1]  003F0003 
            EndIf
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  003F0006 
            Else
                SetConst  *Var[1]  003F0007 
            EndIf
            SetConst  *Var[2]  003F0011 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  003F0006 
            Else
                SetConst  *Var[1]  003F0007 
            EndIf
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  003F0006 
            Else
                SetConst  *Var[1]  003F0007 
            EndIf
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SlingshotAttack_10 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000002E7 )
    Call  SetAnimation      ( .Actor:Self 00000001 003F0015 )
    Wait  12`
    Wait  12`
    Call  SetAnimation      ( .Actor:Self 00000001 003F0016 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A 
    Add   *Var[1]  0000000A 
    Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000002E8 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Call  GetPartOffset ( .Actor:Self 00000002 *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3] 
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF9C 00000000 00000000 )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[14.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  15`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[14.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 .True )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetPartOffset     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064 
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000001E .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IntTable $IntTable_80228748_10 {
00000166 00000167 00000168 
}

#new:IntTable $IntTable_80228754_10 {
00000049 0000004A 0000004B 
}

#new:IntTable $IntTable_80228760_10 {
00000169 0000016A 0000016B 
}

#new:IntTable $IntTable_8022876C_10 {
0000004C 0000004D 0000004E 
}

#new:Script $Script_80228778_10 {
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    Switch  *Var[A] 
        Case  ==  00000000 
        Case  ==  00000001 
            Call  GetActorPos   ( .Actor:Player *Var[1] *Var[2] *Var[3] )
            Set   *Var[2]  00000000 
            Sub   *Var[3]  00000001 
            Call  $Function_80218B38_10 ( *Var[4] *Var[5] )
            Call  MakeItemEntity        ( *Var[4] *Var[1] *Var[2] *Var[3] .ItemSpawnMode:Decoration 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Add   *Var[1]  0000001E 
            Call  $Function_80218880_10 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000014 *Fixed[1.0] )
            Add   *Var[1]  00000014 
            Call  $Function_80218880_10 ( *Var[0] *Var[1] *Var[2] *Var[3] 0000000A *Fixed[1.0] )
            Add   *Var[1]  0000000A 
            Call  $Function_80218880_10 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000005 *Fixed[1.0] )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
        Case  ==  00000002 
            Call  ShowMessageBox    ( *Var[5] 0000003C )
            Sub   *Var[1]  00000096 
            Call  $Function_80218880_10 ( *Var[0] *Var[1] *Var[2] *Var[3] 0000001E *Fixed[1.0] )
            Call  RemoveItemEntity  ( *Var[0] )
            Call  SetActorVar       ( .Actor:Self 00000000 00000003 )
            Return
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HammerAttack_10 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003F0007 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000046 00000000 00000000 )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003F0007 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[1] )
    If  *Var[1]  !&  00080000 
        Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    EndIf
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
    Wait  10`
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Thread
        Wait  4`
        Call  PlaySoundAtActor  ( .Actor:Self 00000327 )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetAnimation  ( .Actor:Self 00000001 003F000A )
            Wait  6`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F0007 
            ExecWait  DoReturnHome 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 003F000A )
    Wait  5`
    Wait  2`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Set   *Flag[00]  .False 
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000 % 80000000
                Call  $Function_80218CF4_10 ( *Var[0] )
                If  *Var[0]  !=  FFFFFFFF 
                    Set   *Flag[00]  .True 
                EndIf
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  <=  00000000 
                Wait  20`
                Goto  64
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[1] )
            If  *Var[1]  &  00080000 
                Wait  20`
                Goto  64
            EndIf
            Call  GetStatusFlags    ( .Actor:Player *Var[1] )
            If  *Var[1]  &  40100000 
                Wait  20`
                Goto  64
            EndIf
            If  *Flag[00]  ==  .True 
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Exec  $Script_80228778_10 
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  00000046 
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  RunToGoal     ( .Actor:Self 00000000 .False )
                Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
                Label  0
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  !=  00000000 
                    Wait  1`
                    Goto  0
                EndIf
                Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Call  $Function_80218A98_10 ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Add   *Var[1]  00000014 
                Sub   *Var[3]  00000002 
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
                Call  RunToGoal     ( .Actor:Self 00000000 .False )
                Thread
                    Wait  5`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020DC )
                    Call  $Function_80218D54_10 ( 000000C8 0000000A )
                EndThread
                Call  SetAnimation  ( .Actor:Self 00000001 003F0009 )
                Wait  5`
                Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
                Sub   *Var[1]  00000007 
                Call  PlayEffect    ( ~FX:Firework:White *Var[1] *Var[2] *Var[3] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  40`
            Else
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  00000046 
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  RunToGoal     ( .Actor:Self 00000000 .False )
                Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
                Wait  10`
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A 
                Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000019 FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
                Wait  20`
            EndIf
            Label  64
            Call  UseCamPreset  ( 00000002 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003F0007 
            ExecWait  DoReturnHome 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802293DC_10 {
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022744C_10 )
        Call  SetAnimation      ( .Actor:Self 00000001 003F0002 )
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            ExecWait  $Script_SlingshotAttack_10 
        Case  ==  00000001 
            ExecWait  $Script_HammerAttack_10 
    EndSwitch
    Return
    End
}

