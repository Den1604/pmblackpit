% Automatically dumped from section 13

#new:Actor $13_Fuzzipede {
% stats
[Index]        25b 
[Level]        43`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218A54_13 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80218B00_13 
[Script]      $Script_Init_80218B70_13 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218000_13 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802180CC_13 {
	ADDIU     SP, SP, FFD8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	BEQ       A1, R0, .o130
	LW        S0, C (S2)
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 24
	COPY      S1, V0
	SW        S1, 70 (S2)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 20 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 0 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 4 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 8 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 1C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A0, 20 (S1)
	JAL       ~Func:get_item_entity
	SWC1      F0, 10 (S1)
	COPY      S0, V0
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	JAL       ~Func:dist2D
	LW        A3, 8 (S1)
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	LW        A3, 8 (S1)
	JAL       ~Func:atan2
	MOV.S     F20, F0
	LWC1      F4, 10 (S1)
	LWC1      F6, 1C (S1)
	CVT.S.W   F6, F6
	MUL.S     F4, F4, F6
	NOP
	LIF       F2, 0.5
	NOP
	MUL.S     F4, F4, F2
	NOP
	SWC1      F0, C (S1)
	LWC1      F0, 4 (S1)
	LWC1      F2, C (S0)
	SUB.S     F0, F0, F2
	MOV.S     F2, F6
	DIV.S     F0, F0, F6
	ADD.S     F4, F4, F0
	DIV.S     F20, F20, F2
	SWC1      F20, 14 (S1)
	SWC1      F4, 18 (S1)
	.o130
	LW        S1, 70 (S2)
	JAL       ~Func:get_item_entity
	LW        A0, 20 (S1)
	COPY      S0, V0
	BNE       S0, R0, .o158
	NOP
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	BEQ       R0, R0, .o1FC
	ADDIU     V0, R0, 2
	.o158
	LWC1      F12, C (S1)
	JAL       ~Func:sin_deg
	NOP
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 8 (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 8 (S0)
	JAL       ~Func:cos_deg
	LWC1      F12, C (S1)
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 10 (S0)
	SUB.S     F0, F0, F2
	SWC1      F0, 10 (S0)
	LWC1      F0, C (S0)
	LWC1      F2, 18 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, C (S0)
	LWC1      F0, 18 (S1)
	LWC1      F2, 10 (S1)
	LW        V0, 1C (S1)
	SUB.S     F0, F0, F2
	ADDIU     V0, V0, FFFF
	SW        V0, 1C (S1)
	BLTZ      V0, .o1D4
	SWC1      F0, 18 (S1)
	BEQ       R0, R0, .o1FC
	CLEAR     V0
	.o1D4
	LWC1      F0, 0 (S1)
	SWC1      F0, 8 (S0)
	LWC1      F0, 4 (S1)
	SWC1      F0, C (S0)
	LWC1      F0, 8 (S1)
	SWC1      F0, 10 (S0)
	SW        R0, 18 (S1)
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	ADDIU     V0, R0, 1
	.o1FC
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802182E4_13 {
	ADDIU     SP, SP, FFC0
	SW        S3, 2C (SP)
	COPY      S3, A0
	SW        S0, 20 (SP)
	CLEAR     S0
	SW        S2, 28 (SP)
	LIA       S2, 800DC070
	SW        S4, 30 (SP)
	LIA       S4, 8010F290
	SW        S5, 34 (SP)
	ADDIU     A0, R0, FFFF
	SW        RA, 38 (SP)
	SW        S1, 24 (SP)
	LB        V0, AE (S2)
	LW        S1, C (S3)
	BNE       V0, A0, .o54
	COPY      S5, S4
	SW        R0, 10 (SP)
	ADDIU     S0, R0, 1
	.o54
	LB        V0, AF (S2)
	BNE       V0, A0, .o70
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 1
	SW        V0, 10 (V1)
	ADDU      S0, S0, V0
	.o70
	LB        V0, B0 (S2)
	BNE       V0, A0, .o8C
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 2
	SW        V0, 10 (V1)
	ADDIU     S0, S0, 1
	.o8C
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 2
	ADDIU     A0, S0, FFFF
	JAL       ~Func:rand_int
	ADDIU     S0, V0, 2
	SLL       V0, V0, 2
	ADDU      V0, SP, V0
	LW        V1, 10 (V0)
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o124
	SLTI      V0, V1, 2
	BEQ       V0, R0, .oD0
	ADDIU     V0, R0, 2
	BEQL      V1, R0, .oE0
	SB        S0, AE (S2)
	BEQ       R0, R0, .o194
	NOP
	.oD0
	BEQL      V1, V0, .o16C
	SB        S0, B0 (S2)
	BEQ       R0, R0, .o194
	NOP
	.oE0
	LW        A1, 0 (S1)
	LB        V0, 1 (S4)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFD8_13)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 1 (S4)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFE4_13)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o124
	SB        S0, AF (S2)
	LW        A1, 0 (S1)
	LB        V0, 0 (S5)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFF0_13)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 0 (S5)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFFC_13)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o16C
	LW        A1, 0 (S1)
	ADDIU     S1, S1, 4
	COPY      A0, S3
	JAL       ~Func:set_variable
	ADDIU     A2, R0, 16C
	COPY      A0, S3
	LW        A1, 0 (S1)
	ADDIU     A2, R0, 4F
	.o18C
	JAL       ~Func:set_variable
	NOP
	.o194
	LW        RA, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_802184A0_13 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802184F8_13 {
	ADDIU     SP, SP, FFE8
	LIA       V1, 800DC070
	ADDIU     A2, R0, FFFF
	SW        RA, 10 (SP)
	LB        V0, AE (V1)
	BEQ       V0, A2, .o38
	LW        A1, C (A0)
	LB        V0, AF (V1)
	BEQ       V0, A2, .o38
	NOP
	LB        V0, B0 (V1)
	BNE       V0, A2, .o44
	NOP
	.o38
	LW        A1, 0 (A1)
	BEQ       R0, R0, .o48
	CLEAR     A2
	.o44
	LW        A1, 0 (A1)
	.o48
	JAL       ~Func:set_variable
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_802189B0_13 {
.Status:Normal    00410004
.Status:Stone     00410000
.Status:Sleep     00410029
.Status:Poison    00410004
.Status:Stop      00410000
.Status:Static    00410004
.Status:Paralyze  00410000
.Status:Dizzy     00410026
.Status:Fear      00410026
.Status:End
}

#new:IdleAnimations $IdleAnimations_802189FC_13 {
.Status:Normal    00410006
.Status:Stone     00410002
.Status:Sleep     0041002A
.Status:Poison    00410006
.Status:Stop      00410002
.Status:Static    00410006
.Status:Paralyze  00410002
.Status:Dizzy     00410027
.Status:Fear      00410027
.Status:End
}

#new:DefenseTable $DefenseTable_80218A48_13 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80218A54_13 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     50`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_80218B00_13 {
00020000 01000000 021800FF $IdleAnimations_802189B0_13 $DefenseTable_80218A48_13 00000000 00000000 FEF60000 00000000 
80800001 02002800 02F000FF 00000000 $DefenseTable_80218A48_13 00000000 00000000 FEF60000 00000000 
}

#new:Script $Script_Init_80218B70_13 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C1A4_13 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80218D58_13 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC_13 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80218C58_13 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorPos   ( .Actor:Self 0000007D 00000021 FFFFFFF1 )
    Call  SetHomePos    ( .Actor:Self 0000007D 00000021 FFFFFFF1 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  80253734      ( 00000001 )
    Return
    End
}

#new:Script $Script_NextTurn_80218C58_13 {
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
        Call  UseCamPreset      ( 00000008 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  SetBattleCamZoom  ( 000000C8 )
        Call  SetBattleCamOffsetZ   ( 0000000A )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  30`
        Call  ActorSpeak        ( 0007009C .Actor:Self 00000001 00410024 00410004 ) % Hey, fella! You wanna piece o' this? You got it! I ...
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  30`
    EndIf
    Return
    End
}

#new:Script $Script_Idle_80218D58_13 {
    Return
    End
}

#new:Script $Script_80218D68_13 {
    Call  SetHomePos        ( .Actor:Self 0000007D 00000021 FFFFFFF1 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
    Call  SetActorYaw       ( .Actor:Self 000000B4 )
    Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000003C 
    Set   *Var[1]  00000000 
    ExecWait  8029C12C 
    Call  SetGoalToHome     ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00410004 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189B0_13 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC_13 )
    Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000002 00000018 )
    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
    Call  $Function_80218000_13 ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .False )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_80218FC8_13 {
    Call  SetHomePos        ( .Actor:Self 0000003C 00000000 0000000F )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
    Call  SetActorYaw       ( .Actor:Self 000000B4 )
    Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    ExecWait  8029C12C 
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189B0_13 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC_13 )
    Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000002 00000018 )
    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
    Call  $Function_80218000_13 ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_802191AC_13 {
    Call  SetHomePos    ( .Actor:Self 0000001E 00000073 FFFFFFE4 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 0041000A )
    Set   *Var[0]  00000041 
    Set   *Var[1]  00000000 
    Set   *Var[2]  FFFFFFF1 
    ExecWait  8029C12C 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos    ( .Actor:Self 0000007D 00000021 FFFFFFF1 )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  SetGoalPos    ( .Actor:Self 00000082 00000064 FFFFFFE4 )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalPos    ( .Actor:Self 0000006E 0000006D FFFFFFE4 )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetGoalPos    ( .Actor:Self 0000005A 00000075 FFFFFFE4 )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetGoalPos    ( .Actor:Self 00000046 00000078 FFFFFFE4 )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetGoalPos    ( .Actor:Self 00000032 0000007D FFFFFFE4 )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetGoalPos    ( .Actor:Self 0000001E 00000082 FFFFFFE4 )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Loop  0000000A 
            AddF  *Var[1]  *Fixed[-1.5] 
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Set   *Var[0]  00000000 
    Loop  0000000A 
        Add   *Var[0]  00000012 
        Call  SetActorRotation  ( .Actor:Self *Var[0] 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189FC_13 )
    Call  SetAnimation      ( .Actor:Self 00000001 00410006 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219ED4_13 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .True )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000002 00000018 )
    Call  8027D4C8  ( FFFFFF81 00000001 00000002 00000008 )
    Call  $Function_80218000_13 ( FFFFFFF6 FFFFFFE7 0000000A FFFFFFE2 )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_80219668_13 {
    Call  8027D32C      ( FFFFFF81 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        Case  ==  00000001 
            Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
        Case  ==  00000002 
            Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
        Case  ==  00000003 
            Call  SetActorVar   ( .Actor:Self 00000000 00000004 )
        Case  ==  00000004 
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            ExecWait  $Script_80218D68_13 
        CaseOR  ==  00000001 
        CaseOR  ==  00000002 
        CaseOR  ==  00000004 
            ExecWait  $Script_802191AC_13 
        EndCaseGroup
        Case  ==  00000003 
            ExecWait  $Script_80218FC8_13 
    EndSwitch
    Return
    End
}

#new:Script $Script_HandleEvent_802197FC_13 {
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001E 
            SetConst  *Var[2]  0041001F 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001E 
            SetConst  *Var[2]  0041001F 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001F 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410008 
            ExecWait  DoJumpBack 
            ExecWait  $Script_80219668_13 
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410004 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410004 
            ExecWait  DoRecover 
        Case  ==  .Event:SwapPartner % 3F
            Call  SetAnimation  ( .Actor:Self 00000001 00410019 )
            Call  UseCamPreset  ( 00000001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  UseCamPreset  ( 00000002 )
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80219D68_13 {
    Call  GetLastDamage ( .Actor:Self *Var[0] )
    If  *Var[0]  <=  00000000 
        Return
    EndIf
    Call  8027D32C  ( FFFFFF81 )
    ExecWait  $Script_8021A2E8_13 
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189B0_13 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC_13 )
    Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000002 00000018 )
    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
    Call  $Function_80218000_13 ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  0035D000 
        Call  SetActorVar       ( .Actor:Self 00000000 00000003 )
        Call  HPBarToCurrent    ( .Actor:Self )
    Else
        ExecWait  $Script_802191AC_13 
        Wait  20`
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_80219ED4_13 {
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001C 
            ExecWait  DoNormalHit 
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001C 
            ExecWait  DoNormalHit 
            ExecWait  $Script_80219D68_13 
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410020 
            SetConst  *Var[2]  00410021 
            ExecWait  DoBurnHit 
            ExecWait  $Script_80219D68_13 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410020 
            SetConst  *Var[2]  00410021 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410021 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410008 
            ExecWait  DoJumpBack 
            ExecWait  $Script_80219668_13 
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001B 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00410006 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001C 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0041001C 
            ExecWait  DoDeath 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A2E8_13 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000003C 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        Case  ==  00000003 
        CaseOR  ==  00000001 
        CaseOR  ==  00000002 
        CaseOR  ==  00000004 
            Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00410004 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.001953125] )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            If  *Var[A]  &  00080000 
                Set   *Var[1]  0000000B 
            Else
                Set   *Var[1]  0000001C 
            EndIf
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
            Thread
                Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            EndThread
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[0]  000000B4 
                Loop  00000008 
                    Sub   *Var[0]  00000016 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_8021A6D8_13 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    ExecWait  $Script_8021A2E8_13 
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032 
    Set   *Var[1]  00000000 
    ExecWait  8029C12C 
    Call  SetAnimation      ( .Actor:Self 00000001 00410012 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000020DA )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetAnimation  ( .Actor:Self 00000001 00410005 )
            Thread
                Set   *Var[0]  00000000 
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Loop  00000014 
                    Add   *Var[0]  00000009 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFEC 00000000 00000005 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] FFFFFFFB *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
            EndThread
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80219668_13 
            Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00410005 )
    Thread
        Set   *Var[0]  00000000 
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
        Loop  00000014 
            Add   *Var[0]  00000009 
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale     ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
    Wait  1`
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
            Thread
                Set   *Var[0]  000000B4 
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Loop  0000000A 
                    Sub   *Var[0]  00000012 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  0000000A 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Wait  8`
            ExecWait  $Script_80219668_13 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IntTable $IntTable_8021AFD8_13 {
00000166 00000167 00000168 
}

#new:IntTable $IntTable_8021AFE4_13 {
00000049 0000004A 0000004B 
}

#new:IntTable $IntTable_8021AFF0_13 {
00000169 0000016A 0000016B 
}

#new:IntTable $IntTable_8021AFFC_13 {
0000004C 0000004D 0000004E 
}

#new:Script $Script_8021B008_13 {
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[A] )
    Switch  *Var[A] 
        Case  ==  00000000 
        Case  ==  00000001 
            Call  GetActorPos   ( .Actor:Player *Var[1] *Var[2] *Var[3] )
            Set   *Var[2]  00000000 
            Sub   *Var[3]  00000001 
            Call  $Function_802182E4_13 ( *Var[4] *Var[5] )
            Call  MakeItemEntity        ( *Var[4] *Var[1] *Var[2] *Var[3] .ItemSpawnMode:Decoration 00000000 )
            Add   *Var[1]  0000001E 
            Call  $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000014 *Fixed[1.0] )
            Add   *Var[1]  00000014 
            Call  $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 0000000A *Fixed[1.0] )
            Add   *Var[1]  0000000A 
            Call  $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000005 *Fixed[1.0] )
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
        Case  ==  00000002 
            Call  ShowMessageBox    ( *Var[5] 0000003C )
            Sub   *Var[1]  00000096 
            Call  $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 0000001E *Fixed[1.0] )
            Call  RemoveItemEntity  ( *Var[0] )
            Call  SetActorVar       ( .Actor:Self 00000001 00000003 )
            Return
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021B22C_13 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    ExecWait  $Script_8021A2E8_13 
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050 
    Set   *Var[1]  00000000 
    ExecWait  8029C12C 
    Call  SetAnimation      ( .Actor:Self 00000001 00410012 )
    Wait  30`
    Call  PlaySoundAtActor  ( .Actor:Self 000020DB )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00410011 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.001953125] )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E 
            Set   *Var[1]  00000000 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
            Thread
                Set   *Var[0]  0000005A 
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Loop  00000006 
                    Add   *Var[0]  0000000F 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Sub   *Var[0]  0000001E 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Thread
                Set   *Var[0]  000000B4 
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Loop  00000007 
                    Add   *Var[0]  00000019 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Sub   *Var[0]  00000014 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000007 .False .True .False )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80219668_13 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00410011 )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.001953125] )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000001 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
    Wait  1`
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Thread
        Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
        Wait  1`
        Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndThread
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Set   *Flag[00]  .False 
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000 
                Set   *Flag[00]  .True 
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  <=  00000000 
                Set   *Flag[00]  .False 
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000 
                Set   *Flag[00]  .False 
            EndIf
            Call  GetStatusFlags    ( .Actor:Player *Var[0] )
            If  *Var[0]  &  40100000 
                Set   *Flag[00]  .False 
            EndIf
            If  *Flag[00]  ==  .True 
                Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                Exec  $Script_8021B008_13 
                Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  00000028 
                Set   *Var[1]  00000000 
                Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                Add   *Var[0]  0000001E 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
                Add   *Var[0]  00000014 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
                Add   *Var[0]  0000000A 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
                Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
                Wait  8`
                Label  0
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                If  *Var[0]  !=  00000000 
                    Wait  1`
                    Goto  0
                EndIf
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Loop  00000003 
                    Sub   *Var[0]  0000000A 
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
                EndLoop
                Wait  10`
                Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
                Call  PlayEffect    ( ~FX:Firework:White *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  $Function_802184A0_13 ( 000000C8 0000000A )
                Call  PlaySoundAtActor      ( .Actor:Self 000020DC )
                Call  SetAnimation  ( .Actor:Self 00000001 00410013 )
                Wait  20`
                Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  00000028 
                Set   *Var[1]  00000000 
                Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                Add   *Var[0]  0000001E 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
                Add   *Var[0]  00000014 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
                Add   *Var[0]  0000000A 
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
                Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
                Wait  8`
                Wait  10`
            EndIf
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_80219668_13 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021C004_13 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 00410012 )
    Wait  30`
    Call  SetAnimation      ( .Actor:Self 00000001 00410004 )
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
        Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( .Actor:Self 00000004 .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021C1A4_13 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  00000000 
        CaseOR  ==  00000003 
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Mul   *Var[0]  00000064 
            Div   *Var[0]  *Var[1] 
            If  *Var[0]  <=  00000023 
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000001F4 
                    ExecWait  $Script_8021C004_13 
                    Return
                EndIf
            EndIf
        EndCaseGroup
    EndSwitch
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000001F4 
        ExecWait  $Script_8021A6D8_13 
    Else
        Call  $Function_802184F8_13 ( *Var[0] )
        If  *Var[0]  ==  00000000 
            ExecWait  $Script_8021B22C_13 
        Else
            ExecWait  $Script_8021A6D8_13 
        EndIf
    EndIf
    Return
    End
}

