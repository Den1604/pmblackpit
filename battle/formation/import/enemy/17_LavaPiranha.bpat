% Automatically dumped from section 17

#new:Actor $17_LavaPiranha {
% stats
[Index]        B3b 
[Level]        45`b 
[MaxHP]        40`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D148_17 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8021D1F4_17 
[Script]      $Script_Init_8021D264_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         50`b  50`b % width height
[HealthBar]    20`b -10`b % dx dy
[StatusTurn]    5`b  45`b % dx dy
[StatusIcon]   30`b  47`b % dx dy
}

#new:Function $Function_80218000_17 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021812C_17 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S4, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	ADDIU     V0, R0, 2
	LIA       V1, $End[0]
	SLL       A0, S3, 4
	SUBU      A0, A0, S3
	SLL       A0, A0, 5
	ADDU      A0, A0, V1
	SLL       V1, S2, 1
	ADDU      V1, V1, S2
	SLLV      V1, V1, V0
	ADDU      A0, A0, V1
	MTC1      S4, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 0 (A0)
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 4 (A0)
	SWC1      F2, 8 (A0)
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218224_17 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      A0, S1
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	ADDIU     V0, R0, 2
	LIA       A0, $End[0]
	SLL       V1, S3, 4
	SUBU      V1, V1, S3
	SLL       V1, V1, 5
	ADDU      V1, V1, A0
	SLLV      S2, S2, V0
	ADDU      V1, V1, S2
	SWC1      F0, 6C (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802182E4_17 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021835C_17 {
	ADDIU     SP, SP, FF78
	LAW       V1, $End[780]
	ADDIU     V0, R0, FFFF
	SW        RA, 54 (SP)
	SW        S8, 50 (SP)
	SW        S7, 4C (SP)
	SW        S6, 48 (SP)
	SW        S5, 44 (SP)
	SW        S4, 40 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	SDC1      F30, 80 (SP)
	SDC1      F28, 78 (SP)
	SDC1      F26, 70 (SP)
	SDC1      F24, 68 (SP)
	SDC1      F22, 60 (SP)
	BEQ       V1, V0, .o50C
	SDC1      F20, 58 (SP)
	BNE       V1, R0, .o1BC
	CLEAR     A3
	LIA       S0, $End[0]
	LIF       F28, 90.0
	LIF       F26, 180.0
	LIF       F20, 360.0
	LIF       F22, -180.0
	.o84
	ADDIU     V0, R0, 1
	BEQ       A3, V0, .oD0
	SLTI      V0, A3, 2
	BEQL      V0, R0, .oA8
	ADDIU     V0, R0, 2
	BEQ       A3, R0, .oC0
	NOP
	BEQ       R0, R0, .o50C
	NOP
	.oA8
	BEQ       A3, V0, .oD8
	ADDIU     V0, R0, 3
	BEQ       A3, V0, .oDC
	ADDIU     S4, R0, 5
	BEQ       R0, R0, .o50C
	NOP
	.oC0
	LIF       F24, 10.0
	BEQ       R0, R0, .oE4
	ADDIU     S4, R0, 9
	.oD0
	BEQ       R0, R0, .oDC
	ADDIU     S4, R0, 7
	.oD8
	ADDIU     S4, R0, 7
	.oDC
	LIF       F24, 8.0
	.oE4
	CLEAR     S1
	SW        S4, 90 (S0)
	BLEZ      S4, .o18C
	SWC1      F24, 94 (S0)
	ADDIU     A1, S4, FFFF
	COPY      V1, S0
	ADDIU     A0, R0, 4
	LIF       F9, 1.75
	MTC1      R0, F8
	LAD       F6, $ConstDouble_8022AC40_17
	.o114
	BNE       S1, A1, .o128
	ADDU      V0, S0, A0
	LWC1      F0, 6C (V1)
	BEQ       R0, R0, .o174
	ADD.S     F0, F0, F28
	.o128
	LWC1      F0, 6C (V1)
	LWC1      F4, 6C (V0)
	SUB.S     F2, F4, F0
	C.LT.S    F26, F2
	NOP
	BC1F      .o14C
	NOP
	BEQ       R0, R0, .o15C
	ADD.S     F0, F0, F20
	.o14C
	C.LT.S    F2, F22
	NOP
	BC1TL     .o15C
	ADD.S     F4, F4, F20
	.o15C
	ADD.S     F0, F0, F4
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F8
	NOP
	ADD.D     F0, F0, F6
	CVT.S.D   F0, F0
	.o174
	SWC1      F0, 6C (V1)
	ADDIU     V1, V1, 4
	ADDIU     S1, S1, 1
	SLT       V0, S1, S4
	BNE       V0, R0, .o114
	ADDIU     A0, A0, 4
	.o18C
	COPY      A0, S0
	JAL       $Function_80218058_17
	SW        A3, 28 (SP)
	LW        A3, 28 (SP)
	ADDIU     A3, A3, 1
	SLTI      V0, A3, 4
	BNE       V0, R0, .o84
	ADDIU     S0, S0, 1E0
	ADDIU     V0, R0, 1
	SAW       V0, $End[780]
	CLEAR     A3
	.o1BC
	LIA       V0, 8009A66C
	COPY      T0, V0
	LIO       T1, 01004008
	SW        T1, 18 (SP)
	LIO       T1, 06020004
	LIA       S5, $End[0]
	SW        T1, 1C (SP)
	LW        V1, 0 (T0)
	LUI       V0, E700
	COPY      A0, V1
	ADDIU     V1, V1, 8
	SW        V1, 0 (T0)
	SW        V0, 0 (A0)
	ADDIU     V0, V1, 8
	SW        R0, 4 (A0)
	SW        V0, 0 (T0)
	LUI       V0, DE00
	SW        V0, 0 (V1)
	LIA       V0, $DisplayList_8021CF40_17
	SW        V0, 4 (V1)
	.o220
	CLEAR     S1
	LUI       V0, DE01
	LWC1      F24, 94 (S5)
	LW        A0, 0 (T0)
	LW        S4, 90 (S5)
	ADDIU     T1, A0, 8
	SW        T1, 10 (SP)
	LW        A2, 1DC (S5)
	COPY      S3, T1
	SW        V0, 0 (A0)
	SLL       V1, A2, 5
	ADDIU     V0, V1, 8
	ADDU      V0, A0, V0
	ADDU      V1, T1, V1
	SW        V0, 4 (A0)
	BLEZ      A2, .o480
	SW        V1, 0 (T0)
	ADDIU     V0, S4, FFFF
	SLL       V0, V0, 2
	ADDU      V0, S5, V0
	SW        V0, 14 (SP)
	COPY      A1, S1
	COPY      S8, S1
	COPY      S7, S1
	COPY      S6, S1
	COPY      S2, S5
	ADDIU     S0, A0, 16
	.o28C
	MTC1      S1, F2
	NOP
	CVT.S.W   F2, F2
	MTC1      S4, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F2, F2, F0
	NOP
	MTC1      A2, F0
	NOP
	CVT.S.W   F0, F0
	LWC1      F26, 98 (S2)
	LWC1      F28, 9C (S2)
	LWC1      F30, A0 (S2)
	DIV.S     F2, F2, F0
	TRUNC.W.S F10, F2
	MFC1      A0, F10
	NOP
	MTC1      A0, F0
	NOP
	CVT.S.W   F0, F0
	ADDIU     V1, A0, 1
	SLT       V0, V1, S4
	BNE       V0, R0, .o300
	SUB.S     F6, F2, F0
	LW        T1, 14 (SP)
	LWC1      F22, 6C (T1)
	BEQ       R0, R0, .o38C
	MOV.S     F12, F22
	.o300
	SLL       V0, V1, 2
	ADDU      V0, S5, V0
	LWC1      F4, 6C (V0)
	SLL       V0, A0, 2
	ADDU      V0, S5, V0
	LWC1      F12, 6C (V0)
	SUB.S     F2, F4, F12
	LIF       F0, 180.0
	NOP
	C.LT.S    F0, F2
	NOP
	BC1F      .o34C
	NOP
	LIF       F10, 360.0
	NOP
	SUB.S     F4, F4, F10
	SUB.S     F2, F4, F12
	.o34C
	LIF       F0, -180.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1FL     .o37C
	SUB.S     F0, F4, F12
	LIF       F10, 360.0
	NOP
	ADD.S     F4, F4, F10
	SUB.S     F0, F4, F12
	.o37C
	MUL.S     F0, F0, F6
	NOP
	ADD.S     F22, F0, F12
	MOV.S     F12, F22
	.o38C
	SW        A1, 20 (SP)
	SW        A2, 24 (SP)
	SW        A3, 28 (SP)
	JAL       ~Func:sin_deg
	SW        T0, 2C (SP)
	MUL.S     F20, F0, F24
	NOP
	JAL       ~Func:cos_deg
	MOV.S     F12, F22
	NEG.S     F0, F0
	MUL.S     F0, F0, F24
	NOP
	ADD.S     F4, F26, F20
	ADD.S     F2, F28, F0
	SUB.S     F20, F26, F20
	ADDIU     S2, S2, C
	ADDIU     S1, S1, 1
	SUB.S     F0, F28, F0
	TRUNC.W.S F10, F4
	MFC1      V0, F10
	NOP
	SH        V0, 0 (S3)
	TRUNC.W.S F10, F2
	MFC1      V0, F10
	TRUNC.W.S F10, F30
	MFC1      V1, F10
	ADDIU     S3, S3, 10
	SH        V0, FFF4 (S0)
	SH        V1, FFF6 (S0)
	SH        S6, FFFA (S0)
	SH        R0, FFFC (S0)
	SB        S7, FFFE (S0)
	SB        S8, FFFF (S0)
	LW        A1, 20 (SP)
	TRUNC.W.S F10, F20
	MFC1      V0, F10
	SB        A1, 0 (S0)
	ADDIU     S0, S0, 10
	SH        V0, 0 (S3)
	TRUNC.W.S F10, F0
	MFC1      V0, F10
	NOP
	SH        V0, FFF4 (S0)
	ADDIU     V0, R0, 400
	SH        V1, FFF6 (S0)
	SH        S6, FFFA (S0)
	SH        V0, FFFC (S0)
	SB        S7, FFFE (S0)
	SB        S8, FFFF (S0)
	SB        A1, 0 (S0)
	ADDIU     S0, S0, 10
	ADDIU     S3, S3, 10
	ADDIU     A1, A1, 1E
	ADDIU     S8, S8, 78
	ADDIU     S7, S7, 32
	LW        A2, 24 (SP)
	LW        A3, 28 (SP)
	LW        T0, 2C (SP)
	SLT       V0, S1, A2
	BNE       V0, R0, .o28C
	ADDIU     S6, S6, 140
	.o480
	ADDIU     A1, A2, FFFF
	BLEZ      A1, .o4D8
	CLEAR     S1
	LIO       A2, 00020406
	LW        A0, 10 (SP)
	.o498
	LW        V1, 0 (T0)
	ADDIU     S1, S1, 1
	COPY      V0, V1
	ADDIU     V1, V1, 8
	SW        A0, 4 (V0)
	SW        V1, 0 (T0)
	LW        T1, 18 (SP)
	ADDIU     A0, A0, 20
	SW        T1, 0 (V0)
	ADDIU     V0, V1, 8
	SW        V0, 0 (T0)
	LW        T1, 1C (SP)
	SLT       V0, S1, A1
	SW        A2, 4 (V1)
	BNE       V0, R0, .o498
	SW        T1, 0 (V1)
	.o4D8
	ADDIU     A3, A3, 1
	SLTI      V0, A3, 4
	BNE       V0, R0, .o220
	ADDIU     S5, S5, 1E0
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, E700
	SW        V0, 0 (A0)
	SW        R0, 4 (A0)
	.o50C
	LW        RA, 54 (SP)
	LW        S8, 50 (SP)
	LW        S7, 4C (SP)
	LW        S6, 48 (SP)
	LW        S5, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 80 (SP)
	LDC1      F28, 78 (SP)
	LDC1      F26, 70 (SP)
	LDC1      F24, 68 (SP)
	LDC1      F22, 60 (SP)
	LDC1      F20, 58 (SP)
	JR        RA
	ADDIU     SP, SP, 88
}

#new:Function $Function_802188B0_17 {
	ADDIU     SP, SP, FFD8
	LIA       V0, $Function_8021835C_17
	SW        V0, 1C (SP)
	ADDIU     V0, R0, A
	SW        V0, 14 (SP)
	ADDIU     V0, R0, 1
	ADDIU     A0, SP, 10
	SW        RA, 20 (SP)
	SW        R0, 18 (SP)
	JAL       ~Func:queue_render_task
	SW        V0, 10 (SP)
	LW        RA, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802188EC_17 {
	SAW       R0, $End[780]
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_802188FC_17 {
	ADDIU     SP, SP, FFE8
	ADDIU     V0, R0, FFFF
	LIA       A1, $Function_802188B0_17
	SW        RA, 10 (SP)
	SAW       V0, $End[780]
	JAL       80123158
	CLEAR     A0
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218930_17 {
	ADDIU     SP, SP, FFC0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S4, C (V0)
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S5, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S1, V0
	MOV.S     F12, F22
	JAL       ~Func:cos_deg
	COPY      S0, V0
	MTC1      S3, F20
	NOP
	CVT.S.W   F20, F20
	MUL.S     F0, F0, F20
	NOP
	MTC1      S5, F2
	NOP
	CVT.S.W   F2, F2
	SUB.S     F2, F2, F0
	MOV.S     F12, F22
	JAL       ~Func:sin_deg
	SWC1      F2, 4 (S4)
	MUL.S     F0, F0, F20
	NOP
	LIO       AT, 3C23D70A
	MTC1      AT, F2
	MTC1      S0, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F4, F4, F2
	NOP
	ADDU      S2, S2, S1
	MTC1      S2, F2
	NOP
	CVT.S.W   F2, F2
	SUB.S     F2, F2, F0
	SWC1      F4, 10 (S4)
	SWC1      F2, 8 (S4)
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80218A98_17 {
	ADDIU     SP, SP, FFE0
	LIA       V1, $???_80222B68_17
	SW        RA, 18 (SP)
	LW        V0, 0 (V1)
	ADDIU     A0, V0, 1
	BEQ       A1, R0, .o4C
	SW        A0, 0 (V1)
	JAL       ~Func:play_sound
	ADDIU     A0, R0, D4
	ADDIU     V0, R0, 8
	SW        V0, 10 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 8B
	COPY      A2, A0
	JAL       ~Func:set_music_track
	ADDIU     A3, R0, 1F4
	BEQ       R0, R0, .o94
	CLEAR     V0
	.o4C
	ADDIU     V0, R0, 50
	BEQ       A0, V0, .o68
	ADDIU     V0, R0, 154
	BEQ       A0, V0, .o78
	ADDIU     V0, R0, 8
	BEQ       R0, R0, .o94
	CLEAR     V0
	.o68
	JAL       8014AC08
	NOP
	BEQ       R0, R0, .o94
	CLEAR     V0
	.o78
	SW        V0, 10 (SP)
	CLEAR     A0
	ADDIU     A1, R0, D
	ADDIU     A2, R0, 1
	JAL       ~Func:set_music_track
	ADDIU     A3, R0, 1F4
	ADDIU     V0, R0, 2
	.o94
	LW        RA, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218B38_17 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	SLL       V0, V0, 2
	LW        A1, 0 (S0)
	LTW       A2, V0 ($IntTable_80222D48_17)
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218B90_17 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	SLL       V0, V0, 2
	LW        A1, 0 (S0)
	LTW       A2, V0 ($IntTable_80222E20_17)
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218BE8_17 {
	ADDIU     SP, SP, FFC0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      S5, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_variable
	COPY      A0, S2
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S3, V0
	MOV.S     F12, F22
	JAL       ~Func:cos_deg
	COPY      S1, V0
	MTC1      S3, F20
	NOP
	CVT.S.W   F20, F20
	MUL.S     F0, F0, F20
	NOP
	MTC1      S5, F2
	NOP
	CVT.S.W   F2, F2
	SUB.S     F2, F2, F0
	ADDIU     S0, S0, 4
	TRUNC.W.S F4, F2
	MFC1      S5, F4
	JAL       ~Func:sin_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F20
	NOP
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	ADDU      S1, S4, S1
	MTC1      S1, F2
	NOP
	CVT.S.W   F2, F2
	SUB.S     F2, F2, F0
	COPY      A0, S2
	TRUNC.W.S F4, F2
	MFC1      S4, F4
	JAL       ~Func:set_variable
	COPY      A2, S5
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, S4
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80218DF0_17 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	LW        S0, C (V0)
	JAL       ~Func:get_float_variable
	COPY      A0, S1
	SWC1      F0, 2C (S0)
	SWC1      F0, 30 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Unknown $???_8021A364_17 {
00050001 00000000 00000008 00010000 00000000 00110001 00B600B6 00B60005 
00020000 00000000 00080002 00000000 00000011 000200B6 00B600B6 00050003 
00000000 00000008 00030000 00000000 00110003 00B600B6 00B60005 00040000 
00000000 00080004 00000000 00000011 000400B6 00B600B6 00050005 00000000 
00000008 00050000 00000000 00110005 00B600B6 00B60005 00060000 00000000 
00080006 00000000 00000011 000600B6 00B600B6 00050007 00000000 00000008 
00070000 00000000 00110007 00B600B6 00B60005 00080000 00000000 00080008 
00000000 00000011 000800B6 00B600B6 00050009 00000000 00000008 00090000 
00000000 00110009 00B600B6 00B60005 000A0000 00000000 0008000A 00000000 
00000011 000A00B6 00B600B6 0005000B 00F90000 FFF70008 000B0000 00000000 
0011000B 00B600B6 00B60005 000C0000 00000000 0008000C 00000000 00000011 
000C00B6 00B600B6 00010001 00050002 F637FF80 FBD70008 00020001 0020FFFC 
00050003 F58DFED4 F6F00008 00030005 002CFFFA 00050004 FD7FFFDD FB7C0008 
00040002 001BFFFF 00050005 009A0024 ED300008 00050013 00500000 00050006 
0571025F DE840008 00060035 00790009 00050007 0C9F02A3 EF570008 00070012 
0042000E 00050008 3DDB0910 F6740008 0008000A 0027002B 00050009 05B8FFCD 
02DA0008 00090000 00060001 0005000A 01F9FFA6 0E660008 000A0001 FFF90000 
0005000B 0139FFCF 07110008 000BFFFF 00010000 0005000C FC8C0019 025D0008 
000C0000 00090000 00010001 00050002 EC86FE06 F7EA0008 00020005 003EFFF3 
00050003 EB92FB70 EE6F0008 00030012 0054FFEC 00050004 FB05FF73 F6FC0008 
00040006 0036FFFD 00050005 0115008A DA610008 00050044 00910002 00050006 
87707806 3D1F0008 000600AB 00A4001F 00050007 176209EF DFF00008 00070038 
0072002B 00050008 00006D60 80020008 00080011 0008004C 00050009 0B69FF34 
05A60008 0009FFFF 000D0003 0005000A 03B4FEA3 1CC50008 000A0008 FFF3FFFF 
0005000B 0170FF94 0E2B0008 000BFFFE 00030000 0005000C F91B0066 04B70008 
000C0000 0011FFFF 00010001 00050002 E2FBFBAC F46F0008 0002000B 0058FFE5 
00050003 E255F626 E6DB0008 00030024 0074FFD6 00050004 F89BFEC3 F2840008 
0004000D 004FFFF9 00050005 0155011B C7930008 00050089 00B60004 00050006 
848972CB 1ABB0008 00060113 006B0032 00050007 1F4B1487 D1C90008 0007006A 
00830051 00050008 C2260910 098C0008 00080009 FFF40029 00050009 110DFE3A 
08560008 0009FFFE 00140004 0005000A 04FBFD16 2B1C0008 000A0013 FFF0FFFE 
0005000B 019CFF4F 15450008 000BFFFF 00050000 0005000C F5B000E5 07080008 
000CFFFF 0019FFFF 00010001 00050002 D994F896 F1920008 00020013 006EFFD3 
00050003 D9D5EF60 E0600008 0003003B 0089FFBC 00050004 F647FDD2 EE170008 
00040015 0067FFF5 00050005 81507E44 34C00008 000500D3 00B90007 00050006 
7E617182 F70A0008 00060129 FFFA0036 00050007 23702100 C3460008 0007009A 
006F0076 00050008 00000000 00000008 00080003 00230010 00050009 16A0FCE3 
0ADE0008 0009FFFE 001A0004 0005000A 05A6FB31 39740008 000A0022 FFF3FFFC 
0005000B 01BCFF04 1C5F0008 000B0001 00070000 0005000C F24C0195 094D0008 
000CFFFF 0021FFFE 00010001 00050002 D03EF4EF EF750008 0002001C 007EFFBF 
00050003 D1D6E782 DB0D0008 00030052 0092FFA1 00050004 F40FFCA1 E9B80008 
0004001F 007DFFEF 00050005 81037DB9 21EC0008 00050112 009D0009 00050006 
796C751C D3E00008 000600DF FF9F0028 00050007 9FAC5247 2F0D0008 000700BD 
003F0091 00050008 3DDB0910 F6740008 0008000D 0048003B 00050009 1C20FB38 
0D340008 0009FFFE 001F0004 0005000A 059DF930 47DE0008 000A0033 FFFCFFF9 
0005000B 01CDFEB5 23790008 000B0004 000AFFFF 0005000C EEF30275 0B810008 
000CFFFF 0028FFFE 00010001 00050002 C6D1F0E8 EE3A0008 00020025 0088FFA9 
00050003 C9DEDEE3 D70E0008 00030068 008FFF88 00050004 F1FAFB36 E5680008 
0004002A 0090FFE9 00050005 807F7D5F 0F140008 0005013A 0068000A 00050006 
F8FC04F7 32230008 00060066 FF9C0012 00050007 7FFE4AB2 00000008 000700CC 
0000009C 00050008 00006D60 80020008 00080015 0027005C 00050009 218FF941 
0F4D0008 0009FFFE 00240004 0005000A 04DFF751 566A0008 000A0042 0009FFF7 
0005000B 01D1FE64 2A930008 000B0009 000DFFFF 0005000C EBA60382 0DA20008 
000CFFFE 002EFFFD 00010001 00050002 BD18ECB8 EE020008 0002002E 008CFF95 
00050003 C0E3D5D3 D5100008 0003007A 0081FF73 00050004 F00CF996 E1260008 
00040037 00A0FFE2 00050005 7FDE7D49 FC3B0008 00050143 0028000A 00050006 
FD09009E 10C60008 0006000F FFF80002 00080007 00CC0001 009C0005 0008C226 
0910098C 00080008 000D0010 003A0005 000926EE F7081123 00080009 FFFF0028 
00030005 000A037F F5D36523 0008000A 004E001D FFF50005 000B01C7 FE1431AE 
0008000B 000E0011 FFFF0005 000CE866 04B90FAD 0008000C FFFE0034 FFFD0001 
00010005 0002B2CF E89CEEF5 00080002 00360089 FF810005 00033363 B33B583B 
00080003 0086006C FF650005 0004EE49 F7C5DCF1 00080004 004500AE FFDA0005 
00057F47 7D7CE961 00080005 012AFFEC 00090005 000602F7 009EEF3A 00080006 
00150078 00030008 000700CC 0002009C 00050008 00000000 00000008 00080007 
003E0021 00050009 2C47F498 12AD0008 0009FFFF 002B0002 0005000A 01A7F4E7 
74050008 000A0056 0035FFF4 0005000B 01AFFDC6 38CA0008 000B0014 0015FFFE 
0005000C E5330619 11A00008 000CFFFE 0039FFFD 00010001 00050002 A7A9E4DB 
F13F0008 0002003D 0080FF71 00050003 0C54BA19 75500008 0003008B 0052FF60 
00050004 ECB6F5C9 D8C60008 00040054 00B9FFD1 00050005 7ED77DEC D68B0008 
000500F6 FFC10008 00050006 070404F7 CDDC0008 00060073 00CC0015 00080007 
00CC0001 009C0005 00083DDB 0910F674 00080008 00110061 004C0005 000931A1 
F1FB13E6 00080009 0000002C 00010005 000AFF95 F4AF8301 0008000A 0057004E 
FFF40005 000B018A FD7E3FE7 0008000B 001B001A FFFE0005 000CE20D 079E1378 
0008000C FFFE003D FFFD0001 00010005 00021B6B 9E3B74FA 00080002 00420073 
FF650005 0003D453 B60BA369 00080003 00870037 FF640005 0004EB54 F3A7D4A0 
00080004 006400C1 FFC90005 00057EA4 7E83C3B9 00080005 00B0FFB2 00050005 
00068694 751C2C20 00080006 00EE00BF 002B0008 000700CC 0000009C 00050008 
00006D60 80020008 00080019 003E006D 00050009 3709EF3C 14C40008 00090000 
002C0000 0005000A FD92F531 91F30008 000A0052 0067FFF5 0005000B 0158FD3D 
47050008 000B0021 0020FFFD 0005000C DEF40946 15330008 000CFFFE 0040FFFD 
00010001 00050002 0E13A047 7A0F0008 00020045 0062FF5E 00050003 C2C4AD3C 
AACC0008 0003007D 0020FF71 00050004 EA2AF166 D07C0008 00040075 00C5FFBF 
00050005 FEBC00DD 30E70008 00050069 FFC50003 00050006 819F7182 08F60008 
00060134 005B0038 00050008 C2260910 098C0008 00080011 0024004A 00050009 
3C8DEC69 153F0008 00090000 002BFFFF 0005000A FBE3F65D A0C60008 000A0046 
007EFFF7 0005000B 011DFD06 4E230008 000B0028 0027FFFD 0005000C DBE50B0D 
16D10008 000CFFFE 0043FFFD 00010001 00050002 0000A100 80020008 00020046 
004FFF5C 00050003 38EDDBE6 29E70008 0003006B 0010FF84 00050004 E93AEF0B 
CC510008 00040085 00C6FFB6 00050005 FF16005A 1E180008 0005002F FFF50001 
00050006 7B7772CB E5450008 00060118 FFE60033 00050008 00000000 00000008 
0008000B 00500031 00050009 4241E98D 154B0008 00090001 0029FFFD 0005000A 
FAC0F808 AF6D0008 000A0036 008FFFF9 0005000B 00D8FCDB 55430008 000B002E 
002DFFFD 0005000C D8DF0CF1 184F0008 000CFFFE 0045FFFD 00010001 00050002 
F1EDA047 85F10008 00020045 003CFF5F 00050003 30CAE4B4 26720008 00030056 
000AFF9D 00050004 E889EC9C C8170008 00040096 00C4FFAD 00050005 FFA1000D 
0B490008 0005000E 00390000 00050006 78907806 C2E10008 000600AE FFAD001F 
00050008 3DDA0910 F6740008 00080015 0072005C 00050009 483AE6B7 14DB0008 
00090002 0026FFFC 0005000A FA49F9FD BDEA0008 000A0023 009AFFFC 0005000B 
008DFCBB 5C640008 000B0034 0034FFFC 0005000C D5DF0EEE 19AC0001 00010005 
0002E495 9E3B8B06 00080002 00410029 FF680005 000328DF ECDC2188 00080003 
003F000F FFB70005 0004E81F EA21C3C5 00080004 00A700C0 FFA40005 0005003F 
0005F87A 00080005 000E0086 00000005 0006FA8F 025F217B 00080006 003DFFD8 
000B0005 00080000 6D608002 00080008 001D004D 007E0005 00094E8F E3F713DC 
00080009 00030022 FFFA0005 000AFA8A FBFACC4A 0008000A 000E009E FFFF0005 
000B003E FCA96385 0008000B 0038003C FFFC0005 000CD2E2 11031AE7 00010001 
00050002 5856E4DB 0EC10008 0002003B 0019FF75 00050003 2094F40A 1B6E0008 
0003002A 0020FFD0 00050004 68009864 3F4D0008 000400B7 00B8FF9B 00050005 
00D10046 E5AB0008 0005002E 00CB0001 00050006 00000000 00000008 00060011 
004B0003 00050008 C2260910 098C0008 00080015 0031005B 00050009 555BE161 
123D0008 00090003 001DFFF9 0005000A FB77FDC2 DAA00008 000AFFFB 009B0000 
0005000B FFEDFCA6 6AA60008 000B003C 0042FFFC 0005000C CFE5132B 1BFD0008 
000CFFFE 0044FFFD 00010001 00050002 4D31E89C 110B0008 00020034 000BFF86 
00050003 1798F9DD 14350008 00030017 003AFFE5 00050004 683B9AE4 3AA50008 
000400C6 00AEFF92 00050005 013700C0 D2DC0008 00050069 00F90003 00050006 
0571025F DE840008 00060048 00BA000D 00050008 00000000 00000008 0008000F 
005B0042 00050009 5CB7DF0A 0FEB0008 00090004 0018FFF8 0005000A FCF2FF1D 
E8FA0008 000AFFEA 00910003 0005000B FF9CFCB0 71C70008 000B003F 0049FFFC 
0005000C CCE21564 1CEC0008 000CFFFE 0043FFFD 00010001 00050002 42E7ECB9 
11FE0008 0002002C 0003FF99 00050003 0DD8FDEE 0BFB0008 0003000B 005CFFF3 
00050004 68DA9D5B 35BA0008 000400D4 00A1FF8A 00050005 015B015B C00C0008 
000500B1 01080005 00050006 87707806 3D1F0008 000600BF 00DC0022 00050008 
3DDA0910 F6740008 00080019 007B006D 00050009 64B5DD0E 0CDB0008 00090004 
0013FFF7 0005000A FECDFFE0 F75C0008 000AFFDE 00820004 0005000B FF4FFCC8 
78E80008 000B0040 0050FFFB 0005000C C9D417AB 1DB00008 000CFFFE 0041FFFE 
00010001 00050002 392FF0E8 11C60008 00020023 0000FFAD 00050003 0382FFDF 
030C0008 00030006 0083FFF9 00050004 69EB9FBE 307A0008 000400E2 0091FF83 
00050005 81397E08 2D390008 000500F8 00F50008 00050006 848972CB 1ABB0008 
00060128 00990035 00050008 00006D60 80020008 00080021 0054008E 00050009 
6D57DB86 09140008 00090004 000DFFF7 0005000A 00CDFFF2 05C20008 000AFFD9 
00700005 0005000B FF06FCEE 800B0008 000B0040 0056FFFB 0005000C C6B419FD 
1E440008 000CFFFF 003FFFFE 00010001 00050002 2FC2F4EF 108B0008 0002001B 
0000FFC1 00050003 F901FF7A F9EC0008 00030009 00A9FFF6 00050004 6B7FA201 
2AD00008 000400ED 007EFF7C 00050005 80D37D8E 1A630008 00050130 00C3000A 
00050006 7E617182 F70A0008 0006013F 001D003A 00050008 C2260910 098C0008 
00080019 0036006B 00050009 7682DA8E 04B50008 00090004 0006FFF7 0005000A 
02B5FF51 14260008 000AFFD9 005D0005 0005000B FEC6FD1F 872A0008 000B003E 
005BFFFB 0005000C C37B1C57 1EA50008 000CFFFF 003CFFFE 00010001 00050002 
266CF896 0E6E0008 00020013 0006FFD3 00050003 EED3FCCC F12E0008 00030013 
00CBFFEA 00050004 6DA7A415 24A80008 000400F8 0068FF77 00050005 80417D4D 
078A0008 0005014C 007D000B 00050006 796C751C D3E00008 000600F6 FFBA002C 
00050008 00000000 00000008 00080013 005F0052 00050009 8002DA39 00000008 
00090004 0000FFF7 0005000A 0448FE12 22820008 000AFFDF 004C0004 0005000B 
FE8FFD5B 8E490008 000B003B 0060FFFB 0005000C C01E1EB5 1EC80008 000CFFFF 
0038FFFF 00010001 00050002 1D05FBAC 0B910008 0002000C 0010FFE3 00050003 
E553F819 E9440008 00030024 00E5FFD6 00050004 7072A5EA 1DEF0008 00040100 
0050FF72 00050005 7F9F7D55 F4B00008 00050147 0031000A 00050006 F8FC04F7 
32230008 0006007D FFAF0016 00050008 3DDA0910 F6740008 0008001D 007C007D 
00080009 00040001 FFF70005 000A0554 FC5C30D8 0008000A FFE9003F 00030005 
000BFE63 FD9F9566 0008000B 00370063 FFFB0005 000CBC90 21131EA5 0008000C 
FFFF0034 FFFF0001 00010005 0002137A FE060816 00080002 0007001E FFEE0005 
0003DC97 F1C6E269 00080003 003900F5 FFBE0005 000473E4 A76C169C 00080004 
01070036 FF6E0005 00057F14 7DA2E1D8 00080005 0122FFF0 00090005 0006FD09 
009E10C6 00080006 00270000 00070005 00080000 6D607FFE 00080008 00250054 
009F0008 00090004 0002FFF7 0005000A 05B8FA64 3F350008 000AFFF7 00360001 
0005000B FE44FDEA 9C820008 000B0031 0065FFFB 0005000C B8C2236C 1E2E0008 
000C0000 002FFFFF 00010001 00050002 09C9FF80 04290008 00020005 002DFFF4 
00050003 D478EA3B DCB10008 00030051 00F8FFA3 00050004 75ADA7FD 130F0008 
0004010A 0032FF6D 00050005 7EBA7E26 CF030008 000500E6 FFC40007 00050006 
02F7009E EF3A0008 0006002C 00780008 00050008 C2260910 098C0008 0008001C 
0035007C 00080009 00040001 FFF70005 000A0566 F8694DAA 0008000A 00030033 
00000005 000BFE32 FE3AA39E 0008000B 002A0066 FFFB0005 000CB4A1 25BB1D52 
0008000C 00000029 00000001 00010005 00020000 00000000 00080002 0004003D 
FFF50005 0003CC91 E1D3D837 00080003 006800EE FF890005 00047795 A8760F66 
00080004 010C002C FF6B0005 0005FEA6 013B3C30 00080005 009EFFB7 00050005 
00060704 04F7CDDC 00080006 008B00C4 00190005 00080000 00000000 00080008 
0017005C 00630008 00090004 0000FFF7 0005000A 0464F6AA 5C480008 000A0010 
0036FFFE 0005000B FE2FFE8B AAB80008 000B0023 0065FFFB 0005000C B01327F7 
1BFA0008 000C0000 00230000 00010001 00050002 F637FF80 FBD70008 00020006 
004CFFF1 00050003 C41CD8E0 D5680008 0003007B 00D8FF72 00050004 7996A8D6 
0BA40008 0004010E 0025FF6A 00050005 FED900A4 29610008 0005005A FFCB0003 
00050006 8694751C 2C200008 00060105 00AD002F 00050008 3DDA0910 F6740008 
00080021 0079008E 0005000A 02CDF561 6B130008 000A0018 003DFFFD 0005000B 
FE39FEDB B1D30008 000B001A 0062FFFB 0005000C AAF92A19 1A080008 000C0000 
001C0000 00010001 00050002 EC86FE06 F7EA0008 0002000A 0059FFE7 00050003 
38E7B044 56190008 0003008A 00BAFF62 00050004 7BADA91B 07CE0008 00040110 
001BFF69 00050005 FF4A0034 16920008 00050029 FFFA0001 00050006 819F7182 
08F60008 0006014A 0040003C 00050008 00006D60 7FFE0008 00080028 004F00AF 
0005000A 00D5F4BA 7A010008 000A001C 0046FFFD 0005000B FE52FF29 B8EC0008 
000B0010 005EFFFB 0005000C A5302C12 175C0008 000C0000 00150000 00010001 
00050002 E2FAFBAC F46F0008 00020010 0061FFD9 00050003 1FB5B87F 653E0008 
00030091 0095FF59 00050004 7DD2A945 03EA0008 00040111 000EFF69 00050005 
FFE00001 03C20008 00050014 00380000 00050006 7B7772CB E5450008 0006012E 
FFC20036 00050008 C2260910 098C0008 00080020 002E008C 0005000A FEC1F4CD 
88FE0008 000A001A 0051FFFD 0005000B FE77FF71 C0070008 000B0007 0057FFFB 
0005000C 9E912DD2 13D10008 000C0000 000C0000 00010001 00050002 D994F896 
F1920008 00020018 0065FFC8 00050003 E04BB87E 9AC30008 00030090 006EFF5A 
00050004 8002A954 00000008 00040112 0000FF68 00050005 007D0017 F0F40008 
00050021 00790001 00050006 78907806 C2E10008 000600C2 FF7F0023 00050008 
00000000 00000008 0008001A 00540073 0005000A FCD8F597 97E60008 000A0011 
005BFFFE 0005000B FEA8FFB1 C7210008 000BFFFE 004EFFFB 0005000C 97002F45 
0F4C0008 000C0000 00030000 00010001 00050002 D03EF4EF EF750008 00020020 
0063FFB4 00050003 C719B044 A9E70008 00030087 0049FF64 00080004 01130001 
FF680005 00050100 0071DE24 00080005 004D00AC 00020005 0006FA8F 025F217B 
00080006 0050FFA1 000E0005 00083DDA 0910F674 00080008 0024006F 009E0005 
000AFB5B F6FBA6A8 0008000A 00030061 00000005 000BFEE4 FFE8CE3B 0008000B 
FFF40044 FFFB0005 000C9112 30100B83 0008000C 00000006 00000001 00010005 
0002C6D1 F0E8EE3A 00080002 002A005B FF9E0005 00033BE4 D8E02A98 00080003 
0078002A FF760008 00040113 0002FF67 00050005 014E00FC CB560008 0005008F 
00C50004 00050006 00000000 00000008 00060022 000A0006 00050008 00006D60 
7FFE0008 0008002C 004300C0 0005000A FA7BF8CB B53D0008 000AFFF2 00620002 
0005000B FF290013 D5550008 000BFFEA 0037FFFA 0005000C 8AB830A0 074C0008 
000C0000 00080001 00010001 00050002 B9C4F0AB 10320008 00020007 000EFF90 
00050003 336FE1D3 27C90008 00030064 0014FF8D 00080004 01140001 FF670005 
00058157 7E633884 00080005 00D900BD 00070008 00060022 000D0006 00050008 
C2260910 098C0008 00080024 0021009D 0005000A FA4DFACB C3AC0008 000AFFDD 
005D0004 0005000B 0070003A F2F10008 000BFFCF 0023FFFB 0005000C 841130ED 
02C80008 000C0000 00090001 00010001 00050002 30DB86B7 AFC70008 00020025 
FFBFFF9C 00050003 2B88EA3B 234F0008 0003004E 0009FFA7 00080004 01150000 
FF660005 00058117 7DD225B1 00080005 011C0094 00090008 00060022 00100006 
00050008 00000000 00000008 0008001E 00440084 0005000A FAD5FCBA D2060008 
000AFFC9 00510007 0005000B 0180FF7E 10890008 000BFFCA 0004FFFA 0005000C 
7D4930F4 FE250001 00010005 0002305F 7A91CCF5 00080002 0072FF9C FFBD0005 
00032369 F1C61D97 00080003 00370009 FFC00005 0005809D 7D6C12DA 00080005 
01490051 000A0008 00060022 00110006 00050008 3DDA0910 F6740008 00080028 
005D00AF 0005000A FBFFFE5D E05D0008 000AFFB7 003F000A 0005000B 01CEFE3C 
2E210008 000BFFDC FFECFFF8 0005000C 769830B5 F9960008 000C0000 00060001 
00010001 00050002 386E7140 EC200008 000200C0 FFBBFFDF 00050003 1AADF819 
16BC0008 00030024 0015FFD7 00050005 7FFE7D47 00000008 00050159 0000000B 
00080006 00220010 00060005 00080000 6D607FFE 00080008 0030002F 00D00005 
000AFDA7 FF7FEEBA 0008000A FFA80028 000C0005 000B0132 FD184BC3 0008000B 
FFFBFFE4 FFF70005 000C702C 3032F54D 0008000C 00000003 00010001 00010005 
00024572 70610E12 00080002 00E3000B FFEE0005 0003112D FCCC0ED2 00080003 
00150029 FFE80008 00050159 0003000B 00080006 0022000D 00060005 0008C226 
0910098C 00080008 0028000B 00AE0005 000AFF99 FFFDFD1F 0008000A FFA0001B 
000D0005 000BFFFB FCA56976 0008000B 0014FFF1 FFF60005 000C73FC 3088F7D5 
0008000C 00000005 00000001 00010005 00024ECF 78912DE2 00080002 00C50060 
FFE10005 000306FF FF7A0614 00080003 000D0043 FFF10008 00050159 0006000B 
00080006 0022000A 00060005 00080000 00000000 00080008 0022002C 00950005 
000A0197 FFC60B85 0008000A FF9E000C 000D0005 000BFEC6 FD1F872A 0008000B 
001B000A FFF60005 000C77EB 30C7FA7B 00010001 00050002 CFDCFB53 CB1A0008 
00020076 008CFFBF 00050003 FC7EFFDF FCF40008 0003000E 005EFFF0 00080005 
01590007 000B0008 00060022 000B0006 00050008 3DDA0910 F6740008 0008002C 
004200C0 0005000A 0363FEE3 19E60008 000AFFA2 FFFD000D 0005000B FEDAFD0D 
84CB0008 000B001B 0009FFF6 0005000C 7BEF30ED FD380008 000C0000 00030000 
00010001 00050002 C84DF1A4 EA0A0008 00020023 0070FF9B 00050003 F228FDEE 
F4050008 00030016 0078FFE7 00080005 01590006 000B0008 00060022 000C0006 
00050008 00006D60 7FFE0008 00080034 001200E1 0005000A 04C5FD6E 283E0008 
000AFFAC FFEF000B 0005000B FEF0FCFD 826B0008 000B001B 0007FFF6 0005000C 
7FFE30FA 00000008 000C0000 00000000 00010001 00050002 BB5BF024 0BF00008 
0002FFFA 001CFF89 00050003 E867F9DD EBCB0008 00030024 008BFFD6 00080005 
01590003 000B0008 00060022 000B0006 00050008 C2260910 098C0008 0008002C 
FFEC00BE 0005000A 0591FB97 36950008 000AFFBA FFE30009 0005000B FF06FCEE 
800B0008 000B001B 0003FFF6 00010001 00050002 318B8822 ABFE0008 0002000F 
FFBEFF93 00050003 DF6CF40A E4920008 00030039 0094FFBF 00080005 01590000 
000B0008 00060022 000A0006 00050008 00000000 00000008 00080026 000900A5 
0005000A 05AEF996 44F90008 000AFFCA FFDD0007 0008000B 001B0000 FFF60001 
00010005 0003D721 ECDCDE78 00080003 00500093 FFA40008 00050159 0001000B 
0005000A 0513F7AB 537D0008 000AFFDA FFE30005 00010001 00050003 CF36E4B4 
D98E0008 00030067 0085FF89 00080005 01590002 000B0005 000A03D1 F615622D 
0008000A FFE8FFEE 00030001 00010005 0003C712 DBE6D619 00080003 007C006B 
FF710008 00050159 0001000B 0005000A 020CF509 71080008 000AFFF2 FFF90002 
00010001 00050003 3D3CAD3C 55340008 0003008C 0047FF5F 00080005 01590000 
000B0005 000A0000 F4AB7FFE 0008000A FFF60000 00010001 00010003 00000000 
00000000 
}

#new:IdleAnimations $IdleAnimations_8021D018_17 {
.Status:Normal    00790003
.Status:Stone     00790000
.Status:Sleep     0079000A
.Status:Poison    00790003
.Status:Stop      00790000
.Status:Static    00790000
.Status:Paralyze  00790000
.Status:Paralyze  00790000
.Status:Dizzy     0079000A
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D064_17 {
.Status:Normal    00790004
.Status:Stone     00790000
.Status:Sleep     00790004
.Status:Poison    00790004
.Status:Stop      00790000
.Status:Static    00790000
.Status:Paralyze  00790000
.Status:Paralyze  00790000
.Status:Dizzy     0079000C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D0B0_17 {
.Status:Normal    00790010
.Status:Stop      00790000
.Status:End
}

#new:DefenseTable $DefenseTable_8021D0C4_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_8021D0F0_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_8021D11C_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_8021D148_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      25`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      25`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   40`
.Status:Shrink      0`
.Status:Stop       40`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8021D1F4_17 {
00120000 01000000 002800FF $IdleAnimations_8021D018_17 $DefenseTable_8021D0C4_17 00000000 00000000 00F80000 00000000 
00800009 02000000 002800FF 00000000 $DefenseTable_8021D0C4_17 00000000 00000000 00F80000 00000000 
}

#new:Script $Script_Init_8021D264_17 {
    UseArray  $End[788] 
    Call  EnableGroup   ( 00000017 .True )
    Call  EnableGroup   ( 0000001C .False )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Set   *Var[0]  0000001E 
    Call  SetActorVar   ( .Actor:Self 0000000D *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000007 00790003 )
    Call  SetActorVar   ( .Actor:Self 00000008 00790009 )
    Call  ForceHomePos  ( .Actor:Self 0000003D 0000003D 00000000 )
    Call  LoadModelAnimation    ( 00000000 $???_8021C4C0_17 )
    Call  OverrideBattleDmaDest ( $End[9230] )
    Call  LoadBattleDmaData     ( 00000000 )
    Call  PlayModelAnimation    ( 00000000 $End[9230] )
    Call  802CCFE4      ( 00000000 00000000 00000000 00000000 )
    Call  802CD418      ( 00000000 00000080 00000001 )
    Call  LoadModelAnimation    ( 00000001 $???_8021C650_17 )
    Call  OverrideBattleDmaDest ( $End[6230] )
    Call  LoadBattleDmaData     ( 0000001F )
    Call  PlayModelAnimation    ( 00000001 $End[6230] )
    Call  802CCFE4      ( 00000001 00000000 00000000 00000000 )
    Call  802CD418      ( 00000001 00000080 00000001 )
    Call  LoadModelAnimation    ( 00000002 $???_8021C650_17 )
    Call  OverrideBattleDmaDest ( $End[3230] )
    Call  LoadBattleDmaData     ( 0000001F )
    Call  PlayModelAnimation    ( 00000002 $End[3230] )
    Call  802CCFE4      ( 00000002 00000032 0000000E 00000014 )
    Call  802CD418      ( 00000002 00000080 00000001 )
    Call  LoadModelAnimation    ( 00000003 $???_8021C780_17 )
    Call  OverrideBattleDmaDest ( $End[1230] )
    Call  LoadBattleDmaData     ( 00000022 )
    Call  PlayModelAnimation    ( 00000003 $End[1230] )
    Call  802CCFE4      ( 00000003 00000000 00000000 00000003 )
    Call  802CD418      ( 00000003 00000080 00000001 )
    Call  SummonEnemy   ( $SpecialFormation_8021FF04_17 00000000 )
    Call  SummonEnemy   ( $SpecialFormation_8021FF20_17 00000000 )
    Wait  2`
    Exec  $Script_8021DEEC_17 
    Call  802CDBA4      ( 00000000 00B70000 )
    Call  SetNpcYaw     ( 00000000 0000005A )
    Call  SetNpcPos     ( 00000000 FFFFFED4 00000000 00000000 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021FC10_17 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021D6EC_17 )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_8021F5A4_17 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021D8EC_17 )
    Call  ForceHomePos  ( .Actor:Enemy1 00000039 00000039 00000000 )
    Call  ForceHomePos  ( .Actor:Enemy2 0000006B 00000047 00000014 )
    Call  HPBarToHome   ( .Actor:Enemy1 )
    Call  HPBarToHome   ( .Actor:Enemy2 )
    Call  $Function_802188FC_17 ( )
    Return
    End
}

#new:Script $Script_Idle_8021D6EC_17 {
    Label  0
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  00000000 
        Goto  63
    EndIf
    Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[0] )
    If  *Var[0]  ==  00000000 
        Goto  63
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  !=  00000000 
        Goto  63
    EndIf
    Call  GetActorVar   ( .Actor:Self 0000000D *Var[0] )
    Sub   *Var[0]  00000001 
    Call  SetActorVar   ( .Actor:Self 0000000D *Var[0] )
    If  *Var[0]  !=  00000000 
        Goto  63
    EndIf
    Call  GetActorVar   ( .Actor:Self 0000000C *Var[0] )
    Add   *Var[0]  00000001 
    If  *Var[0]  >=  00000003 
        Set   *Var[0]  00000000 
    EndIf
    Set   *Var[0]  0000001E 
    Call  SetActorVar   ( .Actor:Self 0000000D *Var[0] )
    Call  OverrideBattleDmaDest ( $End[9230] )
    Call  LoadBattleDmaData     ( 00000001 )
    Call  PlayModelAnimation    ( 00000000 $End[9230] )
    Label  63
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_NextTurn_8021D8EC_17 {
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000D 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001 
                Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                If  *Var[0]  !&  00000001 
                    ConstOR  *Var[0] 00000001 
                    Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                    ExecWait  $Script_8021D9C8_17 
                EndIf
            EndIf
        Default
    EndSwitch
    Return
    End
}

#new:Script $Script_8021D9C8_17 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  802535B4  ( 00000000 )
    Call  SpeakToPlayer     ( 00000000 FFFFFFFF FFFFFFFF 00000000 00100104 ) % Mario! You shan't fight alone! Kolorado to the res ...
    Thread
        Loop  00000009 
            Call  PlaySoundAtNpc    ( 00000000 000020BA 00000000 )
            Wait  2`
            Call  PlaySoundAtNpc    ( 00000000 000003B4 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Call  SetNpcAnimation   ( 00000000 00B70002 )
    Call  802CE1C0  ( 00000000 *Fixed[2.0] )
    Call  SetNpcSpeed       ( 00000000 *Fixed[10.0] )
    Call  NpcMoveTo ( 00000000 00000046 00000000 00000000 )
    Call  PlaySoundAtNpc    ( 00000000 000000E8 00000000 )
    Call  802CE1C0  ( 00000000 *Fixed[1.0] )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
    Call  SetNpcAnimation   ( 00000000 00B70006 )
    Thread
        Loop  0000000A 
            Call  GetNpcPos     ( 00000000 *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Call  NpcJump0  ( 00000000 00000046 000000B4 00000000 00000014 )
    Call  SpeakToPlayer ( 00000000 FFFFFFFF FFFFFFFF 00000000 00100105 ) % Ow ow OW!! HOT!!!! Oh, it burns! Really!
    Call  SetNpcYaw ( 00000000 0000010E )
    Call  SetNpcPos ( 00000000 00000032 000000B4 00000000 )
    Thread
        Loop  0000000A 
            Call  GetNpcPos     ( 00000000 *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Call  NpcJump0  ( 00000000 00000032 00000000 00000000 00000014 )
    Call  NpcJump0  ( 00000000 00000032 00000000 00000000 00000006 )
    Call  NpcJump0  ( 00000000 00000032 00000000 00000000 00000003 )
    Wait  8`
    Call  SetNpcAnimation   ( 00000000 00B70005 )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[0.7] )
    Call  NpcJump0  ( 00000000 00000032 00000000 00000000 0000000C )
    Thread
        Loop  00000004 
            Call  PlaySoundAtNpc    ( 00000000 000020BA 00000000 )
            Wait  2`
            Call  PlaySoundAtNpc    ( 00000000 000003B4 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Call  SetNpcAnimation   ( 00000000 00B70003 )
    Call  SetNpcSpeed       ( 00000000 *Fixed[8.0] )
    Call  NpcMoveTo ( 00000000 FFFFFFC4 00000000 00000000 )
    Call  SpeakToPlayer     ( 00000000 00B70004 00B70001 00000005 00100106 ) % So sorry, old chap, but that's all I can do at the ...
    Call  PlaySoundAtActor  ( .Actor:Self 00000174 )
    Call  SetNpcAnimation   ( 00000000 00B70003 )
    Call  SetNpcSpeed       ( 00000000 *Fixed[6.0] )
    Call  NpcMoveTo ( 00000000 FFFFFED4 00000000 00000000 )
    Call  802535B4  ( 00000001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021DEEC_17 {
    UseArray  $End[788] 
    Label  0
    Call  802CD7D8  ( 00000000 0000000A *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Enemy0 00000001 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 0000000A *Var[0] *Var[1] *Var[2] )
    Call  SetPartRotation       ( .Actor:Enemy0 00000001 *Var[0] 00000000 *Var[2] )
    Call  $Function_802188EC_17 ( )
    Call  802CD7D8  ( 00000000 0000000A *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000002 
    Call  $Function_8021812C_17 ( 00000000 00000000 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 0000000A *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  0000005A 
    Call  $Function_80218224_17 ( 00000000 00000000 *Var[0] 00000000 *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000000 00000001 00000001 00000001 )
    Call  802CD7D8  ( 00000000 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000001 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000001 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000000 00000009 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000009 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000000 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000003 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000000 00000008 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000004 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000008 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000000 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000005 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000005 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000000 00000007 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000006 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000007 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000006 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000000 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000007 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000007 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000007 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000000 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000000 00000008 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000000 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000000 00000008 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000000 00000008 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000001 00000008 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Enemy1 00000001 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000008 
    Call  SetPartPos    ( .Actor:Enemy1 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000008 *Var[0] *Var[1] *Var[2] )
    Call  SetPartRotation       ( .Actor:Enemy1 00000001 *Var[0] 00000000 *Var[2] )
    Call  802CD7D8  ( 00000001 00000008 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000002 
    Call  $Function_8021812C_17 ( 00000001 00000000 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000008 *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  0000005A 
    Call  $Function_80218224_17 ( 00000001 00000000 *Var[0] 00000000 *Var[2] )
    Call  $Function_802182E4_17 ( 00000001 00000000 00000001 00000001 00000001 )
    Call  802CD7D8  ( 00000001 00000004 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000002 
    Call  $Function_8021812C_17 ( 00000001 00000001 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000001 00000001 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000001 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000001 00000007 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000001 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000007 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000001 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000001 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000001 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000001 00000003 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000001 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000001 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000001 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000001 00000004 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000001 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000001 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000001 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000001 00000005 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000001 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000001 00000005 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000001 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000001 00000006 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000001 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000001 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000001 00000006 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000002 00000008 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Enemy2 00000001 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Enemy2 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000008 *Var[0] *Var[1] *Var[2] )
    Call  SetPartRotation       ( .Actor:Enemy2 00000001 *Var[0] 00000000 *Var[2] )
    Call  802CD7D8  ( 00000002 00000008 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000002 
    Call  $Function_8021812C_17 ( 00000002 00000000 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000008 *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  0000005A 
    Call  $Function_80218224_17 ( 00000002 00000000 *Var[0] 00000000 *Var[2] )
    Call  $Function_802182E4_17 ( 00000002 00000000 00000001 00000001 00000001 )
    Call  802CD7D8  ( 00000002 00000004 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000002 
    Call  $Function_8021812C_17 ( 00000002 00000001 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000002 00000001 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000002 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000002 00000007 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000002 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000007 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000002 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000002 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000002 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000002 00000003 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000002 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000002 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000002 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000002 00000004 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000002 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000002 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000002 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000002 00000005 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000002 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000002 00000005 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000002 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000002 00000006 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000002 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000002 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000002 00000006 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000003 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000003 00000000 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000003 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000003 00000000 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000003 00000000 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000003 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000003 00000001 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000003 00000006 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000003 00000001 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000003 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000003 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000003 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000003 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000003 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000003 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000003 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000003 00000003 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000003 00000005 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000003 00000003 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000003 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  802CD7D8  ( 00000003 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021812C_17 ( 00000003 00000004 *Var[0] *Var[1] *Var[2] )
    Call  802CD8F8  ( 00000003 00000002 *Var[0] *Var[1] *Var[2] )
    Call  $Function_80218224_17 ( 00000003 00000004 *Var[0] *Var[1] *Var[2] )
    Call  $Function_802182E4_17 ( 00000003 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
    Call  GetActorVar   ( .Actor:Self 00000006 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  802CD7D8      ( 00000000 0000000A *Var[1] *Var[2] *Var[3] )
        Call  802CD8F8      ( 00000000 0000000A *Var[4] *Var[5] *Var[6] )
        Set   *Var[7]  0000001E 
        Set   *Var[8]  FFFFFFE2 
        Call  GetActorVar   ( .Actor:Self 0000000A *Var[9] )
        Call  $Function_80218930_17 ( *Var[0] *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[9] )
    EndIf
    Call  GetActorVar   ( .Actor:Enemy1 00000006 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  802CD7D8      ( 00000001 00000008 *Var[1] *Var[2] *Var[3] )
        Call  802CD8F8      ( 00000001 00000008 *Var[4] *Var[5] *Var[6] )
        Set   *Var[7]  0000000A 
        Set   *Var[8]  FFFFFFF1 
        Call  GetActorVar   ( .Actor:Enemy1 0000000A *Var[9] )
        Call  $Function_80218930_17 ( *Var[0] *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[9] )
    EndIf
    Call  GetActorVar   ( .Actor:Enemy2 00000006 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  802CD7D8      ( 00000002 00000008 *Var[1] *Var[2] *Var[3] )
        Call  802CD8F8      ( 00000002 00000008 *Var[4] *Var[5] *Var[6] )
        Set   *Var[7]  0000000A 
        Set   *Var[8]  FFFFFFF1 
        Call  GetActorVar   ( .Actor:Enemy2 0000000A *Var[9] )
        Call  $Function_80218930_17 ( *Var[0] *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[9] )
    EndIf
    Wait  1`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00400000 
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_8021F5A4_17 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  802CD418  ( 00000000 00040000 00000000 )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_802235AC_17 
            ExecWait  $Script_80223D78_17 
        Case  ==  .Event:Hit % A
            ExecWait  $Script_80223764_17 
            ExecWait  $Script_80223D78_17 
        Case  ==  .Event:Death % 20
            ExecWait  $Script_DoDeath_17 
            Return
        Case  ==  .Event:BurnHit % E
            If  *Var[E]  &  00000002 
                ExecWait  $Script_8021F9E8_17 
            Else
                ExecWait  $Script_80223764_17 
                ExecWait  $Script_80223D78_17 
            EndIf
        Case  ==  .Event:BurnDeath % 24
            ExecWait  $Script_DoDeath_17 
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_80223764_17 
            ExecWait  $Script_80223D78_17 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_DoDeath_17 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00790009 
            ExecWait  DoShockHit 
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_DoDeath_17 
            Return
        Case  ==  00000017 % 17
            If  *Var[E]  !&  00000002 
                ExecWait  $Script_802235AC_17 
                ExecWait  $Script_80223D78_17 
            EndIf
        Case  ==  .Event:Immune % 19
            If  *Var[E]  !&  00000002 
                ExecWait  $Script_80223764_17 
                ExecWait  $Script_80223D78_17 
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
        Case  ==  .Event:SpikeTaunt % 1B
        Case  ==  .Event:EndFirstStrike % 35
        Case  ==  .Event:RecoverStatus % 31
            Call  802CD418  ( 00000000 00040000 00000000 )
        Case  ==  00000030 % 30
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00790009 
            ExecWait  DoNormalHit 
            Wait  1000`
        Default
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  ForceHomePos  ( .Actor:Self 0000003D 0000003D 00000000 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[1] )
        If  *Var[1]  ==  00000001 
            Call  ForceHomePos  ( .Actor:Self 0000003D 0000003D 00000000 )
        Else
            Call  ForceHomePos  ( .Actor:Self 00000053 00000043 00000000 )
        EndIf
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00200000 
        Call  802CD418  ( 00000000 00040000 00000001 )
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021F9E8_17 {
    Thread
        Wait  1`
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000000 
            Goto  A
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[2] )
        If  *Var[2]  ==  00000001 
            Goto  A
        EndIf
        Set   *Var[0]  00000200 
        ExecWait  $Script_80222EF0_17 
        Label  A
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000000 
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData ( 0000000E )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Call  SetActorVar       ( .Actor:Self 00000007 00790003 )
            Call  SetActorVar       ( .Actor:Self 00000008 00790009 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D064_17 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D0F0_17 )
            Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_8021D0F0_17 )
            Thread
                Wait  14`
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000000 )
                Call  PlayModelAnimation    ( 00000000 $End[9230] )
            EndThread
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021FC10_17 {
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00400000 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            ExecWait  $Script_8021FF3C_17 
        Default
            Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
            If  *Var[0]  ==  00000001 
                ExecWait  $Script_802204B0_17 
            Else
                Call  GetActorVar   ( .Actor:Self 0000000B *Var[0] )
                Sub   *Var[0]  00000001 
                Call  SetActorVar   ( .Actor:Self 0000000B *Var[0] )
                If  *Var[0]  <=  00000000 
                    Call  EnableIdleScript  ( .Actor:Self 00000000 )
                    Call  UseCamPreset      ( 00000013 )
                    Call  SetBattleCamTarget    ( 00000050 00000046 00000000 )
                    Call  SetBattleCamZoom  ( 0000012C )
                    Call  SetBattleCamOffsetZ   ( 0000001E )
                    Call  MoveBattleCamOver ( 0000001E )
                    Wait  30`
                    Loop  0000000A 
                        Call  OverrideBattleDmaDest ( $End[9230] )
                        Call  LoadBattleDmaData     ( 00000001 )
                        Call  PlayModelAnimation    ( 00000000 $End[9230] )
                        Wait  4`
                    EndLoop
                    Call  UseCamPreset      ( 00000002 )
                    Call  MoveBattleCamOver ( 0000000F )
                    Call  PlaySoundAtActor  ( .Actor:Self 000003BB )
                    Set   *Var[0]  00000200 
                    ExecWait  $Script_80222EF0_17 
                    Call  SetAnimation      ( .Actor:Self 00000001 00790004 )
                    Call  OverrideBattleDmaDest ( $End[9230] )
                    Call  LoadBattleDmaData ( 0000000E )
                    Call  PlayModelAnimation    ( 00000000 $End[9230] )
                    Wait  14`
                    Call  OverrideBattleDmaDest ( $End[9230] )
                    Call  LoadBattleDmaData ( 00000000 )
                    Call  PlayModelAnimation    ( 00000000 $End[9230] )
                    Call  EnableIdleScript  ( .Actor:Self 00000001 )
                EndIf
            EndIf
    EndSwitch
    Return
    End
}

#new:Vector3D $Vector3D_8021FEF8_17 {
260` 0` 0`
}

#new:SpecialFormation $SpecialFormation_8021FF04_17 {
$LavaBud_17 $Vector3D_8021FEF8_17 00000050 00000001 00000000 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_8021FF20_17 {
$LavaBud_17 $Vector3D_8021FEF8_17 00000046 00000002 00000032 0000000E 00000014 
}

#new:Script $Script_8021FF3C_17 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Thread
        Wait  8`
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( 00000050 00000046 00000000 )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 0000001E )
        Call  MoveBattleCamOver ( 0000002D )
        Wait  57`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000F )
    EndThread
    Call  OverrideBattleDmaDest ( $End[9230] )
    Call  LoadBattleDmaData ( 00000002 )
    Call  PlayModelAnimation    ( 00000000 $End[9230] )
    Wait  14`
    Call  SetAnimation      ( .Actor:Self 00000001 00790005 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000003C1 )
    Wait  45`
    Call  SetAnimation      ( .Actor:Self 00000001 00790006 )
    Call  GetPartOffset     ( .Actor:Self 00000001 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000032 
    Sub   *Var[1]  0000000F 
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  00000028 
    Set   *Var[4]  FFFFFFF6 
    Call  PlayEffect        ( 00000063 00000001 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000014 00000014 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000003C3 )
    Wait  19`
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  PlayEffect        ( ~FX:EmitterVolume:Embers *Var[3] 00000000 *Var[5] 00000032 00000032 *Fixed[1.0] 00000028 00000037 *Fixed[1.0] *Fixed[1.0] 00000000 00000000 )
    Call  OverrideBattleDmaDest ( $End[9230] )
    Call  LoadBattleDmaData ( 00000003 )
    Call  PlayModelAnimation    ( 00000000 $End[9230] )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:Fire 00000000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00790003 )
            Wait  19`
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000000 )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Fire 0000FFFF 00000000 00000005 00000020 )
    Set   *Var[F]  *Var[0] 
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  SetAnimation  ( .Actor:Self 00000001 00790003 )
            Wait  19`
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000000 )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  UseCamPreset  ( 00000002 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802204B0_17 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Thread
        Wait  8`
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( 00000050 00000046 00000000 )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 0000001E )
        Call  MoveBattleCamOver ( 0000002D )
        Wait  54`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000F )
    EndThread
    Call  OverrideBattleDmaDest ( $End[9230] )
    Call  LoadBattleDmaData ( 00000002 )
    Call  PlayModelAnimation    ( 00000000 $End[9230] )
    Wait  14`
    Call  SetAnimation      ( .Actor:Self 00000001 0079000E )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000003C1 )
    Wait  45`
    Call  SetAnimation      ( .Actor:Self 00000001 00790008 )
    Call  GetPartOffset     ( .Actor:Self 00000001 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000028 
    Set   *Var[1]  FFFFFFF6 
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  PlayEffect        ( 00000063 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000010 00000028 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000003C4 )
    Wait  15`
    Thread
        Wait  24`
        Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var[3] 00000000 *Var[5] 00000032 00000032 *Fixed[1.0] 00000028 00000037 *Fixed[1.0] *Fixed[1.0] 00000000 00000000 )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:Fire 00000000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  20`
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000003 )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Call  SetAnimation  ( .Actor:Self 00000001 00790007 )
            Wait  19`
            Call  SetAnimation  ( .Actor:Self 00000001 00790004 )
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000000 )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Fire 0000FFFF 00000000 00000007 00000020 )
    Wait  20`
    Call  OverrideBattleDmaDest ( $End[9230] )
    Call  LoadBattleDmaData ( 00000003 )
    Call  PlayModelAnimation    ( 00000000 $End[9230] )
    Call  SetAnimation      ( .Actor:Self 00000001 00790007 )
    Wait  19`
    Call  SetAnimation      ( .Actor:Self 00000001 00790004 )
    Call  OverrideBattleDmaDest ( $End[9230] )
    Call  LoadBattleDmaData ( 00000000 )
    Call  PlayModelAnimation    ( 00000000 $End[9230] )
    If  *Var[F]  ==  0000000A 
        Return
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_DoDeath_17 {
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    ExecWait  $Script_80223764_17 
    Label  0
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  00000100 
        Wait  1`
        Goto  0
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[2] )
    If  *Var[2]  ==  00000000 
        Call  ClearStatusEffects    ( .Actor:Self )
        Call  ClearStatusEffects    ( .Actor:Enemy1 )
        Call  ClearStatusEffects    ( .Actor:Enemy2 )
        Call  802CD418  ( 00000000 00040000 00000000 )
        Call  GetActorVar   ( .Actor:Enemy1 00000000 *Var[0] )
        Call  802CD418  ( *Var[0] 00040000 00000000 )
        Call  GetActorVar   ( .Actor:Enemy2 00000000 *Var[0] )
        Call  802CD418  ( *Var[0] 00040000 00000000 )
        Call  8026E208  ( 00000001 )
        Call  UseCamPreset  ( 00000013 )
        Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
        Call  SetBattleCamZoom      ( 00000168 )
        Call  SetBattleCamOffsetZ   ( 00000000 )
        Call  MoveBattleCamOver     ( 000000F0 )
        Call  OverrideBattleDmaDest ( $End[9230] )
        Call  LoadBattleDmaData     ( 00000009 )
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Call  OverrideBattleDmaDest ( $End[1230] )
        Call  LoadBattleDmaData     ( 00000023 )
        Call  PlayModelAnimation    ( 00000003 $End[1230] )
        Wait  10`
        Call  OverrideBattleDmaDest ( $End[6230] )
        Call  LoadBattleDmaData     ( 00000018 )
        Call  PlayModelAnimation    ( 00000001 $End[6230] )
        Wait  5`
        Call  OverrideBattleDmaDest ( $End[3230] )
        Call  LoadBattleDmaData     ( 00000018 )
        Call  PlayModelAnimation    ( 00000002 $End[3230] )
        Wait  4`
        Thread
            Call  PlaySound ( 000003BC )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000077 *Fixed[0.3] )
            Call  PlaySound ( 000007BC )
        EndThread
        Call  $Function_80218000_17 ( 00000050 000000EA )
        Call  8027D32C  ( FFFFFF81 )
        Call  8027D32C  ( 00000201 )
        Call  8027D32C  ( 00000202 )
        Call  SetAnimation      ( .Actor:Self 00000001 0079000D )
        Call  OverrideBattleDmaDest ( $End[9230] )
        Call  LoadBattleDmaData ( 0000000A )
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Thread
            Call  PlaySoundAtActor  ( .Actor:Self 000003C6 )
            Wait  35`
            Set   *Var[0]  00000000 
            Set   *Var[1]  00000000 
            Loop
                Call  802CD090  ( 00000000 *Var[2] *Var[3] *Var[4] )
                Add   *Var[3]  *Var[1] 
                Call  802CCFE4  ( 00000000 *Var[2] *Var[3] *Var[4] )
                Call  $Function_80218B38_17 ( *Var[0] *Var[1] )
                Add   *Var[0]  00000001 
                Wait  1`
                If  *Var[1]  ==  00000063 
                    BreakLoop
                EndIf
            EndLoop
        EndThread
        Wait  10`
        Call  SetAnimation  ( .Actor:Enemy1 00000001 007B000D )
        Call  OverrideBattleDmaDest ( $End[6230] )
        Call  LoadBattleDmaData     ( 00000019 )
        Call  PlayModelAnimation    ( 00000001 $End[6230] )
        Thread
            Wait  45`
            Set   *Var[0]  00000000 
            Set   *Var[1]  00000000 
            Loop
                Call  802CD090  ( 00000001 *Var[2] *Var[3] *Var[4] )
                Add   *Var[3]  *Var[1] 
                Call  802CCFE4  ( 00000001 *Var[2] *Var[3] *Var[4] )
                Call  $Function_80218B90_17 ( *Var[0] *Var[1] )
                Add   *Var[0]  00000001 
                Wait  1`
                If  *Var[1]  ==  00000063 
                    BreakLoop
                EndIf
            EndLoop
        EndThread
        Wait  5`
        Call  SetAnimation  ( .Actor:Enemy2 00000001 007B000D )
        Call  OverrideBattleDmaDest ( $End[3230] )
        Call  LoadBattleDmaData     ( 00000019 )
        Call  PlayModelAnimation    ( 00000002 $End[3230] )
        Thread
            Wait  45`
            Set   *Var[0]  00000000 
            Set   *Var[1]  00000000 
            Loop
                Call  802CD090  ( 00000002 *Var[2] *Var[3] *Var[4] )
                Add   *Var[3]  *Var[1] 
                Call  802CCFE4  ( 00000002 *Var[2] *Var[3] *Var[4] )
                Call  $Function_80218B90_17 ( *Var[0] *Var[1] )
                Add   *Var[0]  00000001 
                Wait  1`
                If  *Var[1]  ==  00000063 
                    BreakLoop
                EndIf
            EndLoop
        EndThread
        Wait  35`
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
        Call  SetBattleCamZoom  ( 00000168 )
        Call  SetBattleCamOffsetZ   ( FFFFFFD3 )
        Call  MoveBattleCamOver ( 0000006E )
        Wait  60`
        Call  802CCFE4  ( 00000000 00000000 FFFFFF06 00000000 )
        Call  802CCFE4  ( 00000001 00000000 FFFFFF06 00000000 )
        Call  802CCFE4  ( 00000002 00000000 FFFFFF06 00000000 )
        Call  SetActorPos       ( .Actor:Self 00000064 00000000 00000000 )
        Call  DropStarPoints    ( .Actor:Self )
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
        Call  ForceHomePos      ( .Actor:Self 0000003D 0000003D 00000000 )
        Wait  65`
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 000000F0 )
        Call  SetBattleCamOffsetZ   ( 00000028 )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Thread
            Call  $Function_80218A98_17 ( )
        EndThread
        Wait  80`
        Thread
            Call  PlaySound ( 000003BC )
            Call  ShakeCam  ( .Cam:Battle 00000000 000000A5 *Fixed[1.2] )
            Call  PlaySound ( 000007BC )
        EndThread
        Call  $Function_80218000_17 ( 00000050 0000012C )
        Call  UseIdleAnimation  ( .Actor:Player .False )
        Call  SetAnimation      ( .Actor:Player 00000000 0001002A )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Player 00000263 )
        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000014 
        Call  PlayEffect        ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos       ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A 
        Call  PlayEffect        ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
        Wait  50`
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
        Call  SetBattleCamZoom  ( 00000168 )
        Call  SetBattleCamOffsetZ   ( FFFFFFC4 )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  40`
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
        Call  SetBattleCamZoom  ( 000000C8 )
        Call  SetBattleCamOffsetZ   ( FFFFFFC4 )
        Call  MoveBattleCamOver ( 00000028 )
        Wait  40`
        Thread
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
            Wait  40`
            Call  UseIdleAnimation  ( .Actor:Player .True )
        EndThread
        Call  UseCamPreset  ( 00000013 )
        Call  SetBattleCamTarget    ( 0000001E 0000005A 00000000 )
        Call  SetBattleCamZoom      ( 000001CC )
        Call  SetBattleCamOffsetZ   ( 00000000 )
        Call  MoveBattleCamOver     ( 0000001E )
        Call  $Function_80218000_17 ( 000000B4 00000010 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
            Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.0] )
        EndThread
        ChildThread
            Wait  50`
            Call  UseCamPreset  ( 00000013 )
            Call  SetBattleCamTarget    ( 0000005A 0000005A 00000000 )
            Call  SetBattleCamZoom      ( 00000168 )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  MoveBattleCamOver     ( 00000028 )
            Wait  85`
        EndChildThread
        Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        Call  SetActorVar   ( .Actor:Self 00000007 00790004 )
        Call  SetActorVar   ( .Actor:Self 00000008 0079000A )
        Call  SetActorVar   ( .Actor:Enemy1 00000007 007B0004 )
        Call  SetActorVar   ( .Actor:Enemy1 00000008 007B000B )
        Call  SetActorVar   ( .Actor:Enemy2 00000007 007B0004 )
        Call  SetActorVar   ( .Actor:Enemy2 00000008 007B000B )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250D4_17 )
        Call  SetIdleAnimations ( .Actor:Enemy1 00000001 $IdleAnimations_802250D4_17 )
        Call  SetIdleAnimations ( .Actor:Enemy2 00000001 $IdleAnimations_802250D4_17 )
        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D0F0_17 )
        Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_8021D0F0_17 )
        Call  SetDefenseTable   ( .Actor:Enemy1 00000001 $DefenseTable_80225128_17 )
        Call  SetDefenseTable   ( .Actor:Enemy1 00000002 $DefenseTable_80225128_17 )
        Call  SetDefenseTable   ( .Actor:Enemy2 00000001 $DefenseTable_80225128_17 )
        Call  SetDefenseTable   ( .Actor:Enemy2 00000002 $DefenseTable_80225128_17 )
        Call  8026D5A4      ( FFFFFF81 00000001 00000002 00000001 )
        Call  8026D5A4      ( FFFFFF81 00000002 00000002 00000001 )
        Call  8026D5A4      ( 00000201 00000001 00000002 00000001 )
        Call  8026D5A4      ( 00000201 00000002 00000002 00000001 )
        Call  8026D5A4      ( 00000202 00000001 00000002 00000001 )
        Call  8026D5A4      ( 00000202 00000002 00000002 00000001 )
        Call  SetPartFlagBits   ( .Actor:Enemy1 00000002 00002000 .False )
        Call  SetPartFlagBits   ( .Actor:Enemy2 00000002 00002000 .False )
        Set   *Var[0]  00000200 
        ExecWait  $Script_80222EF0_17 
        Call  SetAnimation  ( .Actor:Self 00000001 00790004 )
        Set   *Var[0]  00000201 
        ExecWait  $Script_80222EF0_17 
        Call  SetAnimation  ( .Actor:Enemy1 00000001 007B0004 )
        Set   *Var[0]  00000202 
        ExecWait  $Script_80222EF0_17 
        Call  SetAnimation  ( .Actor:Enemy2 00000001 007B0004 )
        Call  SetActorType  ( .Actor:Self 000000B4 )
        Call  SetActorType  ( .Actor:Enemy1 000000B6 )
        Call  SetActorType  ( .Actor:Enemy2 000000B6 )
        Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
        Call  SetActorFlagBits  ( .Actor:Enemy1 00001000 .True )
        Call  SetActorFlagBits  ( .Actor:Enemy2 00001000 .True )
        Call  GetEnemyMaxHP ( .Actor:Self *Var[0] )
        Call  SetEnemyHP    ( .Actor:Self *Var[0] )
        Call  GetEnemyMaxHP ( .Actor:Enemy1 *Var[0] )
        Call  SetEnemyHP    ( .Actor:Enemy1 *Var[0] )
        Call  GetEnemyMaxHP ( .Actor:Enemy2 *Var[0] )
        Call  SetEnemyHP    ( .Actor:Enemy2 *Var[0] )
        Call  EnableModel   ( 0000004E .True )
        Call  EnableModel   ( 0000004F .True )
        Call  EnableModel   ( 00000050 .True )
        Call  EnableModel   ( 00000051 .True )
        Call  EnableModel   ( 00000052 .True )
        Call  EnableModel   ( 00000053 .True )
        Call  EnableModel   ( 00000054 .True )
        Call  EnableModel   ( 00000055 .True )
        Call  EnableModel   ( 00000057 .True )
        Call  EnableModel   ( 00000058 .True )
        Call  PlaySoundAtActor  ( .Actor:Self 000003C5 )
        Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000064 00000000 00000000 00000046 00000050 *Fixed[2.5] 00000050 00000037 *Fixed[2.0] *Fixed[2.0] 00000000 00000000 )
        Call  LoadModelAnimation    ( 00000004 $???_8021A330_17 )
        Call  PlayModelAnimation    ( 00000004 $???_8021A364_17 )
        Call  802CCFE4      ( 00000004 00000000 00000000 00000000 )
        Call  EnableGroup   ( 00000017 .False )
        Call  EnableGroup   ( 0000001C .True )
        Thread
            Wait  45`
            Call  802CD3C0  ( 00000004 )
        EndThread
        Call  OverrideBattleDmaDest ( $End[9230] )
        Call  LoadBattleDmaData ( 0000000C )
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Call  802CCFE4  ( 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  802CCFE4  ( 00000002 00000032 0000000E 00000014 )
        Call  OverrideBattleDmaDest ( $End[3230] )
        Call  LoadBattleDmaData ( 0000001C )
        Call  PlayModelAnimation    ( 00000002 $End[3230] )
        Wait  10`
        Call  802CCFE4  ( 00000001 00000000 00000000 00000000 )
        Call  OverrideBattleDmaDest ( $End[6230] )
        Call  LoadBattleDmaData ( 0000001C )
        Call  PlayModelAnimation    ( 00000001 $End[6230] )
        Wait  45`
        Call  802CCFE4  ( 00000003 00000000 00000000 00000000 )
        Call  OverrideBattleDmaDest ( $End[1230] )
        Call  LoadBattleDmaData ( 00000024 )
        Call  PlayModelAnimation    ( 00000003 $End[1230] )
        Call  OverrideBattleDmaDest ( $End[9230] )
        Call  LoadBattleDmaData ( 00000000 )
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Call  SetAnimation      ( .Actor:Self 00000001 0079000E )
        Wait  5`
        Call  OverrideBattleDmaDest ( $End[3230] )
        Call  LoadBattleDmaData ( 0000001F )
        Call  PlayModelAnimation    ( 00000002 $End[3230] )
        Wait  10`
        Call  OverrideBattleDmaDest ( $End[6230] )
        Call  LoadBattleDmaData ( 0000001F )
        Call  PlayModelAnimation    ( 00000001 $End[6230] )
        Wait  30`
        Call  OverrideBattleDmaDest ( $End[1230] )
        Call  LoadBattleDmaData ( 00000022 )
        Call  PlayModelAnimation    ( 00000003 $End[1230] )
        Call  GetEnemyMaxHP     ( .Actor:Enemy1 *Var[0] )
        Call  SetEnemyHP        ( .Actor:Enemy1 *Var[0] )
        Call  GetEnemyMaxHP     ( .Actor:Enemy2 *Var[0] )
        Call  SetEnemyHP        ( .Actor:Enemy2 *Var[0] )
        Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
    Else
        Call  8027D32C  ( 00000201 )
        Call  8027D32C  ( 00000202 )
        Set   *Var[0]  00000203 
        ExecWait  $Script_80222B6C_17 
        Set   *Var[0]  00000204 
        ExecWait  $Script_80222B6C_17 
        Call  OverrideBattleDmaDest ( $End[1230] )
        Call  LoadBattleDmaData     ( 00000023 )
        Call  PlayModelAnimation    ( 00000003 $End[1230] )
        Thread
            Call  PlaySound ( 000003BC )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000064 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.2] )
            Call  PlaySound ( 000007BC )
        EndThread
        Call  $Function_80218000_17 ( 00000050 000000D8 )
        Thread
            Call  PlaySoundAtActor  ( .Actor:Self 000003CC )
            Call  GetActorVar       ( .Actor:Self 00000005 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000008 )
                Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Else
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000009 )
                Call  PlayModelAnimation    ( 00000000 $End[9230] )
            EndIf
            Wait  19`
            Call  8027D32C  ( FFFFFF81 )
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 0000000A )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
            If  *Var[0]  ==  00000001 
                Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000069 0000003C 00000002 00000050 0000003C *Fixed[1.8] 0000005A 00000064 *Fixed[1.5] *Fixed[1.5] 00000000 00000000 )
            EndIf
            Wait  121`
            Call  PlaySoundAtActor  ( .Actor:Self 000003CD )
            Call  SetAnimation      ( .Actor:Self 00000001 0079000A )
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData ( 0000000B )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Wait  30`
            Call  GetActorVar       ( .Actor:Self 0000000A *Var[0] )
            Set   *Var[1]  00000064 
            Loop  00000032 
                Sub   *Var[1]  00000002 
                SetF  *Var[2]  *Var[0] 
                MulF  *Var[2]  *Var[1] 
                MulF  *Var[2]  *Fixed[0.01] 
                Call  SetActorVar   ( .Actor:Self 0000000A *Var[2] )
                Wait  1`
            EndLoop
        EndThread
        Thread
            Wait  12`
            Call  GetActorVar   ( .Actor:Enemy1 00000005 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  OverrideBattleDmaDest ( $End[6230] )
                Call  LoadBattleDmaData     ( 00000017 )
                Call  PlayModelAnimation    ( 00000001 $End[6230] )
            Else
                Call  OverrideBattleDmaDest ( $End[6230] )
                Call  LoadBattleDmaData     ( 00000018 )
                Call  PlayModelAnimation    ( 00000001 $End[6230] )
            EndIf
            Wait  19`
            Call  OverrideBattleDmaDest ( $End[6230] )
            Call  LoadBattleDmaData     ( 00000019 )
            Call  PlayModelAnimation    ( 00000001 $End[6230] )
            Call  GetActorVar   ( .Actor:Enemy1 00000005 *Var[0] )
            If  *Var[0]  ==  00000001 
                Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000043 0000001E 00000002 00000032 00000028 *Fixed[1.3] 0000001E 00000046 *Fixed[1.2] *Fixed[1.2] 00000000 00000000 )
            EndIf
            Wait  96`
            Call  OverrideBattleDmaDest ( $End[6230] )
            Call  LoadBattleDmaData     ( 0000001A )
            Call  PlayModelAnimation    ( 00000001 $End[6230] )
            Wait  30`
            Call  GetActorVar   ( .Actor:Enemy1 0000000A *Var[0] )
            Set   *Var[1]  00000064 
            Loop  00000032 
                Sub   *Var[1]  00000002 
                SetF  *Var[2]  *Var[0] 
                MulF  *Var[2]  *Var[1] 
                MulF  *Var[2]  *Fixed[0.01] 
                Call  SetActorVar   ( .Actor:Enemy1 0000000A *Var[2] )
                Wait  1`
            EndLoop
        EndThread
        Thread
            Wait  5`
            Call  GetActorVar   ( .Actor:Enemy2 00000005 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  OverrideBattleDmaDest ( $End[3230] )
                Call  LoadBattleDmaData     ( 00000017 )
                Call  PlayModelAnimation    ( 00000002 $End[3230] )
            Else
                Call  OverrideBattleDmaDest ( $End[3230] )
                Call  LoadBattleDmaData     ( 00000018 )
                Call  PlayModelAnimation    ( 00000002 $End[3230] )
            EndIf
            Wait  19`
            Call  OverrideBattleDmaDest ( $End[3230] )
            Call  LoadBattleDmaData     ( 00000019 )
            Call  PlayModelAnimation    ( 00000002 $End[3230] )
            Call  GetActorVar   ( .Actor:Enemy2 00000005 *Var[0] )
            If  *Var[0]  ==  00000001 
                Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000078 00000023 00000005 00000032 00000028 *Fixed[1.3] 0000001E 00000046 *Fixed[1.2] *Fixed[1.2] 00000000 00000000 )
            EndIf
            Wait  96`
            Call  OverrideBattleDmaDest ( $End[3230] )
            Call  LoadBattleDmaData     ( 0000001A )
            Call  PlayModelAnimation    ( 00000002 $End[3230] )
            Wait  30`
            Call  GetActorVar   ( .Actor:Enemy2 0000000A *Var[0] )
            Set   *Var[1]  00000064 
            Loop  00000032 
                Sub   *Var[1]  00000002 
                SetF  *Var[2]  *Var[0] 
                MulF  *Var[2]  *Var[1] 
                MulF  *Var[2]  *Fixed[0.01] 
                Call  SetActorVar   ( .Actor:Enemy2 0000000A *Var[2] )
                Wait  1`
            EndLoop
        EndThread
        Thread
            Wait  150`
            Set   *Var[0]  0000000E 
            Loop  0000000E 
                Sub   *Var[0]  00000001 
                Call  802CCFE4  ( 00000002 00000032 *Var[0] 00000014 )
                Wait  2`
            EndLoop
        EndThread
        Wait  212`
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
        Call  SetAnimation  ( .Actor:Self 00000001 0079000F )
        Call  SetAnimation  ( .Actor:Enemy1 00000001 007B000F )
        Call  SetAnimation  ( .Actor:Enemy2 00000001 007B000F )
        Call  PlayEffect    ( ~FX:ShockWave:White FFFFFFC4 00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Thread
            Call  $Function_80218000_17 ( 000000B4 00000010 )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[4.0] )
        EndThread
        Wait  3`
        Call  SetActorPos       ( .Actor:Self FFFFFFC4 00000000 00000000 )
        Call  DropStarPoints    ( .Actor:Self )
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
        Wait  15`
        Call  GetActorVar       ( .Actor:Self 00000006 *Var[0] )
        If  *Var[0]  !=  00000000 
            Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
            Call  RemoveEffect  ( *Var[0] )
        EndIf
        Call  GetActorVar   ( .Actor:Enemy1 00000006 *Var[0] )
        If  *Var[0]  !=  00000000 
            Call  SetActorVar   ( .Actor:Enemy1 00000006 00000000 )
            Call  RemoveEffect  ( *Var[0] )
        EndIf
        Call  GetActorVar   ( .Actor:Enemy2 00000006 *Var[0] )
        If  *Var[0]  !=  00000000 
            Call  SetActorVar   ( .Actor:Enemy2 00000006 00000000 )
            Call  RemoveEffect  ( *Var[0] )
        EndIf
        Wait  5`
        Call  SetActorFlagBits  ( .Actor:Enemy0 00400000 .True )
        Call  SetPartFlagBits   ( .Actor:Enemy0 00000001 00020000 .True )
        Call  SetPartFlagBits   ( .Actor:Enemy0 00000002 00020000 .True )
        Call  SetActorFlagBits  ( .Actor:Enemy1 00400000 .True )
        Call  SetActorFlagBits  ( .Actor:Enemy2 00400000 .True )
    EndIf
    Return
    End
}

#new:Unknown $???_80222B68_17 {
00000000 
}

#new:Script $Script_80222B6C_17 {
    Call  ActorExists   ( *Var[0] *Var[1] )
    If  *Var[1]  ==  .False 
        Return
    EndIf
    Call  GetActorHP    ( *Var[0] *Var[1] )
    If  *Var[1]  ==  .False 
        Return
    EndIf
    Thread
        Call  SetAnimation  ( *Var[0] 00000001 007A0003 )
        Wait  10`
        Set   *Var[2]  00000000 
        Loop  00000018 
            Call  SetPartRotation   ( *Var[0] 00000001 00000000 *Var[2] 00000000 )
            Add   *Var[2]  0000001E 
            Wait  1`
        EndLoop
        Call  GetActorPos   ( *Var[0] *Var[3] *Var[4] *Var[5] )
        Call  PlayEffect    ( ~FX:BigSmokePuff *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Set   *Var[3]  00000000 
        Loop  0000000C 
            Call  SetPartRotation   ( *Var[0] 00000001 *Var[3] *Var[2] 00000000 )
            Add   *Var[3]  00000008 
            Wait  1`
        EndLoop
        Call  RemoveActor   ( *Var[0] )
    EndThread
    Return
    End
}

#new:IntTable $IntTable_80222D48_17 {
FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFF 
FFFFFFFE FFFFFFFE FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFE FFFFFFFD FFFFFFFD 
FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFC FFFFFFFC FFFFFFFD FFFFFFFC 
FFFFFFFC FFFFFFFC FFFFFFFB FFFFFFFC FFFFFFFC FFFFFFFB FFFFFFFB FFFFFFFB 
FFFFFFFC FFFFFFFB FFFFFFFA FFFFFFFB FFFFFFFB FFFFFFFA FFFFFFFB FFFFFFFA 
FFFFFFFB FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFF9 FFFFFFFA 
FFFFFFFA FFFFFFF9 FFFFFFFA FFFFFFF9 FFFFFFFA 00000063 
}

#new:IntTable $IntTable_80222E20_17 {
FFFFFFFF 00000000 FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE 
FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFF FFFFFFFD FFFFFFFE FFFFFFFE FFFFFFFD 
FFFFFFFE FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFC FFFFFFFD FFFFFFFC 
FFFFFFFC FFFFFFFD FFFFFFFB FFFFFFFC FFFFFFFC FFFFFFFD FFFFFFFB FFFFFFFB 
FFFFFFFB FFFFFFFB FFFFFFFB FFFFFFFB FFFFFFFB FFFFFFFA FFFFFFFB FFFFFFFA 
FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFF9 FFFFFFFA FFFFFFF9 FFFFFFF9 
FFFFFFF9 FFFFFFF9 FFFFFFF9 00000063 
}

#new:Script $Script_80222EF0_17 {
    Switch  *Var[0] 
        Case  ==  00000201 
            Call  SetActorVar       ( .Actor:Enemy1 0000000A 00000023 )
            Call  802CD7D8  ( 00000001 00000008 *Var[1] *Var[2] *Var[3] )
            Call  802CD8F8  ( 00000001 00000008 *Var[4] *Var[5] *Var[6] )
            Set   *Var[7]  0000000A 
            Set   *Var[8]  FFFFFFF1 
            Call  $Function_80218BE8_17 ( *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[3] *Var[4] )
            Call  GetPartOffset     ( .Actor:Enemy1 00000001 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[2]  00000003 
            Call  PlayEffect        ( ~FX:Fire:LargeRed *Var[3] *Var[4] *Var[2] *Fixed[0.3] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetActorVar       ( .Actor:Enemy1 00000006 *Var[A] )
            Call  SetIdleAnimations ( .Actor:Enemy1 00000001 $IdleAnimations_802250D4_17 )
            Call  SetDefenseTable   ( .Actor:Enemy1 00000001 $DefenseTable_80225128_17 )
            Call  SetDefenseTable   ( .Actor:Enemy1 00000002 $DefenseTable_80225128_17 )
            Call  SetPartEventBits  ( .Actor:Enemy1 00000001 00000002 .True )
            Call  SetPartEventBits  ( .Actor:Enemy1 00000002 00000002 .True )
            Call  SetActorVar       ( .Actor:Enemy1 00000007 007B0004 )
            Call  SetActorVar       ( .Actor:Enemy1 00000008 007B000B )
            Call  SetActorVar       ( .Actor:Enemy1 00000005 00000001 )
            Call  SetPartFlagBits   ( .Actor:Enemy1 00000002 00020000 .False )
            Call  SetActorFlagBits  ( .Actor:Enemy1 00040000 .False )
        Case  ==  00000202 
            Call  SetActorVar       ( .Actor:Enemy2 0000000A 00000023 )
            Call  802CD7D8  ( 00000002 00000008 *Var[1] *Var[2] *Var[3] )
            Call  802CD8F8  ( 00000002 00000008 *Var[4] *Var[5] *Var[6] )
            Set   *Var[7]  0000000A 
            Set   *Var[8]  FFFFFFF1 
            Call  $Function_80218BE8_17 ( *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[3] *Var[4] )
            Call  GetPartOffset     ( .Actor:Enemy2 00000001 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[2]  00000003 
            Call  PlayEffect        ( ~FX:Fire:LargeRed *Var[3] *Var[4] *Var[2] *Fixed[0.3] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetActorVar       ( .Actor:Enemy2 00000006 *Var[A] )
            Call  SetIdleAnimations ( .Actor:Enemy2 00000001 $IdleAnimations_802250D4_17 )
            Call  SetDefenseTable   ( .Actor:Enemy2 00000001 $DefenseTable_80225128_17 )
            Call  SetDefenseTable   ( .Actor:Enemy2 00000002 $DefenseTable_80225128_17 )
            Call  SetPartEventBits  ( .Actor:Enemy2 00000001 00000002 .True )
            Call  SetPartEventBits  ( .Actor:Enemy2 00000002 00000002 .True )
            Call  SetActorVar       ( .Actor:Enemy2 00000007 007B0004 )
            Call  SetActorVar       ( .Actor:Enemy2 00000008 007B000B )
            Call  SetActorVar       ( .Actor:Enemy2 00000005 00000001 )
            Call  SetPartFlagBits   ( .Actor:Enemy2 00000002 00020000 .False )
            Call  SetActorFlagBits  ( .Actor:Enemy2 00040000 .False )
        Default
            Call  SetActorVar   ( .Actor:Enemy0 0000000A 00000046 )
            Call  802CD7D8      ( 00000000 0000000A *Var[1] *Var[2] *Var[3] )
            Call  802CD8F8      ( 00000000 0000000A *Var[4] *Var[5] *Var[6] )
            Set   *Var[7]  0000001E 
            Set   *Var[8]  FFFFFFE2 
            Call  $Function_80218BE8_17 ( *Var[1] *Var[2] *Var[6] *Var[7] *Var[8] *Var[3] *Var[4] )
            Call  GetPartOffset ( .Actor:Enemy0 00000001 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[2]  00000003 
            Call  PlayEffect    ( ~FX:Fire:LargeRed *Var[3] *Var[4] *Var[2] *Fixed[0.7] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetActorVar   ( .Actor:Enemy0 00000006 *Var[A] )
            Call  SetIdleAnimations ( .Actor:Enemy0 00000001 $IdleAnimations_8021D064_17 )
            Call  SetDefenseTable   ( .Actor:Enemy0 00000001 $DefenseTable_8021D0F0_17 )
            Call  SetDefenseTable   ( .Actor:Enemy0 00000002 $DefenseTable_8021D0F0_17 )
            Call  SetPartEventBits  ( .Actor:Enemy0 00000001 00000002 .True )
            Call  SetPartEventBits  ( .Actor:Enemy0 00000002 00000002 .True )
            Call  SetActorVar   ( .Actor:Enemy0 00000007 00790004 )
            Call  SetActorVar   ( .Actor:Enemy0 00000008 0079000A )
            Call  SetActorVar   ( .Actor:Enemy0 00000005 00000001 )
            Call  ForceHomePos  ( .Actor:Self 0000003D 0000003D 00000000 )
            Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
    EndSwitch
    Return
    End
}

#new:Script $Script_802235AC_17 {
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  ==  00000002 
        Call  GetLastDamage ( .Actor:Self *Var[0] )
        If  *Var[0]  <  00000004 
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000005 )
        Else
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000004 )
        EndIf
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Wait  29`
        Wait  14`
    Else
        Call  GetLastDamage ( .Actor:Self *Var[0] )
        If  *Var[0]  <  00000004 
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000007 )
        Else
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000006 )
        EndIf
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Wait  29`
        Wait  14`
    EndIf
    Return
    End
}

#new:Script $Script_80223764_17 {
    ExecWait  $Script_80223780_17 
    Return
    End
}

#new:Script $Script_80223780_17 {
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  GetLastDamage ( .Actor:Self *Var[0] )
        If  *Var[0]  <  00000004 
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000007 )
        Else
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000006 )
        EndIf
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Wait  29`
        Wait  14`
        Return
    EndIf
    If  *Var[E]  &  0000000C 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000000 
            Call  GetLastDamage ( .Actor:Self *Var[0] )
            If  *Var[0]  <  00000004 
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000005 )
            Else
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000004 )
            EndIf
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Wait  29`
            Wait  14`
        Else
            Call  SetActorVar   ( .Actor:Self 0000000B 00000002 )
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData     ( 00000006 )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Call  GetActorVar   ( .Actor:Self 00000006 *Var[0] )
            If  *Var[0]  !=  00000000 
                Call  RemoveEffect  ( *Var[0] )
                Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var[0] *Var[1] *Var[2] *Fixed[3.0] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndIf
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D0B0_17 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D11C_17 )
            Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_8021D11C_17 )
            Call  SetActorVar       ( .Actor:Self 00000007 0079000A )
            Call  SetActorVar       ( .Actor:Self 00000008 00790009 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
            Wait  29`
            Call  PlaySoundAtActor  ( .Actor:Self 000003C8 )
            Call  OverrideBattleDmaDest ( $End[9230] )
            Call  LoadBattleDmaData ( 0000000D )
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Wait  14`
            Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
        EndIf
    Else
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000000 
            Call  GetLastDamage ( .Actor:Self *Var[0] )
            If  *Var[0]  <  00000004 
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000005 )
            Else
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000004 )
            EndIf
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Wait  29`
            Wait  14`
        Else
            Call  GetLastDamage ( .Actor:Self *Var[0] )
            If  *Var[0]  <  00000004 
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000007 )
            Else
                Call  OverrideBattleDmaDest ( $End[9230] )
                Call  LoadBattleDmaData     ( 00000006 )
            EndIf
            Call  PlayModelAnimation    ( 00000000 $End[9230] )
            Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000050 00000032 00000000 0000003C 00000032 *Fixed[1.5] 00000024 0000002A *Fixed[0.8] *Fixed[0.8] 00000000 00000000 )
            Wait  29`
            Wait  14`
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_80223D78_17 {
    Call  GetActorVar   ( .Actor:Self 00000007 *Var[0] )
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  OverrideBattleDmaDest ( $End[9230] )
        Call  LoadBattleDmaData     ( 00000000 )
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  OverrideBattleDmaDest ( $End[9230] )
        Call  LoadBattleDmaData     ( 00000001 )
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
    Else
        Call  OverrideBattleDmaDest ( $End[9230] )
        Call  LoadBattleDmaData     ( 00000000 )
        Call  PlayModelAnimation    ( 00000000 $End[9230] )
    EndIf
    Return
    End
}

#new:Actor $PetitPiranha_17 {
% stats
[Index]        B7b 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223F50_17 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80223FFC_17 
[Script]      $Script_Init_80224048_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802250C0_17 {
.Status:Normal    007B0003
.Status:Stop      007B0002
.Status:End
}

#new:IdleAnimations $IdleAnimations_802250D4_17 {
.Status:Normal    007B0004
.Status:Stop      007B0002
.Status:End
}

#new:IdleAnimations $IdleAnimations_802250E8_17 {
.Status:Normal    007B000F
.Status:Stop      007B000F
.Status:End
}

#new:DefenseTable $DefenseTable_802250FC_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80225128_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80225154_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_80225180_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      75`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink      0`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8022522C_17 {
00120000 01000000 000000FF $IdleAnimations_802250C0_17 $DefenseTable_802250FC_17 00000000 00000000 00F80000 00000000 
00900021 02000000 000000FF 00000000 $DefenseTable_802250FC_17 00000000 00000000 00F80000 00000000 
}

#new:Actor $LavaBud_17 {
% stats
[Index]        B5b 
[Level]         0`b 
[MaxHP]         8`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80225180_17 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8022522C_17 
[Script]      $Script_Init_8022529C_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]    10`b -42`b % dx dy
[StatusTurn]  -18`b  10`b % dx dy
[StatusIcon]    0`b   0`b % dx dy
}

#new:Script $Script_Init_8022529C_17 {
    UseArray  $End[890] 
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
    Call  RandInt       ( 00000014 *Var[0] )
    Add   *Var[0]  0000000F 
    Call  SetActorVar   ( .Actor:Self 0000000D *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000007 007B0003 )
    Call  SetActorVar   ( .Actor:Self 00000008 007B0009 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225D98_17 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802253F0_17 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225738_17 )
    Return
    End
}

#new:Script $Script_Idle_802253F0_17 {
    Label  0
    Call  GetActorHP    ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  ==  00000000 
        Goto  63
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00400000 
        Goto  63
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  !=  00000002 
        Goto  63
    EndIf
    Label  A
    Call  GetActorVar   ( .Actor:Self 0000000D *Var[0] )
    Sub   *Var[0]  00000001 
    Call  SetActorVar   ( .Actor:Self 0000000D *Var[0] )
    If  *Var[0]  !=  00000000 
        Goto  63
    EndIf
    Call  GetActorVar   ( .Actor:Self 0000000C *Var[0] )
    Add   *Var[0]  00000001 
    If  *Var[0]  >=  00000003 
        Set   *Var[0]  00000000 
    EndIf
    Call  SetActorVar   ( .Actor:Self 0000000C *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  RandInt   ( 00000032 *Var[0] )
            Add   *Var[0]  00000019 
        Case  ==  00000001 
            Call  RandInt   ( 00000028 *Var[0] )
            Add   *Var[0]  00000014 
        Default
            Call  RandInt   ( 00000003 *Var[0] )
            Add   *Var[0]  00000003 
    EndSwitch
    Call  SetActorVar   ( .Actor:Self 0000000D *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  OverrideBattleDmaDest ( $End[6230] )
    Else
        Call  OverrideBattleDmaDest ( $End[3230] )
    EndIf
    Call  LoadBattleDmaData ( 0000001E )
    ExecWait  $Script_802256E0_17 
    Label  63
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_802256E0_17 {
    If  *Var[0]  ==  00000001 
        Call  PlayModelAnimation    ( *Var[0] $End[6230] )
    Else
        Call  PlayModelAnimation    ( *Var[0] $End[3230] )
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_80225738_17 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Call  802CD418  ( *Var[0] 00040000 00000000 )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_802270B4_17 
        Case  ==  .Event:Hit % A
            ExecWait  $Script_802275E4_17 
        Case  ==  .Event:BurnHit % E
            If  *Var[E]  &  00000002 
                ExecWait  $Script_80225AA8_17 
            Else
                ExecWait  $Script_802275E4_17 
            EndIf
        Case  ==  .Event:BurnDeath % 24
            ExecWait  $Script_80226B58_17 
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_802275E4_17 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_80226B58_17 
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[1] )
            ExecWait  DoShockHit 
        Case  ==  .Event:ShockDeath % 26
            ExecWait  DoShockHit 
        Case  ==  00000017 % 17
            If  *Var[E]  !&  00000002 
                ExecWait  $Script_802270B4_17 
            EndIf
        Case  ==  .Event:Immune % 19
            If  *Var[E]  !&  00000002 
                ExecWait  $Script_802275E4_17 
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
        Case  ==  .Event:SpikeTaunt % 1B
        Case  ==  .Event:Death % 20
            ExecWait  $Script_80226B58_17 
        Case  ==  .Event:EndFirstStrike % 35
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Call  802CD418      ( *Var[0] 00040000 00000000 )
        Case  ==  00000030 % 30
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[1] )
            ExecWait  DoNormalHit 
            Wait  1000`
        Default
    EndSwitch
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00200000 
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        Call  802CD418      ( *Var[0] 00040000 00000001 )
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80225AA8_17 {
    Thread
        Wait  1`
        Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[0] )
        If  *Var[0]  ==  00000000 
            Goto  A
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[2] )
        If  *Var[2]  ==  00000001 
            Goto  A
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001 
            Set   *Var[0]  00000201 
        Else
            Set   *Var[0]  00000202 
        EndIf
        ExecWait  $Script_80222EF0_17 
        Label  A
    EndThread
    Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000002 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001 
                Call  OverrideBattleDmaDest ( $End[6230] )
            Else
                Call  OverrideBattleDmaDest ( $End[3230] )
            EndIf
            Call  LoadBattleDmaData ( 0000001D )
            ExecWait  $Script_802256E0_17 
            Call  SetActorVar       ( .Actor:Self 00000007 007B0003 )
            Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250D4_17 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225128_17 )
            Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225128_17 )
            Thread
                Wait  14`
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 0000001F )
                ExecWait  $Script_802256E0_17 
            EndThread
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80225D98_17 {
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00400000 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000002 
            Return
        EndIf
        ExecWait  $Script_ShootBombs_17 
    Else
        Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
        If  *Var[1]  !=  00000000 
            Sub   *Var[1]  00000001 
            Call  SetActorVar   ( .Actor:Self 00000004 *Var[1] )
            Return
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000001 
            If  *Var[1]  !=  00000000 
                Return
            EndIf
            Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
            ExecWait  $Script_8022646C_17 
        Else
            Call  GetActorVar   ( .Actor:Self 0000000B *Var[0] )
            Sub   *Var[0]  00000001 
            Call  SetActorVar   ( .Actor:Self 0000000B *Var[0] )
            If  *Var[0]  <=  00000000 
                Call  EnableIdleScript  ( .Actor:Self 00000000 )
                Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  ==  00000001 
                    Call  UseCamPreset  ( 00000013 )
                    Call  SetBattleCamTarget    ( 00000028 0000001E 00000000 )
                    Call  SetBattleCamZoom      ( 0000010E )
                    Call  SetBattleCamOffsetZ   ( 00000014 )
                    Call  MoveBattleCamOver     ( 0000001E )
                Else
                    Call  UseCamPreset  ( 00000013 )
                    Call  SetBattleCamTarget    ( 0000006E 00000023 00000000 )
                    Call  SetBattleCamZoom      ( 0000012C )
                    Call  SetBattleCamOffsetZ   ( 00000014 )
                    Call  MoveBattleCamOver     ( 0000001E )
                EndIf
                Wait  30`
                Loop  0000000A 
                    If  *Var[0]  ==  00000001 
                        Call  OverrideBattleDmaDest ( $End[6230] )
                    Else
                        Call  OverrideBattleDmaDest ( $End[3230] )
                    EndIf
                    Call  LoadBattleDmaData ( 0000001E )
                    ExecWait  $Script_802256E0_17 
                    Wait  4`
                EndLoop
                Call  UseCamPreset  ( 00000002 )
                Call  MoveBattleCamOver ( 0000000F )
                Call  GetEnemyMaxHP ( .Actor:Self *Var[0] )
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
                Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  ==  00000001 
                    Set   *Var[0]  00000201 
                Else
                    Set   *Var[0]  00000202 
                EndIf
                Call  PlaySoundAtActor  ( *Var[0] 000020BF )
                ExecWait  $Script_80222EF0_17 
                Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 0000001D )
                ExecWait  $Script_802256E0_17 
                Wait  14`
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 0000001F )
                ExecWait  $Script_802256E0_17 
                Call  GetEnemyMaxHP     ( .Actor:Self *Var[0] )
                Call  SetEnemyHP        ( .Actor:Self *Var[0] )
                Call  EnableIdleScript  ( .Actor:Self 00000001 )
            EndIf
        EndIf
    EndIf
    ExecWait  $Script_8022630C_17 
    Return
    End
}

#new:Script $Script_8022630C_17 {
    Call  GetActorVar   ( .Actor:Self 00000007 *Var[0] )
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[3] )
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[3] )
    If  *Var[3]  ==  00000002 
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 0000001E )
        ExecWait  $Script_802256E0_17 
    Else
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 0000001F )
        ExecWait  $Script_802256E0_17 
    EndIf
    Return
    End
}

#new:Script $Script_8022646C_17 {
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  ==  00000002 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
    If  *Var[0]  !=  00000000 
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Thread
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Wait  8`
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 0000001E )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  45`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000014 )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  OverrideBattleDmaDest ( $End[6230] )
    Else
        Call  OverrideBattleDmaDest ( $End[3230] )
    EndIf
    Call  LoadBattleDmaData ( 00000012 )
    ExecWait  $Script_802256E0_17 
    Thread
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 007B0007 )
        Wait  34`
        Call  SetAnimation  ( .Actor:Self 00000001 007B0008 )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 0000001F )
        ExecWait  $Script_802256E0_17 
    EndThread
    Wait  56`
    If  *Var[0]  ==  00000001 
        Call  SummonEnemy   ( $SpecialFormation_80226B04_17 00000000 )
    Else
        Call  SummonEnemy   ( $SpecialFormation_80226B20_17 00000000 )
    EndIf
    Set   *Var[5]  *Var[0] 
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
    Add   *Var[0]  00000001 
    Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetActorVar   ( *Var[5] 00000000 00000201 )
    Else
        Call  SetActorVar   ( *Var[5] 00000000 00000202 )
    EndIf
    Call  GetPartOffset ( .Actor:Self 00000001 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000F 
    Sub   *Var[1]  0000000F 
    Call  SetActorPos   ( *Var[5] *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  PlaySoundAtActor  ( *Var[5] 000003C9 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[9] )
    If  *Var[9]  ==  00000001 
        Call  GetActorPos   ( *Var[5] *Var[0] *Var[1] *Var[2] )
        Set   *Var[0]  FFFFFFF4 
        Set   *Var[1]  00000050 
        Call  SetGoalPos    ( *Var[5] *Var[0] *Var[1] *Var[2] )
        Call  SetHomePos    ( *Var[5] *Var[0] *Var[1] *Var[2] )
        Call  SetActorSpeed ( *Var[5] *Fixed[4.0] )
        Call  SetActorJumpGravity   ( *Var[5] *Fixed[1.0] )
        Call  FlyToGoal     ( *Var[5] 00000018 FFFFFFD6 .Easing:QuarticOut )
    Else
        Call  GetActorPos   ( *Var[5] *Var[0] *Var[1] *Var[2] )
        Set   *Var[0]  00000012 
        Set   *Var[1]  0000001C 
        Call  SetGoalPos    ( *Var[5] *Var[0] *Var[1] *Var[2] )
        Call  SetHomePos    ( *Var[5] *Var[0] *Var[1] *Var[2] )
        Call  SetActorSpeed ( *Var[5] *Fixed[5.0] )
        Call  SetActorJumpGravity   ( *Var[5] *Fixed[1.2] )
        Call  FlyToGoal     ( *Var[5] 00000010 FFFFFFF1 .Easing:CubicOut )
    EndIf
    Call  HPBarToHome   ( *Var[5] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  OverrideBattleDmaDest ( $End[6230] )
    Else
        Call  OverrideBattleDmaDest ( $End[3230] )
    EndIf
    Call  LoadBattleDmaData ( 0000001F )
    ExecWait  $Script_802256E0_17 
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Vector3D $Vector3D_80226AF8_17 {
260` 0` 0`
}

#new:SpecialFormation $SpecialFormation_80226B04_17 {
$PetitPiranha_17 $Vector3D_80226AF8_17 0000005F FFFFFFF4 00000055 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80226B20_17 {
$PetitPiranha_17 $Vector3D_80226AF8_17 0000005E 00000012 00000026 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80226B3C_17 {
$PetitPiranhaBomb_17 $Vector3D_80226AF8_17 0000005F 00000000 00000000 00000000 00000000 
}

#new:Script $Script_80226B58_17 {
    Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[0] )
    If  *Var[0]  !=  00000000 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000002 
            ExecWait  $Script_802275E4_17 
            Return
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
        Call  SetAnimation  ( .Actor:Self 00000001 *Var[0] )
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 00000015 )
        ExecWait  $Script_802256E0_17 
        Call  SetActorVar       ( .Actor:Self 0000000B 00000002 )
        Call  GetActorVar       ( .Actor:Self 00000006 *Var[0] )
        If  *Var[0]  !=  00000000 
            Call  RemoveEffect  ( *Var[0] )
            Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
        EndIf
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225154_17 )
        Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225154_17 )
        Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
        Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
        Call  SetAnimation      ( .Actor:Self 00000001 007B000F )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
        Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
        Wait  29`
        Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 0000001B )
        ExecWait  $Script_802256E0_17 
        Wait  14`
        Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
        Call  GetActorVar       ( .Actor:Enemy0 00000001 *Var[F] )
        If  *Var[F]  ==  00000000 
            ExecWait  $Script_8022630C_17 
        EndIf
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 00000015 )
        ExecWait  $Script_802256E0_17 
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
        Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
        Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
        Wait  29`
        Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 0000001B )
        ExecWait  $Script_802256E0_17 
        Wait  14`
        Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
        ExecWait  $Script_8022630C_17 
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00022000 .True )
        Call  SetActorFlagBits  ( .Actor:Self 00040000 .True )
    Else
        ExecWait  $Script_802275E4_17 
        Return
    EndIf
    Return
    End
}

#new:Script $Script_802270B4_17 {
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[1] )
    If  *Var[1]  ==  00000000 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[5] )
        If  *Var[5]  !=  00000002 
            Call  GetLastDamage ( .Actor:Self *Var[5] )
            If  *Var[5]  <  00000004 
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000016 )
            Else
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000015 )
            EndIf
            ExecWait  $Script_802256E0_17 
            Wait  29`
        Else
            Call  GetLastDamage ( .Actor:Self *Var[5] )
            If  *Var[5]  <  00000004 
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000014 )
            Else
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000013 )
            EndIf
            ExecWait  $Script_802256E0_17 
            Wait  29`
        EndIf
    Else
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[5] )
        If  *Var[5]  ==  00000001 
            Call  GetLastDamage ( .Actor:Self *Var[5] )
            If  *Var[5]  <  00000004 
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000016 )
            Else
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000015 )
            EndIf
            ExecWait  $Script_802256E0_17 
            Wait  29`
        Else
            Call  GetLastDamage ( .Actor:Self *Var[5] )
            If  *Var[5]  <  00000004 
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000014 )
            Else
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000013 )
            EndIf
            ExecWait  $Script_802256E0_17 
            Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
            Sub   *Var[2]  00000019 
            Add   *Var[3]  00000002 
            Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var[1] *Var[2] *Var[3] 00000028 00000032 *Fixed[1.2] 00000018 0000002A *Fixed[0.8] *Fixed[0.6] 00000000 00000000 )
            Wait  29`
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_802275E4_17 {
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var[5] )
    If  *Var[5]  ==  00000000 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[5] )
        If  *Var[5]  ==  00000000 
            Call  GetLastDamage ( .Actor:Self *Var[5] )
            If  *Var[5]  <  00000004 
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000016 )
            Else
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000015 )
            EndIf
            ExecWait  $Script_802256E0_17 
            Wait  29`
        Else
            Call  GetLastDamage ( .Actor:Self *Var[5] )
            If  *Var[5]  <  00000004 
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000014 )
            Else
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000013 )
            EndIf
            ExecWait  $Script_802256E0_17 
            Wait  29`
        EndIf
    Else
        If  *Var[E]  &  0000000C 
            Call  GetActorVar   ( .Actor:Self 00000005 *Var[3] )
            If  *Var[3]  ==  00000002 
                Call  GetLastDamage ( .Actor:Self *Var[5] )
                If  *Var[5]  <  00000004 
                    If  *Var[0]  ==  00000001 
                        Call  OverrideBattleDmaDest ( $End[6230] )
                    Else
                        Call  OverrideBattleDmaDest ( $End[3230] )
                    EndIf
                    Call  LoadBattleDmaData ( 00000014 )
                Else
                    If  *Var[0]  ==  00000001 
                        Call  OverrideBattleDmaDest ( $End[6230] )
                    Else
                        Call  OverrideBattleDmaDest ( $End[3230] )
                    EndIf
                    Call  LoadBattleDmaData ( 00000013 )
                EndIf
                ExecWait  $Script_802256E0_17 
                Wait  29`
            Else
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 00000015 )
                ExecWait  $Script_802256E0_17 
                Call  SetActorVar       ( .Actor:Self 0000000B 00000002 )
                Call  GetActorVar       ( .Actor:Self 00000006 *Var[0] )
                If  *Var[0]  !=  00000000 
                    Call  RemoveEffect  ( *Var[0] )
                    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var[0] *Var[1] *Var[2] *Fixed[2.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                EndIf
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225154_17 )
                Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225154_17 )
                Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
                Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
                Call  SetAnimation      ( .Actor:Self 00000001 007B000F )
                Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
                Wait  29`
                Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
                Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  ==  00000001 
                    Call  OverrideBattleDmaDest ( $End[6230] )
                Else
                    Call  OverrideBattleDmaDest ( $End[3230] )
                EndIf
                Call  LoadBattleDmaData ( 0000001B )
                ExecWait  $Script_802256E0_17 
                Wait  14`
                Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
            EndIf
        Else
            Call  GetActorVar   ( .Actor:Self 00000005 *Var[3] )
            If  *Var[3]  ==  00000002 
                Call  GetLastDamage ( .Actor:Self *Var[5] )
                If  *Var[5]  ==  00000000 
                    Return
                EndIf
                Call  GetLastDamage ( .Actor:Self *Var[5] )
                If  *Var[5]  <  00000004 
                    If  *Var[0]  ==  00000001 
                        Call  OverrideBattleDmaDest ( $End[6230] )
                    Else
                        Call  OverrideBattleDmaDest ( $End[3230] )
                    EndIf
                    Call  LoadBattleDmaData ( 00000014 )
                Else
                    If  *Var[0]  ==  00000001 
                        Call  OverrideBattleDmaDest ( $End[6230] )
                    Else
                        Call  OverrideBattleDmaDest ( $End[3230] )
                    EndIf
                    Call  LoadBattleDmaData ( 00000013 )
                EndIf
                ExecWait  $Script_802256E0_17 
                Wait  29`
            Else
                Call  GetLastDamage ( .Actor:Self *Var[5] )
                If  *Var[5]  <  00000004 
                    If  *Var[0]  ==  00000001 
                        Call  OverrideBattleDmaDest ( $End[6230] )
                    Else
                        Call  OverrideBattleDmaDest ( $End[3230] )
                    EndIf
                    Call  LoadBattleDmaData ( 00000016 )
                Else
                    If  *Var[0]  ==  00000001 
                        Call  OverrideBattleDmaDest ( $End[6230] )
                    Else
                        Call  OverrideBattleDmaDest ( $End[3230] )
                    EndIf
                    Call  LoadBattleDmaData ( 00000015 )
                EndIf
                ExecWait  $Script_802256E0_17 
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
                Sub   *Var[2]  00000019 
                Add   *Var[3]  00000002 
                Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var[1] *Var[2] *Var[3] 00000028 00000032 *Fixed[1.2] 00000018 0000002A *Fixed[0.8] *Fixed[0.6] 00000000 00000000 )
                Wait  29`
            EndIf
        EndIf
    EndIf
    Call  GetActorVar   ( .Actor:Enemy0 00000001 *Var[F] )
    If  *Var[F]  ==  00000000 
        ExecWait  $Script_8022630C_17 
    EndIf
    Return
    End
}

#new:Script $Script_ShootBombs_17 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Thread
        Wait  8`
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[1]  00000019 
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 0000015E )
        Call  SetBattleCamOffsetZ   ( 0000001E )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  45`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000014 )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  OverrideBattleDmaDest ( $End[6230] )
    Else
        Call  OverrideBattleDmaDest ( $End[3230] )
    EndIf
    Call  LoadBattleDmaData ( 00000012 )
    ExecWait  $Script_802256E0_17 
    Thread
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 007B0005 )
        Wait  39`
        Call  SetAnimation  ( .Actor:Self 00000001 007B0006 )
        Wait  5`
        Call  SetAnimation  ( .Actor:Self 00000001 007B0003 )
        If  *Var[0]  ==  00000001 
            Call  OverrideBattleDmaDest ( $End[6230] )
        Else
            Call  OverrideBattleDmaDest ( $End[3230] )
        EndIf
        Call  LoadBattleDmaData ( 0000001F )
        ExecWait  $Script_802256E0_17 
    EndThread
    Wait  56`
    Call  SummonEnemy       ( $SpecialFormation_80226B3C_17 00000000 )
    Set   *Var[5]  *Var[0] 
    Call  GetPartOffset     ( .Actor:Self 00000001 *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000F 
    Sub   *Var[1]  0000000F 
    Call  SetActorPos       ( *Var[5] *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000001E 
    Sub   *Var[1]  0000000F 
    Call  SetAnimation      ( *Var[5] 00000001 007A0005 )
    Call  SetGoalPos        ( *Var[5] *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed     ( *Var[5] *Fixed[6.0] )
    Call  SetActorJumpGravity   ( *Var[5] *Fixed[1.8] )
    Call  PlaySoundAtActor  ( *Var[5] 000003CB )
    Call  SetTargetActor    ( *Var[5] .Actor:Player )
    Call  SetGoalToTarget   ( *Var[5] )
    Call  EnemyTestTarget   ( *Var[5] *Var[9] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[9] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetGoalToTarget       ( *Var[5] )
            Call  GetGoalPos    ( *Var[5] *Var[0] *Var[1] *Var[2] )
            Set   *Var[0]  FFFFFF4C 
            Call  SetGoalPos    ( *Var[5] *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( *Var[5] *Fixed[13.0] )
            Call  SetActorJumpGravity   ( *Var[5] *Fixed[1.8] )
            Call  FlyToGoal     ( *Var[5] 00000000 00000000 .Easing:Linear )
            If  *Var[9]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( *Var[5] *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset  ( 00000002 )
            Call  RemoveActor   ( *Var[5] )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( *Var[5] .Actor:Player )
    Call  SetGoalToTarget   ( *Var[5] )
    Call  SetActorSpeed     ( *Var[5] *Fixed[13.0] )
    Call  SetActorJumpGravity   ( *Var[5] *Fixed[1.8] )
    Call  FlyToGoal ( *Var[5] 00000000 00000000 .Easing:Linear )
    Wait  2`
    Call  SetGoalToTarget   ( *Var[5] )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[9] ~Flags:DamageType:Fire 0000FFFF 00000000 00000004 00000020 )
    Switch  *Var[9] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  SetPartFlagBits   ( *Var[5] 00000001 00000001 .True )
            Call  SetGoalToTarget   ( *Var[5] )
            Call  GetGoalPos        ( *Var[5] *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  0000000A 
            Add   *Var[2]  00000002 
            Call  PlayEffect        ( ~FX:Fire:TinyBlue *Var[0] *Var[1] *Var[2] *Fixed[0.3] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  MakeLerp  ( 00000078 0000000A 00000014 .Easing:QuadraticIn )
            Loop
                Call  UpdateLerp ( )
                MulF  *Var[0]  *Fixed[0.01] 
                Call  $Function_80218DF0_17 ( *Var[A] *Var[0] )
                Wait  1`
                If  *Var[1]  ==  00000000 
                    BreakLoop
                EndIf
            EndLoop
            Wait  1`
            Call  RemoveEffect  ( *Var[A] )
            Call  RemoveActor   ( *Var[5] )
            Wait  15`
            If  *Var[9]  ==  0000000A % A
                Return
            EndIf
            Call  UseCamPreset  ( 00000002 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80228720_17 {
.Status:Normal    007A0001
.Status:Stone     007A0000
.Status:Sleep     007A0000
.Status:Poison    007A0001
.Status:Stop      007A0000
.Status:Static    007A0000
.Status:Paralyze  007A0000
.Status:Paralyze  007A0000
.Status:Dizzy     007A0001
.Status:Dizzy     007A0001
.Status:End
}

#new:DefenseTable $DefenseTable_80228774_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_802287A0_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8022884C_17 {
00800000 01000000 001800FF $IdleAnimations_80228720_17 $DefenseTable_80228774_17 00000002 00000002 FEEA0000 00000000 
}

#new:Actor $PetitPiranhaBomb_17 {
% stats
[Index]        B8b 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802287A0_17 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022884C_17 
[Script]      $Script_Init_80228898_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80228898_17 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022894C_17 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802288E4_17 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228918_17 )
    Return
    End
}

#new:Script $Script_Idle_802288E4_17 {
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80228918_17 {
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_TakeTurn_8022894C_17 {
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

