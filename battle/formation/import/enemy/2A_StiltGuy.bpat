% Automatically dumped from section 2A

#new:Actor $2A_StiltGuy {
% stats
[Index]        A6b 
[Level]         0`b 
[MaxHP]         7`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802311A0_2A 
% ai
[PartsCount]    8`s 
[PartsTable]  $PartsTable_802312F8_2A 
[Script]      $Script_Init_80231440_2A 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  75`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  70`b % dx dy
[StatusIcon]   10`b  65`b % dx dy
}

#new:Function $Function_80231000_2A {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_8023102C_2A {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LW        V1, 8 (V0)
	SB        R0, 6 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80231054_2A {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:IdleAnimations $IdleAnimations_80231120_2A {
.Status:Normal    00700001
.Status:Stone     00700000
.Status:Sleep     00700004
.Status:Poison    00700001
.Status:Stop      00700000
.Status:Static    00700000
.Status:Paralyze  00700000
.Status:Paralyze  00700000
.Status:Dizzy     00700000
.Status:Fear      00700000
.Status:End
}

#new:IdleAnimations $IdleAnimations_80231174_2A {
.Status:Normal    00710000
.Status:End
}

#new:DefenseTable $DefenseTable_80231180_2A {
.Element:Normal 00000000
.Element:End
}

#new:DefenseTable $DefenseTable_8023118C_2A {
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End
}

#new:StatusTable $StatusTable_802311A0_2A {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_802312F8_2A {
00020001 01000000 001800FF $IdleAnimations_80233E98_2A $DefenseTable_8023118C_2A 00000000 00000000 FFF60000 00000000 
00020001 02000000 002800FF $IdleAnimations_80231120_2A $DefenseTable_80231180_2A 00000000 00000000 FFFB0000 00000000 
00800001 03004A00 00F800FF 00000000 $DefenseTable_80231180_2A 00000000 00000000 FFFD0000 00000000 
00022001 04FE0000 001800FF 00000000 $DefenseTable_80231180_2A 00000000 00000000 FF050000 00000000 
20120001 05000000 000000FF $IdleAnimations_80231174_2A $DefenseTable_80231180_2A 00000000 00000000 00000000 00000000 
20120001 06000000 000000FF $IdleAnimations_80231174_2A $DefenseTable_80231180_2A 00000000 00000000 00000000 00000000 
20120001 07000000 000000FF $IdleAnimations_80231174_2A $DefenseTable_80231180_2A 00000000 00000000 00000000 00000000 
20120001 08000000 000000FF $IdleAnimations_80231174_2A $DefenseTable_80231180_2A 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_80231440_2A {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80232C78_2A )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802322D0_2A )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8023239C_2A )
    Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  SetPartTargetFlagBits ( .Actor:Self 00000004 00000001 .True )
    Call  SetPartSize       ( .Actor:Self 00000001 00000018 0000001E )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetPartRotationOffset ( .Actor:Self 00000008 00000000 0000000D 00000000 )
    Call  SetPartRotationOffset ( .Actor:Self 00000007 00000000 0000000D 00000000 )
    Call  SetPartRotationOffset ( .Actor:Self 00000006 00000000 0000000D 00000000 )
    Call  SetPartRotationOffset ( .Actor:Self 00000005 00000000 0000000D 00000000 )
    Thread
        Set   *Var[0]  0000005A 
        Set   *Var[1]  0000010E 
        Loop  00000005 
            Loop  00000002 
                Label  0
                Call  SetPartRotation   ( .Actor:Self 00000008 *Var[1] 00000000 00000000 )
                Wait  1`
                Sub   *Var[1]  *Var[0] 
                If  *Var[1]  >=  FFFFFFA6 
                    Goto  0
                EndIf
                Add   *Var[1]  00000168 
            EndLoop
            Sub   *Var[0]  0000000F 
        EndLoop
        Call  SetPartRotation   ( .Actor:Self 00000008 FFFFFFA6 00000000 00000000 )
    EndThread
    Thread
        Call  SetPartJumpGravity    ( .Actor:Self 00000008 *Fixed[0.6] )
        Call  SetAnimation  ( .Actor:Self 00000008 00710003 )
        Call  GetActorPos   ( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
        If  *Var[1]  ==  00000000 
            Set   *Var[0]  0000000A 
            Call  PlaySound ( 00000305 )
        Else
            Set   *Var[0]  00000032 
            Call  PlaySound ( 00000306 )
        EndIf
        Sub   *Var[2]  0000000D 
        Call  SetPartPos    ( .Actor:Self 00000008 *Var[0] 000000C8 *Var[2] )
        Call  SetActorPos   ( .Actor:Self *Var[0] 000000C8 *Var[2] )
        Call  SetAnimation  ( .Actor:Enemy0 00000001 00760002 )
        Call  SetAnimation  ( .Actor:Enemy0 00000001 0076000A )
        Call  PlaySoundAtPart   ( .Actor:Enemy0 00000001 .Sound:GeneralWhistle )
        Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .False )
        Call  FallPartTo    ( .Actor:Self 00000008 *Var[0] FFFFFFF7 *Var[2] 00000050 )
    EndThread
    Thread
        Wait  15`
        Set   *Var[0]  0000005A 
        Set   *Var[1]  000001C2 
        Loop  00000005 
            Loop  00000002 
                Label  1
                Call  SetPartRotation   ( .Actor:Self 00000007 *Var[1] 00000000 00000000 )
                Wait  1`
                Sub   *Var[1]  *Var[0] 
                If  *Var[1]  >=  0000005A 
                    Goto  1
                EndIf
                Add   *Var[1]  00000168 
            EndLoop
            Sub   *Var[0]  0000000F 
        EndLoop
        Call  SetPartRotation   ( .Actor:Self 00000007 0000005A 00000000 00000000 )
    EndThread
    Thread
        Call  SetPartJumpGravity    ( .Actor:Self 00000007 *Fixed[0.6] )
        Call  SetAnimation  ( .Actor:Self 00000007 00710002 )
        Call  GetActorPos   ( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000000 
            Set   *Var[0]  0000000A 
        Else
            Set   *Var[0]  00000032 
        EndIf
        Sub   *Var[2]  0000000D 
        Call  SetPartPos        ( .Actor:Self 00000007 *Var[0] 000000C8 *Var[2] )
        Wait  15`
        Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .False )
        Call  FallPartTo        ( .Actor:Self 00000007 *Var[0] FFFFFFF7 *Var[2] 00000050 )
    EndThread
    Thread
        Wait  30`
        Set   *Var[0]  0000005A 
        Set   *Var[1]  0000010E 
        Loop  00000005 
            Loop  00000002 
                Label  2
                Call  SetPartRotation   ( .Actor:Self 00000006 *Var[1] 00000000 00000000 )
                Wait  1`
                Sub   *Var[1]  *Var[0] 
                If  *Var[1]  >=  FFFFFFA6 
                    Goto  2
                EndIf
                Add   *Var[1]  00000168 
            EndLoop
            Sub   *Var[0]  0000000F 
        EndLoop
        Call  SetPartRotation   ( .Actor:Self 00000006 FFFFFFA6 00000000 00000000 )
    EndThread
    Thread
        Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.6] )
        Call  SetAnimation  ( .Actor:Self 00000006 00710001 )
        Call  GetActorPos   ( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000000 
            Set   *Var[0]  0000000A 
        Else
            Set   *Var[0]  00000032 
        EndIf
        Sub   *Var[2]  0000000D 
        Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] 000000C8 *Var[2] )
        Wait  30`
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
        Call  FallPartTo        ( .Actor:Self 00000006 *Var[0] FFFFFFF7 *Var[2] 00000050 )
    EndThread
    Thread
        Wait  45`
        Set   *Var[0]  0000005A 
        Set   *Var[1]  000001C2 
        Loop  00000005 
            Loop  00000002 
                Label  3
                Call  SetPartRotation   ( .Actor:Self 00000005 *Var[1] 00000000 00000000 )
                Wait  1`
                Sub   *Var[1]  *Var[0] 
                If  *Var[1]  >=  0000005A 
                    Goto  3
                EndIf
                Add   *Var[1]  00000168 
            EndLoop
            Sub   *Var[0]  0000000F 
        EndLoop
        Call  SetPartRotation   ( .Actor:Self 00000005 0000005A 00000000 00000000 )
    EndThread
    Thread
        Call  SetPartJumpGravity    ( .Actor:Self 00000005 *Fixed[0.6] )
        Call  SetAnimation  ( .Actor:Self 00000005 00710000 )
        Call  GetActorPos   ( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000000 
            Set   *Var[0]  0000000A 
        Else
            Set   *Var[0]  00000032 
        EndIf
        Sub   *Var[2]  0000000D 
        Call  SetPartPos    ( .Actor:Self 00000005 *Var[0] 000000C8 *Var[2] )
        Wait  45`
        Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .False )
        Call  FallPartTo    ( .Actor:Self 00000005 *Var[0] FFFFFFF7 *Var[2] 00000050 )
        Wait  15`
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
        Call  GetPartOffset ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
        Add   *Var[2]  0000000D 
        Call  ForceHomePos  ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  SetPartPos    ( .Actor:Self 00000005 *Var[0] 00000000 *Var[2] )
        Call  GetPartOffset ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
        Call  SetPartPos    ( .Actor:Self 00000005 *Var[0] 00000000 *Var[2] )
        Call  SetPartRotation   ( .Actor:Self 00000005 00000000 00000000 00000000 )
        Call  SetPartRotationOffset ( .Actor:Self 00000008 00000000 00000000 00000000 )
        Call  SetPartRotationOffset ( .Actor:Self 00000007 00000000 00000000 00000000 )
        Call  SetPartRotationOffset ( .Actor:Self 00000006 00000000 00000000 00000000 )
        Call  SetPartRotationOffset ( .Actor:Self 00000005 00000000 00000000 00000000 )
        Call  PlaySoundAtPart   ( .Actor:Self 00000005 00002065 )
        Call  SetAnimation  ( .Actor:Self 00000005 00710005 )
        Call  8026ED20      ( FFFFFF81 00000005 00000001 )
        Call  8026EBF8      ( FFFFFF81 00000005 00000001 00000000 00000000 00000024 00000000 000000FF 00000000 00000000 )
        Call  8026EA7C      ( FFFFFF81 00000005 00000010 )
        Wait  18`
        Call  8026ED20      ( FFFFFF81 00000005 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000005 00710004 )
        Wait  5`
        Loop  00000014 
            Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
            Wait  1`
        EndLoop
        Call  HPBarToHome       ( .Actor:Self )
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001 
            Call  SetActorVar   ( .Actor:Enemy1 00000001 00000003 )
        Else
        EndIf
    EndThread
    Return
    End
}

#new:Script $Script_Idle_802322D0_2A {
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80232304_2A {
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000001 
        ExecWait  $Script_80234040_2A 
        Return
    EndIf
    SetConst  *Var[0]  00000002 
    SetConst  *Var[1]  00700003 
    ExecWait  DoReturnHome 
    Call  SetAnimation  ( .Actor:Self 00000002 00700001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8023239C_2A {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastElement    ( *Var[F] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_80232A78_2A 
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoNormalHit 
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoNormalHit 
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:SpinSmashLaunchHit % 11
            Call  GetBattleFlags    ( *Var[2] )
            If  *Var[2]  &  00080000 
                Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
                If  *Var[2]  ==  000000B7 
                    Set   *Var[0]  00000002 
                    Set   *Var[1]  00700001 
                    ExecWait  DoImmune 
                    Call  UseIdleAnimation  ( .Actor:Self .True )
                    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
                    Return
                EndIf
            EndIf
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoNormalHit 
            ExecWait  $Script_80232B84_2A 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  !=  00000000 
                ExecWait  $Script_802333A4_2A 
            EndIf
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
        EndCaseGroup
        Case  ==  .Event:BeginAirLift % 3A
            Call  SetAnimation  ( .Actor:Self 00000002 00700006 )
            Wait  1000`
        Case  ==  .Event:AirLiftFailed % 1F
            Set   *Var[0]  00000002 
            Set   *Var[1]  00700001 
            ExecWait  DoImmune 
        Case  ==  .Event:BurnHit % E
            Call  80269E80  ( *Var[0] )
            If  *Var[0]  !=  00000009 
                Set   *Var[0]  00000002 
                Set   *Var[1]  00700009 
                Set   *Var[2]  0070000A 
                ExecWait  DoBurnHit 
            Else
                Set   *Var[0]  00000002 
                Set   *Var[1]  00700009 
                Set   *Var[2]  0070000A 
                ExecWait  DoBurnHit 
                ExecWait  $Script_802333A4_2A 
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000002 
            Set   *Var[1]  00700009 
            Set   *Var[2]  0070000A 
            ExecWait  DoBurnHit 
            Wait  10`
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  0070000A 
            ExecWait  $Script_8023379C_2A 
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoNormalHit 
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700007 
            ExecWait  $Script_8023379C_2A 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoShockHit 
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_80232304_2A 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700007 
            ExecWait  $Script_8023379C_2A 
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700007 
            ExecWait  $Script_8023379C_2A 
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_80232304_2A 
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700001 
            ExecWait  DoRecover 
        Case  ==  00000030 % 30
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700006 
            ExecWait  DoNormalHit 
            Wait  1000`
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000002 
            SetConst  *Var[1]  00700003 
            SetConst  *Var[2]  00700003 
            ExecWait  DoScareAway 
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80232A78_2A {
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000 
        If  *Var[0]  &  00000240 
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        EndIf
    Else
        Call  $Function_80231000_2A ( *Var[0] )
        Switch  *Var[0] 
            CaseOR  ==  00000083 
            CaseOR  ==  00000084 
            CaseOR  ==  00000085 
            CaseOR  ==  00000088 
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240 
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_80232B84_2A {
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000 
        If  *Var[F]  &  00000080 
            If  *Var[0]  &  00000240 
                Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
            EndIf
        EndIf
        If  *Var[F]  &  00000C00 
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        EndIf
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  002D1000 
        Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80232C78_2A {
    ExecWait  $Script_80232C94_2A 
    Return
    End
}

#new:Script $Script_80232C94_2A {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamOffsetZ   ( 00000028 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00700003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032 
    Set   *Var[1]  00000000 
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000002 00700004 )
    Wait  8`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Wait  9`
                Call  SetAnimation  ( .Actor:Self 00000002 00700004 )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000002 00700005 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F 
            Set   *Var[1]  00000000 
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000012 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002066 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000019 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002066 )
            Wait  15`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_80232304_2A 
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000002 00700004 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000002 00700005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
    Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000008 00000000 00000004 00000020 )
    Set   *Var[F]  *Var[0] 
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00002066 )
            Call  SetAnimation  ( .Actor:Self 00000002 00700001 )
            Wait  8`
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_80232304_2A 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802333A4_2A {
    Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00020005 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B000C )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000 
        Add   *Var[1]  00000032 
    Else
        Add   *Var[1]  00000014 
    EndIf
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Thread
        Wait  6`
        Call  PlaySoundAtPart   ( .Actor:Self 00000002 00002067 )
    EndThread
    Thread
        Call  SetAnimation  ( .Actor:Self 00000002 00700008 )
        Set   *Var[0]  00000000 
        Loop  0000000F 
            Add   *Var[0]  00000006 
            Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    EndThread
    Call  PlaySoundAtPart       ( .Actor:Self 00000002 00000301 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Call  RandInt       ( 00000064 *Var[1] )
    If  *Var[1]  <  00000032 
        Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
        Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
        Wait  10`
    EndIf
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80235830_2A )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80233F30_2A )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_802340A4_2A )
    Call  SetActorType  ( .Actor:Self 0000001F )
    Call  SetActorFlagBits      ( .Actor:Self 00001000 .True )
    Call  HPBarToHome   ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetActorSize  ( .Actor:Self *Var[0] *Var[1] )
    Call  SetActorSize  ( .Actor:Self 00000018 *Var[1] )
    Call  $Function_8023102C_2A ( )
    Return
    End
}

#new:Script $Script_8023379C_2A {
    ExecWait  Collapse 
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
    Call  GetActorVar       ( .Actor:Enemy1 00000002 *Var[0] )
    Add   *Var[0]  00000001 
    Call  SetActorVar       ( .Actor:Enemy1 00000002 *Var[0] )
    If  *Var[0]  >=  00000002 
        Call  8026BF48  ( 00000001 )
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000064 )
    Call  RemoveActor       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_80233888_2A {
    Set   *Var[0]  00000000 
    Label  0
    Sub   *Var[0]  0000001E 
    If  *Var[0]  <  00000000 
        Add   *Var[0]  00000168 
    EndIf
    Call  SetActorYaw   ( .Actor:Self *Var[0] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80233918_2A {
    Exec  $Script_80233888_2A *Var[E] 
    Call  GetPartEventFlags ( .Actor:Self *Var[0] *Var[A] )
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Call  PlayerCreateTargetList    ( 00010004 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerID        ( *Var[1] )
    Call  GetOwnerTarget    ( *Var[0] *Var[9] )
    If  *Var[1]  !=  *Var[0] 
        Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
        Goto  0
    EndIf
    Label  1
    Add   *Var[F]  00000001 
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  ==  FFFFFFFF % FFFFFFFF
        Goto  A
    EndIf
    Call  GetOwnerTarget    ( *Var[0] *Var[9] )
    Call  GetActorFlags     ( *Var[0] *Var[1] )
    If  *Var[1]  &  00004000 % 4000
        Goto  1
    EndIf
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  JumpToGoal    ( .Actor:Self 00000000 .False .True .False )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 28000000 0000FFFF 00000000 00000001 00000020 )
    Goto  1
    Label  A
    Call  UseCamPreset      ( 00000003 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  GetActorSize      ( .Actor:Self *Var[0] *Var[3] )
    Div   *Var[3]  00000002 
    Set   *Var[4]  00000046 
    Sub   *Var[4]  *Var[3] 
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[5]  *Var[4] 
    Sub   *Var[5]  *Var[0] 
    If  *Var[5]  <  00000006 
        Set   *Var[5]  00000001 
    Else
        Set   *Var[5]  00000000 
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self *Var[5] .False .True .False )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[6] *Var[7] *Var[8] )
    Sub   *Var[4]  00000012 
    If  *Var[4]  <=  *Var[6] 
        Set   *Var[4]  *Var[6] 
        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
    Else
        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
        Call  SetGoalToHome ( .Actor:Self )
        Call  GetGoalPos    ( .Actor:Self *Var[4] *Var[7] *Var[8] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
    EndIf
    Kill  *Var[E] 
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Wait  10`
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80233E98_2A {
.Status:Normal    003B0001
.Status:Stone     003B0000
.Status:Sleep     003B0012
.Status:Poison    003B0001
.Status:Stop      003B0000
.Status:Static    003B0001
.Status:Paralyze  003B0000
.Status:Dizzy     003B0013
.Status:Fear      003B0013
.Status:End
}

#new:Script $Script_Idle_80233F30_2A {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000 
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80231054_2A ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80231054_2A ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80234040_2A {
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001 
    SetConst  *Var[1]  003B0003 
    ExecWait  DoReturnHome 
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Return
    End
}

#new:Script $Script_HandleEvent_802340A4_2A {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000D 
            SetConst  *Var[2]  003B000E 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000D 
            SetConst  *Var[2]  003B000E 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000E 
            ExecWait  $Script_8023379C_2A 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  $Script_80233918_2A 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  $Script_80233918_2A 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  $Script_8023379C_2A 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoJumpBack 
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_80234040_2A 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  $Script_8023379C_2A 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  $Script_8023379C_2A 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0003 
            SetConst  *Var[2]  003B0014 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B000C 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80234580_2A {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032 
    Set   *Var[1]  00000000 
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0004 
            ExecWait  DoReturnHome 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A 
    Set   *Var[1]  00000000 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Set   *Var[1]  00000000 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_80234040_2A 
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80234CA8_2A {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050 
    Set   *Var[1]  00000000 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A 
            Set   *Var[1]  00000000 
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0004 
            ExecWait  DoReturnHome 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000 
                Loop  00000014 
                    Sub   *Var[3]  0000001E 
                    If  *Var[3]  <  00000000 
                        Add   *Var[3]  00000168 
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032 
                Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  003B0004 
            ExecWait  DoReturnHome 
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80235830_2A {
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000 
        ExecWait  $Script_80234580_2A 
    Else
        ExecWait  $Script_80234CA8_2A 
    EndIf
    Return
    End
}

