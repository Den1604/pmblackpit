% Automatically dumped from section 21

#new:Actor $21_GhostWatt {
% stats
[Index]        41b 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802229CC_21 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80222A78_21 
[Script]      $Script_Init_80222AE8_21 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         34`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218E88_21 {
	ADDIU     SP, SP, FFB8
	SW        RA, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o128
	ADDIU     S2, S1, C
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 20
	COPY      S0, V0
	ADDIU     V0, R0, 1
	ADDIU     A1, S1, 144
	ADDIU     A2, S1, 148
	SW        S0, 90 (S1)
	SW        V0, 4 (S0)
	SW        R0, 8 (S0)
	SW        V0, C (S0)
	SW        R0, 10 (S0)
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o84
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .o98
	SWC1      F0, 10 (SP)
	.o84
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o98
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LW        A2, 0 (A2)
	LW        A3, 0 (A3)
	JAL       800723B0
	CLEAR     A0
	ADDIU     A1, S1, 144
	SW        V0, 14 (S0)
	LB        V0, 210 (S1)
	ADDIU     V1, R0, A
	BEQ       V0, V1, .oE0
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .oF4
	SWC1      F0, 10 (SP)
	.oE0
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.oF4
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LUI       A2, C47A
	LW        A3, 0 (A3)
	JAL       800723B0
	ADDIU     A0, R0, 1
	SW        V0, 18 (S0)
	ADDIU     V0, R0, 1
	SW        V0, 0 (S0)
	LB        V0, 210 (S1)
	SW        V0, 1C (S0)
	.o128
	LW        S0, 84 (S2)
	LW        V0, 0 (S0)
	BEQ       V0, R0, .o458
	ADDIU     V0, R0, 2
	LW        V0, 4 (S0)
	BEQ       V0, R0, .o174
	ADDIU     V0, R0, 8
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o174
	NOP
	LW        V0, 8 (S0)
	ADDIU     V0, V0, F
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:clamp_angle
	SW        V0, 8 (S0)
	TRUNC.W.S F6, F0
	SWC1      F6, 8 (S0)
	.o174
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F12, 8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LIF       F2, 3.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LH        V0, 152 (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	TRUNC.W.S F6, F0
	MFC1      V1, F6
	NOP
	SLL       V0, V1, 18
	LWC1      F0, 148 (S1)
	SRA       V0, V0, 18
	SB        V1, 19A (S1)
	ADD.S     F0, F0, F2
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LH        V0, 150 (S1)
	ADD.S     F0, F0, F2
	ADDIU     V1, R0, A
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	CVT.D.S   F4, F0
	LWC1      F0, 144 (S1)
	LB        V0, 210 (S1)
	ADD.S     F22, F0, F2
	LAD       F0, $ConstDouble_80232A18_21
	BEQL      V0, V1, .o23C
	ADD.D     F0, F4, F0
	LIF       F1, 2.625
	MTC1      R0, F0
	NOP
	ADD.D     F0, F4, F0
	.o23C
	CVT.S.D   F20, F0
	LH        V0, 154 (S1)
	LWC1      F0, 14C (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LW        V0, C (S0)
	BEQ       V0, R0, .o3C0
	ADD.S     F24, F0, F2
	LW        V1, 10 (S0)
	BEQ       V1, R0, .o27C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o318
	NOP
	BEQ       R0, R0, .o3F8
	NOP
	.o27C
	LW        V0, 14 (S0)
	BNE       V0, R0, .o2DC
	ADDIU     V0, R0, A
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o2A4
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o2B8
	SWC1      F0, 10 (SP)
	.o2A4
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o2B8
	CLEAR     A0
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 14 (S0)
	.o2DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o2F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o2F8
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	BEQ       R0, R0, .o3B4
	LW        V0, 14 (S0)
	.o318
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o334
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o334
	LW        V0, 18 (S0)
	BNE       V0, R0, .o39C
	NOP
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o360
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o374
	SWC1      F0, 10 (SP)
	.o360
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o374
	ADDIU     A0, R0, 1
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 18 (S0)
	LW        V0, 18 (S0)
	.o39C
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 18 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	LW        V0, 18 (S0)
	.o3B4
	LW        V0, C (V0)
	BEQ       R0, R0, .o3F8
	SWC1      F24, C (V0)
	.o3C0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o3DC
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o3DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o3F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o3F8
	LB        V1, 210 (S1)
	LW        V0, 1C (S0)
	BEQ       V0, V1, .o454
	CLEAR     V0
	LW        V0, C (S0)
	BEQ       V0, R0, .o454
	CLEAR     V0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o430
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o430
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o44C
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o44C
	LB        V1, 210 (S1)
	CLEAR     V0
	.o454
	SW        V1, 1C (S0)
	.o458
	LW        RA, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80219304_21 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LW        A0, 90 (V0)
	LW        V1, 14 (A0)
	BEQ       V1, R0, .o2C
	SW        R0, 0 (A0)
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o2C
	LW        V1, 18 (A0)
	BEQ       V1, R0, .o44
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o44
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219358_21 {
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, 4 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802193A4_21 {
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, C (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802193F0_21 {
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, 10 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021943C_21 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	ADDIU     V0, R0, 1
	COPY      A1, A0
	COPY      A2, A0
	LAW       V1, 801512F0
	COPY      A3, A0
	JAL       ~Func:set_background_color_blend
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219480_21 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Script $Script_8021AC7C_21 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  RemoveActor   ( *Var[0] )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8022296C_21 {
.Status:Normal    000E0001
.Status:Stone     000E0000
.Status:Sleep     000E0000
.Status:Poison    000E0001
.Status:Stop      000E0000
.Status:Static    000E0001
.Status:Paralyze  000E0000
.Status:Dizzy     000E000F
.Status:Fear      000E000F
.Status:End
}

#new:DefenseTable $DefenseTable_802229B8_21 {
.Element:Normal 00000000
.Element:Shock  00000063
.Element:End
}

#new:StatusTable $StatusTable_802229CC_21 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80222A78_21 {
00020000 01000000 FF1400FF $IdleAnimations_8022296C_21 $DefenseTable_802229B8_21 00000080 00000000 00F80000 00000000 
80800001 02003200 FFE200FF 00000000 $DefenseTable_802229B8_21 00000080 00000000 00F80000 00000000 
}

#new:Script $Script_Init_80222AE8_21 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222FD0_21 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80222B34_21 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222B5C_21 )
    Return
    End
}

#new:Script $Script_Idle_80222B34_21 {
    SetPriority  00000063 
    Call  $Function_80218E88_21 ( )
    Return
    End
}

#new:Script $Script_HandleEvent_80222B5C_21 {
    Call  UseIdleAnimation      ( .Actor:Self .False )
    Call  $Function_80219358_21 ( 00000000 )
    Call  $Function_802193A4_21 ( 00000001 )
    Call  $Function_802193F0_21 ( 00000000 )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000D 
            SetConst  *Var[2]  000E000E 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000D 
            SetConst  *Var[2]  000E000E 
            ExecWait  DoBurnHit 
            Call  $Function_80219304_21 ( )
            ExecWait  $Script_8021AC7C_21 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            Call  $Function_80219304_21 ( )
            ExecWait  $Script_8021AC7C_21 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  $Function_80219304_21 ( )
            ExecWait  $Script_8021AC7C_21 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0003 
            SetConst  *Var[2]  000E000C 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  $Function_80219358_21 ( 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222FD0_21 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 00000028 )
    Call  MoveBattleCamOver ( 00000050 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
    Call  $Function_802193F0_21 ( 00000001 )
    Call  AddGoalPos        ( .Actor:Self 0000000F FFFFFFF6 00000005 )
    Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  $Function_802193F0_21 ( 00000000 )
    Wait  5`
    Call  $Function_80219358_21 ( 00000000 )
    Call  AddGoalPos        ( .Actor:Self 00000019 00000014 00000000 )
    Call  FlyToGoal ( .Actor:Self 0000000F FFFFFFEC .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:CosInOut )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
            Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  $Function_802193A4_21 ( 00000001 )
            Call  $Function_80219358_21 ( 00000001 )
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  $Function_802193A4_21 ( 00000000 )
    Set   *Var[A]  00000028 
    Call  AddBattleCamZoom  ( FFFFFFB5 )
    Call  MoveBattleCamOver ( *Var[A] )
    Call  8024ECF8  ( 00000000 00000000 00000001 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 % 80000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000004 
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[0.52] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C 
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[1.3] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  $Function_8021943C_21 ( )
    Set   *Var[9]  00000000 
    Call  SetAnimation  ( .Actor:Self 00000001 000E0006 )
    Loop  *Var[A] 
        Add   *Var[9]  00000003 
        If  *Var[9]  >  000000C8 
            Set   *Var[9]  000000C8 
        EndIf
        Call  $Function_80219480_21 ( *Var[9] )
        Wait  1`
    EndLoop
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
    Call  AddBattleCamZoom  ( 0000004B )
    Call  MoveBattleCamOver ( 00000005 )
    Thread
        Wait  2`
        Call  $Function_80219480_21 ( 00000000 )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000001 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000004 00000020 )
        Case  ==  00000002 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  $Function_802193A4_21 ( 00000001 )
            Call  $Function_80219358_21 ( 00000001 )
            Call  AddGoalPos    ( .Actor:Self 00000019 0000000A 00000000 )
            Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:ConstDouble $ConstDouble_80232A18_21 {
4.800000d
}

