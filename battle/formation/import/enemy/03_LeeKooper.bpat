% Automatically dumped from section 03

#new:Actor $03_LeeKooper {
% stats
[Index]        80b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802205F0_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022069C_03 
[Script]      $Script_Init_Kooper_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218E74_03 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218F40_03 {
	ADDIU     SP, SP, FFD8
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o44
	ADDIU     S2, S1, C
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	.o44
	LW        A1, 4C (S1)
	LW        A2, 54 (S1)
	JAL       ~Func:add_xz_vec3f
	COPY      A0, S2
	LWC1      F2, 4C (S1)
	LIF       F0, 4.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o8C
	CLEAR     A0
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	BEQ       R0, R0, .oA4
	LW        A3, 14 (S1)
	.o8C
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	LW        A3, 14 (S1)
	ADDIU     A0, R0, 1
	.oA4
	JAL       ~Func:play_movement_dust_effects
	NOP
	LWC1      F0, 40 (S2)
	LIF       F3, 1.9375
	MTC1      R0, F2
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	LWC1      F2, 0 (S2)
	CVT.S.D   F0, F0
	SWC1      F0, 40 (S2)
	SWC1      F2, 144 (S1)
	LWC1      F0, 4 (S2)
	SWC1      F0, 148 (S1)
	LWC1      F0, 8 (S2)
	SWC1      F0, 14C (S1)
	LWC1      F0, 40 (S2)
	LIF       F3, 1.875
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1T      .o10C
	ADDIU     V0, R0, 2
	CLEAR     V0
	.o10C
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:IdleAnimations $IdleAnimations_8021D360_03 {
.Status:Normal    00A40002
.Status:Stone     00A40000
.Status:Sleep     00A4000E
.Status:Poison    00A40002
.Status:Stop      00A40000
.Status:Static    00A40002
.Status:Paralyze  00A40000
.Status:Dizzy     00A4000F
.Status:Dizzy     00A4000F
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D3AC_03 {
.Status:Normal    00A4000B
.Status:End
}

#new:Script $Script_8021E0E0_03 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  RemoveActor   ( *Var[0] )
    Return
    End
}

#new:Script $Script_8021E118_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Wait  30`
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    Call  UseIdleAnimation  ( *Var[A] .False )
    Call  8027D32C  ( *Var[A] )
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003 
        Add   *Var[2]  00000005 
        Loop  00000003 
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    Call  SetEnemyHP    ( *Var[A] *Var[B] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetActorPos   ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00800000 .True )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00020001 .False )
    Call  SetActorFlagBits  ( *Var[A] 00400004 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  SetActorVar   ( *Var[A] 00000008 00000002 )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021D3AC_03 )
    Call  SetAnimation  ( *Var[A] 00000001 00A4000B )
    Wait  30`
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    If  *Var[C]  >  00000000 
        Set   *Var[C]  00000000 
        Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.5] )
        Call  SetActorSounds        ( *Var[A] .ActorSound:Jump 00000301 00000000 )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000F .False .True .False )
        Call  ResetActorSounds      ( *Var[A] .ActorSound:Jump )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
    EndIf
    Call  ForceHomePos  ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  HPBarToHome   ( *Var[A] )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021D360_03 )
    Call  SetAnimation  ( *Var[A] 00000001 00A40002 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80220540_03 {
.Status:Normal    000A0004
.Status:Stone     000A0000
.Status:Sleep     000A0000
.Status:Poison    000A0004
.Status:Stop      000A0000
.Status:Static    000A0004
.Status:Paralyze  000A0000
.Status:Dizzy     000A001C
.Status:Fear      000A001C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022058C_03 {
.Status:Normal    000A0019
.Status:Stone     000A0003
.Status:Sleep     000A0003
.Status:Poison    000A0019
.Status:Stop      000A0003
.Status:Static    000A0019
.Status:Paralyze  000A0003
.Status:Dizzy     000A0019
.Status:Fear      000A0019
.Status:End
}

#new:DefenseTable $DefenseTable_802205D8_03 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_802205E4_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_802205F0_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8022069C_03 {
00800000 01000000 FE2000FF $IdleAnimations_80220540_03 $DefenseTable_802205D8_03 00001000 00000000 00F00000 00000000 
}

#new:Script $Script_Init_Kooper_03 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221200_03 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80220790_03 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220908_03 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802221A0_03 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_80220790_03 {
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
            Call  $Function_80218E74_03 ( FFFFFFF6 00000019 0000000A 00000019 )
        Case  ==  00000001 
            Call  SetTargetOffset       ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  $Function_80218E74_03 ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_802208B0_03 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_80220908_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0012 
            SetConst  *Var[2]  000A0013 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0012 
            SetConst  *Var[2]  000A0013 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021E0E0_03 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0013 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0_03 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000005 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205E4_03 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022058C_03 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0011 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_802208B0_03 
            Loop  00000016 
                Get1Int  *Var[0] 
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0004 
                Case  ==  00000001 
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0019 
            EndSwitch
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0_03 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000A0019 
                ExecWait  DoImmune 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000A0004 
                ExecWait  DoRecover 
            EndIf
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0006 
            SetConst  *Var[2]  000A0011 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0006 
                Case  ==  00000001 
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0019 
            EndSwitch
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                    If  *Var[0]  !&  0035D000 
                        If  *Var[0]  &  00080000 
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                        Else
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                        EndIf
                    EndIf
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0006 
                Case  ==  00000001 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0019 
            EndSwitch
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80221200_03 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000004 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        Sub   *Var[0]  00000001 
        If  *Var[0]  >  00000000 
            Call  SetActorVar   ( .Actor:Self 00000005 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  30`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  20`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
            Set   *Var[0]  00000000 
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Loop  00000005 
                    Add   *Var[0]  0000000F 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0004 )
            Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205D8_03 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220540_03 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 000A000E )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Wait  15`
    Call  SetAnimation      ( .Actor:Self 00000001 000A000A )
    Call  PlaySoundAtActor  ( .Actor:Self 0000200C )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000004B )
    Call  8024ECF8  ( 00000001 00000001 00000001 )
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Set   *Var[0]  0000000A 
        Case  ==  00000001 
            Set   *Var[0]  00000014 
        Case  ==  00000002 
            Set   *Var[0]  0000001E 
    EndSwitch
    Set   *Var[9]  00000000 
    Loop  *Var[0] 
        Add   *Var[9]  00000001 
        Switch  *Var[9] 
            Case  <  00000014 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000A )
                Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Case  ==  00000014 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000028 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000B )
                Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
            Case  ==  00000028 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000032 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000C )
                Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Case  ==  00000032 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  0000003C 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000D )
                Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
            Case  ==  0000003C 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndSwitch
        Wait  1`
    EndLoop
    Call  PlaySoundAtActor  ( .Actor:Self 0000200A )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  AddActorDecoration    ( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Call  $Function_80218F40_03 ( )
                Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
            EndThread
            Wait  4`
            Call  SetAnimation  ( .Actor:Self 00000001 000A0009 )
            Call  SetActorRotationOffset    ( .Actor:Self FFFFFFF8 00000000 00000000 )
            Set   *Var[0]  00000000 
            Loop  00000002 
                Add   *Var[0]  0000001E 
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Wait  5`
            Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Loop  00000005 
                Add   *Var[0]  FFFFFFF4 
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000002 )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFFE )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
        Case  ==  00000001 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000002 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000008 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000003C 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Add   *Var[0]  0000000A 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_802221A0_03 {
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000C 
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000 
                Sub   *Var[0]  00000001 
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  $Script_8021E118_03 
            Return
    EndSwitch
    Return
    End
}

