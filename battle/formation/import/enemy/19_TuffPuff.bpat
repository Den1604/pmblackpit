% Automatically dumped from section 19

#new:Actor $19_TuffPuff {
% stats
[Index]        BBb 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00208200 
[StatusTable] $StatusTable_8022F664_19 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8022F710_19 
[Script]      $Script_Init_8022F780_19 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b   0`b % dx dy
[StatusIcon]   10`b  10`b % dx dy
}

#new:Function $Function_80218C40_19 {
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:IdleAnimations $IdleAnimations_8022F580_19 {
.Status:Normal    004C0002
.Status:Stone     004C0000
.Status:Sleep     004C0002
.Status:Poison    004C0002
.Status:Stop      004C0000
.Status:Static    004C0002
.Status:Paralyze  004C0002
.Status:Paralyze  004C0000
.Status:Dizzy     004C0002
.Status:Dizzy     004C0002
.Status:Fear      004C0002
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022F5DC_19 {
.Status:Normal    004C0003
.Status:Stone     004C0001
.Status:Sleep     004C0003
.Status:Poison    004C0003
.Status:Stop      004C0001
.Status:Static    004C0003
.Status:Paralyze  004C0003
.Status:Paralyze  004C0001
.Status:Dizzy     004C0003
.Status:Dizzy     004C0003
.Status:Fear      004C0003
.Status:End
}

#new:DefenseTable $DefenseTable_8022F638_19 {
.Element:Normal 00000000
.Element:Shock  00000063
.Element:Mystery00000000
.Element:Jump   00000000
.Element:Hammer 00000000
.Element:End
}

#new:StatusTable $StatusTable_8022F664_19 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8022F710_19 {
00020022 01000000 000000FF $IdleAnimations_8022F580_19 $DefenseTable_8022F638_19 00000000 00000000 00000000 00000000 
80800023 02003200 00CE00FF 00000000 $DefenseTable_8022F638_19 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_8022F780_19 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802305E8_19 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022FA10_19 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022FE2C_19 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022FA00_19 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
        Call  8027D4C8      ( FFFFFF81 00000002 FFFFFFFF FFFFFFF7 )
        Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFF 00000009 )
        Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFF FFFFFFD7 )
        Call  SetActorSize  ( .Actor:Self 00000014 00000019 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022F580_19 )
        Call  SetAnimation  ( .Actor:Self 00000001 004C0002 )
        Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Else
        Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFF8 FFFFFFF3 )
        Call  8027D4C8      ( FFFFFF81 00000002 FFFFFFF8 FFFFFFF3 )
        Call  SetTargetOffset   ( .Actor:Self 00000001 00000001 0000000E )
        Call  SetTargetOffset   ( .Actor:Self 00000002 00000001 FFFFFFDC )
        Call  SetActorSize  ( .Actor:Self 0000001C 00000023 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022F5DC_19 )
        Call  SetAnimation  ( .Actor:Self 00000001 004C0003 )
        Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000064 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000064 )
    Return
    End
}

#new:Script $Script_NextTurn_8022FA00_19 {
    Return
    End
}

#new:Script $Script_Idle_8022FA10_19 {
    Set   *Var[F]  00000000 
    Loop
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[A] )
        Switch  *Var[A] 
            Case  ==  00000000 
                Call  $Function_80218C40_19 ( *Var[F] *Var[0] *Fixed[0.97] *Fixed[1.03] 0000000F 00000000 00000000 )
                Call  $Function_80218C40_19 ( *Var[F] *Var[1] *Fixed[1.03] *Fixed[0.97] 0000000F 00000000 00000000 )
                Add   *Var[F]  00000001 
            Case  ==  00000001 
                Call  $Function_80218C40_19 ( *Var[F] *Var[0] *Fixed[0.95] *Fixed[1.05] 0000000F 00000000 00000000 )
                Call  $Function_80218C40_19 ( *Var[F] *Var[1] *Fixed[1.05] *Fixed[0.95] 0000000F 00000000 00000000 )
                Add   *Var[F]  00000003 
            Case  ==  00000002 
                Call  $Function_80218C40_19 ( *Var[F] *Var[0] *Fixed[0.9] *Fixed[1.1] 0000000F 00000000 00000000 )
                Call  $Function_80218C40_19 ( *Var[F] *Var[1] *Fixed[1.1] *Fixed[0.9] 0000000F 00000000 00000000 )
                Add   *Var[F]  00000005 
        EndSwitch
        Call  GetActorVar   ( .Actor:Self 00000003 *Var[2] )
        Call  GetActorVar   ( .Actor:Self 00000004 *Var[3] )
        DivF  *Var[2]  *Fixed[100.0] 
        DivF  *Var[3]  *Fixed[100.0] 
        MulF  *Var[1]  *Var[2] 
        MulF  *Var[0]  *Var[3] 
        Call  SetActorScale ( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
        If  *Var[F]  >=  0000001E 
            Set   *Var[F]  00000000 
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8022FC74_19 {
    Call  ActorExists   ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  ==  .False 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Call  GetActorVar   ( .Actor:Enemy0 00000002 *Var[1] )
    Switch  *Var[0] 
        Case  ==  .False 
            ConstAND  *Var[1] FFFFFFFE 
        Case  ==  .True 
            ConstAND  *Var[1] FFFFFFFD 
        Case  ==  00000002 
            ConstAND  *Var[1] FFFFFFFB 
        Case  ==  00000003 
            ConstAND  *Var[1] FFFFFFF7 
        Case  ==  00000004 
            ConstAND  *Var[1] FFFFFFEF 
        Case  ==  00000005 
            ConstAND  *Var[1] FFFFFFDF 
        Case  ==  00000006 
            ConstAND  *Var[1] FFFFFFBF 
        Case  ==  00000007 
            ConstAND  *Var[1] FFFFFF7F 
        Case  ==  00000008 
            ConstAND  *Var[1] FFFFFEFF 
        Case  ==  00000009 
            ConstAND  *Var[1] FFFFFDFF 
    EndSwitch
    Call  SetActorVar   ( .Actor:Enemy0 00000002 *Var[1] )
    Return
    End
}

#new:Script $Script_HandleEvent_8022FE2C_19 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000C 
            Else
                SetConst  *Var[1]  004C000D 
            EndIf
            ExecWait  DoNormalHit 
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000C 
            Else
                SetConst  *Var[1]  004C000D 
            EndIf
            ExecWait  DoNormalHit 
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000E 
            Else
                SetConst  *Var[1]  004C0010 
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[2] )
            If  *Var[2]  ==  00000000 
                SetConst  *Var[2]  004C000F 
            Else
                SetConst  *Var[2]  004C0011 
            EndIf
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000E 
            Else
                SetConst  *Var[1]  004C0010 
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[2] )
            If  *Var[2]  ==  00000000 
                SetConst  *Var[2]  004C000F 
            Else
                SetConst  *Var[2]  004C0011 
            EndIf
            ExecWait  DoBurnHit 
            ExecWait  $Script_8022FC74_19 
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000F 
            Else
                SetConst  *Var[1]  004C0011 
            EndIf
            ExecWait  DoDeath 
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C0002 
            Else
                SetConst  *Var[1]  004C0003 
            EndIf
            ExecWait  DoImmune 
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C0002 
            Else
                SetConst  *Var[1]  004C0003 
            EndIf
            ExecWait  DoImmune 
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000C 
            Else
                SetConst  *Var[1]  004C000D 
            EndIf
            ExecWait  DoNormalHit 
            ExecWait  $Script_8022FC74_19 
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000C 
            Else
                SetConst  *Var[1]  004C000D 
            EndIf
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C0002 
            Else
                SetConst  *Var[1]  004C0003 
            EndIf
            ExecWait  DoRecover 
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C0006 
            Else
                SetConst  *Var[1]  004C0007 
            EndIf
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            ExecWait  $Script_8022FC74_19 
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C000C 
            Else
                SetConst  *Var[1]  004C000D 
            EndIf
            ExecWait  DoBlowAway 
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
            If  *Var[1]  ==  00000000 
                SetConst  *Var[1]  004C0002 
            Else
                SetConst  *Var[1]  004C0003 
            EndIf
            ExecWait  DoImmune 
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802305E8_19 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

