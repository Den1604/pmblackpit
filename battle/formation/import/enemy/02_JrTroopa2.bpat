% Automatically dumped from section 02

#new:Actor $02_JrTroopa2 {
% stats
[Index]        89b 
[Level]        44`b 
[MaxHP]        15`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224418_02 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_802244C4_02 
[Script]      $Script_Init_80224A94_02 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  30`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80224380_02 {
.Status:Normal    00210003
.Status:Sleep     0021001C
.Status:Stone     00210000
.Status:Poison    00210000
.Status:Stop      00210000
.Status:Static    00210000
.Status:Paralyze  00210000
.Status:End
}

#new:IdleAnimations $IdleAnimations_802243F8_02 {
.Status:Normal    00210004
.Status:Stop      00210002
.Status:End
}

#new:DefenseTable $DefenseTable_8022440C_02 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_80224418_02 {
.Status:Normal    100`
.Status:Default   100`
.Status:Sleep      80`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_802244C4_02 {
00800000 01000000 FA1200FF $IdleAnimations_80224380_02 $DefenseTable_8022440C_02 00000000 00000000 05FC0000 00000000 
}

#new:Script $Script_80224510_02 {
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000026 )
    Call  SetBattleCamZoom  ( 00000100 )
    Call  MoveBattleCamOver ( 0000000F )
    Return
    End
}

#new:Script $Script_802245A8_02 {
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000C )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8022464C_02 {
.Status:Normal    00210014
.Status:End
}

#new:Script $Script_80224658_02 {
    Set   *Var[A]  *Var[0] 
    Call  8027D32C      ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[1] )
    Wait  10`
    Call  80269E80      ( *Var[5] )
    Switch  *Var[5] 
        CaseOR  ==  0000000A 
        CaseOR  ==  0000000E 
        CaseOR  ==  0000000C 
        CaseOR  ==  00000010 
        CaseOR  ==  0000000B 
        CaseOR  ==  0000000F 
        CaseOR  ==  0000000D 
        CaseOR  ==  00000011 
        CaseOR  ==  00000002 
        EndCaseGroup
        Default
            Set   *Var[2]  00000000 
            Loop  00000018 
                Call  SetActorYaw   ( .Actor:Self *Var[2] )
                Add   *Var[2]  0000001E 
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndSwitch
    Label  0
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Add   *Var[2]  0000000A 
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySound ( 000003E5 )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 00000104 )
    Call  SetBattleCamOffsetZ   ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Call  SetAnimation      ( .Actor:Self *Var[A] 00210027 )
    Wait  12`
    Call  SetAnimation      ( .Actor:Self *Var[A] 00210014 )
    Call  SetIdleAnimations ( .Actor:Self *Var[A] $IdleAnimations_8022464C_02 )
    Wait  60`
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Return
    End
}

#new:Script $Script_80224964_02 {
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:CloseShell )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Add   *Var[2]  00000005 
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00210012 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802243F8_02 )
    Wait  10`
    Return
    End
}

#new:Script $Script_Init_80224A94_02 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225314_02 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80224B24_02 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224B58_02 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225B4C_02 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80224B24_02 {
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80224B58_02 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_802250E4_02 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoNormalHit 
        Case  ==  .Event:Hit % A
            ExecWait  $Script_802250E4_02 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoNormalHit 
            ExecWait  $Script_802251CC_02 
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210013 
            ExecWait  $Script_80224658_02 
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Set   *Var[1]  00210028 
            Set   *Var[2]  00210029 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Set   *Var[1]  00210028 
            Set   *Var[2]  00210029 
            ExecWait  DoBurnHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210029 
            ExecWait  $Script_80224658_02 
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_802250E4_02 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoSpinSmashHit 
            ExecWait  $Script_802251CC_02 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210013 
            ExecWait  $Script_80224658_02 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoJumpBack 
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210009 
            ExecWait  DoReturnHome 
            ExecWait  $Script_80224964_02 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210011 
            ExecWait  DoJumpBack 
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210013 
            ExecWait  $Script_80224658_02 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210004 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210003 
            ExecWait  DoReturnHome 
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00210003 
            ExecWait  DoRecover 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802250E4_02 {
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000000 
        Call  GetLastDamage     ( .Actor:Self *Var[1] )
        Call  GetBattleFlags    ( *Var[2] )
        If  *Var[2]  !&  00080000 
            If  *Var[1]  !=  00000000 
                Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00351000 
                    Call  FreezeBattleCam   ( .True )
                EndIf
            EndIf
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_802251CC_02 {
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00351000 
            Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
            ExecWait  $Script_80224510_02 
            Call  MoveBattleCamOver ( 0000001E )
            Wait  30`
            Call  ActorSpeak        ( 000C012A .Actor:Self 00000001 0021001D 0021001D ) % Yeeowch!! Who knew that Mario had such battle skil ...
            Call  SetAnimation      ( .Actor:Self 00000001 0021001A )
            Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
            ExecWait  $Script_80224964_02 
            ExecWait  $Script_802245A8_02 
        Else
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
        EndIf
    EndIf
    Call  FreezeBattleCam   ( .False )
    Return
    End
}

#new:Script $Script_TakeTurn_80225314_02 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:OpenShell )
    Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
    Wait  20`
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00210009 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0021000E )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Lucky % 5
        CaseOR  ==  .HitResult:Miss % 6
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
            Thread
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
            EndThread
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000 
            Add   *Var[2]  00000005 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  2`
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000019 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            ExecWait  $Script_80224964_02 
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
    Thread
        Wait  3`
        Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
        Wait  5`
        Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
    EndThread
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0] 
        Default
            Call  UseCamPreset  ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Wait  10`
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            ExecWait  $Script_80224964_02 
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80225B4C_02 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000A 
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Wait  15`
                ExecWait  $Script_80224510_02 
                Wait  10`
                Call  ActorSpeak    ( 000C0128 .Actor:Self 00000001 0021001A 0021001B ) % Get ready to hurt, Mario! I'm gonna show you a new ...
                Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
                Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000010 
                Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  30`
                ExecWait  $Script_80224964_02 
                Wait  30`
                Call  ActorSpeak    ( 000C0129 .Actor:Self 00000001 00210017 00210004 ) % Yeah! Check that out! You've never seen anything l ...
                Wait  10`
                ExecWait  $Script_802245A8_02 
            Else
            EndIf
        Case  ==  0000000C 
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

