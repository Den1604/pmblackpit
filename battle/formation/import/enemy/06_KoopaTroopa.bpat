% Automatically dumped from section 06

#new:Actor $06_KoopaTroopa {
% stats
[Index]         Bb 
[Level]         6`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021C998_06 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021CA44_06 
[Script]      $Script_Init_8021CB74_06 
% move effectiveness
[Escape]       70`b 
[Item]         90`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  32`b % dx dy
[StatusIcon]    5`b  32`b % dx dy
}

#new:Function $Function_80218020_06 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_8021C960_06 {
.Element:Normal 00000001
.Element:Hammer 00000001
.Element:Jump   00000001
.Element:Water  00000001
.Element:Blast  00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8021C98C_06 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021C998_06 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     60`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   90`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021CA44_06 {
00800000 01000000 FE2400FF $IdleAnimations_8021CA90_06 $DefenseTable_8021C960_06 00001000 00000000 00F90000 00000000 
}

#new:IdleAnimations $IdleAnimations_8021CA90_06 {
.Status:Normal    00290101
.Status:Stone     00290100
.Status:Sleep     00290111
.Status:Poison    00290101
.Status:Stop      00290100
.Status:Static    00290101
.Status:Paralyze  00290100
.Status:Dizzy     00290113
.Status:Fear      00290113
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CADC_06 {
.Status:Normal    00290103
.Status:Stone     00290100
.Status:Sleep     00290111
.Status:Poison    00290103
.Status:Stop      00290100
.Status:Static    00290103
.Status:Paralyze  00290100
.Status:Dizzy     00290113
.Status:Fear      00290113
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CB28_06 {
.Status:Normal    0029010F
.Status:Stone     00290110
.Status:Sleep     00290112
.Status:Poison    0029010F
.Status:Stop      00290110
.Status:Static    0029010F
.Status:Paralyze  00290110
.Status:Dizzy     00290114
.Status:Fear      00290114
.Status:End
}

#new:Script $Script_Init_8021CB74_06 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DD9C_06 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021CD30_06 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D218_06 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_8021CBD8_06 {
    Switch  *Var[0] 
        Case  ==  00000000 
            If  *Var[1]  &  00041000 
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Call  $Function_80218020_06 ( FFFFFFF6 00000014 0000000A 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  $Function_80218020_06 ( FFFFFFF1 00000020 00000005 00000020 )
            EndIf
        Case  ==  00000001 
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  $Function_80218020_06 ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_8021CD30_06 {
    Label  0
    Call  RandInt   ( 00000050 *Var[A] )
    Add   *Var[A]  00000050 
    Loop  *Var[A] 
        Label  1
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021CBD8_06 
        If  *Var[0]  ==  00000001 
            Wait  1`
            Goto  1
        EndIf
        If  *Var[1]  &  0035D000 
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005 
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CADC_06 )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90_06 )
        Case  ==  00000001 
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28_06 )
    EndSwitch
    Loop  00000014 
        Label  2
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021CBD8_06 
        If  *Var[0]  ==  00000001 
            Wait  1`
            Goto  2
        EndIf
        If  *Var[1]  &  0035D000 
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005 
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CADC_06 )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90_06 )
        Case  ==  00000001 
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28_06 )
    EndSwitch
    Loop  00000050 
        Label  3
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021CBD8_06 
        If  *Var[0]  ==  00000001 
            Wait  1`
            Goto  3
        EndIf
        If  *Var[1]  &  0035D000 
            Wait  1`
            Goto  3
        EndIf
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021D1C0_06 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_8021D218_06 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010C 
            SetConst  *Var[2]  0029010D 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010C 
            SetConst  *Var[2]  0029010D 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010D 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C98C_06 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28_06 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            ChildThread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndChildThread
            UseIntBuffer  $IntTable_8021D1C0_06 
            Loop  00000016 
                Get1Int  *Var[0] 
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoJumpBack 
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00290104 
            ExecWait  DoReturnHome 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00290107 
                ExecWait  DoImmune 
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000 
                    Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0029010F 
                ExecWait  DoImmune 
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0029010B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00290104 
                ExecWait  DoReturnHome 
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00290101 
                ExecWait  DoRecover 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0029010F 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00290104 
                SetConst  *Var[2]  0029010B 
                ExecWait  DoScareAway 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0029010F 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00290117 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0029010F 
            EndIf
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00290117 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0029010F 
            EndIf
            ExecWait  DoBlowAway 
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00290101 
                ExecWait  DoImmune 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0029010F 
                ExecWait  DoImmune 
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021DD9C_06 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
        If  *Var[0]  ==  00000001 
            Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Sub   *Var[0]  00000001 
            If  *Var[0]  >  00000000 
                Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  30`
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Else
                Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  20`
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
                Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
                Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
                Set   *Var[0]  00000000 
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                ChildThread
                    Loop  00000005 
                        Add   *Var[0]  0000000F 
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                        Wait  1`
                    EndLoop
                EndChildThread
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
                Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90_06 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C960_06 )
                Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
                Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndIf
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
        Wait  10`
        ChildThread
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000004 
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndChildThread
        Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
        Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
        Wait  10`
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  UseCamPreset      ( 00000005 )
                Call  SetBattleCamZoom  ( 0000012C )
                Call  SetBattleCamOffsetZ   ( 00000014 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Wait  4`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Wait  6`
            Sub   *Var[1]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetPartYaw    ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00290104 
            ExecWait  DoReturnHome 
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

