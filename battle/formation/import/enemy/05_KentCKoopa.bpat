% Automatically dumped from section 05

#new:Actor $05_KentCKoopa {
% stats
[Index]        B9b 
[Level]        55`b 
[MaxHP]        70`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80227A08_05 
% ai
[PartsCount]    9`s 
[PartsTable]  $PartsTable_80227AB4_05 
[Script]      $Script_Init_80227C20_05 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         90`b  70`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -26`b  38`b % dx dy
[StatusIcon]    2`b  63`b % dx dy
}

#new:Function $Function_80218B50_05 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218BA8_05 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218C74_05 {
	ADDIU     SP, SP, FFB8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S2, V0
	ADDIU     A0, R0, 168
	JAL       ~Func:rand_int
	COPY      S3, V0
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	LIF       F24, 46.0
	JAL       ~Func:cos_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F24
	NOP
	MTC1      S2, F20
	NOP
	CVT.S.W   F20, F20
	ADD.S     F0, F20, F0
	TRUNC.W.S F2, F0
	MFC1      S2, F2
	JAL       ~Func:sin_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F24
	NOP
	MTC1      S3, F24
	NOP
	CVT.S.W   F24, F24
	ADD.S     F0, F24, F0
	LIF       F26, 62.0
	TRUNC.W.S F2, F0
	MFC1      S3, F2
	JAL       ~Func:cos_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F26
	NOP
	ADD.S     F20, F20, F0
	TRUNC.W.S F2, F20
	MFC1      S4, F2
	JAL       ~Func:sin_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F26
	NOP
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	ADD.S     F24, F24, F0
	COPY      A2, S2
	TRUNC.W.S F2, F24
	MFC1      S2, F2
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:set_variable
	COPY      A2, S3
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:set_variable
	COPY      A2, S4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, S2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:IntTable $IntTable_80227910_05 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:IdleAnimations $IdleAnimations_80227968_05 {
.Status:Normal    00470001
.Status:Stone     00470000
.Status:Sleep     00470013
.Status:Poison    00470001
.Status:Stop      00470000
.Status:Static    00470000
.Status:Paralyze  00470000
.Status:Dizzy     00470014
.Status:Fear      00470000
.Status:End
}

#new:IdleAnimations $IdleAnimations_802279B4_05 {
.Status:Normal    0047001A
.Status:Stop      00470019
.Status:Paralyze  00470019
.Status:End
}

#new:IdleAnimations $IdleAnimations_802279D0_05 {
.Status:Normal    00D50000
.Status:End
}

#new:DefenseTable $DefenseTable_802279DC_05 {
.Element:Normal 00000006
.Element:Blast  00000006
.Element:End
}

#new:DefenseTable $DefenseTable_802279F0_05 {
.Element:Normal 00000003
.Element:End
}

#new:DefenseTable $DefenseTable_802279FC_05 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80227A08_05 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   30`
.Status:Shrink     40`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_80227AB4_05 {
00800000 01000000 003C00FF $IdleAnimations_80227968_05 $DefenseTable_802279DC_05 00001000 00000000 00000000 00000000 
00020000 020C3D00 00EC00FF 00000000 $DefenseTable_802279F0_05 00000000 00000000 00000000 00000000 
00020000 032D0000 BA1A00FF 00000000 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 04000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 05000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 06000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 07000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 08000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 09000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_80227C20_05 {
    Call  8027D434      ( FFFFFF81 00000003 00000046 )
    Call  SetPartSize   ( .Actor:Self 00000003 0000001E 0000001E )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228A7C_05 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80227DD4_05 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227E08_05 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80227D2C_05 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 0047001C )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000014 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
    Return
    End
}

#new:Script $Script_NextTurn_80227D2C_05 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000A 
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_80227DD4_05 {
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80227E08_05 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[D] )
    Switch  *Var[D] 
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoNormalHit 
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoNormalHit 
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:BurnHit % E
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Set   *Var[0]  00000001 
                Set   *Var[1]  00470015 
                Set   *Var[2]  00470016 
                ExecWait  DoBurnHit 
            Else
                Set   *Var[0]  00000001 
                Set   *Var[1]  00470017 
                Set   *Var[2]  00470018 
                ExecWait  DoBurnHit 
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Set   *Var[0]  00000001 
                Set   *Var[1]  00470015 
                Set   *Var[2]  00470016 
            Else
                Set   *Var[0]  00000001 
                Set   *Var[1]  00470017 
                Set   *Var[2]  00470018 
            EndIf
            ExecWait  DoBurnHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  *Var[2] 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  DoNormalHit 
            Else
                SetConst  *Var[0]  00000001 
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  $Script_8022B158_05 
            EndIf
        Case  ==  .Event:SpinSmashDeath % 21
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  DoNormalHit 
                SetConst  *Var[0]  00000001 
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  DoDeath 
                Return
            Else
                SetConst  *Var[0]  00000001 
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  $Script_8022B204_05 
                Return
            EndIf
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoReturnHome 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoJumpBack 
            SetConst  *Var[0]  00000001 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoDeath 
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00470009 
                ExecWait  DoImmune 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0047001A 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:Immune % 19
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00470009 
                ExecWait  DoImmune 
                Call  GetStatusFlags    ( .Actor:Self *Var[2] )
                If  *Var[2]  ==  00000000 
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
                    Wait  8`
                EndIf
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0047001A 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                Set   *Var[1]  00470001 
            Else
                Set   *Var[1]  0047001A 
            EndIf
            Set   *Var[0]  00000001 
            ExecWait  DoImmune 
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8022AD84_05 
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[1]  00470001 
                SetConst  *Var[0]  00000001 
                ExecWait  DoRecover 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0047001A 
                ExecWait  DoImmune 
            EndIf
        Case  ==  .Event:FlipTrigger % D
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00470012 
                ExecWait  DoNormalHit 
                Return
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            If  *Var[0]  >  00000000 
                Sub   *Var[0]  00000001 
                Call  SetActorVar   ( .Actor:Self 00000004 *Var[0] )
            EndIf
            Call  80269E80  ( *Var[0] )
            If  *Var[0]  ==  00000016 
                Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  GetBattleFlags    ( *Var[D] )
                If  *Var[D]  &  00000020 
                    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
                EndIf
                ExecWait  $Script_FlipOver_KentC_05 
            Else
                Call  GetBattleFlags    ( *Var[D] )
                If  *Var[D]  &  00000020 
                    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
                    Call  GetLastDamage ( .Actor:Self *Var[0] )
                    If  *Var[0]  >  00000000 
                        SetConst  *Var[0]  00000001 
                        SetConst  *Var[1]  0047001C 
                        ExecWait  DoNormalHit 
                    Else
                        SetConst  *Var[0]  00000001 
                        SetConst  *Var[1]  00470009 
                        ExecWait  DoImmune 
                        Call  GetStatusFlags    ( .Actor:Self *Var[2] )
                        If  *Var[2]  ==  00000000 
                            Wait  20`
                            Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
                            Wait  8`
                        EndIf
                    EndIf
                Else
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  0047001C 
                    ExecWait  DoNormalHit 
                EndIf
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80228A7C_05 {
    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  UseIdleAnimation  ( .Actor:Self .False )
        Call  EnableIdleScript  ( .Actor:Self 00000000 )
        Call  UseCamPreset      ( 0000000E )
        Call  SetBattleCamZoom  ( 000000C8 )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000019 )
        Call  GetActorVar       ( .Actor:Self 00000002 *Var[0] )
        Sub   *Var[0]  00000001 
        Call  SetActorVar       ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  >  00000000 
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000024 
            Add   *Var[1]  00000012 
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
            Loop  00000005 
                Call  PlayEffect    ( ~FX:Sweat:Large *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  5`
            EndLoop
            Wait  30`
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Else
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000024 
            Add   *Var[1]  00000012 
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
            Loop  00000005 
                Call  PlayEffect    ( ~FX:Sweat:Large *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  5`
            EndLoop
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  30`
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 00470019 )
            Thread
                Wait  3`
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000 
                    Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000001B 00000000 )
                Else
                    Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                EndIf
                Set   *Var[0]  00000000 
                Loop  00000005 
                    Add   *Var[0]  00000024 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  !&  00080000 
                Call  $Function_80218B50_05 ( 00000050 0000000E )
                Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
            EndIf
            Wait  3`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
            Wait  10`
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279DC_05 )
            Call  SetEnemyTargetOffset      ( .Actor:Self 00000001 00000000 0000003C )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
            Call  SetPartFlags      ( .Actor:Self 00000002 00020004 )
            Call  SetPartFlags      ( .Actor:Self 00000001 00800004 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80227968_05 )
            Call  $Function_80218BA8_05     ( FFFFFFE6 00000026 00000002 0000003F )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000001 0047001C )
        EndIf
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000032 
        Call  GetStatusFlags    ( .Actor:Partner *Var[0] )
        If  *Var[0]  !&  01000000 
            ExecWait  $Script_ShellToss_KentC_05 
        Else
            ExecWait  $Script_Tackle_KentC_05 
        EndIf
    Else
        ExecWait  $Script_Tackle_KentC_05 
    EndIf
    Return
    End
}

#new:Script $Script_ShellToss_KentC_05 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 00000014 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000019 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 0047000B )
    Wait  10`
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000004 
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  3`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  2`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000370 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047000A )
    Wait  10`
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
            Call  EnemyTestTarget   ( .Actor:Self *Var[B] ~Flags:DamageType:0 00000000 00000003 00000010 )
            Switch  *Var[B] 
                Case  ==  .HitResult:Miss % 6
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000001E )
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000028 
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
                    Call  SetGoalPos    ( .Actor:Self FFFFFF10 00000000 *Var[2] )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetActorPos   ( .Actor:Self 000000F0 00000000 *Var[2] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  ResetAllActorSounds   ( .Actor:Self )
                    Call  StopSound     ( 00000370 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
                    Wait  8`
                    Call  YieldTurn ( )
                    Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
                    Call  EnableIdleScript  ( .Actor:Self 00000001 )
                    Call  UseIdleAnimation  ( .Actor:Self .True )
                    Return
                Default
                    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                    If  *Var[0]  !&  0435D000 
                        Call  UseIdleAnimation  ( .Actor:Player .False )
                        Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
                    EndIf
                    Call  UseCamPreset      ( 00000013 )
                    Call  SetBattleCamTarget    ( FFFFFFE7 0000003C 00000000 )
                    Call  SetBattleCamZoom  ( 000001CC )
                    Call  SetBattleCamOffsetZ   ( 00000000 )
                    Call  MoveBattleCamOver ( 00000032 )
                    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                    If  *Var[3]  !&  00080000 
                        Add   *Var[0]  00000020 
                    Else
                        Add   *Var[0]  0000000C 
                    EndIf
                    Set   *Var[1]  00000000 
                    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    If  *Var[A]  ==  .HitResult:Lucky % 5
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                    EndIf
                    Set   *Var[A]  00000001 
            EndSwitch
        EndCaseGroup
        Default
            Call  UseCamPreset      ( 00000013 )
            Call  SetBattleCamTarget    ( FFFFFFE7 0000003C 00000000 )
            Call  SetBattleCamZoom  ( 000001CC )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  MoveBattleCamOver ( 00000032 )
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  GetStatusFlags    ( .Actor:Player *Var[0] )
            If  *Var[0]  !&  0435D000 % 435D000
                Call  SetAnimation  ( .Actor:Player 00000000 0001002B )
            EndIf
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  !&  00080000 
                Add   *Var[0]  00000020 
            Else
                Add   *Var[0]  0000000C 
            EndIf
            Set   *Var[1]  00000000 
            Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetStatusFlags    ( .Actor:Self *Var[E] )
            If  *Var[E]  !&  00080000 
                Call  80269EAC  ( 00000018 )
            EndIf
            Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
            Set   *Var[A]  00000000 
            If  *Var[E]  !&  00080000 
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  !&  80000000 
                    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                    If  *Var[0]  !&  00100000 
                        Set   *Var[A]  00000001 
                    EndIf
                EndIf
            EndIf
    EndSwitch
    If  *Var[A]  !=  00000000 
        Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000020 
        Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
        Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  RunToGoal ( .Actor:Self 00000000 .False )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  80269EAC  ( 00000019 )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
        Call  GetBattleFlags    ( *Var[0] )
        If  *Var[0]  !&  80000000 % 80000000
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self FFFFFF10 00000000 *Var[2] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetActorPos   ( .Actor:Self 000000F0 00000000 *Var[2] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  StopSound     ( 00000370 )
            Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
            Wait  8`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Else
            Call  UseCamPreset  ( 00000013 )
            Call  SetBattleCamTarget    ( FFFFFFD3 0000003C 00000000 )
            Call  SetBattleCamZoom      ( 000001CC )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  MoveBattleCamOver     ( 0000001E )
        EndIf
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Set   *Var[1]  00000000 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  !&  00080000 
            Call  $Function_80218B50_05 ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Add   *Var[0]  00000010 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  !&  00080000 
            Call  $Function_80218B50_05 ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Add   *Var[0]  0000000A 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  !&  00080000 
            Call  $Function_80218B50_05 ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  StopSound ( 00000370 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
    Wait  8`
    Call  YieldTurn ( )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    SetConst  *Var[0]  00000001 
    SetConst  *Var[1]  00470004 
    ExecWait  DoReturnHome 
    Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Tackle_KentC_05 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 00000118 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032 
    Set   *Var[1]  00000000 
    Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00470003 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self 000003E7 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
            Thread
                Wait  7`
                Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
                Wait  4`
                Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014 
            Set   *Var[1]  00000000 
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000 
                    Call  $Function_80218B50_05 ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Sub   *Var[0]  0000000F 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000C .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000 
                    Call  $Function_80218B50_05 ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Sub   *Var[0]  0000000A 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000 
                    Call  $Function_80218B50_05 ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Wait  8`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Set   *Var[3]  00000000 
            Loop  0000000C 
                Add   *Var[3]  0000000F 
                Call  SetActorYaw   ( .Actor:Self *Var[3] )
                Wait  1`
            EndLoop
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00470004 )
            Call  SetPartYaw    ( .Actor:Self 00000001 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Set   *Var[3]  000000B4 
            Loop  0000000F 
                Sub   *Var[3]  0000000C 
                Call  SetActorYaw   ( .Actor:Self *Var[3] )
                Wait  1`
            EndLoop
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
    Thread
        Wait  5`
        Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
        Wait  2`
        Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 0000000E .False .True .False )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[F] )
    If  *Var[F]  !&  00080000 
        Call  80269EAC  ( 00000018 )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 0000FFFF 00000000 0000000A 00000020 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000001E )
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000 % 80000000
                Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                If  *Var[0]  !&  00100000 % 100000
                    Call  GetStatusFlags    ( .Actor:Self *Var[E] )
                    If  *Var[E]  !&  00080000 
                        Call  LandJump  ( .Actor:Self )
                        Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
                    EndIf
                EndIf
            EndIf
            Thread
                Call  $Function_80218B50_05 ( 00000050 0000000E )
                Call  GetStatusFlags        ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000 
                    Call  $Function_80218B50_05 ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000C .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000 
                    Call  $Function_80218B50_05 ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000 
                    Call  $Function_80218B50_05 ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Wait  8`
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            ExecWait  $Script_8022AD84_05 
        Case  ==  00000003 % 3
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022AD84_05 {
    SetConst  *Var[0]  00000001 
    SetConst  *Var[1]  00470004 
    ExecWait  DoReturnHome 
    Return
    End
}

#new:Script $Script_FlipOver_KentC_05 {
    Call  SetEnemyTargetOffset  ( .Actor:Self 00000001 00000000 00000028 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279F0_05 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802279B4_05 )
    Call  $Function_80218BA8_05 ( FFFFFFE8 0000002F 00000017 00000025 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047001C )
    Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
    Call  SetActorVar       ( .Actor:Self 00000001 00470012 )
    Thread
        Wait  4`
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000 
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000023 00000000 )
        Else
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
        EndIf
        Set   *Var[0]  00000000 
        Loop  00000005 
            Sub   *Var[0]  00000012 
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    UseIntBuffer  $IntTable_80227910_05 
    Loop  00000016 
        Get1Int  *Var[0] 
        Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
        If  *Var[0]  ==  00000000 
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000 
                    Call  $Function_80218B50_05 ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
        EndIf
        Wait  1`
    EndLoop
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047001D )
    Wait  1`
    Call  SetAnimation      ( .Actor:Self 00000001 0047001E )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
    Call  SetPartFlags      ( .Actor:Self 00000002 00000004 )
    Call  SetPartFlags      ( .Actor:Self 00000001 00020004 )
    Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
    Wait  8`
    Return
    End
}

#new:Script $Script_8022B158_05 {
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Set   *Var[A]  00000005 
    ExecWait  $Script_8022B2E8_05 
    Set   *Var[2]  00000000 
    Loop  00000024 
        Add   *Var[2]  0000001E 
        Call  SetActorYaw   ( .Actor:Self *Var[2] )
        Wait  1`
    EndLoop
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_8022B204_05 {
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Set   *Var[A]  00000000 
    ExecWait  $Script_8022B2E8_05 
    Set   *Var[2]  00000000 
    Loop  00000030 
        Add   *Var[2]  0000001E 
        Call  SetActorYaw   ( .Actor:Self *Var[2] )
        Wait  1`
    EndLoop
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Wait  10`
    Set   *Var[0]  00000001 
    Set   *Var[1]  FFFFFFFF 
    ExecWait  DoDeath 
    Return
    End
}

#new:Script $Script_8022B2E8_05 {
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  &  00080000 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[3] )
    Call  GetLastDamage ( .Actor:Self *Var[4] )
    If  *Var[4]  >  *Var[3] 
        Set   *Var[4]  *Var[3] 
    EndIf
    If  *Var[4]  >  00000006 
        Set   *Var[4]  00000006 
    EndIf
    If  *Var[4]  >  00000000 
        Thread
            Sub   *Var[3]  *Var[4] 
            Call  SetActorVar   ( .Actor:Self 00000003 *Var[3] )
            Set   *Var[5]  00000004 
            Loop  *Var[4] 
                Exec  $Script_8022B444_05 
                Add   *Var[5]  00000001 
                Wait  *Var[A] 
            EndLoop
        EndThread
    EndIf
    Return
    End
}

#new:Script $Script_8022B444_05 {
    Call  PlaySoundAtPart   ( .Actor:Self *Var[5] 00000212 )
    Call  GetActorPos       ( .Actor:Self *Var[6] *Var[7] *Var[8] )
    Call  SetPartPos        ( .Actor:Self *Var[5] *Var[6] 00000023 *Var[8] )
    Call  $Function_80218C74_05 ( *Var[6] *Var[8] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  SetPartFlagBits   ( .Actor:Self *Var[5] 00000001 .False )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[5] *Fixed[1.0] )
    Call  JumpPartTo        ( .Actor:Self *Var[5] *Var[0] 00000000 *Var[1] 00000012 .True )
    Call  JumpPartTo        ( .Actor:Self *Var[5] *Var[2] 00000000 *Var[3] 00000009 .True )
    Wait  10`
    Loop  0000000A 
        Call  SetPartFlagBits   ( .Actor:Self *Var[5] 00000001 .False )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self *Var[5] 00000001 .True )
        Wait  1`
    EndLoop
    Call  PlaySoundAtPart   ( .Actor:Self *Var[5] 00000211 )
    Call  AddCoin   ( 00000001 )
    Return
    End
}

