% Automatically dumped from section 1E

#new:Actor $1E_Monstar {
% stats
[Index]        BCb 
[Level]        45`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80219E74_1E 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80219F20_1E 
[Script]      $Script_Init_80219FF0_1E 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        100`b  98`b % width height
[HealthBar]     0`b  16`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218000_1E {
	ADDIU     SP, SP, FF48
	SW        S2, 88 (SP)
	COPY      S2, A0
	SW        RA, 98 (SP)
	SW        S5, 94 (SP)
	SW        S4, 90 (SP)
	SW        S3, 8C (SP)
	SW        S1, 84 (SP)
	SW        S0, 80 (SP)
	SDC1      F24, B0 (SP)
	SDC1      F22, A8 (SP)
	SDC1      F20, A0 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      A0, V0
	JAL       ~Func:get_actor_part
	ADDIU     A1, R0, 1
	BEQ       S0, R0, .o84
	COPY      S4, V0
	CLEAR     A1
	ADDIU     A2, R0, 11
	ADDIU     V0, R0, FF
	SW        R0, 74 (S2)
	SW        R0, 78 (S2)
	SW        R0, 70 (S2)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        V0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S4)
	JAL       802DE780
	ADDIU     A3, R0, 14
	.o84
	ADDIU     A1, R0, 1
	ADDIU     V0, R0, FF
	SW        V0, 10 (SP)
	SW        R0, 14 (SP)
	SW        V0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S4)
	LIA       A3, $???_8021A2B8_1E
	JAL       802DE780
	ADDIU     A2, R0, F
	LW        V0, 74 (S2)
	ADDIU     A0, V0, A
	SLTI      V0, A0, 168
	BNE       V0, R0, .o100
	SW        A0, 74 (S2)
	LIO       V0, B60B60B7
	MULT      A0, V0
	SRA       V1, A0, 1F
	MFHI      T0
	ADDU      V0, T0, A0
	SRA       V0, V0, 8
	SUBU      V0, V0, V1
	SLL       V1, V0, 1
	ADDU      V1, V1, V0
	SLL       V0, V1, 4
	SUBU      V0, V0, V1
	SLL       V0, V0, 3
	SUBU      V0, A0, V0
	SW        V0, 74 (S2)
	.o100
	CLEAR     S0
	LUI       S3, 8000
	COPY      S1, S0
	LIF       F25, 1.875
	MTC1      R0, F24
	LIF       F23, 3.1875
	MTC1      R0, F22
	LIF       F21, 28.0
	MTC1      R0, F20
	.o130
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 20
	C.LE.D    F20, F0
	NOP
	BC1T      .o178
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o190
	SB        V1, 0 (V0)
	.o178
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o190
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	ADDIU     A0, A0, 2D
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 38
	C.LE.D    F20, F0
	NOP
	BC1T      .o1DC
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o1F4
	SB        V1, 0 (V0)
	.o1DC
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o1F4
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	ADDIU     A0, A0, 5A
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 50
	C.LE.D    F20, F0
	NOP
	BC1T      .o240
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o258
	SB        V1, 0 (V0)
	.o240
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o258
	ADDIU     S0, S0, 1
	SLTI      V0, S0, 14
	BNE       V0, R0, .o130
	ADDIU     S1, S1, 19
	CLEAR     S0
	ADDIU     S3, SP, 20
	ADDIU     S2, SP, 38
	ADDIU     S1, SP, 50
	ADDIU     S5, R0, FF
	CLEAR     A1
	.o280
	ADDIU     A2, R0, C
	ADDU      V0, S3, S0
	ADDU      V1, S2, S0
	ADDU      A0, S1, S0
	LBU       V0, 0 (V0)
	LBU       V1, 0 (V1)
	LBU       A0, 0 (A0)
	COPY      A3, S0
	SW        R0, 14 (SP)
	SW        S5, 18 (SP)
	SW        R0, 1C (SP)
	SLL       V0, V0, 18
	SLL       V1, V1, 10
	OR        V0, V0, V1
	SLL       A0, A0, 8
	OR        V0, V0, A0
	ORI       V0, V0, FF
	SW        V0, 10 (SP)
	LW        A0, 84 (S4)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, 14
	BNE       V0, R0, .o280
	CLEAR     A1
	LW        RA, 98 (SP)
	LW        S5, 94 (SP)
	LW        S4, 90 (SP)
	LW        S3, 8C (SP)
	LW        S2, 88 (SP)
	LW        S1, 84 (SP)
	LW        S0, 80 (SP)
	LDC1      F24, B0 (SP)
	LDC1      F22, A8 (SP)
	LDC1      F20, A0 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, B8
}

#new:Function $Function_80218458_1E {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	ADDIU     V0, R0, 1
	COPY      A1, A0
	COPY      A2, A0
	LAW       V1, 801512F0
	COPY      A3, A0
	JAL       ~Func:set_background_color_blend
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_8021849C_1E {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802184D4_1E {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:DefenseTable $DefenseTable_80219E60_1E {
.Element:Normal 00000000
.Element:Cosmic 00000063
.Element:End
}

#new:StatusTable $StatusTable_80219E74_1E {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80219F20_1E {
00020000 01000000 000000FF $IdleAnimations_80219F90_1E $DefenseTable_80219E60_1E 00000100 00000000 01F10000 00000000 
80800001 02003200 FA1400FF $IdleAnimations_80219F90_1E $DefenseTable_80219E60_1E 00000100 00000000 01F10000 00000000 
}

#new:IdleAnimations $IdleAnimations_80219F90_1E {
.Status:Normal    007E0001
.Status:Stone     007E0000
.Status:Sleep     007E0001
.Status:Poison    007E0001
.Status:Stop      007E0000
.Status:Static    007E0001
.Status:Paralyze  007E0000
.Status:Paralyze  007E0000
.Status:Dizzy     007E0001
.Status:Dizzy     007E0001
.Status:End
}

#new:Script $Script_Init_80219FF0_1E {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021B394_1E )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A2D0_1E )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A4FC_1E )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B384_1E )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Return
    End
}

#new:Unknown $???_8021A2B8_1E {
$???_8021A098_1E $???_8021A298_1E 00200020 FFFFFFFC 00000000 $???_80223570_1E 
}

#new:Script $Script_Idle_8021A2D0_1E {
    ChildThread
        Call  $Function_80218000_1E ( )
    EndChildThread
    Label  0
    Call  GetActorPos   ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  MakeLerp      ( 00000000 0000000A 0000001E .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Add   *Var[0]  *Var[3] 
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    Label  2
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[5] )
    Wait  1`
    If  *Var[5]  ==  00000001 
        Goto  2
    EndIf
    If  *Var[1]  ==  00000001 
        Goto  1
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  MakeLerp      ( 00000000 FFFFFFF6 0000001E .Easing:CosInOut )
    Label  3
    Call  UpdateLerp ( )
    Add   *Var[0]  *Var[3] 
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    Label  4
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[5] )
    Wait  1`
    If  *Var[5]  ==  00000001 
        Goto  4
    EndIf
    If  *Var[1]  ==  00000001 
        Goto  3
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8021A4FC_1E {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007E0008 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Set   *Var[1]  007E0008 
            Set   *Var[2]  FFFFFFFF 
            ExecWait  $Script_8021B898_1E 
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Set   *Var[1]  007E0008 
            Set   *Var[2]  FFFFFFFF 
            ExecWait  $Script_8021B898_1E 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007E0008 
            ExecWait  $Script_8021B55C_1E 
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0001 
                Case  ==  00000001 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0004 
            EndSwitch
            ExecWait  DoImmune 
        Case  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0001 
                Case  ==  00000001 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0004 
            EndSwitch
            ExecWait  DoImmune 
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007E0008 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007E0008 
            ExecWait  $Script_8021B55C_1E 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  007E0001 
            ExecWait  DoRecover 
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0001 
                Case  ==  00000001 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0004 
            EndSwitch
            ExecWait  DoAirLift 
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0001 
                Case  ==  00000001 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  007E0004 
            EndSwitch
            ExecWait  DoImmune 
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021AB64_1E {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 000000FA )
    Call  SetBattleCamOffsetZ   ( 00000037 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Wait  30`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 007E0004 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 007E0005 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 007E0006 )
    EndThread
    Thread
        Call  $Function_80218458_1E ( )
        Call  MakeLerp  ( 00000000 000000C8 0000003C .Easing:QuadraticIn )
        Label  0
        Call  UpdateLerp ( )
        Call  $Function_8021849C_1E ( *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000001 
            Goto  0
        EndIf
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
    Call  $Function_802184D4_1E ( 00000050 00000078 )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000064 )
    Call  SetBattleCamOffsetZ   ( 0000003C )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000003C )
    Wait  60`
    Call  PlaySoundAtActor  ( .Actor:Self 000002EA )
    Call  PlaySoundAtActor  ( .Actor:Self 0000036E )
    Thread
        Wait  10`
        Loop  00000012 
            Call  RandInt   ( 00000096 *Var[0] )
            Add   *Var[0]  00000064 
            Call  $Function_802184D4_1E ( *Var[0] 00000014 )
            Wait  10`
        EndLoop
    EndThread
    Thread
        Loop  0000003C 
            Call  RandInt   ( 00000001 *Var[0] )
            Add   *Var[0]  00000002 
            Call  RandInt   ( 00000190 *Var[1] )
            Sub   *Var[1]  00000064 
            Call  RandInt   ( 00000064 *Var[2] )
            Sub   *Var[2]  00000032 
            Set   *Var[3]  *Var[1] 
            Sub   *Var[3]  000000C8 
            Set   *Var[4]  *Var[2] 
            Call  RandInt   ( 0000000A *Var[5] )
            Add   *Var[5]  0000000A 
            Call  PlayEffect    ( 0000000F *Var[0] *Var[1] 000000F0 *Var[2] *Var[3] 00000000 *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  8`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000032 
    Add   *Var[2]  00000005 
    Call  PlayEffect    ( ~FX:RadialFlowOut:BlueSpikes *Var[0] *Var[1] *Var[2] *Fixed[0.8] 000000A0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 007E0007 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Wait  170`
            Call  SetAnimation      ( .Actor:Self 00000001 007E0001 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F90_1E )
            Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
            Label  1
            Call  UpdateLerp ( )
            Call  $Function_8021849C_1E ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001 
                Goto  1
            EndIf
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  170`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000100 00000000 00000000 00000001 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation      ( .Actor:Self 00000001 007E0001 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F90_1E )
            Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
            Label  2
            Call  UpdateLerp ( )
            Call  $Function_8021849C_1E ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001 
                Goto  2
            EndIf
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8021B384_1E {
    Return
    End
}

#new:Script $Script_TakeTurn_8021B394_1E {
    ExecWait  $Script_8021AB64_1E 
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000048 
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000154 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetActorVar       ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  ActorSpeak    ( 001200E5 .Actor:Self 00000001 007E0009 007E0009 ) % Are you scaaaaared yet?
        Case  ==  00000001 
            Call  ActorSpeak    ( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
        Case  ==  00000002 
            Call  ActorSpeak    ( 001200E7 .Actor:Self 00000001 007E0009 007E0009 ) % Thiiiis is your only chance!
        Default
            Call  ActorSpeak    ( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
    EndSwitch
    Call  AddActorVar       ( .Actor:Self 00000003 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Return
    End
}

#new:Script $Script_8021B55C_1E {
    Call  8027D32C  ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    If  *Var[1]  !=  FFFFFFFF 
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
        Wait  10`
    EndIf
    Call  80269E80  ( *Var[5] )
    Switch  *Var[5] 
        CaseOR  ==  0000000A 
        CaseOR  ==  0000000E 
        CaseOR  ==  0000000C 
        CaseOR  ==  00000010 
        CaseOR  ==  0000000B 
        CaseOR  ==  0000000F 
        CaseOR  ==  0000000D 
        CaseOR  ==  00000011 
        CaseOR  ==  00000002 
        EndCaseGroup
        Default
            Set   *Flag[00]  .False 
            Call  GetOriginalActorType  ( .Actor:Self *Var[1] )
            Switch  *Var[1] 
                CaseOR  ==  0000000D 
                CaseOR  ==  0000000F 
                CaseOR  ==  0000004A 
                EndCaseGroup
                Default
            EndSwitch
            If  *Var[2]  !=  FFFFCFC7 
                Set   *Var[2]  00000000 
                Loop  00000018 
                    Call  SetActorYaw   ( .Actor:Self *Var[2] )
                    Add   *Var[2]  0000001E 
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndIf
    EndSwitch
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Add   *Var[2]  0000000A 
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Set   *Var[3]  00000000 
    Loop  0000000C 
        Call  SetActorRotation  ( .Actor:Self *Var[3] 00000000 00000000 )
        Add   *Var[3]  00000008 
        Wait  1`
    EndLoop
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget 
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021B898_1E {
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Call  80269E80      ( *Var[3] )
    Switch  *Var[3] 
        Case  ==  00000009 
            Call  GetOriginalActorType  ( .Actor:Self *Var[7] )
            Switch  *Var[7] 
                CaseOR  ==  00000012 
                CaseOR  ==  00000030 
                EndCaseGroup
                Default
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
                    Add   *Var[5]  00000037 
                    Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  JumpToGoal    ( .Actor:Self 00000008 .False .False .False )
            EndSwitch
            Set   *Var[7]  00000000 
            Loop  0000001E 
                Add   *Var[7]  00000030 
                Call  SetActorYaw   ( .Actor:Self *Var[7] )
                Wait  1`
            EndLoop
            Call  GetOriginalActorType  ( .Actor:Self *Var[7] )
            Switch  *Var[7] 
                CaseOR  ==  00000012 
                CaseOR  ==  00000030 
                    Wait  30`
                EndCaseGroup
                Default
                    Sub   *Var[5]  00000037 
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
                    If  *Var[5]  ==  00000000 
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Else
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 00000005 .False .False .False )
                    EndIf
            EndSwitch
        Default
            Wait  20`
    EndSwitch
    If  *Var[2]  !=  FFFFFFFF 
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[2] )
    EndIf
    Wait  10`
    Call  GetLastEvent  ( .Actor:Self *Var[1] )
    Switch  *Var[1] 
        Case  ==  .Event:BurnHit % E
            Call  GetPartEventFlags ( .Actor:Self *Var[0] *Var[1] )
            If  *Var[1]  !&  00000202 % 202
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetActorSize      ( .Actor:Self *Var[3] *Var[4] )
                Call  GetStatusFlags    ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00080000 
                    MulF  *Var[3]  *Fixed[0.4] 
                    MulF  *Var[4]  *Fixed[0.4] 
                EndIf
                DivF  *Var[3]  *Fixed[2.0] 
                Call  GetActorFlags ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00000800 
                    SubF  *Var[1]  *Var[3] 
                Else
                    AddF  *Var[1]  *Var[3] 
                EndIf
                AddF  *Var[2]  *Fixed[5.0] 
                DivF  *Var[3]  *Fixed[10.0] 
                Call  GetStatusFlags    ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00080000 
                    MulF  *Var[3]  *Fixed[0.4] 
                    If  *Var[3]  <  00000001 
                        SetF  *Var[3]  *Fixed[1.0] 
                    EndIf
                EndIf
                Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndIf
        Case  ==  .Event:BurnDeath % 24
    EndSwitch
    Return
    End
}

