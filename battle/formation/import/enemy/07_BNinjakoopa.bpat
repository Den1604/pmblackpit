% Automatically dumped from section 07

#new:Actor $07_BNinjakoopa {
% stats
[Index]        9Db 
[Level]        17`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00240000 
[StatusTable] $StatusTable_8022B4B8_07 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022B564_07 
[Script]      $Script_Init_8022DC2C_07 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_8022B4A0_07 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8022B4AC_07 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8022B4B8_07 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   60`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8022B564_07 {
00800000 01000000 FB2400FF $IdleAnimations_8022B5B0_07 $DefenseTable_8022B4A0_07 00001000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_8022B5B0_07 {
.Status:Normal    00660004
.Status:Stone     00660000
.Status:Sleep     00660015
.Status:Poison    00660000
.Status:Stop      00660000
.Status:Static    00660000
.Status:Paralyze  00660000
.Status:Paralyze  00660000
.Status:Dizzy     00660018
.Status:Dizzy     00660018
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022B67C_07 {
.Status:Normal    0066000C
.Status:Stone     00660017
.Status:Sleep     00660017
.Status:Poison    00660017
.Status:Stop      00660017
.Status:Static    00660017
.Status:Paralyze  00660017
.Status:Paralyze  00660017
.Status:Dizzy     00660022
.Status:Dizzy     00660022
.Status:End
}

#new:Script $Script_Init_8022DC2C_07 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E414_07 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022DD20_07 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022DD88_07 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022E424_07 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8022DD20_07 {
    Return
    End
}

#new:IntTable $IntTable_8022DD30_07 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_8022DD88_07 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000B 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000E 
            SetConst  *Var[2]  0066000F 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000E 
            SetConst  *Var[2]  0066000F 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000F 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000B 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000B 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B67C_07 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4AC_07 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
            Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000 
                Call  SetAnimation  ( .Actor:Self 00000001 0066000B )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Thread
                    Wait  4`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                    Wait  1`
                EndThread
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 0066000C )
            EndIf
            UseIntBuffer  $IntTable_8022DD30_07 
            Loop  00000016 
                Get1Int  *Var[0] 
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00660008 
                ExecWait  DoImmune 
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  ==  00000000 
                    Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0066000C 
                ExecWait  DoImmune 
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000B 
            ExecWait  DoNormalHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0066000B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  00660004 
                ExecWait  DoRecover 
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022E414_07 {
    Return
    End
}

#new:Script $Script_NextTurn_8022E424_07 {
    Return
    End
}

