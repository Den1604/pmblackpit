% Automatically dumped from section 1D

#new:Actor $1D_FrostPiranha {
% stats
[Index]        39b 
[Level]        22`b 
[MaxHP]        10`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022AB18_1D 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022ABC4_1D 
[Script]      $Script_Init_8022AC10_1D 
% move effectiveness
[Escape]       70`b 
[Item]         20`b 
[AirLift]      20`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         60`b  52`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -22`b  32`b % dx dy
[StatusIcon]    1`b  44`b % dx dy
}

#new:Function $Function_802195F0_1D {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802196BC_1D {
	ADDIU     SP, SP, FFC0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 34 (SP)
	SW        S6, 30 (SP)
	SW        S5, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F20, 38 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S6, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S5, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S1, V0
	ADDIU     A0, R0, 1
	MTC1      S6, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A1, F2
	MTC1      S5, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A2, F2
	MTC1      S4, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A3, F2
	COPY      S0, V0
	SWC1      F20, 10 (SP)
	JAL       80072230
	SW        S2, 14 (SP)
	LW        V1, C (V0)
	SW        S3, 18 (V1)
	LW        V1, C (V0)
	SW        S1, 1C (V1)
	LW        V1, C (V0)
	SW        S0, 20 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, FF
	SW        A0, 28 (V1)
	LW        V1, C (V0)
	SW        A0, 2C (V1)
	LW        V1, C (V0)
	SW        A0, 30 (V1)
	LW        RA, 34 (SP)
	LW        S6, 30 (SP)
	LW        S5, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:IdleAnimations $IdleAnimations_8022AAB0_1D {
.Status:Normal    00360101
.Status:Stone     00360100
.Status:Sleep     00360100
.Status:Poison    00360101
.Status:Stop      00360100
.Status:Static    00360100
.Status:Paralyze  00360100
.Status:Paralyze  00360100
.Status:Dizzy     0036010F
.Status:End
}

#new:DefenseTable $DefenseTable_8022AAFC_1D {
.Element:Normal 00000000
.Element:Fire   FFFFFFFE
.Element:Ice    00000063
.Element:End
}

#new:StatusTable $StatusTable_8022AB18_1D {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8022ABC4_1D {
00800000 01000000 F13200FF $IdleAnimations_8022AAB0_1D $DefenseTable_8022AAFC_1D 00000008 00000000 03F20000 00000000 
}

#new:Script $Script_Init_8022AC10_1D {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022B2D4_1D )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022AC5C_1D )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADFC_1D )
    Return
    End
}

#new:Script $Script_Idle_8022AC5C_1D {
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00040000 
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFE5 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000005 FFFFFFF5 )
        Call  $Function_802195F0_1D ( FFFFFFDB 00000009 FFFFFFF9 0000001F )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF1 00000032 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000003 FFFFFFF2 )
        Call  $Function_802195F0_1D ( FFFFFFEA 00000020 00000001 0000002C )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8022AD6C_1D {
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00360103 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_8022ADFC_1D {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360110 
            SetConst  *Var[2]  00360111 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360110 
            SetConst  *Var[2]  00360111 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360111 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoShockHit 
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8022AD6C_1D 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360101 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0036010E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360101 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360103 
            SetConst  *Var[2]  0036010E 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360103 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00360103 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022B2D4_1D {
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        ExecWait  $Script_8022B3AC_1D 
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00004000 
        ExecWait  $Script_8022B3AC_1D 
        Return
    EndIf
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000000FA 
        ExecWait  $Script_8022BD44_1D 
    Else
        ExecWait  $Script_8022B3AC_1D 
    EndIf
    Return
    End
}

#new:Script $Script_8022B3AC_1D {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetAnimation      ( .Actor:Self 00000001 00360118 )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
        Wait  8`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B 
        Set   *Var[1]  00000000 
        Set   *Var[3]  *Var[0] 
        Set   *Var[4]  *Var[1] 
        Set   *Var[5]  *Var[2] 
        Call  GetActorPos       ( .Actor:Player *Var[6] *Var[7] *Var[8] )
        Add   *Var[3]  *Var[6] 
        Add   *Var[4]  *Var[7] 
        Add   *Var[5]  *Var[8] 
        Div   *Var[3]  00000002 
        Div   *Var[4]  00000002 
        Div   *Var[5]  00000002 
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[3] *Var[4] *Var[5] )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 00000028 )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
        Call  SetAnimation      ( .Actor:Self 00000001 00360117 )
        Wait  8`
    Else
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00360103 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
        Call  SetAnimation  ( .Actor:Self 00000001 00360103 )
        Call  SetGoalToTarget       ( .Actor:Self )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags        ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000 
            Add   *Var[0]  0000000A 
        Else
            Add   *Var[0]  0000001B 
        EndIf
        Set   *Var[1]  00000000 
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
    EndIf
    Thread
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00360105 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00360106 )
            Wait  6`
            Call  SetAnimation  ( .Actor:Self 00000001 00360107 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360118 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360117 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
                Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
                Call  SetActorYaw       ( .Actor:Self 000000B4 )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                ExecWait  $Script_8022AD6C_1D 
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00360105 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00360106 )
    Wait  1`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
    Set   *Var[F]  *Var[0] 
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Wait  10`
            Call  SetAnimation      ( .Actor:Self 00000001 00360107 )
            Wait  20`
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360118 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360117 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                ExecWait  $Script_8022AD6C_1D 
            EndIf
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022BD44_1D {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Add   *Var[0]  00000014 
    Else
        Add   *Var[0]  00000032 
    EndIf
    Set   *Var[1]  00000000 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
    Call  SetAnimation  ( .Actor:Self 00000001 0036010B )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000003AB )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Add   *Var[0]  0000000C 
        Set   *Var[1]  00000005 
        SetF  *Var[3]  *Fixed[0.4] 
    Else
        Add   *Var[0]  00000020 
        Set   *Var[1]  0000000D 
        SetF  *Var[3]  *Fixed[1.0] 
    EndIf
    Call  $Function_802196BC_1D ( *Var[2] *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000078 00000000 00000078 )
    Wait  1`
    Call  SetAnimation  ( .Actor:Self 00000001 0036010C )
    Wait  5`
    Call  EnemyTestTarget       ( .Actor:Self *Var[A] ~Flags:DamageType:Ice 00004000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036010D )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8022AD6C_1D 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 40000008 0000FFFF 000042FE 00000000 00000020 )
    Set   *Var[F]  *Var[0] 
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036010D )
            Wait  20`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8022AD6C_1D 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

