% Automatically dumped from section 24

#new:Actor $24_Duplighost {
% stats
[Index]        3Bb 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021B230_24 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021B2DC_24 
[Script]      $Script_Init_8021B328_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802180D0_24 {
	ADDIU     SP, SP, FFB8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        S0, 10 (SP)
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        A0, 148 (S4)
	LW        S2, C (S4)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S3, V0
	BEQ       S0, R0, .o8C
	ADDIU     S1, S3, C
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	JAL       ~Func:get_variable
	COPY      A0, S4
	SH        V0, 70 (S3)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	COPY      A0, S4
	SH        V0, 72 (S3)
	SW        R0, 74 (S4)
	SW        R0, 70 (S4)
	LH        V1, 72 (S3)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o8C
	ADDIU     V0, R0, 2
	SW        V0, 70 (S4)
	.o8C
	LW        V0, 70 (S4)
	BNE       V0, R0, .o470
	NOP
	LWC1      F0, 144 (S3)
	LWC1      F24, C (S1)
	LWC1      F26, 14 (S1)
	SWC1      F0, 0 (S1)
	LWC1      F0, 148 (S3)
	MFC1      A2, F24
	MFC1      A3, F26
	LWC1      F22, 0 (S1)
	SWC1      F0, 4 (S1)
	LWC1      F20, 14C (S3)
	MOV.S     F12, F22
	MOV.S     F14, F20
	JAL       ~Func:atan2
	SWC1      F20, 8 (S1)
	MOV.S     F12, F22
	MFC1      A2, F24
	MFC1      A3, F26
	MOV.S     F14, F20
	JAL       ~Func:dist2D
	SWC1      F0, 48 (S1)
	LH        V0, 64 (S1)
	MOV.S     F4, F0
	BNE       V0, R0, .o13C
	SWC1      F4, 4C (S1)
	LWC1      F0, 40 (S1)
	LWC1      F2, 40 (S1)
	DIV.S     F0, F4, F0
	TRUNC.W.S F10, F0
	MFC1      V1, F10
	NOP
	SLL       V0, V1, 10
	SRA       V0, V0, 10
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F2
	NOP
	MOV.S     F2, F4
	SH        V1, 64 (S1)
	BEQ       R0, R0, .o170
	SUB.S     F8, F2, F0
	.o13C
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LH        V0, 64 (S1)
	DIV.S     F2, F4, F2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 4C (S1)
	SWC1      F2, 40 (S1)
	SUB.S     F8, F4, F0
	.o170
	LH        V1, 64 (S1)
	BEQ       V1, R0, .o860
	ADDIU     V0, R0, 2
	LH        V0, 64 (S1)
	LWC1      F2, C (S1)
	LIO       AT, 40490FD0
	MTC1      AT, F0
	LWC1      F4, 0 (S1)
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	DIV.S     F0, F0, F6
	SUB.S     F2, F2, F4
	SWC1      F0, 3C (S1)
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F2, F2, F0
	LWC1      F0, 10 (S1)
	SWC1      F2, 30 (S1)
	LWC1      F2, 4 (S1)
	SW        R0, 44 (S1)
	SUB.S     F0, F0, F2
	LWC1      F4, 14 (S1)
	MOV.S     F2, F6
	DIV.S     F0, F0, F2
	SWC1      F0, 34 (S1)
	MOV.S     F0, F6
	DIV.S     F0, F8, F0
	LWC1      F2, 8 (S1)
	LH        V0, 66 (S1)
	SUB.S     F4, F4, F2
	LWC1      F2, 40 (S1)
	SLTI      V0, V0, 3
	ADD.S     F2, F2, F0
	DIV.S     F4, F4, F6
	SWC1      F4, 38 (S1)
	BEQ       V0, R0, .o320
	SWC1      F2, 40 (S1)
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o224
	DIV       V1, V0
	BREAK     1C00
	.o224
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o23C
	LUI       AT, 8000
	BNE       V1, AT, .o23C
	NOP
	BREAK     1800
	.o23C
	MFLO      V1
	LWC1      F8, 4C (S1)
	LIF       F3, 2.8125
	MTC1      R0, F2
	CVT.D.S   F0, F8
	SUB.D     F0, F0, F2
	LIF       F3, 2.375
	MTC1      R0, F2
	CVT.S.D   F8, F0
	CVT.D.S   F0, F8
	DIV.D     F0, F0, F2
	CVT.S.D   F8, F0
	LAD       F2, $ConstDouble_80228400_24
	CVT.D.S   F0, F8
	ADD.D     F0, F0, F2
	LIF       F2, 90.0
	CVT.S.D   F8, F0
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	LH        V1, 66 (S1)
	ADDIU     V0, R0, 2
	SWC1      F2, 24 (S1)
	SWC1      F8, 50 (S1)
	BNE       V1, V0, .o2D0
	SWC1      F0, 28 (S1)
	LAD       F2, $ConstDouble_80228408_24
	CVT.D.S   F0, F8
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	.o2D0
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	LWC1      F22, 3C (S1)
	SW        R0, 18 (S1)
	MUL.S     F12, F12, F0
	NOP
	SW        R0, 1C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80228410_24
	BEQ       R0, R0, .o430
	CVT.D.S   F0, F0
	.o320
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o334
	DIV       V1, V0
	BREAK     1C00
	.o334
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o34C
	LUI       AT, 8000
	BNE       V1, AT, .o34C
	NOP
	BREAK     1800
	.o34C
	MFLO      V1
	LWC1      F8, 4C (S1)
	LIF       F3, 2.8125
	MTC1      R0, F2
	CVT.D.S   F0, F8
	SUB.D     F0, F0, F2
	LIF       F3, 2.375
	MTC1      R0, F2
	CVT.S.D   F8, F0
	CVT.D.S   F0, F8
	DIV.D     F0, F0, F2
	CVT.S.D   F8, F0
	LAD       F2, $ConstDouble_80228418_24
	CVT.D.S   F0, F8
	ADD.D     F0, F0, F2
	LIF       F2, 90.0
	CVT.S.D   F8, F0
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	LH        V1, 66 (S1)
	ADDIU     V0, R0, 4
	SWC1      F2, 24 (S1)
	SWC1      F8, 50 (S1)
	BNE       V1, V0, .o3E4
	SWC1      F0, 28 (S1)
	LIF       F3, 1.90625
	MTC1      R0, F2
	CVT.D.S   F0, F8
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	.o3E4
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	LWC1      F22, 3C (S1)
	SW        R0, 18 (S1)
	MUL.S     F12, F12, F0
	NOP
	SW        R0, 1C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80228420_24
	CVT.D.S   F0, F0
	.o430
	MUL.D     F0, F0, F2
	NOP
	MUL.D     F0, F0, F22
	NOP
	ADD.D     F0, F0, F22
	ADD.D     F20, F20, F0
	CVT.S.D   F20, F20
	SWC1      F20, 44 (S1)
	ADDIU     A0, R0, FF81
	LW        A2, 58 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 2081
	ADDIU     V0, R0, 1
	SW        V0, 70 (S4)
	.o470
	LW        V1, 70 (S4)
	ADDIU     V0, R0, 2
	BEQ       V1, V0, .o6D0
	ADDIU     V0, R0, 1
	SLTI      V0, V1, 3
	BEQ       V0, R0, .o49C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o4B0
	CLEAR     V0
	BEQ       R0, R0, .o860
	NOP
	.o49C
	ADDIU     V0, R0, 3
	BEQ       V1, V0, .o78C
	CLEAR     V0
	BEQ       R0, R0, .o860
	NOP
	.o4B0
	LWC1      F2, 44 (S1)
	LIO       AT, 3FC90FD0
	MTC1      AT, F0
	NOP
	C.LT.S    F0, F2
	NOP
	BC1F      .o4E0
	ADDIU     A0, R0, FF81
	LW        A2, 5C (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	.o4E0
	LWC1      F6, 0 (S1)
	LWC1      F0, 30 (S1)
	LWC1      F4, 4 (S1)
	LWC1      F22, 144 (S3)
	ADD.S     F6, F6, F0
	LWC1      F0, 34 (S1)
	LWC1      F2, 38 (S1)
	ADD.S     F4, F4, F0
	LWC1      F0, 8 (S1)
	LWC1      F20, 148 (S3)
	ADD.S     F0, F0, F2
	SWC1      F6, 0 (S1)
	SWC1      F4, 4 (S1)
	SWC1      F0, 8 (S1)
	LWC1      F0, 148 (S3)
	MOV.S     F2, F6
	SWC1      F0, 18 (S1)
	SWC1      F2, 144 (S3)
	JAL       ~Func:sin_rad
	LWC1      F12, 44 (S1)
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 4 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, 148 (S3)
	LWC1      F0, 8 (S1)
	SWC1      F0, 14C (S3)
	LWC1      F2, 10 (S1)
	LWC1      F0, 148 (S3)
	C.LT.S    F0, F2
	NOP
	BC1F      .o580
	MOV.S     F12, F22
	LH        V0, 64 (S1)
	SLTI      V0, V0, 3
	BNEL      V0, R0, .o57C
	SWC1      F2, 148 (S3)
	MOV.S     F12, F22
	.o57C
	LWC1      F0, 148 (S3)
	.o580
	LW        A2, 144 (S3)
	NEG.S     F0, F0
	MFC1      A3, F0
	JAL       ~Func:atan2
	NEG.S     F14, F20
	NEG.S     F0, F0
	SWC1      F0, 164 (S3)
	LH        V0, 66 (S1)
	LWC1      F0, 148 (S3)
	SLTI      V0, V0, 3
	BEQ       V0, R0, .o5F8
	SWC1      F0, 1C (S1)
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	MUL.S     F12, F12, F0
	NOP
	LWC1      F22, 3C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80228428_24
	BEQ       R0, R0, .o63C
	CVT.D.S   F0, F0
	.o5F8
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	MUL.S     F12, F12, F0
	NOP
	LWC1      F22, 3C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80228430_24
	CVT.D.S   F0, F0
	.o63C
	MUL.D     F0, F0, F2
	NOP
	MUL.D     F0, F0, F22
	NOP
	ADD.D     F0, F0, F22
	ADD.D     F20, F20, F0
	CVT.S.D   F20, F20
	SWC1      F20, 44 (S1)
	LWC1      F12, 24 (S1)
	LWC1      F0, 28 (S1)
	ADD.S     F12, F12, F0
	JAL       ~Func:clamp_angle
	SWC1      F12, 24 (S1)
	LHU       V0, 64 (S1)
	SWC1      F0, 24 (S1)
	ADDIU     V0, V0, FFFF
	SH        V0, 64 (S1)
	SLL       V0, V0, 10
	BNE       V0, R0, .o860
	CLEAR     V0
	LWC1      F0, 10 (S1)
	ADDIU     A0, R0, FF81
	SWC1      F0, 148 (S3)
	LWC1      F0, 18 (S1)
	LWC1      F2, 1C (S1)
	LW        A2, 60 (S1)
	SUB.S     F0, F0, F2
	LIO       AT, 3FE66666
	MTC1      AT, F2
	ADDIU     A1, R0, 1
	SWC1      F2, 3C (S1)
	NEG.S     F0, F0
	JAL       ~Func:set_animation
	SWC1      F0, 44 (S1)
	BEQ       R0, R0, .o860
	ADDIU     V0, R0, 1
	.o6D0
	SH        V0, 64 (S1)
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o6E8
	DIV       V1, V0
	BREAK     1C00
	.o6E8
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o700
	LUI       AT, 8000
	BNE       V1, AT, .o700
	NOP
	BREAK     1800
	.o700
	MFLO      V1
	LWC1      F2, 18 (S1)
	LWC1      F0, 1C (S1)
	LIO       AT, 3FE66666
	MTC1      AT, F8
	LWC1      F4, 1C (S1)
	SUB.S     F2, F2, F0
	LWC1      F0, 18 (S1)
	LIF       F6, 90.0
	SUB.S     F0, F0, F4
	SWC1      F8, 3C (S1)
	SWC1      F6, 24 (S1)
	NEG.S     F2, F2
	SWC1      F2, 44 (S1)
	LAD       F2, $ConstDouble_80228438_24
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (S1)
	LWC1      F0, 144 (S3)
	SWC1      F0, 0 (S1)
	LWC1      F0, 148 (S3)
	SWC1      F0, 4 (S1)
	LWC1      F0, 14C (S3)
	ADDIU     V0, R0, 3
	SWC1      F0, 8 (S1)
	SW        V0, 70 (S4)
	.o78C
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F22
	NOP
	MUL.S     F12, F12, F22
	NOP
	LWC1      F20, 0 (S1)
	LIF       F24, 360.0
	CVT.D.S   F20, F20
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F12, 24 (S1)
	MUL.S     F12, F12, F22
	NOP
	LAD       F0, $ConstDouble_80228440_24
	CVT.D.S   F2, F2
	DIV.D     F2, F2, F0
	ADD.D     F20, F20, F2
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       ~Func:sin_rad
	SWC1      F20, 0 (S1)
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F12, 24 (S1)
	LWC1      F0, 28 (S1)
	ADD.S     F12, F12, F0
	LWC1      F0, 4 (S1)
	SUB.S     F0, F0, F2
	SWC1      F12, 24 (S1)
	JAL       ~Func:clamp_angle
	SWC1      F0, 4 (S1)
	LWC1      F2, 0 (S1)
	SWC1      F0, 24 (S1)
	SWC1      F2, 144 (S3)
	LWC1      F0, 4 (S1)
	SWC1      F0, 148 (S3)
	LWC1      F0, 8 (S1)
	SWC1      F0, 14C (S3)
	LHU       V1, 64 (S1)
	ADDIU     V1, V1, FFFF
	SH        V1, 64 (S1)
	SLL       V1, V1, 10
	BEQ       V1, R0, .o860
	ADDIU     V0, R0, 1
	CLEAR     V0
	.o860
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80218960_24 {
	ADDIU     SP, SP, FFC8
	SW        S2, 20 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S3, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o3C
	ADDIU     S3, S1, C
	SW        R0, 70 (S2)
	.o3C
	LW        V0, 70 (S2)
	BNE       V0, R0, .o64
	ADDIU     V0, R0, 1
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	SW        V0, 70 (S2)
	.o64
	LWC1      F0, 50 (S1)
	MTC1      R0, F20
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o90
	ADDIU     A0, R0, FF81
	LW        A2, 64 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	LWC1      F0, 50 (S1)
	.o90
	C.LT.S    F0, F20
	NOP
	BC1F      .oAC
	ADDIU     A0, R0, FF81
	LW        A2, 68 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	.oAC
	LWC1      F4, 10 (S1)
	LWC1      F0, 50 (S1)
	LW        A1, 4C (S1)
	ADD.S     F4, F4, F0
	LWC1      F2, 48 (S1)
	LW        A2, 54 (S1)
	SUB.S     F0, F0, F2
	COPY      A0, S3
	SWC1      F4, 10 (S1)
	JAL       ~Func:add_xz_vec3f
	SWC1      F0, 50 (S1)
	LWC1      F0, 10 (S1)
	LWC1      F2, 14 (S1)
	SWC1      F0, 148 (S1)
	LWC1      F0, C (S1)
	LWC1      F4, 148 (S1)
	SWC1      F2, 14C (S1)
	C.LT.S    F4, F20
	NOP
	BC1T      .o108
	SWC1      F0, 144 (S1)
	BEQ       R0, R0, .o134
	CLEAR     V0
	.o108
	LWC1      F0, 18C (S1)
	SWC1      F20, 148 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, 144 (S1)
	LW        A2, 148 (S1)
	LW        A3, 14C (S1)
	JAL       ~Func:play_movement_dust_effects
	ADDIU     A0, R0, 2
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 148
	ADDIU     V0, R0, 1
	.o134
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_80218AB4_24 {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LH        A0, 428 (V0)
	COPY      A0, V0
	LW        V0, 0 (A0)
	ANDI      V0, V0, 800
	BNE       V0, R0, .o58
	NOP
	LBU       V0, 191 (A0)
	LW        V1, 88 (S0)
	SRL       V0, V0, 1
	ADDU      V1, V1, V0
	SW        V1, 88 (S0)
	LBU       V0, 191 (A0)
	SRL       V0, V0, 2
	BEQ       R0, R0, .o78
	ADDU      V1, V1, V0
	.o58
	LBU       V0, 191 (A0)
	LW        V1, 88 (S0)
	SRL       V0, V0, 1
	SUBU      V1, V1, V0
	SW        V1, 88 (S0)
	LBU       V0, 191 (A0)
	SRL       V0, V0, 2
	SUBU      V1, V1, V0
	.o78
	SW        V1, 88 (S0)
	LBU       V1, 191 (A0)
	LBU       A0, 190 (A0)
	SLT       V0, V1, A0
	BNEL      V0, R0, .o90
	COPY      V1, A0
	.o90
	ADDIU     V0, V1, 7E
	SW        V0, 90 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218B60_24 {
	ADDIU     SP, SP, FFD8
	SW        S0, 18 (SP)
	COPY      S0, A0
	LUI       A1, 42D4
	LUI       A2, 4310
	CLEAR     A0
	SW        RA, 20 (SP)
	SW        S1, 1C (SP)
	LW        S1, C (S0)
	LIF       F0, 1.0
	CLEAR     A3
	SW        R0, 14 (SP)
	JAL       80072110
	SWC1      F0, 10 (SP)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:set_variable
	COPY      A2, V0
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218BFC_24 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	COPY      A0, V0
	LW        V0, C (A0)
	LIF       F0, 144.0
	NOP
	SWC1      F0, 8 (V0)
	LW        V1, 0 (A0)
	ORI       V1, V1, 10
	SW        V1, 0 (A0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218C44_24 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218D10_24 {
	ADDIU     SP, SP, FFD8
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o44
	ADDIU     S2, S1, C
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	.o44
	LW        A1, 4C (S1)
	LW        A2, 54 (S1)
	JAL       ~Func:add_xz_vec3f
	COPY      A0, S2
	LWC1      F2, 4C (S1)
	LIF       F0, 4.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o8C
	CLEAR     A0
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	BEQ       R0, R0, .oA4
	LW        A3, 14 (S1)
	.o8C
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	LW        A3, 14 (S1)
	ADDIU     A0, R0, 1
	.oA4
	JAL       ~Func:play_movement_dust_effects
	NOP
	LWC1      F0, 40 (S2)
	LIF       F3, 1.9375
	MTC1      R0, F2
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	LWC1      F2, 0 (S2)
	CVT.S.D   F0, F0
	SWC1      F0, 40 (S2)
	SWC1      F2, 144 (S1)
	LWC1      F0, 4 (S2)
	SWC1      F0, 148 (S1)
	LWC1      F0, 8 (S2)
	SWC1      F0, 14C (S1)
	LWC1      F0, 40 (S2)
	LIF       F3, 1.875
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1T      .o10C
	ADDIU     V0, R0, 2
	CLEAR     V0
	.o10C
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218E34_24 {
	ADDIU     SP, SP, FFD8
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o44
	ADDIU     S2, S1, C
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	.o44
	LW        A1, 4C (S1)
	LW        A2, 54 (S1)
	JAL       ~Func:add_xz_vec3f
	COPY      A0, S2
	LWC1      F2, 4C (S1)
	LIF       F0, 4.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o8C
	CLEAR     A0
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	BEQ       R0, R0, .oA4
	LW        A3, 14 (S1)
	.o8C
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	LW        A3, 14 (S1)
	ADDIU     A0, R0, 1
	.oA4
	JAL       ~Func:play_movement_dust_effects
	NOP
	LWC1      F0, 40 (S2)
	LIF       F3, 1.9375
	MTC1      R0, F2
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	LWC1      F2, 0 (S2)
	CVT.S.D   F0, F0
	SWC1      F0, 40 (S2)
	SWC1      F2, 144 (S1)
	LWC1      F0, 4 (S2)
	SWC1      F0, 148 (S1)
	LWC1      F0, 8 (S2)
	SWC1      F0, 14C (S1)
	LWC1      F0, 40 (S2)
	LIF       F3, 1.875
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1T      .o10C
	ADDIU     V0, R0, 2
	CLEAR     V0
	.o10C
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218F58_24 {
	ADDIU     SP, SP, FFB8
	SW        RA, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o128
	ADDIU     S2, S1, C
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 20
	COPY      S0, V0
	ADDIU     V0, R0, 1
	ADDIU     A1, S1, 144
	ADDIU     A2, S1, 148
	SW        S0, 90 (S1)
	SW        V0, 4 (S0)
	SW        R0, 8 (S0)
	SW        V0, C (S0)
	SW        R0, 10 (S0)
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o84
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .o98
	SWC1      F0, 10 (SP)
	.o84
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o98
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LW        A2, 0 (A2)
	LW        A3, 0 (A3)
	JAL       800723B0
	CLEAR     A0
	ADDIU     A1, S1, 144
	SW        V0, 14 (S0)
	LB        V0, 210 (S1)
	ADDIU     V1, R0, A
	BEQ       V0, V1, .oE0
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .oF4
	SWC1      F0, 10 (SP)
	.oE0
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.oF4
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LUI       A2, C47A
	LW        A3, 0 (A3)
	JAL       800723B0
	ADDIU     A0, R0, 1
	SW        V0, 18 (S0)
	ADDIU     V0, R0, 1
	SW        V0, 0 (S0)
	LB        V0, 210 (S1)
	SW        V0, 1C (S0)
	.o128
	LW        S0, 84 (S2)
	LW        V0, 0 (S0)
	BEQ       V0, R0, .o458
	ADDIU     V0, R0, 2
	LW        V0, 4 (S0)
	BEQ       V0, R0, .o174
	ADDIU     V0, R0, 8
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o174
	NOP
	LW        V0, 8 (S0)
	ADDIU     V0, V0, F
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:clamp_angle
	SW        V0, 8 (S0)
	TRUNC.W.S F6, F0
	SWC1      F6, 8 (S0)
	.o174
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F12, 8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LIF       F2, 3.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LH        V0, 152 (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	TRUNC.W.S F6, F0
	MFC1      V1, F6
	NOP
	SLL       V0, V1, 18
	LWC1      F0, 148 (S1)
	SRA       V0, V0, 18
	SB        V1, 19A (S1)
	ADD.S     F0, F0, F2
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LH        V0, 150 (S1)
	ADD.S     F0, F0, F2
	ADDIU     V1, R0, A
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	CVT.D.S   F4, F0
	LWC1      F0, 144 (S1)
	LB        V0, 210 (S1)
	ADD.S     F22, F0, F2
	LAD       F0, $ConstDouble_80228448_24
	BEQL      V0, V1, .o23C
	ADD.D     F0, F4, F0
	LIF       F1, 2.625
	MTC1      R0, F0
	NOP
	ADD.D     F0, F4, F0
	.o23C
	CVT.S.D   F20, F0
	LH        V0, 154 (S1)
	LWC1      F0, 14C (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LW        V0, C (S0)
	BEQ       V0, R0, .o3C0
	ADD.S     F24, F0, F2
	LW        V1, 10 (S0)
	BEQ       V1, R0, .o27C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o318
	NOP
	BEQ       R0, R0, .o3F8
	NOP
	.o27C
	LW        V0, 14 (S0)
	BNE       V0, R0, .o2DC
	ADDIU     V0, R0, A
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o2A4
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o2B8
	SWC1      F0, 10 (SP)
	.o2A4
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o2B8
	CLEAR     A0
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 14 (S0)
	.o2DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o2F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o2F8
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	BEQ       R0, R0, .o3B4
	LW        V0, 14 (S0)
	.o318
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o334
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o334
	LW        V0, 18 (S0)
	BNE       V0, R0, .o39C
	NOP
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o360
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o374
	SWC1      F0, 10 (SP)
	.o360
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o374
	ADDIU     A0, R0, 1
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 18 (S0)
	LW        V0, 18 (S0)
	.o39C
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 18 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	LW        V0, 18 (S0)
	.o3B4
	LW        V0, C (V0)
	BEQ       R0, R0, .o3F8
	SWC1      F24, C (V0)
	.o3C0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o3DC
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o3DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o3F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o3F8
	LB        V1, 210 (S1)
	LW        V0, 1C (S0)
	BEQ       V0, V1, .o454
	CLEAR     V0
	LW        V0, C (S0)
	BEQ       V0, R0, .o454
	CLEAR     V0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o430
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o430
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o44C
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o44C
	LB        V1, 210 (S1)
	CLEAR     V0
	.o454
	SW        V1, 1C (S0)
	.o458
	LW        RA, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_802193D4_24 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LW        A0, 90 (V0)
	LW        V1, 14 (A0)
	BEQ       V1, R0, .o2C
	SW        R0, 0 (A0)
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o2C
	LW        V1, 18 (A0)
	BEQ       V1, R0, .o44
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o44
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219428_24 {
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, 4 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219474_24 {
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, C (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802194C0_24 {
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, 10 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021950C_24 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	ADDIU     V0, R0, 1
	COPY      A1, A0
	COPY      A2, A0
	LAW       V1, 801512F0
	COPY      A3, A0
	JAL       ~Func:set_background_color_blend
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219550_24 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_GetPartner_24 {
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        S1, 14 (SP)
	LIA       S1, 8010F290
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LB        A2, 12 (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LB        V0, 12 (S1)
	LW        A1, 0 (S0)
	SLL       V0, V0, 3
	ADDU      V0, V0, S1
	LB        A2, 15 (V0)
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802195F4_24 {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	COPY      S0, V0
	COPY      V1, V0
	ADDIU     S0, S0, FFFF
	SLTIU     V0, S0, 9
	BEQ       V0, R0, .oB0
	CLEAR     A0
	SLL       V0, S0, 2
	LTW       V0, V0 ($JumpTable_80228450_24)
	JR        V0
	NOP
% LBL: from $JumpTable_80228450_24 , entry 0`
	LIA       A0, $SpecialFormation_8021E990_24
	BEQ       R0, R0, .oB0
	RESERVED
% LBL: from $JumpTable_80228450_24 , entry 1`
	LIA       A0, $SpecialFormation_80220644_24
	BEQ       R0, R0, .oB0
	RESERVED
% LBL: from $JumpTable_80228450_24 , entry 2`
	LIA       A0, $SpecialFormation_802218A4_24
	BEQ       R0, R0, .oB0
	RESERVED
% LBL: from $JumpTable_80228450_24 , entry 3`
	LIA       A0, $SpecialFormation_80222830_24
	BEQ       R0, R0, .oB0
	RESERVED
% LBL: from $JumpTable_80228450_24 , entry 8`
	LIA       A0, $SpecialFormation_80223C00_24
	BEQ       R0, R0, .oB0
	RESERVED
% LBL: from $JumpTable_80228450_24 , entry 5`
	LIA       A0, $SpecialFormation_80224AFC_24
	BEQ       R0, R0, .oB0
	RESERVED
% LBL: from $JumpTable_80228450_24 , entry 6`
	LIA       A0, $SpecialFormation_80226494_24
	BEQ       R0, R0, .oB0
	RESERVED
% LBL: from $JumpTable_80228450_24 , entry 7`
	LIA       A0, $SpecialFormation_80227734_24
% LBL: from $JumpTable_80228450_24 , entry 4`
	.oB0
	LB        V1, 1F1 (V1)
	SW        V1, 8 (A0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_8021B1C0_24 {
.Status:Normal    004E0002
.Status:Stone     004E0000
.Status:Sleep     004E000D
.Status:Poison    004E0002
.Status:Stop      004E0000
.Status:Static    004E0002
.Status:Paralyze  004E0000
.Status:Dizzy     004E000E
.Status:Fear      004E000E
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B20C_24 {
.Status:Normal    004E000A
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B218_24 {
.Status:Normal    004E0004
.Status:End
}

#new:DefenseTable $DefenseTable_8021B224_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021B230_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     75`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021B2DC_24 {
00800000 01000000 FB1900FF $IdleAnimations_8021B1C0_24 $DefenseTable_8021B224_24 00000000 00000000 FEF60000 00000000 
}

#new:Script $Script_Init_8021B328_24 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227F70_24 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021B440_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B48C_24 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B3A0_24 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_NextTurn_8021B3A0_24 {
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000A 
        Case  ==  0000000C 
        Case  ==  0000000B 
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000003 
                Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
            EndIf
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_8021B440_24 {
    Return
    End
}

#new:Script $Script_8021B450_24 {
    SetConst  *Var[0]  00000001 
    SetConst  *Var[1]  004E0004 
    ExecWait  DoReturnHome 
    Return
    End
}

#new:Script $Script_HandleEvent_8021B48C_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000C 
            SetConst  *Var[2]  FFFFFFFF 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000C 
            SetConst  *Var[2]  FFFFFFFF 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoJumpBack 
            ExecWait  $Script_8021B450_24 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E0002 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E0002 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E0004 
            SetConst  *Var[2]  004E000A 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E0004 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  004E000A 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_LungeAttack_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 004E0007 )
    Wait  20`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002CB 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 004E0008 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFF9C 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
            Call  JumpToGoal    ( .Actor:Self 00000011 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorPos       ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  SetAnimation      ( .Actor:Self 00000001 004E0002 )
            Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8021B450_24 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 004E0008 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Call  AddGoalPos    ( .Actor:Self *Fixed[4.0] *Fixed[-6.0] 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF1 00000000 )
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  JumpToGoal        ( .Actor:Self 0000000C .False .True .False )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
            Call  SetAnimation  ( .Actor:Self 00000001 004E0009 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_8021B450_24 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021BF2C_24 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  RemoveActor   ( *Var[0] )
    Return
    End
}

#new:Script $Script_8021BF64_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Wait  30`
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    Call  UseIdleAnimation  ( *Var[A] .False )
    Call  8027D32C  ( *Var[A] )
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003 
        Add   *Var[2]  00000005 
        Loop  00000003 
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    Call  SetEnemyHP    ( *Var[A] *Var[B] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetActorPos   ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00800000 .True )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00020001 .False )
    Call  SetActorFlagBits  ( *Var[A] 00400004 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  SetActorVar   ( *Var[A] 00000008 00000002 )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021B20C_24 )
    Call  SetAnimation  ( *Var[A] 00000001 004E000A )
    Wait  30`
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    If  *Var[C]  >  00000000 
        Set   *Var[C]  00000000 
        Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.5] )
        Call  SetActorSounds        ( *Var[A] .ActorSound:Jump 00000301 00000000 )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000F .False .True .False )
        Call  ResetActorSounds      ( *Var[A] .ActorSound:Jump )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
    EndIf
    Call  ForceHomePos  ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  HPBarToHome   ( *Var[A] )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021B1C0_24 )
    Call  SetAnimation  ( *Var[A] 00000001 004E0002 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021C428_24 {
    Set   *Var[9]  *Var[0] 
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Add   *Var[2]  0000000A 
    Add   *Var[3]  0000000A 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetGoalPos        ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
    ExecWait  DoShockHit 
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    Call  UseIdleAnimation  ( *Var[A] .False )
    Call  8027D32C  ( *Var[A] )
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003 
        Add   *Var[2]  00000005 
        Loop  00000003 
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    Call  SetEnemyHP    ( *Var[A] *Var[B] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetActorPos   ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00800000 .True )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00020001 .False )
    Call  SetActorFlagBits  ( *Var[A] 00400004 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  SetActorVar   ( *Var[A] 00000008 00000003 )
    Call  SetPartFlagBits   ( .Actor:Self *Var[9] 00000001 .True )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021B20C_24 )
    Call  SetAnimation  ( *Var[A] 00000001 004E000A )
    Wait  15`
    Call  UseCamPreset  ( 00000002 )
    Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.5] )
    Call  GetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Add   *Var[B]  0000001E 
    Set   *Var[C]  00000000 
    Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  JumpToGoal    ( *Var[A] 0000000F .False .True .False )
    Add   *Var[B]  00000014 
    Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
    Add   *Var[B]  0000000A 
    Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
    Wait  20`
    Call  AddActorDecoration    ( *Var[A] 00000001 00000000 .Decoration:Sweat )
    Call  SetActorYaw   ( *Var[A] 000000B4 )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021B218_24 )
    Call  SetAnimation  ( *Var[A] 00000001 004E0004 )
    Call  SetActorSpeed ( *Var[A] *Fixed[8.0] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetGoalPos    ( *Var[A] *Var[B] 00000000 *Var[D] )
    Call  RunToGoal     ( *Var[A] 00000000 .False )
    Call  SetAnimation  ( *Var[A] 00000001 004E0002 )
    Call  SetActorYaw   ( *Var[A] 00000000 )
    Call  RemoveActorDecoration ( *Var[A] 00000001 00000000 )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021B1C0_24 )
    Call  ForceHomePos  ( *Var[A] *Var[B] 00000000 *Var[D] )
    Call  HPBarToHome   ( *Var[A] )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021CAB4_24 {
    Call  8027D32C      ( FFFFFF81 )
    Set   *Var[A]  *Var[0] 
    Set   *Var[B]  *Var[1] 
    Set   *Var[C]  *Var[2] 
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[B] )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000F 
    Add   *Var[1]  0000000A 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[B] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .False .False )
    Set   *Var[0]  *Var[A] 
    Set   *Var[1]  *Var[B] 
    ExecWait  DoShockHit 
    Call  UseCamPreset  ( 00000002 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 *Var[C] 00000000 )
        Set   *Var[0]  00000000 
        Loop  0000000F 
            Add   *Var[0]  FFFFFFD0 
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000003C 
    Set   *Var[1]  00000000 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Add   *Var[0]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Add   *Var[0]  0000000A 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Return
    End
}

#new:Vector3D $Vector3D_8021CE18_24 {
0` -1000` 0`
}

#new:IdleAnimations $IdleAnimations_8021CE24_24 {
.Status:Normal    00090001
.Status:Stone     00090000
.Status:Sleep     00090000
.Status:Poison    00090001
.Status:Stop      00090000
.Status:Static    00090001
.Status:Paralyze  00090000
.Status:Dizzy     00090014
.Status:Fear      00090014
.Status:End
}

#new:DefenseTable $DefenseTable_8021CE70_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021CE7C_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021CF28_24 {
00800000 01000000 001400FF $IdleAnimations_8021CE24_24 $DefenseTable_8021CE70_24 00000000 00000000 FFF70000 00000000 
}

#new:Actor $GhostGoombario_24 {
% stats
[Index]        3Cb 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021CE7C_24 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021CF28_24 
[Script]      $Script_Init_8021CF74_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         29`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021CF74_24 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E934_24 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021CFC0_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CFD0_24 )
    Return
    End
}

#new:Script $Script_Idle_8021CFC0_24 {
    Return
    End
}

#new:Script $Script_HandleEvent_8021CFD0_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0009000A 
                ExecWait  $Script_8021BF64_24 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0009000A 
                ExecWait  DoNormalHit 
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000B 
            SetConst  *Var[2]  0009000C 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000B 
            SetConst  *Var[2]  0009000C 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021BF2C_24 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  $Script_8021C428_24 
            Return
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            Set   *Var[2]  0000000C 
            ExecWait  $Script_8021CAB4_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00090001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00090001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00090003 
            SetConst  *Var[2]  0009000A 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00090003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0009000A 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D540_24 {
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
        Set   *Var[0]  000000B4 
        Loop  0000000F 
            Sub   *Var[0]  0000003C 
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetAnimation  ( .Actor:Self 00000001 00090005 )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000003C 
    Set   *Var[1]  00000000 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        SetF  *Var[5]  *Fixed[7.2] 
    Else
        Set   *Var[5]  00000012 
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Add   *Var[0]  00000014 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Add   *Var[0]  0000000A 
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Wait  2`
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Return
    End
}

#new:Script $Script_8021D9C8_24 {
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000046 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Return
    End
}

#new:Script $Script_8021DAAC_24 {
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  GetActorPos       ( .Actor:Self *Var[C] *Var[D] *Var[E] )
    If  *Var[B]  >  *Var[C] 
        Sub   *Var[B]  *Var[C] 
    Else
        Sub   *Var[C]  *Var[B] 
        Set   *Var[B]  *Var[C] 
    EndIf
    Sub   *Var[B]  00000014 
    DivF  *Var[B]  *Fixed[10.588867] 
    AddF  *Var[B]  0000000F 
    Set   *Var[A]  *Var[B] 
    Return
    End
}

#new:Script $Script_8021DB94_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    ExecWait  $Script_8021D9C8_24 
    ExecWait  $Script_8021DAAC_24 
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        SetF  *Var[0]  *Fixed[7.2] 
        SetF  *Var[1]  *Fixed[7.6] 
        SetF  *Var[1]  *Fixed[3.6] 
    Else
        Set   *Var[0]  00000012 
        Set   *Var[1]  00000013 
        Set   *Var[2]  00000009 
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[1] 00000000 )
    Wait  1`
    Call  SetAnimation      ( .Actor:Self 00000001 00090006 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[2] 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000005 )
    Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000200D )
    Call  $Function_802180D0_24 ( *Var[A] 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  $Function_80218960_24 ( )
            Thread
                Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021D540_24 
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    ChildThread
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndChildThread
    Wait  1`
    Wait  2`
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
        Case  ==  00000001 
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000010 )
        Case  ==  00000002 
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000010 )
    EndSwitch
    Call  GetActorHP    ( .Actor:Player *Var[0] )
    If  *Var[0]  ==  .HitResult:Hit % 0
        Goto  64
    EndIf
    Set   *Var[A]  00000018 
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Thread
                Wait  4`
                Set   *Var[0]  00000000 
                Loop  00000006 
                    Add   *Var[0]  0000001E 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
            Call  $Function_802180D0_24 ( *Var[A] 00000003 )
        Case  ==  00000001 
            Thread
                Wait  4`
                Set   *Var[0]  00000000 
                Loop  00000006 
                    Add   *Var[0]  0000001E 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
            Call  $Function_802180D0_24 ( *Var[A] 00000003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
        Case  ==  00000002 
            Thread
                Wait  4`
                Set   *Var[0]  00000000 
                Loop  00000006 
                    Add   *Var[0]  0000001E 
                    Call  SetActorRotation  ( .Actor:Self 00000000 F1194D80 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00090006 )
            EndThread
            Thread
                Set   *Var[0]  00000000 
                Loop  *Var[A] 
                    Add   *Var[0]  00000085 
                    Call  SetActorRotation  ( .Actor:Self F1194D80 *Var[0] F1194D80 )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
            Call  $Function_802180D0_24 ( *Var[A] 00000003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
    EndSwitch
    ChildThread
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndChildThread
    Wait  1`
    Wait  2`
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
        Case  ==  00000001 
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000002 
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    EndSwitch
    Label  64
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  YieldTurn ( )
            ExecWait  $Script_8021D540_24 
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021E620_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    Wait  10`
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetBattleFlagBits ( 00000004 .True )
    Call  $Function_80218B60_24 ( *Var[5] )
    Wait  12`
    Call  802535B4  ( 00000000 )
    Call  SetCamEnabled     ( .Cam:Tattle .True )
    Call  SetCamFlag80      ( .Cam:Tattle .False )
    Call  SetCamPerspective ( .Cam:Tattle 00000006 00000019 00000010 00000400 )
    Call  SetCamViewport    ( .Cam:Tattle 00000025 0000005F 0000008A 00000063 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000008 
    Set   *Var[1]  00000000 
    Call  $Function_80218AB4_24 ( )
    Wait  1`
    Call  802CAE50  ( 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CABE8  ( 00000002 00000000 *Var[3] 00000064 00000004 )
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 00000282 )
    Call  SetCamFlag80      ( .Cam:Tattle .True )
    Wait  10`
    Call  ActorSpeak        ( 001C0092 .Actor:Self 00000001 0009000F 00090001 ) % It's Mario, silly! He's here to save Princess Peac ...
    Call  $Function_80218BFC_24 ( *Var[5] )
    Wait  12`
    Call  SetCamEnabled     ( .Cam:Tattle .False )
    Wait  32`
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  SetBattleFlagBits ( 00000004 .False )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021E934_24 {
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  0000000A 
        ExecWait  $Script_8021E620_24 
    Else
        ExecWait  $Script_8021DB94_24 
    EndIf
    Return
    End
}

#new:SpecialFormation $SpecialFormation_8021E990_24 {
$GhostGoombario_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_8021E9AC_24 {
.Status:Normal    000A0004
.Status:Stone     000A0000
.Status:Sleep     000A0000
.Status:Poison    000A0004
.Status:Stop      000A0000
.Status:Static    000A0004
.Status:Paralyze  000A0000
.Status:Dizzy     000A001C
.Status:Fear      000A001C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021E9F8_24 {
.Status:Normal    000A0019
.Status:Stone     000A0003
.Status:Sleep     000A0003
.Status:Poison    000A0019
.Status:Stop      000A0003
.Status:Static    000A0019
.Status:Paralyze  000A0003
.Status:Dizzy     000A0019
.Status:Fear      000A0019
.Status:End
}

#new:DefenseTable $DefenseTable_8021EA44_24 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8021EA50_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021EA5C_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021EB08_24 {
00800000 01000000 FE2000FF $IdleAnimations_8021E9AC_24 $DefenseTable_8021EA44_24 00001000 00000000 00F00000 00000000 
}

#new:Actor $GhostKooper_24 {
% stats
[Index]        3Db 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021EA5C_24 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021EB08_24 
[Script]      $Script_Init_8021EB54_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021EB54_24 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021F6A4_24 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021EBD0_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ED48_24 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021EBD0_24 {
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
            Call  $Function_80218C44_24 ( FFFFFFF6 00000019 0000000A 00000019 )
        Case  ==  00000001 
            Call  SetTargetOffset       ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  $Function_80218C44_24 ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021ECF0_24 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_8021ED48_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000A0011 
                ExecWait  $Script_8021BF64_24 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000A0011 
                ExecWait  DoNormalHit 
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0012 
            SetConst  *Var[2]  000A0013 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0012 
            SetConst  *Var[2]  000A0013 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0013 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000003 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021EA50_24 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E9F8_24 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0011 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_8021ECF0_24 
            Loop  00000016 
                Get1Int  *Var[0] 
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0004 
                Case  ==  00000001 
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0019 
            EndSwitch
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0011 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            If  *Var[0]  ==  00000001 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000A0019 
                ExecWait  DoImmune 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000A0004 
                ExecWait  DoRecover 
            EndIf
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000A0006 
            SetConst  *Var[2]  000A0011 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0006 
                Case  ==  00000001 
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0019 
            EndSwitch
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000000 
                    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                    If  *Var[0]  !&  0035D000 
                        If  *Var[0]  &  00080000 
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                        Else
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                        EndIf
                    EndIf
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0011 
                Case  ==  00000001 
                    SetConst  *Var[0]  00000001 
                    SetConst  *Var[1]  000A0019 
            EndSwitch
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021F6A4_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000003 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
        Sub   *Var[0]  00000001 
        If  *Var[0]  >  00000000 
            Call  SetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  30`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  20`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
            Set   *Var[0]  00000000 
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Loop  00000005 
                    Add   *Var[0]  0000000F 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0004 )
            Call  SetActorVar       ( .Actor:Self 00000003 00000000 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021EA44_24 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E9AC_24 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 000A000E )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Wait  15`
    Call  SetAnimation      ( .Actor:Self 00000001 000A000A )
    Call  PlaySoundAtActor  ( .Actor:Self 0000200C )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000004B )
    Call  8024ECF8  ( 00000001 00000001 00000001 )
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Set   *Var[0]  0000000A 
        Case  ==  00000001 
            Set   *Var[0]  00000014 
        Case  ==  00000002 
            Set   *Var[0]  0000001E 
    EndSwitch
    Set   *Var[9]  00000000 
    Loop  *Var[0] 
        Add   *Var[9]  00000001 
        Switch  *Var[9] 
            Case  <  00000014 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000A )
                Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Case  ==  00000014 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000028 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000B )
                Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
            Case  ==  00000028 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000032 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000C )
                Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Case  ==  00000032 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  0000003C 
                Call  SetAnimation  ( .Actor:Self 00000001 000A000D )
                Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
            Case  ==  0000003C 
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndSwitch
        Wait  1`
    EndLoop
    Call  PlaySoundAtActor  ( .Actor:Self 0000200A )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  AddActorDecoration    ( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Call  $Function_80218D10_24 ( )
                Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
            EndThread
            Wait  4`
            Call  SetAnimation  ( .Actor:Self 00000001 000A0009 )
            Call  SetActorRotationOffset    ( .Actor:Self FFFFFFF8 00000000 00000000 )
            Set   *Var[0]  00000000 
            Loop  00000002 
                Add   *Var[0]  0000001E 
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Wait  5`
            Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Loop  00000005 
                Add   *Var[0]  FFFFFFF4 
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000002 )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFFE )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
        Case  ==  00000001 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000002 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000008 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000003C 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Add   *Var[0]  0000000A 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80220644_24 {
$GhostKooper_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80220660_24 {
.Status:Normal    000B0004
.Status:Stone     000B0000
.Status:Sleep     000B0000
.Status:Poison    000B0004
.Status:Stop      000B0000
.Status:Static    000B0004
.Status:Paralyze  000B0000
.Status:Dizzy     000B001E
.Status:Fear      000B001E
.Status:End
}

#new:DefenseTable $DefenseTable_802206AC_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_802206B8_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80220764_24 {
00800000 01000000 001600FF $IdleAnimations_80220660_24 $DefenseTable_802206AC_24 00000000 00000000 FEF90000 00000000 
}

#new:Actor $GhostBombette_24 {
% stats
[Index]        3Eb 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802206B8_24 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80220764_24 
[Script]      $Script_Init_802207B0_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802207B0_24 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80220FD0_24 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802207FC_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220984_24 )
    Return
    End
}

#new:Script $Script_Idle_802207FC_24 {
    Return
    End
}

#new:Script $Script_8022080C_24 {
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.75] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[4.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000002 
    Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Add   *Var[1]  00000014 
    Add   *Var[2]  00000002 
    Call  PlayEffect    ( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BombBlast )
    Return
    End
}

#new:Script $Script_HandleEvent_80220984_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoNormalHit 
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoNormalHit 
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020 
                Call  SetAnimation  ( .Actor:Self 00000001 000B0013 )
                Wait  20`
                ExecWait  $Script_8022080C_24 
                ExecWait  $Script_8021BF2C_24 
                Call  UseCamPreset  ( 00000002 )
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000B0014 
                Set   *Var[2]  FFFFCFC7 
                ExecWait  DoDeath 
                Return
            EndIf
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0013 
            SetConst  *Var[2]  000B0014 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8022080C_24 
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0014 
            Set   *Var[2]  FFFFCFC7 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0013 
            SetConst  *Var[2]  000B0014 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8022080C_24 
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0014 
            Set   *Var[2]  FFFFCFC7 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  .Event:ShockHit % 2F
        CaseOR  ==  .Event:ShockDeath % 26
            Call  HPBarToCurrent    ( .Actor:Self )
            Call  SetAnimation      ( .Actor:Self 00000001 000B0013 )
            Wait  20`
            ExecWait  $Script_8022080C_24 
            ExecWait  $Script_8021BF2C_24 
            Call  UseCamPreset      ( 00000002 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0014 
            Set   *Var[2]  FFFFCFC7 
            ExecWait  DoDeath 
            Return
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0004 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0004 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0008 
            SetConst  *Var[2]  000B0012 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0008 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000B0012 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80220FD0_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Wait  10`
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000028 00000000 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
    Call  RunToGoal ( .Actor:Self 0000001E .False )
    Call  SetAnimation      ( .Actor:Self 00000001 000B0004 )
    Call  SetAnimation      ( .Actor:Self 00000001 000B000F )
    Wait  15`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002020 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
            Call  RunToGoal     ( .Actor:Self 00000005 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000F 00000000 )
                Set   *Var[0]  00000000 
                Loop  0000000A 
                    Add   *Var[0]  00000048 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self FFFFFFC4 00000000 00000000 )
            Call  RunToGoal     ( .Actor:Self 0000000A .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Thread
                Call  $Function_80218E34_24 ( )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Set   *Var[A]  *Var[0] 
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
    Call  RunToGoal     ( .Actor:Self 00000004 .False )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000001 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000002 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000008 )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  00000028 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  0000000A 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Wait  8`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_802218A4_24 {
$GhostBombette_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_802218C0_24 {
.Status:Normal    000C0001
.Status:Stone     000C0000
.Status:Sleep     000C0000
.Status:Poison    000C0001
.Status:Stop      000C0000
.Status:Static    000C0001
.Status:Paralyze  000C0000
.Status:Dizzy     000C0001
.Status:Fear      000C0001
.Status:End
}

#new:DefenseTable $DefenseTable_8022190C_24 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_80221918_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_802219C4_24 {
00020000 01000000 FD2000FF $IdleAnimations_802218C0_24 $DefenseTable_8022190C_24 00000000 00000000 00F00000 00000000 
80800001 02003200 FDEE00FF 00000000 $DefenseTable_8022190C_24 00000000 00000000 00F00000 00000000 
}

#new:Actor $GhostParakarry_24 {
% stats
[Index]        3Fb 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80221918_24 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_802219C4_24 
[Script]      $Script_Init_80221A34_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80221A34_24 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222814_24 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80221A80_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221A90_24 )
    Return
    End
}

#new:Script $Script_Idle_80221A80_24 {
    Return
    End
}

#new:Script $Script_HandleEvent_80221A90_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000C000E 
                ExecWait  $Script_8021BF64_24 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000C000E 
                ExecWait  DoNormalHit 
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000F 
            SetConst  *Var[2]  000C0010 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000F 
            SetConst  *Var[2]  000C0010 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021BF2C_24 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C0010 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  $Script_8021C428_24 
            Return
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000D 
            Set   *Var[2]  00000016 
            ExecWait  $Script_8021CAB4_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C0003 
            SetConst  *Var[2]  000C000E 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C0003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000 
                If  *Var[0]  &  00080000 
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000C000E 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80222084_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
    Wait  3`
    Call  8024E664      ( 00000001 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002004 )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0014 )
    Call  AddGoalPos    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  FlyToGoal     ( .Actor:Self 00000005 00000000 .Easing:Linear )
    Wait  2`
    Thread
        Wait  3`
        Call  SetAnimation  ( .Actor:Self 00000001 000C0004 )
    EndThread
    Call  AddGoalPos        ( .Actor:Self 00000028 0000000F 00000000 )
    Call  FlyToGoal ( .Actor:Self 00000014 FFFFFFEC .Easing:QuarticOut )
    Call  PlaySoundAtActor  ( .Actor:Self 00002005 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 000C0005 )
    Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
            Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 000C0006 )
    Wait  1`
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000001 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000002 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Call  PlaySound ( 00000000 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0005 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
            Thread
                Wait  4`
                Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
            Wait  6`
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222814_24 {
    ExecWait  $Script_80222084_24 
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80222830_24 {
$GhostParakarry_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_8022284C_24 {
.Status:Normal    000D0001
.Status:Stone     000D0000
.Status:Sleep     000D0000
.Status:Poison    000D0001
.Status:Stop      000D0000
.Status:Static    000D0001
.Status:Paralyze  000D0000
.Status:Dizzy     000D001A
.Status:Fear      000D001A
.Status:End
}

#new:DefenseTable $DefenseTable_80222898_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_802228A4_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80222950_24 {
00020000 01000000 001800FF $IdleAnimations_8022284C_24 $DefenseTable_80222898_24 00000000 00000000 00F60000 00000000 
80800001 02003200 00E600FF 00000000 $DefenseTable_80222898_24 00000000 00000000 00F60000 00000000 
}

#new:Actor $GhostBow_24 {
% stats
[Index]        40b 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802228A4_24 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80222950_24 
[Script]      $Script_Init_802229C0_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  29`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802229C0_24 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222FAC_24 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80222A0C_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222A1C_24 )
    Return
    End
}

#new:Script $Script_Idle_80222A0C_24 {
    Return
    End
}

#new:Script $Script_HandleEvent_80222A1C_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000D0015 
                ExecWait  $Script_8021BF64_24 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000D0015 
                ExecWait  DoNormalHit 
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0018 
            SetConst  *Var[2]  000D0019 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0018 
            SetConst  *Var[2]  000D0019 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021BF2C_24 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0019 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  UseCamPreset  ( 00000002 )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  $Script_8021C428_24 
            Return
        Case  ==  .Event:ShockDeath % 26
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            Set   *Var[2]  0000000E 
            ExecWait  $Script_8021CAB4_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0003 
            SetConst  *Var[2]  000D0015 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000D0015 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222FAC_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
    Thread
        Set   *Var[0]  000000C8 
        Loop  00000014 
            Sub   *Var[0]  0000000A 
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  UseCamPreset      ( 00000001 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Thread
        Call  SetAnimation      ( .Actor:Self 00000001 000D0003 )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000 
            Call  AddGoalPos    ( .Actor:Self 00000004 FFFFFFFC 00000000 )
        Else
            Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF6 00000000 )
        EndIf
        Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
    EndThread
    Wait  15`
    Call  UseCamPreset      ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooVanish )
    Set   *Var[0]  00000037 
    Loop  00000014 
        Add   *Var[0]  0000000A 
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 000D0005 )
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  UseCamPreset  ( 00000002 )
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
            Wait  2`
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Var[0]  00000000 
            Loop  00000014 
                Add   *Var[0]  FFFFFFD3 
                Call  SetActorYaw   ( .Actor:Self *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 000D001A )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooAppear )
            Thread
                Set   *Var[0]  000000C8 
                Loop  00000014 
                    Sub   *Var[0]  0000000A 
                    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooVanish )
            Call  YieldTurn ( )
            Set   *Var[0]  00000037 
            Loop  00000014 
                Add   *Var[0]  0000000A 
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Set   *Var[A]  00000000 
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[8] )
    Switch  *Var[8] 
        Case  ==  00000000 
            Set   *Var[8]  00000004 
        Case  ==  00000001 
            Set   *Var[8]  00000005 
        Case  ==  00000002 
            Set   *Var[8]  00000006 
    EndSwitch
    Set   *Var[7]  *Var[8] 
    Loop  *Var[7] 
        Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
        Add   *Var[A]  00000001 
        Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
        If  *Flag[00]  ==  .False 
            Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
            Set   *Flag[00]  .True 
            If  *Var[A]  ==  *Var[8] 
                Call  80269EAC  ( 0000000C )
            Else
                Call  80269EAC  ( 0000000A )
            EndIf
        Else
            Call  SetAnimation  ( .Actor:Self 00000001 000D0008 )
            Set   *Flag[00]  .False 
            If  *Var[A]  ==  *Var[8] 
                Call  80269EAC  ( 0000000D )
            Else
                Call  80269EAC  ( 0000000B )
            EndIf
        EndIf
        Wait  2`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.2] )
        EndThread
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
        Switch  *Var[9] 
            Case  ==  00000000 
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
            Case  ==  00000001 
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
            Case  ==  00000002 
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
        EndSwitch
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
        Call  GetActorHP    ( .Actor:Player *Var[1] )
        If  *Var[1]  ==  00000000 
            BreakLoop
        EndIf
    EndLoop
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
            Thread
                Set   *Var[0]  000000C8 
                Loop  00000014 
                    Sub   *Var[0]  0000000A 
                    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooVanish )
            Call  YieldTurn ( )
            Set   *Var[0]  00000037 
            Loop  00000014 
                Add   *Var[0]  0000000A 
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80223C00_24 {
$GhostBow_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80223C1C_24 {
.Status:Normal    000E0001
.Status:Stone     000E0000
.Status:Sleep     000E0000
.Status:Poison    000E0001
.Status:Stop      000E0000
.Status:Static    000E0001
.Status:Paralyze  000E0000
.Status:Dizzy     000E000F
.Status:Fear      000E000F
.Status:End
}

#new:DefenseTable $DefenseTable_80223C68_24 {
.Element:Normal 00000000
.Element:Shock  00000063
.Element:End
}

#new:StatusTable $StatusTable_80223C7C_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80223D28_24 {
00020000 01000000 FF1400FF $IdleAnimations_80223C1C_24 $DefenseTable_80223C68_24 00000080 00000000 00F80000 00000000 
80800001 02003200 FFE200FF 00000000 $DefenseTable_80223C68_24 00000080 00000000 00F80000 00000000 
}

#new:Actor $GhostWatt_24 {
% stats
[Index]        41b 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223C7C_24 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80223D28_24 
[Script]      $Script_Init_80223D98_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         34`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80223D98_24 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80224280_24 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80223DE4_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223E0C_24 )
    Return
    End
}

#new:Script $Script_Idle_80223DE4_24 {
    SetPriority  00000063 
    Call  $Function_80218F58_24 ( )
    Return
    End
}

#new:Script $Script_HandleEvent_80223E0C_24 {
    Call  UseIdleAnimation      ( .Actor:Self .False )
    Call  $Function_80219428_24 ( 00000000 )
    Call  $Function_80219474_24 ( 00000001 )
    Call  $Function_802194C0_24 ( 00000000 )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000D 
            SetConst  *Var[2]  000E000E 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000D 
            SetConst  *Var[2]  000E000E 
            ExecWait  DoBurnHit 
            Call  $Function_802193D4_24 ( )
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000E 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            Call  $Function_802193D4_24 ( )
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  $Function_802193D4_24 ( )
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0003 
            SetConst  *Var[2]  000E000C 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E0003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000E000C 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  $Function_80219428_24 ( 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80224280_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 00000028 )
    Call  MoveBattleCamOver ( 00000050 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
    Call  $Function_802194C0_24 ( 00000001 )
    Call  AddGoalPos        ( .Actor:Self 0000000F FFFFFFF6 00000005 )
    Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  $Function_802194C0_24 ( 00000000 )
    Wait  5`
    Call  $Function_80219428_24 ( 00000000 )
    Call  AddGoalPos        ( .Actor:Self 00000019 00000014 00000000 )
    Call  FlyToGoal ( .Actor:Self 0000000F FFFFFFEC .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:CosInOut )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
            Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  $Function_80219474_24 ( 00000001 )
            Call  $Function_80219428_24 ( 00000001 )
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  $Function_80219474_24 ( 00000000 )
    Set   *Var[A]  00000028 
    Call  AddBattleCamZoom  ( FFFFFFB5 )
    Call  MoveBattleCamOver ( *Var[A] )
    Call  8024ECF8  ( 00000000 00000000 00000001 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 % 80000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000004 
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[0.52] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C 
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[1.3] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  $Function_8021950C_24 ( )
    Set   *Var[9]  00000000 
    Call  SetAnimation  ( .Actor:Self 00000001 000E0006 )
    Loop  *Var[A] 
        Add   *Var[9]  00000003 
        If  *Var[9]  >  000000C8 
            Set   *Var[9]  000000C8 
        EndIf
        Call  $Function_80219550_24 ( *Var[9] )
        Wait  1`
    EndLoop
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
    Call  AddBattleCamZoom  ( 0000004B )
    Call  MoveBattleCamOver ( 00000005 )
    Thread
        Wait  2`
        Call  $Function_80219550_24 ( 00000000 )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000001 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000004 00000020 )
        Case  ==  00000002 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  $Function_80219474_24 ( 00000001 )
            Call  $Function_80219428_24 ( 00000001 )
            Call  AddGoalPos    ( .Actor:Self 00000019 0000000A 00000000 )
            Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80224AFC_24 {
$GhostWatt_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80224B18_24 {
.Status:Normal    000F0001
.Status:Stone     000F0000
.Status:Sleep     000F0000
.Status:Poison    000F0001
.Status:Stop      000F0000
.Status:Static    000F0001
.Status:Paralyze  000F0000
.Status:Dizzy     000F0010
.Status:Fear      000F0010
.Status:End
}

#new:DefenseTable $DefenseTable_80224B64_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80224B70_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80224C1C_24 {
00800000 01000000 001800FF $IdleAnimations_80224B18_24 $DefenseTable_80224B64_24 00000000 00000000 00F40000 00000000 
}

#new:Actor $GhostSushie_24 {
% stats
[Index]        42b 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224B70_24 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80224C1C_24 
[Script]      $Script_Init_80224C68_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         37`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80224C68_24 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80225234_24 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80224CB4_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224CC4_24 )
    Return
    End
}

#new:Script $Script_Idle_80224CB4_24 {
    Return
    End
}

#new:Script $Script_HandleEvent_80224CC4_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000F000D 
                ExecWait  $Script_8021BF64_24 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  000F000D 
                ExecWait  DoNormalHit 
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000E 
            SetConst  *Var[2]  000F000F 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000E 
            SetConst  *Var[2]  000F000F 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021BF2C_24 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000F 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  $Script_8021C428_24 
            Return
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            Set   *Var[2]  00000014 
            ExecWait  $Script_8021CAB4_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F0001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F0001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F0003 
            SetConst  *Var[2]  000F000D 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F0003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  000F000D 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80225234_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000046 00000000 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  *Var[0] 
    Div   *Var[3]  *Fixed[3.0] 
    Set   *Var[A]  *Var[3] 
    If  *Var[A]  <  00000000 
        Mul   *Var[A]  FFFFFFFF 
    EndIf
    Call  MoveBattleCamOver ( *Var[A] )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
    Call  RunToGoal     ( .Actor:Self *Var[A] .False )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
    Wait  10`
    Call  UseCamPreset  ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  AddBattleCamZoom  ( FFFFFFCE )
    Call  MoveBattleCamOver ( 0000001E )
    Call  8024ECF8      ( 00000001 00000001 00000001 )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0004 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 000F0008 )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetAnimation      ( .Actor:Self 00000001 000F0005 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Set   *Var[0]  00000000 
                Loop  0000000A 
                    Add   *Var[0]  00000024 
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
            EndThread
            Thread
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Switch  *Var[0] 
                    Case  ==  00000000 
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                    Case  ==  00000001 
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.05] *Fixed[1.05] *Fixed[1.05] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
                    Case  ==  00000002 
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
                EndSwitch
            EndThread
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Thread
                Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
                Wait  10`
                Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
            EndThread
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.0] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  LandJump      ( .Actor:Self )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF1 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  SetAnimation      ( .Actor:Self 00000001 000F0005 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
        Set   *Var[0]  00000000 
        Loop  0000000A 
            Add   *Var[0]  00000024 
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
    EndThread
    Thread
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
        Switch  *Var[0] 
            Case  ==  00000000 
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
            Case  ==  00000001 
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.35] *Fixed[1.35] *Fixed[1.35] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.55] *Fixed[1.55] *Fixed[1.55] )
            Case  ==  00000002 
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.6] *Fixed[1.6] *Fixed[1.6] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.8] *Fixed[1.8] *Fixed[1.8] )
        EndSwitch
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Thread
        Wait  3`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[A] )
    Switch  *Var[A] 
        Case  ==  .HitResult:Hit % 0
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000001 % 1
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
        Case  ==  00000002 % 2
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000003C 
            Set   *Var[1]  00000000 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  0000001E 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  00000014 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  0000000A 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80226494_24 {
$GhostSushie_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_802264B0_24 {
.Status:Normal    00100001
.Status:Stone     00100000
.Status:Sleep     00100000
.Status:Poison    00100001
.Status:Stop      00100000
.Status:Static    00100001
.Status:Paralyze  00100000
.Status:Dizzy     00100008
.Status:Fear      00100001
.Status:End
}

#new:IdleAnimations $IdleAnimations_802264FC_24 {
.Status:Normal    00100014
.Status:End
}

#new:DefenseTable $DefenseTable_80226508_24 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80226514_24 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_802265C0_24 {
00800000 01000000 FD2100FF $IdleAnimations_802264B0_24 $DefenseTable_80226508_24 00000000 00000000 FEF60000 00000000 
00120001 03000000 000000FF $IdleAnimations_802264FC_24 $DefenseTable_80226508_24 00000000 00000000 00000000 00000000 
}

#new:Actor $GhostLakilester_24 {
% stats
[Index]        43b 
[Level]        23`b 
[MaxHP]        15`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80226514_24 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_802265C0_24 
[Script]      $Script_Init_80226630_24 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80226630_24 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80226C54_24 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022667C_24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022668C_24 )
    Return
    End
}

#new:Script $Script_Idle_8022667C_24 {
    Return
    End
}

#new:Script $Script_HandleEvent_8022668C_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0010000A 
                ExecWait  $Script_8021BF64_24 
                Return
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  0010000A 
                ExecWait  DoNormalHit 
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000C 
            SetConst  *Var[2]  0010000D 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000C 
            SetConst  *Var[2]  0010000D 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8021BF2C_24 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000D 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000A 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000A 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000A 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000A 
            ExecWait  DoJumpBack 
            Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000A 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000B 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00100001 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BF2C_24 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000A 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000B 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00100001 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00100003 
            SetConst  *Var[2]  0010000A 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00100003 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0010000A 
            ExecWait  DoBlowAway 
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80226C54_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self 00000014 0000001E *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00100001 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Add   *Var[0]  FFFFFFFF 
        Add   *Var[1]  00000004 
        Add   *Var[2]  00000002 
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Add   *Var[0]  FFFFFFFD 
        Add   *Var[1]  0000000A 
        Add   *Var[2]  00000005 
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  SetAnimation  ( .Actor:Self 00000003 00100014 )
    Call  SetAnimation  ( .Actor:Self 00000001 0010000F )
    Loop  00000004 
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000 
            AddF  *Var[1]  *Fixed[2.4] 
        Else
            Add   *Var[1]  00000006 
        EndIf
        Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Add   *Var[0]  FFFFFFFD 
        Add   *Var[1]  00000010 
        Add   *Var[2]  00000002 
        SetF  *Var[3]  *Fixed[0.4] 
    Else
        Add   *Var[0]  FFFFFFF8 
        Add   *Var[1]  00000028 
        Add   *Var[2]  00000005 
        SetF  *Var[3]  *Fixed[1.0] 
    EndIf
    Call  PlayEffect        ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002C5 )
    Thread
        Loop  0000000F 
            Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
            Call  SetPartDispOffset     ( .Actor:Self 00000003 00000001 00000000 00000000 )
            Wait  1`
            Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
            Call  SetPartDispOffset     ( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
            Wait  1`
        EndLoop
        Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetPartDispOffset     ( .Actor:Self 00000003 00000000 00000000 00000000 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100010 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100011 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100012 )
    Wait  3`
    Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000201B )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetAnimation  ( .Actor:Self 00000003 00100015 )
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RandInt       ( 00000064 *Var[3] )
            Sub   *Var[3]  00000032 
            Add   *Var[0]  *Var[3] 
            Call  JumpPartTo    ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 00000014 .True )
            Thread
                Add   *Var[0]  FFFFFFCE 
                Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000003C )
            Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000003 00100015 )
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Thread
        Add   *Var[0]  FFFFFFCE 
        Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9] 
        Case  ==  00000000 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
        Case  ==  00000001 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
        Case  ==  00000002 
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  15`
            Call  YieldTurn ( )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 00000008 )
            Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80227734_24 {
$GhostLakilester_24 $Vector3D_8021CE18_24 00000000 00000000 00000000 00000000 00000000 
}

#new:Script $Script_CopyPartner_24 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
    Call  SetAnimation      ( .Actor:Self 00000001 004E0006 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 
        Add   *Var[1]  00000008 
        SetF  *Var[3]  *Fixed[0.4] 
    Else
        Add   *Var[1]  00000014 
        SetF  *Var[3]  *Fixed[1.0] 
    EndIf
    Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Var[3] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  $Function_8021950C_24 ( )
    Call  MakeLerp  ( 00000000 000000C8 00000014 .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  $Function_80219550_24 ( *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001 
        Goto  0
    EndIf
    Wait  10`
    Call  $Function_GetPartner_24   ( *Var[5] *Var[6] )
    Call  $Function_802195F4_24     ( *Var[5] )
    Switch  *Var[5] 
        Case  ==  00000001 
            Call  SummonEnemy   ( $SpecialFormation_8021E990_24 00000000 )
        Case  ==  00000002 
            Call  SummonEnemy   ( $SpecialFormation_80220644_24 00000000 )
        Case  ==  00000003 
            Call  SummonEnemy   ( $SpecialFormation_802218A4_24 00000000 )
        Case  ==  00000004 
            Call  SummonEnemy   ( $SpecialFormation_80222830_24 00000000 )
        Case  ==  00000009 
            Call  SummonEnemy   ( $SpecialFormation_80223C00_24 00000000 )
        Case  ==  00000006 
            Call  SummonEnemy   ( $SpecialFormation_80224AFC_24 00000000 )
        Case  ==  00000007 
            Call  SummonEnemy   ( $SpecialFormation_80226494_24 00000000 )
        Case  ==  00000008 
            Call  SummonEnemy   ( $SpecialFormation_80227734_24 00000000 )
    EndSwitch
    Set   *Var[A]  *Var[0] 
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  SetBattleVar      ( 00000003 *Var[5] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003 
        Add   *Var[2]  00000005 
        Loop  00000003 
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00400004 .True )
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  SetEnemyHP    ( *Var[A] *Var[0] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetOwnerID    ( *Var[0] )
    Call  SetActorVar   ( *Var[A] 00000000 *Var[0] )
    Call  SetActorVar   ( *Var[A] 00000001 *Var[6] )
    Wait  20`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Thread
        Call  MakeLerp  ( 000000C8 00000000 00000014 .Easing:Linear )
        Label  1
        Call  UpdateLerp ( )
        Call  $Function_80219550_24 ( *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000001 
            Goto  1
        EndIf
    EndThread
    Call  SetActorSounds    ( *Var[A] .ActorSound:Jump 00000000 00000000 )
    Switch  *Var[5] 
        Case  ==  00000008 
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.01] )
            Call  SetGoalPos    ( *Var[A] *Var[0] 0000000A *Var[2] )
            Call  JumpToGoal    ( *Var[A] 0000000A .False .False .False )
            Wait  10`
        CaseOR  ==  00000006 
        CaseOR  ==  00000009 
        CaseOR  ==  00000004 
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.01] )
            Call  SetGoalPos    ( *Var[A] *Var[0] 0000001E *Var[2] )
            Call  JumpToGoal    ( *Var[A] 00000014 .False .False .False )
        EndCaseGroup
    EndSwitch
    Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[A] )
    Call  ResetActorSounds  ( *Var[A] .ActorSound:Jump )
    Wait  20`
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80227F70_24 {
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0] 
        Case  ==  00000000 
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000258 
                Call  GetBattleVar  ( 00000000 *Var[0] )
                If  *Var[0]  !&  00000004 
                    Call  GetBattleVar  ( 00000000 *Var[0] )
                    ConstOR  *Var[0] 00000004 
                    Call  SetBattleVar  ( 00000000 *Var[0] )
                    ExecWait  $Script_CopyPartner_24 
                Else
                    Call  GetBattleVar  ( 00000003 *Var[0] )
                    Call  $Function_GetPartner_24   ( *Var[1] *Var[2] )
                    If  *Var[0]  ==  *Var[1] 
                        ExecWait  $Script_CopyPartner_24 
                    Else
                        ExecWait  $Script_LungeAttack_24 
                    EndIf
                EndIf
            Else
                ExecWait  $Script_LungeAttack_24 
            EndIf
        Case  ==  00000001 
        Case  ==  00000002 
            ExecWait  $Script_LungeAttack_24 
        Case  ==  00000003 
    EndSwitch
    Return
    End
}

#new:ConstDouble $ConstDouble_80228400_24 {
47.000000d
}

#new:ConstDouble $ConstDouble_80228408_24 {
1.120000d
}

#new:ConstDouble $ConstDouble_80228410_24 {
0.530000d
}

#new:ConstDouble $ConstDouble_80228418_24 {
47.000000d
}

#new:ConstDouble $ConstDouble_80228420_24 {
0.800000d
}

#new:ConstDouble $ConstDouble_80228428_24 {
0.530000d
}

#new:ConstDouble $ConstDouble_80228430_24 {
0.800000d
}

#new:ConstDouble $ConstDouble_80228438_24 {
16.500000d
}

#new:ConstDouble $ConstDouble_80228440_24 {
33.000000d
}

#new:ConstDouble $ConstDouble_80228448_24 {
4.800000d
}

#new:JumpTable $JumpTable_80228450_24 {
$Function_802195F4_24[54] $Function_802195F4_24[60] $Function_802195F4_24[6C] $Function_802195F4_24[78] 
$Function_802195F4_24[B0] $Function_802195F4_24[90] $Function_802195F4_24[9C] $Function_802195F4_24[A8] 
$Function_802195F4_24[84] 
}

