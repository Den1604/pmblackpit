% Automatically dumped from section 19

#new:Actor $19_MontyMole {
% stats
[Index]        30b 
[Level]        19`b 
[MaxHP]        12`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8023066C_19 
% ai
[PartsCount]    3`s 
[PartsTable]  $PartsTable_80230718_19 
[Script]      $Script_Init_802309C0_19 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      55`b 
[Hurricane]    40`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         34`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_80230650_19 {
.Element:Normal 00000000
.Element:Hammer 00000000
.Element:Throw  FFFFFFFD
.Element:End
}

#new:StatusTable $StatusTable_8023066C_19 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     80`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     10`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80230718_19 {
00020000 01000000 FE1000FF $IdleAnimations_802307AC_19 $DefenseTable_80230650_19 00000000 00000000 00F90000 00000000 
80800001 020000F1 001000FF $IdleAnimations_802307AC_19 $DefenseTable_80230650_19 00000000 00000000 00F90000 00000000 
00120001 03000000 000000FF $IdleAnimations_802307F8_19 $DefenseTable_80230650_19 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_802307AC_19 {
.Status:Normal    002F0101
.Status:Stone     002F0100
.Status:Sleep     002F0114
.Status:Poison    002F0101
.Status:Stop      002F0100
.Status:Static    002F0101
.Status:Paralyze  002F0100
.Status:Dizzy     002F0114
.Status:Fear      002F0114
.Status:End
}

#new:IdleAnimations $IdleAnimations_802307F8_19 {
.Status:Normal    002F010F
.Status:End
}

#new:IdleAnimations $IdleAnimations_80230804_19 {
.Status:Normal    002F0112
.Status:End
}

#new:PartsTable $PartsTable_8023081C_19 {
00022000 01000000 000000FF $IdleAnimations_80230804_19 00000000 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_80230840_19 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Return
    End
}

#new:Actor $EmptyMoleHole_19 {
% stats
[Index]        6Bb 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         2`b 
[Flags]       00640004 
[StatusTable] 00000000 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8023081C_19 
[Script]      $Script_Init_80230840_19 
% move effectiveness
[Escape]       80`b 
[Item]         80`b 
[AirLift]       0`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    90`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         32`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Vector3D $Vector3D_802308C8_19 {
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_802308D4_19 {
$EmptyMoleHole_19 $Vector3D_802308C8_19 00000000 00000000 00000000 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_802308F0_19 {
$EmptyMoleHole_19 $Vector3D_802308C8_19 00000000 00000001 00000000 00000000 00000000 
}

#new:Script $Script_8023090C_19 {
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 
        Call  SummonEnemy   ( $SpecialFormation_802308F0_19 00000000 )
    Else
        Call  SummonEnemy   ( $SpecialFormation_802308D4_19 00000000 )
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Sub   *Var[3]  00000001 
    Call  SetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Return
    End
}

#new:Script $Script_Init_802309C0_19 {
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802311BC_19 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80230A24_19 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80230A34_19 )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Return
    End
}

#new:Script $Script_Idle_80230A24_19 {
    Return
    End
}

#new:Script $Script_HandleEvent_80230A34_19 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            If  *Var[E]  &  00000040 
                ChildThread
                    Wait  8`
                    Call  SetAnimation  ( .Actor:Self 00000001 002F0107 )
                EndChildThread
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002F0106 
                ExecWait  DoNormalHit 
                Call  SetAnimation  ( .Actor:Self 00000001 002F0108 )
                Wait  10`
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002F0105 
                ExecWait  DoNormalHit 
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002F010A 
            SetConst  *Var[2]  002F010B 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002F010A 
            SetConst  *Var[2]  002F010B 
            ExecWait  DoBurnHit 
            ExecWait  $Script_8023090C_19 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002F010C 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000040 
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
                Call  SetAnimation      ( .Actor:Self 00000001 002F0111 )
                Wait  80`
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  SetAnimation      ( .Actor:Self 00000001 002F0110 )
                Wait  20`
                Call  SetAnimation      ( .Actor:Self 00000001 002F0114 )
                Wait  20`
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002F0101 
                ExecWait  DoImmune 
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002F0105 
            ExecWait  DoNormalHit 
            Call  SetAnimation  ( .Actor:Self 00000001 002F0106 )
            Wait  10`
            ExecWait  $Script_8023090C_19 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002F0109 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  SetAnimation  ( .Actor:Self 00000001 002F0106 )
            Wait  8`
            Call  SetAnimation  ( .Actor:Self 00000001 002F0107 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 002F0108 )
            Wait  8`
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation      ( .Actor:Self 00000001 002F0106 )
            Wait  15`
            Call  SetAnimation      ( .Actor:Self 00000001 002F0107 )
            Wait  15`
            Call  SetAnimation      ( .Actor:Self 00000001 002F0108 )
            Wait  15`
            Call  SetActorFlagBits  ( .Actor:Self 00404000 .True )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80230804_19 )
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002F0105 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            ExecWait  $Script_8023090C_19 
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  0035D000 
                Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFB 00000000 )
                Call  SetAnimation  ( .Actor:Self 00000001 002F0119 )
            Else
                If  *Var[0]  &  00080000 
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFF7 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE9 00000000 )
                EndIf
                Call  SetAnimation  ( .Actor:Self 00000001 002F0109 )
            EndIf
            Wait  1000`
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 002F0111 )
            Wait  40`
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 002F0110 )
            Wait  20`
            Call  SetAnimation      ( .Actor:Self 00000001 002F0114 )
            Wait  20`
        Case  ==  .Event:UpAndAway % 3D
            ExecWait  $Script_8023090C_19 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802311BC_19 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    ChildThread
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    EndChildThread
    Call  SetAnimation      ( .Actor:Self 00000001 002F0104 )
    Wait  37`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014 
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  PlaySoundAtPart   ( .Actor:Self 00000003 .Sound:MoleThrow )
    Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetTargetActor    ( .Actor:Self .Actor:Player )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064 
            Set   *Var[1]  FFFFFFFB 
            Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
            Call  SetAnimation      ( .Actor:Self 00000003 002F010F )
            Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  YieldTurn ( )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
    Call  SetAnimation      ( .Actor:Self 00000003 002F010F )
    Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000037 
            Set   *Var[1]  00000000 
            Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[6.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[4.0] )
            Sub   *Var[0]  00000014 
            Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

