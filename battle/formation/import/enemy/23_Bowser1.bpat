% Automatically dumped from section 23

#new:Actor $23_Bowser1 {
% stats
[Index]        C1b 
[Level]       100`b 
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022151C_23 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80221674_23 
[Script]      $Script_Init_802216C0_23 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  65`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         80`b  82`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -40`b  67`b % dx dy
[StatusIcon]   10`b  60`b % dx dy
}

#new:Function $Function_80218F00_23 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218F58_23 {
	ADDIU     SP, SP, FF58
	SW        S3, 74 (SP)
	COPY      S3, A0
	SW        RA, 88 (SP)
	SW        S7, 84 (SP)
	SW        S6, 80 (SP)
	SW        S5, 7C (SP)
	SW        S4, 78 (SP)
	SW        S2, 70 (SP)
	SW        S1, 6C (SP)
	SW        S0, 68 (SP)
	SDC1      F24, A0 (SP)
	SDC1      F22, 98 (SP)
	SDC1      F20, 90 (SP)
	LW        A0, 148 (S3)
	JAL       ~Func:get_actor
	COPY      S0, A1
	BNE       V0, R0, .o54
	COPY      A0, V0
	BEQ       R0, R0, .o36C
	ADDIU     V0, R0, 2
	.o54
	JAL       ~Func:get_actor_part
	ADDIU     A1, R0, 1
	BEQ       S0, R0, .oAC
	COPY      S5, V0
	CLEAR     S0
	ADDIU     S1, R0, FF
	SW        R0, 74 (S3)
	SW        R0, 78 (S3)
	SW        R0, 70 (S3)
	COPY      A1, S0
	.o7C
	ADDIU     A2, R0, 11
	ADDIU     A3, R0, 14
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        S1, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S5)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, A
	BNE       V0, R0, .o7C
	COPY      A1, S0
	.oAC
	LW        V0, 74 (S3)
	ADDIU     A0, V0, A
	SLTI      V0, A0, 168
	BNE       V0, R0, .oFC
	SW        A0, 74 (S3)
	LIO       V0, B60B60B7
	MULT      A0, V0
	SRA       V1, A0, 1F
	MFHI      T0
	ADDU      V0, T0, A0
	SRA       V0, V0, 8
	SUBU      V0, V0, V1
	SLL       V1, V0, 1
	ADDU      V1, V1, V0
	SLL       V0, V1, 4
	SUBU      V0, V0, V1
	SLL       V0, V0, 3
	SUBU      V0, A0, V0
	SW        V0, 74 (S3)
	.oFC
	CLEAR     S1
	LUI       S2, 8000
	COPY      S0, S1
	LIF       F25, 1.875
	MTC1      R0, F24
	LIF       F23, 3.1875
	MTC1      R0, F22
	LIF       F21, 28.0
	MTC1      R0, F20
	.o12C
	LHU       A0, 76 (S3)
	ADDU      A0, A0, S0
	ADDIU     A0, A0, 78
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 20
	C.LE.D    F20, F0
	NOP
	BC1T      .o178
	ADDU      V0, V0, S1
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o190
	SB        V1, 0 (V0)
	.o178
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S2
	SB        V1, 0 (V0)
	.o190
	LHU       A0, 76 (S3)
	ADDU      A0, A0, S0
	ADDIU     A0, A0, 3C
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 38
	C.LE.D    F20, F0
	NOP
	BC1T      .o1DC
	ADDU      V0, V0, S1
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o1F4
	SB        V1, 0 (V0)
	.o1DC
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S2
	SB        V1, 0 (V0)
	.o1F4
	LHU       A0, 76 (S3)
	ADDU      A0, A0, S0
	ADDIU     A0, A0, B4
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 50
	C.LE.D    F20, F0
	NOP
	BC1T      .o240
	ADDU      V0, V0, S1
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o258
	SB        V1, 0 (V0)
	.o240
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S2
	SB        V1, 0 (V0)
	.o258
	ADDIU     S1, S1, 1
	SLTI      V0, S1, 14
	BNE       V0, R0, .o12C
	ADDIU     S0, S0, 19
	LW        V0, 7C (S5)
	LUI       V1, 4
	AND       V0, V0, V1
	BEQ       V0, R0, .o30C
	CLEAR     S1
	ADDIU     S7, SP, 20
	ADDIU     S6, SP, 38
	ADDIU     S4, SP, 50
	ADDIU     S3, R0, FF
	CLEAR     S0
	.o290
	ADDU      V0, S7, S1
	ADDU      A0, S6, S1
	LBU       V1, 0 (V0)
	ADDU      V0, S4, S1
	LBU       A0, 0 (A0)
	LBU       V0, 0 (V0)
	SLL       V1, V1, 18
	SLL       A0, A0, 10
	OR        V1, V1, A0
	SLL       V0, V0, 8
	OR        V1, V1, V0
	ORI       S2, V1, FF
	COPY      A1, S0
	.o2C4
	ADDIU     A2, R0, C
	COPY      A3, S1
	SW        S2, 10 (SP)
	SW        R0, 14 (SP)
	SW        S3, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S5)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, A
	BNE       V0, R0, .o2C4
	COPY      A1, S0
	ADDIU     S1, S1, 1
	SLTI      V0, S1, 14
	BNE       V0, R0, .o290
	CLEAR     S0
	BEQ       R0, R0, .o36C
	CLEAR     V0
	.o30C
	ADDIU     S2, R0, FF
	COPY      S4, S2
	CLEAR     S0
	.o318
	COPY      A1, S0
	.o31C
	ADDIU     A2, R0, C
	COPY      A3, S1
	SW        S2, 10 (SP)
	SW        R0, 14 (SP)
	SW        S4, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S5)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, A
	BNE       V0, R0, .o31C
	COPY      A1, S0
	ADDIU     S1, S1, 1
	SLTI      V0, S1, 14
	BNE       V0, R0, .o318
	CLEAR     S0
	CLEAR     V0
	SW        R0, 74 (S3)
	SW        R0, 78 (S3)
	SW        R0, 70 (S3)
	.o36C
	LW        RA, 88 (SP)
	LW        S7, 84 (SP)
	LW        S6, 80 (SP)
	LW        S5, 7C (SP)
	LW        S4, 78 (SP)
	LW        S3, 74 (SP)
	LW        S2, 70 (SP)
	LW        S1, 6C (SP)
	LW        S0, 68 (SP)
	LDC1      F24, A0 (SP)
	LDC1      F22, 98 (SP)
	LDC1      F20, 90 (SP)
	JR        RA
	ADDIU     SP, SP, A8
}

#new:Function $Function_802192FC_23 {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o48
	SW        RA, 14 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	COPY      A3, A0
	LAW       V0, 801512F0
	ADDIU     V1, R0, 1
	JAL       ~Func:set_background_color_blend
	SB        V1, 0 (V0)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o48
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	LW        V1, 70 (S0)
	ADDIU     V0, R0, 14
	SUBU      V0, V0, V1
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	SW        V0, 70 (S0)
	SLTIU     V0, V0, 1
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	SLL       V0, V0, 1
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219394_23 {
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o1C
	SW        RA, 14 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o1C
	CLEAR     A0
	COPY      A1, A0
	LW        V0, 70 (S0)
	COPY      A2, A0
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       ~Func:set_background_color_blend
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	BEQ       V0, R0, .o58
	SW        V0, 70 (S0)
	BEQ       R0, R0, .o70
	CLEAR     V0
	.o58
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	COPY      A3, A0
	ADDIU     V0, R0, 2
	.o70
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219414_23 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LH        A0, 436 (V0)
	SB        R0, 224 (V0)
	JAL       80047B84
	SB        R0, 223 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219444_23 {
	ADDIU     SP, SP, FFA8
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        S2, 20 (SP)
	SW        RA, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S0, 18 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (S1)
	LW        S0, C (S1)
	JAL       ~Func:get_actor
	COPY      S2, A1
	COPY      S3, V0
	BEQ       S3, R0, .o3A0
	ADDIU     V0, R0, 2
	BEQ       S2, R0, .o144
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	CLEAR     S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       ~Func:get_float_variable
	COPY      A0, S1
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	ADDIU     A0, R0, B4
	JAL       ~Func:heap_malloc
	MOV.S     F22, F0
	COPY      S1, V0
	ADDIU     A2, R0, 28
	ADDIU     A1, R0, FF
	ADDIU     A0, R0, 1
	ADDIU     V1, S1, 38
	SW        S1, 78 (S3)
	.oF0
	SWC1      F28, FFCC (V1)
	SWC1      F26, FFD0 (V1)
	SWC1      F24, FFD4 (V1)
	SWC1      F20, FFE0 (V1)
	SWC1      F20, FFD8 (V1)
	SWC1      F22, FFDC (V1)
	SW        A0, FFE4 (V1)
	SW        A2, FFE8 (V1)
	SW        A1, FFEC (V1)
	SW        A1, FFF0 (V1)
	SW        R0, FFF4 (V1)
	SW        R0, FFF8 (V1)
	SW        R0, FFFC (V1)
	SW        R0, 0 (V1)
	ADDIU     V1, V1, 3C
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .oF0
	ADDIU     A0, A0, A
	BEQ       R0, R0, .o3A0
	CLEAR     V0
	.o144
	CLEAR     S4
	COPY      S2, S4
	LW        S1, 78 (S3)
	LIO       AT, 3DCCCCCD
	MTC1      AT, F24
	LIF       F22, 0.5
	LIF       F20, 255.0
	ADDIU     S0, S1, 28
	.o170
	LW        V0, FFF4 (S0)
	BLEZ      V0, .o1E8
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o374
	SW        V0, FFF4 (S0)
	LWC1      F0, FFF0 (S0)
	ADDIU     V0, R0, FFFF
	SW        V0, 14 (SP)
	SWC1      F0, 10 (SP)
	LW        A1, FFDC (S0)
	LW        A2, FFE0 (S0)
	LW        A3, FFE4 (S0)
	JAL       80072A70
	CLEAR     A0
	SW        V0, 0 (S1)
	LW        V0, C (V0)
	LWC1      F0, 4 (S0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, 8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, C (S0)
	LW        V0, C (V0)
	SWC1      F0, 44 (V0)
	LW        V0, 0 (S1)
	LW        V0, C (V0)
	BEQ       R0, R0, .o374
	SH        R0, 0 (V0)
	.o1E8
	LW        V0, 10 (S0)
	BEQ       V0, R0, .o1FC
	NOP
	BEQ       R0, R0, .o374
	ADDIU     S4, S4, 1
	.o1FC
	LWC1      F0, FFE8 (S0)
	LWC1      F8, FFEC (S0)
	SUB.S     F0, F0, F8
	LWC1      F2, FFF8 (S0)
	CVT.S.W   F2, F2
	ABS.S     F0, F0
	MUL.S     F0, F0, F2
	NOP
	LWC1      F6, C (S0)
	LIF       F2, 9.0
	LIF       F4, 40.0
	ADD.S     F6, F6, F2
	LW        V1, FFF8 (S0)
	DIV.S     F0, F0, F4
	ADD.S     F0, F0, F8
	SLTI      V0, V1, B
	SWC1      F6, C (S0)
	BEQ       V0, R0, .o2BC
	SWC1      F0, FFF0 (S0)
	SRL       V0, V1, 1F
	ADDU      V0, V1, V0
	SRA       V0, V0, 1
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	COPY      V0, V1
	MUL.S     F2, F2, F24
	NOP
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F24
	NOP
	ADD.S     F2, F2, F22
	MUL.S     F2, F2, F20
	NOP
	ADD.S     F0, F0, F22
	MUL.S     F0, F0, F20
	NOP
	TRUNC.W.S F10, F2
	SWC1      F10, FFFC (S0)
	TRUNC.W.S F10, F0
	SWC1      F10, 0 (S0)
	.o2BC
	LW        V0, FFF8 (S0)
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o2E4
	SW        V0, FFF8 (S0)
	LW        A0, 0 (S1)
	JAL       ~Func:remove_effect
	NOP
	ADDIU     V0, R0, 1
	BEQ       R0, R0, .o374
	SW        V0, 10 (S0)
	.o2E4
	LW        V0, 0 (S1)
	LWC1      F0, FFDC (S0)
	LW        V0, C (V0)
	SWC1      F0, 4 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFE0 (S0)
	LW        V0, C (V0)
	SWC1      F0, 8 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFE4 (S0)
	LW        V0, C (V0)
	SWC1      F0, C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, 4 (S0)
	LW        V0, C (V0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, 8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, C (S0)
	LW        V0, C (V0)
	SWC1      F0, 44 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF0 (S0)
	LW        V0, C (V0)
	SWC1      F0, 38 (V0)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, FFFC (S0)
	SW        V0, 24 (V1)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, 0 (S0)
	SW        V0, 34 (V1)
	.o374
	ADDIU     S0, S0, 3C
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .o170
	ADDIU     S1, S1, 3C
	SLTI      V0, S4, 3
	BNE       V0, R0, .o3A0
	CLEAR     V0
	JAL       ~Func:heap_free
	COPY      A0, S1
	ADDIU     V0, R0, 2
	.o3A0
	LW        RA, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_80219818_23 {
	ADDIU     SP, SP, FFB0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        S2, 20 (SP)
	SW        RA, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S0, 18 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (S1)
	LW        S0, C (S1)
	JAL       ~Func:get_actor
	COPY      S2, A1
	COPY      S4, V0
	BEQ       S4, R0, .o42C
	ADDIU     V0, R0, 2
	BEQ       S2, R0, .o154
	CLEAR     S3
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_float_variable
	COPY      A0, S1
	LB        V1, 210 (S4)
	ADDIU     V0, R0, A
	BNE       V1, V0, .oDC
	MOV.S     F20, F0
	LAD       F2, $ConstDouble_80234780_23
	CVT.D.S   F0, F20
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F20, F0
	.oDC
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 9C
	COPY      S1, V0
	CLEAR     S2
	ADDIU     A2, R0, 32
	ADDIU     A1, R0, FF
	ADDIU     A0, R0, 1
	LIF       F0, 90.0
	ADDIU     V1, S1, 30
	SW        S1, 78 (S4)
	.o108
	SWC1      F26, FFD4 (V1)
	SWC1      F24, FFD8 (V1)
	SWC1      F22, FFDC (V1)
	SWC1      F20, FFE0 (V1)
	SW        A0, FFE4 (V1)
	SW        A2, FFE8 (V1)
	SW        A1, FFEC (V1)
	SW        A1, FFF0 (V1)
	SWC1      F0, FFF4 (V1)
	SW        R0, FFF8 (V1)
	SW        R0, FFFC (V1)
	SW        R0, 0 (V1)
	ADDIU     V1, V1, 34
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .o108
	ADDIU     A0, A0, 10
	BEQ       R0, R0, .o42C
	CLEAR     V0
	.o154
	LW        S1, 78 (S4)
	COPY      S2, S3
	ADDIU     S0, S1, 30
	.o160
	LW        V0, FFE4 (S0)
	BLEZ      V0, .o1CC
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o400
	SW        V0, FFE4 (S0)
	LWC1      F0, FFE0 (S0)
	ADDIU     V0, R0, FFFF
	SW        V0, 14 (SP)
	SWC1      F0, 10 (SP)
	LW        A1, FFD4 (S0)
	LW        A2, FFD8 (S0)
	LW        A3, FFDC (S0)
	JAL       80072A70
	CLEAR     A0
	SW        V0, 0 (S1)
	LW        V0, C (V0)
	LWC1      F0, FFF4 (S0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFFC (S0)
	LW        V0, C (V0)
	BEQ       R0, R0, .o400
	SWC1      F0, 44 (V0)
	.o1CC
	LW        V0, 0 (S0)
	BEQ       V0, R0, .o1E0
	ADDIU     V0, R0, A
	BEQ       R0, R0, .o400
	ADDIU     S3, S3, 1
	.o1E0
	LB        V1, 210 (S4)
	BEQ       V1, V0, .o274
	NOP
	LWC1      F2, FFD8 (S0)
	LIF       F1, 3.0625
	MTC1      R0, F0
	CVT.D.S   F2, F2
	C.LT.D    F2, F0
	LIF       F1, 2.125
	MTC1      R0, F0
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 3.21875
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234788_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 3.3125
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234790_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 1.875
	MTC1      R0, F0
	BEQ       R0, R0, .o2F0
	ADD.D     F0, F2, F0
	.o274
	LWC1      F2, FFD8 (S0)
	LIF       F1, 2.75
	MTC1      R0, F0
	CVT.D.S   F2, F2
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_80234798_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 2.875
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_802347A0_23
	BC1TL     .o2F0
	ADD.D     F0, F2, F0
	LIF       F1, 3.0
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	LAD       F0, $ConstDouble_802347A8_23
	BC1FL     .o2F0
	ADD.D     F0, F2, F0
	LAD       F0, $ConstDouble_802347B0_23
	ADD.D     F0, F2, F0
	.o2F0
	CVT.S.D   F0, F0
	SWC1      F0, FFD8 (S0)
	LWC1      F0, FFF8 (S0)
	LIF       F2, 18.0
	LW        V1, FFE8 (S0)
	ADD.S     F0, F0, F2
	SLTI      V0, V1, 11
	BEQ       V0, R0, .o34C
	SWC1      F0, FFF8 (S0)
	SLL       V0, V1, 8
	SUBU      V1, V0, V1
	BLTZL     V1, .o328
	ADDIU     V1, V1, F
	.o328
	LW        V0, FFE8 (S0)
	SRA       V1, V1, 4
	SW        V1, FFEC (S0)
	SLL       V1, V0, 8
	SUBU      V0, V1, V0
	BLTZL     V0, .o344
	ADDIU     V0, V0, F
	.o344
	SRA       V0, V0, 4
	SW        V0, FFF0 (S0)
	.o34C
	LW        V0, 0 (S1)
	LWC1      F0, FFD4 (S0)
	LW        V0, C (V0)
	SWC1      F0, 4 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFD8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 8 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFDC (S0)
	LW        V0, C (V0)
	SWC1      F0, C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF4 (S0)
	LW        V0, C (V0)
	SWC1      F0, 3C (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFF8 (S0)
	LW        V0, C (V0)
	SWC1      F0, 40 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFFC (S0)
	LW        V0, C (V0)
	SWC1      F0, 44 (V0)
	LW        V0, 0 (S1)
	LWC1      F0, FFE0 (S0)
	LW        V0, C (V0)
	SWC1      F0, 38 (V0)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, FFEC (S0)
	SW        V0, 24 (V1)
	LW        V0, 0 (S1)
	LW        V1, C (V0)
	LW        V0, FFF0 (S0)
	SW        V0, 34 (V1)
	LW        V0, FFE8 (S0)
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .o400
	SW        V0, FFE8 (S0)
	LW        A0, 0 (S1)
	JAL       ~Func:remove_effect
	NOP
	ADDIU     V0, R0, 1
	SW        V0, 0 (S0)
	.o400
	ADDIU     S0, S0, 34
	ADDIU     S2, S2, 1
	SLTI      V0, S2, 3
	BNE       V0, R0, .o160
	ADDIU     S1, S1, 34
	SLTI      V0, S3, 3
	BNE       V0, R0, .o42C
	CLEAR     V0
	JAL       ~Func:heap_free
	COPY      A0, S1
	ADDIU     V0, R0, 2
	.o42C
	LW        RA, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 50
}

#new:Function $Function_80219C74_23 {
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        S2, 18 (SP)
	LIA       S2, 800DC070
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LB        A2, 97 (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	LB        A2, 96 (S2)
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219CD4_23 {
	ADDIU     SP, SP, FFE8
	LIA       V1, 8010F290
	SW        RA, 10 (SP)
	LB        V0, 2 (V1)
	SLL       A2, V0, 1
	ADDU      A2, A2, V0
	SLL       A2, A2, 3
	ADDU      A2, A2, V0
	LB        V0, 3 (V1)
	SLL       A2, A2, 2
	BNE       V0, R0, .o38
	DIV       A2, V0
	BREAK     1C00
	.o38
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o50
	LUI       AT, 8000
	BNE       A2, AT, .o50
	NOP
	BREAK     1800
	.o50
	MFLO      A2
	LW        V0, C (A0)
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219D44_23 {
	ADDIU     SP, SP, FFD8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	BEQ       A1, R0, .o130
	LW        S0, C (S2)
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 24
	COPY      S1, V0
	SW        S1, 70 (S2)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 20 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 0 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 4 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 8 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 1C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A0, 20 (S1)
	JAL       ~Func:get_item_entity
	SWC1      F0, 10 (S1)
	COPY      S0, V0
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	JAL       ~Func:dist2D
	LW        A3, 8 (S1)
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	LW        A3, 8 (S1)
	JAL       ~Func:atan2
	MOV.S     F20, F0
	LWC1      F4, 10 (S1)
	LWC1      F6, 1C (S1)
	CVT.S.W   F6, F6
	MUL.S     F4, F4, F6
	NOP
	LIF       F2, 0.5
	NOP
	MUL.S     F4, F4, F2
	NOP
	SWC1      F0, C (S1)
	LWC1      F0, 4 (S1)
	LWC1      F2, C (S0)
	SUB.S     F0, F0, F2
	MOV.S     F2, F6
	DIV.S     F0, F0, F6
	ADD.S     F4, F4, F0
	DIV.S     F20, F20, F2
	SWC1      F20, 14 (S1)
	SWC1      F4, 18 (S1)
	.o130
	LW        S1, 70 (S2)
	JAL       ~Func:get_item_entity
	LW        A0, 20 (S1)
	COPY      S0, V0
	BNE       S0, R0, .o158
	NOP
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	BEQ       R0, R0, .o1FC
	ADDIU     V0, R0, 2
	.o158
	LWC1      F12, C (S1)
	JAL       ~Func:sin_deg
	NOP
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 8 (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 8 (S0)
	JAL       ~Func:cos_deg
	LWC1      F12, C (S1)
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 10 (S0)
	SUB.S     F0, F0, F2
	SWC1      F0, 10 (S0)
	LWC1      F0, C (S0)
	LWC1      F2, 18 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, C (S0)
	LWC1      F0, 18 (S1)
	LWC1      F2, 10 (S1)
	LW        V0, 1C (S1)
	SUB.S     F0, F0, F2
	ADDIU     V0, V0, FFFF
	SW        V0, 1C (S1)
	BLTZ      V0, .o1D4
	SWC1      F0, 18 (S1)
	BEQ       R0, R0, .o1FC
	CLEAR     V0
	.o1D4
	LWC1      F0, 0 (S1)
	SWC1      F0, 8 (S0)
	LWC1      F0, 4 (S1)
	SWC1      F0, C (S0)
	LWC1      F0, 8 (S1)
	SWC1      F0, 10 (S0)
	SW        R0, 18 (S1)
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	ADDIU     V0, R0, 1
	.o1FC
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80219F5C_23 {
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	JAL       ~Func:get_item_entity
	COPY      A0, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      S1, V0
	LWC1      F0, 8 (S1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, C (S1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 10 (S1)
	LW        A1, 0 (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219FFC_23 {
	ADDIU     SP, SP, FFC0
	SW        S3, 2C (SP)
	COPY      S3, A0
	SW        S0, 20 (SP)
	CLEAR     S0
	SW        S2, 28 (SP)
	LIA       S2, 800DC070
	SW        S4, 30 (SP)
	LIA       S4, 8010F290
	SW        S5, 34 (SP)
	ADDIU     A0, R0, FFFF
	SW        RA, 38 (SP)
	SW        S1, 24 (SP)
	LB        V0, AE (S2)
	LW        S1, C (S3)
	BNE       V0, A0, .o54
	COPY      S5, S4
	SW        R0, 10 (SP)
	ADDIU     S0, R0, 1
	.o54
	LB        V0, AF (S2)
	BNE       V0, A0, .o70
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 1
	SW        V0, 10 (V1)
	ADDU      S0, S0, V0
	.o70
	LB        V0, B0 (S2)
	BNE       V0, A0, .o8C
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 2
	SW        V0, 10 (V1)
	ADDIU     S0, S0, 1
	.o8C
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 2
	ADDIU     A0, S0, FFFF
	JAL       ~Func:rand_int
	ADDIU     S0, V0, 2
	SLL       V0, V0, 2
	ADDU      V0, SP, V0
	LW        V1, 10 (V0)
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o124
	SLTI      V0, V1, 2
	BEQ       V0, R0, .oD0
	ADDIU     V0, R0, 2
	BEQL      V1, R0, .oE0
	SB        S0, AE (S2)
	BEQ       R0, R0, .o194
	NOP
	.oD0
	BEQL      V1, V0, .o16C
	SB        S0, B0 (S2)
	BEQ       R0, R0, .o194
	NOP
	.oE0
	LW        A1, 0 (S1)
	LB        V0, 1 (S4)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8022466C_23)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 1 (S4)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80224678_23)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o124
	SB        S0, AF (S2)
	LW        A1, 0 (S1)
	LB        V0, 0 (S5)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80224684_23)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 0 (S5)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80224690_23)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o16C
	LW        A1, 0 (S1)
	ADDIU     S1, S1, 4
	COPY      A0, S3
	JAL       ~Func:set_variable
	ADDIU     A2, R0, 16C
	COPY      A0, S3
	LW        A1, 0 (S1)
	ADDIU     A2, R0, 4F
	.o18C
	JAL       ~Func:set_variable
	NOP
	.o194
	LW        RA, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_8021A1B8_23 {
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	LW        S0, C (S2)
	LIA       S1, 800DC070
	LB        V1, 210 (V0)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o6C
	ADDIU     V1, R0, FFFF
	LB        V0, AE (S1)
	BEQ       V0, V1, .o60
	COPY      A0, S2
	LB        V0, AF (S1)
	BEQ       V0, V1, .o60
	NOP
	LB        V0, B0 (S1)
	BNE       V0, V1, .o70
	NOP
	.o60
	LW        A1, 0 (S0)
	BEQ       R0, R0, .o78
	CLEAR     A2
	.o6C
	COPY      A0, S2
	.o70
	LW        A1, 0 (S0)
	ADDIU     A2, R0, FFFF
	.o78
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021A254_23 {
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        V1, C (V0)
	LIO       AT, 3D23D70A
	MTC1      AT, F0
	NOP
	SWC1      F0, 38 (V1)
	SWC1      F0, 30 (V1)
	LW        V1, C (V0)
	LIF       F0, 1.875
	NOP
	SWC1      F0, 34 (V1)
	LW        V1, C (V0)
	LIO       AT, 3D4CCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 3C (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_802214B0_23 {
.Status:Normal    00810002
.Status:Stone     00810000
.Status:Sleep     00810002
.Status:Poison    00810002
.Status:Stop      00810000
.Status:Static    00810000
.Status:Paralyze  00810000
.Status:Paralyze  00810000
.Status:Dizzy     00810002
.Status:Dizzy     00810002
.Status:End
}

#new:DefenseTable $DefenseTable_80221504_23 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_80221510_23 {
.Element:Normal 00000004
.Element:End
}

#new:StatusTable $StatusTable_8022151C_23 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      30`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   30`
.Status:Shrink     50`
.Status:Stop       30`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:StatusTable $StatusTable_802215C8_23 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_80221674_23 {
00800000 01000000 EE4800FF $IdleAnimations_802214B0_23 $DefenseTable_80221504_23 00000000 00000000 00F80000 00000000 
}

#new:Script $Script_Init_802216C0_23 {
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000003 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000003 )
    Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000007 00000001 )
    Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222B48_23 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80221844_23 )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80221B18_23 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80221970_23 )
    Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
    Exec  $Script_80222E2C_23 
    Return
    End
}

#new:Script $Script_Idle_80221844_23 {
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[3] )
    Label  0
    Call  ActorExists   ( .Actor:Self *Var[B] )
    If  *Var[B]  ==  .False 
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[B] )
    If  *Var[B]  !&  00080000 
        Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
    Else
        Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000028 00000000 00000000 00000000 )
    EndIf
    ExecWait  $Script_8022376C_23 
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_NextTurn_80221970_23 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0] 
        Case  ==  0000000A 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  !&  00000001 
                ConstOR  *Var[0] 00000001 
                Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Call  802535B4      ( 00000000 )
                Call  UseCamPreset  ( 0000000D )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  MoveBattleCamOver ( 00000014 )
                Wait  20`
                Call  UseIdleAnimation  ( .Actor:Self .False )
                Call  ActorSpeak    ( 00130073 .Actor:Self 00000001 00810005 00810002 ) % Gwaaaah ha ha ha!!! All right, Mario! Let's see yo ...
                Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
                Call  UseCamPreset  ( 00000002 )
                Call  MoveBattleCamOver ( 00000014 )
                Wait  20`
                Call  802535B4      ( 00000001 )
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_80221B18_23 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:HitCombo % 9
            Set   *Var[1]  0081000D 
            ExecWait  $Script_802227B4_23 
            Return
        Case  ==  .Event:Hit % A
            Set   *Var[1]  0081000D 
            ExecWait  $Script_8022260C_23 
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_802227B4_23 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_802227E0_23 
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001 
            Set   *Var[1]  00810020 
            Set   *Var[2]  00810021 
            ExecWait  $Script_80226F08_23 
            Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  !&  00040000 
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                If  *Var[0]  &  00000004 
                    If  *Var[0]  !&  00000008 
                        ConstOR  *Var[0] 00000008 
                        Call  SetActorVar       ( .Actor:Self 00000001 *Var[0] )
                        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                        If  *Var[0]  !&  00351000 
                            Call  UseCamPreset      ( 0000000D )
                            Call  BattleCamTargetActor  ( .Actor:Self )
                            Call  MoveBattleCamOver ( 0000001E )
                            Call  ActorSpeak        ( 00130077 .Actor:Self 00000001 0081000B 0081000B ) % Graaaargh! You cheap little...coward!! This fight' ...
                        EndIf
                    EndIf
                EndIf
            EndIf
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001 
            Set   *Var[1]  00810020 
            Set   *Var[2]  00810021 
            ExecWait  $Script_80226F08_23 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00810021 
            ExecWait  $Script_802227E0_23 
            Return
        Case  ==  .Event:SpinSmashHit % B
            Set   *Var[1]  0081000D 
            ExecWait  $Script_8022260C_23 
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_802227B4_23 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_802227E0_23 
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_8022356C_23 
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Set   *Var[1]  00810003 
            ExecWait  $Script_80222CD8_23 
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_8022356C_23 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  $Script_802227E0_23 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  80269E80  ( *Var[2] )
            Switch  *Var[2] 
                CaseOR  ==  00000012 
                CaseOR  ==  00000015 
                    Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
                    Wait  30`
                EndCaseGroup
                Default
                    Set   *Var[1]  00810007 
                    ExecWait  $Script_80222B1C_23 
            EndSwitch
        EndCaseGroup
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            Set   *Var[1]  00810002 
            ExecWait  DoImmune 
        Case  ==  .Event:SpikeTaunt % 1B
        Case  ==  .Event:EndFirstStrike % 35
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  00810012 
            ExecWait  DoRecover 
            Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
        Case  ==  00000030 % 30
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  0081000D 
            ExecWait  DoNormalHit 
            Wait  1000`
        Case  ==  .Event:SwapPartner % 3F
            Call  $Function_80219394_23 ( )
        Case  ==  .Event:StarBeam % 13
            Call  FreezeBattleCam       ( .True )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
            Call  GetStatusFlags        ( .Actor:Self *Var[3] )
            If  *Var[3]  !&  00080000 
                Set   *Var[3]  00000032 
                Set   *Var[4]  00000028 
            Else
                Set   *Var[3]  00000014 
                Set   *Var[4]  00000010 
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  *Var[3] 
            Call  PlayEffect    ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  *Var[4] 
            Call  PlayEffect    ( ~FX:ShimmerBurst:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.7] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00040000 .False )
            Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80221504_23 )
            Call  SetStatusTable    ( .Actor:Self $StatusTable_8022151C_23 )
            Set   *Var[1]  0081000D 
            ExecWait  $Script_802227B4_23 
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  !&  00000002 
                ConstOR  *Var[0] 00000002 
                ConstOR  *Var[0] 00000004 
                Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Call  UseCamPreset  ( 0000000D )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  MoveBattleCamOver     ( 0000001E )
                Call  ActorSpeak    ( 00130075 .Actor:Self 00000001 0081000D 0081000D ) % What the...OW! What in the world was that?
                Call  SetAnimation  ( .Actor:Self 00000001 00810001 )
                Loop  00000002 
                    Set   *Var[0]  00000000 
                    Loop  0000000A 
                        Add   *Var[0]  00000012 
                        Call  SetActorYaw   ( .Actor:Self *Var[0] )
                        Wait  1`
                    EndLoop
                    Wait  5`
                    Set   *Var[0]  000000B4 
                    Loop  0000000A 
                        Sub   *Var[0]  00000012 
                        Call  SetActorYaw   ( .Actor:Self *Var[0] )
                        Wait  1`
                    EndLoop
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Wait  5`
                EndLoop
                Wait  20`
                Call  ActorSpeak    ( 00130076 .Actor:Self 00000001 0081000D 0081000D ) % Goooah? What happened to the power of that stupid  ...
                Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
            EndIf
            Call  FreezeBattleCam   ( .False )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000001E )
            Wait  30`
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022260C_23 {
    Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  !&  00040000 
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
        If  *Var[0]  &  00000004 
            If  *Var[0]  !&  00000008 
                ConstOR  *Var[0] 00000008 
                Call  SetActorVar       ( .Actor:Self 00000001 *Var[0] )
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00351000 
                    Call  FreezeBattleCam   ( .True )
                    ExecWait  $Script_802227B4_23 
                    Call  UseCamPreset      ( 0000000D )
                    Call  BattleCamTargetActor  ( .Actor:Self )
                    Call  MoveBattleCamOver ( 0000001E )
                    Call  ActorSpeak        ( 00130077 .Actor:Self 00000001 0081000B 0081000B ) % Graaaargh! You cheap little...coward!! This fight' ...
                    Call  FreezeBattleCam   ( .False )
                Else
                    ExecWait  $Script_802227B4_23 
                EndIf
                Call  UseIdleAnimation  ( .Actor:Self .True )
                Return
            EndIf
        EndIf
    EndIf
    ExecWait  $Script_802227B4_23 
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802227B4_23 {
    SetConst  *Var[0]  00000001 
    ExecWait  DoNormalHit 
    Return
    End
}

#new:Script $Script_802227E0_23 {
    Call  8027D32C  ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    If  *Var[1]  !=  FFFFFFFF 
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
        Wait  10`
    EndIf
    Call  80269E80  ( *Var[5] )
    Switch  *Var[5] 
        CaseOR  ==  0000000A 
        CaseOR  ==  0000000E 
        CaseOR  ==  0000000C 
        CaseOR  ==  00000010 
        CaseOR  ==  0000000B 
        CaseOR  ==  0000000F 
        CaseOR  ==  0000000D 
        CaseOR  ==  00000011 
        CaseOR  ==  00000002 
        EndCaseGroup
        Default
            Set   *Flag[00]  .False 
            Call  GetOriginalActorType  ( .Actor:Self *Var[1] )
            Switch  *Var[1] 
                CaseOR  ==  0000000D 
                CaseOR  ==  0000000F 
                CaseOR  ==  0000004A 
                EndCaseGroup
                Default
            EndSwitch
            If  *Var[2]  !=  FFFFCFC7 
                Set   *Var[2]  00000000 
                Loop  00000018 
                    Call  SetActorYaw   ( .Actor:Self *Var[2] )
                    Add   *Var[2]  0000001E 
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndIf
    EndSwitch
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A 
    Add   *Var[2]  0000000A 
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Set   *Var[3]  00000000 
    Loop  0000000C 
        Call  SetActorRotation  ( .Actor:Self *Var[3] 00000000 00000000 )
        Add   *Var[3]  00000008 
        Wait  1`
    EndLoop
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget 
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_80222B1C_23 {
    SetConst  *Var[0]  00000001 
    ExecWait  DoImmune 
    Return
    End
}

#new:Script $Script_TakeTurn_80222B48_23 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    ExecWait  $Script_80223E20_23 
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_UseStarRod1_23 {
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  !&  00000040 
        ConstOR  *Var[0] 00000040 
        Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
        Call  UseCamPreset  ( 0000000D )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver     ( 00000014 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 0081000F )
        Wait  5`
        Call  ActorSpeak    ( 00130074 .Actor:Self 00000001 0081001F 0081001E ) % All right, enough of that! Now witness the power o ...
        Call  SetAnimation  ( .Actor:Self 00000001 00810010 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 0081000F )
    EndIf
    Wait  2`
    ExecWait  $Script_80222E48_23 
    Return
    End
}

#new:Script $Script_80222CD8_23 {
    Set   *Var[0]  00000001 
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[D] *Var[E] *Var[F] )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  GetDist2D     ( *Var[9] *Var[A] *Var[C] *Var[D] *Var[F] )
    If  *Var[9]  >=  *Fixed[5.0] 
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
    EndIf
    If  *Var[B]  ==  000000B4 
        Loop  0000000F 
            Sub   *Var[B]  0000000C 
            Call  SetActorYaw   ( .Actor:Self *Var[B] )
            Wait  1`
        EndLoop
    EndIf
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_80222E2C_23 {
    Call  $Function_80218F58_23 ( )
    Return
    End
}

#new:Script $Script_80222E48_23 {
    Call  $Function_802192FC_23 ( )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[3]  !&  00080000 
        Add   *Var[0]  0000000F 
        Add   *Var[1]  0000005A 
        Thread
            Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
            Add   *Var[2]  0000000A 
            Call  $Function_80219444_23 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.05] )
        EndThread
    Else
        Add   *Var[0]  00000006 
        Add   *Var[1]  00000024 
        Thread
            Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
            Add   *Var[2]  0000000A 
            Call  $Function_80219444_23 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.02] )
        EndThread
    EndIf
    Wait  65`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[3]  !&  00080000 
        Add   *Var[0]  0000000F 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:LightRays:SharpA *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Add   *Var[0]  00000006 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:LightRays:SharpA *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
    Wait  30`
    Call  RemoveEffect      ( *Var[F] )
    Call  RemoveEffect      ( *Var[E] )
    Call  RemoveEffect      ( *Var[D] )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00040000 .True )
    Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80221510_23 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_802215C8_23 )
    Call  $Function_80219414_23 ( )
    Wait  3`
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000028 
        Add   *Var[2]  0000000C 
        Call  PlayEffect    ( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 00000046 00000050 00000019 0000003C 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000010 
        Add   *Var[2]  0000000C 
        Call  PlayEffect    ( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 0000001C 00000020 0000000A 0000003C 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 00002125 )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  $Function_80219818_23 ( *Var[0] *Var[1] *Var[2] *Fixed[0.8] )
    EndThread
    Wait  75`
    Thread
        Call  $Function_80219394_23 ( )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[3]  !&  00080000 
        Add   *Var[1]  00000028 
    Else
        Add   *Var[1]  00000010 
    EndIf
    Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002124 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000027 )
    Wait  30`
    Return
    End
}

#new:Script $Script_8022356C_23 {
    If  *Var[1]  !=  FFFFFFFF 
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    EndIf
    Call  UseCamPreset  ( 00000002 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  GetActorPos   ( .Actor:Self *Var[5] *Var[6] *Var[7] )
    Set   *Var[8]  *Var[2] 
    Add   *Var[8]  *Var[5] 
    Div   *Var[8]  00000002 
    Set   *Var[9]  *Var[4] 
    Add   *Var[9]  *Var[7] 
    Div   *Var[9]  00000002 
    Call  SetGoalPos    ( .Actor:Self *Var[8] 00000000 *Var[9] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Add   *Var[8]  *Var[2] 
    Div   *Var[8]  00000002 
    Add   *Var[9]  *Var[4] 
    Div   *Var[9]  00000002 
    Call  SetGoalPos    ( .Actor:Self *Var[8] 00000000 *Var[9] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Return
    End
}

#new:Script $Script_8022376C_23 {
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[7] )
    If  *Var[7]  !=  00810003 
        If  *Var[3]  ==  00810003 
            Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
        EndIf
        Set   *Var[3]  *Var[7] 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Return
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[5] *Var[6] *Var[7] )
    Sub   *Var[5]  *Var[0] 
    If  *Var[5]  >  FFFFFFE2 
        If  *Var[5]  <  0000001E 
            Set   *Var[3]  *Var[7] 
            Return
        EndIf
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
    Set   *Var[3]  *Var[7] 
    Return
    End
}

#new:Script $Script_HealSelf1_23 {
    Call  GetActorVar       ( .Actor:Self 00000007 *Var[0] )
    Sub   *Var[0]  00000001 
    Call  SetActorVar       ( .Actor:Self 00000007 *Var[0] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000 
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  0000000F 
        Add   *Var[1]  00000041 
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 000001A4 )
        Call  SetBattleCamOffsetZ   ( 00000000 )
        Call  MoveBattleCamOver ( 00000028 )
    Else
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  00000006 
        Add   *Var[1]  0000001A 
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 00000126 )
        Call  SetBattleCamOffsetZ   ( 00000000 )
        Call  MoveBattleCamOver ( 00000028 )
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
    Call  $Function_802192FC_23 ( )
    Call  PlaySoundAtActor  ( .Actor:Self 00002126 )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000000F 
        Add   *Var[1]  0000005A 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000000F 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] 0000005A *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000006 
        Add   *Var[1]  00000024 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var[0] *Var[1] *Var[2] *Fixed[0.4] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000006 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] 00000024 *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Wait  30`
    Call  GetEnemyMaxHP ( .Actor:Self *Var[0] )
    Mul   *Var[0]  00000028 
    Div   *Var[0]  00000064 
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
        Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( .Actor:Self *Var[0] .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223E20_23 {
    Call  AddActorVar   ( .Actor:Self 00000000 00000001 )
    Call  AddActorVar   ( .Actor:Self 00000004 00000001 )
    Call  AddActorVar   ( .Actor:Self 00000005 00000001 )
    Call  AddActorVar   ( .Actor:Self 00000002 00000001 )
    Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
    Call  AddActorVar   ( .Actor:Self 00000006 00000001 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000002 
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000 
            Call  UseCamPreset      ( 00000013 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F 
            Add   *Var[1]  0000003C 
            Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
            Call  SetBattleCamZoom  ( 000001A4 )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  MoveBattleCamOver ( 0000001E )
        Else
            Call  UseCamPreset      ( 00000013 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000006 
            Add   *Var[1]  00000018 
            Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
            Call  SetBattleCamZoom  ( 000001A4 )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  MoveBattleCamOver ( 0000001E )
        EndIf
        ExecWait  $Script_UseStarRod1_23 
        Return
    EndIf
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
    Mul   *Var[0]  00000064 
    Div   *Var[0]  *Var[1] 
    Call  $Function_80219CD4_23 ( *Var[2] )
    Sub   *Var[2]  *Var[0] 
    If  *Var[2]  >  0000001E 
        Call  GetActorVar   ( .Actor:Self 00000007 *Var[0] )
        If  *Var[0]  !=  00000000 
            Call  RandInt   ( 00000064 *Var[0] )
            If  *Var[0]  <  00000050 
                Call  GetActorVar   ( .Actor:Self 00000006 *Var[0] )
                If  *Var[0]  >  00000001 
                    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
                    ExecWait  $Script_HealSelf1_23 
                    Return
                Else
                    Call  RandInt   ( 00000064 *Var[0] )
                    If  *Var[0]  <  00000000 
                        Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
                        ExecWait  $Script_HealSelf1_23 
                        Return
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  >  00000001 
        Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[0] )
        If  *Var[0]  !&  00040000 
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0] 
                Case  ==  00000001 
                    Set   *Var[0]  00000000 
                Case  ==  00000002 
                    Set   *Var[0]  00000014 
                Case  ==  00000003 
                    Set   *Var[0]  0000001E 
                Default
                    Set   *Var[0]  00000064 
            EndSwitch
            Call  RandInt   ( 00000064 *Var[1] )
            If  *Var[1]  <  *Var[0] 
                ExecWait  $Script_UseStarRod1_23 
                Return
            EndIf
        EndIf
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    If  *Var[0]  <  00000003 
        ExecWait  $Script_80224570_23 
        Return
    EndIf
    ExecWait  $Script_80224380_23 
    Return
    End
}

#new:Script $Script_80224380_23 {
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  <=  00000003 
        ExecWait  $Script_80224570_23 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    If  *Var[0]  >=  00000006 
        Call  RandInt   ( 00000014 *Var[0] )
        If  *Var[0]  <  00000014 
            ExecWait  $Script_Shockwave1_23 
        Else
            ExecWait  $Script_Shockwave1_23 
        EndIf
        Return
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  0000004B 
        Call  $Function_80219C74_23 ( *Var[0] *Var[1] )
        If  *Var[0]  >  00000000 
            ExecWait  $Script_Shockwave1_23 
            Return
        EndIf
        If  *Var[1]  >  00000000 
            ExecWait  $Script_Shockwave1_23 
            Return
        EndIf
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000014 
        If  *Var[0]  <  00000014 
            ExecWait  $Script_Shockwave1_23 
        Else
            ExecWait  $Script_Shockwave1_23 
        EndIf
        Return
    EndIf
    ExecWait  $Script_80224570_23 
    Return
    Return
    End
}

#new:Script $Script_80224570_23 {
    Call  RandInt   ( 00000050 *Var[0] )
    If  *Var[0]  <  00000014 
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  >=  00000002 
            ExecWait  $Script_DisableJump1_23 
            Return
        EndIf
    EndIf
    Call  RandInt   ( 0000003C *Var[0] )
    If  *Var[0]  <  00000014 
        Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
        If  *Var[0]  >=  00000002 
            ExecWait  $Script_ClawSwipe1_23 
            Return
        EndIf
    EndIf
    ExecWait  $Script_FireBreath1_23 
    Return
    End
}

#new:IntTable $IntTable_8022466C_23 {
00000166 00000167 00000168 
}

#new:IntTable $IntTable_80224678_23 {
00000049 0000004A 0000004B 
}

#new:IntTable $IntTable_80224684_23 {
00000169 0000016A 0000016B 
}

#new:IntTable $IntTable_80224690_23 {
0000004C 0000004D 0000004E 
}

#new:Script $Script_8022469C_23 {
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[A] )
    Switch  *Var[A] 
        Case  ==  00000000 
        Case  ==  00000001 
            Call  GetActorPos   ( .Actor:Player *Var[1] *Var[2] *Var[3] )
            Set   *Var[2]  00000000 
            Sub   *Var[3]  00000001 
            Call  $Function_80219FFC_23 ( *Var[4] *Var[5] )
            Call  MakeItemEntity        ( *Var[4] *Var[1] *Var[2] *Var[3] .ItemSpawnMode:Decoration 00000000 )
            Call  SetActorVar   ( .Actor:Self 0000000A *Var[0] )
            Add   *Var[1]  00000007 
            Call  $Function_80219D44_23 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000008 *Fixed[1.0] )
            Add   *Var[1]  0000000C 
            Call  $Function_80219D44_23 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000008 *Fixed[1.0] )
            Add   *Var[1]  00000007 
            Call  $Function_80219D44_23 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000005 *Fixed[1.0] )
            Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
        Case  ==  00000002 
            Call  ShowMessageBox    ( *Var[5] 0000003C )
            Call  RemoveItemEntity  ( *Var[0] )
            Call  SetActorVar       ( .Actor:Self 00000009 00000003 )
            Return
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_DisableJump1_23 {
    Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  UseCamPreset      ( 0000003F )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 00000024 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000028 )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Else
        Call  UseCamPreset      ( 0000003F )
        Call  SetBattleCamZoom  ( 000000F0 )
        Call  SetBattleCamOffsetZ   ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000028 )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 0000003C 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 00810011 )
    Wait  3`
    Call  SetAnimation  ( .Actor:Self 00000001 00810012 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  EnemyTestTarget       ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E 
            Set   *Var[1]  00000000 
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
            Thread
                Call  $Function_80218F00_23 ( 00000050 0000000E )
                Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
            EndThread
            Sub   *Var[0]  00000023 
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000E .False .True .False )
            Thread
                Call  $Function_80218F00_23 ( 00000050 0000000E )
                Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[2.0] )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
            Wait  3`
            Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
            Wait  25`
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Set   *Var[1]  00810003 
            ExecWait  $Script_80222CD8_23 
            Return
        EndCaseGroup
        Default
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
    EndThread
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 00810013 )
    Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[1] )
    If  *Var[1]  &  00080000 
        Set   *Var[0]  0000000C 
    Else
        Set   *Var[0]  00000006 
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[F] )
    If  *Var[F]  !&  00080000 
        Call  80269EAC  ( 00000018 )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 *Var[0] 00000020 )
    Set   *Var[0]  FFFFFFFF 
    Call  GetBattleFlags    ( *Var[1] )
    If  *Var[1]  !&  80000000 
        Call  GetStatusFlags    ( .Actor:Player *Var[1] )
        If  *Var[1]  !&  40100000 
            Call  GetStatusFlags    ( .Actor:Self *Var[1] )
            If  *Var[1]  !&  00080000 
                Call  $Function_8021A1B8_23 ( *Var[0] )
            EndIf
        EndIf
    EndIf
    If  *Var[0]  !=  FFFFFFFF 
        Call  LandJump      ( .Actor:Self )
        Call  $Function_80218F00_23 ( 00000050 0000000E )
        Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
        Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
        Exec  $Script_8022469C_23 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000034 
        Set   *Var[1]  00000000 
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
        Thread
            Call  $Function_80218F00_23 ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
        EndThread
        Add   *Var[0]  0000001E 
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
        Thread
            Call  $Function_80218F00_23 ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000003 *Fixed[2.0] )
        EndThread
        Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
        Wait  3`
        Label  0
        Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
        If  *Var[0]  !=  00000000 
            Wait  1`
            Goto  0
        EndIf
        Wait  8`
        Call  SetActorYaw   ( .Actor:Self 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
        Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
        Call  $Function_80219F5C_23 ( *Var[0] *Var[1] *Var[2] *Var[3] )
        Add   *Var[1]  0000001E 
        Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
        Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
        Wait  8`
        Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
        Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
        Wait  2`
        Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
        Call  $Function_80219F5C_23 ( *Var[0] *Var[1] *Var[2] *Var[3] )
        Call  SetActorVar   ( .Actor:Self 00000009 00000002 )
        Call  PlayEffect    ( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
        Wait  4`
        Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
        Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
        Wait  2`
        Call  PlayEffect    ( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
        Wait  4`
        Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
        Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
        Wait  2`
        Call  PlayEffect    ( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
        Wait  20`
        Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
    Else
        Call  GetBattleFlags    ( *Var[1] )
        If  *Var[1]  !&  80000000 
            Call  GetStatusFlags    ( .Actor:Player *Var[1] )
            If  *Var[1]  !&  00100000 
                Call  GetStatusFlags    ( .Actor:Self *Var[1] )
                If  *Var[1]  !&  00080000 
                    Call  LandJump  ( .Actor:Self )
                EndIf
            EndIf
        EndIf
        Call  $Function_80218F00_23 ( 00000050 0000000E )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000028 
        Set   *Var[1]  00000000 
        Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
        Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
        Thread
            Call  $Function_80218F00_23 ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[3.0] )
        EndThread
        Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
        Wait  3`
        Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
        Wait  20`
    EndIf
    If  *Var[F]  ==  0000000A 
        Return
    EndIf
    Call  UseCamPreset  ( 00000002 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Set   *Var[1]  00810003 
    ExecWait  $Script_80222CD8_23 
    Return
    End
}

#new:Script $Script_802257EC_23 {
    Call  SetAnimation  ( .Actor:Self 00000001 0081000C )
    Thread
        Wait  5`
        Loop  00000004 
            Call  $Function_80218F00_23 ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
            Wait  4`
        EndLoop
        Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
    EndThread
    Return
    End
}

#new:Script $Script_ClawSwipe1_23 {
    Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  UseCamPreset      ( 0000003F )
        Call  SetBattleCamZoom  ( 000000C8 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000028 )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Else
        Call  UseCamPreset      ( 0000003F )
        Call  SetBattleCamZoom  ( 000000A0 )
        Call  SetBattleCamOffsetZ   ( 00000005 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000028 )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  AddGoalPos    ( .Actor:Self 00000028 00000000 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 00000010 00000000 00000000 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
    Wait  25`
    Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
    Wait  3`
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            ExecWait  $Script_802257EC_23 
            If  *Var[A]  ==  00000005 
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                Wait  30`
            Else
                Wait  30`
            EndIf
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Set   *Var[1]  00810003 
            ExecWait  $Script_80222CD8_23 
            Return
        EndCaseGroup
        Default
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  &  00040000 
        Set   *Var[0]  0000000C 
        Call  80269EAC  ( 0000000C )
        Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 80020364 *Var[0] 00000020 )
    Else
        Set   *Var[0]  00000006 
        Call  80269EAC  ( 0000000C )
        Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 80020364 *Var[0] 00000020 )
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Wait  30`
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
            Set   *Var[1]  00810003 
            ExecWait  $Script_80222CD8_23 
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_Shockwave1_23 {
    Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000 
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  00000018 
        Add   *Var[1]  00000041 
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 000001A4 )
        Call  SetBattleCamOffsetZ   ( 00000000 )
        Call  MoveBattleCamOver ( 00000028 )
    Else
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  00000009 
        Add   *Var[1]  0000001A 
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 000000FA )
        Call  SetBattleCamOffsetZ   ( 00000000 )
        Call  MoveBattleCamOver ( 00000028 )
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
    Wait  10`
    Call  $Function_802192FC_23 ( )
    Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000000F 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:LightRays:SharpA *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000006 
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( ~FX:LightRays:SharpA *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Sub   *Var[2]  00000003 
        Call  PlayEffect    ( 0000003C 00000002 *Var[0] 00000024 *Var[2] *Fixed[0.4] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Wait  25`
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( FFFFFFD3 0000003C 00000000 )
    Call  SetBattleCamZoom  ( 00000212 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  MoveBattleCamOver ( 00000050 )
    Wait  10`
    Call  RemoveEffect      ( *Var[F] )
    Call  RemoveEffect      ( *Var[E] )
    Call  PlaySoundAtActor  ( .Actor:Self 00002122 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000000D 
        Set   *Var[1]  00000037 
        Call  PlayEffect    ( ~FX:EnergyShockwave *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000005 
        Set   *Var[1]  00000016 
        Call  PlayEffect    ( ~FX:EnergyShockwave *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Thread
        Call  $Function_80219394_23 ( )
    EndThread
    Wait  8`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
            Call  EnemyTestTarget   ( .Actor:Self *Var[B] ~Flags:DamageType:0 00000000 00000001 00000010 )
            Switch  *Var[B] 
                Case  ==  .HitResult:Miss % 6
                    Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
                    Wait  30`
                    Return
                Default
                    Wait  2`
                    If  *Var[A]  ==  .HitResult:Lucky % 5
                        ExecWait  $Script_802257EC_23 
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                    EndIf
                    Wait  2`
                    Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
                    Call  SetGoalToTarget   ( .Actor:Self )
                    If  *Var[0]  &  00040000 % 40000
                        Set   *Var[1]  00000003 
                    Else
                        Set   *Var[1]  00000003 
                    EndIf
                    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 20000110 0000FFFF 00000000 *Var[1] 00000020 )
                    Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:PartnerGlowing )
                    If  *Var[A]  !=  00000005 
                        Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
                    EndIf
                    Wait  30`
                    Return
            EndSwitch
        EndCaseGroup
        Default
    EndSwitch
    Call  8026BF48  ( 00000001 )
    Thread
        Wait  4`
        Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
        Call  SetGoalToTarget   ( .Actor:Self )
        If  *Var[0]  &  00040000 % 40000
            Set   *Var[1]  00000003 
        Else
            Set   *Var[1]  00000003 
        EndIf
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] 20000110 0000FFFF 00000000 *Var[1] 00000020 )
        Call  8026BF48  ( 00000000 )
    EndThread
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    If  *Var[0]  &  00040000 % 40000
        Set   *Var[1]  00000004 
    Else
        Set   *Var[1]  00000004 
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] 20000110 0000FFFF 00000000 *Var[1] 00000020 )
    Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:All )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
            Wait  15`
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_FireBreath1_23 {
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  0000001E 
        Add   *Var[1]  00000041 
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 00000190 )
        Call  MoveBattleCamOver ( 00000028 )
    Else
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  0000001E 
        Add   *Var[1]  0000002D 
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 0000015E )
        Call  MoveBattleCamOver ( 00000028 )
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
    Wait  35`
    Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000037 )
    Wait  10`
    Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[3] )
    Call  GetStatusFlags    ( .Actor:Self *Var[4] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[3]  &  00040000 
        If  *Var[4]  !&  00080000 
            Sub   *Var[0]  00000046 
            Add   *Var[1]  00000023 
        Else
            Sub   *Var[0]  0000001C 
            Add   *Var[1]  0000000E 
        EndIf
    Else
        If  *Var[4]  !&  00080000 
            Sub   *Var[0]  00000032 
            Add   *Var[1]  00000021 
        Else
            Sub   *Var[0]  00000014 
            Add   *Var[1]  0000000D 
        EndIf
    EndIf
    Add   *Var[2]  0000000A 
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  00000028 
    Set   *Var[4]  00000014 
    Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[6] )
    If  *Var[6]  &  00040000 
        Call  PlayEffect    ( ~FX:FireBreath:Large *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000032 00000001 00000018 00000000 00000000 00000000 )
    Else
        Call  PlayEffect    ( ~FX:FireBreath:Tiny *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000032 00000001 00000018 00000000 00000000 00000000 )
        Call  $Function_8021A254_23 ( *Var[F] )
    EndIf
    Thread
        Call  $Function_80218F00_23 ( 00000032 00000094 )
        Call  PlaySound ( 000003BD )
        Wait  70`
        Call  PlaySound ( 000007BD )
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
            Wait  30`
            Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
            Wait  30`
            ExecWait  $Script_802257EC_23 
            If  *Var[A]  ==  00000005 
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Return
        EndCaseGroup
        Default
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetPartEventFlags ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  &  00040000 % 40000
        Set   *Var[0]  00000010 
    Else
        Set   *Var[0]  00000008 
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:Fire 0000FFFF 00000000 *Var[0] 00000020 )
    Switch  *Var[F] 
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
            Wait  30`
            Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
            Wait  30`
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_80226F08_23 {
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  .Event:BurnDeath % 24
        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
        Call  SetPartEventBits      ( .Actor:Self 00000001 00040000 .False )
    EndIf
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Call  80269E80      ( *Var[3] )
    Switch  *Var[3] 
        Case  ==  00000009 
            Call  GetOriginalActorType  ( .Actor:Self *Var[7] )
            Switch  *Var[7] 
                CaseOR  ==  00000012 
                CaseOR  ==  00000030 
                EndCaseGroup
                Default
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
                    Add   *Var[5]  00000037 
                    Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  JumpToGoal    ( .Actor:Self 00000008 .False .False .False )
            EndSwitch
            Set   *Var[7]  00000000 
            Loop  0000001E 
                Add   *Var[7]  00000030 
                Call  SetActorYaw   ( .Actor:Self *Var[7] )
                Wait  1`
            EndLoop
            Call  GetOriginalActorType  ( .Actor:Self *Var[7] )
            Switch  *Var[7] 
                CaseOR  ==  00000012 
                CaseOR  ==  00000030 
                    Wait  30`
                EndCaseGroup
                Default
                    Sub   *Var[5]  00000037 
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
                    If  *Var[5]  ==  00000000 
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Else
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 00000005 .False .False .False )
                    EndIf
            EndSwitch
        Default
            Wait  20`
    EndSwitch
    If  *Var[2]  !=  FFFFFFFF 
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[2] )
    EndIf
    Wait  10`
    Call  GetLastEvent  ( .Actor:Self *Var[1] )
    Switch  *Var[1] 
        Case  ==  .Event:BurnHit % E
            Call  GetPartEventFlags ( .Actor:Self *Var[0] *Var[1] )
            If  *Var[1]  !&  00000202 % 202
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetActorSize      ( .Actor:Self *Var[3] *Var[4] )
                Call  GetStatusFlags    ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00080000 
                    MulF  *Var[3]  *Fixed[0.4] 
                    MulF  *Var[4]  *Fixed[0.4] 
                EndIf
                DivF  *Var[3]  *Fixed[2.0] 
                Call  GetActorFlags ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00000800 
                    SubF  *Var[1]  *Var[3] 
                Else
                    AddF  *Var[1]  *Var[3] 
                EndIf
                AddF  *Var[2]  *Fixed[5.0] 
                DivF  *Var[3]  *Fixed[10.0] 
                Call  GetStatusFlags    ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00080000 
                    MulF  *Var[3]  *Fixed[0.4] 
                    If  *Var[3]  <  00000001 
                        SetF  *Var[3]  *Fixed[1.0] 
                    EndIf
                EndIf
                Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndIf
        Case  ==  .Event:BurnDeath % 24
    EndSwitch
    Return
    End
}

#new:ConstDouble $ConstDouble_80234780_23 {
0.400000d
}

#new:ConstDouble $ConstDouble_80234788_23 {
2.400000d
}

#new:ConstDouble $ConstDouble_80234790_23 {
1.600000d
}

#new:ConstDouble $ConstDouble_80234798_23 {
1.200000d
}

#new:ConstDouble $ConstDouble_802347A0_23 {
0.960000d
}

#new:ConstDouble $ConstDouble_802347A8_23 {
0.400000d
}

#new:ConstDouble $ConstDouble_802347B0_23 {
0.640000d
}

