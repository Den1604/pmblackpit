% Automatically dumped from section 14

#new:Actor $14_JungleFuzzy {
% stats
[Index]        29b 
[Level]        16`b 
[MaxHP]         7`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E9E4_14 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021EA90_14 
[Script]      $Script_Init_8021EB28_14 
% move effectiveness
[Escape]       30`b 
[Item]         75`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802181A0_14 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218254_14 {
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_8021E9D0_14 {
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End
}

#new:StatusTable $StatusTable_8021E9E4_14 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021EA90_14 {
00800000 01000000 001400FF $IdleAnimations_8021EADC_14 $DefenseTable_8021E9D0_14 00000000 00000000 00F60000 00000000 
}

#new:Actor $JungleFuzzy_14 {
% stats
[Index]        29b 
[Level]        16`b 
[MaxHP]         7`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E9E4_14 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021EA90_14 
[Script]      $Script_Init_8021EB28_14 
% move effectiveness
[Escape]       30`b 
[Item]         75`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021EADC_14 {
.Status:Normal    002B0301
.Status:Stone     002B0300
.Status:Sleep     002B030E
.Status:Poison    002B0301
.Status:Stop      002B0300
.Status:Static    002B0301
.Status:Paralyze  002B0300
.Status:Dizzy     002B030F
.Status:Fear      002B030F
.Status:End
}

#new:Script $Script_Init_8021EB28_14 {
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221628_14 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021EB8C_14 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EB9C_14 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021EB8C_14 {
    Return
    End
}

#new:Script $Script_HandleEvent_8021EB9C_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  .Event:Death % 20
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0313 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0308 
            EndIf
            ExecWait  DoNormalHit 
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0310 
            SetConst  *Var[2]  002B0312 
            ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0310 
            SetConst  *Var[2]  002B0312 
            ExecWait  DoBurnHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0312 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0308 
            ExecWait  DoSpinSmashHit 
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0308 
            ExecWait  DoSpinSmashHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0308 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  80269470 ( )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0313 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0313 
            ExecWait  DoJumpBack 
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0303 
            ExecWait  8029C0A4 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            Call  80269470 ( )
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0313 
            ExecWait  DoShockHit 
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0313 
            ExecWait  DoDeath 
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0301 
            ExecWait  DoImmune 
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000020 
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0313 
                ExecWait  DoNormalHit 
                Wait  10`
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0313 
                ExecWait  DoDeath 
            Else
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0308 
                ExecWait  DoNormalHit 
                Wait  10`
                SetConst  *Var[0]  00000001 
                SetConst  *Var[1]  002B0308 
                ExecWait  DoDeath 
            EndIf
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0301 
            ExecWait  DoRecover 
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0303 
            SetConst  *Var[2]  002B0309 
            ExecWait  DoScareAway 
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0303 
            ExecWait  DoAirLift 
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0303 
            ExecWait  DoBlowAway 
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001 
            SetConst  *Var[1]  002B0301 
            ExecWait  DoImmune 
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Divide_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000014A )
    Call  SetBattleCamOffsetZ   ( 0000001E )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  20`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  UseCamPreset      ( 00000001 )
    Thread
        Wait  30`
        Call  PlaySoundAtActor  ( .Actor:Self 0000206E )
        Wait  30`
        Loop  00000004 
            Call  PlaySoundAtActor  ( .Actor:Self 0000206F )
            Wait  11`
        EndLoop
        Call  PlaySoundAtActor  ( .Actor:Self 00002070 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 002B030D )
    Wait  130`
    Call  SetAnimation  ( .Actor:Self 00000001 002B0302 )
    Call  SummonEnemy   ( $SpecialFormation_8022180C_14 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Call  SetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  SetGoalToIndex    ( *Var[0] *Var[A] )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 002B0302 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
        Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  JumpToGoal    ( .Actor:Self 0000000E .False .True .False )
    EndThread
    Wait  1`
    Call  SetAnimation  ( *Var[0] 00000001 002B0302 )
    Call  SetActorJumpGravity   ( *Var[0] *Fixed[1.4] )
    Call  JumpToGoal    ( *Var[0] 0000000E .False .True .False )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  ForceHomePos  ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  HPBarToHome   ( *Var[0] )
    Call  SetAnimation  ( *Var[0] 00000001 002B0301 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
    Switch  *Var[1] 
        Case  ==  00000000 
            Call  SetActorVar   ( *Var[0] 00000000 00000001 )
        Case  ==  00000001 
            Call  SetActorVar   ( *Var[0] 00000000 00000002 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_LeechAttack_14 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032 
        Set   *Var[1]  00000000 
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Goto  64
    EndIf
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0303 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032 
    Set   *Var[1]  00000000 
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C 
    Call  SetAnimation      ( .Actor:Self 00000001 002B0301 )
    Label  64
    Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0304 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
    Switch  *Var[0] 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0] 
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005 
            Set   *Var[1]  00000000 
            Sub   *Var[2]  00000005 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0305 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000B .False .True .False )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0309 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F 
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  4`
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0303 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C 
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000 
                Set   *Flag[00]  .False 
            Else
                Set   *Flag[00]  .True 
            EndIf
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    If  *Flag[00]  ==  .True 
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Player *Var[1] )
    If  *Var[1]  &  00100000 
        Wait  10`
        Loop  00000002 
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0307 )
            Wait  21`
            Call  SetAnimation  ( .Actor:Self 00000001 002B0300 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Wait  2`
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Wait  10`
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[A] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0305 )
            Wait  30`
        EndLoop
    Else
        Call  ShowMessageBox    ( 00000031 00007FFF )
        Call  802694A4  ( 00000001 )
        Call  LoadActionCommand ( 00000006 )
        Call  802A9000 ( )
        Call  802691C8  ( 00000001 00000017 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  SetBattleFlagBits ( 00004000 .False )
        Call  802A9110  ( 00000000 00007FFF 00000003 )
        Set   *Var[D]  00000000 
        Loop  00000005 
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetAnimation      ( .Actor:Self 00000001 002B0307 )
            Set   *Flag[00]  .False 
            Loop  00000015 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetAnimation      ( .Actor:Self 00000001 002B0300 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
            Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Flag[00]  .False 
            Loop  00000001 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Set   *Flag[00]  .False 
            Loop  00000001 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Set   *Flag[00]  .False 
            Loop  00000001 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Set   *Flag[00]  .False 
            Loop  00000001 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Set   *Flag[00]  .False 
            Loop  00000002 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Set   *Flag[00]  .False 
            Loop  0000000A 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Set   *Flag[00]  .False 
            Loop  00000002 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  UseIdleAnimation  ( .Actor:Player .True )
            Call  EnemyDamageTarget ( .Actor:Self *Var[A] 0A000000 00000000 00000000 00000002 00000040 )
            Call  GetLastDamage     ( .Actor:Player *Var[3] )
            If  *Var[3]  !=  00000000 
                Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
                Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A 
                Call  $Function_802181A0_14 ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Thread
                    Wait  15`
                    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                    Call  $Function_80218254_14 ( *Var[0] *Var[1] *Var[2] *Var[3] )
                EndThread
                Add   *Var[0]  00000014 
                Add   *Var[1]  00000014 
                Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                Add   *Var[0]  *Var[3] 
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            Else
                Add   *Var[D]  00000001 
                If  *Var[D]  >  00000001 
                    Call  80269470 ( )
                    BreakLoop
                EndIf
            EndIf
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
            Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
            Call  GetPlayerHP       ( *Var[1] )
            If  *Var[1]  ==  00000000 
                Call  80269470 ( )
                BreakLoop
            EndIf
            Set   *Flag[00]  .False 
            Loop  00000023 
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001 
                    Set   *Flag[00]  .True 
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True 
                BreakLoop
            EndIf
        EndLoop
        Call  80269470 ( )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
    EndIf
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0301 )
    Call  UseCamPreset  ( 00000002 )
    Thread
        Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
        Wait  2`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
        Wait  2`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
    EndThread
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028 
    Set   *Var[1]  00000000 
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
    Wait  1`
    Thread
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E 
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Wait  5`
    Call  YieldTurn ( )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0303 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C 
    Call  SetAnimation  ( .Actor:Self 00000001 002B0301 )
    Call  EnableIdleScript      ( .Actor:Self 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802210E0_14 {
    Set   *Flag[01]  .False 
    Set   *Flag[02]  .False 
    Set   *Flag[03]  .False 
    Set   *Flag[04]  .False 
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004 
    Switch  *Var[5] 
        Case  ==  00000000 
            Set   *Flag[01]  .True 
        Case  ==  00000001 
            Set   *Flag[02]  .True 
        Case  ==  00000002 
            Set   *Flag[03]  .True 
        Case  ==  00000003 
            Set   *Flag[04]  .True 
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Set   *Var[A]  FFFFFFFF 
    Set   *Var[B]  FFFFFFFF 
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Switch  *Var[0] 
        Case  ==  .Actor:Player % 0
            If  *Flag[02]  ==  .False 
                Set   *Var[A]  00000001 
            EndIf
        Case  ==  00000001 % 1
            If  *Flag[01]  ==  .False 
                Set   *Var[A]  00000000 
            EndIf
            If  *Flag[03]  ==  .False 
                If  *Var[A]  ==  FFFFFFFF 
                    Set   *Var[A]  00000002 
                Else
                    Set   *Var[B]  00000002 
                EndIf
            EndIf
        Case  ==  00000002 % 2
            If  *Flag[02]  ==  .False 
                Set   *Var[A]  00000001 
            EndIf
            If  *Flag[04]  ==  .False 
                If  *Var[A]  ==  FFFFFFFF 
                    Set   *Var[A]  00000003 
                Else
                    Set   *Var[B]  00000003 
                EndIf
            EndIf
        Case  ==  00000003 % 3
            If  *Flag[03]  ==  .False 
                Set   *Var[A]  00000002 
            EndIf
    EndSwitch
    If  *Var[B]  !=  FFFFFFFF 
        Call  RandInt   ( 000003E8 *Var[0] )
        If  *Var[0]  <  000001F4 % 1F4
            Set   *Var[A]  *Var[B] 
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_80221468_14 {
    Set   *Var[9]  00000000 
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2] 
        CaseOR  ==  0000001A 
        CaseOR  ==  00000029 
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000 
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  !=  00000002 
                    Add   *Var[9]  00000001 
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  0000002A 
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000 
                Call  GetActorVar   ( *Var[0] 00000001 *Var[3] )
                If  *Var[3]  <  00000002 
                    Add   *Var[9]  00000001 
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80221628_14 {
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001 
        ExecWait  $Script_LeechAttack_14 
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000002 
        ExecWait  $Script_LeechAttack_14 
        Return
    EndIf
    ExecWait  $Script_802210E0_14 
    If  *Var[A]  ==  FFFFFFFF 
        ExecWait  $Script_LeechAttack_14 
        Return
    EndIf
    ExecWait  $Script_80221468_14 
    Switch  *Var[9] 
        Case  ==  00000001 
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000190 
                ExecWait  $Script_Divide_14 
                Return
            EndIf
        Case  ==  00000002 
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000096 
                ExecWait  $Script_Divide_14 
                Return
            EndIf
        Case  ==  00000003 
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000046 
                ExecWait  $Script_Divide_14 
                Return
            EndIf
    EndSwitch
    ExecWait  $Script_LeechAttack_14 
    Return
    End
}

#new:Vector3D $Vector3D_80221800_14 {
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8022180C_14 {
$JungleFuzzy_14 $Vector3D_80221800_14 00000000 00000000 00000000 00000000 00000000 
}

