% Script File: 18 Area FLO.bscr
% Decoded from: 5B14B0 to 5CE690 (18 Area FLO)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802180CC
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S4, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S2, V0
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:cos_deg
	MOV.S     F12, F20
	MTC1      S2, F22
	NOP
	CVT.S.W   F22, F22
	MUL.S     F0, F22, F0
	NOP
	MOV.S     F12, F20
	MTC1      S3, F20
	NOP
	CVT.S.W   F20, F20
	ADD.S     F20, F20, F0
	JAL       ~Func:sin_deg
	ADDIU     S0, S0, 4
	MUL.S     F22, F22, F0
	NOP
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	MFC1      A2, F20
	MTC1      S4, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:set_float_variable
	SUB.S     F20, F20, F22
	LW        A1, 0 (S0)
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A0, S1
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

PADDING: 802181E8 to 802181F0 (005B1698 to 005B16A0)
00000000 00000000

#new:Function $Function_802181F0
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80218380
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021844C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIO       AT, 40C90FD8
	MTC1      AT, F8
	MTC1      S2, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F8, F4, F8
	NOP
	MTC1      S0, F6
	NOP
	CVT.S.W   F6, F6
	LIF       F2, 1.0
	DIV.S     F4, F4, F6
	SUB.S     F2, F2, F4
	MUL.S     F20, F0, F2
	NOP
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:cos_rad
	DIV.S     F12, F8, F12
	MUL.S     F20, F20, F0
	NOP
	COPY      A0, S1
	TRUNC.W.S F10, F20
	MFC1      A2, F10
	JAL       ~Func:set_variable
	COPY      A1, S4
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

PADDING: 8021855C to 80218560 (005B1A0C to 005B1A10)
00000000

% Origin: HINT
#new:Function $Function_80218560
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_802186B8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_802186E4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_802187B0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218808
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 802188CC to 802188D0 (005B1D7C to 005B1D80)
00000000

% Origin: HINT
#new:Function $Function_802188D0
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80218A28
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218A54
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218B20
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218B78
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80218C3C to 80218C40 (005B20EC to 005B20F0)
00000000

% Origin: HINT
#new:Function $Function_80218C40
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218D98
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218DC4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218E90
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218EE8
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218FAC
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        S2, 18 (SP)
	LIA       S2, 8010F290
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LB        A2, 0 (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	LB        A2, 1 (S2)
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_8021900C
{
	ADDIU     SP, SP, FFD8
	SW        S3, 1C (SP)
	COPY      S3, A0
	SW        RA, 20 (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S3)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      S1, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S3
	COPY      S2, V0
	ADDIU     V0, R0, FF81
	BNE       S1, V0, .o54
	NOP
	LW        S1, 148 (S3)
	.o54
	JAL       ~Func:get_actor
	COPY      A0, S1
	COPY      A0, V0
	JAL       ~Func:get_actor_part
	COPY      A1, S2
	LW        A0, 78 (V0)
	JAL       ~Func:lookup_defense
	ADDIU     A1, R0, 1
	COPY      A0, S3
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802190B0
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80219208
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219234
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80219300
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219358
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 8021941C to 80219420 (005B28CC to 005B28D0)
00000000

#new:Function $Function_80219420
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_802311D8
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_802194E0
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80231678
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_802195A0
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80231B08
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80219660
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80231FA8
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80219720
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80232428
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_802197E0
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_802328D8
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_802198A0
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80232BE8
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80219960
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80219AF0
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80219C80
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80233564
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80219D40
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80233870
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80219E00
{
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	CLEAR     S2
	SW        S1, 1C (SP)
	COPY      S1, S2
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80233950
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       ~Func:strcmp
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	COPY      A0, S2
	SW        R0, 14 (SP)
	COPY      A2, A1
	COPY      A3, A1
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:IdleAnimations $IdleAnimations_80219EC0
{
    .Status:Normal    00490001
    .Status:Stone     00490000
    .Status:Sleep     00490008
    .Status:Poison    00490001
    .Status:Stop      00490000
    .Status:Static    00490001
    .Status:Paralyze  00490000
    .Status:Dizzy     00490009
    .Status:Fear      00490009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219F0C
{
    .Status:Normal    0049000B
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219F18
{
    .Status:Normal    004A0001
    .Status:End
}

#new:DefenseTable $DefenseTable_80219F24
{
    .Element:Normal 00000000
    .Element:Mystery0000000000000000
    .Element:End
}

#new:StatusTable $StatusTable_80219F38
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   50`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80219FE4
{
    00800000 01000000 FB2300FF $IdleAnimations_80219EC0 $DefenseTable_80219F24 00000000 00000000 00F30000 00000000
    00120001 02000000 000000FF $IdleAnimations_80219F0C $DefenseTable_80219F24 00000000 00000000 00000000 00000000
    00120001 03000000 000000FF $IdleAnimations_80219F18 $DefenseTable_80219F24 00000000 00000000 00000000 00000000
}

#new:Actor $Lakitu
{
    % stats
    [Index]        2Eb
    [Level]        20`b
    [MaxHP]        12`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80219F38
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80219FE4
    [Script]      $Script_Init_8021A078
    % move effectiveness
    [Escape]       40`b
    [Item]         50`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -11`b  20`b % dx dy
    [StatusIcon]   10`b  34`b % dx dy
}

#new:Script $Script_Init_8021A078
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021BD2C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A0DC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A16C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021A0DC
{
    Return
    End
}

#new:Script $Script_8021A0EC
{
    Call  SetAnimation  ( .Actor:Self 00000001 00490003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021A16C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490005
            SetConst  *Var[2]  00490006
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490005
            SetConst  *Var[2]  00490006
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoJumpBack
            ExecWait  $Script_8021A0EC
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8021A0EC
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490003
            SetConst  *Var[2]  00490004
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00490004
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_ThrowSpint
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00490003 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    Call  SetAnimation  ( .Actor:Self 00000002 0049000B )
    Call  SetAnimation  ( .Actor:Self 00000001 00490012 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 00490013 )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFFD
        Add   *Var[1]  00000010
        Add   *Var[2]  00000002
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[0.4] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C
        Add   *Var[2]  00000000
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFF8
        Add   *Var[1]  00000028
        Add   *Var[2]  00000005
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000001E
        Add   *Var[2]  00000002
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00490015 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000002 0049000C )
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020D2 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
            Sub   *Var[0]  0000001E
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000A .True )
            Sub   *Var[0]  00000014
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000005 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  20`
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021A0EC
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Thread
                Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  00000028
                Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
                Sub   *Var[0]  0000001E
                Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000A .True )
                Sub   *Var[0]  00000014
                Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000005 .True )
                Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            EndThread
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021A0EC
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Vector3D $Vector3D_8021B01C
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021B028
{
    $Spiny $Vector3D_8021B01C 00000064 00000001 00000000 00000000 00000000
}

#new:Script $Script_SummonSpiny
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SummonEnemy       ( $SpecialFormation_8021B028 00000000 )
    Call  CopyStatusEffects ( .Actor:Self *Var[0] )
    Set   *Var[B]  *Var[0]
    Call  SetAnimation      ( .Actor:Self 00000002 0049000B )
    Call  SetAnimation      ( .Actor:Self 00000001 00490012 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 00490013 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 % 80000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFFD
        Add   *Var[1]  00000010
        Add   *Var[2]  00000002
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[0.4] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C
        Add   *Var[2]  00000000
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFF8
        Add   *Var[1]  00000028
        Add   *Var[2]  00000005
        Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000001E
        Add   *Var[2]  00000002
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00490015 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
    EndThread
    Call  UseCamPreset  ( 00000002 )
    Call  PlaySoundAtPart       ( .Actor:Self 00000002 000020D2 )
    Call  SetPartSounds ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000002 0049000C )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.6] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000028
    Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000C .True )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] )
    Sub   *Var[0]  0000001E
    Thread
        Call  SetPartRotationOffset ( .Actor:Self 00000003 00000000 00000010 00000000 )
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Flag[00]  .False
        Loop  0000000C
            Add   *Var[0]  0000001E
            Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
            Add   *Var[1]  00000001
            If  *Var[1]  >=  00000006
                If  *Flag[00]  ==  .True
                    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
                    Set   *Flag[00]  .False
                Else
                    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
                    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
                    Set   *Flag[00]  .True
                EndIf
            EndIf
            Wait  1`
        EndLoop
    EndThread
    Thread
        Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.3] )
        Call  JumpPartTo    ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000C .True )
    EndThread
    Wait  1`
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
    Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000C .True )
    Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  GetPartOffset ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits       ( .Actor:Self 00000002 00000001 .True )
    Call  SetPartFlagBits       ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation  ( *Var[B] 00000001 004A0001 )
    Wait  20`
    Call  SetAnimation  ( *Var[B] 00000001 004A0004 )
    Call  SetGoalToIndex        ( *Var[B] *Var[A] )
    Call  GetGoalPos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  GetActorPos   ( *Var[B] *Var[3] *Var[4] *Var[5] )
    If  *Var[0]  <  *Var[3]
        Call  SetActorYaw   ( *Var[B] 00000000 )
    Else
        Call  SetActorYaw   ( *Var[B] 000000B4 )
    EndIf
    Call  SetActorSpeed ( *Var[B] *Fixed[4.0] )
    Call  RunToGoal     ( *Var[B] 00000000 .False )
    Call  SetAnimation  ( *Var[B] 00000001 004A0001 )
    Call  SetActorYaw   ( *Var[B] 00000000 )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[B] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Add   *Var[0]  00000001
    Call  SetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_GetFirstOpenColumn
{
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[01]  ==  .False
        Set   *Var[A]  00000000
        Return
    EndIf
    If  *Flag[02]  ==  .False
        Set   *Var[A]  00000001
        Return
    EndIf
    If  *Flag[03]  ==  .False
        Set   *Var[A]  00000002
        Return
    EndIf
    If  *Flag[04]  ==  .False
        Set   *Var[A]  00000003
        Return
    EndIf
    Set   *Var[A]  FFFFFFFF
    Return
    End
}

#new:Script $Script_CountActiveSummoners
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        Case  ==  0000002E
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  <  00000003
                    Add   *Var[9]  00000001
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021BD2C
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  >=  00000003
        ExecWait  $Script_ThrowSpint
        Return
    EndIf
    ExecWait  $Script_GetFirstOpenColumn
    If  *Var[A]  ==  FFFFFFFF
        ExecWait  $Script_ThrowSpint
        Return
    EndIf
    ExecWait  $Script_CountActiveSummoners
    Switch  *Var[9]
        Case  ==  00000001
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  000001F4
                ExecWait  $Script_SummonSpiny
                Return
            EndIf
        Case  ==  00000002
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  000000FA
                ExecWait  $Script_SummonSpiny
                Return
            EndIf
        Case  ==  00000003
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000096
                ExecWait  $Script_SummonSpiny
                Return
            EndIf
    EndSwitch
    ExecWait  $Script_ThrowSpint
    Return
    End
}

PADDING: 8021BEC8 to 8021BED0 (005B5378 to 005B5380)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8021BED0
{
    .Status:Normal    004A0001
    .Status:Stone     004A0000
    .Status:Sleep     004A0010
    .Status:Poison    004A0001
    .Status:Stop      004A0000
    .Status:Static    004A0001
    .Status:Paralyze  004A0000
    .Status:Dizzy     004A0012
    .Status:Fear      004A0012
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021BF1C
{
    .Status:Normal    004A0002
    .Status:Stone     004A0015
    .Status:Sleep     004A0011
    .Status:Poison    004A0002
    .Status:Stop      004A0015
    .Status:Static    004A0002
    .Status:Paralyze  004A0015
    .Status:Dizzy     004A0013
    .Status:Fear      004A0013
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021BF68
{
    .Status:Normal    0049000B
    .Status:End
}

#new:DefenseTable $DefenseTable_8021BF74
{
    .Element:Normal 00000003
    .Element:End
}

#new:DefenseTable $DefenseTable_8021BF80
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021BF8C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021C038
{
    00800000 01000000 001400FF $IdleAnimations_8021BED0 $DefenseTable_8021BF74 00201000 00000000 00FC0000 00000000
    00020001 02000000 000000FF $IdleAnimations_8021BF68 $DefenseTable_8021BF74 00000000 00000000 00000000 00000000
}

#new:Actor $Spiny
{
    % stats
    [Index]        2Fb
    [Level]        19`b
    [MaxHP]         5`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021BF8C
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_8021C038
    [Script]      $Script_Init_8021C0A8
    % move effectiveness
    [Escape]       60`b
    [Item]         60`b
    [AirLift]      75`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021C0A8
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021C124 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021CDC0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C2F4 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021C124
{
    Return
    End
}

#new:Script $Script_8021C134
{
    Call  SetAnimation  ( .Actor:Self 00000002 0049000C )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
    Call  SetAnimation  ( .Actor:Self 00000001 004A001A )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self 00000001 004A0001 )
    Return
    End
}

#new:Script $Script_8021C258
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[3] )
    If  *Var[3]  ==  00000001
        Set   *Var[1]  *Var[2]
    EndIf
    Return
    End
}

#new:IntTable $IntTable_8021C2A8
{
    00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
    00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
    00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021C2F4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004A0009
            SetConst  *Var[2]  004A000A
            ExecWait  $Script_8021C258
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  !=  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004A000B
                SetConst  *Var[2]  004A000C
                ExecWait  DoBurnHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004A000D
                SetConst  *Var[2]  004A000E
                ExecWait  DoBurnHit
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  !=  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004A000B
                SetConst  *Var[2]  004A000C
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004A000C
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004A000D
                SetConst  *Var[2]  004A000E
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004A000E
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004A0009
            SetConst  *Var[2]  004A000A
            ExecWait  $Script_8021C258
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004A0009
            SetConst  *Var[2]  004A000A
            ExecWait  $Script_8021C258
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004A0009
            SetConst  *Var[2]  004A000A
            ExecWait  $Script_8021C258
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                Call  SetAnimation  ( .Actor:Self 00000001 004A000A )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 004A0016 )
            EndIf
            Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021BF80 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021BF1C )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00200000 .False )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            UseIntBuffer  $IntTable_8021C2A8
            Loop  00000013
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Wait  20`
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0006
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 004A0007 )
                    Wait  10`
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0002
                    ExecWait  DoImmune
            EndSwitch
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[0]  &  00080000
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000000
                    Add   *Var[0]  00000000
                EndIf
                Add   *Var[1]  00000008
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000000
                    Add   *Var[0]  FFFFFFFF
                EndIf
                Add   *Var[1]  00000016
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004A0009
            SetConst  *Var[2]  004A000A
            ExecWait  $Script_8021C258
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004A0009
            SetConst  *Var[2]  004A000A
            ExecWait  $Script_8021C258
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0001
                    ExecWait  DoRecover
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0002
                    ExecWait  DoImmune
            EndSwitch
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0004
                    SetConst  *Var[2]  004A0009
                    ExecWait  DoScareAway
                    Return
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0002
                    ExecWait  DoImmune
            EndSwitch
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0004
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0002
            EndSwitch
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0004
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  004A0002
            EndSwitch
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021CDC0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
        Sub   *Var[0]  00000001
        Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
        If  *Var[0]  >  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 004A0014 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
        Else
            Call  SetAnimation      ( .Actor:Self 00000001 004A0014 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004A0002
            SetConst  *Var[2]  004A0001
            ExecWait  8029BBB4
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021BF74 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021BED0 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00200000 .True )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 004A0019 )
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 004A0018 )
        Wait  10`
    Else
        Wait  20`
    EndIf
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  SetAnimation      ( .Actor:Self 00000002 0049000C )
    Wait  10`
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002C7 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000004 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF38 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021C134
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000002 0049000B )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  EnableActorBlur       ( .Actor:Self 00000000 )
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021C134
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021D7A0
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021D7AC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      30`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   30`
    .Status:Shrink     30`
    .Status:Stop       30`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021D858
{
    00800000 01000000 FE1E00FF $IdleAnimations_8021D8A4 $DefenseTable_8021D7A0 00000000 00000000 00F80000 00000000
}

#new:Actor $CrazeeDayzee
{
    % stats
    [Index]        32b
    [Level]        19`b
    [MaxHP]         8`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021D7AC
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021D858
    [Script]      $Script_Init_8021D8F0
    % move effectiveness
    [Escape]       50`b
    [Item]        100`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  34`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -14`b  17`b % dx dy
    [StatusIcon]    9`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021D8A4
{
    .Status:Normal    00480001
    .Status:Stone     00480000
    .Status:Sleep     0048000C
    .Status:Poison    00480001
    .Status:Stop      00480000
    .Status:Static    00480001
    .Status:Paralyze  00480000
    .Status:Dizzy     0048000B
    .Status:Fear      0048000B
    .Status:End
}

#new:Script $Script_Init_8021D8F0
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E7BC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021D93C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D988 )
    Return
    End
}

#new:Script $Script_Idle_8021D93C
{
    Return
    End
}

#new:Script $Script_8021D94C
{
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  00480003
    ExecWait  DoReturnHome
    Return
    End
}

#new:Script $Script_HandleEvent_8021D988
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480009
            SetConst  *Var[2]  0048000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480009
            SetConst  *Var[2]  0048000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0048000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoJumpBack
            ExecWait  $Script_8021D94C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480004
            SetConst  *Var[2]  00480008
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480008
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Crazee_Sing
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorPos   ( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
    Else
        Call  UseCamPreset      ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
        Call  MoveBattleCamOver ( 00000046 )
        Set   *Flag[00]  .False
        Label  0
        If  *Flag[00]  ==  .False
            Call  SetAnimation  ( .Actor:Self 00000001 0048000E )
            Set   *Flag[00]  .True
        Else
            Call  SetAnimation  ( .Actor:Self 00000001 0048000F )
            Set   *Flag[00]  .False
        EndIf
        Wait  1`
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  00000014
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        If  *Var[0]  >  00000000
            Goto  0
        EndIf
        If  *Flag[00]  ==  .False
            Call  SetAnimation  ( .Actor:Self 00000001 0048000E )
            Set   *Flag[00]  .True
        Else
            Call  SetAnimation  ( .Actor:Self 00000001 0048000F )
            Set   *Flag[00]  .False
        EndIf
        Wait  1`
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
        Call  SetGoalPos    ( .Actor:Self FFFFFFDD 00000000 0000000A )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00480001 )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00480006 )
        Wait  40`
        Call  SetAnimation  ( .Actor:Self 00000001 00480007 )
    EndThread
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:DayzeeSong )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000019
    Add   *Var[2]  00000002
    Loop  0000000D
        Call  RandInt       ( 0000001E *Var[3] )
        Sub   *Var[3]  0000000F
        Add   *Var[3]  *Var[0]
        Call  PlayEffect    ( ~FX:MusicNote:Left *Var[3] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
    EndLoop
    Call  SetAnimation      ( .Actor:Self 00000001 00480001 )
    Wait  10`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8021D94C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 80001314 00000004 00000020 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000A )
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021D94C
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Crazee_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseCamPreset  ( 00000013 )
    Call  SetBattleCamZoom  ( 0000012C )
    Call  SetBattleCamOffsetZ   ( 0000001E )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000014
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00480003 )
    Wait  10`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Sub   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  20`
    Call  UseCamPreset  ( 00000002 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetAnimation  ( .Actor:Self 00000001 00480004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  SetBattleFlagBits ( 00040000 .True )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_TakeTurn_8021E7BC
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_Crazee_Sing
        Return
    EndIf
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  RandInt       ( 00000064 *Var[1] )
    Switch  *Var[0]
        Case  ==  00000001
            If  *Var[1]  <  00000050
                ExecWait  $Script_Crazee_RunAway
                Return
            EndIf
        Case  ==  00000002
            If  *Var[1]  <  00000028
                ExecWait  $Script_Crazee_RunAway
                Return
            EndIf
        Case  ==  00000003
            If  *Var[1]  <  00000014
                ExecWait  $Script_Crazee_RunAway
                Return
            EndIf
        Case  ==  00000004
            If  *Var[1]  <  0000000A
                ExecWait  $Script_Crazee_RunAway
                Return
            EndIf
    EndSwitch
    ExecWait  $Script_Crazee_Sing
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021E930
{
    .Status:Normal    004B0001
    .Status:Stone     004B0000
    .Status:Sleep     004B0009
    .Status:Poison    004B0001
    .Status:Stop      004B0000
    .Status:Static    004B0001
    .Status:Paralyze  004B0000
    .Status:Dizzy     004B000A
    .Status:Fear      004B000A
    .Status:End
}

#new:DefenseTable $DefenseTable_8021E97C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021E988
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021EA34
{
    00800000 01000000 F92100FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 02F60000 00000000
    00120001 02000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
    00120001 03000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
    00120001 04000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
    00120001 05000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
    00120001 06000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $Bzzap
{
    % stats
    [Index]        31b
    [Level]        19`b
    [MaxHP]         3`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021E988
    % ai
    [PartsCount]    6`s
    [PartsTable]  $PartsTable_8021EA34
    [Script]      $Script_Init_8021EB34
    % move effectiveness
    [Escape]       40`b
    [Item]         70`b
    [AirLift]      95`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021EB34
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022139C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021EC20 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EDB8 )
    Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Return
    End
}

#new:Script $Script_Idle_8021EC20
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00041000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF9 00000013 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFFA )
        Call  $Function_80218000    ( FFFFFFEC 00000014 0000000A 0000001B )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF9 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFF6 )
        Call  $Function_80218000    ( FFFFFFF0 00000016 00000004 00000016 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021ED30
{
    Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 004B0003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Return
    End
}

#new:Script $Script_HandleEvent_8021EDB8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0007
            SetConst  *Var[2]  004B0008
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0007
            SetConst  *Var[2]  004B0008
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoJumpBack
            ExecWait  $Script_8021ED30
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B000B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8021ED30
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0003
            SetConst  *Var[2]  004B0006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0001
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoBlowAway
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Sting
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 004B0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000034 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Add   *Var[2]  00000001
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Wait  5`
            Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
            Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8021ED30
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Add   *Var[2]  00000001
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
    Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
    Wait  6`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020328 00000006 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021ED30
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021F88C
{
    Set   *Var[9]  *Var[0]
    Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Add   *Var[A]  000000C8
    Add   *Var[B]  00000064
    Call  SetPartPos    ( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] )
    Call  SetPartFlagBits       ( .Actor:Self *Var[9] 00000001 .False )
    Call  SetAnimation  ( .Actor:Self *Var[9] 004B0003 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Add   *Var[B]  00000032
    Sub   *Var[C]  0000001E
    Call  SetPartMoveSpeed      ( .Actor:Self *Var[9] *Fixed[6.0] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[1.0] )
    Call  FlyPartTo     ( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  GetPartOffset ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    Call  MakeLerp      ( 0000005A 000001C2 00000032 .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  $Function_802180CC    ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
    Call  SetPartPos    ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    If  *Var[3]  >  *Var[6]
        Call  SetPartYaw    ( .Actor:Self *Var[9] 000000B4 )
    Else
        Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    EndIf
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    If  *Var[9]  ==  00000002
        Call  UseCamPreset  ( 00000008 )
        Call  SetBattleCamZoom      ( 00000190 )
        Call  SetBattleCamOffsetZ   ( 0000001E )
        Call  BattleCamTargetActor  ( .Actor:Player )
        Call  MoveBattleCamOver     ( 0000003C )
    EndIf
    Call  SetAnimation  ( .Actor:Self *Var[9] 004B0003 )
    Call  GetActorPos   ( .Actor:Player *Var[A] *Var[B] *Var[C] )
    Add   *Var[B]  0000001E
    Add   *Var[C]  0000001E
    Call  SetPartMoveSpeed      ( .Actor:Self *Var[9] *Fixed[6.0] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[1.0] )
    Call  FlyPartTo     ( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
    Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
    Call  GetPartOffset ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    Call  MakeLerp      ( FFFFFFA6 FFFFFD30 00000064 .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  $Function_802180CC    ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
    Call  SetPartPos    ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    If  *Var[3]  >  *Var[6]
        Call  SetPartYaw    ( .Actor:Self *Var[9] 000000B4 )
    Else
        Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    EndIf
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_Swarm
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000002 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000005 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000006 .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020CC )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 004B0005 )
    Wait  40`
    Call  SetAnimation  ( .Actor:Self 00000001 004B0001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  PlaySound     ( 00000358 )
    Set   *Var[0]  00000002
    Exec  $Script_8021F88C *Var[A]
    Wait  11`
    Set   *Var[0]  00000003
    Exec  $Script_8021F88C
    Wait  11`
    Set   *Var[0]  00000004
    Exec  $Script_8021F88C
    Wait  11`
    Set   *Var[0]  00000005
    Exec  $Script_8021F88C
    Wait  11`
    Set   *Var[0]  00000006
    Exec  $Script_8021F88C
    Label  0
    DoesScriptExist  *Var[A] *Var[0]
    Wait  1`
    If  *Var[0]  ==  00000001
        Goto  0
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000002 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000003 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000003 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000003 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000004 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000004 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000004 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000005 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000005 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000005 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000006 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000006 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000006 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000006 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            EndThread
            Wait  11`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  UseCamPreset      ( 00000002 )
            Wait  30`
            Call  StopSound ( 00000358 )
            Call  YieldTurn ( )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000010 )
        Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000002 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
    EndThread
    Wait  11`
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
        Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000003 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    EndThread
    Wait  11`
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
        Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000004 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    EndThread
    Wait  11`
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
        Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000005 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
    EndThread
    Wait  11`
    Wait  1`
    Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
    Call  SetAnimation      ( .Actor:Self 00000006 004B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
    Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
            Call  SetPartYaw    ( .Actor:Self 00000006 000000B4 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000064
            Add   *Var[2]  00000064
            Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            Call  StopSound     ( 00000358 )
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022139C
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_Sting
        Return
    EndIf
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000001F4
        ExecWait  $Script_Sting
    Else
        ExecWait  $Script_Swarm
    EndIf
    Return
    End
}

PADDING: 80221434 to 80221440 (005BA8E4 to 005BA8F0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80221440
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_8022144C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      10`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      10`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   10`
    .Status:Shrink     10`
    .Status:Stop       10`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_802214F8
{
    00800000 01000000 FE1E00FF $IdleAnimations_80221544 $DefenseTable_80221440 00000000 00000000 00F80000 00000000
}

#new:Actor $AmazyDayzee
{
    % stats
    [Index]        33b
    [Level]       100`b
    [MaxHP]        20`b
    [Coins]         5`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022144C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802214F8
    [Script]      $Script_Init_80221590
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  70`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  34`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -14`b  17`b % dx dy
    [StatusIcon]    9`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80221544
{
    .Status:Normal    00480101
    .Status:Stone     00480100
    .Status:Sleep     0048010C
    .Status:Poison    00480101
    .Status:Stop      00480100
    .Status:Static    00480101
    .Status:Paralyze  00480100
    .Status:Dizzy     0048010B
    .Status:Fear      0048010B
    .Status:End
}

#new:Script $Script_Init_80221590
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222500 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802215DC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802216CC )
    Return
    End
}

#new:Script $Script_Idle_802215DC
{
    Label  0
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Sub   *Var[2]  00000002
    Call  PlayEffect    ( ~FX:Sparkles:TreeShake *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  15`
    Goto  0
    Return
    End
}

#new:Script $Script_80221690
{
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  00480103
    ExecWait  DoReturnHome
    Return
    End
}

#new:Script $Script_HandleEvent_802216CC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480109
            SetConst  *Var[2]  0048010A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480109
            SetConst  *Var[2]  0048010A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0048010A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoJumpBack
            ExecWait  $Script_80221690
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480104
            SetConst  *Var[2]  00480108
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480104
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00480108
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Amazy_Sing
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorPos   ( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
    Else
        Call  UseCamPreset      ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
        Call  MoveBattleCamOver ( 00000046 )
        Set   *Flag[00]  .False
        Label  0
        If  *Flag[00]  ==  .False
            Call  SetAnimation  ( .Actor:Self 00000001 0048010E )
            Set   *Flag[00]  .True
        Else
            Call  SetAnimation  ( .Actor:Self 00000001 0048010F )
            Set   *Flag[00]  .False
        EndIf
        Wait  1`
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  00000014
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        If  *Var[0]  >  00000000
            Goto  0
        EndIf
        If  *Flag[00]  ==  .False
            Call  SetAnimation  ( .Actor:Self 00000001 0048010E )
            Set   *Flag[00]  .True
        Else
            Call  SetAnimation  ( .Actor:Self 00000001 0048010F )
            Set   *Flag[00]  .False
        EndIf
        Wait  1`
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
        Call  SetGoalPos    ( .Actor:Self FFFFFFDD 00000000 0000000A )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00480101 )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00480106 )
        Wait  40`
        Call  SetAnimation  ( .Actor:Self 00000001 00480107 )
    EndThread
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:DayzeeSong )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000019
    Add   *Var[2]  00000002
    Loop  0000000D
        Call  RandInt       ( 0000001E *Var[3] )
        Sub   *Var[3]  0000000F
        Add   *Var[3]  *Var[0]
        Call  PlayEffect    ( ~FX:MusicNote:Left *Var[3] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
    EndLoop
    Call  SetAnimation      ( .Actor:Self 00000001 00480101 )
    Wait  10`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80221690
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 8000130F 00000014 00000020 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000A )
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_80221690
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Amazy_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseCamPreset  ( 00000013 )
    Call  SetBattleCamZoom  ( 0000012C )
    Call  SetBattleCamOffsetZ   ( 0000001E )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000014
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00480103 )
    Wait  10`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Sub   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  20`
    Call  UseCamPreset  ( 00000002 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetAnimation  ( .Actor:Self 00000001 00480104 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  SetBattleFlagBits ( 00040000 .True )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_TakeTurn_80222500
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_Amazy_Sing
        Return
    EndIf
    Call  RandInt   ( 000003E8 *Var[0] )
    Switch  *Var[0]
        Case  <  00000352
            ExecWait  $Script_Amazy_RunAway
        Default
            ExecWait  $Script_Amazy_Sing
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_802225A0
{
    .Status:Normal    007D0001
    .Status:Stone     007D0000
    .Status:Sleep     007D0009
    .Status:Poison    007D0001
    .Status:Stop      007D0000
    .Status:Static    007D0001
    .Status:Paralyze  007D0000
    .Status:Dizzy     007D000B
    .Status:End
}

#new:DefenseTable $DefenseTable_802225E4
{
    .Element:Normal 00000000
    .Element:Mystery0000000000000000
    .Element:End
}

#new:StatusTable $StatusTable_802225F8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     90`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     70`
    .Status:Paralyze   40`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_802226A4
{
    00800000 01000000 FE1A00FF $IdleAnimations_802225A0 $DefenseTable_802225E4 00000000 00000000 00F30000 00000000
}

#new:Actor $RuffPuff
{
    % stats
    [Index]        34b
    [Level]        19`b
    [MaxHP]        10`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_802225F8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802226A4
    [Script]      $Script_Init_802226F0
    % move effectiveness
    [Escape]       50`b
    [Item]         40`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802226F0
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222DE8 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022273C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222898 )
    Return
    End
}

#new:Script $Script_Idle_8022273C
{
    Set   *Var[F]  00000000
    Loop
        Call  $Function_802181F0    ( *Var[F] *Var[0] *Fixed[0.97] *Fixed[1.03] 0000000F 00000000 00000000 )
        Call  $Function_802181F0    ( *Var[F] *Var[1] *Fixed[1.03] *Fixed[0.97] 0000000F 00000000 00000000 )
        Add   *Var[F]  00000001
        Call  SetActorScale ( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
        If  *Var[F]  >=  0000001E
            Set   *Var[F]  00000000
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80222820
{
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 007D0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:SinOut )
    Return
    End
}

#new:Script $Script_HandleEvent_80222898
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0007
            SetConst  *Var[2]  007D0008
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0007
            SetConst  *Var[2]  007D0008
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoJumpBack
            ExecWait  $Script_80222820
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_80222820
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0004
            SetConst  *Var[2]  007D0006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007D0004
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222DE8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 007D0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 007D0001 )
    Wait  5`
    Call  SetAnimation  ( .Actor:Self 00000001 007D0005 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                SetF  *Var[0]  *Fixed[0.0]
                Loop  0000000F
                    AddF  *Var[0]  *Fixed[12.0]
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                SetF  *Var[0]  *Fixed[180.0]
                Loop  0000000A
                    AddF  *Var[0]  *Fixed[18.0]
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self FFFFFFE2 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  AddGoalPos    ( .Actor:Self FFFFFFEC 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80222820
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000D 00000000 )
        SetF  *Var[0]  *Fixed[0.0]
        Loop  00000008
            AddF  *Var[0]  *Fixed[22.5]
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                SetF  *Var[0]  *Fixed[180.0]
                Loop  0000000A
                    SubF  *Var[0]  *Fixed[22.5]
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self 0000001E 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[5.0] )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_80222820
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 802235C8 to 802235D0 (005BCA78 to 005BCA80)
00000000 00000000

#new:IdleAnimations $IdleAnimations_802235D0
{
    .Status:Normal    00400001
    .Status:Stone     00400000
    .Status:Sleep     00400004
    .Status:Poison    00400001
    .Status:Stop      00400000
    .Status:Static    00400001
    .Status:Paralyze  00400000
    .Status:Dizzy     0040000A
    .Status:Fear      0040000A
    .Status:End
}

#new:DefenseTable $DefenseTable_8022361C
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_80223630
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802236DC
{
    00800000 01000000 FE2600FF $IdleAnimations_802235D0 $DefenseTable_8022361C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $MediGuy
{
    % stats
    [Index]        22b
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80223630
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802236DC
    [Script]      $Script_Init_80223728
    % move effectiveness
    [Escape]       60`b
    [Item]         70`b
    [AirLift]      90`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   12`b  31`b % dx dy
}

#new:Script $Script_Init_80223728
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224B0C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802237CC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802239A0 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000005
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_802237CC
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_80218380    ( FFFFFFF6 00000014 0000000A 00000014 )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_80218380    ( FFFFFFF6 00000014 0000000C 0000001F )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_802238DC
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_802239A0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_802238DC
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_802238DC
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400003
            SetConst  *Var[2]  0040000B
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_FlyingAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Thread
        SetF  *Var[0]  *Fixed[0.0]
        Loop  0000000F
            AddF  *Var[0]  *Fixed[2.0]
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
            Thread
                Wait  5`
                Set   *Var[0]  00000000
                Loop  0000003C
                    Call  $Function_8021844C    ( *Var[0] *Var[1] 0000000F 0000003C *Fixed[30.0] )
                    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var[1] )
                    Add   *Var[0]  00000001
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Add   *Var[2]  00000001
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            ExecWait  $Script_802238DC
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000001
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset      ( 00000002 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[2.0] )
            Wait  20`
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_802238DC
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HealOneAlly
{
    Set   *Var[A]  *Var[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  GetOwnerID    ( *Var[0] )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Add   *Var[2]  00000032
    Call  PlayEffect    ( ~FX:Sparkles:Random *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Recover:LittleHeart *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Wait  10`
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( *Var[A] )
    Call  GetEnemyMaxHP ( *Var[A] *Var[4] )
    Mul   *Var[4]  0000003C
    Div   *Var[4]  00000064
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[A] 0000206D )
        Call  PlaySoundAtActor  ( *Var[A] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[A] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[A] *Var[4] .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80224A2C
{
    Call  EnemyCreateTargetList ( 00000002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorHP        ( *Var[0] *Var[2] )
    Call  GetEnemyMaxHP     ( *Var[0] *Var[3] )
    If  *Var[2]  !=  *Var[3]
        Call  GetOwnerTarget    ( *Var[0] *Var[1] )
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80224B0C
{
    ExecWait  $Script_80224A2C
    If  *Var[0]  ==  FFFFFFFF
        ExecWait  $Script_FlyingAttack
    Else
        Call  RandInt   ( 000003E8 *Var[A] )
        If  *Var[A]  <  00000258
            ExecWait  $Script_HealOneAlly
        Else
            ExecWait  $Script_FlyingAttack
        EndIf
    EndIf
    Return
    End
}

#new:DefenseTable $DefenseTable_80224BA0
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80224BAC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80224BB8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80224C64
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80224D10
{
    00800000 01000000 022300FF $IdleAnimations_80224DF0 $DefenseTable_80224BA0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_80224D34
{
    00020001 01000000 022300FF $IdleAnimations_80224DF0 $DefenseTable_80224BAC 00800000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_80224E3C $DefenseTable_80224BAC 00000000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80224E88 $DefenseTable_80224BAC 00000000 00000000 00000000 00000000
}

#new:Actor $RMagikoopa
{
    % stats
    [Index]        51b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80224BB8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80224D10
    [Script]      $Script_Init_80226FD8
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingRMagikoopa
{
    % stats
    [Index]        52b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80224C64
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80224D34
    [Script]      $Script_Init_8022707C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224DF0
{
    .Status:Normal    00560101
    .Status:Stone     00560100
    .Status:Sleep     00560108
    .Status:Poison    00560101
    .Status:Stop      00560100
    .Status:Static    00560101
    .Status:Paralyze  00560100
    .Status:Dizzy     00560107
    .Status:Fear      00560107
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224E3C
{
    .Status:Normal    00570101
    .Status:Stone     00570100
    .Status:Sleep     00570108
    .Status:Poison    00570101
    .Status:Stop      00570100
    .Status:Static    00570101
    .Status:Paralyze  00570100
    .Status:Dizzy     00570107
    .Status:Fear      00570107
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224E88
{
    .Status:Normal    0057010A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80224E94
{
    Return
    End
}

#new:Script $Script_HandleEvent_80224EA4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560105
            SetConst  *Var[2]  00560106
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560105
            SetConst  *Var[2]  00560106
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
            ExecWait  $Script_RMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560102
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_802253BC
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_802186B8    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_802254C8
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_802187B0    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560101 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224EA4 )
    Call  SetActorType      ( .Actor:Self 00000051 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80224BB8 )
    Call  $Function_802186E4    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80225AC4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_802253BC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_802253BC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
            ExecWait  $Script_802254C8
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_802253BC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570105
            SetConst  *Var[2]  00570106
            ExecWait  DoBurnHit
            ExecWait  $Script_802254C8
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570105
            SetConst  *Var[2]  00570106
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570104 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
            ExecWait  $Script_RMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570102
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570102 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218560    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218560    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560103 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_80226FD8
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80224E94 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227120 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224EA4 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_8022707C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80224E94 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227120 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225AC4 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80227120
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218808    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetActorAttackBoost   ( *Var[0] *Var[4] )
            If  *Var[4]  <  00000003
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_RMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_RMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DD )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  BoostAttack   ( *Var[8] 00000001 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80227860
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8022786C
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80227878
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_80227924
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:PartsTable $PartsTable_802279D0
{
    00800000 01000000 022300FF $IdleAnimations_80227AB0 $DefenseTable_80227860 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_802279F4
{
    00020001 01000000 022300FF $IdleAnimations_80227AB0 $DefenseTable_8022786C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_80227AFC $DefenseTable_8022786C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80227B48 $DefenseTable_8022786C 00000000 00000000 00000000 00000000
}

% Origin: HINT
#new:Actor $GRNMagikoopa
{
    % stats
    [Index]        53b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80227878
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802279D0
    [Script]      $Script_Init_80229C98
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingGRNMagikoopa
{
    % stats
    [Index]        54b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80227924
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_802279F4
    [Script]      $Script_Init_80229D3C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227AB0
{
    .Status:Normal    00560401
    .Status:Stone     00560400
    .Status:Sleep     00560408
    .Status:Poison    00560401
    .Status:Stop      00560400
    .Status:Static    00560401
    .Status:Paralyze  00560400
    .Status:Dizzy     00560407
    .Status:Fear      00560407
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80227AFC
{
    .Status:Normal    00570401
    .Status:Stone     00570400
    .Status:Sleep     00570408
    .Status:Poison    00570401
    .Status:Stop      00570400
    .Status:Static    00570401
    .Status:Paralyze  00570400
    .Status:Dizzy     00570407
    .Status:Fear      00570407
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80227B48
{
    .Status:Normal    0057040A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80227B54
{
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80227B64
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560405
            SetConst  *Var[2]  00560406
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560405
            SetConst  *Var[2]  00560406
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560406
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560401
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560401
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
            ExecWait  $Script_GRNMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560402
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022807C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218A28    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_80228188
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218B20    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560401 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227B64 )
    Call  SetActorType      ( .Actor:Self 00000053 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80227878 )
    Call  $Function_80218A54    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_80228784
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022807C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022807C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoNormalHit
            ExecWait  $Script_80228188
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022807C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570405
            SetConst  *Var[2]  00570406
            ExecWait  DoBurnHit
            ExecWait  $Script_80228188
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570405
            SetConst  *Var[2]  00570406
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570406
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570401
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570401
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570404 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
            ExecWait  $Script_GRNMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570402
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570402 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_802188D0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_802188D0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560403 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_80229C98
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80227B54 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229DE0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227B64 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_80229D3C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80227B54 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229DE0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228784 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80229DE0
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218B78    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetActorDefenseBoost  ( *Var[0] *Var[4] )
            If  *Var[4]  <  00000003
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_GRNMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_GRNMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_GRNMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DD )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  BoostDefense  ( *Var[8] 00000001 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8022A520
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8022A52C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022A538
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8022A5E4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022A690
{
    00800000 01000000 022300FF $IdleAnimations_8022A770 $DefenseTable_8022A520 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8022A6B4
{
    00020001 01000000 022300FF $IdleAnimations_8022A770 $DefenseTable_8022A52C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8022A7BC $DefenseTable_8022A52C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_8022A808 $DefenseTable_8022A52C 00000000 00000000 00000000 00000000
}

#new:Actor $WMagikoopa
{
    % stats
    [Index]        59b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022A538
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022A690
    [Script]      $Script_Init_8022C958
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingWMagikoopa
{
    % stats
    [Index]        5Ab
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8022A5E4
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8022A6B4
    [Script]      $Script_Init_8022C9BC
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A770
{
    .Status:Normal    00560301
    .Status:Stone     00560300
    .Status:Sleep     00560308
    .Status:Poison    00560301
    .Status:Stop      00560300
    .Status:Static    00560301
    .Status:Paralyze  00560300
    .Status:Dizzy     00560307
    .Status:Fear      00560307
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A7BC
{
    .Status:Normal    00570301
    .Status:Stone     00570300
    .Status:Sleep     00570308
    .Status:Poison    00570301
    .Status:Stop      00570300
    .Status:Static    00570301
    .Status:Paralyze  00570300
    .Status:Dizzy     00570307
    .Status:Fear      00570307
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A808
{
    .Status:Normal    0057030A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8022A814
{
    Return
    End
}

#new:Script $Script_HandleEvent_8022A824
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
            ExecWait  $Script_WMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_8022AD3C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218D98    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_8022AE48
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218E90    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560301 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022A824 )
    Call  SetActorType      ( .Actor:Self 00000059 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8022A538 )
    Call  $Function_80218DC4    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_8022B444
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022AD3C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022AD3C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            ExecWait  $Script_8022AE48
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022AD3C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            ExecWait  $Script_8022AE48
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
            ExecWait  $Script_WMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570302 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218C40    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218C40    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560303 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_8022C958
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022A814 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022DEE4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022A824 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_8022C9BC
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022A814 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022DEE4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B444 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HealOne
{
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_80218FAC    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_8021900C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[3]
    Call  $Function_80218EE8    ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000000
        Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
        Call  GetActorHP    ( *Var[0] *Var[B] )
        If  *Var[A]  !=  *Var[B]
            If  *Var[2]  <  *Var[9]
                Set   *Var[8]  *Var[0]
                Set   *Var[9]  *Var[2]
            Else
                If  *Var[2]  ==  *Var[9]
                    If  *Var[0]  <  *Var[8]
                        Set   *Var[8]  *Var[0]
                        Set   *Var[9]  *Var[2]
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_80218FAC    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_8021900C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[4]
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                If  *Var[2]  <  *Var[9]
                    Set   *Var[8]  *Var[0]
                    Set   *Var[9]  *Var[2]
                Else
                    If  *Var[2]  ==  *Var[9]
                        If  *Var[0]  <  *Var[8]
                            Set   *Var[8]  *Var[0]
                            Set   *Var[9]  *Var[2]
                        EndIf
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  1
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047 % 47
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001 % 1
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                Set   *Var[8]  *Var[0]
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Call  GetEnemyMaxHP ( .Actor:Self *Var[A] )
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    If  *Var[A]  !=  *Var[B]
        Set   *Var[8]  FFFFFF81
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  3
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  .Actor:Enemy0 % 200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  3
    EndIf
    ExecWait  $Script_WMagikoopa_RunAway
    Return
    Label  64
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[8] 0000206D )
        Call  PlaySoundAtActor  ( *Var[8] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[8] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[8] 00000005 .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HealAll
{
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Thread
            Wait  5`
            Call  PlaySoundAtActor  ( *Var[0] 0000206D )
            Call  PlaySoundAtActor  ( *Var[0] 00000214 )
            Wait  30`
            Call  PlaySoundAtActor  ( *Var[0] 0000025C )
        EndThread
        Thread
            Call  8026BF48  ( 00000001 )
            Call  HealActor ( *Var[0] 00000003 .True )
            Call  8026BF48  ( 00000000 )
        EndThread
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  WaitForBuffDone ( )
    Wait  1`
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_8022DEE4
{
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_WMagikoopa_RunAway
        Return
    EndIf
    Set   *Var[A]  00000000
    Set   *Var[B]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Call  GetActorHP    ( *Var[0] *Var[2] )
        Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
        If  *Var[2]  !=  *Var[3]
            Add   *Var[A]  00000001
        EndIf
        Add   *Var[B]  00000001
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Mul   *Var[A]  00000064
    Div   *Var[A]  *Var[B]
    Switch  *Var[A]
        Case  >=  0000003C
            ExecWait  $Script_HealAll
        Case  ==  00000000
            Call  GetActorFlags ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00000200
                ExecWait  $Script_WMagikoopa_ShapeSpell
            Else
                ExecWait  $Script_WMagikoopa_WandStrike
            EndIf
        Default
            ExecWait  $Script_HealOne
    EndSwitch
    Return
    End
}

PADDING: 8022E178 to 8022E180 (005C7628 to 005C7630)
00000000 00000000

#new:DefenseTable $DefenseTable_8022E180
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8022E18C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022E198
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_8022E244
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022E2F0
{
    00800000 01000000 022300FF $IdleAnimations_8022E3D0 $DefenseTable_8022E180 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_8022E314
{
    00020001 01000000 022300FF $IdleAnimations_8022E3D0 $DefenseTable_8022E18C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8022E41C $DefenseTable_8022E18C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_8022E468 $DefenseTable_8022E18C 00000000 00000000 00000000 00000000
}

#new:Actor $YMagikoopa
{
    % stats
    [Index]        55b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022E198
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022E2F0
    [Script]      $Script_Init_802305B8
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingYMagikoopa
{
    % stats
    [Index]        56b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8022E244
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8022E314
    [Script]      $Script_Init_8023065C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022E3D0
{
    .Status:Normal    00560201
    .Status:Stone     00560200
    .Status:Sleep     00560208
    .Status:Poison    00560201
    .Status:Stop      00560200
    .Status:Static    00560201
    .Status:Paralyze  00560200
    .Status:Dizzy     00560207
    .Status:Fear      00560207
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022E41C
{
    .Status:Normal    00570201
    .Status:Stone     00570200
    .Status:Sleep     00570208
    .Status:Poison    00570201
    .Status:Stop      00570200
    .Status:Static    00570201
    .Status:Paralyze  00570200
    .Status:Dizzy     00570207
    .Status:Fear      00570207
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022E468
{
    .Status:Normal    0057020A
    .Status:End
}

#new:Script $Script_Idle_8022E474
{
    Return
    End
}

#new:Script $Script_HandleEvent_8022E484
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560205
            SetConst  *Var[2]  00560206
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560205
            SetConst  *Var[2]  00560206
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
            ExecWait  $Script_YMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560202
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022E99C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80219208    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_8022EAA8
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80219300    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560201 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022E484 )
    Call  SetActorType      ( .Actor:Self 00000055 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8022E198 )
    Call  $Function_80219234    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_8022F0A4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022E99C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022E99C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoNormalHit
            ExecWait  $Script_8022EAA8
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022E99C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570205
            SetConst  *Var[2]  00570206
            ExecWait  DoBurnHit
            ExecWait  $Script_8022EAA8
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570205
            SetConst  *Var[2]  00570206
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570204 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
            ExecWait  $Script_YMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570202
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_YMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570202 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_802190B0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_802190B0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_YMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560203 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_YMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_802305B8
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022E474 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80230700 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022E484 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_8023065C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022E474 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80230700 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022F0A4 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_TakeTurn_80230700
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80219358    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetStatusFlags    ( *Var[0] *Var[4] )
            If  *Var[4]  !&  04002000
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_YMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_YMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_YMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Loop  00000004
            Call  PlaySoundAtActor  ( *Var[8] 000003D2 )
            Call  RandInt   ( 00000003 *Var[0] )
            Add   *Var[0]  00000003
            Wait  *Var[0]
        EndLoop
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  ElectrifyActor    ( *Var[8] 00000003 )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 80230E84 to 80230E90 (005CA334 to 005CA340)
00000000 00000000 00000000

#new:Script $Script_80230E90
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000028 *Var[2] )
    Sub   *Var[2]  00000064
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 00000014 *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80230FA8
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000032 *Var[2] )
    Add   *Var[2]  00000047
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802310C0
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000032
    Call  RandInt   ( 00000028 *Var[2] )
    Add   *Var[2]  FFFFFF84
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Unknown $???_802311D8
{
    $ASCII_80234920 $ASCII_80234918 $ASCII_80234910 $ASCII_80234908 $ASCII_80234900 $ASCII_802348F8 $ASCII_802348F0 $ASCII_802348E8
    $ASCII_802348E0 $ASCII_802348D8 $ASCII_802348D0
}

#new:Script $Script_80231204
{
    If  *StoryProgress  >=  00000035
        Call  $Function_80219420 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_80231238
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_03 00000001 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_04 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_05 00000000 )
    Exec  $Script_80230E90
    ExecWait  $Script_80231204
    Return
    End
}

#new:Script $Script_AfterBattle_802312C8
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802312D8
{
    FFFFFFFF
    ~Model:flo_bt01:o400
    ~Model:flo_bt01:o401
    ~Model:flo_bt01:o407
    ~Model:flo_bt01:o411
    ~Model:flo_bt01:o422
    ~Model:flo_bt01:o423
    ~Model:flo_bt01:o424
    00000000
}

#new:Stage $Stage_802312FC
{
    $ASCII_80234950  % flo_tex
    $ASCII_80234940  % flo_bt01_shape
    $ASCII_80234930  % flo_bt01_hit
    $Script_BeforeBattle_80231238
    $Script_AfterBattle_802312C8
    $ASCII_80234928  % fla_bg
    $ForegroundModelList_802312D8
    00000000
    00000000
    00000000
}

PADDING: 80231324 to 80231330 (005CA7D4 to 005CA7E0)
00000000 00000000 00000000

#new:Script $Script_80231330
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000028 *Var[2] )
    Sub   *Var[2]  00000064
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 00000014 *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80231448
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000032 *Var[2] )
    Add   *Var[2]  00000047
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80231560
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000032
    Call  RandInt   ( 00000028 *Var[2] )
    Add   *Var[2]  FFFFFF84
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Unknown $???_80231678
{
    $ASCII_802349A8 $ASCII_802349A0 $ASCII_80234998 $ASCII_80234990 $ASCII_80234988 $ASCII_80234980 $ASCII_80234978 $ASCII_80234970
    $ASCII_80234968 $ASCII_80234960 $ASCII_80234958
}

#new:Script $Script_802316A4
{
    If  *StoryProgress  >=  00000035
        Call  $Function_802194E0 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_802316D8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_03 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_04 00000001 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_05 00000000 )
    Exec  $Script_80231330
    ExecWait  $Script_802316A4
    Return
    End
}

#new:Script $Script_AfterBattle_80231768
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80231778
{
    FFFFFFFF
    ~Model:flo_bt01:kuki
    ~Model:flo_bt01:hana1
    ~Model:flo_bt01:mae1
    ~Model:flo_bt01:mae2
    ~Model:flo_bt01:mae3
    00000000
}

#new:Stage $Stage_80231794
{
    $ASCII_802349D8  % flo_tex
    $ASCII_802349C8  % flo_bt01_shape
    $ASCII_802349B8  % flo_bt01_hit
    $Script_BeforeBattle_802316D8
    $Script_AfterBattle_80231768
    $ASCII_802349B0  % fla_bg
    $ForegroundModelList_80231778
    00000000
    00000000
    00000000
}

PADDING: 802317BC to 802317C0 (005CAC6C to 005CAC70)
00000000

#new:Script $Script_802317C0
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000028 *Var[2] )
    Sub   *Var[2]  00000064
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 00000014 *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_802318D8
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000032 *Var[2] )
    Add   *Var[2]  00000047
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802319F0
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000032
    Call  RandInt   ( 00000028 *Var[2] )
    Add   *Var[2]  FFFFFF84
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Unknown $???_80231B08
{
    $ASCII_80234A30 $ASCII_80234A28 $ASCII_80234A20 $ASCII_80234A18 $ASCII_80234A10 $ASCII_80234A08 $ASCII_80234A00 $ASCII_802349F8
    $ASCII_802349F0 $ASCII_802349E8 $ASCII_802349E0
}

#new:Script $Script_80231B34
{
    If  *StoryProgress  >=  00000035
        Call  $Function_802195A0 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_80231B68
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_03 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_04 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_05 00000001 )
    Exec  $Script_802317C0
    Exec  $Script_802318D8
    ExecWait  $Script_80231B34
    Return
    End
}

#new:Script $Script_AfterBattle_80231C04
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80231C14
{
    FFFFFFFF
    ~Model:flo_bt01:o381
    ~Model:flo_bt01:o382
    ~Model:flo_bt01:o388
    ~Model:flo_bt01:o389
    ~Model:flo_bt01:o390
    ~Model:flo_bt01:o383
    00000000
}

#new:Stage $Stage_80231C34
{
    $ASCII_80234A60  % flo_tex
    $ASCII_80234A50  % flo_bt01_shape
    $ASCII_80234A40  % flo_bt01_hit
    $Script_BeforeBattle_80231B68
    $Script_AfterBattle_80231C04
    $ASCII_80234A38  % fla_bg
    $ForegroundModelList_80231C14
    00000000
    00000000
    00000000
}

PADDING: 80231C5C to 80231C60 (005CB10C to 005CB110)
00000000

% Origin: HEURISTIC
#new:Script $Script_80231C60
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000028 *Var[2] )
    Sub   *Var[2]  00000064
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 00000014 *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80231D78
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000032 *Var[2] )
    Add   *Var[2]  00000047
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80231E90
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000032
    Call  RandInt   ( 00000028 *Var[2] )
    Add   *Var[2]  FFFFFF84
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Unknown $???_80231FA8
{
    $ASCII_80234AB8 $ASCII_80234AB0 $ASCII_80234AA8 $ASCII_80234AA0 $ASCII_80234A98 $ASCII_80234A90 $ASCII_80234A88 $ASCII_80234A80
    $ASCII_80234A78 $ASCII_80234A70 $ASCII_80234A68
}

#new:Script $Script_80231FD4
{
    If  *StoryProgress  >=  00000035
        Call  $Function_80219660 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_80232008
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:dai_05 00000001 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:0809 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:16 00000000 )
    Exec  $Script_80231E90
    ExecWait  $Script_80231FD4
    Return
    End
}

#new:Script $Script_AfterBattle_80232098
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802320A8
{
    FFFFFFFF
    ~Model:flo_bt02:o403
    ~Model:flo_bt02:o404
    00000000
}

#new:Stage $Stage_802320B8
{
    $ASCII_80234AE8  % flo_tex
    $ASCII_80234AD8  % flo_bt02_shape
    $ASCII_80234AC8  % flo_bt02_hit
    $Script_BeforeBattle_80232008
    $Script_AfterBattle_80232098
    $ASCII_80234AC0  % fla_bg
    $ForegroundModelList_802320A8
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_802320E0
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000028 *Var[2] )
    Sub   *Var[2]  00000064
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 00000014 *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802321F8
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000032 *Var[2] )
    Add   *Var[2]  00000047
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80232310
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000032
    Call  RandInt   ( 00000028 *Var[2] )
    Add   *Var[2]  FFFFFF84
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Unknown $???_80232428
{
    $ASCII_80234B40 $ASCII_80234B38 $ASCII_80234B30 $ASCII_80234B28 $ASCII_80234B20 $ASCII_80234B18 $ASCII_80234B10 $ASCII_80234B08
    $ASCII_80234B00 $ASCII_80234AF8 $ASCII_80234AF0
}

#new:Script $Script_80232454
{
    If  *StoryProgress  >=  00000035
        Call  $Function_80219720 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_80232488
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:dai_05 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:0809 00000001 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:16 00000000 )
    Exec  $Script_80232310
    Call  ModifyColliderFlags   ( 00000003 ~Collider:flo_bt02:yuka 00000006 )
    ExecWait  $Script_80232454
    Return
    End
}

#new:Script $Script_AfterBattle_80232530
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80232540
{
    FFFFFFFF
    ~Model:flo_bt02:8hana4
    ~Model:flo_bt02:8hana5
    ~Model:flo_bt02:8hana6
    ~Model:flo_bt02:8hana1
    ~Model:flo_bt02:8hana1
    ~Model:flo_bt02:8hana3
    00000000
}

#new:Stage $Stage_80232560
{
    $ASCII_80234B70  % flo_tex
    $ASCII_80234B60  % flo_bt02_shape
    $ASCII_80234B50  % flo_bt02_hit
    $Script_BeforeBattle_80232488
    $Script_AfterBattle_80232530
    $ASCII_80234B48  % fla_bg
    $ForegroundModelList_80232540
    00000000
    00000000
    00000000
}

PADDING: 80232588 to 80232590 (005CBA38 to 005CBA40)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80232590
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000028 *Var[2] )
    Sub   *Var[2]  00000064
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 00000014 *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802326A8
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000000
    Call  RandInt   ( 00000032 *Var[2] )
    Add   *Var[2]  00000047
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_802327C0
{
    Label  0
    Call  RandInt   ( 000000FA *Var[0] )
    Sub   *Var[0]  0000007D
    Set   *Var[1]  00000032
    Call  RandInt   ( 00000028 *Var[2] )
    Add   *Var[2]  FFFFFF84
    Call  RandInt   ( 0000001E *Var[3] )
    Add   *Var[3]  0000005A
    Call  PlayEffect    ( ~FX:FloatingFlower *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  00000014
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Unknown $???_802328D8
{
    $ASCII_80234BC8 $ASCII_80234BC0 $ASCII_80234BB8 $ASCII_80234BB0 $ASCII_80234BA8 $ASCII_80234BA0 $ASCII_80234B98 $ASCII_80234B90
    $ASCII_80234B88 $ASCII_80234B80 $ASCII_80234B78
}

#new:Script $Script_80232904
{
    If  *StoryProgress  >=  00000035
        Call  $Function_802197E0 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_80232938
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:dai_05 00000001 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:0809 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:g90 00000000 )
    Call  SetGroupEnabled   ( ~Model:flo_bt02:16 00000001 )
    Exec  $Script_802327C0
    ExecWait  $Script_80232904
    Return
    End
}

#new:Script $Script_AfterBattle_802329DC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802329EC
{
    FFFFFFFF
    ~Model:flo_bt02:o403
    ~Model:flo_bt02:o404
    00000000
}

#new:Stage $Stage_802329FC
{
    $ASCII_80234BF8  % flo_tex
    $ASCII_80234BE8  % flo_bt02_shape
    $ASCII_80234BD8  % flo_bt02_hit
    $Script_BeforeBattle_80232938
    $Script_AfterBattle_802329DC
    $ASCII_80234BD0  % fla_bg
    $ForegroundModelList_802329EC
    00000000
    00000000
    00000000
}

PADDING: 80232A24 to 80232A30 (005CBED4 to 005CBEE0)
00000000 00000000 00000000

#new:Script $Script_80232A30
{
    Set   *Var[A]  *Var[0]
    UseIntBuffer  *Var[A]
    Loop
        Get1Int  *Var[0]
        If  *Var[0]  ==  00000000
            BreakLoop
        EndIf
        Call  SetTexPanner  ( *Var[0] 0000000E )
        Get1Int  *Var[0]
        If  *Var[0]  ==  00000000
            BreakLoop
        EndIf
        Call  SetTexPanner  ( *Var[0] 0000000F )
    EndLoop
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Label  0
    Label  0
    Add   *Var[0]  FFFFFF74
    If  *Var[0]  <  00000000
        Add   *Var[0]  00010000
    EndIf
    Call  SetTexPanOffset   ( 0000000E 00000000 *Var[0] 00000000 )
    Add   *Var[1]  FFFFFF38
    If  *Var[1]  <  00000000
        Add   *Var[1]  00010000
    EndIf
    Call  SetTexPanOffset   ( 0000000F 00000000 *Var[1] 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Unknown $???_80232BE8
{
    $ASCII_80234C50 $ASCII_80234C48 $ASCII_80234C40 $ASCII_80234C38 $ASCII_80234C30 $ASCII_80234C28 $ASCII_80234C20 $ASCII_80234C18
    $ASCII_80234C10 $ASCII_80234C08 $ASCII_80234C00
}

#new:Script $Script_80232C14
{
    If  *StoryProgress  >=  00000035
        Call  $Function_802198A0 ( )
    EndIf
    Return
    End
}

#new:Script $Script_80232C48
{
    Call  EnableModel   ( *Var[F] .True )
    Set   *Var[E]  0000009F
    Loop  *Var[E]
        AddF  *Var[3]  00000000
        AddF  *Var[4]  *Fixed[0.0]
        SetF  *Var[5]  *Fixed[0.01]
        AddF  *Var[0]  *Var[3]
        AddF  *Var[1]  *Var[4]
        AddF  *Var[2]  *Var[5]
        MulF  *Var[6]  *Fixed[1.01]
        AddF  *Var[7]  *Fixed[0.01]
        SetF  *Var[8]  *Var[6]
        Call  $Function_80219960    ( *Var[E] *Var[A] *Fixed[0.0] *Fixed[0.203125] 0000000F 00000000 00000000 )
        AddF  *Var[8]  *Var[A]
        SetF  *Var[9]  *Var[7]
        Call  $Function_80219960    ( *Var[E] *Var[A] *Fixed[0.0] *Fixed[0.203125] 00000014 00000000 0000005A )
        AddF  *Var[9]  *Var[A]
        SetF  *Var[A]  *Var[0]
        MulF  *Var[A]  *Fixed[10.0]
        Call  TranslateModel        ( *Var[F] *Var[0] *Var[1] *Var[2] )
        Call  ScaleModel    ( *Var[F] *Var[8] *Var[9] 00000001 )
        Call  RotateModel   ( *Var[F] *Var[A] 00000000 00000000 00000001 )
        Wait  1`
    EndLoop
    Call  EnableModel   ( *Var[F] .False )
    Return
    End
}

#new:Unknown $???_80232E38
{
    00000021 00000022 00000023 00000000
}

#new:Script $Script_BeforeBattle_80232E48
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  $???_80232E38
    Exec  $Script_80232A30
    Call  SetTexPanner  ( ~Model:flo_bt03:piko4 00000001 )
    Call  SetTexPanner  ( ~Model:flo_bt03:piko5 00000002 )
    Call  SetTexPanner  ( ~Model:flo_bt03:piko1 00000003 )
    Call  SetTexPanner  ( ~Model:flo_bt03:piko2 00000004 )
    Call  SetTexPanner  ( ~Model:flo_bt03:piko3 00000005 )
    Call  SetTexPanner  ( ~Model:flo_bt03:piko6 00000006 )
    Call  SetTexPanner  ( ~Model:flo_bt03:piko7 00000007 )
    Thread
        Set   *Var[E]  00000001
        Set   *Var[F]  00000000
        Loop
            AddF  *Var[F]  *Var[E]
            If  *Var[F]  >=  00000438
                Set   *Var[F]  00000000
            EndIf
            Set   *Var[0]  *Var[F]
            Div   *Var[0]  00000009
            Mod   *Var[0]  00000002
            Mul   *Var[0]  00004000
            Set   *Var[1]  *Var[F]
            Div   *Var[1]  00000004
            Mod   *Var[1]  00000002
            Mul   *Var[1]  00004000
            Set   *Var[2]  *Var[F]
            Div   *Var[2]  00000005
            Mod   *Var[2]  00000002
            Mul   *Var[2]  00004000
            Set   *Var[3]  *Var[F]
            Div   *Var[3]  00000006
            Mod   *Var[3]  00000002
            Mul   *Var[3]  00004000
            Set   *Var[4]  *Var[F]
            Div   *Var[4]  00000002
            Mod   *Var[4]  00000002
            Mul   *Var[4]  00004000
            Set   *Var[5]  *Var[F]
            Div   *Var[5]  00000008
            Mod   *Var[5]  00000002
            Mul   *Var[5]  00004000
            Set   *Var[6]  *Var[F]
            Div   *Var[6]  00000008
            Mod   *Var[6]  00000002
            Mul   *Var[6]  00008000
            Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] 00000000 )
            Call  SetTexPanOffset   ( 00000002 00000000 *Var[1] 00000000 )
            Call  SetTexPanOffset   ( 00000003 00000000 *Var[2] 00000000 )
            Call  SetTexPanOffset   ( 00000004 00000000 *Var[3] 00000000 )
            Call  SetTexPanOffset   ( 00000005 00000000 *Var[4] 00000000 )
            Call  SetTexPanOffset   ( 00000006 00000000 *Var[5] 00000000 )
            Call  SetTexPanOffset   ( 00000007 00000000 *Var[6] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Thread
        Set   *Var[0]  00000000
        Loop  00000010
            Set   *Var[1]  *Var[0]
            Add   *Var[1]  00002710
            Add   *Var[0]  00000001
            Call  CloneModel    ( ~Model:flo_bt03:o454 *Var[1] )
            Call  EnableModel   ( *Var[1] .False )
        EndLoop
        Call  EnableModel   ( ~Model:flo_bt03:o454 .False )
        Set   *Var[E]  00000000
        Loop
            SetF  *Var[0]  *Fixed[106.0]
            SetF  *Var[1]  *Fixed[94.0]
            SetF  *Var[2]  *Fixed[-91.0]
            Call  RandInt   ( 00000064 *Var[3] )
            AddF  *Var[3]  FFFFFFCE
            DivF  *Var[3]  *Fixed[200.0]
            SetF  *Var[4]  *Fixed[1.0]
            SetF  *Var[5]  00000000
            SetF  *Var[6]  *Fixed[0.296875]
            SetF  *Var[7]  *Fixed[0.296875]
            Set   *Var[F]  *Var[E]
            Add   *Var[F]  00002710
            Exec  $Script_80232C48
            Add   *Var[E]  00000001
            If  *Var[E]  >=  00000010
                Set   *Var[E]  00000000
            EndIf
            Wait  10`
        EndLoop
    EndThread
    ExecWait  $Script_80232C14
    Return
    End
}

#new:Script $Script_AfterBattle_8023341C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8023342C
{
    FFFFFFFF
    ~Model:flo_bt03:o411
    ~Model:flo_bt03:o415
    00000000
}

#new:Stage $Stage_8023343C
{
    $ASCII_80234C80  % flo_tex
    $ASCII_80234C70  % flo_bt03_shape
    $ASCII_80234C60  % flo_bt03_hit
    $Script_BeforeBattle_80232E48
    $Script_AfterBattle_8023341C
    $ASCII_80234C58  % fla_bg
    $ForegroundModelList_8023342C
    00000000
    00000000
    00000000
}

PADDING: 80233464 to 80233470 (005CC914 to 005CC920)
00000000 00000000 00000000

#new:Script $Script_80233470
{
    Set   *Var[A]  *Var[0]
    Set   *Var[F]  00000000
    Loop
        Call  $Function_80219AF0    ( *Var[F] *Var[0] *Fixed[0.96875] *Fixed[1.03125] 0000000F 00000000 00000000 )
        Call  $Function_80219AF0    ( *Var[F] *Var[1] *Fixed[1.03125] *Fixed[0.96875] 0000000F 00000000 00000000 )
        Call  ScaleModel    ( *Var[A] *Var[1] *Var[0] 00000001 )
        Add   *Var[F]  00000001
        If  *Var[F]  >=  0000001E
            Set   *Var[F]  00000000
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

#new:Unknown $???_80233564
{
    $ASCII_80234CD8 $ASCII_80234CD0 $ASCII_80234CC8 $ASCII_80234CC0 $ASCII_80234CB8 $ASCII_80234CB0 $ASCII_80234CA8 $ASCII_80234CA0
    $ASCII_80234C98 $ASCII_80234C90 $ASCII_80234C88
}

#new:Script $Script_80233590
{
    If  *StoryProgress  >=  00000035
        Call  $Function_80219C80 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_802335C4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  0000000E
    Exec  $Script_80233470
    Set   *Var[0]  00000010
    Exec  $Script_80233470
    Set   *Var[0]  00000012
    Exec  $Script_80233470
    Set   *Var[0]  00000014
    Exec  $Script_80233470
    Set   *Var[0]  00000019
    Exec  $Script_80233470
    Thread
        Set   *Var[0]  0000001F
        Exec  $Script_80233470
        Set   *Var[0]  00000020
        Exec  $Script_80233470
        Wait  5`
        Set   *Var[0]  00000000
        Exec  $Script_80233470
        Set   *Var[0]  00000001
        Exec  $Script_80233470
        Wait  5`
        Set   *Var[0]  00000005
        Exec  $Script_80233470
        Set   *Var[0]  00000004
        Exec  $Script_80233470
        Set   *Var[0]  00000006
        Exec  $Script_80233470
        Wait  5`
        Set   *Var[0]  00000021
        Exec  $Script_80233470
        Set   *Var[0]  00000022
        Exec  $Script_80233470
    EndThread
    Call  CloneModel        ( ~Model:flo_bt04:o427 00002710 )
    Call  EnableModel       ( 00002710 .False )
    Call  TranslateModel    ( 00002710 00000000 00000009 00000000 )
    Call  ParentColliderToModel ( ~Collider:flo_bt04:yuka 00002710 )
    ExecWait  $Script_80233590
    Return
    End
}

#new:Script $Script_AfterBattle_80233820
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80233830
{
    FFFFFFFF
    ~Model:flo_bt04:o431
    ~Model:flo_bt04:o419
    00000000
}

#new:Stage $Stage_80233840
{
    $ASCII_80234D08  % flo_tex
    $ASCII_80234CF8  % flo_bt04_shape
    $ASCII_80234CE8  % flo_bt04_hit
    $Script_BeforeBattle_802335C4
    $Script_AfterBattle_80233820
    $ASCII_80234CE0  % sra_bg
    $ForegroundModelList_80233830
    00000000
    00000000
    00000000
}

PADDING: 80233868 to 80233870 (005CCD18 to 005CCD20)
00000000 00000000

#new:Unknown $???_80233870
{
    $ASCII_80234D60 $ASCII_80234D58 $ASCII_80234D50 $ASCII_80234D48 $ASCII_80234D40 $ASCII_80234D38 $ASCII_80234D30 $ASCII_80234D28
    $ASCII_80234D20 $ASCII_80234D18 $ASCII_80234D10
}

#new:Script $Script_8023389C
{
    If  *StoryProgress  >=  00000035
        Call  $Function_80219D40 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_802338D0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    ExecWait  $Script_8023389C
    Return
    End
}

#new:Script $Script_AfterBattle_80233918
{
    Return
    End
}

#new:Stage $Stage_80233928
{
    $ASCII_80234D90  % flo_tex
    $ASCII_80234D80  % flo_bt05_shape
    $ASCII_80234D70  % flo_bt05_hit
    $Script_BeforeBattle_802338D0
    $Script_AfterBattle_80233918
    $ASCII_80234D68  % fla_bg
    00000000
    00000000
    00000000
    00000000
}

#new:Unknown $???_80233950
{
    $ASCII_80234DE8 $ASCII_80234DE0 $ASCII_80234DD8 $ASCII_80234DD0 $ASCII_80234DC8 $ASCII_80234DC0 $ASCII_80234DB8 $ASCII_80234DB0
    $ASCII_80234DA8 $ASCII_80234DA0 $ASCII_80234D98
}

#new:Script $Script_8023397C
{
    If  *StoryProgress  >=  00000035
        Call  $Function_80219E00 ( )
    EndIf
    Return
    End
}

#new:Script $Script_BeforeBattle_802339B0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    ExecWait  $Script_8023397C
    Return
    End
}

#new:Script $Script_AfterBattle_802339F8
{
    Return
    End
}

#new:Stage $Stage_80233A08
{
    $ASCII_80234E18  % flo_tex
    $ASCII_80234E08  % flo_bt06_shape
    $ASCII_80234DF8  % flo_bt06_hit
    $Script_BeforeBattle_802339B0
    $Script_AfterBattle_802339F8
    $ASCII_80234DF0  % fla_bg
    00000000
    00000000
    00000000
    00000000
}

#new:Formation $Formation_00
{
    $Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
    $Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
    $Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
    $Bzzap 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
    $Spiny 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
    $Spiny 00000002 00000008 00000000 00000000 00000000 00000000
    $Spiny 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
    $Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
    $Spiny 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
    $WMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
    $RMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
    $Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
    $YMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $Spiny 00000001 0000000A 00000000 00000000 00000000 00000000
    $Spiny 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $Spiny 00000000 0000000A 00000000 00000000 00000000 00000000
    $Spiny 00000001 00000009 00000000 00000000 00000000 00000000
    $Spiny 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $Spiny 00000000 0000000A 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
    $CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
    $CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
    $CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
    $CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
    $CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
    $CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
    $AmazyDayzee 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
    $Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
    $Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_19
{
    $Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
    $FlyingGRNMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1A
{
    $Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1B
{
    $Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1C
{
    $AmazyDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1D
{
    $AmazyDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1E
{
    $AmazyDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
    $AmazyDayzee 00000001 00000009 00000000 00000000 00000000 00000000
    $AmazyDayzee 00000002 00000008 00000000 00000000 00000000 00000000
    $AmazyDayzee 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1F
{
    $RuffPuff 00000005 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_20
{
    $RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
    $RuffPuff 00000006 00000008 00000000 00000000 00000000 00000000
    $RuffPuff 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_21
{
    $RuffPuff 00000005 0000000A 00000000 00000000 00000000 00000000
    $Lakitu 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_22
{
    $RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_23
{
    $RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
    $CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_24
{
    $RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
    $RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
    $FlyingYMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80235180 00000002 $Formation_00 $Stage_802312FC 00000000 % unused
    $SJIS_80235174 00000003 $Formation_01 $Stage_802312FC 00000000 % unused
    $SJIS_8023515C 00000002 $Formation_02 $Stage_802312FC 00000000 % unused
    $SJIS_80235144 00000003 $Formation_03 $Stage_802312FC 00000000 % unused
    $SJIS_80235120 00000004 $Formation_04 $Stage_802312FC 00000000
    $SJIS_8023510C 00000002 $Formation_05 $Stage_802312FC 00000000 % unused
    $SJIS_802350F8 00000002 $Formation_06 $Stage_802312FC 00000000
    $SJIS_802350E0 00000004 $Formation_07 $Stage_802312FC 00000000
    $SJIS_802350C8 00000004 $Formation_08 $Stage_802312FC 00000000 % unused
    $SJIS_802350A8 00000003 $Formation_09 $Stage_802312FC 00000000
    $SJIS_8023508C 00000003 $Formation_0A $Stage_802312FC 00000000
    $SJIS_8023506C 00000004 $Formation_0B $Stage_802312FC 00000000
    $SJIS_80235060 00000002 $Formation_0C $Stage_802312FC 00000000
    $SJIS_80235054 00000003 $Formation_0D $Stage_802312FC 00000000
    $SJIS_8023502C 00000003 $Formation_0E $Stage_802312FC 00000000 % unused
    $SJIS_8023501C 00000001 $Formation_0F $Stage_802312FC 00000000
    $SJIS_8023500C 00000002 $Formation_10 $Stage_802312FC 00000000
    $SJIS_80234FFC 00000003 $Formation_11 $Stage_802312FC 00000000 % unused
    $SJIS_80234FEC 00000004 $Formation_12 $Stage_802312FC 00000000
    $SJIS_80234FD4 00000002 $Formation_13 $Stage_802312FC 00000000 % unused
    $SJIS_80234FBC 00000003 $Formation_14 $Stage_802312FC 00000000
    $SJIS_80234FA4 00000003 $Formation_15 $Stage_802312FC 00000000
    $SJIS_80234F80 00000003 $Formation_16 $Stage_802312FC 00000000 % unused
    $SJIS_80234F74 00000002 $Formation_17 $Stage_802312FC 00000000
    $SJIS_80234F68 00000003 $Formation_18 $Stage_802312FC 00000000 % unused
    $SJIS_80234F44 00000003 $Formation_19 $Stage_802312FC 00000000
    $SJIS_80234F2C 00000002 $Formation_1A $Stage_802312FC 00000000
    $SJIS_80234F0C 00000003 $Formation_1B $Stage_802312FC 00000000 % unused
    $SJIS_80234EF4 00000001 $Formation_1C $Stage_802312FC 00000000
    $SJIS_80234ED4 00000003 $Formation_1D $Stage_802312FC 00000000 % unused
    $SJIS_80234EBC 00000004 $Formation_1E $Stage_802312FC 00000000 % unused
    $SJIS_80234EAC 00000002 $Formation_1F $Stage_802312FC 00000000
    $SJIS_80234E9C 00000004 $Formation_20 $Stage_802312FC 00000000
    $SJIS_80234E84 00000002 $Formation_21 $Stage_802312FC 00000000 % unused
    $SJIS_80234E68 00000003 $Formation_22 $Stage_802312FC 00000000
    $SJIS_80234E4C 00000003 $Formation_23 $Stage_802312FC 00000000 % unused
    $SJIS_80234E20 00000003 $Formation_24 $Stage_802312FC 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_802351D4 $Stage_802312FC
    $ASCII_802351CC $Stage_80231794
    $ASCII_802351C4 $Stage_80231C34
    $ASCII_802351BC $Stage_802320B8
    $ASCII_802351B4 $Stage_80232560
    $ASCII_802351AC $Stage_802329FC
    $ASCII_802351A4 $Stage_8023343C
    $ASCII_8023519C $Stage_80233840
    $ASCII_80235194 $Stage_80233928
    $ASCII_8023518C $Stage_80233A08
    00000000 00000000
}

PADDING: 802348C4 to 802348D0 (005CDD74 to 005CDD80)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:ASCII $ASCII_802348D0
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348D8
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348E0
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348E8
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348F0
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348F8
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234900
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234908
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234910
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234918
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234920
{
    "flo_03"
}

#new:ASCII $ASCII_80234928
{
    "fla_bg"
}

#new:ASCII $ASCII_80234930
{
    "flo_bt01_hit"
}

#new:ASCII $ASCII_80234940
{
    "flo_bt01_shape"
}

#new:ASCII $ASCII_80234950
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234958
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234960
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234968
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234970
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234978
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234980
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234988
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234990
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234998
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349A0
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349A8
{
    "flo_03"
}

#new:ASCII $ASCII_802349B0
{
    "fla_bg"
}

#new:ASCII $ASCII_802349B8
{
    "flo_bt01_hit"
}

#new:ASCII $ASCII_802349C8
{
    "flo_bt01_shape"
}

#new:ASCII $ASCII_802349D8
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349E0
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349E8
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349F0
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349F8
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A00
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A08
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A10
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A18
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A20
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A28
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A30
{
    "flo_03"
}

#new:ASCII $ASCII_80234A38
{
    "fla_bg"
}

#new:ASCII $ASCII_80234A40
{
    "flo_bt01_hit"
}

#new:ASCII $ASCII_80234A50
{
    "flo_bt01_shape"
}

#new:ASCII $ASCII_80234A60
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A68
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A70
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A78
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A80
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A88
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A90
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A98
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AA0
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AA8
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AB0
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AB8
{
    "flo_03"
}

#new:ASCII $ASCII_80234AC0
{
    "fla_bg"
}

#new:ASCII $ASCII_80234AC8
{
    "flo_bt02_hit"
}

#new:ASCII $ASCII_80234AD8
{
    "flo_bt02_shape"
}

#new:ASCII $ASCII_80234AE8
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AF0
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AF8
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B00
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B08
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B10
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B18
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B20
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B28
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B30
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B38
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B40
{
    "flo_03"
}

#new:ASCII $ASCII_80234B48
{
    "fla_bg"
}

#new:ASCII $ASCII_80234B50
{
    "flo_bt02_hit"
}

#new:ASCII $ASCII_80234B60
{
    "flo_bt02_shape"
}

#new:ASCII $ASCII_80234B70
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B78
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B80
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B88
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B90
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B98
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BA0
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BA8
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BB0
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BB8
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BC0
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BC8
{
    "flo_03"
}

#new:ASCII $ASCII_80234BD0
{
    "fla_bg"
}

#new:ASCII $ASCII_80234BD8
{
    "flo_bt02_hit"
}

#new:ASCII $ASCII_80234BE8
{
    "flo_bt02_shape"
}

#new:ASCII $ASCII_80234BF8
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C00
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C08
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C10
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C18
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C20
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C28
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C30
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C38
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C40
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C48
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C50
{
    "flo_03"
}

#new:ASCII $ASCII_80234C58
{
    "fla_bg"
}

#new:ASCII $ASCII_80234C60
{
    "flo_bt03_hit"
}

#new:ASCII $ASCII_80234C70
{
    "flo_bt03_shape"
}

#new:ASCII $ASCII_80234C80
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C88
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C90
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C98
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CA0
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CA8
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CB0
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CB8
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CC0
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CC8
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CD0
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CD8
{
    "flo_03"
}

#new:ASCII $ASCII_80234CE0
{
    "sra_bg"
}

#new:ASCII $ASCII_80234CE8
{
    "flo_bt04_hit"
}

#new:ASCII $ASCII_80234CF8
{
    "flo_bt04_shape"
}

#new:ASCII $ASCII_80234D08
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D10
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D18
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D20
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D28
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D30
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D38
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D40
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D48
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D50
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D58
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D60
{
    "flo_03"
}

#new:ASCII $ASCII_80234D68
{
    "fla_bg"
}

#new:ASCII $ASCII_80234D70
{
    "flo_bt05_hit"
}

#new:ASCII $ASCII_80234D80
{
    "flo_bt05_shape"
}

#new:ASCII $ASCII_80234D90
{
    "flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D98
{
    "flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DA0
{
    "flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DA8
{
    "flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DB0
{
    "flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DB8
{
    "flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DC0
{
    "flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DC8
{
    "flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DD0
{
    "flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DD8
{
    "flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DE0
{
    "flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DE8
{
    "flo_03"
}

#new:ASCII $ASCII_80234DF0
{
    "fla_bg"
}

#new:ASCII $ASCII_80234DF8
{
    "flo_bt06_hit"
}

#new:ASCII $ASCII_80234E08
{
    "flo_bt06_shape"
}

#new:ASCII $ASCII_80234E18
{
    "flo_tex"
}

#new:SJIS $SJIS_80234E20
{
    クモクモーンx２,イエローカメック（そら） % kumokumo-nx2,iero-kamekku（sora）
}

#new:SJIS $SJIS_80234E4C
{
    クモクモーンx２,パンジー % kumokumo-nx2,panji-
}

#new:SJIS $SJIS_80234E68
{
    クモクモーンx２,ハッチー % kumokumo-nx2,hacchi-
}

#new:SJIS $SJIS_80234E84
{
    クモクモーン,ジュゲム % kumokumo-n,jugemu
}

#new:SJIS $SJIS_80234E9C
{
    クモクモーンx4 % kumokumo-nx4
}

#new:SJIS $SJIS_80234EAC
{
    クモクモーンx2 % kumokumo-nx2
}

#new:SJIS $SJIS_80234EBC
{
    きらめくパンジーさんx４ % kiramekupanji-sanx4
}

#new:SJIS $SJIS_80234ED4
{
    きらめくパンジーさん,ハッチーx2 % kiramekupanji-san,hacchi-x2
}

#new:SJIS $SJIS_80234EF4
{
    きらめくパンジーさん % kiramekupanji-san
}

#new:SJIS $SJIS_80234F0C
{
    ハッチー,クモクモーン,ハッチー % hacchi-,kumokumo-n,hacchi-
}

#new:SJIS $SJIS_80234F2C
{
    ハッチー,クモクモーン % hacchi-,kumokumo-n
}

#new:SJIS $SJIS_80234F44
{
    ハッチーx2,グリーンカメック（そら） % hacchi-x2,guri-nkamekku（sora）
}

#new:SJIS $SJIS_80234F68
{
    ハッチーx3 % hacchi-x3
}

#new:SJIS $SJIS_80234F74
{
    ハッチーx2 % hacchi-x2
}

#new:SJIS $SJIS_80234F80
{
    パンジーさんx2,きらめくパンジーさん % panji-sanx2,kiramekupanji-san
}

#new:SJIS $SJIS_80234FA4
{
    パンジーさんx2,ハッチー % panji-sanx2,hacchi-
}

#new:SJIS $SJIS_80234FBC
{
    パンジーさん,ハッチーx2 % panji-san,hacchi-x2
}

#new:SJIS $SJIS_80234FD4
{
    パンジーさん,ハッチー % panji-san,hacchi-
}

#new:SJIS $SJIS_80234FEC
{
    パンジーさんx4 % panji-sanx4
}

#new:SJIS $SJIS_80234FFC
{
    パンジーさんx3 % panji-sanx3
}

#new:SJIS $SJIS_8023500C
{
    パンジーさんx2 % panji-sanx2
}

#new:SJIS $SJIS_8023501C
{
    パンジーさん % panji-san
}

#new:SJIS $SJIS_8023502C
{
    トゲゾー,パンジーさん,かいふくヘイホー % togezo-,panji-san,kaifukuheiho-
}

#new:SJIS $SJIS_80235054
{
    トゲゾーx3 % togezo-x3
}

#new:SJIS $SJIS_80235060
{
    トゲゾーx2 % togezo-x2
}

#new:SJIS $SJIS_8023506C
{
    ジュゲムx３,イエローカメック % jugemux3,iero-kamekku
}

#new:SJIS $SJIS_8023508C
{
    ジュゲムx２,レッドカメック % jugemux2,reddokamekku
}

#new:SJIS $SJIS_802350A8
{
    ジュゲムx２,ホワイトカメック % jugemux2,howaitokamekku
}

#new:SJIS $SJIS_802350C8
{
    ジュゲムx３,トゲゾー % jugemux3,togezo-
}

#new:SJIS $SJIS_802350E0
{
    ジュゲムx２,トゲゾーx２ % jugemux2,togezo-x2
}

#new:SJIS $SJIS_802350F8
{
    ジュゲム,トゲゾー % jugemu,togezo-
}

#new:SJIS $SJIS_8023510C
{
    ジュゲム,パンジー % jugemu,panji-
}

#new:SJIS $SJIS_80235120
{
    ジュゲム,ハッチー,ジュゲム,ハッチー % jugemu,hacchi-,jugemu,hacchi-
}

#new:SJIS $SJIS_80235144
{
    ジュゲム,ハッチーx２ % jugemu,hacchi-x2
}

#new:SJIS $SJIS_8023515C
{
    ジュゲム,クモクモーン % jugemu,kumokumo-n
}

#new:SJIS $SJIS_80235174
{
    ジュゲムx3 % jugemux3
}

#new:SJIS $SJIS_80235180
{
    ジュゲムx2 % jugemux2
}

#new:ASCII $ASCII_8023518C
{
    "flo_06"
}

#new:ASCII $ASCII_80235194
{
    "flo_05"
}

#new:ASCII $ASCII_8023519C
{
    "flo_04"
}

#new:ASCII $ASCII_802351A4
{
    "flo_03"
}

#new:ASCII $ASCII_802351AC
{
    "flo_02c"
}

#new:ASCII $ASCII_802351B4
{
    "flo_02b"
}

#new:ASCII $ASCII_802351BC
{
    "flo_02"
}

#new:ASCII $ASCII_802351C4
{
    "flo_01c"
}

#new:ASCII $ASCII_802351CC
{
    "flo_01b"
}

#new:ASCII $ASCII_802351D4
{
    "flo_01"
}

PADDING: 802351DC to 802351E0 (005CE68C to 005CE690)
00000000

