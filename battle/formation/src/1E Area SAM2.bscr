% Script File: 1E Area SAM2.bscr
% Decoded from: 63D1E0 to 648E10 (1E Area SAM2)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FF48
	SW        S2, 88 (SP)
	COPY      S2, A0
	SW        RA, 98 (SP)
	SW        S5, 94 (SP)
	SW        S4, 90 (SP)
	SW        S3, 8C (SP)
	SW        S1, 84 (SP)
	SW        S0, 80 (SP)
	SDC1      F24, B0 (SP)
	SDC1      F22, A8 (SP)
	SDC1      F20, A0 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      A0, V0
	JAL       ~Func:get_actor_part
	ADDIU     A1, R0, 1
	BEQ       S0, R0, .o84
	COPY      S4, V0
	CLEAR     A1
	ADDIU     A2, R0, 11
	ADDIU     V0, R0, FF
	SW        R0, 74 (S2)
	SW        R0, 78 (S2)
	SW        R0, 70 (S2)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        V0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S4)
	JAL       802DE780
	ADDIU     A3, R0, 14
	.o84
	ADDIU     A1, R0, 1
	ADDIU     V0, R0, FF
	SW        V0, 10 (SP)
	SW        R0, 14 (SP)
	SW        V0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S4)
	LIA       A3, $???_8021A2B8
	JAL       802DE780
	ADDIU     A2, R0, F
	LW        V0, 74 (S2)
	ADDIU     A0, V0, A
	SLTI      V0, A0, 168
	BNE       V0, R0, .o100
	SW        A0, 74 (S2)
	LIO       V0, B60B60B7
	MULT      A0, V0
	SRA       V1, A0, 1F
	MFHI      T0
	ADDU      V0, T0, A0
	SRA       V0, V0, 8
	SUBU      V0, V0, V1
	SLL       V1, V0, 1
	ADDU      V1, V1, V0
	SLL       V0, V1, 4
	SUBU      V0, V0, V1
	SLL       V0, V0, 3
	SUBU      V0, A0, V0
	SW        V0, 74 (S2)
	.o100
	CLEAR     S0
	LUI       S3, 8000
	COPY      S1, S0
	LIF       F25, 1.875
	MTC1      R0, F24
	LIF       F23, 3.1875
	MTC1      R0, F22
	LIF       F21, 28.0
	MTC1      R0, F20
	.o130
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 20
	C.LE.D    F20, F0
	NOP
	BC1T      .o178
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o190
	SB        V1, 0 (V0)
	.o178
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o190
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	ADDIU     A0, A0, 2D
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 38
	C.LE.D    F20, F0
	NOP
	BC1T      .o1DC
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o1F4
	SB        V1, 0 (V0)
	.o1DC
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o1F4
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	ADDIU     A0, A0, 5A
	SLL       A0, A0, 10
	JAL       ~Func:cosine
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 50
	C.LE.D    F20, F0
	NOP
	BC1T      .o240
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o258
	SB        V1, 0 (V0)
	.o240
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o258
	ADDIU     S0, S0, 1
	SLTI      V0, S0, 14
	BNE       V0, R0, .o130
	ADDIU     S1, S1, 19
	CLEAR     S0
	ADDIU     S3, SP, 20
	ADDIU     S2, SP, 38
	ADDIU     S1, SP, 50
	ADDIU     S5, R0, FF
	CLEAR     A1
	.o280
	ADDIU     A2, R0, C
	ADDU      V0, S3, S0
	ADDU      V1, S2, S0
	ADDU      A0, S1, S0
	LBU       V0, 0 (V0)
	LBU       V1, 0 (V1)
	LBU       A0, 0 (A0)
	COPY      A3, S0
	SW        R0, 14 (SP)
	SW        S5, 18 (SP)
	SW        R0, 1C (SP)
	SLL       V0, V0, 18
	SLL       V1, V1, 10
	OR        V0, V0, V1
	SLL       A0, A0, 8
	OR        V0, V0, A0
	ORI       V0, V0, FF
	SW        V0, 10 (SP)
	LW        A0, 84 (S4)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, 14
	BNE       V0, R0, .o280
	CLEAR     A1
	LW        RA, 98 (SP)
	LW        S5, 94 (SP)
	LW        S4, 90 (SP)
	LW        S3, 8C (SP)
	LW        S2, 88 (SP)
	LW        S1, 84 (SP)
	LW        S0, 80 (SP)
	LDC1      F24, B0 (SP)
	LDC1      F22, A8 (SP)
	LDC1      F20, A0 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, B8
}

% Origin: HEURISTIC
#new:Function $Function_80218314
{
	ADDIU     SP, SP, FFD0
	SW        S6, 28 (SP)
	COPY      S6, A0
	SW        RA, 2C (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S5, C (S6)
	LW        A1, 0 (S5)
	JAL       ~Func:get_variable
	ADDIU     S5, S5, 4
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S4, V0
	COPY      A0, S6
	LW        A1, 0 (S5)
	JAL       ~Func:get_variable
	COPY      S1, V0
	SUBU      S3, S3, S4
	MTC1      S3, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F4, F4, F4
	NOP
	SUBU      S2, S2, S1
	MTC1      S2, F2
	NOP
	CVT.S.W   F2, F2
	MUL.S     F2, F2, F2
	NOP
	SUBU      S0, S0, V0
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F4, F4, F2
	ADD.S     F12, F4, F0
	SQRT.S    F0, F12
	C.EQ.S    F0, F0
	NOP
	BC1T      .o104
	ADDIU     S5, S5, 4
	JAL       ~Func:sqrtf
	NOP
	.o104
	LW        A1, 0 (S5)
	TRUNC.W.S F6, F0
	MFC1      A2, F6
	JAL       ~Func:set_variable
	COPY      A0, S6
	LW        RA, 2C (SP)
	LW        S6, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80218458
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	ADDIU     V0, R0, 1
	COPY      A1, A0
	COPY      A2, A0
	LAW       V1, 801512F0
	COPY      A3, A0
	JAL       ~Func:set_background_color_blend
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_8021849C
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802184D4
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 8021852C to 80218530 (0063D70C to 0063D710)
00000000

#new:Function $Function_80218530
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218588
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021E2FC
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021E2FC)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021E2FC)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218714
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218588
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218808 to 80218810 (0063D9E8 to 0063D9F0)
00000000 00000000

% Origin: HINT
#new:Function $Function_80218810
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218968
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218994
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218A60
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218AB8
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80218B7C to 80218B80 (0063DD5C to 0063DD60)
00000000

% Origin: HEURISTIC
#new:Function $Function_80218B80
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_80221DF0
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80221DF0
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80218D78
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218D9C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80218EA0
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_80222200
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80222200
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80219098
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802190BC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_802191C0
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_80222640
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80222640
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_802193B8
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_802193DC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_802194E0
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_80222990
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80222990
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_802196D8
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_802196FC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219800
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_80222D00
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80222D00
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_802199F8
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_80219A1C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219B20
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_80223080
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80223080
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80219D18
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219D3C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219E40
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8014720C
	NOP
	LW        RA, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80219E5C to 80219E60 (0063F03C to 0063F040)
00000000

#new:DefenseTable $DefenseTable_80219E60
{
    .Element:Normal 00000000
    .Element:Cosmic 00000063
    .Element:End
}

#new:StatusTable $StatusTable_80219E74
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80219F20
{
    00020000 01000000 000000FF $IdleAnimations_80219F90 $DefenseTable_80219E60 00000100 00000000 01F10000 00000000
    80800001 02003200 FA1400FF $IdleAnimations_80219F90 $DefenseTable_80219E60 00000100 00000000 01F10000 00000000
}

#new:Actor $Monstar
{
    % stats
    [Index]        BCb
    [Level]        45`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80219E74
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80219F20
    [Script]      $Script_Init_80219FF0
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]        100`b  98`b % width height
    [HealthBar]     0`b  16`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219F90
{
    .Status:Normal    007E0001
    .Status:Stone     007E0000
    .Status:Sleep     007E0001
    .Status:Poison    007E0001
    .Status:Stop      007E0000
    .Status:Static    007E0001
    .Status:Paralyze  007E0000
    .Status:Paralyze  007E0000
    .Status:Dizzy     007E0001
    .Status:Dizzy     007E0001
    .Status:End
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_80219FE4
{
    .Status:Normal    007E0004
    .Status:End
}

#new:Script $Script_Init_80219FF0
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021B394 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A2D0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A4FC )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B384 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Return
    End
}

#new:Unknown $???_8021A098
{
    00000000 00000000 00000000 00000000 00000011 00000000 00000000 00000000
    00000133 10000000 00000000 00000000 00000133 10000000 00000000 14100000
    00000011 00000000 00000001 55510000 00000000 00000000 00000001 25210000
    00000000 00000000 00000001 42410000 00000000 0000000B EB000000 11100000
    00000000 000000BF FFB00000 00000000 00000000 000000BC FCB00000 00000000
    06A00000 000000BF CFB00000 00000000 6AAA6000 0000000B BB000000 00000000
    67A76000 00000000 00000000 00000000 6A7A6000 00000000 00000000 06660000
    06660000 00000000 00000000 66966000 00000000 00000000 00000006 67A76600
    00000000 00001100 00000007 AAAAA700 00000000 00015510 00000006 79A97600
    00000000 00015510 00000006 8A8A8600 00000000 00001100 00000006 98689600
    00000000 00000000 00000000 66666000 0000BEB0 00000000 00000000 00000000
    000BEFEB 00000000 00000000 00000000 000BCECB 00000000 00000000 00000000
    000BECEB 00000000 00000000 00000000 0000BBB0 00000000 00000000 00000066
    60000000 00000000 12100000 000006AA 60000000 00000001 15110000 000006AA
    00000000 00000002 55520000 00000066 00000000 00000001 25210000 00000000
    00000000 00000002 51520000 00000000 00000000 00000000 11100000 00000000
}

#new:Unknown $???_8021A298
{
    11142A55 43D75517 6E9987D9 4119715D 9963C9A7 F9AB1A1D 22E52BEF 34B73DBF
}

#new:Unknown $???_8021A2B8
{
    $???_8021A098 $???_8021A298 00200020 FFFFFFFC 00000000 $???_80223570
}

#new:Script $Script_Idle_8021A2D0
{
    ChildThread
        Call  $Function_80218000 ( )
    EndChildThread
    Label  0
    Call  GetActorPos   ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  MakeLerp      ( 00000000 0000000A 0000001E .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Add   *Var[0]  *Var[3]
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    Label  2
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[5] )
    Wait  1`
    If  *Var[5]  ==  00000001
        Goto  2
    EndIf
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  MakeLerp      ( 00000000 FFFFFFF6 0000001E .Easing:CosInOut )
    Label  3
    Call  UpdateLerp ( )
    Add   *Var[0]  *Var[3]
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    Label  4
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[5] )
    Wait  1`
    If  *Var[5]  ==  00000001
        Goto  4
    EndIf
    If  *Var[1]  ==  00000001
        Goto  3
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8021A4FC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007E0008
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001
            Set   *Var[1]  007E0008
            Set   *Var[2]  FFFFFFFF
            ExecWait  $Script_8021B898
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001
            Set   *Var[1]  007E0008
            Set   *Var[2]  FFFFFFFF
            ExecWait  $Script_8021B898
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007E0008
            ExecWait  $Script_8021B55C
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0001
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0004
            EndSwitch
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0001
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0004
            EndSwitch
            ExecWait  DoImmune
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007E0008
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007E0008
            ExecWait  $Script_8021B55C
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  007E0001
            ExecWait  DoRecover
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0001
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0004
            EndSwitch
            ExecWait  DoAirLift
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0001
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  007E0004
            EndSwitch
            ExecWait  DoImmune
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8021A9BC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000D )
    Call  SetBattleCamZoom  ( 0000000A )
    Call  SetBattleCamOffsetZ   ( 00000005 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 007E0004 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219FE4 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000028
    Sub   *Var[2]  00000005
    Call  PlayEffect        ( ~FX:RadialFlowIn:BlueSpikes *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000012C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  75`
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021AB64
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 000000FA )
    Call  SetBattleCamOffsetZ   ( 00000037 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Wait  30`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 007E0004 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 007E0005 )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 007E0006 )
    EndThread
    Thread
        Call  $Function_80218458 ( )
        Call  MakeLerp  ( 00000000 000000C8 0000003C .Easing:QuadraticIn )
        Label  0
        Call  UpdateLerp ( )
        Call  $Function_8021849C    ( *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000001
            Goto  0
        EndIf
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
    Call  $Function_802184D4    ( 00000050 00000078 )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000064 )
    Call  SetBattleCamOffsetZ   ( 0000003C )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000003C )
    Wait  60`
    Call  PlaySoundAtActor  ( .Actor:Self 000002EA )
    Call  PlaySoundAtActor  ( .Actor:Self 0000036E )
    Thread
        Wait  10`
        Loop  00000012
            Call  RandInt   ( 00000096 *Var[0] )
            Add   *Var[0]  00000064
            Call  $Function_802184D4    ( *Var[0] 00000014 )
            Wait  10`
        EndLoop
    EndThread
    Thread
        Loop  0000003C
            Call  RandInt   ( 00000001 *Var[0] )
            Add   *Var[0]  00000002
            Call  RandInt   ( 00000190 *Var[1] )
            Sub   *Var[1]  00000064
            Call  RandInt   ( 00000064 *Var[2] )
            Sub   *Var[2]  00000032
            Set   *Var[3]  *Var[1]
            Sub   *Var[3]  000000C8
            Set   *Var[4]  *Var[2]
            Call  RandInt   ( 0000000A *Var[5] )
            Add   *Var[5]  0000000A
            Call  PlayEffect    ( 0000000F *Var[0] *Var[1] 000000F0 *Var[2] *Var[3] 00000000 *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  8`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000032
    Add   *Var[2]  00000005
    Call  PlayEffect    ( ~FX:RadialFlowOut:BlueSpikes *Var[0] *Var[1] *Var[2] *Fixed[0.8] 000000A0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 007E0007 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  170`
            Call  SetAnimation      ( .Actor:Self 00000001 007E0001 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F90 )
            Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
            Label  1
            Call  UpdateLerp ( )
            Call  $Function_8021849C    ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  1
            EndIf
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  170`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000100 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation      ( .Actor:Self 00000001 007E0001 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F90 )
            Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
            Label  2
            Call  UpdateLerp ( )
            Call  $Function_8021849C    ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  2
            EndIf
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8021B384
{
    Return
    End
}

#new:Script $Script_TakeTurn_8021B394
{
    ExecWait  $Script_8021AB64
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000048
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 00000154 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetActorVar       ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  ActorSpeak    ( 001200E5 .Actor:Self 00000001 007E0009 007E0009 ) % Are you scaaaaared yet?
        Case  ==  00000001
            Call  ActorSpeak    ( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
        Case  ==  00000002
            Call  ActorSpeak    ( 001200E7 .Actor:Self 00000001 007E0009 007E0009 ) % Thiiiis is your only chance!
        Default
            Call  ActorSpeak    ( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
    EndSwitch
    Call  AddActorVar       ( .Actor:Self 00000003 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Return
    End
}

#new:Script $Script_8021B55C
{
    Call  8027D32C  ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    If  *Var[1]  !=  FFFFFFFF
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
        Wait  10`
    EndIf
    Call  80269E80  ( *Var[5] )
    Switch  *Var[5]
        CaseOR  ==  0000000A
        CaseOR  ==  0000000E
        CaseOR  ==  0000000C
        CaseOR  ==  00000010
        CaseOR  ==  0000000B
        CaseOR  ==  0000000F
        CaseOR  ==  0000000D
        CaseOR  ==  00000011
        CaseOR  ==  00000002
        EndCaseGroup
        Default
            Set   *Flag[00]  .False
            Call  GetOriginalActorType  ( .Actor:Self *Var[1] )
            Switch  *Var[1]
                CaseOR  ==  0000000D
                CaseOR  ==  0000000F
                CaseOR  ==  0000004A
                EndCaseGroup
                Default
            EndSwitch
            If  *Var[2]  !=  FFFFCFC7
                Set   *Var[2]  00000000
                Loop  00000018
                    Call  SetActorYaw   ( .Actor:Self *Var[2] )
                    Add   *Var[2]  0000001E
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndIf
    EndSwitch
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A
    Add   *Var[2]  0000000A
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Set   *Var[3]  00000000
    Loop  0000000C
        Call  SetActorRotation  ( .Actor:Self *Var[3] 00000000 00000000 )
        Add   *Var[3]  00000008
        Wait  1`
    EndLoop
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021B898
{
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Call  80269E80      ( *Var[3] )
    Switch  *Var[3]
        Case  ==  00000009
            Call  GetOriginalActorType  ( .Actor:Self *Var[7] )
            Switch  *Var[7]
                CaseOR  ==  00000012
                CaseOR  ==  00000030
                EndCaseGroup
                Default
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
                    Add   *Var[5]  00000037
                    Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  JumpToGoal    ( .Actor:Self 00000008 .False .False .False )
            EndSwitch
            Set   *Var[7]  00000000
            Loop  0000001E
                Add   *Var[7]  00000030
                Call  SetActorYaw   ( .Actor:Self *Var[7] )
                Wait  1`
            EndLoop
            Call  GetOriginalActorType  ( .Actor:Self *Var[7] )
            Switch  *Var[7]
                CaseOR  ==  00000012
                CaseOR  ==  00000030
                    Wait  30`
                EndCaseGroup
                Default
                    Sub   *Var[5]  00000037
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
                    If  *Var[5]  ==  00000000
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Else
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
                        Call  SetGoalPos    ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                        Call  JumpToGoal    ( .Actor:Self 00000005 .False .False .False )
                    EndIf
            EndSwitch
        Default
            Wait  20`
    EndSwitch
    If  *Var[2]  !=  FFFFFFFF
        Call  SetAnimation  ( .Actor:Self *Var[0] *Var[2] )
    EndIf
    Wait  10`
    Call  GetLastEvent  ( .Actor:Self *Var[1] )
    Switch  *Var[1]
        Case  ==  .Event:BurnHit % E
            Call  GetPartEventFlags ( .Actor:Self *Var[0] *Var[1] )
            If  *Var[1]  !&  00000202 % 202
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetActorSize      ( .Actor:Self *Var[3] *Var[4] )
                Call  GetStatusFlags    ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00080000
                    MulF  *Var[3]  *Fixed[0.4]
                    MulF  *Var[4]  *Fixed[0.4]
                EndIf
                DivF  *Var[3]  *Fixed[2.0]
                Call  GetActorFlags ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00000800
                    SubF  *Var[1]  *Var[3]
                Else
                    AddF  *Var[1]  *Var[3]
                EndIf
                AddF  *Var[2]  *Fixed[5.0]
                DivF  *Var[3]  *Fixed[10.0]
                Call  GetStatusFlags    ( .Actor:Self *Var[5] )
                If  *Var[5]  &  00080000
                    MulF  *Var[3]  *Fixed[0.4]
                    If  *Var[3]  <  00000001
                        SetF  *Var[3]  *Fixed[1.0]
                    EndIf
                EndIf
                Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndIf
        Case  ==  .Event:BurnDeath % 24
    EndSwitch
    Return
    End
}

PADDING: 8021BE84 to 8021BE90 (00641064 to 00641070)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021BE90
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8021BE9C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021BEA8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison    100`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021BF54
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021C000
{
    00020001 01000000 001400FF $IdleAnimations_8021D87C $DefenseTable_8021BE90 00000000 00000000 00F60000 00000000
    00800000 02000000 001800FF $IdleAnimations_8021C0B8 $DefenseTable_8021BE9C 00004000 00000000 00F60000 00000000
    00020001 03000000 F01800FF $IdleAnimations_8021C150 $DefenseTable_8021BE90 00000000 00000000 00F60000 00000000
    00020001 04000000 F01800FF $IdleAnimations_8021C15C $DefenseTable_8021BE90 00000000 00000000 00F60000 00000000
}

#new:Actor $Paragoomba
{
    % stats
    [Index]         8b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021BF54
    % ai
    [PartsCount]    4`s
    [PartsTable]  $PartsTable_8021C000
    [Script]      $Script_Init_8021C168
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]     100`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C0B8
{
    .Status:Normal    00280001
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280001
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C104
{
    .Status:Normal    00280004
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280004
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C150
{
    .Status:Normal    00280009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C15C
{
    .Status:Normal    0028000A
    .Status:End
}

#new:Script $Script_Init_8021C168
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021CADC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021C1B4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C4E8 )
    Return
    End
}

#new:Script $Script_Idle_8021C1B4
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C104 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C0B8 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8021C470
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021C4E8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_8021D2F4
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            ExecWait  $Script_8021D2F4
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            ExecWait  $Script_8021D2F4
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
            ExecWait  $Script_8021C470
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021C470
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            SetConst  *Var[2]  00280006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021CADC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Thread
                Loop  00000004
                    Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
                    Wait  4`
                EndLoop
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021C470
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021C470
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D2F4
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218530    ( 00000064 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
    EndThread
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Call  GetLastEvent      ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  0000000A
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021BEA8 )
    Call  SetActorType      ( .Actor:Self 00000007 )
    ExecWait  $Script_8021D914
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021D87C
{
    .Status:Normal    00260001
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260001
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021D8C8
{
    .Status:Normal    00260003
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260003
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:Script $Script_8021D914
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E468 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021D960 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DC3C )
    Return
    End
}

#new:Script $Script_Idle_8021D960
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D8C8 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D87C )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D8C8 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D87C )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021DC3C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            SetConst  *Var[2]  00260005
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021E2FC
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021E468
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218714    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218714    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021F130
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8021F13C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021F148
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8021F1F4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021F2A0
{
    00800000 01000000 022300FF $IdleAnimations_8021F380 $DefenseTable_8021F130 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8021F2C4
{
    00020001 01000000 022300FF $IdleAnimations_8021F380 $DefenseTable_8021F13C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8021F3CC $DefenseTable_8021F13C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_8021F418 $DefenseTable_8021F13C 00000000 00000000 00000000 00000000
}

#new:Actor $GRYMagikoopa
{
    % stats
    [Index]        57b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021F148
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021F2A0
    [Script]      $Script_Init_80221568
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRYMagikoopa
{
    % stats
    [Index]        58b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021F1F4
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8021F2C4
    [Script]      $Script_Init_8022160C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F380
{
    .Status:Normal    00560501
    .Status:Stone     00560500
    .Status:Sleep     00560508
    .Status:Poison    00560501
    .Status:Stop      00560500
    .Status:Static    00560501
    .Status:Paralyze  00560500
    .Status:Dizzy     00560507
    .Status:Fear      00560507
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F3CC
{
    .Status:Normal    00570501
    .Status:Stone     00570500
    .Status:Sleep     00570508
    .Status:Poison    00570501
    .Status:Stop      00570500
    .Status:Static    00570501
    .Status:Paralyze  00570500
    .Status:Dizzy     00570507
    .Status:Fear      00570507
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F418
{
    .Status:Normal    0057050A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8021F424
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021F434
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560505
            SetConst  *Var[2]  00560506
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560505
            SetConst  *Var[2]  00560506
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560506
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560501
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560501
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
            ExecWait  $Script_GRYMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560502
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_8021F94C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218968    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_8021FA58
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218A60    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560501 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F434 )
    Call  SetActorType      ( .Actor:Self 00000057 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F148 )
    Call  $Function_80218994    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80220054
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8021F94C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8021F94C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
            ExecWait  $Script_8021FA58
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8021F94C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570505
            SetConst  *Var[2]  00570506
            ExecWait  DoBurnHit
            ExecWait  $Script_8021FA58
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570505
            SetConst  *Var[2]  00570506
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570506
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570501
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570501
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570504 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
            ExecWait  $Script_GRYMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570502
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570502 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218810    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218810    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560503 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_80221568
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F424 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802216B0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F434 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_8022160C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F424 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802216B0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220054 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_802216B0
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218AB8    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetStatusFlags    ( *Var[0] *Var[4] )
            If  *Var[4]  !&  04002000
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_GRYMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_GRYMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_GRYMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DB )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  VanishActor   ( *Var[8] 00000002 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Unknown $???_80221DF0
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_80221E00
{
    Call  $Function_80218D78 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80221E3C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_80221F04
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_80221E3C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218D9C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80221FE4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218D9C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_802220A8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Exec  $Script_80221E00
    Thread
        Set   *Var[0]  00000016
        Set   *Var[1]  00000001
        Exec  $Script_80221F04
        Wait  5`
        Set   *Var[0]  00000014
        Set   *Var[1]  00000003
        Exec  $Script_80221F04
        Wait  5`
        Set   *Var[0]  00000012
        Set   *Var[1]  00000004
        Exec  $Script_80221F04
        Wait  5`
        Set   *Var[0]  00000010
        Set   *Var[1]  00000002
        Exec  $Script_80221F04
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_802221B8
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802221C8
{
    FFFFFFFF
    ~Model:sam_bt01:saku
    00000000
}

#new:Stage $Stage_802221D4
{
    $ASCII_80223AC8  % sam_tex
    $ASCII_80223AB8  % sam_bt01_shape
    $ASCII_80223AA8  % sam_bt01_hit
    $Script_BeforeBattle_802220A8
    $Script_AfterBattle_802221B8
    $ASCII_80223AA0  % yki_bg
    $ForegroundModelList_802221C8
    00000000
    00000000
    00000000
}

PADDING: 802221FC to 80222200 (006473DC to 006473E0)
00000000

% Origin: HEURISTIC
#new:Unknown $???_80222200
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_80222210
{
    Call  $Function_80219098 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8022224C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_80222314
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8022224C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802190BC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802223F4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802190BC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_802224B8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
    Thread
        Set   *Var[0]  00000012
        Set   *Var[1]  00000000
        Exec  $Script_80222314
        Wait  5`
        Set   *Var[0]  00000014
        Set   *Var[1]  00000000
        Exec  $Script_80222314
        Wait  5`
        Set   *Var[0]  00000016
        Set   *Var[1]  00000000
        Exec  $Script_80222314
        Wait  5`
        Set   *Var[0]  00000018
        Set   *Var[1]  00000000
        Exec  $Script_80222314
    EndThread
    Exec  $Script_80222210
    Return
    End
}

#new:Script $Script_AfterBattle_802225F0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80222600
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_8022260C
{
    $ASCII_80223AF8  % sam_tex
    $ASCII_80223AE8  % sam_bt02_shape
    $ASCII_80223AD8  % sam_bt02_hit
    $Script_BeforeBattle_802224B8
    $Script_AfterBattle_802225F0
    $ASCII_80223AD0  % yki_bg
    $ForegroundModelList_80222600
    00000000
    00000000
    00000000
}

PADDING: 80222634 to 80222640 (00647814 to 00647820)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80222640
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_80222650
{
    Call  $Function_802193B8 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022268C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222754
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8022268C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802193DC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222834
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802193DC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_802228F8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
    Exec  $Script_80222650
    Return
    End
}

#new:Script $Script_AfterBattle_8022294C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022295C
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_80222968
{
    $ASCII_80223B28  % sam_tex
    $ASCII_80223B18  % sam_bt02_shape
    $ASCII_80223B08  % sam_bt02_hit
    $Script_BeforeBattle_802228F8
    $Script_AfterBattle_8022294C
    $ASCII_80223B00  % yki_bg
    $ForegroundModelList_8022295C
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Unknown $???_80222990
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_802229A0
{
    Call  $Function_802196D8 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802229DC
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222AA4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_802229DC
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802196FC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222B84
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802196FC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80222C48
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
    Exec  $Script_802229A0
    Return
    End
}

#new:Script $Script_AfterBattle_80222CB0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80222CC0
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_80222CCC
{
    $ASCII_80223B58  % sam_tex
    $ASCII_80223B48  % sam_bt02_shape
    $ASCII_80223B38  % sam_bt02_hit
    $Script_BeforeBattle_80222C48
    $Script_AfterBattle_80222CB0
    $ASCII_80223B30  % yki_bg
    $ForegroundModelList_80222CC0
    00000000
    00000000
    00000000
}

PADDING: 80222CF4 to 80222D00 (00647ED4 to 00647EE0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80222D00
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_80222D10
{
    Call  $Function_802199F8 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222D4C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222E14
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_80222D4C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219A1C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222EF4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219A1C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80222FB8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
    Exec  $Script_80222D10
    Return
    End
}

#new:Script $Script_AfterBattle_80223034
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80223044
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_80223050
{
    $ASCII_80223B88  % sam_tex
    $ASCII_80223B78  % sam_bt02_shape
    $ASCII_80223B68  % sam_bt02_hit
    $Script_BeforeBattle_80222FB8
    $Script_AfterBattle_80223034
    $ASCII_80223B60  % yki_bg
    $ForegroundModelList_80223044
    00000000
    00000000
    00000000
}

PADDING: 80223078 to 80223080 (00648258 to 00648260)
00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80223080
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_80223090
{
    Call  $Function_80219D18 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_802230CC
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_80223194
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_802230CC
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219D3C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80223274
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219D3C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80223338
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Thread
        Set   *Var[0]  00000010
        Set   *Var[1]  00000000
        Exec  $Script_80223194
        Wait  5`
        Set   *Var[0]  00000019
        Set   *Var[1]  00000000
        Exec  $Script_80223274
        Wait  5`
        Set   *Var[0]  00000016
        Set   *Var[1]  00000000
        Exec  $Script_80223274
        Wait  5`
        Set   *Var[0]  00000013
        Set   *Var[1]  00000000
        Exec  $Script_80223274
    EndThread
    Exec  $Script_80223090
    Return
    End
}

#new:Script $Script_AfterBattle_80223448
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80223458
{
    FFFFFFFF
    ~Model:sam_bt03:o278
    00000000
}

#new:Stage $Stage_80223464
{
    $ASCII_80223BB8  % sam_tex
    $ASCII_80223BA8  % sam_bt03_shape
    $ASCII_80223B98  % sam_bt03_hit
    $Script_BeforeBattle_80223338
    $Script_AfterBattle_80223448
    $ASCII_80223B90  % sam_bg
    $ForegroundModelList_80223458
    00000000
    00000000
    00000000
}

PADDING: 8022348C to 80223490 (0064866C to 00648670)
00000000

#new:Vector3D $Vector3D_80223490
{
    75` 16` 5`
}

#new:Formation $Formation_00
{
    $Monstar $Vector3D_80223490 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000
    $GRYMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80223BE8 00000001 $Formation_00 $Stage_80223464 00000000
    $SJIS_80223BC0 00000002 $Formation_01 $Stage_802221D4 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80223C1C $Stage_802221D4
    $ASCII_80223C14 $Stage_8022260C
    $ASCII_80223C0C $Stage_80222968
    $ASCII_80223C04 $Stage_80222CCC
    $ASCII_80223BFC $Stage_80223050
    $ASCII_80223BF4 $Stage_80223464
    00000000 00000000
}

PADDING: 80223564 to 80223570 (00648744 to 00648750)
00000000 00000000 00000000

#new:Unknown $???_80223570
{
    01020040 $???_80223680 06000204 00000406 06080A0C 00080C0E 06101214 00101416
    06181A1C 00181C1E 06202224 00202426 06282A2C 00282C2E 06303234 00303436
    06383A3C 00383C3E 01020040 $???_80223880 06001012 00001214 06021618 0002181A
    06041C1E 00041E20 06062224 00062426 0608282A 00082A2C 060A2E30 000A3032
    060C3436 000C3638 060E3A3C 000E3C3E 01001002 $???_80223700 01002006 $???_80223730
    0100200A $???_80223770 0100100C $???_802237B0 01005016 $???_802238B0 01001018 $???_802239B0
    0100101A $???_802239E0 0100101C $???_80223A10 0100101E $???_80223A40 01003024 $???_80223A70
    06022000 00062004 060A2008 0016200C 0618220E 001A2010 061C2012 001E2014
    DF000000 00000000 00000000 00000000
}

#new:Unknown $???_80223680
{
    FFD30045 00000000 0E66FA09 FFFFFFFF FFCE0047 00000000 1000F95F FFFFFF00
    FFCE001D 00000000 100006A1 FFFFFF00 FFD3001F 00000000 0E6605F7 FFFFFFFF
    FFD3001F 00000000 0E66FA09 FFFFFFFF FFCE001D 00000000 1000F95F FFFFFF00
    FFEB0000 00000000 100006A1 FFFFFF00 FFED0005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223700
{
    FFFB0030 00000000 019AFF56 FFFFFF1E FFD3001F 00000000 0E66FA09 FFFFFFFF
    FFED0005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223730
{
    FFFE002D 00000000 019A00AA FFFFFF1E FFFB0034 00000000 019AFF56 FFFFFF1E
    FFD30045 00000000 0E66FA09 FFFFFFFF FFD3001F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223770
{
    FFFB0030 00000000 019A00AA FFFFFF1E FFFE0037 00000000 019AFF56 FFFFFF1E
    FFED005F 00000000 0E66FA09 FFFFFFFF FFD30045 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_802237B0
{
    FFFB0034 00000000 019A00AA FFFFFF1E FFED005F 00000000 0E66FA09 FFFFFFFF
    FFEB0064 00000000 1000F95F FFFFFF00 FFCE0047 00000000 100006A1 FFFFFF00
    FFD30045 00000000 0E6605F7 FFFFFFFF 00130005 00000000 0E66FA09 FFFFFFFF
    00150000 00000000 1000F95F FFFFFF00 0032001D 00000000 100006A1 FFFFFF00
    002D001F 00000000 0E6605F7 FFFFFFFF FFED0005 00000000 0E66FA09 FFFFFFFF
    FFEB0000 00000000 1000F95F FFFFFF00 00150000 00000000 100006A1 FFFFFF00
    00130005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223880
{
    0013005F 00000000 0E66FA09 FFFFFFFF 002D0045 00000000 0E66FA09 FFFFFFFF
    002D001F 00000000 0E66FA09 FFFFFFFF
}

#new:Unknown $???_802238B0
{
    00020037 00000000 019AFF56 FFFFFF1E 00050030 00000000 019AFF56 FFFFFF1E
    FFFE002D 00000000 019AFF56 FFFFFF1E 0002002D 00000000 019AFF56 FFFFFF1E
    00050034 00000000 019AFF56 FFFFFF1E 00150064 00000000 1000F95F FFFFFF00
    FFEB0064 00000000 100006A1 FFFFFF00 FFED005F 00000000 0E6605F7 FFFFFFFF
    00320047 00000000 1000F95F FFFFFF00 00150064 00000000 100006A1 FFFFFF00
    0013005F 00000000 0E6605F7 FFFFFFFF 0032001D 00000000 1000F95F FFFFFF00
    00320047 00000000 100006A1 FFFFFF00 002D0045 00000000 0E6605F7 FFFFFFFF
    0013005F 00000000 0E66FA09 FFFFFFFF FFED005F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_802239B0
{
    FFFE0037 00000000 019A00AA FFFFFF1E 002D001F 00000000 0E66FA09 FFFFFFFF
    002D0045 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_802239E0
{
    00050034 00000000 019A00AA FFFFFF1E FFED0005 00000000 0E66FA09 FFFFFFFF
    00130005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223A10
{
    0002002D 00000000 019A00AA FFFFFF1E 00130005 00000000 0E66FA09 FFFFFFFF
    002D001F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223A40
{
    00050030 00000000 019A00AA FFFFFF1E 002D0045 00000000 0E66FA09 FFFFFFFF
    0013005F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223A70
{
    00020037 00000000 019A00AA FFFFFF1E 00000032 00000000 00000000 FFFFFF00
    00000032 00000000 00000000 FFFFFF00
}

#new:ASCII $ASCII_80223AA0
{
    "yki_bg"
}

#new:ASCII $ASCII_80223AA8
{
    "sam_bt01_hit"
}

#new:ASCII $ASCII_80223AB8
{
    "sam_bt01_shape"
}

#new:ASCII $ASCII_80223AC8
{
    "sam_tex"
}

#new:ASCII $ASCII_80223AD0
{
    "yki_bg"
}

#new:ASCII $ASCII_80223AD8
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_80223AE8
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_80223AF8
{
    "sam_tex"
}

#new:ASCII $ASCII_80223B00
{
    "yki_bg"
}

#new:ASCII $ASCII_80223B08
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_80223B18
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_80223B28
{
    "sam_tex"
}

#new:ASCII $ASCII_80223B30
{
    "yki_bg"
}

#new:ASCII $ASCII_80223B38
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_80223B48
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_80223B58
{
    "sam_tex"
}

#new:ASCII $ASCII_80223B60
{
    "yki_bg"
}

#new:ASCII $ASCII_80223B68
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_80223B78
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_80223B88
{
    "sam_tex"
}

#new:ASCII $ASCII_80223B90
{
    "sam_bg"
}

#new:ASCII $ASCII_80223B98
{
    "sam_bt03_hit"
}

#new:ASCII $ASCII_80223BA8
{
    "sam_bt03_shape"
}

#new:ASCII $ASCII_80223BB8
{
    "sam_tex"
}

#new:SJIS $SJIS_80223BC0
{
    パタクリ,グレイカメック（チェックよう） % patakuri,gureikamekku（chekkuyou）
}

#new:SJIS $SJIS_80223BE8
{
    かいぶつ % kaibutsu
}

#new:ASCII $ASCII_80223BF4
{
    "sam_03"
}

#new:ASCII $ASCII_80223BFC
{
    "sam_02d"
}

#new:ASCII $ASCII_80223C04
{
    "sam_02c"
}

#new:ASCII $ASCII_80223C0C
{
    "sam_02b"
}

#new:ASCII $ASCII_80223C14
{
    "sam_02"
}

#new:ASCII $ASCII_80223C1C
{
    "sam_01"
}

PADDING: 80223C24 to 80223C30 (00648E04 to 00648E10)
00000000 00000000 00000000

