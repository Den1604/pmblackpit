% Script File: 00 Area KMR Part 1.bscr
% Decoded from: 4309A0 to 439A90 (00 Area KMR Part 1)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021A194
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021A194)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021A194)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218000
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021BC70
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021BC70)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021BC70)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021840C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218280
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218500
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218558
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021EF6C
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021EF6C)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021EF6C)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802186E4
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218558
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802187D8 to 802187E0 (00431178 to 00431180)
00000000 00000000

#new:Function $Function_802187E0
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80218A48 to 80218A50 (004313E8 to 004313F0)
00000000 00000000

#new:Function $Function_80218A50
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80218CB8 to 80218CC0 (00431658 to 00431660)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80218CC0
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80218F28 to 80218F30 (004318C8 to 004318D0)
00000000 00000000

#new:Function $Function_80218F30
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_80219198
{
	ADDIU     SP, SP, FFE8
	ADDIU     A0, R0, 3D4
	SW        RA, 10 (SP)
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	ADDIU     A0, R0, F
	ADDIU     A1, R0, 5
	ADDIU     A2, R0, 37
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	JAL       ~Func:enable_world_fog
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802191D8 to 802191E0 (00431B78 to 00431B80)
00000000 00000000

#new:Formation $Formation_00
{
    $Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $Goomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $Goomba 00000001 00000009 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $Goomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $Goomba 00000001 00000009 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000008 00000000 00000000 00000000 00000000
    $Goomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $Goomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $Paragoomba 00000005 00000009 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000008 00000000 00000000 00000000 00000000
    $Paragoomba 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000
    $Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $Paragoomba 00000004 0000000A 00000000 00000000 00000000 00000000
    $Paragoomba 00000005 00000009 00000000 00000000 00000000 00000000
    $Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80220FD8 00000001 $Formation_00 $Stage_8022066C 00000000
    $SJIS_80220FCC 00000002 $Formation_01 $Stage_8022066C 00000000
    $SJIS_80220FC0 00000003 $Formation_02 $Stage_8022066C 00000000
    $SJIS_80220FA8 00000002 $Formation_03 $Stage_8022066C 00000000 % unused
    $SJIS_80220F9C 00000004 $Formation_04 $Stage_8022066C 00000000 % unused
    $SJIS_80220F84 00000002 $Formation_05 $Stage_8022066C 00000000 % unused
    $SJIS_80220F58 00000004 $Formation_06 $Stage_8022066C 00000000
    $SJIS_80220F48 00000001 $Formation_07 $Stage_8022066C 00000000 % unused
    $SJIS_80220F38 00000002 $Formation_08 $Stage_8022066C 00000000
    $SJIS_80220F28 00000003 $Formation_09 $Stage_8022066C 00000000
    $SJIS_80220F18 00000001 $Formation_0A $Stage_8022066C 00000000
    $SJIS_80220F00 00000002 $Formation_0B $Stage_8022066C 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80221004 $Stage_8021FDD0
    $ASCII_80220FFC $Stage_8022021C
    $ASCII_80220FF4 $Stage_8022066C
    $ASCII_80220FEC $Stage_80220A78
    $ASCII_80220FE4 $Stage_80220ECC
    00000000 00000000
}

PADDING: 80219608 to 80219610 (00431FA8 to 00431FB0)
00000000 00000000

#new:DefenseTable $DefenseTable_80219610
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021961C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison    100`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802196C8
{
    00800000 01000000 001400FF $IdleAnimations_80219714 $DefenseTable_80219610 00000000 00000000 00F60000 00000000
}

#new:Actor $Goomba
{
    % stats
    [Index]         7b
    [Level]         5`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021961C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802196C8
    [Script]      $Script_Init_802197AC
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]     100`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219714
{
    .Status:Normal    00260001
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260001
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219760
{
    .Status:Normal    00260003
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260003
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:Script $Script_Init_802197AC
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021A300 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802197F8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219AD4 )
    Return
    End
}

#new:Script $Script_Idle_802197F8
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219760 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219714 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219760 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219714 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_80219AD4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            SetConst  *Var[2]  00260005
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021A194
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021A300
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021AFC8 to 8021AFD0 (00433968 to 00433970)
00000000 00000000

#new:DefenseTable $DefenseTable_8021AFD0
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021AFDC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021B088
{
    00800000 01000000 001800FF $IdleAnimations_8021B0D4 $DefenseTable_8021AFD0 00000010 00000000 00F40000 00000000
}

#new:Actor $SpikedGoomba
{
    % stats
    [Index]         9b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021AFDC
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021B088
    [Script]      $Script_Init_8021B16C
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]      95`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021B0D4
{
    .Status:Normal    00270001
    .Status:Stone     00270000
    .Status:Sleep     0027000A
    .Status:Poison    00270001
    .Status:Stop      00270000
    .Status:Static    00270001
    .Status:Paralyze  00270000
    .Status:Dizzy     00270009
    .Status:Fear      00270009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021B120
{
    .Status:Normal    00270003
    .Status:Stone     00270000
    .Status:Sleep     0027000A
    .Status:Poison    00270001
    .Status:Stop      00270000
    .Status:Static    00270003
    .Status:Paralyze  00270000
    .Status:Dizzy     00270009
    .Status:Fear      00270009
    .Status:End
}

#new:Script $Script_Init_8021B16C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021BDDC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021B1B8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B494 )
    Return
    End
}

#new:Script $Script_Idle_8021B1B8
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B120 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B0D4 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B120 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B0D4 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021B494
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270007
            SetConst  *Var[2]  00270008
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270007
            SetConst  *Var[2]  00270008
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0027000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0027000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270003
            SetConst  *Var[2]  00270006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:SpikeTaunt % 1B
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
            EndIf
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[1]  0000000A
            Else
                Add   *Var[1]  0000001A
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021BC70
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021BDDC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00270003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021840C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0027000A )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00270006 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021840C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  >  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
                Wait  15`
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
                Wait  3`
            EndIf
            Call  YieldTurn ( )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021CAFC to 8021CB00 (0043549C to 004354A0)
00000000

#new:DefenseTable $DefenseTable_8021CB00
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8021CB0C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021CB18
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison    100`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021CBC4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021CC70
{
    00020001 01000000 001400FF $IdleAnimations_8021E4EC $DefenseTable_8021CB00 00000000 00000000 00F60000 00000000
    00800000 02000000 001800FF $IdleAnimations_8021CD28 $DefenseTable_8021CB0C 00004000 00000000 00F60000 00000000
    00020001 03000000 F01800FF $IdleAnimations_8021CDC0 $DefenseTable_8021CB00 00000000 00000000 00F60000 00000000
    00020001 04000000 F01800FF $IdleAnimations_8021CDCC $DefenseTable_8021CB00 00000000 00000000 00F60000 00000000
}

#new:Actor $Paragoomba
{
    % stats
    [Index]         8b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021CBC4
    % ai
    [PartsCount]    4`s
    [PartsTable]  $PartsTable_8021CC70
    [Script]      $Script_Init_8021CDD8
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]     100`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021CD28
{
    .Status:Normal    00280001
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280001
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CD74
{
    .Status:Normal    00280004
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280004
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CDC0
{
    .Status:Normal    00280009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CDCC
{
    .Status:Normal    0028000A
    .Status:End
}

#new:Script $Script_Init_8021CDD8
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D74C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021CE24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D158 )
    Return
    End
}

#new:Script $Script_Idle_8021CE24
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021CD74 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021CD28 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8021D0E0
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021D158
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_8021DF64
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            ExecWait  $Script_8021DF64
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            ExecWait  $Script_8021DF64
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
            ExecWait  $Script_8021D0E0
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021D0E0
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            SetConst  *Var[2]  00280006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021D74C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Thread
                Loop  00000004
                    Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
                    Wait  4`
                EndLoop
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021D0E0
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021D0E0
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021DF64
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218500    ( 00000064 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
    EndThread
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Call  GetLastEvent      ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  0000000A
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021CB18 )
    Call  SetActorType      ( .Actor:Self 00000007 )
    ExecWait  $Script_8021E584
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021E4EC
{
    .Status:Normal    00260001
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260001
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021E538
{
    .Status:Normal    00260003
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260003
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:Script $Script_8021E584
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021F0D8 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021E5D0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E8AC )
    Return
    End
}

#new:Script $Script_Idle_8021E5D0
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E538 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E4EC )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E538 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E4EC )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021E8AC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            SetConst  *Var[2]  00260005
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021EF6C
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021F0D8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802186E4    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802186E4    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_BeforeBattle_8021FDA0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8021FDC0
{
    Return
    End
}

#new:Stage $Stage_8021FDD0
{
    $ASCII_80221024  % kmr_tex
    $ASCII_80221014  % kmr_bt02_shape
    00000000
    $Script_BeforeBattle_8021FDA0
    $Script_AfterBattle_8021FDC0
    $ASCII_8022100C  % kmr_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021FDF8 to 8021FE00 (00438798 to 004387A0)
00000000 00000000

#new:Script $Script_8021FE00
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802187E0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8021FEF8
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802187E0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80220030
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802187E0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80220188
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_8021FE00
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_8021FE00
    Return
    End
}

#new:Script $Script_AfterBattle_80220200
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80220210
{
    ~Model:kmr_bt03:n2
    ~Model:kmr_bt03:m4
    00000000
}

#new:Stage $Stage_8022021C
{
    $ASCII_80221054  % kmr_tex
    $ASCII_80221044  % kmr_bt03_shape
    $ASCII_80221034  % kmr_bt03_hit
    $Script_BeforeBattle_80220188
    $Script_AfterBattle_80220200
    $ASCII_8022102C  % kmr_bg
    $ForegroundModelList_80220210
    00000000
    00000000
    00000000
}

PADDING: 80220244 to 80220250 (00438BE4 to 00438BF0)
00000000 00000000 00000000

#new:Script $Script_80220250
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218A50    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80220348
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218A50    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80220480
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218A50    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_802205D8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80220250
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80220250
    Return
    End
}

#new:Script $Script_AfterBattle_80220650
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80220660
{
    ~Model:kmr_bt04:m4
    ~Model:kmr_bt04:n2
    00000000
}

#new:Stage $Stage_8022066C
{
    $ASCII_80221084  % kmr_tex
    $ASCII_80221074  % kmr_bt04_shape
    $ASCII_80221064  % kmr_bt04_hit
    $Script_BeforeBattle_802205D8
    $Script_AfterBattle_80220650
    $ASCII_8022105C  % kmr_bg
    $ForegroundModelList_80220660
    00000000
    00000000
    00000000
}

PADDING: 80220694 to 802206A0 (00439034 to 00439040)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802206A0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218CC0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80220798
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218CC0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802208D0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218CC0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80220A28
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  EnableModel       ( ~Model:kmr_bt05:o302 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80220A5C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80220A6C
{
    ~Model:kmr_bt05:n2
    ~Model:kmr_bt05:m4
    00000000
}

#new:Stage $Stage_80220A78
{
    $ASCII_802210B4  % kmr_tex
    $ASCII_802210A4  % kmr_bt05_shape
    $ASCII_80221094  % kmr_bt05_hit
    $Script_BeforeBattle_80220A28
    $Script_AfterBattle_80220A5C
    $ASCII_8022108C  % kmr_bg
    $ForegroundModelList_80220A6C
    00000000
    00000000
    00000000
}

#new:Script $Script_80220AA0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218F30    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80220B98
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218F30    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80220CD0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218F30    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80220E28
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  $Function_80219198 ( )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80220AA0
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80220AA0
    Return
    End
}

#new:Script $Script_AfterBattle_80220EAC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80220EBC
{
    ~Model:kmr_bt06:n2
    ~Model:kmr_bt06:o303
    ~Model:kmr_bt06:ha3
    00000000
}

#new:Stage $Stage_80220ECC
{
    $ASCII_802210E4  % kmr_tex
    $ASCII_802210D4  % kmr_bt06_shape
    $ASCII_802210C4  % kmr_bt06_hit
    $Script_BeforeBattle_80220E28
    $Script_AfterBattle_80220EAC
    $ASCII_802210BC  % kmr_bg
    $ForegroundModelList_80220EBC
    00000000
    00000000
    00000000
}

PADDING: 80220EF4 to 80220F00 (00439894 to 004398A0)
00000000 00000000 00000000

#new:SJIS $SJIS_80220F00
{
    トゲクリボー、クリボー % togekuribo-,kuribo-
}

#new:SJIS $SJIS_80220F18
{
    トゲクリボー % togekuribo-
}

#new:SJIS $SJIS_80220F28
{
    パタクリボーx３ % patakuribo-x3
}

#new:SJIS $SJIS_80220F38
{
    パタクリボーx２ % patakuribo-x2
}

#new:SJIS $SJIS_80220F48
{
    パタクリボー % patakuribo-
}

#new:SJIS $SJIS_80220F58
{
    クリボー,パタクリボー,クリボー,パタクリボー % kuribo-,patakuribo-,kuribo-,patakuribo-
}

#new:SJIS $SJIS_80220F84
{
    クリボー,トゲクリボー % kuribo-,togekuribo-
}

#new:SJIS $SJIS_80220F9C
{
    クリボーx４ % kuribo-x4
}

#new:SJIS $SJIS_80220FA8
{
    クリボー、パタクリボー % kuribo-,patakuribo-
}

#new:SJIS $SJIS_80220FC0
{
    クリボーx３ % kuribo-x3
}

#new:SJIS $SJIS_80220FCC
{
    クリボーx２ % kuribo-x2
}

#new:SJIS $SJIS_80220FD8
{
    クリボー % kuribo-
}

#new:ASCII $ASCII_80220FE4
{
    "kmr_06"
}

#new:ASCII $ASCII_80220FEC
{
    "kmr_05"
}

#new:ASCII $ASCII_80220FF4
{
    "kmr_04"
}

#new:ASCII $ASCII_80220FFC
{
    "kmr_03"
}

#new:ASCII $ASCII_80221004
{
    "kmr_02"
}

#new:ASCII $ASCII_8022100C
{
    "kmr_bg"
}

#new:ASCII $ASCII_80221014
{
    "kmr_bt02_shape"
}

#new:ASCII $ASCII_80221024
{
    "kmr_tex"
}

#new:ASCII $ASCII_8022102C
{
    "kmr_bg"
}

#new:ASCII $ASCII_80221034
{
    "kmr_bt03_hit"
}

#new:ASCII $ASCII_80221044
{
    "kmr_bt03_shape"
}

#new:ASCII $ASCII_80221054
{
    "kmr_tex"
}

#new:ASCII $ASCII_8022105C
{
    "kmr_bg"
}

#new:ASCII $ASCII_80221064
{
    "kmr_bt04_hit"
}

#new:ASCII $ASCII_80221074
{
    "kmr_bt04_shape"
}

#new:ASCII $ASCII_80221084
{
    "kmr_tex"
}

#new:ASCII $ASCII_8022108C
{
    "kmr_bg"
}

#new:ASCII $ASCII_80221094
{
    "kmr_bt05_hit"
}

#new:ASCII $ASCII_802210A4
{
    "kmr_bt05_shape"
}

#new:ASCII $ASCII_802210B4
{
    "kmr_tex"
}

#new:ASCII $ASCII_802210BC
{
    "kmr_bg"
}

#new:ASCII $ASCII_802210C4
{
    "kmr_bt06_hit"
}

#new:ASCII $ASCII_802210D4
{
    "kmr_bt06_shape"
}

#new:ASCII $ASCII_802210E4
{
    "kmr_tex"
}

PADDING: 802210EC to 802210F0 (00439A8C to 00439A90)
00000000

