% Script File: 0A Area SBK.bscr
% Decoded from: 4DA5E0 to 4E2740 (0A Area SBK)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (004DA6AC to 004DA6B0)
00000000

#new:Function $Function_802180D0
{
	ADDIU     SP, SP, FF78
	SW        S1, 54 (SP)
	COPY      S1, A0
	SW        RA, 60 (SP)
	SW        S3, 5C (SP)
	SW        S2, 58 (SP)
	SW        S0, 50 (SP)
	SDC1      F26, 80 (SP)
	SDC1      F24, 78 (SP)
	SDC1      F22, 70 (SP)
	SDC1      F20, 68 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F20
	NOP
	CVT.D.W   F20, F20
	LIF       F1, 2.5625
	MTC1      R0, F0
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	DIV.D     F20, F20, F0
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	CVT.S.D   F20, F20
	MUL.S     F20, F20, F0
	NOP
	LW        S3, 0 (S0)
	LW        S0, 4 (S0)
	LIF       F0, 360.0
	LIF       F24, 150.0
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	MUL.S     F22, F0, F24
	NOP
	MTC1      R0, F26
	NOP
	ADD.S     F22, F22, F26
	JAL       ~Func:cos_rad
	MOV.S     F12, F20
	MUL.S     F20, F0, F24
	NOP
	LIF       F24, -252.0
	LWC1      F0, B8 (S1)
	CVT.S.W   F0, F0
	SUB.S     F24, F24, F0
	LWC1      F0, B0 (S1)
	CVT.S.W   F0, F0
	SUB.S     F22, F22, F0
	COPY      A0, S1
	COPY      A1, S2
	ADD.S     F20, F20, F26
	LWC1      F0, B4 (S1)
	CVT.S.W   F0, F0
	MFC1      A2, F22
	JAL       ~Func:set_float_variable
	SUB.S     F20, F20, F0
	COPY      A0, S1
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S1
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S0
	LW        RA, 60 (SP)
	LW        S3, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	LDC1      F26, 80 (SP)
	LDC1      F24, 78 (SP)
	LDC1      F22, 70 (SP)
	LDC1      F20, 68 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 88
}

#new:Function $Function_80218220
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_model_list_index_from_tree_index
	LW        A0, AC (S0)
	JAL       ~Func:get_model_from_list_index
	COPY      A0, V0
	LWC1      F0, 98 (V0)
	TRUNC.W.S F2, F0
	SWC1      F2, B0 (S0)
	LWC1      F0, 9C (V0)
	TRUNC.W.S F2, F0
	SWC1      F2, B4 (S0)
	LWC1      F0, A0 (V0)
	TRUNC.W.S F2, F0
	SWC1      F2, B8 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80218278 to 80218280 (004DA858 to 004DA860)
00000000 00000000

#new:DefenseTable $DefenseTable_80218280
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021828C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80218338
{
    00020000 01000000 001400FF $IdleAnimations_80218438 $DefenseTable_80218280 00200010 00000000 00000000 00000000
    00800001 02000000 004800FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
    00020001 03000000 003600FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
    00020001 04000000 002400FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
    00020001 05000000 001000FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
    00120001 06000000 000000FF $IdleAnimations_80218528 $DefenseTable_80218280 00200010 00000000 00000000 00000000
}

#new:Actor $Pokey
{
    % stats
    [Index]        14b
    [Level]         9`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021828C
    % ai
    [PartsCount]    6`s
    [PartsTable]  $PartsTable_80218338
    [Script]      $Script_Init_80218534
    % move effectiveness
    [Escape]       70`b
    [Item]         70`b
    [AirLift]      90`b
    [Hurricane]    85`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  80`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  75`b % dx dy
    [StatusIcon]   10`b  65`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218438
{
    .Status:Normal    00310004
    .Status:Stone     00310000
    .Status:Sleep     00310025
    .Status:Stop      00310000
    .Status:Paralyze  00310000
    .Status:Dizzy     00310021
    .Status:Fear      00310021
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218474
{
    .Status:Normal    00310005
    .Status:Stone     00310001
    .Status:Sleep     00310026
    .Status:Stop      00310001
    .Status:Paralyze  00310001
    .Status:Dizzy     00310022
    .Status:Fear      00310022
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802184B0
{
    .Status:Normal    00310006
    .Status:Stone     00310002
    .Status:Sleep     00310027
    .Status:Stop      00310002
    .Status:Paralyze  00310002
    .Status:Dizzy     00310023
    .Status:Fear      00310023
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802184EC
{
    .Status:Normal    00310007
    .Status:Stone     00310003
    .Status:Sleep     00310028
    .Status:Stop      00310003
    .Status:Paralyze  00310003
    .Status:Dizzy     00310024
    .Status:Fear      00310024
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218528
{
    .Status:Normal    00310016
    .Status:End
}

#new:Script $Script_Init_80218534
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A018 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802186B0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802186C0 )
    Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00310004 )
    Call  SetActorVar   ( .Actor:Self 00000002 00310008 )
    Call  SetActorVar   ( .Actor:Self 00000003 0031000C )
    Call  SetActorVar   ( .Actor:Self 00000004 00310010 )
    Call  SetActorVar   ( .Actor:Self 00000005 00310011 )
    Call  SetActorVar   ( .Actor:Self 00000006 00310018 )
    Call  SetActorVar   ( .Actor:Self 00000007 00310019 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_802186B0
{
    Return
    End
}

#new:Script $Script_HandleEvent_802186C0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    SetConst  *Var[0]  00000001
                    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                    ExecWait  DoNormalHit
                Else
                    Call  80269E80  ( *Var[0] )
                    Switch  *Var[0]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_8021CCAC
                        EndCaseGroup
                        Default
                            SetConst  *Var[0]  00000001
                            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                            ExecWait  DoNormalHit
                    EndSwitch
                EndIf
            EndIf
        Case  ==  .Event:Death % 20
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
                Wait  10`
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    SetConst  *Var[0]  00000001
                    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                    ExecWait  DoNormalHit
                    Wait  10`
                Else
                    Call  80269E80  ( *Var[0] )
                    Switch  *Var[0]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_8021CCAC
                        EndCaseGroup
                        Default
                            SetConst  *Var[0]  00000001
                            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                            ExecWait  DoNormalHit
                            Wait  10`
                    EndSwitch
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar       ( .Actor:Self 00000006 *Var[1] )
            Call  GetActorVar       ( .Actor:Self 00000007 *Var[2] )
            SetConst  *Var[0]  00000001
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                ExecWait  DoBurnHit
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    ExecWait  DoBurnHit
                Else
                    Call  80269E80  ( *Var[A] )
                    Switch  *Var[A]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_8021CCAC
                        EndCaseGroup
                        Default
                            ExecWait  DoBurnHit
                    EndSwitch
                EndIf
            EndIf
        CaseOR  ==  .Event:BurnDeath % 24
            Call  GetActorVar       ( .Actor:Self 00000006 *Var[1] )
            Call  GetActorVar       ( .Actor:Self 00000007 *Var[2] )
            SetConst  *Var[0]  00000001
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                ExecWait  DoBurnHit
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    ExecWait  DoBurnHit
                Else
                    Call  80269E80  ( *Var[A] )
                    Switch  *Var[A]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_8021CCAC
                        EndCaseGroup
                        Default
                            ExecWait  DoBurnHit
                    EndSwitch
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000007 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_8021BF50
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BF50
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashLaunchHit % 11
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
            Else
                ExecWait  $Script_8021CCAC
            EndIf
        Case  ==  00000025 % 25
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
            Else
                ExecWait  $Script_8021CCAC
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  FFFFFFFF
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoShockHit
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            ExecWait  8029C12C
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            Call  GetActorVar       ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            Call  GetActorVar       ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Set   *Var[0]  00000000
                    Set   *Var[1]  0000004D
                    SetConst  *Var[2]  00310021
                Case  ==  00000001
                    Set   *Var[0]  00000000
                    Set   *Var[1]  0000003B
                    SetConst  *Var[2]  00310022
                Case  ==  00000002
                    Set   *Var[0]  00000000
                    Set   *Var[1]  00000029
                    SetConst  *Var[2]  00310023
                Case  ==  00000003
                    Set   *Var[0]  00000000
                    Set   *Var[1]  00000017
                    SetConst  *Var[2]  00310024
            EndSwitch
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  !&  00001000
                Call  SetAnimation  ( .Actor:Self 00000001 *Var[2] )
            EndIf
            Call  GetActorPos       ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Call  GetStatusFlags    ( .Actor:Self *Var[6] )
            If  *Var[6]  &  00080000
                MulF  *Var[0]  *Fixed[0.4]
                MulF  *Var[1]  *Fixed[0.4]
            EndIf
            AddF  *Var[3]  *Var[0]
            AddF  *Var[4]  *Var[1]
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[3] *Var[4] *Var[5] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  30`
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            ExecWait  $Script_8021D184
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802193B8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  AddGoalPos    ( .Actor:Self 0000003C 00000000 00000000 )
            Else
                Call  AddGoalPos    ( .Actor:Self 00000018 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
        Case  ==  00000001
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  AddGoalPos    ( .Actor:Self 00000028 00000000 00000000 )
            Else
                Call  AddGoalPos    ( .Actor:Self 00000010 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
        Case  ==  00000002
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
            Else
                Call  AddGoalPos    ( .Actor:Self 00000008 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
    Call  MakeLerp  ( 00000000 FFFFFFD8 00000014 .Easing:CosInOut )
    Label  0
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    ChildThread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002ED )
    EndChildThread
    Call  MakeLerp  ( FFFFFFD8 0000005A 00000005 .Easing:QuadraticIn )
    Label  3
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  3
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  MakeLerp  ( 0000005A 00000000 00000005 .Easing:Linear )
            Label  4
            Call  UpdateLerp ( )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  4
            EndIf
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  YieldTurn ( )
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  .HitResult:Hit % 0
                    Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
                Case  ==  00000001 % 1
                    Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
                Case  ==  00000002 % 2
                    Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
            EndSwitch
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  .HitResult:Hit % 0
            Set   *Var[1]  00000002
        Case  ==  00000001 % 1
            Set   *Var[1]  00000002
        Default
            Set   *Var[1]  00000002
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020300 *Var[1] 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:Linear )
            Label  5
            Call  UpdateLerp ( )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  5
            EndIf
            Call  YieldTurn ( )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  .HitResult:Hit % 0
                    Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
                Case  ==  00000001 % 1
                    Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
                Case  ==  00000002 % 2
                    Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
            EndSwitch
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80219EB4
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        Case  ==  00000014
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  003DD000
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[3] )
                If  *Var[3]  ==  00000000
                    Call  GetActorVar   ( *Var[0] 0000000A *Var[3] )
                    If  *Var[3]  !=  00000002
                        Add   *Var[9]  00000001
                    EndIf
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021A018
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000003
        ExecWait  $Script_8021B590
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
        If  *Var[0]  ==  00000002
            Goto  7B
        EndIf
        ExecWait  $Script_8021AB44
        If  *Var[E]  ==  FFFFFFFF
            Goto  7B
        EndIf
        ExecWait  $Script_80219EB4
        Switch  *Var[9]
            Case  ==  00000001
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  00000190
                    ExecWait  $Script_8021AE2C
                    Return
                EndIf
            Case  ==  00000002
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000000C8
                    ExecWait  $Script_8021AE2C
                    Return
                EndIf
            Case  ==  00000003
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  00000064
                    ExecWait  $Script_8021AE2C
                    Return
                EndIf
        EndSwitch
    EndIf
    Label  7B
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000001F4
        ExecWait  $Script_802193B8
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
    EndIf
    ChildThread
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
        Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[2.2] )
        Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
        Call  GetStatusFlags    ( .Actor:Self *Var[5] )
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
        Switch  *Var[A]
            Case  ==  00000000
                If  *Var[5]  !&  00080000
                    Add   *Var[1]  00000026
                Else
                    Add   *Var[1]  0000000F
                    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
                EndIf
                Call  JumpPartTo    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Case  ==  00000001
                If  *Var[5]  !&  00080000
                    Add   *Var[1]  00000014
                Else
                    Add   *Var[1]  00000008
                    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
                EndIf
                Call  JumpPartTo    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Case  ==  00000002
                If  *Var[5]  !&  00080000
                    Add   *Var[1]  00000008
                Else
                    Add   *Var[1]  00000003
                    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
                EndIf
                Call  JumpPartTo    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Case  ==  00000003
        EndSwitch
    EndChildThread
    Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
    Call  GetActorVar       ( .Actor:Self 00000004 *Var[1] )
    Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
    Wait  12`
    Call  GetActorVar       ( .Actor:Self 00000005 *Var[1] )
    Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
    Wait  1`
    Call  PlaySoundAtActor  ( .Actor:Self 000002CE )
    Wait  3`
    ExecWait  $Script_8021C07C
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            If  *Var[0]  ==  .HitResult:Lucky % 5
                ChildThread
                    Wait  5`
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndChildThread
            EndIf
            Call  SetTargetActor    ( .Actor:Self .Actor:Player )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000050
            Sub   *Var[1]  00000005
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
            Call  JumpPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            Call  GetActorVar       ( .Actor:Self 00000002 *Var[1] )
            Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
    Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
    Call  JumpPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 80020300 00000002 00000020 )
    Call  GetActorVar       ( .Actor:Self 00000002 *Var[1] )
    Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000037
            Set   *Var[1]  00000000
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
            Sub   *Var[0]  00000018
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
            Sub   *Var[0]  00000014
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021AB44
{
    Set   *Var[E]  FFFFFFFF
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000000
        Return
    EndIf
    Set   *Flag[01]  .False
    Set   *Flag[02]  .False
    Set   *Flag[03]  .False
    Set   *Flag[04]  .False
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  GetIndexFromHome  ( .Actor:Self *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Return
        Case  ==  00000001
            If  *Flag[01]  ==  .False
                Set   *Var[E]  00000000
            EndIf
        Case  ==  00000002
            If  *Flag[02]  ==  .False
                Set   *Var[E]  00000001
            EndIf
        Case  ==  00000003
            If  *Flag[03]  ==  .False
                Set   *Var[E]  00000002
            EndIf
    EndSwitch
    Return
    End
}

#new:Vector3D $Vector3D_8021AE04
{
    400` -100` 0`
}

#new:SpecialFormation $SpecialFormation_8021AE10
{
    $Pokey $Vector3D_8021AE04 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_8021AE2C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
    Call  MakeLerp  ( 00000000 FFFFFFEC 00000014 .Easing:CosInOut )
    Label  0
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    ChildThread
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 00000344 )
    EndChildThread
    Call  MakeLerp  ( FFFFFFEC 0000001E 00000014 .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    ChildThread
        Wait  6`
        Call  PlaySoundAtActor  ( .Actor:Self 00000345 )
    EndChildThread
    Call  MakeLerp  ( 0000001E FFFFFFD8 00000014 .Easing:CosInOut )
    Label  2
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  2
    EndIf
    ChildThread
        Wait  4`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EE )
    EndChildThread
    Call  MakeLerp  ( FFFFFFD8 0000005A 0000000A .Easing:CosInOut )
    Label  3
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  3
    EndIf
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self 00000346 )
    Call  StartRumble       ( 00000009 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.0] )
    EndThread
    Call  SummonEnemy   ( $SpecialFormation_8021AE10 00000000 )
    Set   *Var[B]  *Var[0]
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000028
    Sub   *Var[1]  00000050
    Call  SetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    ChildThread
        Call  PlayEffect    ( ~FX:ShockWave:Sand *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  UseIdleAnimation      ( *Var[B] .False )
        Call  SetAnimation  ( *Var[B] 00000001 0031000C )
        Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  SetActorJumpGravity   ( *Var[B] *Fixed[1.2] )
        Call  SetGoalPos    ( *Var[B] *Var[0] 00000000 *Var[2] )
        Call  JumpToGoal    ( *Var[B] 00000014 .False .True .False )
        Wait  20`
        Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  SetAnimation  ( *Var[B] 00000001 00310004 )
        Call  SetHomePos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  HPBarToHome   ( *Var[B] )
        Call  UseIdleAnimation      ( *Var[B] .True )
    EndChildThread
    Call  GetActorVar   ( .Actor:Self 0000000A *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetActorVar   ( *Var[B] 0000000A 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( *Var[B] 0000000A 00000002 )
    EndSwitch
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Set   *Var[A]  *Var[0]
    Call  MakeLerp  ( 0000005A FFFFFFE2 00000007 .Easing:QuadraticOut )
    Label  4
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  4
    EndIf
    Wait  20`
    Call  MakeLerp  ( FFFFFFE2 00000000 0000000A .Easing:CosInOut )
    Label  5
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  5
    EndIf
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021B590
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000002EC 000002EC )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EC 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
    ExecWait  8029C12C
    Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
    Wait  4`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  4`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Set   *Var[1]  0000000A
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
            ChildThread
                Wait  2`
                Set   *Var[0]  00000000
                Loop  00000005
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndChildThread
            Call  JumpToGoal    ( .Actor:Self 00000016 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
            ChildThread
                Wait  2`
                Set   *Var[0]  000000B4
                Loop  00000006
                    Add   *Var[0]  0000001E
                    If  *Var[0]  ==  00000168
                        Set   *Var[0]  00000000
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndChildThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            ExecWait  8029C12C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
    ChildThread
        Wait  2`
        Set   *Var[0]  00000000
        Loop  00000005
            Add   *Var[0]  0000001E
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndChildThread
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020300 00000002 00000020 )
    Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Sub   *Var[0]  0000000A
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            ExecWait  8029C12C
            Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021BF50
{
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        SetConst  *Var[0]  00000001
        Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
        ExecWait  DoSpinSmashHit
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    Switch  *Var[A]
        Case  ==  00000000
            ExecWait  $Script_8021C860
        Case  ==  00000001
            ExecWait  $Script_8021C860
        Case  ==  00000002
            ExecWait  $Script_8021C860
        Case  ==  00000003
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoSpinSmashHit
    EndSwitch
    Return
    End
}

#new:Script $Script_8021C07C
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    Switch  *Var[A]
        Case  ==  00000000
            Call  SetActorVar   ( .Actor:Self 00000001 00310005 )
            Call  SetActorVar   ( .Actor:Self 00000002 00310009 )
            Call  SetActorVar   ( .Actor:Self 00000003 0031000D )
            Call  SetActorVar   ( .Actor:Self 00000004 00310012 )
            Call  SetActorVar   ( .Actor:Self 00000005 00310013 )
            Call  SetActorVar   ( .Actor:Self 00000006 0031001A )
            Call  SetActorVar   ( .Actor:Self 00000007 0031001B )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218474 )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            Call  SetActorSize  ( .Actor:Self 0000003E F1194D80 )
            Call  SetPartSize   ( .Actor:Self 00000001 0000003E F1194D80 )
            Call  $Function_80218000    ( FFFFFFF1 00000037 0000000A 0000002D )
        Case  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000001 00310006 )
            Call  SetActorVar   ( .Actor:Self 00000002 0031000A )
            Call  SetActorVar   ( .Actor:Self 00000003 0031000E )
            Call  SetActorVar   ( .Actor:Self 00000004 00310014 )
            Call  SetActorVar   ( .Actor:Self 00000005 00310015 )
            Call  SetActorVar   ( .Actor:Self 00000006 0031001C )
            Call  SetActorVar   ( .Actor:Self 00000007 0031001D )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802184B0 )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .True )
            Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
            Call  SetActorSize  ( .Actor:Self 0000002C F1194D80 )
            Call  SetPartSize   ( .Actor:Self 00000001 0000002C F1194D80 )
            Call  $Function_80218000    ( FFFFFFF1 00000023 0000000A 00000019 )
        Case  ==  00000002
            Call  SetActorVar   ( .Actor:Self 00000001 00310007 )
            Call  SetActorVar   ( .Actor:Self 00000002 0031000B )
            Call  SetActorVar   ( .Actor:Self 00000003 0031000F )
            Call  SetActorVar   ( .Actor:Self 00000006 0031001E )
            Call  SetActorVar   ( .Actor:Self 00000007 0031001F )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802184EC )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000005 00020000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000005 00800000 .True )
            Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
            Call  SetActorSize  ( .Actor:Self 0000001A F1194D80 )
            Call  SetPartSize   ( .Actor:Self 00000001 0000001A F1194D80 )
            Call  $Function_80218000    ( FFFFFFF1 0000000F 0000000A 00000005 )
    EndSwitch
    Return
    End
}

#new:Script $Script_8021C574
{
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000012
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  *Var[1]
    Wait  2`
    Sub   *Var[3]  00000001
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  3`
    Sub   *Var[3]  00000002
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  2`
    Sub   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000005
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000007
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Add   *Var[3]  00000002
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Add   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Add   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000002
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Return
    End
}

#new:Script $Script_8021C860
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
    EndIf
    ExecWait  $Script_8021C07C
    SetConst  *Var[0]  00000001
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    ChildThread
        Wait  4`
        ExecWait  $Script_8021C574
    EndChildThread
    Call  EnemyCreateTargetList ( 00018004 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerID    ( *Var[1] )
    Call  GetOwnerTarget        ( *Var[0] *Var[9] )
    If  *Var[1]  !=  *Var[0]
        Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
        Goto  0
    EndIf
    Label  1
    Add   *Var[F]  00000001
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  ==  FFFFFFFF % FFFFFFFF
        Goto  A
    EndIf
    Call  GetOwnerTarget    ( *Var[0] *Var[9] )
    Call  GetActorFlags     ( *Var[0] *Var[1] )
    If  *Var[1]  &  00004000 % 4000
        Goto  1
    EndIf
    Call  GetOwnerID        ( *Var[0] )
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[7.0] )
    Call  JumpPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
    ChildThread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
    EndChildThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  DispatchDamageEvent   ( *Var[0] 00000001 .Event:SpinSmashLaunchHit )
    Goto  1
    Label  A
    Call  UseCamPreset      ( 00000003 )
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
    Call  JumpPartTo        ( .Actor:Self 00000006 00000128 00000000 00000000 00000000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
    Return
    End
}

#new:Script $Script_8021CCAC
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
    EndIf
    ExecWait  $Script_8021C07C
    SetConst  *Var[0]  00000001
    Call  GetLastEvent  ( .Actor:Self *Var[1] )
    Switch  *Var[1]
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:BurnDeath % 24
            Call  SetAnimation  ( .Actor:Self 00000006 00310020 )
            Call  GetActorVar   ( .Actor:Self 00000006 *Var[1] )
        EndCaseGroup
        Default
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
    EndSwitch
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    ChildThread
        Wait  4`
        ExecWait  $Script_8021C574
    EndChildThread
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  !=  00000003
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartPos    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001E
        Set   *Var[1]  00000000
        Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000A 00000012 .Easing:Linear )
        Add   *Var[0]  00000014
        Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000008 0000000A .Easing:Linear )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
            Wait  1`
        EndLoop
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
    Else
        Wait  30`
    EndIf
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000007 *Var[1] )
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
            Div   *Var[3]  00000002
            Add   *Var[1]  *Var[3]
            Add   *Var[2]  00000005
            DivF  *Var[3]  *Fixed[10.0]
            Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000007 *Var[1] )
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Wait  10`
        Default
    EndSwitch
    Return
    End
}

#new:Script $Script_8021D184
{
    SetConst  *Var[0]  00000001
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorFlags ( .Actor:Self *Var[9] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.05] )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Set   *Var[D]  *Var[B]
    Add   *Var[D]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[D] *Var[C] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Wait  20`
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 0000000A )
    Wait  20`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Wait  5`
    Call  SetActorVar   ( .Actor:Self 00000000 *Var[2] )
    Switch  *Var[2]
        Case  ==  00000000
            Set   *Var[2]  00000060
            Set   *Var[6]  00000004
        Case  ==  00000001
            Set   *Var[2]  00000048
            Set   *Var[6]  00000003
        Case  ==  00000002
            Set   *Var[2]  00000030
            Set   *Var[6]  00000002
        Default
            Set   *Var[2]  00000018
            Set   *Var[6]  00000001
    EndSwitch
    ChildThread
        Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
        Loop  *Var[6]
            Call  PlayEffect    ( ~FX:ShockWave:Sand *Var[A] 00000000 *Var[C] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  10`
        EndLoop
    EndChildThread
    Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[4]  *Var[2]
    Call  SetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
    Wait  8`
    Call  8027D32C      ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

PADDING: 8021D50C to 8021D510 (004DFAEC to 004DFAF0)
00000000

#new:IdleAnimations $IdleAnimations_8021D510
{
    .Status:Normal    00320001
    .Status:Stone     00320000
    .Status:Sleep     00320010
    .Status:Poison    00320001
    .Status:Stop      00320000
    .Status:Static    00320001
    .Status:Paralyze  00320000
    .Status:Dizzy     00320011
    .Status:Fear      00320011
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021D55C
{
    .Status:Normal    00320002
    .Status:Stone     00320004
    .Status:Sleep     00320010
    .Status:Poison    00320002
    .Status:Stop      00320004
    .Status:Static    00320002
    .Status:Paralyze  00320004
    .Status:Dizzy     00320011
    .Status:Fear      00320011
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021D5A8
{
    .Status:Normal    00320014
    .Status:End
}

#new:DefenseTable $DefenseTable_8021D5B4
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021D5C0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     20`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear       50`
    .Status:Static     30`
    .Status:Paralyze  100`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021D66C
{
    00800000 01000000 FE1C00FF $IdleAnimations_8021D510 $DefenseTable_8021D5B4 00000000 00000000 00F40000 00000000
    00020001 02001E00 000000FF $IdleAnimations_8021D5A8 $DefenseTable_8021D5B4 00000000 00000000 00000000 00000000
}

#new:PartsTable $PartsTable_8021D6B4
{
    00020000 02000000 000000FF $IdleAnimations_8021D5A8 $DefenseTable_8021D5B4 00000000 00000000 00000000 00000000
}

#new:Actor $BanditA
{
    % stats
    [Index]        13b
    [Level]         9`b
    [MaxHP]         5`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021D5C0
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_8021D66C
    [Script]      $Script_Init_8021D750
    % move effectiveness
    [Escape]       40`b
    [Item]         90`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         26`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  25`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Actor $BanditB
{
    % stats
    [Index]        13b
    [Level]         9`b
    [MaxHP]         5`b
    [Coins]         1`b
    [Flags]       00600000
    [StatusTable] $StatusTable_8021D5C0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021D6B4
    [Script]      $Script_Init_8021D7C4
    % move effectiveness
    [Escape]       40`b
    [Item]         90`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         26`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  25`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Vector3D $Vector3D_8021D728
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021D734
{
    $BanditB $Vector3D_8021D728 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_8021D750
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021E900 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021D810 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DF88 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021D7B4
{
    Return
    End
}

#new:Script $Script_Init_8021D7C4
{
    Call  BindTakeTurn      ( .Actor:Self $Script_HandleEvent_8021D7B4 )
    Call  BindIdle  ( .Actor:Self $Script_HandleEvent_8021D7B4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D7B4 )
    Return
    End
}

#new:Script $Script_Idle_8021D810
{
    Return
    End
}

#new:Script $Script_8021D820
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D510 )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
            Call  SummonEnemy   ( $SpecialFormation_8021D734 00000000 )
            Set   *Var[A]  *Var[0]
            Call  GetPartOffset ( .Actor:Self 00000002 *Var[1] *Var[2] *Var[3] )
            Call  SetActorPos   ( *Var[A] *Var[1] *Var[2] *Var[3] )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Call  SetActorVar   ( *Var[A] 00000001 *Var[0] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.0] )
            Call  RandInt       ( 00000168 *Var[0] )
            Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
            Add   *Var[2]  0000001E
            Call  SetActorPos   ( *Var[A] *Var[1] *Var[2] *Var[3] )
            Call  SetActorSounds    ( *Var[A] .ActorSound:Jump 00000000 00000000 )
            Call  AddVectorPolar    ( *Var[1] *Var[3] *Fixed[40.0] *Var[0] )
            Call  SetGoalPos    ( *Var[A] *Var[1] 00000000 *Var[3] )
            Call  JumpToGoal    ( *Var[A] 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( *Var[A] 00000212 )
            Call  AddVectorPolar    ( *Var[1] *Var[3] *Fixed[20.0] *Var[0] )
            Call  SetGoalPos    ( *Var[A] *Var[1] 00000000 *Var[3] )
            Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
            Call  PlaySoundAtActor  ( *Var[A] 00000212 )
            Call  AddVectorPolar    ( *Var[1] *Var[3] *Fixed[10.0] *Var[0] )
            Call  SetGoalPos    ( *Var[A] *Var[1] 00000000 *Var[3] )
            Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
            Call  PlaySoundAtActor  ( *Var[A] 00000212 )
            Loop
                Call  GetBattleFlags    ( *Var[1] )
                If  *Var[1]  &  00080000
                    BreakLoop
                EndIf
                If  *Var[1]  !&  00000100
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Wait  15`
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.0] )
            Call  SetActorSpeed ( *Var[A] *Fixed[6.0] )
            Set   *Var[0]  FFFFFFBA
            Set   *Var[1]  00000000
            Set   *Var[2]  0000000A
            Label  5
            Call  GetActorPos   ( *Var[A] *Var[3] *Var[4] *Var[5] )
            If  *Var[3]  ==  *Var[0]
                Goto  A
            EndIf
            If  *Var[3]  <  *Var[0]
                Set   *Var[4]  *Var[0]
                Sub   *Var[4]  *Var[3]
                If  *Var[4]  <  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000005 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                Else
                    Set   *Var[4]  *Var[3]
                    Add   *Var[3]  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[3] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000000 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                EndIf
            Else
                Set   *Var[4]  *Var[3]
                Sub   *Var[4]  *Var[0]
                If  *Var[4]  <  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000005 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                Else
                    Sub   *Var[3]  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[3] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000000 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                EndIf
            EndIf
            Goto  5
            Label  A
            Call  EnableActorBlur   ( *Var[A] 00000001 )
            Call  SetTargetActor    ( *Var[A] .Actor:Player )
            Call  SetGoalToTarget   ( *Var[A] )
            Call  JumpToGoal    ( *Var[A] 0000000F .False .False .False )
            Call  GetGoalPos    ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmallGoldSparkle *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  PlaySoundAtActor  ( *Var[A] 00000211 )
            Call  GetActorVar   ( *Var[A] 00000001 *Var[0] )
            Call  AddCoin       ( *Var[0] )
            Call  RemoveActor   ( *Var[A] )
    EndSwitch
    Return
    End
}

#new:Script $Script_HandleEvent_8021DF88
{
    UseArray  $End[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoNormalHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:SpinSmashLaunchHit % 11
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoNormalHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0032000A
            SetConst  *Var[2]  0032000B
            ExecWait  DoBurnHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        Case  ==  .Event:BurnDeath % 24
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0032000A
            SetConst  *Var[2]  0032000B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0032000B
            ExecWait  DoDeath
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        Case  ==  .Event:SpinSmashHit % B
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoSpinSmashHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        Case  ==  .Event:SpinSmashDeath % 21
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoDeath
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320007
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[1]  00320001
                Case  ==  00000001
                    SetConst  *Var[1]  00320002
            EndSwitch
            SetConst  *Var[0]  00000001
            ExecWait  DoImmune
        EndCaseGroup
        CaseOR  ==  .Event:Death % 20
        CaseOR  ==  00000025 % 25
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoDeath
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        EndCaseGroup
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320007
            SetConst  *Var[2]  00320009
            ExecWait  DoScareAway
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Exec  $Script_8021D820 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoAirLift
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            SetConst  *Var[2]  00040000
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00320001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021E900
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetActorYaw   ( .Actor:Self 000000B4 )
        Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
        Wait  30`
        Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
        Call  SetGoalPos    ( .Actor:Self 0000012C 00000000 00000000 )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetBattleFlagBits ( 00040000 .True )
        Call  8027D32C      ( FFFFFF81 )
        Call  RemoveActor   ( .Actor:Self )
        Return
    EndIf
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
        Wait  6`
    EndIf
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00320005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000023 00000000 00000000 )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020C2 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 0032000D )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 0032000D )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  <=  .HitResult:Hit % 0
                Set   *Var[0]  00000001
                Goto  A
            EndIf
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000
                Set   *Var[0]  00000001
                Goto  A
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000
                Set   *Var[0]  00000000
                Goto  A
            EndIf
            Call  GetStatusFlags    ( .Actor:Player *Var[0] )
            If  *Var[0]  &  00100000
                Set   *Var[0]  00000000
                Goto  A
            EndIf
            Call  AddCoin   ( 00000000 )
            Switch  *Var[0]
                Case  ==  00000000
                    Set   *Var[0]  00000001
                Case  <  0000000A
                    Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Set   *Var[0]  00000002
                Case  >=  0000000A
                    Call  SetActorVar   ( .Actor:Self 00000001 0000000A )
                    Set   *Var[0]  00000002
            EndSwitch
            Label  A
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Set   *Var[1]  00000000
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
                Case  ==  00000001
                    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Set   *Var[1]  00000000
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
                    Wait  20`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
                    Call  SetAnimation  ( .Actor:Self 00000001 00320010 )
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
                Default
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  GetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
                    Add   *Var[A]  0000001E
                    Set   *Var[B]  00000000
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Mul   *Var[0]  FFFFFFFF
                    Call  AddCoin       ( *Var[0] )
                    Thread
                        Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .True )
                        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
                        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                        Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
                        Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
                        Add   *Var[B]  0000001E
                        Call  JumpPartTo        ( .Actor:Self 00000002 *Var[A] *Var[B] *Var[C] 00000016 .True )
                        Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
                    EndThread
                    Thread
                        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                        Loop  *Var[0]
                            Call  PlaySoundAtActor  ( .Actor:Self 00000212 )
                            Wait  1`
                        EndLoop
                    EndThread
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8021D55C )
                    Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                    Wait  7`
                    Call  SetAnimation  ( .Actor:Self 00000001 0032000F )
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
            EndSwitch
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021F714 to 8021F720 (004E1CF4 to 004E1D00)
00000000 00000000 00000000

#new:Script $Script_8021F720
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[1]
    Mul   *Var[7]  0000000A
    Call  $Function_80218220 ( )
    Label  0
    Add   *Var[7]  00000001
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802180D0    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8021F800
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[1]  00000000
    Exec  $Script_8021F720
    Set   *Var[0]  00000003
    Set   *Var[1]  00000078
    Exec  $Script_8021F720
    Set   *Var[0]  00000005
    Set   *Var[1]  000000F0
    Exec  $Script_8021F720
    Call  PlayEffect        ( ~FX:SunRays:RightCorner 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021F8E8
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021F8F8
{
    ~Model:sbk_bt02:o322
    ~Model:sbk_bt02:o321
    ~Model:sbk_bt02:o320
    ~Model:sbk_bt02:o319
    00000000
}

#new:Stage $Stage_8021F90C
{
    $ASCII_80220028  % sbk_tex
    $ASCII_80220018  % sbk_bt02_shape
    $ASCII_80220008  % sbk_bt02_hit
    $Script_BeforeBattle_8021F800
    $Script_AfterBattle_8021F8E8
    $ASCII_80220000  % sbk_bg
    $ForegroundModelList_8021F8F8
    00000000
    00000000
    00000000
}

PADDING: 8021F934 to 8021F940 (004E1F14 to 004E1F20)
00000000 00000000 00000000

#new:Formation $Formation_00
{
    $Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000001 00000009 00000000 00000000 00000000 00000000
    $Pokey 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000001 00000009 00000000 00000000 00000000 00000000
    $Pokey 00000002 00000008 00000000 00000000 00000000 00000000
    $Pokey 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000001 00000009 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000001 00000009 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000008 00000000 00000000 00000000 00000000
    $BanditA 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000001 00000009 00000000 00000000 00000000 00000000
    $Pokey 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000001 00000009 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000008 00000000 00000000 00000000 00000000
    $Pokey 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000001 00000009 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000001 00000009 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000008 00000000 00000000 00000000 00000000
    $BanditA 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000001 00000009 00000000 00000000 00000000 00000000
    $Pokey 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000001 00000009 00000000 00000000 00000000 00000000
    $Pokey 00000002 00000008 00000000 00000000 00000000 00000000
    $Pokey 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
    $Pokey 00000001 00000009 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80220148 00000001 $Formation_00 $Stage_8021F90C 00000000
    $SJIS_8022013C 00000002 $Formation_01 $Stage_8021F90C 00000000
    $SJIS_80220130 00000003 $Formation_02 $Stage_8021F90C 00000000
    $SJIS_80220120 00000004 $Formation_03 $Stage_8021F90C 00000000
    $SJIS_80220110 00000002 $Formation_04 $Stage_8021F90C 00000000
    $SJIS_802200FC 00000003 $Formation_05 $Stage_8021F90C 00000000
    $SJIS_802200E8 00000004 $Formation_06 $Stage_8021F90C 00000000
    $SJIS_802200D0 00000003 $Formation_07 $Stage_8021F90C 00000000
    $SJIS_802200B4 00000004 $Formation_08 $Stage_8021F90C 00000000
    $SJIS_802200A8 00000001 $Formation_09 $Stage_8021F90C 00000000
    $SJIS_8022009C 00000002 $Formation_0A $Stage_8021F90C 00000000
    $SJIS_80220090 00000003 $Formation_0B $Stage_8021F90C 00000000
    $SJIS_80220084 00000004 $Formation_0C $Stage_8021F90C 00000000
    $SJIS_80220074 00000002 $Formation_0D $Stage_8021F90C 00000000
    $SJIS_80220060 00000003 $Formation_0E $Stage_8021F90C 00000000
    $SJIS_8022004C 00000004 $Formation_0F $Stage_8021F90C 00000000 % unused
    $SJIS_80220030 00000003 $Formation_10 $Stage_8021F90C 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80220150 $Stage_8021F90C
    00000000 00000000
}

PADDING: 8021FFF8 to 80220000 (004E25D8 to 004E25E0)
00000000 00000000

#new:ASCII $ASCII_80220000
{
    "sbk_bg"
}

#new:ASCII $ASCII_80220008
{
    "sbk_bt02_hit"
}

#new:ASCII $ASCII_80220018
{
    "sbk_bt02_shape"
}

#new:ASCII $ASCII_80220028
{
    "sbk_tex"
}

#new:SJIS $SJIS_80220030
{
    ボロドー,サンボ,ボロドー % borodo-,sanbo,borodo-
}

#new:SJIS $SJIS_8022004C
{
    ボロドーx2,サンボx2 % borodo-x2,sanbox2
}

#new:SJIS $SJIS_80220060
{
    ボロドーx2,サンボ % borodo-x2,sanbo
}

#new:SJIS $SJIS_80220074
{
    ボロドー,サンボ % borodo-,sanbo
}

#new:SJIS $SJIS_80220084
{
    ボロドーx4 % borodo-x4
}

#new:SJIS $SJIS_80220090
{
    ボロドーx3 % borodo-x3
}

#new:SJIS $SJIS_8022009C
{
    ボロドーx2 % borodo-x2
}

#new:SJIS $SJIS_802200A8
{
    ボロドー % borodo-
}

#new:SJIS $SJIS_802200B4
{
    サンボx2,ボロドー,サンボ % sanbox2,borodo-,sanbo
}

#new:SJIS $SJIS_802200D0
{
    サンボ,ボロドー,サンボ % sanbo,borodo-,sanbo
}

#new:SJIS $SJIS_802200E8
{
    サンボx2,ボロドーx2 % sanbox2,borodo-x2
}

#new:SJIS $SJIS_802200FC
{
    サンボx2,ボロドー % sanbox2,borodo-
}

#new:SJIS $SJIS_80220110
{
    サンボ,ボロドー % sanbo,borodo-
}

#new:SJIS $SJIS_80220120
{
    きいろサンボx4 % kiirosanbox4
}

#new:SJIS $SJIS_80220130
{
    サンボx3 % sanbox3
}

#new:SJIS $SJIS_8022013C
{
    サンボx2 % sanbox2
}

#new:SJIS $SJIS_80220148
{
    サンボ % sanbo
}

#new:ASCII $ASCII_80220150
{
    "sbk_01"
}

PADDING: 80220158 to 80220160 (004E2738 to 004E2740)
00000000 00000000

