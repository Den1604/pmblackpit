% Script File: 05 Area NOK.bscr
% Decoded from: 48D1A0 to 4A10A0 (05 Area NOK)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021A2D4
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021A2D4)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021A2D4)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218000
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802182D8
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021D57C
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021D57C)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021D57C)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218464
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_802182D8
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218558 to 80218560 (0048D6F8 to 0048D700)
00000000 00000000

#new:Function $Function_80218560
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021F050
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021F050)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021F050)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802186EC
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218560
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802187E0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802188AC to 802188B0 (0048DA4C to 0048DA50)
00000000

#new:Function $Function_802188B0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218964
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218A18 to 80218A20 (0048DBB8 to 0048DBC0)
00000000 00000000

#new:Function $Function_80218A20
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218A78
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218B44 to 80218B50 (0048DCE4 to 0048DCF0)
00000000 00000000 00000000

#new:Function $Function_80218B50
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218BA8
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218C74
{
	ADDIU     SP, SP, FFB8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S2, V0
	ADDIU     A0, R0, 168
	JAL       ~Func:rand_int
	COPY      S3, V0
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	LIF       F24, 46.0
	JAL       ~Func:cos_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F24
	NOP
	MTC1      S2, F20
	NOP
	CVT.S.W   F20, F20
	ADD.S     F0, F20, F0
	TRUNC.W.S F2, F0
	MFC1      S2, F2
	JAL       ~Func:sin_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F24
	NOP
	MTC1      S3, F24
	NOP
	CVT.S.W   F24, F24
	ADD.S     F0, F24, F0
	LIF       F26, 62.0
	TRUNC.W.S F2, F0
	MFC1      S3, F2
	JAL       ~Func:cos_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F26
	NOP
	ADD.S     F20, F20, F0
	TRUNC.W.S F2, F20
	MFC1      S4, F2
	JAL       ~Func:sin_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F26
	NOP
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	ADD.S     F24, F24, F0
	COPY      A2, S2
	TRUNC.W.S F2, F24
	MFC1      S2, F2
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:set_variable
	COPY      A2, S3
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:set_variable
	COPY      A2, S4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, S2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

% Origin: HEURISTIC
#new:Function $Function_80218DF8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 4 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80218E1C to 80218E20 (0048DFBC to 0048DFC0)
00000000

#new:Formation $Formation_00
{
    $Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000
    $Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $Goomba 00000001 00000009 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
    $Goomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Paragoomba 00000005 00000009 00000000 00000000 00000000 00000000
    $Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
    $Paragoomba 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
    $Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
    $Paratroopa 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
    $Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
    $Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
    $Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
    $SpikedGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
    $Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
    $Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
    $Fuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
    $Fuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $Fuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $Fuzzy 00000002 00000008 00000000 00000000 00000000 00000000
    $Fuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
    $KentCKoopa 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8022BE10 00000002 $Formation_00 $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BDF8 00000002 $Formation_01 $Stage_8022BAEC 00000000
    $SJIS_8022BDE8 00000002 $Formation_02 $Stage_8022BAEC 00000000
    $SJIS_8022BDCC 00000002 $Formation_03 $Stage_8022BAEC 00000000
    $SJIS_8022BDBC 00000002 $Formation_04 $Stage_8022BAEC 00000000
    $SJIS_8022BDA0 00000003 $Formation_05 $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BD90 00000003 $Formation_06 $Stage_8022BAEC 00000000
    $SJIS_8022BD80 00000004 $Formation_07 $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BD6C 00000002 $Formation_08 $Stage_8022BAEC 00000000
    $SJIS_8022BD60 00000002 $Formation_09 $Stage_8022BAEC 00000000
    $SJIS_8022BD54 00000003 $Formation_0A $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BD3C 00000002 $Formation_0B $Stage_8022BAEC 00000000
    $SJIS_8022BD24 00000003 $Formation_0C $Stage_8022BAEC 00000000
    $SJIS_8022BD08 00000003 $Formation_0D $Stage_8022BAEC 00000000
    $SJIS_8022BCEC 00000003 $Formation_0E $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BCC8 00000003 $Formation_0F $Stage_8022BAEC 00000000
    $SJIS_8022BCA0 00000004 $Formation_10 $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BC94 00000002 $Formation_11 $Stage_8022BAEC 00000000
    $SJIS_8022BC80 00000002 $Formation_12 $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BC5C 00000003 $Formation_13 $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BC38 00000004 $Formation_14 $Stage_8022BAEC 00000000
    $SJIS_8022BC2C 00000001 $Formation_15 $Stage_8022BAEC 00000000 % unused
    $SJIS_8022BC1C 00000002 $Formation_16 $Stage_8022BAEC 00000000
    $SJIS_8022BC0C 00000004 $Formation_17 $Stage_8022BAEC 00000000
    $SJIS_8022BC00 00000001 $Formation_18 $Stage_8022BAEC 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_8022BE34 $Stage_8022B7E0
    $ASCII_8022BE2C $Stage_8022BAEC
    $ASCII_8022BE24 $Stage_8022BB5C
    $ASCII_8022BE1C $Stage_8022BBD8
    00000000 00000000
}

#new:DefenseTable $DefenseTable_80219750
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021975C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison    100`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80219808
{
    00800000 01000000 001400FF $IdleAnimations_80219854 $DefenseTable_80219750 00000000 00000000 00F60000 00000000
}

#new:Actor $Goomba
{
    % stats
    [Index]         7b
    [Level]         5`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021975C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80219808
    [Script]      $Script_Init_802198EC
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]     100`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219854
{
    .Status:Normal    00260001
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260001
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802198A0
{
    .Status:Normal    00260003
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260003
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:Script $Script_Init_802198EC
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021A440 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80219938 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219C14 )
    Return
    End
}

#new:Script $Script_Idle_80219938
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802198A0 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219854 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802198A0 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219854 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_80219C14
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            SetConst  *Var[2]  00260005
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021A2D4
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021A440
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021B108 to 8021B110 (004902A8 to 004902B0)
00000000 00000000

#new:DefenseTable $DefenseTable_8021B110
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8021B11C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021B128
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison    100`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021B1D4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021B280
{
    00020001 01000000 001400FF $IdleAnimations_8021CAFC $DefenseTable_8021B110 00000000 00000000 00F60000 00000000
    00800000 02000000 001800FF $IdleAnimations_8021B338 $DefenseTable_8021B11C 00004000 00000000 00F60000 00000000
    00020001 03000000 F01800FF $IdleAnimations_8021B3D0 $DefenseTable_8021B110 00000000 00000000 00F60000 00000000
    00020001 04000000 F01800FF $IdleAnimations_8021B3DC $DefenseTable_8021B110 00000000 00000000 00F60000 00000000
}

#new:Actor $Paragoomba
{
    % stats
    [Index]         8b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021B1D4
    % ai
    [PartsCount]    4`s
    [PartsTable]  $PartsTable_8021B280
    [Script]      $Script_Init_8021B3E8
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]     100`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021B338
{
    .Status:Normal    00280001
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280001
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021B384
{
    .Status:Normal    00280004
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280004
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021B3D0
{
    .Status:Normal    00280009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021B3DC
{
    .Status:Normal    0028000A
    .Status:End
}

#new:Script $Script_Init_8021B3E8
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021BD5C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021B434 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B768 )
    Return
    End
}

#new:Script $Script_Idle_8021B434
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021B384 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021B338 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8021B6F0
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021B768
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_8021C574
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            ExecWait  $Script_8021C574
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            ExecWait  $Script_8021C574
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
            ExecWait  $Script_8021B6F0
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021B6F0
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            SetConst  *Var[2]  00280006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021BD5C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Thread
                Loop  00000004
                    Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
                    Wait  4`
                EndLoop
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021B6F0
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021B6F0
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021C574
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218280    ( 00000064 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
    EndThread
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Call  GetLastEvent      ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  0000000A
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021B128 )
    Call  SetActorType      ( .Actor:Self 00000007 )
    ExecWait  $Script_8021CB94
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021CAFC
{
    .Status:Normal    00260001
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260001
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CB48
{
    .Status:Normal    00260003
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260003
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:Script $Script_8021CB94
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D6E8 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021CBE0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CEBC )
    Return
    End
}

#new:Script $Script_Idle_8021CBE0
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB48 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CAFC )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB48 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CAFC )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021CEBC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            SetConst  *Var[2]  00260005
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021D57C
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021D6E8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218464    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218464    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021E3B0
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021E3BC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021E468
{
    00800000 01000000 001800FF $IdleAnimations_8021E4B4 $DefenseTable_8021E3B0 00000010 00000000 00F40000 00000000
}

#new:Actor $SpikedGoomba
{
    % stats
    [Index]         9b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021E3BC
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021E468
    [Script]      $Script_Init_8021E54C
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]      95`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021E4B4
{
    .Status:Normal    00270001
    .Status:Stone     00270000
    .Status:Sleep     0027000A
    .Status:Poison    00270001
    .Status:Stop      00270000
    .Status:Static    00270001
    .Status:Paralyze  00270000
    .Status:Dizzy     00270009
    .Status:Fear      00270009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021E500
{
    .Status:Normal    00270003
    .Status:Stone     00270000
    .Status:Sleep     0027000A
    .Status:Poison    00270001
    .Status:Stop      00270000
    .Status:Static    00270003
    .Status:Paralyze  00270000
    .Status:Dizzy     00270009
    .Status:Fear      00270009
    .Status:End
}

#new:Script $Script_Init_8021E54C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021F1BC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021E598 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E874 )
    Return
    End
}

#new:Script $Script_Idle_8021E598
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E500 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E4B4 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E500 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E4B4 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021E874
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270007
            SetConst  *Var[2]  00270008
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270007
            SetConst  *Var[2]  00270008
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0027000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0027000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270003
            SetConst  *Var[2]  00270006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:SpikeTaunt % 1B
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
            EndIf
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[1]  0000000A
            Else
                Add   *Var[1]  0000001A
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021F050
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021F1BC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00270003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802186EC    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0027000A )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00270006 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802186EC    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  >  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
                Wait  15`
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
                Wait  3`
            EndIf
            Call  YieldTurn ( )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021FEDC to 8021FEE0 (0049507C to 00495080)
00000000

#new:DefenseTable $DefenseTable_8021FEE0
{
    .Element:Normal 00000001
    .Element:Hammer 00000001
    .Element:Jump   00000001
    .Element:Water  00000001
    .Element:Blast  00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8021FF0C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021FF18
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     60`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   90`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021FFC4
{
    00800000 01000000 FE2400FF $IdleAnimations_80220010 $DefenseTable_8021FEE0 00001000 00000000 00F90000 00000000
}

#new:Actor $KoopaTroopa
{
    % stats
    [Index]         Bb
    [Level]         6`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021FF18
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021FFC4
    [Script]      $Script_Init_802200F4
    % move effectiveness
    [Escape]       70`b
    [Item]         90`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  36`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  32`b % dx dy
    [StatusIcon]    5`b  32`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80220010
{
    .Status:Normal    00290101
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290101
    .Status:Stop      00290100
    .Status:Static    00290101
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022005C
{
    .Status:Normal    00290103
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290103
    .Status:Stop      00290100
    .Status:Static    00290103
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802200A8
{
    .Status:Normal    0029010F
    .Status:Stone     00290110
    .Status:Sleep     00290112
    .Status:Poison    0029010F
    .Status:Stop      00290110
    .Status:Static    0029010F
    .Status:Paralyze  00290110
    .Status:Dizzy     00290114
    .Status:Fear      00290114
    .Status:End
}

#new:Script $Script_Init_802200F4
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022131C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802202B0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220798 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_80220158
{
    Switch  *Var[0]
        Case  ==  00000000
            If  *Var[1]  &  00041000
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Call  $Function_802187E0    ( FFFFFFF6 00000014 0000000A 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  $Function_802187E0    ( FFFFFFF1 00000020 00000005 00000020 )
            EndIf
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  $Function_802187E0    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_802202B0
{
    Label  0
    Call  RandInt   ( 00000050 *Var[A] )
    Add   *Var[A]  00000050
    Loop  *Var[A]
        Label  1
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80220158
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  1
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022005C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220010 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802200A8 )
    EndSwitch
    Loop  00000014
        Label  2
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80220158
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  2
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022005C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220010 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802200A8 )
    EndSwitch
    Loop  00000050
        Label  3
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80220158
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  3
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  3
        EndIf
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_80220740
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80220798
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021FF0C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802200A8 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            ChildThread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndChildThread
            UseIntBuffer  $IntTable_80220740
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290107
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000
                    Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                ExecWait  DoReturnHome
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoRecover
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                SetConst  *Var[2]  0029010B
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022131C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Sub   *Var[0]  00000001
            If  *Var[0]  >  00000000
                Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  30`
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Else
                Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  20`
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
                Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
                Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
                Set   *Var[0]  00000000
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                ChildThread
                    Loop  00000005
                        Add   *Var[0]  0000000F
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                        Wait  1`
                    EndLoop
                EndChildThread
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
                Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220010 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021FEE0 )
                Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
                Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndIf
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
        Wait  10`
        ChildThread
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000004
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndChildThread
        Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
        Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
        Wait  10`
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  UseCamPreset      ( 00000005 )
                Call  SetBattleCamZoom  ( 0000012C )
                Call  SetBattleCamOffsetZ   ( 00000014 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Wait  4`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Wait  6`
            Sub   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetPartYaw    ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_80222050
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022205C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison     90`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     70`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80222108
{
    00800000 01000000 001400FF $IdleAnimations_80222154 $DefenseTable_80222050 00000000 00000000 00F60000 00000000
}

#new:Actor $Fuzzy
{
    % stats
    [Index]         Ab
    [Level]         6`b
    [MaxHP]         3`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022205C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80222108
    [Script]      $Script_Init_802221A0
    % move effectiveness
    [Escape]       50`b
    [Item]         95`b
    [AirLift]      95`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         33`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80222154
{
    .Status:Normal    002B0001
    .Status:Stone     002B0000
    .Status:Sleep     002B000E
    .Status:Poison    002B0001
    .Status:Stop      002B0000
    .Status:Static    002B0001
    .Status:Paralyze  002B0000
    .Status:Dizzy     002B000F
    .Status:Fear      002B000F
    .Status:End
}

#new:Script $Script_Init_802221A0
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222860 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802221EC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802221FC )
    Return
    End
}

#new:Script $Script_Idle_802221EC
{
    Return
    End
}

#new:Script $Script_HandleEvent_802221FC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  .Event:Death % 20
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0013
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0008
            EndIf
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0010
            SetConst  *Var[2]  002B0012
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0010
            SetConst  *Var[2]  002B0012
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0012
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0013
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            ExecWait  8029C0A4
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0013
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0013
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0008
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0008
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            SetConst  *Var[2]  002B0009
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222860
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Goto  64
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C
    Call  SetAnimation      ( .Actor:Self 00000001 002B0001 )
    Label  64
    Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0004 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Set   *Var[1]  00000000
            Sub   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0005 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000B .False .True .False )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0009 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  4`
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000
                Set   *Flag[00]  .False
            Else
                Set   *Flag[00]  .True
            EndIf
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0005 )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    If  *Flag[00]  ==  .True
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Wait  10`
    Call  UseIdleAnimation  ( .Actor:Player .False )
    Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0007 )
    Wait  21`
    Call  SetAnimation  ( .Actor:Self 00000001 002B0000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
    Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
    Wait  2`
    Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
    Wait  10`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetLastDamage ( .Actor:Player *Var[3] )
            If  *Var[3]  !=  00000000
                Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
                Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A
                Call  $Function_802188B0    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Thread
                    Wait  15`
                    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                    Call  $Function_80218964    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                EndThread
                Add   *Var[0]  00000014
                Add   *Var[1]  00000014
                Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                Add   *Var[0]  *Var[3]
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            EndIf
            Thread
                Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
                Wait  2`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
                Wait  2`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
            Wait  1`
            Thread
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C
            Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_80223900
{
    .Element:Normal 00000001
    .Element:Hammer 00000001
    .Element:Jump   00000001
    .Element:Water  00000001
    .Element:Blast  00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8022392C
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_80223938
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80223944
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     60`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   90`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_802239F0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     60`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   90`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80223A9C
{
    00020001 01000000 FE2400FF $IdleAnimations_802258D0 $DefenseTable_80223900 00001000 00000000 00F90000 00000000
    00800000 02000000 FC2400FF $IdleAnimations_80223B30 $DefenseTable_8022392C 00004000 00000000 02F20000 00000000
    00020001 03000000 002000FF $IdleAnimations_80223BC8 $DefenseTable_80223900 00000000 00000000 00F60000 00000000
}

#new:Actor $Paratroopa
{
    % stats
    [Index]         Cb
    [Level]         6`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_802239F0
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80223A9C
    [Script]      $Script_Init_80223C3C
    % move effectiveness
    [Escape]       60`b
    [Item]         90`b
    [AirLift]      95`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         50`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  29`b % dx dy
    [StatusIcon]    8`b  30`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80223B30
{
    .Status:Normal    002A0101
    .Status:Stone     002A0100
    .Status:Sleep     002A0112
    .Status:Poison    002A0100
    .Status:Stop      002A0100
    .Status:Static    002A0101
    .Status:Paralyze  002A0100
    .Status:Dizzy     002A0113
    .Status:Fear      002A0113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80223B7C
{
    .Status:Normal    002A0101
    .Status:Stone     002A0100
    .Status:Sleep     002A0112
    .Status:Poison    002A0100
    .Status:Stop      002A0100
    .Status:Static    002A0101
    .Status:Paralyze  002A0100
    .Status:Dizzy     002A0113
    .Status:Fear      002A0113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80223BC8
{
    .Status:Normal    002A010F
    .Status:Stone     002A0100
    .Status:Sleep     002A0112
    .Status:Poison    002A0100
    .Status:Stop      002A0100
    .Status:Static    002A010F
    .Status:Paralyze  002A0100
    .Status:Dizzy     002A0113
    .Status:Fear      002A0113
    .Status:End
}

#new:Script $Script_NextTurn_80223C14
{
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_80223C3C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224854 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80223D8C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022411C )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80223C14 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_80223CB4
{
    If  *Var[1]  &  00041000
        Call  SetTargetOffset       ( .Actor:Self 00000002 00000000 00000019 )
        Call  8027D4C8  ( FFFFFF81 00000002 00000003 FFFFFFFA )
        Call  $Function_80218A78    ( FFFFFFED 00000019 00000004 0000001C )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000002 FFFFFFFE 00000024 )
        Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF9 )
        Call  $Function_80218A78    ( FFFFFFF6 0000001D 00000008 0000001E )
    EndIf
    Return
    End
}

#new:Script $Script_Idle_80223D8C
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80223CB4
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80223B7C )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223B30 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80223CB4
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80223B7C )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80223B30 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80223CB4
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8022409C
{
    Call  SetAnimation  ( .Actor:Self 00000002 002A0103 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
    Return
    End
}

#new:Script $Script_HandleEvent_8022411C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_8022530C
                EndIf
            EndIf
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0108
            SetConst  *Var[2]  002A0109
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0108
            SetConst  *Var[2]  002A0109
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0109
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
            ExecWait  $Script_8022530C
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002A0108
            SetConst  *Var[1]  002A0109
            ExecWait  DoBurnHit
            ExecWait  $Script_8022530C
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002A0107
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002A0106
            ExecWait  DoJumpBack
            ExecWait  $Script_8022409C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0106
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A010B
            ExecWait  DoImmune
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A010B
            ExecWait  DoImmune
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_8022530C
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8022409C
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0103
            SetConst  *Var[2]  002A0107
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0103
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80224854
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000005 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000002 002A0103 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000028 0000001E 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFF0 .Easing:Linear )
    Call  8024E664  ( 00000001 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  AddGoalPos    ( .Actor:Self 00000006 00000006 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
            Wait  6`
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000019
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Set   *Var[0]  00000000
                Loop  00000008
                    Add   *Var[0]  0000005A
                    If  *Var[0]  >=  00000168
                        Sub   *Var[0]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000001E
            Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8022409C
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  AddGoalPos    ( .Actor:Self 00000006 00000006 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
    Wait  6`
    Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000028 0000001E 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A010D )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000C
                    Sub   *Var[0]  0000005A
                    If  *Var[0]  <  00000000
                        Add   *Var[0]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
                Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
            EndThread
            Call  FlyToGoal ( .Actor:Self 00000000 0000001E .Easing:Linear )
            Wait  10`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            ExecWait  $Script_8022409C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022530C
{
    Call  SetPartDispOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000008
    Sub   *Var[2]  00000002
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000001 0029010B )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        Call  $Function_80218A20    ( 00000080 00000007 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
        EndThread
        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Loop  0000000A
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
            Wait  1`
        EndLoop
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        Thread
            Loop  0000000A
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
                Wait  1`
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
                Wait  1`
            EndLoop
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        EndThread
        Call  $Function_80218A20    ( 00000096 00000007 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
        EndThread
        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    EndIf
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80223944 )
    Call  BindNextTurn      ( .Actor:Self 00000000 )
    ExecWait  $Script_802259B4
    Call  SetActorType      ( .Actor:Self 0000000B )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    If  *Var[A]  !=  00000000
        Call  DispatchEvent ( .Actor:Self .Event:FlipTrigger )
    EndIf
    Return
    End
}

#new:IdleAnimations $IdleAnimations_802258D0
{
    .Status:Normal    00290101
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290101
    .Status:Stop      00290100
    .Status:Static    00290101
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022591C
{
    .Status:Normal    00290103
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290103
    .Status:Stop      00290100
    .Status:Static    00290103
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80225968
{
    .Status:Normal    0029010F
    .Status:Stone     00290110
    .Status:Sleep     00290112
    .Status:Poison    0029010F
    .Status:Stop      00290110
    .Status:Static    0029010F
    .Status:Paralyze  00290110
    .Status:Dizzy     00290114
    .Status:Fear      00290114
    .Status:End
}

#new:Script $Script_802259B4
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226BDC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80225B70 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226058 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_80225A18
{
    Switch  *Var[0]
        Case  ==  00000000
            If  *Var[1]  &  00041000
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Call  $Function_80218A78    ( FFFFFFF6 00000014 0000000A 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  $Function_80218A78    ( FFFFFFF1 00000020 00000005 00000020 )
            EndIf
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  $Function_80218A78    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_80225B70
{
    Label  0
    Call  RandInt   ( 00000050 *Var[A] )
    Add   *Var[A]  00000050
    Loop  *Var[A]
        Label  1
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80225A18
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  1
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022591C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802258D0 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225968 )
    EndSwitch
    Loop  00000014
        Label  2
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80225A18
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  2
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022591C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802258D0 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225968 )
    EndSwitch
    Loop  00000050
        Label  3
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80225A18
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  3
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  3
        EndIf
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_80226000
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80226058
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223938 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225968 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            ChildThread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndChildThread
            UseIntBuffer  $IntTable_80226000
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290107
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000
                    Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                ExecWait  DoReturnHome
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoRecover
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                SetConst  *Var[2]  0029010B
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80226BDC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Sub   *Var[0]  00000001
            If  *Var[0]  >  00000000
                Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  30`
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Else
                Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  20`
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
                Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
                Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
                Set   *Var[0]  00000000
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                ChildThread
                    Loop  00000005
                        Add   *Var[0]  0000000F
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                        Wait  1`
                    EndLoop
                EndChildThread
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
                Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802258D0 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223900 )
                Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
                Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndIf
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
        Wait  10`
        ChildThread
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000004
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndChildThread
        Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
        Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
        Wait  10`
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  UseCamPreset      ( 00000005 )
                Call  SetBattleCamZoom  ( 0000012C )
                Call  SetBattleCamOffsetZ   ( 00000014 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Wait  4`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Wait  6`
            Sub   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetPartYaw    ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IntTable $IntTable_80227910
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:IdleAnimations $IdleAnimations_80227968
{
    .Status:Normal    00470001
    .Status:Stone     00470000
    .Status:Sleep     00470013
    .Status:Poison    00470001
    .Status:Stop      00470000
    .Status:Static    00470000
    .Status:Paralyze  00470000
    .Status:Dizzy     00470014
    .Status:Fear      00470000
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802279B4
{
    .Status:Normal    0047001A
    .Status:Stop      00470019
    .Status:Paralyze  00470019
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802279D0
{
    .Status:Normal    00D50000
    .Status:End
}

#new:DefenseTable $DefenseTable_802279DC
{
    .Element:Normal 00000006
    .Element:Blast  00000006
    .Element:End
}

#new:DefenseTable $DefenseTable_802279F0
{
    .Element:Normal 00000003
    .Element:End
}

#new:DefenseTable $DefenseTable_802279FC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80227A08
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      30`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   30`
    .Status:Shrink     40`
    .Status:Stop       50`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_80227AB4
{
    00800000 01000000 003C00FF $IdleAnimations_80227968 $DefenseTable_802279DC 00001000 00000000 00000000 00000000
    00020000 020C3D00 00EC00FF 00000000 $DefenseTable_802279F0 00000000 00000000 00000000 00000000
    00020000 032D0000 BA1A00FF 00000000 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
    00120003 04000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
    00120003 05000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
    00120003 06000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
    00120003 07000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
    00120003 08000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
    00120003 09000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
}

#new:Actor $KentCKoopa
{
    % stats
    [Index]        B9b
    [Level]        55`b
    [MaxHP]        70`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80227A08
    % ai
    [PartsCount]    9`s
    [PartsTable]  $PartsTable_80227AB4
    [Script]      $Script_Init_80227C20
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  70`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         90`b  70`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -26`b  38`b % dx dy
    [StatusIcon]    2`b  63`b % dx dy
}

#new:Script $Script_Init_80227C20
{
    Call  8027D434      ( FFFFFF81 00000003 00000046 )
    Call  SetPartSize   ( .Actor:Self 00000003 0000001E 0000001E )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228A7C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80227DD4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227E08 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80227D2C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 0047001C )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000014 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
    Return
    End
}

#new:Script $Script_NextTurn_80227D2C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_80227DD4
{
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80227E08
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[D] )
    Switch  *Var[D]
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoNormalHit
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BurnHit % E
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Set   *Var[0]  00000001
                Set   *Var[1]  00470015
                Set   *Var[2]  00470016
                ExecWait  DoBurnHit
            Else
                Set   *Var[0]  00000001
                Set   *Var[1]  00470017
                Set   *Var[2]  00470018
                ExecWait  DoBurnHit
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Set   *Var[0]  00000001
                Set   *Var[1]  00470015
                Set   *Var[2]  00470016
            Else
                Set   *Var[0]  00000001
                Set   *Var[1]  00470017
                Set   *Var[2]  00470018
            EndIf
            ExecWait  DoBurnHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  *Var[2]
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  DoNormalHit
            Else
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  $Script_8022B158
            EndIf
        Case  ==  .Event:SpinSmashDeath % 21
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  DoNormalHit
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  DoDeath
                Return
            Else
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                ExecWait  $Script_8022B204
                Return
            EndIf
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00470009
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0047001A
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:Immune % 19
            Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00470009
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[2] )
                If  *Var[2]  ==  00000000
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
                    Wait  8`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0047001A
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Set   *Var[1]  00470001
            Else
                Set   *Var[1]  0047001A
            EndIf
            Set   *Var[0]  00000001
            ExecWait  DoImmune
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8022AD84
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[1]  00470001
                SetConst  *Var[0]  00000001
                ExecWait  DoRecover
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0047001A
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:FlipTrigger % D
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00470012
                ExecWait  DoNormalHit
                Return
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000004 *Var[0] )
            EndIf
            Call  80269E80  ( *Var[0] )
            If  *Var[0]  ==  00000016
                Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  GetBattleFlags    ( *Var[D] )
                If  *Var[D]  &  00000020
                    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
                EndIf
                ExecWait  $Script_FlipOver_KentC
            Else
                Call  GetBattleFlags    ( *Var[D] )
                If  *Var[D]  &  00000020
                    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
                    Call  GetLastDamage ( .Actor:Self *Var[0] )
                    If  *Var[0]  >  00000000
                        SetConst  *Var[0]  00000001
                        SetConst  *Var[1]  0047001C
                        ExecWait  DoNormalHit
                    Else
                        SetConst  *Var[0]  00000001
                        SetConst  *Var[1]  00470009
                        ExecWait  DoImmune
                        Call  GetStatusFlags    ( .Actor:Self *Var[2] )
                        If  *Var[2]  ==  00000000
                            Wait  20`
                            Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
                            Wait  8`
                        EndIf
                    EndIf
                Else
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0047001C
                    ExecWait  DoNormalHit
                EndIf
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80228A7C
{
    Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseIdleAnimation  ( .Actor:Self .False )
        Call  EnableIdleScript  ( .Actor:Self 00000000 )
        Call  UseCamPreset      ( 0000000E )
        Call  SetBattleCamZoom  ( 000000C8 )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000019 )
        Call  GetActorVar       ( .Actor:Self 00000002 *Var[0] )
        Sub   *Var[0]  00000001
        Call  SetActorVar       ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  >  00000000
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000024
            Add   *Var[1]  00000012
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
            Loop  00000005
                Call  PlayEffect    ( ~FX:Sweat:Large *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  5`
            EndLoop
            Wait  30`
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Else
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000024
            Add   *Var[1]  00000012
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
            Loop  00000005
                Call  PlayEffect    ( ~FX:Sweat:Large *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  5`
            EndLoop
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  30`
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 00470019 )
            Thread
                Wait  3`
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000001B 00000000 )
                Else
                    Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                EndIf
                Set   *Var[0]  00000000
                Loop  00000005
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  !&  00080000
                Call  $Function_80218B50    ( 00000050 0000000E )
                Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
            EndIf
            Wait  3`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
            Wait  10`
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279DC )
            Call  SetEnemyTargetOffset      ( .Actor:Self 00000001 00000000 0000003C )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
            Call  SetPartFlags      ( .Actor:Self 00000002 00020004 )
            Call  SetPartFlags      ( .Actor:Self 00000001 00800004 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80227968 )
            Call  $Function_80218BA8        ( FFFFFFE6 00000026 00000002 0000003F )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000001 0047001C )
        EndIf
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000032
        Call  GetStatusFlags    ( .Actor:Partner *Var[0] )
        If  *Var[0]  !&  01000000
            ExecWait  $Script_ShellToss_KentC
        Else
            ExecWait  $Script_Tackle_KentC
        EndIf
    Else
        ExecWait  $Script_Tackle_KentC
    EndIf
    Return
    End
}

#new:Script $Script_ShellToss_KentC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 00000014 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000019 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 0047000B )
    Wait  10`
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000004
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  3`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  2`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000370 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047000A )
    Wait  10`
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
            Call  EnemyTestTarget   ( .Actor:Self *Var[B] ~Flags:DamageType:0 00000000 00000003 00000010 )
            Switch  *Var[B]
                Case  ==  .HitResult:Miss % 6
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000001E )
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000028
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
                    Call  SetGoalPos    ( .Actor:Self FFFFFF10 00000000 *Var[2] )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetActorPos   ( .Actor:Self 000000F0 00000000 *Var[2] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  ResetAllActorSounds   ( .Actor:Self )
                    Call  StopSound     ( 00000370 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
                    Wait  8`
                    Call  YieldTurn ( )
                    Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
                    Call  EnableIdleScript  ( .Actor:Self 00000001 )
                    Call  UseIdleAnimation  ( .Actor:Self .True )
                    Return
                Default
                    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                    If  *Var[0]  !&  0435D000
                        Call  UseIdleAnimation  ( .Actor:Player .False )
                        Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
                    EndIf
                    Call  UseCamPreset      ( 00000013 )
                    Call  SetBattleCamTarget    ( FFFFFFE7 0000003C 00000000 )
                    Call  SetBattleCamZoom  ( 000001CC )
                    Call  SetBattleCamOffsetZ   ( 00000000 )
                    Call  MoveBattleCamOver ( 00000032 )
                    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                    If  *Var[3]  !&  00080000
                        Add   *Var[0]  00000020
                    Else
                        Add   *Var[0]  0000000C
                    EndIf
                    Set   *Var[1]  00000000
                    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    If  *Var[A]  ==  .HitResult:Lucky % 5
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                    EndIf
                    Set   *Var[A]  00000001
            EndSwitch
        EndCaseGroup
        Default
            Call  UseCamPreset      ( 00000013 )
            Call  SetBattleCamTarget    ( FFFFFFE7 0000003C 00000000 )
            Call  SetBattleCamZoom  ( 000001CC )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  MoveBattleCamOver ( 00000032 )
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  GetStatusFlags    ( .Actor:Player *Var[0] )
            If  *Var[0]  !&  0435D000 % 435D000
                Call  SetAnimation  ( .Actor:Player 00000000 0001002B )
            EndIf
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  !&  00080000
                Add   *Var[0]  00000020
            Else
                Add   *Var[0]  0000000C
            EndIf
            Set   *Var[1]  00000000
            Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetStatusFlags    ( .Actor:Self *Var[E] )
            If  *Var[E]  !&  00080000
                Call  80269EAC  ( 00000018 )
            EndIf
            Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
            Set   *Var[A]  00000000
            If  *Var[E]  !&  00080000
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  !&  80000000
                    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                    If  *Var[0]  !&  00100000
                        Set   *Var[A]  00000001
                    EndIf
                EndIf
            EndIf
    EndSwitch
    If  *Var[A]  !=  00000000
        Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000020
        Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
        Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  RunToGoal ( .Actor:Self 00000000 .False )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  80269EAC  ( 00000019 )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
        Call  GetBattleFlags    ( *Var[0] )
        If  *Var[0]  !&  80000000 % 80000000
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self FFFFFF10 00000000 *Var[2] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetActorPos   ( .Actor:Self 000000F0 00000000 *Var[2] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  StopSound     ( 00000370 )
            Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
            Wait  8`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Else
            Call  UseCamPreset  ( 00000013 )
            Call  SetBattleCamTarget    ( FFFFFFD3 0000003C 00000000 )
            Call  SetBattleCamZoom      ( 000001CC )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  MoveBattleCamOver     ( 0000001E )
        EndIf
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  !&  00080000
            Call  $Function_80218B50    ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Add   *Var[0]  00000010
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  !&  00080000
            Call  $Function_80218B50    ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Add   *Var[0]  0000000A
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  !&  00080000
            Call  $Function_80218B50    ( 00000050 0000000E )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  StopSound ( 00000370 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
    Wait  8`
    Call  YieldTurn ( )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  00470004
    ExecWait  DoReturnHome
    Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Tackle_KentC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 00000118 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00470003 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self 000003E7 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
            Thread
                Wait  7`
                Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
                Wait  4`
                Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000
                    Call  $Function_80218B50    ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Sub   *Var[0]  0000000F
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000C .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000
                    Call  $Function_80218B50    ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Sub   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000
                    Call  $Function_80218B50    ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Wait  8`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Set   *Var[3]  00000000
            Loop  0000000C
                Add   *Var[3]  0000000F
                Call  SetActorYaw   ( .Actor:Self *Var[3] )
                Wait  1`
            EndLoop
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00470004 )
            Call  SetPartYaw    ( .Actor:Self 00000001 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Set   *Var[3]  000000B4
            Loop  0000000F
                Sub   *Var[3]  0000000C
                Call  SetActorYaw   ( .Actor:Self *Var[3] )
                Wait  1`
            EndLoop
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
    Thread
        Wait  5`
        Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
        Wait  2`
        Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 0000000E .False .True .False )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[F] )
    If  *Var[F]  !&  00080000
        Call  80269EAC  ( 00000018 )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 0000FFFF 00000000 0000000A 00000020 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000001E )
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000 % 80000000
                Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                If  *Var[0]  !&  00100000 % 100000
                    Call  GetStatusFlags    ( .Actor:Self *Var[E] )
                    If  *Var[E]  !&  00080000
                        Call  LandJump  ( .Actor:Self )
                        Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
                    EndIf
                EndIf
            EndIf
            Thread
                Call  $Function_80218B50    ( 00000050 0000000E )
                Call  GetStatusFlags        ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000
                    Call  $Function_80218B50    ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000C .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000
                    Call  $Function_80218B50    ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000
                    Call  $Function_80218B50    ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Wait  8`
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            ExecWait  $Script_8022AD84
        Case  ==  00000003 % 3
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022AD84
{
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  00470004
    ExecWait  DoReturnHome
    Return
    End
}

#new:Script $Script_FlipOver_KentC
{
    Call  SetEnemyTargetOffset  ( .Actor:Self 00000001 00000000 00000028 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279F0 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802279B4 )
    Call  $Function_80218BA8    ( FFFFFFE8 0000002F 00000017 00000025 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047001C )
    Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
    Call  SetActorVar       ( .Actor:Self 00000001 00470012 )
    Thread
        Wait  4`
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000023 00000000 )
        Else
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
        EndIf
        Set   *Var[0]  00000000
        Loop  00000005
            Sub   *Var[0]  00000012
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    UseIntBuffer  $IntTable_80227910
    Loop  00000016
        Get1Int  *Var[0]
        Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
        If  *Var[0]  ==  00000000
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  !&  00080000
                    Call  $Function_80218B50    ( 00000050 0000000E )
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
        EndIf
        Wait  1`
    EndLoop
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0047001D )
    Wait  1`
    Call  SetAnimation      ( .Actor:Self 00000001 0047001E )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
    Call  SetPartFlags      ( .Actor:Self 00000002 00000004 )
    Call  SetPartFlags      ( .Actor:Self 00000001 00020004 )
    Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
    Wait  8`
    Return
    End
}

#new:Script $Script_8022B158
{
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Set   *Var[A]  00000005
    ExecWait  $Script_8022B2E8
    Set   *Var[2]  00000000
    Loop  00000024
        Add   *Var[2]  0000001E
        Call  SetActorYaw   ( .Actor:Self *Var[2] )
        Wait  1`
    EndLoop
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_8022B204
{
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Set   *Var[A]  00000000
    ExecWait  $Script_8022B2E8
    Set   *Var[2]  00000000
    Loop  00000030
        Add   *Var[2]  0000001E
        Call  SetActorYaw   ( .Actor:Self *Var[2] )
        Wait  1`
    EndLoop
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Wait  10`
    Set   *Var[0]  00000001
    Set   *Var[1]  FFFFFFFF
    ExecWait  DoDeath
    Return
    End
}

#new:Script $Script_8022B2E8
{
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  &  00080000
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[3] )
    Call  GetLastDamage ( .Actor:Self *Var[4] )
    If  *Var[4]  >  *Var[3]
        Set   *Var[4]  *Var[3]
    EndIf
    If  *Var[4]  >  00000006
        Set   *Var[4]  00000006
    EndIf
    If  *Var[4]  >  00000000
        Thread
            Sub   *Var[3]  *Var[4]
            Call  SetActorVar   ( .Actor:Self 00000003 *Var[3] )
            Set   *Var[5]  00000004
            Loop  *Var[4]
                Exec  $Script_8022B444
                Add   *Var[5]  00000001
                Wait  *Var[A]
            EndLoop
        EndThread
    EndIf
    Return
    End
}

#new:Script $Script_8022B444
{
    Call  PlaySoundAtPart   ( .Actor:Self *Var[5] 00000212 )
    Call  GetActorPos       ( .Actor:Self *Var[6] *Var[7] *Var[8] )
    Call  SetPartPos        ( .Actor:Self *Var[5] *Var[6] 00000023 *Var[8] )
    Call  $Function_80218C74    ( *Var[6] *Var[8] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  SetPartFlagBits   ( .Actor:Self *Var[5] 00000001 .False )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[5] *Fixed[1.0] )
    Call  JumpPartTo        ( .Actor:Self *Var[5] *Var[0] 00000000 *Var[1] 00000012 .True )
    Call  JumpPartTo        ( .Actor:Self *Var[5] *Var[2] 00000000 *Var[3] 00000009 .True )
    Wait  10`
    Loop  0000000A
        Call  SetPartFlagBits   ( .Actor:Self *Var[5] 00000001 .False )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self *Var[5] 00000001 .True )
        Wait  1`
    EndLoop
    Call  PlaySoundAtPart   ( .Actor:Self *Var[5] 00000211 )
    Call  AddCoin   ( 00000001 )
    Return
    End
}

PADDING: 8022B5E8 to 8022B5F0 (004A0788 to 004A0790)
00000000 00000000

#new:Script $Script_8022B5F0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  TranslateModel    ( *Var[A] 00000000 00000002 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000002 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
    Wait  5`
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022B6F8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000013
    Exec  $Script_8022B5F0
    Set   *Var[0]  00000014
    Exec  $Script_8022B5F0
    Set   *Var[0]  00000015
    Exec  $Script_8022B5F0
    Set   *Var[0]  00000016
    Exec  $Script_8022B5F0
    Set   *Var[0]  00000017
    Exec  $Script_8022B5F0
    Set   *Var[0]  00000018
    Exec  $Script_8022B5F0
    Return
    End
}

#new:Script $Script_AfterBattle_8022B7C0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022B7D0
{
    ~Model:nok_bt01:ha3
    ~Model:nok_bt01:hap
    ~Model:nok_bt01:kusa3
    00000000
}

#new:Stage $Stage_8022B7E0
{
    $ASCII_8022BE64  % nok_tex
    $ASCII_8022BE54  % nok_bt01_shape
    $ASCII_8022BE44  % nok_bt01_hit
    $Script_BeforeBattle_8022B6F8
    $Script_AfterBattle_8022B7C0
    $ASCII_8022BE3C  % nok_bg
    $ForegroundModelList_8022B7D0
    00000000
    00000000
    00000000
}

PADDING: 8022B808 to 8022B810 (004A09A8 to 004A09B0)
00000000 00000000

#new:Script $Script_8022B810
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  TranslateModel    ( *Var[A] 00000000 00000002 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000002 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
    Wait  5`
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022B918
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Thread
        Set   *Var[0]  00000013
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  00000014
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  00000015
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  00000016
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  00000017
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  00000018
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  00000019
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  0000001A
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  0000001B
        Exec  $Script_8022B810
        Wait  5`
        Set   *Var[0]  0000001C
        Exec  $Script_8022B810
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8022BACC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022BADC
{
    ~Model:nok_bt02:ha3
    ~Model:nok_bt02:hap
    ~Model:nok_bt02:kusa3
    00000000
}

#new:Stage $Stage_8022BAEC
{
    $ASCII_8022BE94  % nok_tex
    $ASCII_8022BE84  % nok_bt02_shape
    $ASCII_8022BE74  % nok_bt02_hit
    $Script_BeforeBattle_8022B918
    $Script_AfterBattle_8022BACC
    $ASCII_8022BE6C  % nok_bg
    $ForegroundModelList_8022BADC
    00000000
    00000000
    00000000
}

PADDING: 8022BB14 to 8022BB20 (004A0CB4 to 004A0CC0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022BB20
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8022BB40
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022BB50
{
    ~Model:nok_bt03:ha3
    ~Model:nok_bt03:hap
    00000000
}

#new:Stage $Stage_8022BB5C
{
    $ASCII_8022BEC4  % nok_tex
    $ASCII_8022BEB4  % nok_bt03_shape
    $ASCII_8022BEA4  % nok_bt03_hit
    $Script_BeforeBattle_8022BB20
    $Script_AfterBattle_8022BB40
    $ASCII_8022BE9C  % nok_bg
    $ForegroundModelList_8022BB50
    00000000
    00000000
    00000000
}

PADDING: 8022BB84 to 8022BB90 (004A0D24 to 004A0D30)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022BB90
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8022BBB0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022BBC0
{
    ~Model:nok_bt04:ueki2
    ~Model:nok_bt04:ueki1
    ~Model:nok_bt04:kabu2
    ~Model:nok_bt04:kabu1
    ~Model:nok_bt04:kusa3
    00000000
}

#new:Stage $Stage_8022BBD8
{
    $ASCII_8022BEF4  % nok_tex
    $ASCII_8022BEE4  % nok_bt04_shape
    $ASCII_8022BED4  % nok_bt04_hit
    $Script_BeforeBattle_8022BB90
    $Script_AfterBattle_8022BBB0
    $ASCII_8022BECC  % nok_bg
    $ForegroundModelList_8022BBC0
    00000000
    00000000
    00000000
}

#new:SJIS $SJIS_8022BC00
{
    ゼニノコー % zeninoko-
}

#new:SJIS $SJIS_8022BC0C
{
    チョロボンx4 % chorobonx4
}

#new:SJIS $SJIS_8022BC1C
{
    チョロボンx2 % chorobonx2
}

#new:SJIS $SJIS_8022BC2C
{
    チョロボン % chorobon
}

#new:SJIS $SJIS_8022BC38
{
    パタパタ、ノコノコ、トゲクリボーx2 % patapata,nokonoko,togekuribo-x2
}

#new:SJIS $SJIS_8022BC5C
{
    パタパタ、ノコノコ、トゲクリボー % patapata,nokonoko,togekuribo-
}

#new:SJIS $SJIS_8022BC80
{
    パタパタ、ノコノコ % patapata,nokonoko
}

#new:SJIS $SJIS_8022BC94
{
    パタパタx2 % patapatax2
}

#new:SJIS $SJIS_8022BCA0
{
    ノコノコx2、トゲクリボー,パタクリボー % nokonokox2,togekuribo-,patakuribo-
}

#new:SJIS $SJIS_8022BCC8
{
    ノコノコ、トゲクリボー,パタクリボー % nokonoko,togekuribo-,patakuribo-
}

#new:SJIS $SJIS_8022BCEC
{
    ノコノコ、パタクリボーx2 % nokonoko,patakuribo-x2
}

#new:SJIS $SJIS_8022BD08
{
    ノコノコ、トゲクリボーx2 % nokonoko,togekuribo-x2
}

#new:SJIS $SJIS_8022BD24
{
    ノコノコx2、トゲクリ % nokonokox2,togekuri
}

#new:SJIS $SJIS_8022BD3C
{
    ノコノコ、トゲクリボー % nokonoko,togekuribo-
}

#new:SJIS $SJIS_8022BD54
{
    ノコノコx３ % nokonokox3
}

#new:SJIS $SJIS_8022BD60
{
    ノコノコx２ % nokonokox2
}

#new:SJIS $SJIS_8022BD6C
{
    ノコノコ、クリボー % nokonoko,kuribo-
}

#new:SJIS $SJIS_8022BD80
{
    トゲクリボーx４ % togekuribo-x4
}

#new:SJIS $SJIS_8022BD90
{
    トゲクリボーx３ % togekuribo-x3
}

#new:SJIS $SJIS_8022BDA0
{
    トゲクリボー、クリボーx2 % togekuribo-,kuribo-x2
}

#new:SJIS $SJIS_8022BDBC
{
    トゲクリボーx２ % togekuribo-x2
}

#new:SJIS $SJIS_8022BDCC
{
    トゲクリボー、パタクリボー % togekuribo-,patakuribo-
}

#new:SJIS $SJIS_8022BDE8
{
    パタクリボーx２ % patakuribo-x2
}

#new:SJIS $SJIS_8022BDF8
{
    クリボー,トゲクリボー % kuribo-,togekuribo-
}

#new:SJIS $SJIS_8022BE10
{
    クリボーx２ % kuribo-x2
}

#new:ASCII $ASCII_8022BE1C
{
    "nok_04"
}

#new:ASCII $ASCII_8022BE24
{
    "nok_03"
}

#new:ASCII $ASCII_8022BE2C
{
    "nok_02"
}

#new:ASCII $ASCII_8022BE34
{
    "nok_01"
}

#new:ASCII $ASCII_8022BE3C
{
    "nok_bg"
}

#new:ASCII $ASCII_8022BE44
{
    "nok_bt01_hit"
}

#new:ASCII $ASCII_8022BE54
{
    "nok_bt01_shape"
}

#new:ASCII $ASCII_8022BE64
{
    "nok_tex"
}

#new:ASCII $ASCII_8022BE6C
{
    "nok_bg"
}

#new:ASCII $ASCII_8022BE74
{
    "nok_bt02_hit"
}

#new:ASCII $ASCII_8022BE84
{
    "nok_bt02_shape"
}

#new:ASCII $ASCII_8022BE94
{
    "nok_tex"
}

#new:ASCII $ASCII_8022BE9C
{
    "nok_bg"
}

#new:ASCII $ASCII_8022BEA4
{
    "nok_bt03_hit"
}

#new:ASCII $ASCII_8022BEB4
{
    "nok_bt03_shape"
}

#new:ASCII $ASCII_8022BEC4
{
    "nok_tex"
}

#new:ASCII $ASCII_8022BECC
{
    "nok_bg"
}

#new:ASCII $ASCII_8022BED4
{
    "nok_bt04_hit"
}

#new:ASCII $ASCII_8022BEE4
{
    "nok_bt04_shape"
}

#new:ASCII $ASCII_8022BEF4
{
    "nok_tex"
}

PADDING: 8022BEFC to 8022BF00 (004A109C to 004A10A0)
00000000

