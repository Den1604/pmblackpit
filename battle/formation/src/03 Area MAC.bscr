% Script File: 03 Area MAC.bscr
% Decoded from: 464490 to 47F0B0 (03 Area MAC)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (0046455C to 00464560)
00000000

#new:Function $Function_802180D0
{
	ADDIU     V1, R0, B
	LIA       V0, $End[2C]
	.oC
	SW        R0, 0 (V0)
	ADDIU     V1, V1, FFFF
	BGEZ      V1, .oC
	ADDIU     V0, V0, FFFC
	ADDIU     V0, R0, FFFF
	SAW       V0, $End[30]
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80218100
{
	ADDIU     SP, SP, FFA0
	SW        S5, 54 (SP)
	COPY      S5, A0
	SW        S4, 50 (SP)
	LIA       S4, 8010F290
	LIA       A1, $End[30]
	SW        RA, 58 (SP)
	SW        S3, 4C (SP)
	SW        S2, 48 (SP)
	SW        S1, 44 (SP)
	SW        S0, 40 (SP)
	LW        V0, 0 (A1)
	LW        S3, 98 (S5)
	BGEZ      V0, .o54
	ADDIU     V1, R0, 1
	ADDIU     V0, R0, 2
	SLLV      A0, S3, V0
	BEQ       R0, R0, .o1D0
	SW        S3, 0 (A1)
	.o54
	BEQ       V0, S3, .o88
	SLL       V1, S3, 2
	LIA       V0, $End[0]
	ADDU      A0, V1, V0
	LW        V0, 0 (A0)
	BNE       V0, R0, .o8C
	ADDIU     S1, R0, B
	ADDIU     V0, R0, 2
	ADDIU     V1, R0, 1
	SW        S3, 0 (A1)
	BEQ       R0, R0, .o1DC
	SW        V1, 0 (A0)
	.o88
	ADDIU     S1, R0, B
	.o8C
	ADDIU     V0, SP, 3C
	.o90
	SW        S1, 0 (V0)
	ADDIU     S1, S1, FFFF
	BGEZ      S1, .o90
	ADDIU     V0, V0, FFFC
	CLEAR     S1
	ADDIU     S2, SP, 10
	.oA8
	JAL       ~Func:rand_int
	ADDIU     A0, R0, B
	ADDIU     A0, R0, B
	JAL       ~Func:rand_int
	COPY      S0, V0
	SLL       S0, S0, 2
	ADDU      S0, S2, S0
	SLL       V0, V0, 2
	ADDU      V0, S2, V0
	LW        A0, 0 (S0)
	LW        V1, 0 (V0)
	ADDIU     S1, S1, 1
	SW        V1, 0 (S0)
	SW        A0, 0 (V0)
	SLTI      V0, S1, 64
	BNE       V0, R0, .oA8
	ADDIU     T0, R0, 5
	CLEAR     S1
	ADDIU     A3, R0, A
	ADDIU     A2, R0, B
	LIA       A1, $End[0]
	ADDIU     V1, SP, 10
	.o104
	LW        A0, 0 (V1)
	SLL       V0, A0, 3
	ADDU      V0, S4, V0
	LBU       V0, 14 (V0)
	BEQL      V0, R0, .o154
	ADDIU     S1, S1, 1
	BEQL      A0, T0, .o154
	ADDIU     S1, S1, 1
	BEQL      A0, A3, .o154
	ADDIU     S1, S1, 1
	BEQL      A0, A2, .o154
	ADDIU     S1, S1, 1
	BEQL      A0, S3, .o154
	ADDIU     S1, S1, 1
	SLL       V0, A0, 2
	ADDU      V0, V0, A1
	LW        V0, 0 (V0)
	BEQ       V0, R0, .o164
	SLTI      V0, S1, C
	ADDIU     S1, S1, 1
	.o154
	SLTI      V0, S1, C
	BNE       V0, R0, .o104
	ADDIU     V1, V1, 4
	SLTI      V0, S1, C
	.o164
	BEQ       V0, R0, .o1A0
	SLL       V1, A0, 2
	ADDIU     V0, R0, 1
	STW       V0, V1 ($End[0])
	SLL       V0, A0, 3
	ADDU      V0, S4, V0
	SAW       A0, $End[30]
	SW        A0, 98 (S5)
	LB        V1, 15 (V0)
	ADDIU     V0, R0, 2
	BEQ       R0, R0, .o1DC
	SW        V1, 9C (S5)
	.o1A0
	ADDIU     S1, R0, B
	LIA       V0, $End[2C]
	.o1AC
	SW        R0, 0 (V0)
	ADDIU     S1, S1, FFFF
	BGEZ      S1, .o1AC
	ADDIU     V0, V0, FFFC
	ADDIU     V0, R0, 2
	SLLV      A0, S3, V0
	ADDIU     V1, R0, 1
	SAW       S3, $End[30]
	.o1D0
	STW       V1, A0 ($End[0])
	.o1DC
	LW        RA, 58 (SP)
	LW        S5, 54 (SP)
	LW        S4, 50 (SP)
	LW        S3, 4C (SP)
	LW        S2, 48 (SP)
	LW        S1, 44 (SP)
	LW        S0, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80218300
{
	ADDIU     SP, SP, FFB8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        S0, 10 (SP)
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        A0, 148 (S4)
	LW        S2, C (S4)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S3, V0
	BEQ       S0, R0, .o8C
	ADDIU     S1, S3, C
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	JAL       ~Func:get_variable
	COPY      A0, S4
	SH        V0, 70 (S3)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	COPY      A0, S4
	SH        V0, 72 (S3)
	SW        R0, 74 (S4)
	SW        R0, 70 (S4)
	LH        V1, 72 (S3)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o8C
	ADDIU     V0, R0, 2
	SW        V0, 70 (S4)
	.o8C
	LW        V0, 70 (S4)
	BNE       V0, R0, .o470
	NOP
	LWC1      F0, 144 (S3)
	LWC1      F24, C (S1)
	LWC1      F26, 14 (S1)
	SWC1      F0, 0 (S1)
	LWC1      F0, 148 (S3)
	MFC1      A2, F24
	MFC1      A3, F26
	LWC1      F22, 0 (S1)
	SWC1      F0, 4 (S1)
	LWC1      F20, 14C (S3)
	MOV.S     F12, F22
	MOV.S     F14, F20
	JAL       ~Func:atan2
	SWC1      F20, 8 (S1)
	MOV.S     F12, F22
	MFC1      A2, F24
	MFC1      A3, F26
	MOV.S     F14, F20
	JAL       ~Func:dist2D
	SWC1      F0, 48 (S1)
	LH        V0, 64 (S1)
	MOV.S     F4, F0
	BNE       V0, R0, .o13C
	SWC1      F4, 4C (S1)
	LWC1      F0, 40 (S1)
	LWC1      F2, 40 (S1)
	DIV.S     F0, F4, F0
	TRUNC.W.S F10, F0
	MFC1      V1, F10
	NOP
	SLL       V0, V1, 10
	SRA       V0, V0, 10
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F2
	NOP
	MOV.S     F2, F4
	SH        V1, 64 (S1)
	BEQ       R0, R0, .o170
	SUB.S     F8, F2, F0
	.o13C
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LH        V0, 64 (S1)
	DIV.S     F2, F4, F2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 4C (S1)
	SWC1      F2, 40 (S1)
	SUB.S     F8, F4, F0
	.o170
	LH        V1, 64 (S1)
	BEQ       V1, R0, .o860
	ADDIU     V0, R0, 2
	LH        V0, 64 (S1)
	LWC1      F2, C (S1)
	LIO       AT, 40490FD0
	MTC1      AT, F0
	LWC1      F4, 0 (S1)
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	DIV.S     F0, F0, F6
	SUB.S     F2, F2, F4
	SWC1      F0, 3C (S1)
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F2, F2, F0
	LWC1      F0, 10 (S1)
	SWC1      F2, 30 (S1)
	LWC1      F2, 4 (S1)
	SW        R0, 44 (S1)
	SUB.S     F0, F0, F2
	LWC1      F4, 14 (S1)
	MOV.S     F2, F6
	DIV.S     F0, F0, F2
	SWC1      F0, 34 (S1)
	MOV.S     F0, F6
	DIV.S     F0, F8, F0
	LWC1      F2, 8 (S1)
	LH        V0, 66 (S1)
	SUB.S     F4, F4, F2
	LWC1      F2, 40 (S1)
	SLTI      V0, V0, 3
	ADD.S     F2, F2, F0
	DIV.S     F4, F4, F6
	SWC1      F4, 38 (S1)
	BEQ       V0, R0, .o320
	SWC1      F2, 40 (S1)
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o224
	DIV       V1, V0
	BREAK     1C00
	.o224
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o23C
	LUI       AT, 8000
	BNE       V1, AT, .o23C
	NOP
	BREAK     1800
	.o23C
	MFLO      V1
	LWC1      F8, 4C (S1)
	LIF       F3, 2.8125
	MTC1      R0, F2
	CVT.D.S   F0, F8
	SUB.D     F0, F0, F2
	LIF       F3, 2.375
	MTC1      R0, F2
	CVT.S.D   F8, F0
	CVT.D.S   F0, F8
	DIV.D     F0, F0, F2
	CVT.S.D   F8, F0
	LAD       F2, $ConstDouble_80232AF0
	CVT.D.S   F0, F8
	ADD.D     F0, F0, F2
	LIF       F2, 90.0
	CVT.S.D   F8, F0
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	LH        V1, 66 (S1)
	ADDIU     V0, R0, 2
	SWC1      F2, 24 (S1)
	SWC1      F8, 50 (S1)
	BNE       V1, V0, .o2D0
	SWC1      F0, 28 (S1)
	LAD       F2, $ConstDouble_80232AF8
	CVT.D.S   F0, F8
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	.o2D0
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	LWC1      F22, 3C (S1)
	SW        R0, 18 (S1)
	MUL.S     F12, F12, F0
	NOP
	SW        R0, 1C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80232B00
	BEQ       R0, R0, .o430
	CVT.D.S   F0, F0
	.o320
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o334
	DIV       V1, V0
	BREAK     1C00
	.o334
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o34C
	LUI       AT, 8000
	BNE       V1, AT, .o34C
	NOP
	BREAK     1800
	.o34C
	MFLO      V1
	LWC1      F8, 4C (S1)
	LIF       F3, 2.8125
	MTC1      R0, F2
	CVT.D.S   F0, F8
	SUB.D     F0, F0, F2
	LIF       F3, 2.375
	MTC1      R0, F2
	CVT.S.D   F8, F0
	CVT.D.S   F0, F8
	DIV.D     F0, F0, F2
	CVT.S.D   F8, F0
	LAD       F2, $ConstDouble_80232B08
	CVT.D.S   F0, F8
	ADD.D     F0, F0, F2
	LIF       F2, 90.0
	CVT.S.D   F8, F0
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	LH        V1, 66 (S1)
	ADDIU     V0, R0, 4
	SWC1      F2, 24 (S1)
	SWC1      F8, 50 (S1)
	BNE       V1, V0, .o3E4
	SWC1      F0, 28 (S1)
	LIF       F3, 1.90625
	MTC1      R0, F2
	CVT.D.S   F0, F8
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	.o3E4
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	LWC1      F22, 3C (S1)
	SW        R0, 18 (S1)
	MUL.S     F12, F12, F0
	NOP
	SW        R0, 1C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80232B10
	CVT.D.S   F0, F0
	.o430
	MUL.D     F0, F0, F2
	NOP
	MUL.D     F0, F0, F22
	NOP
	ADD.D     F0, F0, F22
	ADD.D     F20, F20, F0
	CVT.S.D   F20, F20
	SWC1      F20, 44 (S1)
	ADDIU     A0, R0, FF81
	LW        A2, 58 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 2081
	ADDIU     V0, R0, 1
	SW        V0, 70 (S4)
	.o470
	LW        V1, 70 (S4)
	ADDIU     V0, R0, 2
	BEQ       V1, V0, .o6D0
	ADDIU     V0, R0, 1
	SLTI      V0, V1, 3
	BEQ       V0, R0, .o49C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o4B0
	CLEAR     V0
	BEQ       R0, R0, .o860
	NOP
	.o49C
	ADDIU     V0, R0, 3
	BEQ       V1, V0, .o78C
	CLEAR     V0
	BEQ       R0, R0, .o860
	NOP
	.o4B0
	LWC1      F2, 44 (S1)
	LIO       AT, 3FC90FD0
	MTC1      AT, F0
	NOP
	C.LT.S    F0, F2
	NOP
	BC1F      .o4E0
	ADDIU     A0, R0, FF81
	LW        A2, 5C (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	.o4E0
	LWC1      F6, 0 (S1)
	LWC1      F0, 30 (S1)
	LWC1      F4, 4 (S1)
	LWC1      F22, 144 (S3)
	ADD.S     F6, F6, F0
	LWC1      F0, 34 (S1)
	LWC1      F2, 38 (S1)
	ADD.S     F4, F4, F0
	LWC1      F0, 8 (S1)
	LWC1      F20, 148 (S3)
	ADD.S     F0, F0, F2
	SWC1      F6, 0 (S1)
	SWC1      F4, 4 (S1)
	SWC1      F0, 8 (S1)
	LWC1      F0, 148 (S3)
	MOV.S     F2, F6
	SWC1      F0, 18 (S1)
	SWC1      F2, 144 (S3)
	JAL       ~Func:sin_rad
	LWC1      F12, 44 (S1)
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 4 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, 148 (S3)
	LWC1      F0, 8 (S1)
	SWC1      F0, 14C (S3)
	LWC1      F2, 10 (S1)
	LWC1      F0, 148 (S3)
	C.LT.S    F0, F2
	NOP
	BC1F      .o580
	MOV.S     F12, F22
	LH        V0, 64 (S1)
	SLTI      V0, V0, 3
	BNEL      V0, R0, .o57C
	SWC1      F2, 148 (S3)
	MOV.S     F12, F22
	.o57C
	LWC1      F0, 148 (S3)
	.o580
	LW        A2, 144 (S3)
	NEG.S     F0, F0
	MFC1      A3, F0
	JAL       ~Func:atan2
	NEG.S     F14, F20
	NEG.S     F0, F0
	SWC1      F0, 164 (S3)
	LH        V0, 66 (S1)
	LWC1      F0, 148 (S3)
	SLTI      V0, V0, 3
	BEQ       V0, R0, .o5F8
	SWC1      F0, 1C (S1)
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	MUL.S     F12, F12, F0
	NOP
	LWC1      F22, 3C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80232B18
	BEQ       R0, R0, .o63C
	CVT.D.S   F0, F0
	.o5F8
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	MUL.S     F12, F12, F0
	NOP
	LWC1      F22, 3C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80232B20
	CVT.D.S   F0, F0
	.o63C
	MUL.D     F0, F0, F2
	NOP
	MUL.D     F0, F0, F22
	NOP
	ADD.D     F0, F0, F22
	ADD.D     F20, F20, F0
	CVT.S.D   F20, F20
	SWC1      F20, 44 (S1)
	LWC1      F12, 24 (S1)
	LWC1      F0, 28 (S1)
	ADD.S     F12, F12, F0
	JAL       ~Func:clamp_angle
	SWC1      F12, 24 (S1)
	LHU       V0, 64 (S1)
	SWC1      F0, 24 (S1)
	ADDIU     V0, V0, FFFF
	SH        V0, 64 (S1)
	SLL       V0, V0, 10
	BNE       V0, R0, .o860
	CLEAR     V0
	LWC1      F0, 10 (S1)
	ADDIU     A0, R0, FF81
	SWC1      F0, 148 (S3)
	LWC1      F0, 18 (S1)
	LWC1      F2, 1C (S1)
	LW        A2, 60 (S1)
	SUB.S     F0, F0, F2
	LIO       AT, 3FE66666
	MTC1      AT, F2
	ADDIU     A1, R0, 1
	SWC1      F2, 3C (S1)
	NEG.S     F0, F0
	JAL       ~Func:set_animation
	SWC1      F0, 44 (S1)
	BEQ       R0, R0, .o860
	ADDIU     V0, R0, 1
	.o6D0
	SH        V0, 64 (S1)
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o6E8
	DIV       V1, V0
	BREAK     1C00
	.o6E8
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o700
	LUI       AT, 8000
	BNE       V1, AT, .o700
	NOP
	BREAK     1800
	.o700
	MFLO      V1
	LWC1      F2, 18 (S1)
	LWC1      F0, 1C (S1)
	LIO       AT, 3FE66666
	MTC1      AT, F8
	LWC1      F4, 1C (S1)
	SUB.S     F2, F2, F0
	LWC1      F0, 18 (S1)
	LIF       F6, 90.0
	SUB.S     F0, F0, F4
	SWC1      F8, 3C (S1)
	SWC1      F6, 24 (S1)
	NEG.S     F2, F2
	SWC1      F2, 44 (S1)
	LAD       F2, $ConstDouble_80232B28
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (S1)
	LWC1      F0, 144 (S3)
	SWC1      F0, 0 (S1)
	LWC1      F0, 148 (S3)
	SWC1      F0, 4 (S1)
	LWC1      F0, 14C (S3)
	ADDIU     V0, R0, 3
	SWC1      F0, 8 (S1)
	SW        V0, 70 (S4)
	.o78C
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F22
	NOP
	MUL.S     F12, F12, F22
	NOP
	LWC1      F20, 0 (S1)
	LIF       F24, 360.0
	CVT.D.S   F20, F20
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F12, 24 (S1)
	MUL.S     F12, F12, F22
	NOP
	LAD       F0, $ConstDouble_80232B30
	CVT.D.S   F2, F2
	DIV.D     F2, F2, F0
	ADD.D     F20, F20, F2
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       ~Func:sin_rad
	SWC1      F20, 0 (S1)
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F12, 24 (S1)
	LWC1      F0, 28 (S1)
	ADD.S     F12, F12, F0
	LWC1      F0, 4 (S1)
	SUB.S     F0, F0, F2
	SWC1      F12, 24 (S1)
	JAL       ~Func:clamp_angle
	SWC1      F0, 4 (S1)
	LWC1      F2, 0 (S1)
	SWC1      F0, 24 (S1)
	SWC1      F2, 144 (S3)
	LWC1      F0, 4 (S1)
	SWC1      F0, 148 (S3)
	LWC1      F0, 8 (S1)
	SWC1      F0, 14C (S3)
	LHU       V1, 64 (S1)
	ADDIU     V1, V1, FFFF
	SH        V1, 64 (S1)
	SLL       V1, V1, 10
	BEQ       V1, R0, .o860
	ADDIU     V0, R0, 1
	CLEAR     V0
	.o860
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80218B90
{
	ADDIU     SP, SP, FFC8
	SW        S2, 20 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S3, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o3C
	ADDIU     S3, S1, C
	SW        R0, 70 (S2)
	.o3C
	LW        V0, 70 (S2)
	BNE       V0, R0, .o64
	ADDIU     V0, R0, 1
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	SW        V0, 70 (S2)
	.o64
	LWC1      F0, 50 (S1)
	MTC1      R0, F20
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o90
	ADDIU     A0, R0, FF81
	LW        A2, 64 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	LWC1      F0, 50 (S1)
	.o90
	C.LT.S    F0, F20
	NOP
	BC1F      .oAC
	ADDIU     A0, R0, FF81
	LW        A2, 68 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	.oAC
	LWC1      F4, 10 (S1)
	LWC1      F0, 50 (S1)
	LW        A1, 4C (S1)
	ADD.S     F4, F4, F0
	LWC1      F2, 48 (S1)
	LW        A2, 54 (S1)
	SUB.S     F0, F0, F2
	COPY      A0, S3
	SWC1      F4, 10 (S1)
	JAL       ~Func:add_xz_vec3f
	SWC1      F0, 50 (S1)
	LWC1      F0, 10 (S1)
	LWC1      F2, 14 (S1)
	SWC1      F0, 148 (S1)
	LWC1      F0, C (S1)
	LWC1      F4, 148 (S1)
	SWC1      F2, 14C (S1)
	C.LT.S    F4, F20
	NOP
	BC1T      .o108
	SWC1      F0, 144 (S1)
	BEQ       R0, R0, .o134
	CLEAR     V0
	.o108
	LWC1      F0, 18C (S1)
	SWC1      F20, 148 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, 144 (S1)
	LW        A2, 148 (S1)
	LW        A3, 14C (S1)
	JAL       ~Func:play_movement_dust_effects
	ADDIU     A0, R0, 2
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 148
	ADDIU     V0, R0, 1
	.o134
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_80218CE4
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LH        A0, 428 (V0)
	COPY      A0, V0
	LW        V0, 0 (A0)
	ANDI      V0, V0, 800
	BNE       V0, R0, .o58
	NOP
	LBU       V0, 191 (A0)
	LW        V1, 88 (S0)
	SRL       V0, V0, 1
	ADDU      V1, V1, V0
	SW        V1, 88 (S0)
	LBU       V0, 191 (A0)
	SRL       V0, V0, 2
	BEQ       R0, R0, .o78
	ADDU      V1, V1, V0
	.o58
	LBU       V0, 191 (A0)
	LW        V1, 88 (S0)
	SRL       V0, V0, 1
	SUBU      V1, V1, V0
	SW        V1, 88 (S0)
	LBU       V0, 191 (A0)
	SRL       V0, V0, 2
	SUBU      V1, V1, V0
	.o78
	SW        V1, 88 (S0)
	LBU       V1, 191 (A0)
	LBU       A0, 190 (A0)
	SLT       V0, V1, A0
	BNEL      V0, R0, .o90
	COPY      V1, A0
	.o90
	ADDIU     V0, V1, 7E
	SW        V0, 90 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218D90
{
	ADDIU     SP, SP, FFD8
	SW        S0, 18 (SP)
	COPY      S0, A0
	LUI       A1, 42D4
	LUI       A2, 4310
	CLEAR     A0
	SW        RA, 20 (SP)
	SW        S1, 1C (SP)
	LW        S1, C (S0)
	LIF       F0, 1.0
	CLEAR     A3
	SW        R0, 14 (SP)
	JAL       80072110
	SWC1      F0, 10 (SP)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:set_variable
	COPY      A2, V0
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HEURISTIC
#new:Function $Function_80218DF4
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        V1, C (V0)
	LIF       F0, -1000.0
	NOP
	SWC1      F0, 8 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218E2C
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	COPY      A0, V0
	LW        V0, C (A0)
	LIF       F0, 144.0
	NOP
	SWC1      F0, 8 (V0)
	LW        V1, 0 (A0)
	ORI       V1, V1, 10
	SW        V1, 0 (A0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218E74
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218F40
{
	ADDIU     SP, SP, FFD8
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o44
	ADDIU     S2, S1, C
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	.o44
	LW        A1, 4C (S1)
	LW        A2, 54 (S1)
	JAL       ~Func:add_xz_vec3f
	COPY      A0, S2
	LWC1      F2, 4C (S1)
	LIF       F0, 4.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o8C
	CLEAR     A0
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	BEQ       R0, R0, .oA4
	LW        A3, 14 (S1)
	.o8C
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	LW        A3, 14 (S1)
	ADDIU     A0, R0, 1
	.oA4
	JAL       ~Func:play_movement_dust_effects
	NOP
	LWC1      F0, 40 (S2)
	LIF       F3, 1.9375
	MTC1      R0, F2
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	LWC1      F2, 0 (S2)
	CVT.S.D   F0, F0
	SWC1      F0, 40 (S2)
	SWC1      F2, 144 (S1)
	LWC1      F0, 4 (S2)
	SWC1      F0, 148 (S1)
	LWC1      F0, 8 (S2)
	SWC1      F0, 14C (S1)
	LWC1      F0, 40 (S2)
	LIF       F3, 1.875
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1T      .o10C
	ADDIU     V0, R0, 2
	CLEAR     V0
	.o10C
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80219064
{
	ADDIU     SP, SP, FFD8
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o44
	ADDIU     S2, S1, C
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	.o44
	LW        A1, 4C (S1)
	LW        A2, 54 (S1)
	JAL       ~Func:add_xz_vec3f
	COPY      A0, S2
	LWC1      F2, 4C (S1)
	LIF       F0, 4.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o8C
	CLEAR     A0
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	BEQ       R0, R0, .oA4
	LW        A3, 14 (S1)
	.o8C
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	LW        A3, 14 (S1)
	ADDIU     A0, R0, 1
	.oA4
	JAL       ~Func:play_movement_dust_effects
	NOP
	LWC1      F0, 40 (S2)
	LIF       F3, 1.9375
	MTC1      R0, F2
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	LWC1      F2, 0 (S2)
	CVT.S.D   F0, F0
	SWC1      F0, 40 (S2)
	SWC1      F2, 144 (S1)
	LWC1      F0, 4 (S2)
	SWC1      F0, 148 (S1)
	LWC1      F0, 8 (S2)
	SWC1      F0, 14C (S1)
	LWC1      F0, 40 (S2)
	LIF       F3, 1.875
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1T      .o10C
	ADDIU     V0, R0, 2
	CLEAR     V0
	.o10C
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80219188
{
	ADDIU     SP, SP, FFB8
	SW        RA, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o128
	ADDIU     S2, S1, C
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 20
	COPY      S0, V0
	ADDIU     V0, R0, 1
	ADDIU     A1, S1, 144
	ADDIU     A2, S1, 148
	SW        S0, 94 (S1)
	SW        V0, 4 (S0)
	SW        R0, 8 (S0)
	SW        V0, C (S0)
	SW        R0, 10 (S0)
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o84
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .o98
	SWC1      F0, 10 (SP)
	.o84
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o98
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LW        A2, 0 (A2)
	LW        A3, 0 (A3)
	JAL       800723B0
	CLEAR     A0
	ADDIU     A1, S1, 144
	SW        V0, 14 (S0)
	LB        V0, 210 (S1)
	ADDIU     V1, R0, A
	BEQ       V0, V1, .oE0
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .oF4
	SWC1      F0, 10 (SP)
	.oE0
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.oF4
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LUI       A2, C47A
	LW        A3, 0 (A3)
	JAL       800723B0
	ADDIU     A0, R0, 1
	SW        V0, 18 (S0)
	ADDIU     V0, R0, 1
	SW        V0, 0 (S0)
	LB        V0, 210 (S1)
	SW        V0, 1C (S0)
	.o128
	LW        S0, 88 (S2)
	LW        V0, 0 (S0)
	BEQ       V0, R0, .o458
	ADDIU     V0, R0, 2
	LW        V0, 4 (S0)
	BEQ       V0, R0, .o174
	ADDIU     V0, R0, 8
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o174
	NOP
	LW        V0, 8 (S0)
	ADDIU     V0, V0, F
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:clamp_angle
	SW        V0, 8 (S0)
	TRUNC.W.S F6, F0
	SWC1      F6, 8 (S0)
	.o174
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F12, 8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LIF       F2, 3.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LH        V0, 152 (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	TRUNC.W.S F6, F0
	MFC1      V1, F6
	NOP
	SLL       V0, V1, 18
	LWC1      F0, 148 (S1)
	SRA       V0, V0, 18
	SB        V1, 19A (S1)
	ADD.S     F0, F0, F2
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LH        V0, 150 (S1)
	ADD.S     F0, F0, F2
	ADDIU     V1, R0, A
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	CVT.D.S   F4, F0
	LWC1      F0, 144 (S1)
	LB        V0, 210 (S1)
	ADD.S     F22, F0, F2
	LAD       F0, $ConstDouble_80232B38
	BEQL      V0, V1, .o23C
	ADD.D     F0, F4, F0
	LIF       F1, 2.625
	MTC1      R0, F0
	NOP
	ADD.D     F0, F4, F0
	.o23C
	CVT.S.D   F20, F0
	LH        V0, 154 (S1)
	LWC1      F0, 14C (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LW        V0, C (S0)
	BEQ       V0, R0, .o3C0
	ADD.S     F24, F0, F2
	LW        V1, 10 (S0)
	BEQ       V1, R0, .o27C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o318
	NOP
	BEQ       R0, R0, .o3F8
	NOP
	.o27C
	LW        V0, 14 (S0)
	BNE       V0, R0, .o2DC
	ADDIU     V0, R0, A
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o2A4
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o2B8
	SWC1      F0, 10 (SP)
	.o2A4
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o2B8
	CLEAR     A0
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 14 (S0)
	.o2DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o2F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o2F8
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	BEQ       R0, R0, .o3B4
	LW        V0, 14 (S0)
	.o318
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o334
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o334
	LW        V0, 18 (S0)
	BNE       V0, R0, .o39C
	NOP
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o360
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o374
	SWC1      F0, 10 (SP)
	.o360
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o374
	ADDIU     A0, R0, 1
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 18 (S0)
	LW        V0, 18 (S0)
	.o39C
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 18 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	LW        V0, 18 (S0)
	.o3B4
	LW        V0, C (V0)
	BEQ       R0, R0, .o3F8
	SWC1      F24, C (V0)
	.o3C0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o3DC
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o3DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o3F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o3F8
	LB        V1, 210 (S1)
	LW        V0, 1C (S0)
	BEQ       V0, V1, .o454
	CLEAR     V0
	LW        V0, C (S0)
	BEQ       V0, R0, .o454
	CLEAR     V0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o430
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o430
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o44C
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o44C
	LB        V1, 210 (S1)
	CLEAR     V0
	.o454
	SW        V1, 1C (S0)
	.o458
	LW        RA, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80219604
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LW        A0, 94 (V0)
	LW        V1, 14 (A0)
	BEQ       V1, R0, .o2C
	SW        R0, 0 (A0)
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o2C
	LW        V1, 18 (A0)
	BEQ       V1, R0, .o44
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o44
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219658
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 94 (V0)
	SW        V0, 4 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802196A4
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 94 (V0)
	SW        V0, C (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802196F0
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 94 (V0)
	SW        V0, 10 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021973C
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	ADDIU     V0, R0, 1
	COPY      A1, A0
	COPY      A2, A0
	LAW       V1, 801512F0
	COPY      A3, A0
	JAL       ~Func:set_background_color_blend
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219780
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_GetPartner
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        S1, 14 (SP)
	LIA       S1, 8010F290
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LB        A2, 12 (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LB        V0, 12 (S1)
	LW        A1, 0 (S0)
	SLL       V0, V0, 3
	ADDU      V0, V0, S1
	LB        A2, 15 (V0)
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219824
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	COPY      S0, V0
	COPY      V1, V0
	ADDIU     S0, S0, FFFF
	SLTIU     V0, S0, 9
	BEQ       V0, R0, .oB0
	CLEAR     A0
	SLL       V0, S0, 2
	LTW       V0, V0 ($JumpTable_80232B40)
	JR        V0
	NOP
    % LBL: from $JumpTable_80232B40 , entry 0`
	LIA       A0, $SpecialFormation_80220524
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80232B40 , entry 1`
	LIA       A0, $SpecialFormation_80222274
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80232B40 , entry 2`
	LIA       A0, $SpecialFormation_8022336C
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80232B40 , entry 3`
	LIA       A0, $SpecialFormation_802243F4
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80232B40 , entry 8`
	LIA       A0, $SpecialFormation_80225958
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80232B40 , entry 5`
	LIA       A0, $SpecialFormation_80226960
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80232B40 , entry 6`
	LIA       A0, $SpecialFormation_802283F0
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80232B40 , entry 7`
	LIA       A0, $SpecialFormation_8022972C
    % LBL: from $JumpTable_80232B40 , entry 4`
	.oB0
	LB        V1, 1F1 (V1)
	ADDIU     V1, V1, A
	SW        V1, 8 (A0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802198F4 to 80219900 (00465D84 to 00465D90)
00000000 00000000 00000000

#new:Function $Function_80219900
{
	ADDIU     SP, SP, FFA0
	SW        S0, 20 (SP)
	COPY      S0, A0
	SW        RA, 28 (SP)
	SW        S1, 24 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	COPY      S1, V0
	ADDIU     A0, R0, 1
	BEQ       S1, A0, .o100
	SW        S1, 70 (S0)
	SLTI      V0, S1, 2
	BEQ       V0, R0, .o64
	ADDIU     V0, R0, 2
	BEQ       S1, R0, .o7C
	ADDIU     V0, R0, 8E
	BEQ       R0, R0, .o400
	NOP
	.o64
	BEQ       S1, V0, .o27C
	ADDIU     V0, R0, 3
	BEQ       S1, V0, .oBC
	ADDIU     V1, R0, 5B
	BEQ       R0, R0, .o400
	NOP
	.o7C
	LIF       F4, 142.0
	LIF       F30, -118.0
	ADDIU     V1, R0, FF8A
	SW        R0, 14 (SP)
	SWC1      F4, 10 (SP)
	SW        V0, 90 (S0)
	ADDIU     V0, R0, 2C
	SW        V0, 9C (S0)
	ADDIU     V0, R0, 3
	SW        R0, 94 (S0)
	SW        V1, 98 (S0)
	SW        V1, A0 (S0)
	BEQ       R0, R0, .oF0
	SW        V0, A4 (S0)
	.oBC
	LIF       F4, 91.0
	LIF       F30, -118.0
	ADDIU     V0, R0, FF8A
	SW        R0, 14 (SP)
	SWC1      F4, 10 (SP)
	SW        V1, 90 (S0)
	SW        R0, 94 (S0)
	SW        V0, 98 (S0)
	SW        V1, 9C (S0)
	SW        V0, A0 (S0)
	SW        S1, A4 (S0)
	.oF0
	SW        R0, A8 (S0)
	SW        R0, B0 (S0)
	BEQ       R0, R0, .o400
	SW        A0, 70 (S0)
	.o100
	LW        V0, A8 (S0)
	LW        V1, A4 (S0)
	ADDU      V0, V0, V1
	SW        V0, A8 (S0)
	SLTI      V0, V0, 2E
	BNE       V0, R0, .o124
	NOP
	ADDIU     V0, R0, 2D
	SW        V0, A8 (S0)
	.o124
	LWC1      F4, 90 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 10 (SP)
	LWC1      F4, 94 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	LIO       AT, 40C90FD0
	MTC1      AT, F26
	LWC1      F30, 98 (S0)
	CVT.S.W   F30, F30
	MUL.S     F12, F12, F26
	NOP
	LWC1      F28, 9C (S0)
	CVT.S.W   F28, F28
	LIF       F24, 360.0
	LWC1      F4, A0 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 18 (SP)
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	CVT.D.S   F0, F0
	LIF       F23, 1.875
	MTC1      R0, F22
	LWC1      F4, 10 (SP)
	SUB.D     F0, F22, F0
	CVT.D.S   F20, F4
	MUL.D     F20, F20, F0
	NOP
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	MUL.S     F0, F28, F0
	NOP
	LW        V0, A8 (S0)
	SLL       V0, V0, 1
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       ~Func:sin_rad
	SWC1      F20, 10 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	LIF       F2, 90.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 14 (SP)
	ADD.S     F4, F4, F0
	DIV.S     F12, F12, F24
	JAL       ~Func:sin_rad
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	SUB.D     F22, F22, F0
	CVT.D.S   F20, F30
	MUL.D     F20, F20, F22
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	LWC1      F4, 18 (SP)
	MUL.S     F0, F4, F0
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	BEQ       R0, R0, .o3F0
	ADDIU     V0, R0, 2D
	.o27C
	LW        V0, A8 (S0)
	LW        V1, A4 (S0)
	ADDU      V0, V0, V1
	SW        V0, A8 (S0)
	SLTI      V0, V0, 5B
	BNE       V0, R0, .o29C
	ADDIU     V0, R0, 5A
	SW        V0, A8 (S0)
	.o29C
	LWC1      F4, 90 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 10 (SP)
	LWC1      F4, 94 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	LIO       AT, 40C90FD0
	MTC1      AT, F26
	LWC1      F30, 98 (S0)
	CVT.S.W   F30, F30
	MUL.S     F12, F12, F26
	NOP
	LWC1      F28, 9C (S0)
	CVT.S.W   F28, F28
	LIF       F24, 360.0
	LWC1      F4, A0 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 18 (SP)
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	CVT.D.S   F0, F0
	LIF       F23, 1.875
	MTC1      R0, F22
	LWC1      F4, 10 (SP)
	SUB.D     F0, F22, F0
	CVT.D.S   F20, F4
	MUL.D     F20, F20, F0
	NOP
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	MUL.S     F0, F28, F0
	NOP
	LW        V0, A8 (S0)
	SLL       V0, V0, 1
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       ~Func:sin_rad
	SWC1      F20, 10 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	LIF       F2, 90.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 14 (SP)
	ADD.S     F4, F4, F0
	DIV.S     F12, F12, F24
	JAL       ~Func:sin_rad
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	SUB.D     F22, F22, F0
	CVT.D.S   F20, F30
	MUL.D     F20, F20, F22
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	LWC1      F4, 18 (SP)
	MUL.S     F0, F4, F0
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	ADDIU     V0, R0, 5A
	.o3F0
	LW        V1, A8 (S0)
	BNE       V1, V0, .o400
	CVT.S.D   F30, F20
	SW        S1, B0 (S0)
	.o400
	LWC1      F4, 10 (SP)
	TRUNC.W.S F4, F4
	SWC1      F4, 84 (S0)
	LWC1      F4, 14 (SP)
	TRUNC.W.S F4, F4
	SWC1      F4, 88 (S0)
	TRUNC.W.S F4, F30
	SWC1      F4, 8C (S0)
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:DefenseTable $DefenseTable_80219D50
{
    .Element:Normal 00000002
    .Element:Fire   00000063
    .Element:Blast  00000063
    .Element:End
}

#new:DefenseTable $DefenseTable_80219D6C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80219D78
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      30`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   50`
    .Status:Shrink     50`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80219E24
{
    00800000 01000000 001000FF $IdleAnimations_80219EBC $DefenseTable_80219D50 00001000 00000000 01070000 00000000
}

#new:Actor $Chan
{
    % stats
    [Index]        7Db
    [Level]         0`b
    [MaxHP]        15`b
    [Coins]         0`b
    [Flags]       00000800
    [StatusTable] $StatusTable_80219D78
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80219E24
    [Script]      $Script_Init_8021CCDC
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         22`b  18`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219E70
{
    .Status:Normal    00A30001
    .Status:Stone     00A30000
    .Status:Sleep     00A3000A
    .Status:Poison    00A30001
    .Status:Stop      00A30000
    .Status:Static    00A30001
    .Status:Paralyze  00A30000
    .Status:Dizzy     00A3000B
    .Status:Fear      00A3000B
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219EBC
{
    .Status:Normal    00A30001
    .Status:Stone     00A30000
    .Status:Sleep     00A3000A
    .Status:Poison    00A30001
    .Status:Stop      00A30000
    .Status:Static    00A30001
    .Status:Paralyze  00A30000
    .Status:Dizzy     00A3000B
    .Status:Fear      00A3000B
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219F08
{
    .Status:Normal    00A30002
    .Status:Stone     00A3000F
    .Status:Sleep     00A30010
    .Status:Poison    00A30002
    .Status:Stop      00A3000F
    .Status:Static    00A30002
    .Status:Dizzy     00A30011
    .Status:Fear      00A30011
    .Status:End
}

#new:Script $Script_80219F4C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A11C )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
        Call  $Function_80218000    ( FFFFFFF6 00000000 0000000A 00000000 )
        Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B81C )
        Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A560 )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
    Else
        Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
        Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
        Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Chan )
        Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70 )
        Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    EndIf
    Call  HPBarToHome       ( .Actor:Self )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_8021A11C
{
    Return
    End
}

#new:Script $Script_8021A12C
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
    Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
    Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Chan )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8 )
    Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D6C )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F08 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
    Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  GetIndexFromPos   ( .Actor:Self *Var[A] )
    Mod   *Var[A]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[A] )
    Call  GetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetHomePos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Set   *Var[D]  *Var[A]
    Set   *Var[E]  *Var[B]
    Set   *Var[F]  *Var[C]
    Sub   *Var[D]  *Var[0]
    Sub   *Var[E]  *Var[1]
    Sub   *Var[F]  *Var[2]
    Div   *Var[D]  00000002
    Div   *Var[E]  00000002
    Div   *Var[F]  00000002
    Add   *Var[0]  *Var[D]
    Add   *Var[1]  *Var[E]
    Add   *Var[2]  *Var[F]
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 00A30002 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_8021A560
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoNormalHit
            ExecWait  $Script_8021A12C
        Case  ==  .Event:FlipTrigger % D
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoNormalHit
            ExecWait  $Script_8021A12C
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30006
            ExecWait  DoBurnHit
            ExecWait  $Script_8021A12C
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30006
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30004
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A3000C
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A3000C
            ExecWait  DoImmune
            Wait  2`
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00200000
                ExecWait  $Script_8021A12C
            EndIf
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30004
            SetConst  *Var[2]  00A30006
            ExecWait  DoScareAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021AA1C
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[3] )
    If  *Var[3]  ==  00000002
        Set   *Var[1]  *Var[2]
    EndIf
    Return
    End
}

#new:IntTable $IntTable_8021AA6C
{
    00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
    00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
    00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021AAB8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30007
            ExecWait  $Script_8021AA1C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30006
                SetConst  *Var[2]  00A30006
                ExecWait  DoBurnHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30014
                SetConst  *Var[2]  00A30015
                ExecWait  DoBurnHit
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30006
                SetConst  *Var[2]  00A30006
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30006
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30014
                SetConst  *Var[2]  00A30015
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30015
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30007
            ExecWait  $Script_8021AA1C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D6C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F08 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 00A30006 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_8021AA6C
            Loop  00000013
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30004
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A3000C
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30002
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A3000C
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30002
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[1]  00000009
            Else
                Add   *Var[1]  00000018
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30007
            ExecWait  $Script_8021AA1C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30007
            ExecWait  $Script_8021AA1C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30007
            ExecWait  $Script_8021AA1C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30006
            SetConst  *Var[2]  00A30007
            ExecWait  $Script_8021AA1C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30001
                ExecWait  DoRecover
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30004
                SetConst  *Var[2]  00A30006
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30002
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30004
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30002
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30006
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30007
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A3000C
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00A30002
                ExecWait  DoImmune
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021B81C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
    Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Chan )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorPos   ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00A30004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
        Wait  8`
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000005 )
        Call  SetBattleCamZoom  ( 000001AE )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  MoveBattleCamOver ( 0000000A )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetPartYaw    ( .Actor:Self 00000001 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[1]  00000018
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
            EndThread
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30004 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  *Var[4]
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
            EndThread
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30004
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
        EndCaseGroup
    EndSwitch
    Label  A
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_Chan
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000002
        Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
        Sub   *Var[0]  00000001
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  UseCamPreset  ( 00000002 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30002
            SetConst  *Var[2]  00A30001
            ExecWait  8029BBB4
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000010 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D50 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70 )
            Call  BindIdle  ( .Actor:Self $Script_Idle_8021A11C )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A3000C )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00A30009 )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
    Call  SetAnimation      ( .Actor:Self 00000001 00A30005 )
    Wait  20`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFF6A 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  000000C8
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
            Wait  10`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
            Wait  8`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A30004
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_8021CCDC
{
    ExecWait  $Script_80219F4C
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D0CC )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021CD7C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetBattleFlagBits ( 00800000 .True )
    Return
    End
}

#new:Script $Script_NextTurn_8021CD7C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  UseCamPreset  ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak    ( 0002001F .Actor:Self 00000001 00A30004 00A30003 ) % Mario! Here comes Chan the man!
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            EndIf
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000002
                BreakCase
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  0037100A
                BreakCase
            EndIf
            SetConst  *Var[A]  00A30004
            SetConst  *Var[B]  00A30003
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000002
                SetConst  *Var[A]  00A30007
                SetConst  *Var[B]  00A30002
            EndIf
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Div   *Var[1]  00000002
            If  *Var[0]  <=  *Var[1]
                Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                If  *Var[0]  ==  00000000
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000000A )
                    Call  ActorSpeak    ( 00020021 .Actor:Self 00000001 *Var[A] *Var[B] ) % Hmmm... You have some skills.
                    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
                    BreakCase
                EndIf
            EndIf
            Call  GetPlayerHP   ( *Var[0] )
            If  *Var[0]  <=  00000005
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020022 .Actor:Self 00000001 *Var[A] *Var[B] ) % Mario, prepare to be finished!
                BreakCase
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_8021D0CC
{
    ExecWait  $Script_HandleEvent_8021AAB8
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:FlipTrigger % D
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  .Event:Death % 20
                BreakCase
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  003F1000 % 3F1000
                BreakCase
            EndIf
            Set   *Flag[00]  .False
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[0]
                CaseOR  ==  00000001 % 1
                CaseOR  ==  00000000 % 0
                    Set   *Flag[00]  .True
                EndCaseGroup
            EndSwitch
            If  *Flag[00]  ==  .False
                BreakCase
            EndIf
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  EnableIdleScript  ( .Actor:Self 00000000 )
            Wait  30`
            Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000002 % 2
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Add   *Var[0]  00000001
                Switch  *Var[0]
                    Case  ==  00000001
                        Call  UseCamPreset      ( 00000002 )
                        Call  MoveBattleCamOver ( 0000000A )
                        Call  ActorSpeak        ( 00020020 .Actor:Self 00000001 00A30007 00A30002 ) % Ow... How dishonorable!
                    Case  ==  00000002
                    Case  ==  00000003
                        Set   *Var[0]  00000000
                EndSwitch
                Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021D360
{
    .Status:Normal    00A40002
    .Status:Stone     00A40000
    .Status:Sleep     00A4000E
    .Status:Poison    00A40002
    .Status:Stop      00A40000
    .Status:Static    00A40002
    .Status:Paralyze  00A40000
    .Status:Dizzy     00A4000F
    .Status:Dizzy     00A4000F
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021D3AC
{
    .Status:Normal    00A4000B
    .Status:End
}

MISSING: 8021D3B8 to 8021D3C4 (00469848 to 00469854)
00000001 00A40004 00000000

#new:DefenseTable $DefenseTable_8021D3C4
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021D3D0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     75`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       75`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod    -1`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021D47C
{
    00800000 01000000 FB1900FF $IdleAnimations_8021D360 $DefenseTable_8021D3C4 00000000 00000000 FEF60000 00000000
}

#new:Actor $Lee
{
    % stats
    [Index]        7Eb
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021D3D0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021D47C
    [Script]      $Script_Init_8021D4C8
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  36`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021D4C8
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229F9C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021D5B4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D600 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022A038 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Thread
        Call  8026BF48  ( 00000001 )
        ExecWait  $Script_CopyPartner
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  $Function_802180D0 ( )
    Call  SetBattleFlagBits ( 00800000 .True )
    Return
    End
}

#new:Script $Script_Idle_8021D5B4
{
    Return
    End
}

#new:Script $Script_8021D5C4
{
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  00A40004
    ExecWait  DoReturnHome
    Return
    End
}

#new:Script $Script_HandleEvent_8021D600
{
    Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000D
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000D
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoJumpBack
            ExecWait  $Script_8021D5C4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A40002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A40002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A40004
            SetConst  *Var[2]  00A4000B
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A40004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A4000B
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_FlyingTackle
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00A40008 )
    Wait  20`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002CB 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetAnimation      ( .Actor:Self 00000001 00A40009 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF9C 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
            Call  JumpToGoal        ( .Actor:Self 00000011 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorPos       ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  SetAnimation      ( .Actor:Self 00000001 00A40002 )
            Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8021D5C4
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00A40009 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Call  AddGoalPos    ( .Actor:Self *Fixed[4.0] *Fixed[-6.0] 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF1 00000000 )
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  JumpToGoal        ( .Actor:Self 0000000C .False .True .False )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
            Call  SetAnimation  ( .Actor:Self 00000001 00A4000A )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_8021D5C4
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021E0E0
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  RemoveActor   ( *Var[0] )
    Return
    End
}

#new:Script $Script_8021E118
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Wait  30`
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    Call  UseIdleAnimation  ( *Var[A] .False )
    Call  8027D32C  ( *Var[A] )
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003
        Add   *Var[2]  00000005
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    Call  SetEnemyHP    ( *Var[A] *Var[B] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetActorPos   ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00800000 .True )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00020001 .False )
    Call  SetActorFlagBits  ( *Var[A] 00400004 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  SetActorVar   ( *Var[A] 00000008 00000002 )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021D3AC )
    Call  SetAnimation  ( *Var[A] 00000001 00A4000B )
    Wait  30`
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    If  *Var[C]  >  00000000
        Set   *Var[C]  00000000
        Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.5] )
        Call  SetActorSounds        ( *Var[A] .ActorSound:Jump 00000301 00000000 )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000F .False .True .False )
        Call  ResetActorSounds      ( *Var[A] .ActorSound:Jump )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
    EndIf
    Call  ForceHomePos  ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  HPBarToHome   ( *Var[A] )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021D360 )
    Call  SetAnimation  ( *Var[A] 00000001 00A40002 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021E5DC
{
    Call  8027D32C      ( FFFFFF81 )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[B] )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000F
    Add   *Var[1]  0000000A
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[B] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .False .False )
    Set   *Var[0]  *Var[A]
    Set   *Var[1]  *Var[B]
    ExecWait  DoShockHit
    Call  UseCamPreset  ( 00000002 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 *Var[C] 00000000 )
        Set   *Var[0]  00000000
        Loop  0000000F
            Add   *Var[0]  FFFFFFD0
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000003C
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Add   *Var[0]  0000000A
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Return
    End
}

#new:Vector3D $Vector3D_8021E940
{
    0` -1000` 0`
}

#new:IdleAnimations $IdleAnimations_8021E94C
{
    .Status:Normal    00090001
    .Status:Stone     00090000
    .Status:Sleep     00090000
    .Status:Poison    00090001
    .Status:Stop      00090000
    .Status:Static    00090001
    .Status:Paralyze  00090000
    .Status:Dizzy     00090014
    .Status:Fear      00090014
    .Status:End
}

#new:DefenseTable $DefenseTable_8021E998
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021E9A4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021EA50
{
    00800000 01000000 001400FF $IdleAnimations_8021E94C $DefenseTable_8021E998 00000000 00000000 FFF70000 00000000
}

#new:Actor $LeeGoombario
{
    % stats
    [Index]        7Fb
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021E9A4
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021EA50
    [Script]      $Script_Init_Goombario
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         29`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Goombario
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802203F4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021EB14 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EB24 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80220450 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_8021EB14
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021EB24
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000B
            SetConst  *Var[2]  0009000C
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000B
            SetConst  *Var[2]  0009000C
            ExecWait  DoBurnHit
            ExecWait  $Script_8021E0E0
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            Set   *Var[2]  0000000C
            ExecWait  $Script_8021E5DC
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            Set   *Var[2]  0000000C
            ExecWait  $Script_8021E5DC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090003
            SetConst  *Var[2]  0009000A
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021F08C
{
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
        Set   *Var[0]  000000B4
        Loop  0000000F
            Sub   *Var[0]  0000003C
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetAnimation  ( .Actor:Self 00000001 00090005 )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000003C
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        SetF  *Var[5]  *Fixed[7.2]
    Else
        Set   *Var[5]  00000012
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Add   *Var[0]  0000000A
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Wait  2`
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Return
    End
}

#new:Script $Script_8021F514
{
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000046 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Return
    End
}

#new:Script $Script_8021F5F8
{
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  GetActorPos       ( .Actor:Self *Var[C] *Var[D] *Var[E] )
    If  *Var[B]  >  *Var[C]
        Sub   *Var[B]  *Var[C]
    Else
        Sub   *Var[C]  *Var[B]
        Set   *Var[B]  *Var[C]
    EndIf
    Sub   *Var[B]  00000014
    DivF  *Var[B]  *Fixed[10.588867]
    AddF  *Var[B]  0000000F
    Set   *Var[A]  *Var[B]
    Return
    End
}

#new:Script $Script_8021F6E0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    ExecWait  $Script_8021F514
    ExecWait  $Script_8021F5F8
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        SetF  *Var[0]  *Fixed[7.2]
        SetF  *Var[1]  *Fixed[7.6]
        SetF  *Var[1]  *Fixed[3.6]
    Else
        Set   *Var[0]  00000012
        Set   *Var[1]  00000013
        Set   *Var[2]  00000009
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[1] 00000000 )
    Wait  1`
    Call  SetAnimation      ( .Actor:Self 00000001 00090006 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[2] 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000005 )
    Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
    Call  $Function_80218300    ( *Var[A] 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  $Function_80218B90 ( )
            Thread
                Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021F08C
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    ChildThread
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndChildThread
    Wait  1`
    Wait  2`
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
        Case  ==  00000001
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000010 )
        Case  ==  00000002
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000010 )
    EndSwitch
    Call  GetActorHP    ( .Actor:Player *Var[0] )
    If  *Var[0]  ==  .HitResult:Hit % 0
        Goto  64
    EndIf
    Set   *Var[A]  00000018
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Thread
                Wait  4`
                Set   *Var[0]  00000000
                Loop  00000006
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetJumpAnimations     ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  $Function_80218300    ( *Var[A] 00000003 )
        Case  ==  00000001
            Thread
                Wait  4`
                Set   *Var[0]  00000000
                Loop  00000006
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  $Function_80218300    ( *Var[A] 00000003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
        Case  ==  00000002
            Thread
                Wait  4`
                Set   *Var[0]  00000000
                Loop  00000006
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 F1194D80 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00090006 )
            EndThread
            Thread
                Set   *Var[0]  00000000
                Loop  *Var[A]
                    Add   *Var[0]  00000085
                    Call  SetActorRotation  ( .Actor:Self F1194D80 *Var[0] F1194D80 )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  $Function_80218300    ( *Var[A] 00000003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
    EndSwitch
    ChildThread
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndChildThread
    Wait  1`
    Wait  2`
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
        Case  ==  00000001
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000002
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    EndSwitch
    Label  64
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  YieldTurn ( )
            ExecWait  $Script_8021F08C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80220100
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    Wait  10`
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetBattleFlagBits ( 00000004 .True )
    Call  $Function_80218D90    ( *Var[5] )
    Wait  12`
    Call  SetCamEnabled     ( .Cam:Tattle .True )
    Call  SetCamFlag80      ( .Cam:Tattle .False )
    Call  SetCamPerspective ( .Cam:Tattle 00000006 00000019 00000010 00000400 )
    Call  SetCamViewport    ( .Cam:Tattle 00000025 0000005F 0000008A 00000063 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000008
    Set   *Var[1]  00000000
    Call  $Function_80218CE4 ( )
    Wait  1`
    Call  802CAE50  ( 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CABE8  ( 00000002 00000000 *Var[3] 00000064 00000004 )
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 00000282 )
    Call  SetCamFlag80      ( .Cam:Tattle .True )
    Wait  10`
    Call  ActorSpeak        ( 001C0092 .Actor:Self 00000001 0009000F 00090001 ) % It's Mario, silly! He's here to save Princess Peac ...
    Call  $Function_80218E2C    ( *Var[5] )
    Wait  12`
    Call  SetCamEnabled     ( .Cam:Tattle .False )
    Wait  32`
    Call  UseCamPreset      ( 00000002 )
    Call  SetBattleFlagBits ( 00000004 .False )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802203F4
{
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000028
        ExecWait  $Script_80220100
    Else
        ExecWait  $Script_8021F6E0
    EndIf
    Return
    End
}

#new:Script $Script_NextTurn_80220450
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80220524
{
    $LeeGoombario $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80220540
{
    .Status:Normal    000A0004
    .Status:Stone     000A0000
    .Status:Sleep     000A0000
    .Status:Poison    000A0004
    .Status:Stop      000A0000
    .Status:Static    000A0004
    .Status:Paralyze  000A0000
    .Status:Dizzy     000A001C
    .Status:Fear      000A001C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022058C
{
    .Status:Normal    000A0019
    .Status:Stone     000A0003
    .Status:Sleep     000A0003
    .Status:Poison    000A0019
    .Status:Stop      000A0003
    .Status:Static    000A0019
    .Status:Paralyze  000A0003
    .Status:Dizzy     000A0019
    .Status:Fear      000A0019
    .Status:End
}

#new:DefenseTable $DefenseTable_802205D8
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_802205E4
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802205F0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022069C
{
    00800000 01000000 FE2000FF $IdleAnimations_80220540 $DefenseTable_802205D8 00001000 00000000 00F00000 00000000
}

#new:Actor $LeeKooper
{
    % stats
    [Index]        80b
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802205F0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022069C
    [Script]      $Script_Init_Kooper
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Kooper
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221200 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80220790 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220908 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802221A0 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_80220790
{
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
            Call  $Function_80218E74    ( FFFFFFF6 00000019 0000000A 00000019 )
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  $Function_80218E74    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_802208B0
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80220908
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0012
            SetConst  *Var[2]  000A0013
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0012
            SetConst  *Var[2]  000A0013
            ExecWait  DoBurnHit
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0013
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000005 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205E4 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022058C )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0011 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_802208B0
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0004
                Case  ==  00000001
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0019
            EndSwitch
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000A0019
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000A0004
                ExecWait  DoRecover
            EndIf
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0006
            SetConst  *Var[2]  000A0011
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0006
                Case  ==  00000001
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0019
            EndSwitch
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                    If  *Var[0]  !&  0035D000
                        If  *Var[0]  &  00080000
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                        Else
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                        EndIf
                    EndIf
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0006
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0019
            EndSwitch
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80221200
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000004 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        Sub   *Var[0]  00000001
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000005 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  30`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  20`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
            Set   *Var[0]  00000000
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Loop  00000005
                    Add   *Var[0]  0000000F
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0004 )
            Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205D8 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220540 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 000A000E )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Wait  15`
    Call  SetAnimation      ( .Actor:Self 00000001 000A000A )
    Call  PlaySoundAtActor  ( .Actor:Self 0000200C )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000004B )
    Call  8024ECF8  ( 00000001 00000001 00000001 )
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Set   *Var[0]  0000000A
        Case  ==  00000001
            Set   *Var[0]  00000014
        Case  ==  00000002
            Set   *Var[0]  0000001E
    EndSwitch
    Set   *Var[9]  00000000
    Loop  *Var[0]
        Add   *Var[9]  00000001
        Switch  *Var[9]
            Case  <  00000014
                Call  SetAnimation  ( .Actor:Self 00000001 000A000A )
                Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Case  ==  00000014
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000028
                Call  SetAnimation  ( .Actor:Self 00000001 000A000B )
                Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
            Case  ==  00000028
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 000A000C )
                Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Case  ==  00000032
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  0000003C
                Call  SetAnimation  ( .Actor:Self 00000001 000A000D )
                Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
            Case  ==  0000003C
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndSwitch
        Wait  1`
    EndLoop
    Call  PlaySoundAtActor  ( .Actor:Self 0000200A )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  AddActorDecoration    ( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Call  $Function_80218F40 ( )
                Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
            EndThread
            Wait  4`
            Call  SetAnimation  ( .Actor:Self 00000001 000A0009 )
            Call  SetActorRotationOffset    ( .Actor:Self FFFFFFF8 00000000 00000000 )
            Set   *Var[0]  00000000
            Loop  00000002
                Add   *Var[0]  0000001E
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Wait  5`
            Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Loop  00000005
                Add   *Var[0]  FFFFFFF4
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000002 )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFFE )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000008 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000003C
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_802221A0
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80222274
{
    $LeeKooper $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80222290
{
    .Status:Normal    000B0004
    .Status:Stone     000B0000
    .Status:Sleep     000B0000
    .Status:Poison    000B0004
    .Status:Stop      000B0000
    .Status:Static    000B0004
    .Status:Paralyze  000B0000
    .Status:Dizzy     000B001E
    .Status:Fear      000B001E
    .Status:End
}

#new:DefenseTable $DefenseTable_802222DC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802222E8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80222394
{
    00800000 01000000 001600FF $IdleAnimations_80222290 $DefenseTable_802222DC 00000000 00000000 FEF90000 00000000
}

#new:Actor $LeeBombette
{
    % stats
    [Index]        81b
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802222E8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80222394
    [Script]      $Script_Init_LeeBombette
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         30`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_LeeBombette
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802229C4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80222458 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222468 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80223298 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_80222458
{
    Return
    End
}

#new:Script $Script_HandleEvent_80222468
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0013
            SetConst  *Var[2]  000B0014
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0013
            SetConst  *Var[2]  000B0014
            ExecWait  DoBurnHit
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0014
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            Set   *Var[2]  0000000F
            ExecWait  $Script_8021E5DC
            Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            Set   *Var[2]  0000000F
            ExecWait  $Script_8021E5DC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0014
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0004
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0004
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0008
            SetConst  *Var[2]  000B0012
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0008
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802229C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Wait  10`
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000028 00000000 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
    Call  RunToGoal ( .Actor:Self 0000001E .False )
    Call  SetAnimation      ( .Actor:Self 00000001 000B0004 )
    Call  SetAnimation      ( .Actor:Self 00000001 000B000F )
    Wait  15`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002020 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
            Call  RunToGoal     ( .Actor:Self 00000005 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000F 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000048
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self FFFFFFC4 00000000 00000000 )
            Call  RunToGoal     ( .Actor:Self 0000000A .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Thread
                Call  $Function_80219064 ( )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Set   *Var[A]  *Var[0]
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
    Call  RunToGoal     ( .Actor:Self 00000004 .False )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000008 )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Wait  8`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80223298
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_8022336C
{
    $LeeBombette $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80223388
{
    .Status:Normal    000C0001
    .Status:Stone     000C0000
    .Status:Sleep     000C0000
    .Status:Poison    000C0001
    .Status:Stop      000C0000
    .Status:Static    000C0001
    .Status:Paralyze  000C0000
    .Status:Dizzy     000C0001
    .Status:Fear      000C0001
    .Status:End
}

#new:DefenseTable $DefenseTable_802233D4
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_802233E0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022348C
{
    00020000 01000000 FD2000FF $IdleAnimations_80223388 $DefenseTable_802233D4 00000000 00000000 00F00000 00000000
    00800001 02003200 FDEE00FF 00000000 $DefenseTable_802233D4 00000000 00000000 00F00000 00000000
}

#new:Actor $LeeParakarry
{
    % stats
    [Index]        82b
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_802233E0
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_8022348C
    [Script]      $Script_Init_Parakarry
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Parakarry
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224304 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80223574 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223584 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80224320 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_80223574
{
    Return
    End
}

#new:Script $Script_HandleEvent_80223584
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000F
            SetConst  *Var[2]  000C0010
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000F
            SetConst  *Var[2]  000C0010
            ExecWait  DoBurnHit
            ExecWait  $Script_8021E0E0
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0010
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000D
            Set   *Var[2]  00000016
            ExecWait  $Script_8021E5DC
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000D
            Set   *Var[2]  00000016
            ExecWait  $Script_8021E5DC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0003
            SetConst  *Var[2]  000C000D
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223B74
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
    Wait  3`
    Call  8024E664      ( 00000001 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002004 )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0014 )
    Call  AddGoalPos    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  FlyToGoal     ( .Actor:Self 00000005 00000000 .Easing:Linear )
    Wait  2`
    Thread
        Wait  3`
        Call  SetAnimation  ( .Actor:Self 00000001 000C0004 )
    EndThread
    Call  AddGoalPos        ( .Actor:Self 00000028 0000000F 00000000 )
    Call  FlyToGoal ( .Actor:Self 00000014 FFFFFFEC .Easing:QuarticOut )
    Call  PlaySoundAtActor  ( .Actor:Self 00002005 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 000C0005 )
    Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
            Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 000C0006 )
    Wait  1`
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Call  PlaySound ( 00000000 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0005 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
            Thread
                Wait  4`
                Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
            Wait  6`
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80224304
{
    ExecWait  $Script_80223B74
    Return
    End
}

#new:Script $Script_NextTurn_80224320
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000D
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_802243F4
{
    $LeeParakarry $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80224410
{
    .Status:Normal    000D0001
    .Status:Stone     000D0000
    .Status:Sleep     000D0000
    .Status:Poison    000D0001
    .Status:Stop      000D0000
    .Status:Static    000D0001
    .Status:Paralyze  000D0000
    .Status:Dizzy     000D001A
    .Status:Fear      000D001A
    .Status:End
}

#new:DefenseTable $DefenseTable_8022445C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80224468
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80224514
{
    00020000 01000000 001800FF $IdleAnimations_80224410 $DefenseTable_8022445C 00000000 00000000 00F60000 00000000
    00800001 02003200 00E600FF 00000000 $DefenseTable_8022445C 00000000 00000000 00F60000 00000000
}

#new:Actor $LeeBow
{
    % stats
    [Index]        83b
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80224468
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80224514
    [Script]      $Script_Init_Bow
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  29`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Bow
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224CA0 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802245FC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022460C )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225884 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_802245FC
{
    Return
    End
}

#new:Script $Script_HandleEvent_8022460C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0018
            SetConst  *Var[2]  000D0019
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0018
            SetConst  *Var[2]  000D0019
            ExecWait  DoBurnHit
            ExecWait  $Script_8021E0E0
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  UseCamPreset  ( 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            Set   *Var[2]  0000000E
            ExecWait  $Script_8021E5DC
            Thread
                Set   *Var[0]  000000C8
                Loop  00000014
                    Sub   *Var[0]  0000000A
                    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 0000003C )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        Case  ==  .Event:ShockDeath % 26
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            Set   *Var[2]  0000000E
            ExecWait  $Script_8021E5DC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0003
            SetConst  *Var[2]  000D0015
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80224CA0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Wait  10`
    Thread
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  UseCamPreset      ( 00000001 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Thread
        Call  SetAnimation      ( .Actor:Self 00000001 000D0003 )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Call  AddGoalPos    ( .Actor:Self 00000004 FFFFFFFC 00000000 )
        Else
            Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF6 00000000 )
        EndIf
        Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
    EndThread
    Wait  15`
    Call  UseCamPreset  ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver     ( 0000001E )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 000D0005 )
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
            Wait  2`
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Var[0]  00000000
            Loop  00000014
                Add   *Var[0]  FFFFFFD3
                Call  SetActorYaw   ( .Actor:Self *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 000D001A )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Wait  10`
            Call  YieldTurn ( )
            Thread
                Set   *Var[0]  000000C8
                Loop  00000014
                    Sub   *Var[0]  0000000A
                    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 0000003C )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Set   *Var[A]  00000000
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[8] )
    Switch  *Var[8]
        Case  ==  00000000
            Set   *Var[8]  00000004
        Case  ==  00000001
            Set   *Var[8]  00000005
        Case  ==  00000002
            Set   *Var[8]  00000006
    EndSwitch
    Set   *Var[7]  *Var[8]
    Loop  *Var[7]
        Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
        Add   *Var[A]  00000001
        Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
        If  *Flag[00]  ==  .False
            Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
            Set   *Flag[00]  .True
            If  *Var[A]  ==  *Var[8]
                Call  80269EAC  ( 0000000C )
            Else
                Call  80269EAC  ( 0000000A )
            EndIf
        Else
            Call  SetAnimation  ( .Actor:Self 00000001 000D0008 )
            Set   *Flag[00]  .False
            If  *Var[A]  ==  *Var[8]
                Call  80269EAC  ( 0000000D )
            Else
                Call  80269EAC  ( 0000000B )
            EndIf
        EndIf
        Wait  2`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.2] )
        EndThread
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
        Switch  *Var[9]
            Case  ==  00000000
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
            Case  ==  00000001
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
            Case  ==  00000002
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
        EndSwitch
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
        Call  GetActorHP    ( .Actor:Player *Var[1] )
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  10`
            Call  YieldTurn ( )
            Thread
                Set   *Var[0]  000000C8
                Loop  00000014
                    Sub   *Var[0]  0000000A
                    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 0000001E )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80225884
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80225958
{
    $LeeBow $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80225974
{
    .Status:Normal    000E0001
    .Status:Stone     000E0000
    .Status:Sleep     000E0000
    .Status:Poison    000E0001
    .Status:Stop      000E0000
    .Status:Static    000E0001
    .Status:Paralyze  000E0000
    .Status:Dizzy     000E000F
    .Status:Fear      000E000F
    .Status:End
}

#new:DefenseTable $DefenseTable_802259C0
{
    .Element:Normal 00000000
    .Element:Shock  00000063
    .Element:End
}

#new:StatusTable $StatusTable_802259D4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80225A80
{
    00020000 01000000 FF1400FF $IdleAnimations_80225974 $DefenseTable_802259C0 00000080 00000000 00F80000 00000000
    00800001 02003200 FFE200FF 00000000 $DefenseTable_802259C0 00000080 00000000 00F80000 00000000
}

#new:Actor $LeeWatt
{
    % stats
    [Index]        84b
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_802259D4
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80225A80
    [Script]      $Script_Init_Watt
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         34`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Watt
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226004 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80225B68 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225B90 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80226880 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_80225B68
{
    SetPriority  00000063
    Call  $Function_80219188 ( )
    Return
    End
}

#new:Script $Script_HandleEvent_80225B90
{
    Call  UseIdleAnimation      ( .Actor:Self .False )
    Call  $Function_80219658    ( 00000000 )
    Call  $Function_802196A4    ( 00000001 )
    Call  $Function_802196F0    ( 00000000 )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000D
            SetConst  *Var[2]  000E000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000D
            SetConst  *Var[2]  000E000E
            ExecWait  DoBurnHit
            Call  $Function_80219604 ( )
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            Call  $Function_80219604 ( )
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  $Function_80219604 ( )
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0003
            SetConst  *Var[2]  000E000C
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  $Function_80219658    ( 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80226004
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 00000028 )
    Call  MoveBattleCamOver ( 00000050 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
    Call  $Function_802196F0    ( 00000001 )
    Call  AddGoalPos        ( .Actor:Self 0000000F FFFFFFF6 00000005 )
    Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  $Function_802196F0    ( 00000000 )
    Wait  5`
    Call  $Function_80219658    ( 00000000 )
    Call  AddGoalPos        ( .Actor:Self 00000019 00000014 00000000 )
    Call  FlyToGoal ( .Actor:Self 0000000F FFFFFFEC .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:CosInOut )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
            Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  $Function_802196A4    ( 00000001 )
            Call  $Function_80219658    ( 00000001 )
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  $Function_802196A4    ( 00000000 )
    Set   *Var[A]  00000028
    Call  AddBattleCamZoom  ( FFFFFFB5 )
    Call  MoveBattleCamOver ( *Var[A] )
    Call  8024ECF8  ( 00000000 00000000 00000001 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 % 80000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000004
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[0.52] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[1.3] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  $Function_8021973C ( )
    Set   *Var[9]  00000000
    Call  SetAnimation  ( .Actor:Self 00000001 000E0006 )
    Loop  *Var[A]
        Add   *Var[9]  00000003
        If  *Var[9]  >  000000C8
            Set   *Var[9]  000000C8
        EndIf
        Call  $Function_80219780    ( *Var[9] )
        Wait  1`
    EndLoop
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
    Call  AddBattleCamZoom  ( 0000004B )
    Call  MoveBattleCamOver ( 00000005 )
    Thread
        Wait  2`
        Call  $Function_80219780    ( 00000000 )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000004 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  $Function_802196A4    ( 00000001 )
            Call  $Function_80219658    ( 00000001 )
            Call  AddGoalPos    ( .Actor:Self 00000019 0000000A 00000000 )
            Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80226880
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            Call  $Function_80219604 ( )
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80226960
{
    $LeeWatt $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8022697C
{
    .Status:Normal    000F0001
    .Status:Stone     000F0000
    .Status:Sleep     000F0000
    .Status:Poison    000F0001
    .Status:Stop      000F0000
    .Status:Static    000F0001
    .Status:Paralyze  000F0000
    .Status:Dizzy     000F0010
    .Status:Fear      000F0010
    .Status:End
}

#new:DefenseTable $DefenseTable_802269C8
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802269D4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80226A80
{
    00800000 01000000 001800FF $IdleAnimations_8022697C $DefenseTable_802269C8 00000000 00000000 00F40000 00000000
}

#new:Actor $LeeSushie
{
    % stats
    [Index]        85b
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802269D4
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80226A80
    [Script]      $Script_Init_Sushie
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         37`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Sushie
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802270BC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80226B44 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226B54 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022831C )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_80226B44
{
    Return
    End
}

#new:Script $Script_HandleEvent_80226B54
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000E
            SetConst  *Var[2]  000F000F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000E
            SetConst  *Var[2]  000F000F
            ExecWait  DoBurnHit
            ExecWait  $Script_8021E0E0
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            Set   *Var[2]  00000014
            ExecWait  $Script_8021E5DC
            Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            Set   *Var[2]  00000014
            ExecWait  $Script_8021E5DC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0003
            SetConst  *Var[2]  000F000D
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802270BC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000046 00000000 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  *Var[0]
    Div   *Var[3]  *Fixed[3.0]
    Set   *Var[A]  *Var[3]
    If  *Var[A]  <  00000000
        Mul   *Var[A]  FFFFFFFF
    EndIf
    Call  MoveBattleCamOver ( *Var[A] )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
    Call  RunToGoal     ( .Actor:Self *Var[A] .False )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
    Wait  10`
    Call  UseCamPreset  ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  AddBattleCamZoom  ( FFFFFFCE )
    Call  MoveBattleCamOver ( 0000001E )
    Call  8024ECF8      ( 00000001 00000001 00000001 )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0004 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 000F0008 )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetAnimation      ( .Actor:Self 00000001 000F0005 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
            EndThread
            Thread
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Switch  *Var[0]
                    Case  ==  00000000
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                    Case  ==  00000001
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.05] *Fixed[1.05] *Fixed[1.05] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
                    Case  ==  00000002
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
                EndSwitch
            EndThread
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Thread
                Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
                Wait  10`
                Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
            EndThread
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.0] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  LandJump      ( .Actor:Self )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF1 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  SetAnimation      ( .Actor:Self 00000001 000F0005 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
        Set   *Var[0]  00000000
        Loop  0000000A
            Add   *Var[0]  00000024
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
    EndThread
    Thread
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000000
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
            Case  ==  00000001
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.35] *Fixed[1.35] *Fixed[1.35] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.55] *Fixed[1.55] *Fixed[1.55] )
            Case  ==  00000002
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.6] *Fixed[1.6] *Fixed[1.6] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.8] *Fixed[1.8] *Fixed[1.8] )
        EndSwitch
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Thread
        Wait  3`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[A] )
    Switch  *Var[A]
        Case  ==  .HitResult:Hit % 0
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000001 % 1
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
        Case  ==  00000002 % 2
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000003C
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8022831C
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_802283F0
{
    $LeeSushie $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8022840C
{
    .Status:Normal    00100001
    .Status:Stone     00100000
    .Status:Sleep     00100000
    .Status:Poison    00100001
    .Status:Stop      00100000
    .Status:Static    00100001
    .Status:Paralyze  00100000
    .Status:Dizzy     00100008
    .Status:Fear      00100001
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80228458
{
    .Status:Normal    00100014
    .Status:End
}

#new:DefenseTable $DefenseTable_80228464
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80228470
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022851C
{
    00800000 01000000 FD2100FF $IdleAnimations_8022840C $DefenseTable_80228464 00000000 00000000 FEF60000 00000000
    00120001 03000000 000000FF $IdleAnimations_80228458 $DefenseTable_80228464 00000000 00000000 00000000 00000000
}

#new:Actor $LeeLakilester
{
    % stats
    [Index]        86b
    [Level]         0`b
    [MaxHP]        20`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80228470
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_8022851C
    [Script]      $Script_Init_Lakilester
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         44`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Lakilester
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228B78 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80228604 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228614 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80229658 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Return
    End
}

#new:Script $Script_Idle_80228604
{
    Return
    End
}

#new:Script $Script_HandleEvent_80228614
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000C
            SetConst  *Var[2]  0010000D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000C
            SetConst  *Var[2]  0010000D
            ExecWait  DoBurnHit
            ExecWait  $Script_8021E0E0
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021E0E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100003
            SetConst  *Var[2]  0010000A
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80228B78
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self 00000014 0000001E *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00100001 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  FFFFFFFF
        Add   *Var[1]  00000004
        Add   *Var[2]  00000002
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Add   *Var[0]  FFFFFFFD
        Add   *Var[1]  0000000A
        Add   *Var[2]  00000005
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  SetAnimation  ( .Actor:Self 00000003 00100014 )
    Call  SetAnimation  ( .Actor:Self 00000001 0010000F )
    Loop  00000004
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            AddF  *Var[1]  *Fixed[2.4]
        Else
            Add   *Var[1]  00000006
        EndIf
        Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  FFFFFFFD
        Add   *Var[1]  00000010
        Add   *Var[2]  00000002
        SetF  *Var[3]  *Fixed[0.4]
    Else
        Add   *Var[0]  FFFFFFF8
        Add   *Var[1]  00000028
        Add   *Var[2]  00000005
        SetF  *Var[3]  *Fixed[1.0]
    EndIf
    Call  PlayEffect        ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002C5 )
    Thread
        Loop  0000000F
            Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
            Call  SetPartDispOffset     ( .Actor:Self 00000003 00000001 00000000 00000000 )
            Wait  1`
            Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
            Call  SetPartDispOffset     ( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
            Wait  1`
        EndLoop
        Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetPartDispOffset     ( .Actor:Self 00000003 00000000 00000000 00000000 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100010 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100011 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100012 )
    Wait  3`
    Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000201B )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000003 00100015 )
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RandInt       ( 00000064 *Var[3] )
            Sub   *Var[3]  00000032
            Add   *Var[0]  *Var[3]
            Call  JumpPartTo    ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 00000014 .True )
            Thread
                Add   *Var[0]  FFFFFFCE
                Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000003C )
            Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000003 00100015 )
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Thread
        Add   *Var[0]  FFFFFFCE
        Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  15`
            Call  YieldTurn ( )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 00000008 )
            Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80229658
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  >  00000000
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                BreakCase
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  $Script_8021E118
            Return
    EndSwitch
    Return
    End
}

#new:SpecialFormation $SpecialFormation_8022972C
{
    $LeeLakilester $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_CopyPartner
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  ActorSpeak        ( 00020027 .Actor:Self 00000001 00A40006 00A40003 ) % I bet you've never seen a move like this before!
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
    Call  SetAnimation      ( .Actor:Self 00000001 00A40007 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[1]  00000008
        SetF  *Var[3]  *Fixed[0.4]
    Else
        Add   *Var[1]  00000014
        SetF  *Var[3]  *Fixed[1.0]
    EndIf
    Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Var[3] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  $Function_8021973C ( )
    Call  MakeLerp  ( 00000000 000000C8 00000014 .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  $Function_80219780    ( *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Wait  10`
    Call  $Function_GetPartner  ( *Var[5] *Var[6] )
    Call  $Function_80218100 ( )
    Call  $Function_80219824    ( *Var[5] )
    Switch  *Var[5]
        Case  ==  00000001
            Call  SummonEnemy   ( $SpecialFormation_80220524 00000000 )
        Case  ==  00000002
            Call  SummonEnemy   ( $SpecialFormation_80222274 00000000 )
        Case  ==  00000003
            Call  SummonEnemy   ( $SpecialFormation_8022336C 00000000 )
        Case  ==  00000004
            Call  SummonEnemy   ( $SpecialFormation_802243F4 00000000 )
        Case  ==  00000009
            Call  SummonEnemy   ( $SpecialFormation_80225958 00000000 )
        Case  ==  00000006
            Call  SummonEnemy   ( $SpecialFormation_80226960 00000000 )
        Case  ==  00000007
            Call  SummonEnemy   ( $SpecialFormation_802283F0 00000000 )
        Case  ==  00000008
            Call  SummonEnemy   ( $SpecialFormation_8022972C 00000000 )
    EndSwitch
    Set   *Var[A]  *Var[0]
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003
        Add   *Var[2]  00000005
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00400004 .True )
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  SetEnemyHP    ( *Var[A] *Var[0] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetOwnerID    ( *Var[0] )
    Call  SetActorVar   ( *Var[A] 00000000 *Var[0] )
    Call  SetActorVar   ( *Var[A] 00000001 *Var[6] )
    Wait  20`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Thread
        Call  MakeLerp  ( 000000C8 00000000 00000014 .Easing:Linear )
        Label  1
        Call  UpdateLerp ( )
        Call  $Function_80219780    ( *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000001
            Goto  1
        EndIf
    EndThread
    Call  SetActorSounds    ( *Var[A] .ActorSound:Jump 00000000 00000000 )
    Switch  *Var[5]
        Case  ==  00000008
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.01] )
            Call  SetGoalPos    ( *Var[A] *Var[0] 0000000A *Var[2] )
            Call  JumpToGoal    ( *Var[A] 0000000A .False .False .False )
            Wait  10`
        CaseOR  ==  00000006
        CaseOR  ==  00000009
        CaseOR  ==  00000004
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.01] )
            Call  SetGoalPos    ( *Var[A] *Var[0] 0000001E *Var[2] )
            Call  JumpToGoal    ( *Var[A] 00000014 .False .False .False )
        EndCaseGroup
    EndSwitch
    Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[A] )
    Call  ResetActorSounds  ( *Var[A] .ActorSound:Jump )
    Wait  20`
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80229F9C
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            ExecWait  $Script_CopyPartner
        Case  ==  00000001
        Case  ==  00000002
            ExecWait  $Script_FlyingTackle
        Case  ==  00000003
            Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
    EndSwitch
    Return
    End
}

#new:Script $Script_NextTurn_8022A038
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  003F1000
                BreakCase
            EndIf
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Div   *Var[1]  00000002
            If  *Var[0]  <=  *Var[1]
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
                If  *Var[0]  ==  00000001
                    Call  ActorSpeak    ( 00020028 .Actor:Enemy1 00000001 00A40006 00A40003 ) % Ooh... You are strong,  I'll give you that.
                Else
                    Call  ActorSpeak    ( 00020028 .Actor:Self 00000001 00A40006 00A40003 ) % Ooh... You are strong,  I'll give you that.
                EndIf
                BreakCase
            EndIf
            Call  GetPlayerHP   ( *Var[0] )
            If  *Var[0]  <=  00000005
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020029 .Actor:Self 00000001 00A40006 00A40003 ) % Mario, now I will finish you.
                BreakCase
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8022A25C to 8022A260 (004766EC to 004766F0)
00000000

#new:IdleAnimations $IdleAnimations_8022A260
{
    .Status:Normal    00A20005
    .Status:Stone     00A20000
    .Status:Sleep     00A2001C
    .Status:Poison    00A20000
    .Status:Stop      00A20000
    .Status:Static    00A20000
    .Status:Paralyze  00A20000
    .Status:Dizzy     00A2001E
    .Status:Dizzy     00A2001E
    .Status:End
}

#new:DefenseTable $DefenseTable_8022A2AC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022A2B8
{
    .Status:Normal     50`
    .Status:Default    50`
    .Status:Sleep      40`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      40`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   50`
    .Status:Shrink     60`
    .Status:Stop       70`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod    -1`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022A364
{
    00800000 01000000 FB1C00FF $IdleAnimations_8022A260 $DefenseTable_8022A2AC 00000000 00000000 02F90000 00000000
}

#new:Actor $TheMaster1
{
    % stats
    [Index]        7Ab
    [Level]         0`b
    [MaxHP]        50`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022A2B8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022A364
    [Script]      $Script_Init_8022A3B0
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         30`b  35`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  30`b % dx dy
    [StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8022A3B0
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022AA54 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022A494 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B2CC )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022B06C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000002 )
    Set   *Flag_KMR_48  .True
    Call  SetBattleFlagBits ( 00800000 .True )
    Return
    End
}

#new:Script $Script_Idle_8022A494
{
    Return
    End
}

#new:Script $Script_8022A4A4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20017
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A2001A
            SetConst  *Var[2]  00A2001B
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A2001A
            SetConst  *Var[2]  00A2001B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20017
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20017
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20017
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00A20005 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20017
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20017
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20017
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20002
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20007
            SetConst  *Var[2]  00A20017
            ExecWait  DoScareAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022AA54
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.6] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
    Wait  10`
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00A20010 )
    Wait  10`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00A20011 )
        Wait  7`
        Call  SetAnimation  ( .Actor:Self 00000001 00A20012 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  RunToGoal ( .Actor:Self 00000008 .True )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RunToGoal     ( .Actor:Self 0000000A .True )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Wait  3`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000006 00000030 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RunToGoal     ( .Actor:Self 0000000A .True )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8022B06C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  UseCamPreset  ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak    ( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            EndIf
        Case  ==  0000000C
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00351000
                BreakCase
            EndIf
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Div   *Var[1]  00000002
            If  *Var[0]  <=  *Var[1]
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020031 .Actor:Self 00000001 00A20009 00A20005 ) % You have natural talent.
                BreakCase
            EndIf
            Call  GetPlayerHP   ( *Var[0] )
            If  *Var[0]  <=  00000005
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020032 .Actor:Self 00000001 00A20009 00A20005 ) % Mario, I'm afraid I must finish you.
                BreakCase
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_8022B2CC
{
    ExecWait  $Script_8022A4A4
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00351000
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  00000240
        Call  GetLastDamage ( .Actor:Self *Var[0] )
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
        EndIf
    EndIf
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[A] )
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[B] )
            Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  003F1000 % 3F1000
                BreakCase
            EndIf
            Set   *Flag[00]  .False
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[0]
                CaseOR  ==  00000001 % 1
                CaseOR  ==  00000000 % 0
                    Set   *Flag[00]  .True
                EndCaseGroup
            EndSwitch
            If  *Flag[00]  ==  .False
                BreakCase
            EndIf
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  EnableIdleScript  ( .Actor:Self 00000000 )
            If  *Var[A]  ==  00000001
                If  *Var[B]  >  00000002
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000000A )
                    Call  ActorSpeak    ( 00020030 .Actor:Self 00000001 00A20009 00A20005 ) % Hm! Excellent move.
                    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
                EndIf
            Else
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 0002002F .Actor:Self 00000001 00A20009 00A20005 ) % Foolish! That won't work on me.
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
        EndCaseGroup
    EndSwitch
    Return
    End
}

PADDING: 8022B634 to 8022B640 (00477AC4 to 00477AD0)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8022B640
{
    .Status:Normal    00A20005
    .Status:Stone     00A20000
    .Status:Sleep     00A2001C
    .Status:Poison    00A20000
    .Status:Stop      00A20000
    .Status:Static    00A20000
    .Status:Paralyze  00A20000
    .Status:Dizzy     00A2001E
    .Status:Dizzy     00A2001E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022B68C
{
    .Status:Normal    00A20006
    .Status:Stone     00A20001
    .Status:Sleep     00A2001D
    .Status:Poison    00A20001
    .Status:Stop      00A20001
    .Status:Static    00A20001
    .Status:Paralyze  00A20001
    .Status:Dizzy     00A2001F
    .Status:Dizzy     00A2001F
    .Status:End
}

#new:DefenseTable $DefenseTable_8022B6D8
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022B6E4
{
    .Status:Normal     50`
    .Status:Default    50`
    .Status:Sleep      30`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      30`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   30`
    .Status:Shrink     40`
    .Status:Stop       50`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -2`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod    -1`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022B790
{
    00800000 01000000 FB1C00FF $IdleAnimations_8022B640 $DefenseTable_8022B6D8 00000000 00000000 02F90000 00000000
}

#new:Actor $TheMaster2
{
    % stats
    [Index]        7Bb
    [Level]         0`b
    [MaxHP]        75`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022B6E4
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022B790
    [Script]      $Script_Init_8022B7DC
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         30`b  35`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  30`b % dx dy
    [StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8022B7DC
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022CF48 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022B8B0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022D634 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022CFFC )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000002 )
    Call  SetBattleFlagBits ( 00800000 .True )
    Return
    End
}

#new:Script $Script_Idle_8022B8B0
{
    Return
    End
}

#new:Script $Script_8022B8C0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A2001A
            SetConst  *Var[2]  00A2001B
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A2001A
            SetConst  *Var[2]  00A2001B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00A20006 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20003
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20003
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20003
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20008
            SetConst  *Var[2]  00A20016
            ExecWait  DoScareAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SingleStrike2
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
    Thread
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00A2000E )
    Wait  30`
    Call  SetAnimation      ( .Actor:Self 00000001 00A2000F )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BC )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  UseCamPreset      ( 00000002 )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFCE 00000000 00000000 )
            Call  RunToGoal ( .Actor:Self 0000000A .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000000 )
    Call  RunToGoal ( .Actor:Self 00000005 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000008 00000030 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000014 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000032
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Wait  3`
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_DoubleStrike2
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 0000000D )
    Call  MoveBattleCamOver ( 0000003C )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
    Wait  40`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000001 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000003B9 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  UseCamPreset  ( 00000002 )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFCE 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20013 )
            Call  RunToGoal     ( .Actor:Self 0000000A .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
    Call  RunToGoal ( .Actor:Self 00000005 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[4.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000010 )
    Wait  15`
    Call  UseCamPreset      ( 00000002 )
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
        Call  EnableActorBlur   ( .Actor:Self 00000001 )
        Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.9] )
        Call  JumpToGoal        ( .Actor:Self 00000019 .False .True .False )
        Call  EnableActorBlur   ( .Actor:Self 00000000 )
    EndThread
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.2] )
    EndThread
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
    Wait  15`
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BE )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000032
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000001E .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Wait  3`
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022CF48
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  RandInt   ( 00000064 *Var[0] )
    Switch  *Var[0]
        Case  <  00000014
            ExecWait  $Script_DoubleStrike2
        Default
            ExecWait  $Script_SingleStrike2
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8022CFFC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  UseCamPreset  ( 0000000D )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  SetTargetActor        ( .Actor:Self .Actor:Player )
                Wait  10`
                Call  ActorSpeak    ( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Call  SetAnimation  ( .Actor:Self 00000001 00A2000D )
                Wait  15`
                Call  SetAnimation  ( .Actor:Self 00000001 00A2000C )
                Wait  5`
                Call  PlaySoundAtActor      ( .Actor:Self 000020B8 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000014
                Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Set   *Var[0]  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
                Loop  0000000F
                    Add   *Var[0]  00000018
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Set   *Var[0]  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
                Loop  00000005
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
                Thread
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Add   *Var[1]  00000003
                    Loop  00000003
                        Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                        Wait  3`
                    EndLoop
                EndThread
                Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
                Loop  00000005
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00A20001 )
                Loop  00000005
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Wait  15`
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B68C )
                Call  SetAnimation      ( .Actor:Self 00000001 00A20008 )
                Wait  15`
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020033 .Actor:Self 00000001 00A2000A 00A20006 ) % Mario, you will fall!
            EndIf
        Case  ==  0000000C
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00351000
                BreakCase
            EndIf
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Div   *Var[1]  00000002
            If  *Var[0]  <=  *Var[1]
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020036 .Actor:Self 00000001 00A2000A 00A20006 ) % Don't lose your concentration. I have yet to truly ...
                BreakCase
            EndIf
            Call  GetPlayerHP   ( *Var[0] )
            If  *Var[0]  <=  00000005
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020037 .Actor:Self 00000001 00A2000A 00A20006 ) % Mario! Is this your best?!
                BreakCase
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_8022D634
{
    ExecWait  $Script_8022B8C0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00351000
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  00000240
        Call  GetLastDamage ( .Actor:Self *Var[0] )
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
        EndIf
    EndIf
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[A] )
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[B] )
            Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  003F1000 % 3F1000
                BreakCase
            EndIf
            Set   *Flag[00]  .False
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[0]
                CaseOR  ==  00000001 % 1
                CaseOR  ==  00000000 % 0
                    Set   *Flag[00]  .True
                EndCaseGroup
            EndSwitch
            If  *Flag[00]  ==  .False
                BreakCase
            EndIf
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  EnableIdleScript  ( .Actor:Self 00000000 )
            If  *Var[A]  ==  00000001
                If  *Var[B]  >  00000002
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000000A )
                    Call  ActorSpeak    ( 00020035 .Actor:Self 00000001 00A2000A 00A20006 ) % Hm! Nice maneuver.
                    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
                EndIf
            Else
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020034 .Actor:Self 00000001 00A2000A 00A20006 ) % You can't defeat me like that!
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
        EndCaseGroup
    EndSwitch
    Return
    End
}

PADDING: 8022D99C to 8022D9A0 (00479E2C to 00479E30)
00000000

#new:IdleAnimations $IdleAnimations_8022D9A0
{
    .Status:Normal    00A20005
    .Status:Stone     00A20000
    .Status:Sleep     00A2001C
    .Status:Poison    00A20000
    .Status:Stop      00A20000
    .Status:Static    00A20000
    .Status:Paralyze  00A20000
    .Status:Dizzy     00A2001E
    .Status:Dizzy     00A2001E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022D9EC
{
    .Status:Normal    00A20006
    .Status:Stone     00A20001
    .Status:Sleep     00A2001D
    .Status:Poison    00A20001
    .Status:Stop      00A20001
    .Status:Static    00A20001
    .Status:Paralyze  00A20001
    .Status:Dizzy     00A2001F
    .Status:Dizzy     00A2001F
    .Status:End
}

#new:DefenseTable $DefenseTable_8022DA38
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_8022DA44
{
    .Status:Normal     50`
    .Status:Default    50`
    .Status:Sleep      20`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      20`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   20`
    .Status:Shrink     20`
    .Status:Stop       30`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -2`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -2`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod    -2`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022DAF0
{
    00800000 01000000 FB1C00FF $IdleAnimations_8022D9A0 $DefenseTable_8022DA38 00000000 00000000 02F90000 00000000
    00120001 02000000 000000FF $IdleAnimations_8022D9A0 $DefenseTable_8022DA38 00000000 00000000 00000000 00000000
}

#new:Actor $TheMaster3
{
    % stats
    [Index]        7Cb
    [Level]         0`b
    [MaxHP]        99`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022DA44
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_8022DAF0
    [Script]      $Script_Init_8022DB60
    % move effectiveness
    [Escape]      100`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  70`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         30`b  35`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  30`b % dx dy
    [StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8022DB60
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80230B20 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022DC34 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80231408 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80230D44 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000002 )
    Call  SetBattleFlagBits ( 00800000 .True )
    Return
    End
}

#new:Script $Script_Idle_8022DC34
{
    Return
    End
}

#new:Script $Script_8022DC44
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A2001A
            SetConst  *Var[2]  00A2001B
            ExecWait  DoBurnHit
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
            Wait  1`
            Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
        Case  ==  .Event:BurnDeath % 24
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A2001A
            SetConst  *Var[2]  00A2001B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ChildThread
                Wait  30`
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                Wait  10`
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
                Wait  1`
                Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
            EndChildThread
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00A20006 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20003
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20016
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20003
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20003
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00A20008
            SetConst  *Var[2]  00A20016
            ExecWait  DoScareAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SingleStrike3
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
    Thread
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00A2000E )
    Wait  30`
    Call  SetAnimation      ( .Actor:Self 00000001 00A2000F )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BC )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  UseCamPreset      ( 00000002 )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFCE 00000000 00000000 )
            Call  RunToGoal ( .Actor:Self 0000000A .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000000 )
    Call  RunToGoal ( .Actor:Self 00000005 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 0000000A 00000030 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000014 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000032
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Wait  3`
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_DoubleStrike3
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 0000000D )
    Call  MoveBattleCamOver ( 0000003C )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
    Wait  40`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000001 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000003B9 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  UseCamPreset  ( 00000002 )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFCE 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20013 )
            Call  RunToGoal     ( .Actor:Self 0000000A .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
    Call  RunToGoal ( .Actor:Self 00000005 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[4.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000006 00000010 )
    Wait  15`
    Call  UseCamPreset      ( 00000002 )
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
        Call  EnableActorBlur   ( .Actor:Self 00000001 )
        Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.9] )
        Call  JumpToGoal        ( .Actor:Self 00000019 .False .True .False )
        Call  EnableActorBlur   ( .Actor:Self 00000000 )
    EndThread
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.2] )
    EndThread
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000007 00000020 )
    Wait  15`
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BE )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000032
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000001E .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Wait  3`
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TripleStrike3
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 0000000D )
    Call  MoveBattleCamOver ( 0000003C )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
    Wait  20`
    Call  ActorSpeak        ( 0002003C .Actor:Self 00000001 00A2000A 00A20006 ) % Hyaaahhhh!!! Mario! Survive this if you can!!!!
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000001 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000003B9 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  UseCamPreset  ( 00000002 )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFCE 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20013 )
            Call  RunToGoal     ( .Actor:Self 0000000A .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
    Call  RunToGoal ( .Actor:Self 00000005 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[4.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000010 )
    Wait  15`
    Call  UseCamPreset      ( 00000002 )
    Thread
        Call  EnableActorBlur   ( .Actor:Self 00000001 )
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
        Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
        Call  JumpToGoal        ( .Actor:Self 00000019 .False .True .False )
        Call  EnableActorBlur   ( .Actor:Self 00000000 )
    EndThread
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.2] )
    EndThread
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000006 00000000 )
    Thread
        Wait  5`
        Call  EnablePlayerBlur  ( 00000001 )
        Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.3] )
        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Call  SetJumpAnimations ( .Actor:Player 00000000 00010017 00010017 00010017 )
        Call  SetGoalPos        ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Call  80273444  ( 00000032 00000000 00000000 )
        Call  EnablePlayerBlur  ( 00000000 )
    EndThread
    Wait  15`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.8] )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20021 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000001E .False .True .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20023 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Wait  3`
    Add   *Var[0]  00000014
    Set   *Var[1]  00000000
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
        Wait  10`
        Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00A2000E )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000003B4 )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00A2000F )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
    Call  RunToGoal     ( .Actor:Self 00000003 .False )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[6.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[5.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[4.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[2.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.2] )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 000003EE )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000007 00000020 )
    Wait  15`
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BE )
            Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000032
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000001E .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Wait  3`
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
            Wait  20`
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80230240
{
    Call  UseCamPreset  ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 0000000D )
    Call  MoveBattleCamOver ( 0000003C )
    Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
    Wait  20`
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00A20013 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 00A2000E )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
    Wait  15`
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000032
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000005A 00000000 .Easing:CosInOut )
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000001E )
    Wait  30`
    Set   *Var[0]  00000050
    Loop  00000005
        Add   *Var[0]  00000014
        Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var[0] 00000000 00000000 )
        Wait  1`
    EndLoop
    Loop  00000005
        Sub   *Var[0]  00000014
        Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var[0] 00000000 00000000 )
        Wait  1`
    EndLoop
    Wait  10`
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8023059C
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 0000000D )
    Call  MoveBattleCamOver ( 0000003C )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
    Set   *Var[0]  00000050
    Loop  0000001E
        Add   *Var[0]  00000002
        Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var[0] 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  UseCamPreset  ( 00000002 )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00A2000E )
    Thread
        Set   *Var[0]  0000008C
        Loop  0000001E
            Sub   *Var[0]  00000002
            Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var[0] 00000000 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:GoldenFlames )
    Wait  1`
    Call  ModifyActorDecoration ( .Actor:Self 00000002 00000000 00000028 00000028 00000000 00000000 )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetPartAlpha      ( .Actor:Self 00000002 00000050 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.1] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 0000000A 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80230914
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  SetBattleCamOffsetZ   ( 0000000D )
    Call  MoveBattleCamOver ( 0000003C )
    Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
    Set   *Var[0]  00000050
    Loop  0000001E
        Add   *Var[0]  00000002
        Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var[0] 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:Linear )
    Wait  00002710
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 0000000A 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80230B20
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  GetActorHP    ( .Actor:Self *Var[0] )
        If  *Var[0]  <  00000000
            ExecWait  $Script_80230240
        Else
            Call  GetActorHP    ( .Actor:Player *Var[0] )
            If  *Var[0]  >  00000014
                Call  RandInt   ( 00000064 *Var[0] )
                Switch  *Var[0]
                    Case  <  0000001E
                        ExecWait  $Script_TripleStrike3
                    Case  <  00000032
                        ExecWait  $Script_DoubleStrike3
                    Default
                        ExecWait  $Script_SingleStrike3
                EndSwitch
            Else
                Call  RandInt   ( 00000064 *Var[0] )
                Switch  *Var[0]
                    Case  <  00000032
                        ExecWait  $Script_DoubleStrike3
                    Default
                        ExecWait  $Script_SingleStrike3
                EndSwitch
            EndIf
        EndIf
    Else
        Call  RandInt   ( 00000064 *Var[0] )
        Switch  *Var[0]
            Case  <  00000064
                ExecWait  $Script_80230914
            Case  <  00000032
                ExecWait  $Script_8023059C
        EndSwitch
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80230D44
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  UseCamPreset  ( 0000000D )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  SetTargetActor        ( .Actor:Self .Actor:Player )
                Wait  10`
                Call  ActorSpeak    ( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Call  SetAnimation  ( .Actor:Self 00000001 00A2000D )
                Wait  15`
                Call  SetAnimation  ( .Actor:Self 00000001 00A2000C )
                Wait  5`
                Call  PlaySoundAtActor      ( .Actor:Self 000020B8 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000014
                Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Set   *Var[0]  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
                Loop  0000000F
                    Add   *Var[0]  00000018
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Set   *Var[0]  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
                Loop  00000005
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
                Thread
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Add   *Var[1]  00000003
                    Loop  00000003
                        Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                        Wait  3`
                    EndLoop
                EndThread
                Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
                Loop  00000005
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00A20001 )
                Loop  00000005
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
                    Wait  1`
                EndLoop
                Wait  15`
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022D9EC )
                Call  SetAnimation      ( .Actor:Self 00000001 00A20008 )
                Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
                Wait  2`
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
                Wait  1`
                Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
                Wait  15`
                Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020038 .Actor:Self 00000001 00A2000A 00A20006 ) % Kwaaaaa! Behold my fury, Mario!!
            EndIf
        Case  ==  0000000C
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00351000
                BreakCase
            EndIf
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
            Div   *Var[1]  00000002
            If  *Var[0]  <=  *Var[1]
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 0002003B .Actor:Self 00000001 00A2000A 00A20006 ) % Now...it is time I stopped being so merciful.
                BreakCase
            EndIf
            Call  GetPlayerHP   ( *Var[0] )
            If  *Var[0]  <=  0000000A
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 0002003D .Actor:Self 00000001 00A2000A 00A20006 ) % You underestimate me, Mario! Did you really think  ...
                BreakCase
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_80231408
{
    ExecWait  $Script_8022DC44
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00351000
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  00000240
        Call  GetLastDamage ( .Actor:Self *Var[0] )
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
        EndIf
    EndIf
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[A] )
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[B] )
            Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  003F1000 % 3F1000
                BreakCase
            EndIf
            Set   *Flag[00]  .False
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[0]
                CaseOR  ==  00000001 % 1
                CaseOR  ==  00000000 % 0
                    Set   *Flag[00]  .True
                EndCaseGroup
            EndSwitch
            If  *Flag[00]  ==  .False
                BreakCase
            EndIf
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  EnableIdleScript  ( .Actor:Self 00000000 )
            If  *Var[A]  ==  00000001
                If  *Var[B]  >  00000002
                    Call  UseCamPreset  ( 00000002 )
                    Call  MoveBattleCamOver ( 0000000A )
                    Call  ActorSpeak    ( 0002003A .Actor:Self 00000001 00A2000A 00A20006 ) % Hm! You have great hidden strength for one clothed ...
                    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
                EndIf
            Else
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  ActorSpeak        ( 00020039 .Actor:Self 00000001 00A2000A 00A20006 ) % You foolish novice! Do you think you can beat me w ...
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_80231770
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  $Function_80219900    ( 00000000 )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  1`
    Loop
        Call  $Function_80219900    ( 00000001 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000001
            BreakLoop
        EndIf
    EndLoop
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
    Wait  2`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
    Wait  3`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  5`
    Loop
        Call  $Function_80219900    ( 00000002 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000002
            BreakLoop
        EndIf
    EndLoop
    Call  RandInt   ( 00000050 *Var[B] )
    Add   *Var[B]  0000001E
    Loop  *Var[B]
        Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
    EndLoop
    Call  RandInt   ( 00000005 *Var[0] )
    If  *Var[0]  !=  00000000
        Goto  0
    EndIf
    Call  $Function_80219900    ( 00000003 )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  1`
    Loop
        Call  $Function_80219900    ( 00000001 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000001
            BreakLoop
        EndIf
    EndLoop
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
    Wait  2`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
    Wait  3`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  5`
    Loop
        Call  $Function_80219900    ( 00000002 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000002
            BreakLoop
        EndIf
    EndLoop
    Call  RandInt   ( 00000050 *Var[B] )
    Add   *Var[B]  0000001E
    Loop  *Var[B]
        Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_80231E00
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:IntTable $IntTable_802321A4
{
    00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8
    FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF
}

% Origin: HEURISTIC
#new:Script $Script_802321E4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[5]  00000005
    UseIntBuffer  $IntTable_802321A4
    Label  0
    Get1Int  *Var[1]
    If  *Var[1]  ==  000000FF
        UseIntBuffer  $IntTable_802321A4
        Get1Int  *Var[1]
    EndIf
    Set   *Var[0]  *Var[5]
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] 00000000 )
    Wait  1`
    Add   *Var[5]  00000001
    Set   *Var[C]  *Var[B]
    Sub   *Var[C]  00000014
    If  *Var[5]  >  *Var[C]
        Goto  1
    EndIf
    Set   *Var[0]  *Var[5]
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] 00000000 )
    Wait  1`
    Add   *Var[5]  00000001
    Set   *Var[C]  *Var[B]
    Sub   *Var[C]  00000014
    If  *Var[5]  >  *Var[C]
        Goto  1
    EndIf
    Goto  0
    Label  1
    Set   *Var[2]  00000000
    Loop  00000014
        Add   *Var[5]  00000001
        Sub   *Var[1]  00000002
        Set   *Var[0]  *Var[5]
        Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] 00000000 )
        Wait  1`
    EndLoop
    Sub   *Var[5]  00000118
    Set   *Var[1]  00000000
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232450
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_802327F4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  0000002C
        Exec  $Script_80231E00
        Wait  5`
        Set   *Var[0]  0000002F
        Exec  $Script_80231E00
        Wait  5`
        Set   *Var[0]  0000002E
        Exec  $Script_80231E00
        Wait  5`
        Set   *Var[0]  0000002D
        Exec  $Script_80231E00
    EndThread
    Set   *Var[0]  00000028
    Exec  $Script_80231770
    Return
    End
}

#new:Script $Script_AfterBattle_802328F0
{
    Return
    End
}

#new:Stage $Stage_80232900
{
    $ASCII_80232B98  % mac_tex
    $ASCII_80232B88  % mac_bt01_shape
    $ASCII_80232B78  % mac_bt01_hit
    $Script_BeforeBattle_802327F4
    $Script_AfterBattle_802328F0
    $ASCII_80232B70  % nok_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80232928 to 80232930 (0047EDB8 to 0047EDC0)
00000000 00000000

#new:Script $Script_BeforeBattle_80232930
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  802536A8  ( 00000001 )
    Return
    End
}

#new:Script $Script_AfterBattle_8023297C
{
    Call  802536A8  ( 00000000 )
    Return
    End
}

#new:Stage $Stage_8023299C
{
    $ASCII_80232BC0  % mac_tex
    $ASCII_80232BB0  % mac_bt02_shape
    $ASCII_80232BA0  % mac_bt02_hit
    $Script_BeforeBattle_80232930
    $Script_AfterBattle_8023297C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802329C4 to 802329D0 (0047EE54 to 0047EE60)
00000000 00000000 00000000

#new:Formation $Formation_00
{
    $Chan 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Lee 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $TheMaster1 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $TheMaster2 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $TheMaster3 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80232C00 00000001 $Formation_00 $Stage_8023299C 00000000 % unused
    $SJIS_80232BF8 00000001 $Formation_01 $Stage_8023299C 00000000 % unused
    $SJIS_80232BE8 00000001 $Formation_02 $Stage_8023299C 00000000 % unused
    $SJIS_80232BD8 00000001 $Formation_03 $Stage_8023299C 00000000 % unused
    $SJIS_80232BC8 00000001 $Formation_04 $Stage_8023299C 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80232C10 $Stage_80232900
    $ASCII_80232C08 $Stage_8023299C
    00000000 00000000
}

PADDING: 80232AEC to 80232AF0 (0047EF7C to 0047EF80)
00000000

#new:ConstDouble $ConstDouble_80232AF0
{
    47.000000d
}

#new:ConstDouble $ConstDouble_80232AF8
{
    1.120000d
}

#new:ConstDouble $ConstDouble_80232B00
{
    0.530000d
}

#new:ConstDouble $ConstDouble_80232B08
{
    47.000000d
}

#new:ConstDouble $ConstDouble_80232B10
{
    0.800000d
}

#new:ConstDouble $ConstDouble_80232B18
{
    0.530000d
}

#new:ConstDouble $ConstDouble_80232B20
{
    0.800000d
}

#new:ConstDouble $ConstDouble_80232B28
{
    16.500000d
}

#new:ConstDouble $ConstDouble_80232B30
{
    33.000000d
}

#new:ConstDouble $ConstDouble_80232B38
{
    4.800000d
}

#new:JumpTable $JumpTable_80232B40
{
    $Function_80219824[54] $Function_80219824[60] $Function_80219824[6C] $Function_80219824[78]
    $Function_80219824[B0] $Function_80219824[90] $Function_80219824[9C] $Function_80219824[A8]
    $Function_80219824[84]
}

PADDING: 80232B64 to 80232B70 (0047EFF4 to 0047F000)
00000000 00000000 00000000

#new:ASCII $ASCII_80232B70
{
    "nok_bg"
}

#new:ASCII $ASCII_80232B78
{
    "mac_bt01_hit"
}

#new:ASCII $ASCII_80232B88
{
    "mac_bt01_shape"
}

#new:ASCII $ASCII_80232B98
{
    "mac_tex"
}

#new:ASCII $ASCII_80232BA0
{
    "mac_bt02_hit"
}

#new:ASCII $ASCII_80232BB0
{
    "mac_bt02_shape"
}

#new:ASCII $ASCII_80232BC0
{
    "mac_tex"
}

#new:SJIS $SJIS_80232BC8
{
    シショー その３ % shisho- sono3
}

#new:SJIS $SJIS_80232BD8
{
    シショー その２ % shisho- sono2
}

#new:SJIS $SJIS_80232BE8
{
    シショー その１ % shisho- sono1
}

#new:SJIS $SJIS_80232BF8
{
    リー % ri-
}

#new:SJIS $SJIS_80232C00
{
    チェン % chen
}

#new:ASCII $ASCII_80232C08
{
    "mac_02"
}

#new:ASCII $ASCII_80232C10
{
    "mac_01"
}

PADDING: 80232C18 to 80232C20 (0047F0A8 to 0047F0B0)
00000000 00000000

