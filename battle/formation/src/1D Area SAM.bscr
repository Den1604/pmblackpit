% Script File: 1D Area SAM.bscr
% Decoded from: 623BA0 to 63D1E0 (1D Area SAM)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFB8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        S0, 10 (SP)
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        A0, 148 (S4)
	LW        S2, C (S4)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S3, V0
	BEQ       S0, R0, .o8C
	ADDIU     S1, S3, C
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	JAL       ~Func:get_variable
	COPY      A0, S4
	SH        V0, 70 (S3)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	COPY      A0, S4
	SH        V0, 72 (S3)
	SW        R0, 74 (S4)
	SW        R0, 70 (S4)
	LH        V1, 72 (S3)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o8C
	ADDIU     V0, R0, 2
	SW        V0, 70 (S4)
	.o8C
	LW        V0, 70 (S4)
	BNE       V0, R0, .o470
	NOP
	LWC1      F0, 144 (S3)
	LWC1      F24, C (S1)
	LWC1      F26, 14 (S1)
	SWC1      F0, 0 (S1)
	LWC1      F0, 148 (S3)
	MFC1      A2, F24
	MFC1      A3, F26
	LWC1      F22, 0 (S1)
	SWC1      F0, 4 (S1)
	LWC1      F20, 14C (S3)
	MOV.S     F12, F22
	MOV.S     F14, F20
	JAL       ~Func:atan2
	SWC1      F20, 8 (S1)
	MOV.S     F12, F22
	MFC1      A2, F24
	MFC1      A3, F26
	MOV.S     F14, F20
	JAL       ~Func:dist2D
	SWC1      F0, 48 (S1)
	LH        V0, 64 (S1)
	MOV.S     F4, F0
	BNE       V0, R0, .o13C
	SWC1      F4, 4C (S1)
	LWC1      F0, 40 (S1)
	LWC1      F2, 40 (S1)
	DIV.S     F0, F4, F0
	TRUNC.W.S F10, F0
	MFC1      V1, F10
	NOP
	SLL       V0, V1, 10
	SRA       V0, V0, 10
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F2
	NOP
	MOV.S     F2, F4
	SH        V1, 64 (S1)
	BEQ       R0, R0, .o170
	SUB.S     F8, F2, F0
	.o13C
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LH        V0, 64 (S1)
	DIV.S     F2, F4, F2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 4C (S1)
	SWC1      F2, 40 (S1)
	SUB.S     F8, F4, F0
	.o170
	LH        V1, 64 (S1)
	BEQ       V1, R0, .o860
	ADDIU     V0, R0, 2
	LH        V0, 64 (S1)
	LWC1      F2, C (S1)
	LIO       AT, 40490FD0
	MTC1      AT, F0
	LWC1      F4, 0 (S1)
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	DIV.S     F0, F0, F6
	SUB.S     F2, F2, F4
	SWC1      F0, 3C (S1)
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F2, F2, F0
	LWC1      F0, 10 (S1)
	SWC1      F2, 30 (S1)
	LWC1      F2, 4 (S1)
	SW        R0, 44 (S1)
	SUB.S     F0, F0, F2
	LWC1      F4, 14 (S1)
	MOV.S     F2, F6
	DIV.S     F0, F0, F2
	SWC1      F0, 34 (S1)
	MOV.S     F0, F6
	DIV.S     F0, F8, F0
	LWC1      F2, 8 (S1)
	LH        V0, 66 (S1)
	SUB.S     F4, F4, F2
	LWC1      F2, 40 (S1)
	SLTI      V0, V0, 3
	ADD.S     F2, F2, F0
	DIV.S     F4, F4, F6
	SWC1      F4, 38 (S1)
	BEQ       V0, R0, .o320
	SWC1      F2, 40 (S1)
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o224
	DIV       V1, V0
	BREAK     1C00
	.o224
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o23C
	LUI       AT, 8000
	BNE       V1, AT, .o23C
	NOP
	BREAK     1800
	.o23C
	MFLO      V1
	LWC1      F8, 4C (S1)
	LIF       F3, 2.8125
	MTC1      R0, F2
	CVT.D.S   F0, F8
	SUB.D     F0, F0, F2
	LIF       F3, 2.375
	MTC1      R0, F2
	CVT.S.D   F8, F0
	CVT.D.S   F0, F8
	DIV.D     F0, F0, F2
	CVT.S.D   F8, F0
	LAD       F2, $ConstDouble_802312D0
	CVT.D.S   F0, F8
	ADD.D     F0, F0, F2
	LIF       F2, 90.0
	CVT.S.D   F8, F0
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	LH        V1, 66 (S1)
	ADDIU     V0, R0, 2
	SWC1      F2, 24 (S1)
	SWC1      F8, 50 (S1)
	BNE       V1, V0, .o2D0
	SWC1      F0, 28 (S1)
	LAD       F2, $ConstDouble_802312D8
	CVT.D.S   F0, F8
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	.o2D0
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	LWC1      F22, 3C (S1)
	SW        R0, 18 (S1)
	MUL.S     F12, F12, F0
	NOP
	SW        R0, 1C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_802312E0
	BEQ       R0, R0, .o430
	CVT.D.S   F0, F0
	.o320
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o334
	DIV       V1, V0
	BREAK     1C00
	.o334
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o34C
	LUI       AT, 8000
	BNE       V1, AT, .o34C
	NOP
	BREAK     1800
	.o34C
	MFLO      V1
	LWC1      F8, 4C (S1)
	LIF       F3, 2.8125
	MTC1      R0, F2
	CVT.D.S   F0, F8
	SUB.D     F0, F0, F2
	LIF       F3, 2.375
	MTC1      R0, F2
	CVT.S.D   F8, F0
	CVT.D.S   F0, F8
	DIV.D     F0, F0, F2
	CVT.S.D   F8, F0
	LAD       F2, $ConstDouble_802312E8
	CVT.D.S   F0, F8
	ADD.D     F0, F0, F2
	LIF       F2, 90.0
	CVT.S.D   F8, F0
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	LH        V1, 66 (S1)
	ADDIU     V0, R0, 4
	SWC1      F2, 24 (S1)
	SWC1      F8, 50 (S1)
	BNE       V1, V0, .o3E4
	SWC1      F0, 28 (S1)
	LIF       F3, 1.90625
	MTC1      R0, F2
	CVT.D.S   F0, F8
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	.o3E4
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	LWC1      F22, 3C (S1)
	SW        R0, 18 (S1)
	MUL.S     F12, F12, F0
	NOP
	SW        R0, 1C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_802312F0
	CVT.D.S   F0, F0
	.o430
	MUL.D     F0, F0, F2
	NOP
	MUL.D     F0, F0, F22
	NOP
	ADD.D     F0, F0, F22
	ADD.D     F20, F20, F0
	CVT.S.D   F20, F20
	SWC1      F20, 44 (S1)
	ADDIU     A0, R0, FF81
	LW        A2, 58 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 2081
	ADDIU     V0, R0, 1
	SW        V0, 70 (S4)
	.o470
	LW        V1, 70 (S4)
	ADDIU     V0, R0, 2
	BEQ       V1, V0, .o6D0
	ADDIU     V0, R0, 1
	SLTI      V0, V1, 3
	BEQ       V0, R0, .o49C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o4B0
	CLEAR     V0
	BEQ       R0, R0, .o860
	NOP
	.o49C
	ADDIU     V0, R0, 3
	BEQ       V1, V0, .o78C
	CLEAR     V0
	BEQ       R0, R0, .o860
	NOP
	.o4B0
	LWC1      F2, 44 (S1)
	LIO       AT, 3FC90FD0
	MTC1      AT, F0
	NOP
	C.LT.S    F0, F2
	NOP
	BC1F      .o4E0
	ADDIU     A0, R0, FF81
	LW        A2, 5C (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	.o4E0
	LWC1      F6, 0 (S1)
	LWC1      F0, 30 (S1)
	LWC1      F4, 4 (S1)
	LWC1      F22, 144 (S3)
	ADD.S     F6, F6, F0
	LWC1      F0, 34 (S1)
	LWC1      F2, 38 (S1)
	ADD.S     F4, F4, F0
	LWC1      F0, 8 (S1)
	LWC1      F20, 148 (S3)
	ADD.S     F0, F0, F2
	SWC1      F6, 0 (S1)
	SWC1      F4, 4 (S1)
	SWC1      F0, 8 (S1)
	LWC1      F0, 148 (S3)
	MOV.S     F2, F6
	SWC1      F0, 18 (S1)
	SWC1      F2, 144 (S3)
	JAL       ~Func:sin_rad
	LWC1      F12, 44 (S1)
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 4 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, 148 (S3)
	LWC1      F0, 8 (S1)
	SWC1      F0, 14C (S3)
	LWC1      F2, 10 (S1)
	LWC1      F0, 148 (S3)
	C.LT.S    F0, F2
	NOP
	BC1F      .o580
	MOV.S     F12, F22
	LH        V0, 64 (S1)
	SLTI      V0, V0, 3
	BNEL      V0, R0, .o57C
	SWC1      F2, 148 (S3)
	MOV.S     F12, F22
	.o57C
	LWC1      F0, 148 (S3)
	.o580
	LW        A2, 144 (S3)
	NEG.S     F0, F0
	MFC1      A3, F0
	JAL       ~Func:atan2
	NEG.S     F14, F20
	NEG.S     F0, F0
	SWC1      F0, 164 (S3)
	LH        V0, 66 (S1)
	LWC1      F0, 148 (S3)
	SLTI      V0, V0, 3
	BEQ       V0, R0, .o5F8
	SWC1      F0, 1C (S1)
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	MUL.S     F12, F12, F0
	NOP
	LWC1      F22, 3C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_802312F8
	BEQ       R0, R0, .o63C
	CVT.D.S   F0, F0
	.o5F8
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F20, 44 (S1)
	MUL.S     F12, F12, F0
	NOP
	LWC1      F22, 3C (S1)
	CVT.D.S   F20, F20
	LIF       F0, 360.0
	CVT.D.S   F22, F22
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LAD       F2, $ConstDouble_80231300
	CVT.D.S   F0, F0
	.o63C
	MUL.D     F0, F0, F2
	NOP
	MUL.D     F0, F0, F22
	NOP
	ADD.D     F0, F0, F22
	ADD.D     F20, F20, F0
	CVT.S.D   F20, F20
	SWC1      F20, 44 (S1)
	LWC1      F12, 24 (S1)
	LWC1      F0, 28 (S1)
	ADD.S     F12, F12, F0
	JAL       ~Func:clamp_angle
	SWC1      F12, 24 (S1)
	LHU       V0, 64 (S1)
	SWC1      F0, 24 (S1)
	ADDIU     V0, V0, FFFF
	SH        V0, 64 (S1)
	SLL       V0, V0, 10
	BNE       V0, R0, .o860
	CLEAR     V0
	LWC1      F0, 10 (S1)
	ADDIU     A0, R0, FF81
	SWC1      F0, 148 (S3)
	LWC1      F0, 18 (S1)
	LWC1      F2, 1C (S1)
	LW        A2, 60 (S1)
	SUB.S     F0, F0, F2
	LIO       AT, 3FE66666
	MTC1      AT, F2
	ADDIU     A1, R0, 1
	SWC1      F2, 3C (S1)
	NEG.S     F0, F0
	JAL       ~Func:set_animation
	SWC1      F0, 44 (S1)
	BEQ       R0, R0, .o860
	ADDIU     V0, R0, 1
	.o6D0
	SH        V0, 64 (S1)
	LH        V0, 64 (S1)
	ADDIU     V1, R0, 168
	BNE       V0, R0, .o6E8
	DIV       V1, V0
	BREAK     1C00
	.o6E8
	ADDIU     AT, R0, FFFF
	BNE       V0, AT, .o700
	LUI       AT, 8000
	BNE       V1, AT, .o700
	NOP
	BREAK     1800
	.o700
	MFLO      V1
	LWC1      F2, 18 (S1)
	LWC1      F0, 1C (S1)
	LIO       AT, 3FE66666
	MTC1      AT, F8
	LWC1      F4, 1C (S1)
	SUB.S     F2, F2, F0
	LWC1      F0, 18 (S1)
	LIF       F6, 90.0
	SUB.S     F0, F0, F4
	SWC1      F8, 3C (S1)
	SWC1      F6, 24 (S1)
	NEG.S     F2, F2
	SWC1      F2, 44 (S1)
	LAD       F2, $ConstDouble_80231308
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	CVT.S.D   F0, F0
	SWC1      F0, 50 (S1)
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (S1)
	LWC1      F0, 144 (S3)
	SWC1      F0, 0 (S1)
	LWC1      F0, 148 (S3)
	SWC1      F0, 4 (S1)
	LWC1      F0, 14C (S3)
	ADDIU     V0, R0, 3
	SWC1      F0, 8 (S1)
	SW        V0, 70 (S4)
	.o78C
	LWC1      F12, 24 (S1)
	LIO       AT, 40C90FD0
	MTC1      AT, F22
	NOP
	MUL.S     F12, F12, F22
	NOP
	LWC1      F20, 0 (S1)
	LIF       F24, 360.0
	CVT.D.S   F20, F20
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F12, 24 (S1)
	MUL.S     F12, F12, F22
	NOP
	LAD       F0, $ConstDouble_80231310
	CVT.D.S   F2, F2
	DIV.D     F2, F2, F0
	ADD.D     F20, F20, F2
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       ~Func:sin_rad
	SWC1      F20, 0 (S1)
	LWC1      F2, 50 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F12, 24 (S1)
	LWC1      F0, 28 (S1)
	ADD.S     F12, F12, F0
	LWC1      F0, 4 (S1)
	SUB.S     F0, F0, F2
	SWC1      F12, 24 (S1)
	JAL       ~Func:clamp_angle
	SWC1      F0, 4 (S1)
	LWC1      F2, 0 (S1)
	SWC1      F0, 24 (S1)
	SWC1      F2, 144 (S3)
	LWC1      F0, 4 (S1)
	SWC1      F0, 148 (S3)
	LWC1      F0, 8 (S1)
	SWC1      F0, 14C (S3)
	LHU       V1, 64 (S1)
	ADDIU     V1, V1, FFFF
	SH        V1, 64 (S1)
	SLL       V1, V1, 10
	BEQ       V1, R0, .o860
	ADDIU     V0, R0, 1
	CLEAR     V0
	.o860
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80218890
{
	ADDIU     SP, SP, FFC8
	SW        S2, 20 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S3, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o3C
	ADDIU     S3, S1, C
	SW        R0, 70 (S2)
	.o3C
	LW        V0, 70 (S2)
	BNE       V0, R0, .o64
	ADDIU     V0, R0, 1
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	SW        V0, 70 (S2)
	.o64
	LWC1      F0, 50 (S1)
	MTC1      R0, F20
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o90
	ADDIU     A0, R0, FF81
	LW        A2, 64 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	LWC1      F0, 50 (S1)
	.o90
	C.LT.S    F0, F20
	NOP
	BC1F      .oAC
	ADDIU     A0, R0, FF81
	LW        A2, 68 (S1)
	JAL       ~Func:set_animation
	ADDIU     A1, R0, 1
	.oAC
	LWC1      F4, 10 (S1)
	LWC1      F0, 50 (S1)
	LW        A1, 4C (S1)
	ADD.S     F4, F4, F0
	LWC1      F2, 48 (S1)
	LW        A2, 54 (S1)
	SUB.S     F0, F0, F2
	COPY      A0, S3
	SWC1      F4, 10 (S1)
	JAL       ~Func:add_xz_vec3f
	SWC1      F0, 50 (S1)
	LWC1      F0, 10 (S1)
	LWC1      F2, 14 (S1)
	SWC1      F0, 148 (S1)
	LWC1      F0, C (S1)
	LWC1      F4, 148 (S1)
	SWC1      F2, 14C (S1)
	C.LT.S    F4, F20
	NOP
	BC1T      .o108
	SWC1      F0, 144 (S1)
	BEQ       R0, R0, .o134
	CLEAR     V0
	.o108
	LWC1      F0, 18C (S1)
	SWC1      F20, 148 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, 144 (S1)
	LW        A2, 148 (S1)
	LW        A3, 14C (S1)
	JAL       ~Func:play_movement_dust_effects
	ADDIU     A0, R0, 2
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 148
	ADDIU     V0, R0, 1
	.o134
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_802189E4
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LH        A0, 428 (V0)
	COPY      A0, V0
	LW        V0, 0 (A0)
	ANDI      V0, V0, 800
	BNE       V0, R0, .o58
	NOP
	LBU       V0, 191 (A0)
	LW        V1, 88 (S0)
	SRL       V0, V0, 1
	ADDU      V1, V1, V0
	SW        V1, 88 (S0)
	LBU       V0, 191 (A0)
	SRL       V0, V0, 2
	BEQ       R0, R0, .o78
	ADDU      V1, V1, V0
	.o58
	LBU       V0, 191 (A0)
	LW        V1, 88 (S0)
	SRL       V0, V0, 1
	SUBU      V1, V1, V0
	SW        V1, 88 (S0)
	LBU       V0, 191 (A0)
	SRL       V0, V0, 2
	SUBU      V1, V1, V0
	.o78
	SW        V1, 88 (S0)
	LBU       V1, 191 (A0)
	LBU       A0, 190 (A0)
	SLT       V0, V1, A0
	BNEL      V0, R0, .o90
	COPY      V1, A0
	.o90
	ADDIU     V0, V1, 7E
	SW        V0, 90 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218A90
{
	ADDIU     SP, SP, FFD8
	SW        S0, 18 (SP)
	COPY      S0, A0
	LUI       A1, 42D4
	LUI       A2, 4310
	CLEAR     A0
	SW        RA, 20 (SP)
	SW        S1, 1C (SP)
	LW        S1, C (S0)
	LIF       F0, 1.0
	CLEAR     A3
	SW        R0, 14 (SP)
	JAL       80072110
	SWC1      F0, 10 (SP)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:set_variable
	COPY      A2, V0
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HEURISTIC
#new:Function $Function_80218AF4
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        V1, C (V0)
	LIF       F0, -1000.0
	NOP
	SWC1      F0, 8 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218B2C
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	COPY      A0, V0
	LW        V0, C (A0)
	LIF       F0, 144.0
	NOP
	SWC1      F0, 8 (V0)
	LW        V1, 0 (A0)
	ORI       V1, V1, 10
	SW        V1, 0 (A0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218B74
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218C40
{
	ADDIU     SP, SP, FFD8
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o44
	ADDIU     S2, S1, C
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	.o44
	LW        A1, 4C (S1)
	LW        A2, 54 (S1)
	JAL       ~Func:add_xz_vec3f
	COPY      A0, S2
	LWC1      F2, 4C (S1)
	LIF       F0, 4.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o8C
	CLEAR     A0
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	BEQ       R0, R0, .oA4
	LW        A3, 14 (S1)
	.o8C
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	LW        A3, 14 (S1)
	ADDIU     A0, R0, 1
	.oA4
	JAL       ~Func:play_movement_dust_effects
	NOP
	LWC1      F0, 40 (S2)
	LIF       F3, 1.9375
	MTC1      R0, F2
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	LWC1      F2, 0 (S2)
	CVT.S.D   F0, F0
	SWC1      F0, 40 (S2)
	SWC1      F2, 144 (S1)
	LWC1      F0, 4 (S2)
	SWC1      F0, 148 (S1)
	LWC1      F0, 8 (S2)
	SWC1      F0, 14C (S1)
	LWC1      F0, 40 (S2)
	LIF       F3, 1.875
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1T      .o10C
	ADDIU     V0, R0, 2
	CLEAR     V0
	.o10C
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218D64
{
	ADDIU     SP, SP, FFD8
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o44
	ADDIU     S2, S1, C
	LWC1      F0, 144 (S1)
	LWC1      F2, 148 (S1)
	LWC1      F4, 14C (S1)
	SWC1      F0, C (S1)
	SWC1      F2, 10 (S1)
	SWC1      F4, 14 (S1)
	.o44
	LW        A1, 4C (S1)
	LW        A2, 54 (S1)
	JAL       ~Func:add_xz_vec3f
	COPY      A0, S2
	LWC1      F2, 4C (S1)
	LIF       F0, 4.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o8C
	CLEAR     A0
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	BEQ       R0, R0, .oA4
	LW        A3, 14 (S1)
	.o8C
	LWC1      F0, 54 (S1)
	SWC1      F0, 10 (SP)
	LW        A1, C (S1)
	LW        A2, 10 (S1)
	LW        A3, 14 (S1)
	ADDIU     A0, R0, 1
	.oA4
	JAL       ~Func:play_movement_dust_effects
	NOP
	LWC1      F0, 40 (S2)
	LIF       F3, 1.9375
	MTC1      R0, F2
	CVT.D.S   F0, F0
	DIV.D     F0, F0, F2
	LWC1      F2, 0 (S2)
	CVT.S.D   F0, F0
	SWC1      F0, 40 (S2)
	SWC1      F2, 144 (S1)
	LWC1      F0, 4 (S2)
	SWC1      F0, 148 (S1)
	LWC1      F0, 8 (S2)
	SWC1      F0, 14C (S1)
	LWC1      F0, 40 (S2)
	LIF       F3, 1.875
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1T      .o10C
	ADDIU     V0, R0, 2
	CLEAR     V0
	.o10C
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218E88
{
	ADDIU     SP, SP, FFB8
	SW        RA, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        A0, 148 (A0)
	JAL       ~Func:get_actor
	COPY      S0, A1
	COPY      S1, V0
	BEQ       S0, R0, .o128
	ADDIU     S2, S1, C
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 20
	COPY      S0, V0
	ADDIU     V0, R0, 1
	ADDIU     A1, S1, 144
	ADDIU     A2, S1, 148
	SW        S0, 90 (S1)
	SW        V0, 4 (S0)
	SW        R0, 8 (S0)
	SW        V0, C (S0)
	SW        R0, 10 (S0)
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o84
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .o98
	SWC1      F0, 10 (SP)
	.o84
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o98
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LW        A2, 0 (A2)
	LW        A3, 0 (A3)
	JAL       800723B0
	CLEAR     A0
	ADDIU     A1, S1, 144
	SW        V0, 14 (S0)
	LB        V0, 210 (S1)
	ADDIU     V1, R0, A
	BEQ       V0, V1, .oE0
	ADDIU     A3, S1, 14C
	LIF       F0, 1.0
	BEQ       R0, R0, .oF4
	SWC1      F0, 10 (SP)
	.oE0
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.oF4
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	SW        R0, 18 (SP)
	LW        A1, 0 (A1)
	LUI       A2, C47A
	LW        A3, 0 (A3)
	JAL       800723B0
	ADDIU     A0, R0, 1
	SW        V0, 18 (S0)
	ADDIU     V0, R0, 1
	SW        V0, 0 (S0)
	LB        V0, 210 (S1)
	SW        V0, 1C (S0)
	.o128
	LW        S0, 84 (S2)
	LW        V0, 0 (S0)
	BEQ       V0, R0, .o458
	ADDIU     V0, R0, 2
	LW        V0, 4 (S0)
	BEQ       V0, R0, .o174
	ADDIU     V0, R0, 8
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o174
	NOP
	LW        V0, 8 (S0)
	ADDIU     V0, V0, F
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:clamp_angle
	SW        V0, 8 (S0)
	TRUNC.W.S F6, F0
	SWC1      F6, 8 (S0)
	.o174
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	LWC1      F12, 8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F0
	LIF       F2, 3.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LH        V0, 152 (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	TRUNC.W.S F6, F0
	MFC1      V1, F6
	NOP
	SLL       V0, V1, 18
	LWC1      F0, 148 (S1)
	SRA       V0, V0, 18
	SB        V1, 19A (S1)
	ADD.S     F0, F0, F2
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LH        V0, 150 (S1)
	ADD.S     F0, F0, F2
	ADDIU     V1, R0, A
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	CVT.D.S   F4, F0
	LWC1      F0, 144 (S1)
	LB        V0, 210 (S1)
	ADD.S     F22, F0, F2
	LAD       F0, $ConstDouble_80231318
	BEQL      V0, V1, .o23C
	ADD.D     F0, F4, F0
	LIF       F1, 2.625
	MTC1      R0, F0
	NOP
	ADD.D     F0, F4, F0
	.o23C
	CVT.S.D   F20, F0
	LH        V0, 154 (S1)
	LWC1      F0, 14C (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	LW        V0, C (S0)
	BEQ       V0, R0, .o3C0
	ADD.S     F24, F0, F2
	LW        V1, 10 (S0)
	BEQ       V1, R0, .o27C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o318
	NOP
	BEQ       R0, R0, .o3F8
	NOP
	.o27C
	LW        V0, 14 (S0)
	BNE       V0, R0, .o2DC
	ADDIU     V0, R0, A
	LB        V1, 210 (S1)
	BEQ       V1, V0, .o2A4
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o2B8
	SWC1      F0, 10 (SP)
	.o2A4
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o2B8
	CLEAR     A0
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 14 (S0)
	.o2DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o2F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o2F8
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 14 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	BEQ       R0, R0, .o3B4
	LW        V0, 14 (S0)
	.o318
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o334
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o334
	LW        V0, 18 (S0)
	BNE       V0, R0, .o39C
	NOP
	LB        V1, 210 (S1)
	ADDIU     V0, R0, A
	BEQ       V1, V0, .o360
	NOP
	LIF       F0, 1.0
	BEQ       R0, R0, .o374
	SWC1      F0, 10 (SP)
	.o360
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 10 (SP)
	.o374
	ADDIU     A0, R0, 1
	MFC1      A1, F22
	MFC1      A2, F20
	MFC1      A3, F24
	ADDIU     V0, R0, 5
	SW        V0, 14 (SP)
	JAL       800723B0
	SW        R0, 18 (SP)
	SW        V0, 18 (S0)
	LW        V0, 18 (S0)
	.o39C
	LW        V0, C (V0)
	SWC1      F22, 4 (V0)
	LW        V0, 18 (S0)
	LW        V0, C (V0)
	SWC1      F20, 8 (V0)
	LW        V0, 18 (S0)
	.o3B4
	LW        V0, C (V0)
	BEQ       R0, R0, .o3F8
	SWC1      F24, C (V0)
	.o3C0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o3DC
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o3DC
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o3F8
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o3F8
	LB        V1, 210 (S1)
	LW        V0, 1C (S0)
	BEQ       V0, V1, .o454
	CLEAR     V0
	LW        V0, C (S0)
	BEQ       V0, R0, .o454
	CLEAR     V0
	LW        V1, 14 (S0)
	BEQ       V1, R0, .o430
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 14 (S0)
	.o430
	LW        V1, 18 (S0)
	BEQ       V1, R0, .o44C
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	SW        R0, 18 (S0)
	.o44C
	LB        V1, 210 (S1)
	CLEAR     V0
	.o454
	SW        V1, 1C (S0)
	.o458
	LW        RA, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80219304
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LW        A0, 90 (V0)
	LW        V1, 14 (A0)
	BEQ       V1, R0, .o2C
	SW        R0, 0 (A0)
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o2C
	LW        V1, 18 (A0)
	BEQ       V1, R0, .o44
	NOP
	LW        V0, 0 (V1)
	ORI       V0, V0, 10
	SW        V0, 0 (V1)
	.o44
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219358
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, 4 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802193A4
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, C (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802193F0
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	LW        S0, 90 (V0)
	SW        V0, 10 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021943C
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	ADDIU     V0, R0, 1
	COPY      A1, A0
	COPY      A2, A0
	LAW       V1, 801512F0
	COPY      A3, A0
	JAL       ~Func:set_background_color_blend
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219480
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_GetPartner
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        S1, 14 (SP)
	LIA       S1, 8010F290
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LB        A2, 12 (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LB        V0, 12 (S1)
	LW        A1, 0 (S0)
	SLL       V0, V0, 3
	ADDU      V0, V0, S1
	LB        A2, 15 (V0)
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219524
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	COPY      S0, V0
	COPY      V1, V0
	ADDIU     S0, S0, FFFF
	SLTIU     V0, S0, 9
	BEQ       V0, R0, .oB0
	CLEAR     A0
	SLL       V0, S0, 2
	LTW       V0, V0 ($JumpTable_80231320)
	JR        V0
	NOP
    % LBL: from $JumpTable_80231320 , entry 0`
	LIA       A0, $SpecialFormation_8021E660
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80231320 , entry 1`
	LIA       A0, $SpecialFormation_80220314
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80231320 , entry 2`
	LIA       A0, $SpecialFormation_80221574
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80231320 , entry 3`
	LIA       A0, $SpecialFormation_80222500
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80231320 , entry 8`
	LIA       A0, $SpecialFormation_802238D0
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80231320 , entry 5`
	LIA       A0, $SpecialFormation_802247CC
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80231320 , entry 6`
	LIA       A0, $SpecialFormation_80226164
	BEQ       R0, R0, .oB0
	RESERVED
    % LBL: from $JumpTable_80231320 , entry 7`
	LIA       A0, $SpecialFormation_80227404
    % LBL: from $JumpTable_80231320 , entry 4`
	.oB0
	LB        V1, 1F1 (V1)
	SW        V1, 8 (A0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802195F0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802196BC
{
	ADDIU     SP, SP, FFC0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 34 (SP)
	SW        S6, 30 (SP)
	SW        S5, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F20, 38 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S6, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S5, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S1, V0
	ADDIU     A0, R0, 1
	MTC1      S6, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A1, F2
	MTC1      S5, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A2, F2
	MTC1      S4, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A3, F2
	COPY      S0, V0
	SWC1      F20, 10 (SP)
	JAL       80072230
	SW        S2, 14 (SP)
	LW        V1, C (V0)
	SW        S3, 18 (V1)
	LW        V1, C (V0)
	SW        S1, 1C (V1)
	LW        V1, C (V0)
	SW        S0, 20 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, FF
	SW        A0, 28 (V1)
	LW        V1, C (V0)
	SW        A0, 2C (V1)
	LW        V1, C (V0)
	SW        A0, 30 (V1)
	LW        RA, 34 (SP)
	LW        S6, 30 (SP)
	LW        S5, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

PADDING: 80219838 to 80219840 (006253D8 to 006253E0)
00000000 00000000

% Origin: HINT
#new:Function $Function_80219840
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80219998
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_802199C4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80219A90
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80219AE8
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80219BAC to 80219BB0 (0062574C to 00625750)
00000000

% Origin: HEURISTIC
#new:Function $Function_80219BB0
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_8022EFD0
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_8022EFD0
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80219DA8
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219DCC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219ED0
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_8022F3E0
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_8022F3E0
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_8021A0C8
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_8021A0EC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021A1F0
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_8022F820
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_8022F820
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_8021A3E8
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_8021A40C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021A510
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_8022FB70
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_8022FB70
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_8021A708
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_8021A72C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021A830
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_8022FEE0
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_8022FEE0
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_8021AA28
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_8021AA4C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021AB50
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_80230260
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80230260
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_8021AD48
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_8021AD6C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021AE70
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8014720C
	NOP
	LW        RA, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 8021AE8C to 8021AE90 (00626A2C to 00626A30)
00000000

#new:IdleAnimations $IdleAnimations_8021AE90
{
    .Status:Normal    004E0002
    .Status:Stone     004E0000
    .Status:Sleep     004E000D
    .Status:Poison    004E0002
    .Status:Stop      004E0000
    .Status:Static    004E0002
    .Status:Paralyze  004E0000
    .Status:Dizzy     004E000E
    .Status:Fear      004E000E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021AEDC
{
    .Status:Normal    004E000A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021AEE8
{
    .Status:Normal    004E0004
    .Status:End
}

#new:DefenseTable $DefenseTable_8021AEF4
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021AF00
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     75`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021AFAC
{
    00800000 01000000 FB1900FF $IdleAnimations_8021AE90 $DefenseTable_8021AEF4 00000000 00000000 FEF60000 00000000
}

#new:Actor $Duplighost
{
    % stats
    [Index]        3Bb
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021AF00
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021AFAC
    [Script]      $Script_Init_8021AFF8
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  36`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021AFF8
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227C40 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021B110 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B15C )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B070 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_NextTurn_8021B070
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
        Case  ==  0000000C
        Case  ==  0000000B
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000003
                Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
            EndIf
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_8021B110
{
    Return
    End
}

#new:Script $Script_8021B120
{
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  004E0004
    ExecWait  DoReturnHome
    Return
    End
}

#new:Script $Script_HandleEvent_8021B15C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000C
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000C
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoJumpBack
            ExecWait  $Script_8021B120
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E0002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E0002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E0004
            SetConst  *Var[2]  004E000A
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E0004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004E000A
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_LungeAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 004E0007 )
    Wait  20`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002CB 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 004E0008 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFF9C 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
            Call  JumpToGoal    ( .Actor:Self 00000011 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorPos       ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  SetAnimation      ( .Actor:Self 00000001 004E0002 )
            Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8021B120
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 004E0008 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Call  AddGoalPos    ( .Actor:Self *Fixed[4.0] *Fixed[-6.0] 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF1 00000000 )
    EndIf
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
    Call  JumpToGoal        ( .Actor:Self 0000000C .False .True .False )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
            Call  SetAnimation  ( .Actor:Self 00000001 004E0009 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_8021B120
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021BBFC
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  RemoveActor   ( *Var[0] )
    Return
    End
}

#new:Script $Script_8021BC34
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Wait  30`
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    Call  UseIdleAnimation  ( *Var[A] .False )
    Call  8027D32C  ( *Var[A] )
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003
        Add   *Var[2]  00000005
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    Call  SetEnemyHP    ( *Var[A] *Var[B] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetActorPos   ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00800000 .True )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00020001 .False )
    Call  SetActorFlagBits  ( *Var[A] 00400004 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  SetActorVar   ( *Var[A] 00000008 00000002 )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021AEDC )
    Call  SetAnimation  ( *Var[A] 00000001 004E000A )
    Wait  30`
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    If  *Var[C]  >  00000000
        Set   *Var[C]  00000000
        Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.5] )
        Call  SetActorSounds        ( *Var[A] .ActorSound:Jump 00000301 00000000 )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000F .False .True .False )
        Call  ResetActorSounds      ( *Var[A] .ActorSound:Jump )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
        Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
        Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
    EndIf
    Call  ForceHomePos  ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  HPBarToHome   ( *Var[A] )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021AE90 )
    Call  SetAnimation  ( *Var[A] 00000001 004E0002 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021C0F8
{
    Set   *Var[9]  *Var[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Add   *Var[2]  0000000A
    Add   *Var[3]  0000000A
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetGoalPos        ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
    ExecWait  DoShockHit
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    Call  UseIdleAnimation  ( *Var[A] .False )
    Call  8027D32C  ( *Var[A] )
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003
        Add   *Var[2]  00000005
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    Call  SetEnemyHP    ( *Var[A] *Var[B] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetActorPos   ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00800000 .True )
    Call  SetPartFlagBits   ( *Var[A] 00000001 00020001 .False )
    Call  SetActorFlagBits  ( *Var[A] 00400004 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  SetActorVar   ( *Var[A] 00000008 00000003 )
    Call  SetPartFlagBits   ( .Actor:Self *Var[9] 00000001 .True )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021AEDC )
    Call  SetAnimation  ( *Var[A] 00000001 004E000A )
    Wait  15`
    Call  UseCamPreset  ( 00000002 )
    Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.5] )
    Call  GetActorPos   ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Add   *Var[B]  0000001E
    Set   *Var[C]  00000000
    Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  JumpToGoal    ( *Var[A] 0000000F .False .True .False )
    Add   *Var[B]  00000014
    Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
    Add   *Var[B]  0000000A
    Call  SetGoalPos    ( *Var[A] *Var[B] *Var[C] *Var[D] )
    Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
    Wait  20`
    Call  AddActorDecoration    ( *Var[A] 00000001 00000000 .Decoration:Sweat )
    Call  SetActorYaw   ( *Var[A] 000000B4 )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021AEE8 )
    Call  SetAnimation  ( *Var[A] 00000001 004E0004 )
    Call  SetActorSpeed ( *Var[A] *Fixed[8.0] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  SetGoalPos    ( *Var[A] *Var[B] 00000000 *Var[D] )
    Call  RunToGoal     ( *Var[A] 00000000 .False )
    Call  SetAnimation  ( *Var[A] 00000001 004E0002 )
    Call  SetActorYaw   ( *Var[A] 00000000 )
    Call  RemoveActorDecoration ( *Var[A] 00000001 00000000 )
    Call  SetIdleAnimations ( *Var[A] 00000001 $IdleAnimations_8021AE90 )
    Call  ForceHomePos  ( *Var[A] *Var[B] 00000000 *Var[D] )
    Call  HPBarToHome   ( *Var[A] )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021C784
{
    Call  8027D32C      ( FFFFFF81 )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[B] )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000F
    Add   *Var[1]  0000000A
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[B] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .False .False )
    Set   *Var[0]  *Var[A]
    Set   *Var[1]  *Var[B]
    ExecWait  DoShockHit
    Call  UseCamPreset  ( 00000002 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 *Var[C] 00000000 )
        Set   *Var[0]  00000000
        Loop  0000000F
            Add   *Var[0]  FFFFFFD0
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000003C
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Add   *Var[0]  0000000A
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Return
    End
}

#new:Vector3D $Vector3D_8021CAE8
{
    0` -1000` 0`
}

#new:IdleAnimations $IdleAnimations_8021CAF4
{
    .Status:Normal    00090001
    .Status:Stone     00090000
    .Status:Sleep     00090000
    .Status:Poison    00090001
    .Status:Stop      00090000
    .Status:Static    00090001
    .Status:Paralyze  00090000
    .Status:Dizzy     00090014
    .Status:Fear      00090014
    .Status:End
}

#new:DefenseTable $DefenseTable_8021CB40
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021CB4C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021CBF8
{
    00800000 01000000 001400FF $IdleAnimations_8021CAF4 $DefenseTable_8021CB40 00000000 00000000 FFF70000 00000000
}

#new:Actor $GhostGoombario
{
    % stats
    [Index]        3Cb
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021CB4C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021CBF8
    [Script]      $Script_Init_8021CC44
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         29`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021CC44
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E604 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021CC90 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CCA0 )
    Return
    End
}

#new:Script $Script_Idle_8021CC90
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021CCA0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0009000A
                ExecWait  $Script_8021BC34
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0009000A
                ExecWait  DoNormalHit
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000B
            SetConst  *Var[2]  0009000C
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000B
            SetConst  *Var[2]  0009000C
            ExecWait  DoBurnHit
            ExecWait  $Script_8021BBFC
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  $Script_8021C0F8
            Return
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            Set   *Var[2]  0000000C
            ExecWait  $Script_8021C784
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090003
            SetConst  *Var[2]  0009000A
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00090003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0009000A
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D210
{
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
        Set   *Var[0]  000000B4
        Loop  0000000F
            Sub   *Var[0]  0000003C
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetAnimation  ( .Actor:Self 00000001 00090005 )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000003C
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        SetF  *Var[5]  *Fixed[7.2]
    Else
        Set   *Var[5]  00000012
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Add   *Var[0]  0000000A
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[5] 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Wait  2`
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Return
    End
}

#new:Script $Script_8021D698
{
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000046 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
    Return
    End
}

#new:Script $Script_8021D77C
{
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[B] *Var[C] *Var[D] )
    Call  GetActorPos       ( .Actor:Self *Var[C] *Var[D] *Var[E] )
    If  *Var[B]  >  *Var[C]
        Sub   *Var[B]  *Var[C]
    Else
        Sub   *Var[C]  *Var[B]
        Set   *Var[B]  *Var[C]
    EndIf
    Sub   *Var[B]  00000014
    DivF  *Var[B]  *Fixed[10.588867]
    AddF  *Var[B]  0000000F
    Set   *Var[A]  *Var[B]
    Return
    End
}

#new:Script $Script_Goombario_Headbonk
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    ExecWait  $Script_8021D698
    ExecWait  $Script_8021D77C
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        SetF  *Var[0]  *Fixed[7.2]
        SetF  *Var[1]  *Fixed[7.6]
        SetF  *Var[1]  *Fixed[3.6]
    Else
        Set   *Var[0]  00000012
        Set   *Var[1]  00000013
        Set   *Var[2]  00000009
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 00090007 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[1] 00000000 )
    Wait  1`
    Call  SetAnimation      ( .Actor:Self 00000001 00090006 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[2] 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000000 00000000 00000005 )
    Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000200D )
    Call  $Function_80218000    ( *Var[A] 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  $Function_80218890 ( )
            Thread
                Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021D210
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    ChildThread
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndChildThread
    Wait  1`
    Wait  2`
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
        Case  ==  00000001
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000010 )
        Case  ==  00000002
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000010 )
    EndSwitch
    Call  GetActorHP    ( .Actor:Player *Var[0] )
    If  *Var[0]  ==  .HitResult:Hit % 0
        Goto  64
    EndIf
    Set   *Var[A]  00000018
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Thread
                Wait  4`
                Set   *Var[0]  00000000
                Loop  00000006
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
            Call  $Function_80218000    ( *Var[A] 00000003 )
        Case  ==  00000001
            Thread
                Wait  4`
                Set   *Var[0]  00000000
                Loop  00000006
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
            Call  $Function_80218000    ( *Var[A] 00000003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
        Case  ==  00000002
            Thread
                Wait  4`
                Set   *Var[0]  00000000
                Loop  00000006
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 F1194D80 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00090006 )
            EndThread
            Thread
                Set   *Var[0]  00000000
                Loop  *Var[A]
                    Add   *Var[0]  00000085
                    Call  SetActorRotation  ( .Actor:Self F1194D80 *Var[0] F1194D80 )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  EnableActorBlur   ( .Actor:Self 00000001 )
            Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
            Call  $Function_80218000    ( *Var[A] 00000003 )
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
    EndSwitch
    ChildThread
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndChildThread
    Wait  1`
    Wait  2`
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
        Case  ==  00000001
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000002
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    EndSwitch
    Label  64
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  YieldTurn ( )
            ExecWait  $Script_8021D210
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Goombario_Tattle
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    Wait  10`
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetBattleFlagBits ( 00000004 .True )
    Call  $Function_80218A90    ( *Var[5] )
    Wait  12`
    Call  802535B4  ( 00000000 )
    Call  SetCamEnabled     ( .Cam:Tattle .True )
    Call  SetCamFlag80      ( .Cam:Tattle .False )
    Call  SetCamPerspective ( .Cam:Tattle 00000006 00000019 00000010 00000400 )
    Call  SetCamViewport    ( .Cam:Tattle 00000025 0000005F 0000008A 00000063 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000008
    Set   *Var[1]  00000000
    Call  $Function_802189E4 ( )
    Wait  1`
    Call  802CAE50  ( 00000002 *Var[0] *Var[1] *Var[2] )
    Call  802CABE8  ( 00000002 00000000 *Var[3] 00000064 00000004 )
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 00000282 )
    Call  SetCamFlag80      ( .Cam:Tattle .True )
    Wait  10`
    Call  ActorSpeak        ( 001C0092 .Actor:Self 00000001 0009000F 00090001 ) % It's Mario, silly! He's here to save Princess Peac ...
    Call  $Function_80218B2C    ( *Var[5] )
    Wait  12`
    Call  SetCamEnabled     ( .Cam:Tattle .False )
    Wait  32`
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  SetBattleFlagBits ( 00000004 .False )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021E604
{
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  0000000A
        ExecWait  $Script_Goombario_Tattle
    Else
        ExecWait  $Script_Goombario_Headbonk
    EndIf
    Return
    End
}

#new:SpecialFormation $SpecialFormation_8021E660
{
    $GhostGoombario $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8021E67C
{
    .Status:Normal    000A0004
    .Status:Stone     000A0000
    .Status:Sleep     000A0000
    .Status:Poison    000A0004
    .Status:Stop      000A0000
    .Status:Static    000A0004
    .Status:Paralyze  000A0000
    .Status:Dizzy     000A001C
    .Status:Fear      000A001C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021E6C8
{
    .Status:Normal    000A0019
    .Status:Stone     000A0003
    .Status:Sleep     000A0003
    .Status:Poison    000A0019
    .Status:Stop      000A0003
    .Status:Static    000A0019
    .Status:Paralyze  000A0003
    .Status:Dizzy     000A0019
    .Status:Fear      000A0019
    .Status:End
}

#new:DefenseTable $DefenseTable_8021E714
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8021E720
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021E72C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021E7D8
{
    00800000 01000000 FE2000FF $IdleAnimations_8021E67C $DefenseTable_8021E714 00001000 00000000 00F00000 00000000
}

#new:Actor $GhostKooper
{
    % stats
    [Index]        3Db
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021E72C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021E7D8
    [Script]      $Script_Init_8021E824
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021E824
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021F374 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021E8A0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EA18 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021E8A0
{
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
            Call  $Function_80218B74    ( FFFFFFF6 00000019 0000000A 00000019 )
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  $Function_80218B74    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021E9C0
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021EA18
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000A0011
                ExecWait  $Script_8021BC34
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000A0011
                ExecWait  DoNormalHit
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0012
            SetConst  *Var[2]  000A0013
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0012
            SetConst  *Var[2]  000A0013
            ExecWait  DoBurnHit
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0013
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000003 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021E720 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E6C8 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000005 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0011 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_8021E9C0
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0004
                Case  ==  00000001
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0019
            EndSwitch
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0011
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000A0019
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000A0004
                ExecWait  DoRecover
            EndIf
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000A0006
            SetConst  *Var[2]  000A0011
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0006
                Case  ==  00000001
                    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0019
            EndSwitch
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                    If  *Var[0]  !&  0035D000
                        If  *Var[0]  &  00080000
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                        Else
                            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                        EndIf
                    EndIf
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0011
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  000A0019
            EndSwitch
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021F374
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000003 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
        Sub   *Var[0]  00000001
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  30`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
            Wait  20`
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
            Set   *Var[0]  00000000
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Loop  00000005
                    Add   *Var[0]  0000000F
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 000A0004 )
            Call  SetActorVar       ( .Actor:Self 00000003 00000000 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021E714 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E67C )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFE 00000026 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 000A000E )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Wait  15`
    Call  SetAnimation      ( .Actor:Self 00000001 000A000A )
    Call  PlaySoundAtActor  ( .Actor:Self 0000200C )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000004B )
    Call  8024ECF8  ( 00000001 00000001 00000001 )
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Set   *Var[0]  0000000A
        Case  ==  00000001
            Set   *Var[0]  00000014
        Case  ==  00000002
            Set   *Var[0]  0000001E
    EndSwitch
    Set   *Var[9]  00000000
    Loop  *Var[0]
        Add   *Var[9]  00000001
        Switch  *Var[9]
            Case  <  00000014
                Call  SetAnimation  ( .Actor:Self 00000001 000A000A )
                Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Case  ==  00000014
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000028
                Call  SetAnimation  ( .Actor:Self 00000001 000A000B )
                Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
            Case  ==  00000028
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 000A000C )
                Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Case  ==  00000032
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Case  <  0000003C
                Call  SetAnimation  ( .Actor:Self 00000001 000A000D )
                Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
            Case  ==  0000003C
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndSwitch
        Wait  1`
    EndLoop
    Call  PlaySoundAtActor  ( .Actor:Self 0000200A )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  AddActorDecoration    ( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Call  $Function_80218C40 ( )
                Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
            EndThread
            Wait  4`
            Call  SetAnimation  ( .Actor:Self 00000001 000A0009 )
            Call  SetActorRotationOffset    ( .Actor:Self FFFFFFF8 00000000 00000000 )
            Set   *Var[0]  00000000
            Loop  00000002
                Add   *Var[0]  0000001E
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Wait  5`
            Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[4] *Var[5] *Var[6] 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Loop  00000005
                Add   *Var[0]  FFFFFFF4
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000002 )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFFE )
            Wait  2`
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000008 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000003C
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80220314
{
    $GhostKooper $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80220330
{
    .Status:Normal    000B0004
    .Status:Stone     000B0000
    .Status:Sleep     000B0000
    .Status:Poison    000B0004
    .Status:Stop      000B0000
    .Status:Static    000B0004
    .Status:Paralyze  000B0000
    .Status:Dizzy     000B001E
    .Status:Fear      000B001E
    .Status:End
}

#new:DefenseTable $DefenseTable_8022037C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80220388
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80220434
{
    00800000 01000000 001600FF $IdleAnimations_80220330 $DefenseTable_8022037C 00000000 00000000 FEF90000 00000000
}

#new:Actor $GhostBombette
{
    % stats
    [Index]        3Eb
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80220388
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80220434
    [Script]      $Script_Init_80220480
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         30`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80220480
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80220CA0 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802204CC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220654 )
    Return
    End
}

#new:Script $Script_Idle_802204CC
{
    Return
    End
}

#new:Script $Script_802204DC
{
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.75] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[4.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000002
    Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Add   *Var[1]  00000014
    Add   *Var[2]  00000002
    Call  PlayEffect    ( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BombBlast )
    Return
    End
}

#new:Script $Script_HandleEvent_80220654
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoNormalHit
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020
                Call  SetAnimation  ( .Actor:Self 00000001 000B0013 )
                Wait  20`
                ExecWait  $Script_802204DC
                ExecWait  $Script_8021BBFC
                Call  UseCamPreset  ( 00000002 )
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000B0014
                Set   *Var[2]  FFFFCFC7
                ExecWait  DoDeath
                Return
            EndIf
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0013
            SetConst  *Var[2]  000B0014
            ExecWait  DoBurnHit
            ExecWait  $Script_802204DC
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0014
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0013
            SetConst  *Var[2]  000B0014
            ExecWait  DoBurnHit
            ExecWait  $Script_802204DC
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0014
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoDeath
            Return
        CaseOR  ==  .Event:ShockHit % 2F
        CaseOR  ==  .Event:ShockDeath % 26
            Call  HPBarToCurrent    ( .Actor:Self )
            Call  SetAnimation      ( .Actor:Self 00000001 000B0013 )
            Wait  20`
            ExecWait  $Script_802204DC
            ExecWait  $Script_8021BBFC
            Call  UseCamPreset      ( 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0014
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0004
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0004
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0008
            SetConst  *Var[2]  000B0012
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0008
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000B0012
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80220CA0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Wait  10`
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000028 00000000 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
    Call  RunToGoal ( .Actor:Self 0000001E .False )
    Call  SetAnimation      ( .Actor:Self 00000001 000B0004 )
    Call  SetAnimation      ( .Actor:Self 00000001 000B000F )
    Wait  15`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002020 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
            Call  RunToGoal     ( .Actor:Self 00000005 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000F 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000048
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self FFFFFFC4 00000000 00000000 )
            Call  RunToGoal     ( .Actor:Self 0000000A .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Thread
                Call  $Function_80218D64 ( )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Set   *Var[A]  *Var[0]
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
    Call  RunToGoal     ( .Actor:Self 00000004 .False )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000008 )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
            Wait  8`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80221574
{
    $GhostBombette $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80221590
{
    .Status:Normal    000C0001
    .Status:Stone     000C0000
    .Status:Sleep     000C0000
    .Status:Poison    000C0001
    .Status:Stop      000C0000
    .Status:Static    000C0001
    .Status:Paralyze  000C0000
    .Status:Dizzy     000C0001
    .Status:Fear      000C0001
    .Status:End
}

#new:DefenseTable $DefenseTable_802215DC
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_802215E8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80221694
{
    00020000 01000000 FD2000FF $IdleAnimations_80221590 $DefenseTable_802215DC 00000000 00000000 00F00000 00000000
    80800001 02003200 FDEE00FF 00000000 $DefenseTable_802215DC 00000000 00000000 00F00000 00000000
}

#new:Actor $GhostParakarry
{
    % stats
    [Index]        3Fb
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_802215E8
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80221694
    [Script]      $Script_Init_80221704
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80221704
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802224E4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80221750 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221760 )
    Return
    End
}

#new:Script $Script_Idle_80221750
{
    Return
    End
}

#new:Script $Script_HandleEvent_80221760
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000C000E
                ExecWait  $Script_8021BC34
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000C000E
                ExecWait  DoNormalHit
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000F
            SetConst  *Var[2]  000C0010
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000F
            SetConst  *Var[2]  000C0010
            ExecWait  DoBurnHit
            ExecWait  $Script_8021BBFC
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0010
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  $Script_8021C0F8
            Return
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000D
            Set   *Var[2]  00000016
            ExecWait  $Script_8021C784
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0003
            SetConst  *Var[2]  000C000E
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000C000E
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80221D54
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
    Wait  3`
    Call  8024E664      ( 00000001 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002004 )
    Call  SetAnimation  ( .Actor:Self 00000001 000C0014 )
    Call  AddGoalPos    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  FlyToGoal     ( .Actor:Self 00000005 00000000 .Easing:Linear )
    Wait  2`
    Thread
        Wait  3`
        Call  SetAnimation  ( .Actor:Self 00000001 000C0004 )
    EndThread
    Call  AddGoalPos        ( .Actor:Self 00000028 0000000F 00000000 )
    Call  FlyToGoal ( .Actor:Self 00000014 FFFFFFEC .Easing:QuarticOut )
    Call  PlaySoundAtActor  ( .Actor:Self 00002005 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 000C0005 )
    Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
            Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  EnableActorBlur   ( .Actor:Self 00000000 )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  EnableActorBlur   ( .Actor:Self 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 000C0006 )
    Wait  1`
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Call  PlaySound ( 00000000 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0005 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
            Thread
                Wait  4`
                Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            EndThread
            Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
            Wait  6`
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802224E4
{
    ExecWait  $Script_80221D54
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80222500
{
    $GhostParakarry $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8022251C
{
    .Status:Normal    000D0001
    .Status:Stone     000D0000
    .Status:Sleep     000D0000
    .Status:Poison    000D0001
    .Status:Stop      000D0000
    .Status:Static    000D0001
    .Status:Paralyze  000D0000
    .Status:Dizzy     000D001A
    .Status:Fear      000D001A
    .Status:End
}

#new:DefenseTable $DefenseTable_80222568
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80222574
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80222620
{
    00020000 01000000 001800FF $IdleAnimations_8022251C $DefenseTable_80222568 00000000 00000000 00F60000 00000000
    80800001 02003200 00E600FF 00000000 $DefenseTable_80222568 00000000 00000000 00F60000 00000000
}

#new:Actor $GhostBow
{
    % stats
    [Index]        40b
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80222574
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80222620
    [Script]      $Script_Init_80222690
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  29`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80222690
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222C7C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802226DC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802226EC )
    Return
    End
}

#new:Script $Script_Idle_802226DC
{
    Return
    End
}

#new:Script $Script_HandleEvent_802226EC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000D0015
                ExecWait  $Script_8021BC34
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000D0015
                ExecWait  DoNormalHit
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0018
            SetConst  *Var[2]  000D0019
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0018
            SetConst  *Var[2]  000D0019
            ExecWait  DoBurnHit
            ExecWait  $Script_8021BBFC
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  UseCamPreset  ( 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  $Script_8021C0F8
            Return
        Case  ==  .Event:ShockDeath % 26
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            Set   *Var[2]  0000000E
            ExecWait  $Script_8021C784
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0003
            SetConst  *Var[2]  000D0015
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000D0015
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222C7C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
    Thread
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  UseCamPreset      ( 00000001 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Thread
        Call  SetAnimation      ( .Actor:Self 00000001 000D0003 )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Call  AddGoalPos    ( .Actor:Self 00000004 FFFFFFFC 00000000 )
        Else
            Call  AddGoalPos    ( .Actor:Self 0000000A FFFFFFF6 00000000 )
        EndIf
        Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
    EndThread
    Wait  15`
    Call  UseCamPreset      ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooVanish )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 000D0005 )
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
            Wait  2`
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Var[0]  00000000
            Loop  00000014
                Add   *Var[0]  FFFFFFD3
                Call  SetActorYaw   ( .Actor:Self *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 000D001A )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooAppear )
            Thread
                Set   *Var[0]  000000C8
                Loop  00000014
                    Sub   *Var[0]  0000000A
                    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooVanish )
            Call  YieldTurn ( )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Set   *Var[A]  00000000
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[8] )
    Switch  *Var[8]
        Case  ==  00000000
            Set   *Var[8]  00000004
        Case  ==  00000001
            Set   *Var[8]  00000005
        Case  ==  00000002
            Set   *Var[8]  00000006
    EndSwitch
    Set   *Var[7]  *Var[8]
    Loop  *Var[7]
        Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
        Add   *Var[A]  00000001
        Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
        If  *Flag[00]  ==  .False
            Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
            Set   *Flag[00]  .True
            If  *Var[A]  ==  *Var[8]
                Call  80269EAC  ( 0000000C )
            Else
                Call  80269EAC  ( 0000000A )
            EndIf
        Else
            Call  SetAnimation  ( .Actor:Self 00000001 000D0008 )
            Set   *Flag[00]  .False
            If  *Var[A]  ==  *Var[8]
                Call  80269EAC  ( 0000000D )
            Else
                Call  80269EAC  ( 0000000B )
            EndIf
        EndIf
        Wait  2`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.2] )
        EndThread
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
        Switch  *Var[9]
            Case  ==  00000000
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
            Case  ==  00000001
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
            Case  ==  00000002
                Wait  2`
                Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
        EndSwitch
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
        Call  GetActorHP    ( .Actor:Player *Var[1] )
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
            Thread
                Set   *Var[0]  000000C8
                Loop  00000014
                    Sub   *Var[0]  0000000A
                    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooVanish )
            Call  YieldTurn ( )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_802238D0
{
    $GhostBow $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_802238EC
{
    .Status:Normal    000E0001
    .Status:Stone     000E0000
    .Status:Sleep     000E0000
    .Status:Poison    000E0001
    .Status:Stop      000E0000
    .Status:Static    000E0001
    .Status:Paralyze  000E0000
    .Status:Dizzy     000E000F
    .Status:Fear      000E000F
    .Status:End
}

#new:DefenseTable $DefenseTable_80223938
{
    .Element:Normal 00000000
    .Element:Shock  00000063
    .Element:End
}

#new:StatusTable $StatusTable_8022394C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_802239F8
{
    00020000 01000000 FF1400FF $IdleAnimations_802238EC $DefenseTable_80223938 00000080 00000000 00F80000 00000000
    80800001 02003200 FFE200FF 00000000 $DefenseTable_80223938 00000080 00000000 00F80000 00000000
}

#new:Actor $GhostWatt
{
    % stats
    [Index]        41b
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8022394C
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_802239F8
    [Script]      $Script_Init_80223A68
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         34`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80223A68
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80223F50 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80223AB4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223ADC )
    Return
    End
}

#new:Script $Script_Idle_80223AB4
{
    SetPriority  00000063
    Call  $Function_80218E88 ( )
    Return
    End
}

#new:Script $Script_HandleEvent_80223ADC
{
    Call  UseIdleAnimation      ( .Actor:Self .False )
    Call  $Function_80219358    ( 00000000 )
    Call  $Function_802193A4    ( 00000001 )
    Call  $Function_802193F0    ( 00000000 )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000D
            SetConst  *Var[2]  000E000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000D
            SetConst  *Var[2]  000E000E
            ExecWait  DoBurnHit
            Call  $Function_80219304 ( )
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            Call  $Function_80219304 ( )
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  $Function_80219304 ( )
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0003
            SetConst  *Var[2]  000E000C
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000E000C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  $Function_80219358    ( 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80223F50
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 00000028 )
    Call  MoveBattleCamOver ( 00000050 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
    Call  $Function_802193F0    ( 00000001 )
    Call  AddGoalPos        ( .Actor:Self 0000000F FFFFFFF6 00000005 )
    Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  $Function_802193F0    ( 00000000 )
    Wait  5`
    Call  $Function_80219358    ( 00000000 )
    Call  AddGoalPos        ( .Actor:Self 00000019 00000014 00000000 )
    Call  FlyToGoal ( .Actor:Self 0000000F FFFFFFEC .Easing:CosInOut )
    Call  SetAnimation      ( .Actor:Self 00000001 000E0005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  FlyToGoal ( .Actor:Self 00000005 00000000 .Easing:CosInOut )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 0000000A 00000000 )
            Call  FlyToGoal ( .Actor:Self 0000000A FFFFFFEC .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  $Function_802193A4    ( 00000001 )
            Call  $Function_80219358    ( 00000001 )
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  $Function_802193A4    ( 00000000 )
    Set   *Var[A]  00000028
    Call  AddBattleCamZoom  ( FFFFFFB5 )
    Call  MoveBattleCamOver ( *Var[A] )
    Call  8024ECF8  ( 00000000 00000000 00000001 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000 % 80000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000004
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[0.52] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000C
        Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var[0] *Var[1] *Var[2] *Fixed[1.3] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  $Function_8021943C ( )
    Set   *Var[9]  00000000
    Call  SetAnimation  ( .Actor:Self 00000001 000E0006 )
    Loop  *Var[A]
        Add   *Var[9]  00000003
        If  *Var[9]  >  000000C8
            Set   *Var[9]  000000C8
        EndIf
        Call  $Function_80219480    ( *Var[9] )
        Wait  1`
    EndLoop
    Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
    Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
    Call  AddBattleCamZoom  ( 0000004B )
    Call  MoveBattleCamOver ( 00000005 )
    Thread
        Wait  2`
        Call  $Function_80219480    ( 00000000 )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000003 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000004 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 08000020 0000FFFF 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  $Function_802193A4    ( 00000001 )
            Call  $Function_80219358    ( 00000001 )
            Call  AddGoalPos    ( .Actor:Self 00000019 0000000A 00000000 )
            Call  FlyToGoal     ( .Actor:Self 0000000F FFFFFFF6 .Easing:CosInOut )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_802247CC
{
    $GhostWatt $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_802247E8
{
    .Status:Normal    000F0001
    .Status:Stone     000F0000
    .Status:Sleep     000F0000
    .Status:Poison    000F0001
    .Status:Stop      000F0000
    .Status:Static    000F0001
    .Status:Paralyze  000F0000
    .Status:Dizzy     000F0010
    .Status:Fear      000F0010
    .Status:End
}

#new:DefenseTable $DefenseTable_80224834
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80224840
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_802248EC
{
    00800000 01000000 001800FF $IdleAnimations_802247E8 $DefenseTable_80224834 00000000 00000000 00F40000 00000000
}

#new:Actor $GhostSushie
{
    % stats
    [Index]        42b
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80224840
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802248EC
    [Script]      $Script_Init_80224938
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         37`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80224938
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80224F04 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80224984 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224994 )
    Return
    End
}

#new:Script $Script_Idle_80224984
{
    Return
    End
}

#new:Script $Script_HandleEvent_80224994
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000F000D
                ExecWait  $Script_8021BC34
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  000F000D
                ExecWait  DoNormalHit
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000E
            SetConst  *Var[2]  000F000F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000E
            SetConst  *Var[2]  000F000F
            ExecWait  DoBurnHit
            ExecWait  $Script_8021BBFC
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  $Script_8021C0F8
            Return
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            Set   *Var[2]  00000014
            ExecWait  $Script_8021C784
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0003
            SetConst  *Var[2]  000F000D
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80224F04
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000046 00000000 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  *Var[0]
    Div   *Var[3]  *Fixed[3.0]
    Set   *Var[A]  *Var[3]
    If  *Var[A]  <  00000000
        Mul   *Var[A]  FFFFFFFF
    EndIf
    Call  MoveBattleCamOver ( *Var[A] )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
    Call  RunToGoal     ( .Actor:Self *Var[A] .False )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
    Wait  10`
    Call  UseCamPreset  ( 00000008 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  AddBattleCamZoom  ( FFFFFFCE )
    Call  MoveBattleCamOver ( 0000001E )
    Call  8024ECF8      ( 00000001 00000001 00000001 )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0004 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 000F0008 )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetAnimation      ( .Actor:Self 00000001 000F0005 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000024
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
            EndThread
            Thread
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Switch  *Var[0]
                    Case  ==  00000000
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                    Case  ==  00000001
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.05] *Fixed[1.05] *Fixed[1.05] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
                    Case  ==  00000002
                        Wait  13`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
                        Wait  1`
                        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
                EndSwitch
            EndThread
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Thread
                Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
                Wait  10`
                Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
            EndThread
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.0] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  LandJump      ( .Actor:Self )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF1 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  AddGoalPos    ( .Actor:Self FFFFFFF6 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  SetAnimation      ( .Actor:Self 00000001 000F0005 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
        Set   *Var[0]  00000000
        Loop  0000000A
            Add   *Var[0]  00000024
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
    EndThread
    Thread
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000000
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
            Case  ==  00000001
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.35] *Fixed[1.35] *Fixed[1.35] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.55] *Fixed[1.55] *Fixed[1.55] )
            Case  ==  00000002
                Wait  13`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.6] *Fixed[1.6] *Fixed[1.6] )
                Wait  1`
                Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.8] *Fixed[1.8] *Fixed[1.8] )
        EndSwitch
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Thread
        Wait  3`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[A] )
    Switch  *Var[A]
        Case  ==  .HitResult:Hit % 0
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
        Case  ==  00000001 % 1
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
        Case  ==  00000002 % 2
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000003C
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80226164
{
    $GhostSushie $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80226180
{
    .Status:Normal    00100001
    .Status:Stone     00100000
    .Status:Sleep     00100000
    .Status:Poison    00100001
    .Status:Stop      00100000
    .Status:Static    00100001
    .Status:Paralyze  00100000
    .Status:Dizzy     00100008
    .Status:Fear      00100001
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802261CC
{
    .Status:Normal    00100014
    .Status:End
}

#new:DefenseTable $DefenseTable_802261D8
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802261E4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80226290
{
    00800000 01000000 FD2100FF $IdleAnimations_80226180 $DefenseTable_802261D8 00000000 00000000 FEF60000 00000000
    00120001 03000000 000000FF $IdleAnimations_802261CC $DefenseTable_802261D8 00000000 00000000 00000000 00000000
}

#new:Actor $GhostLakilester
{
    % stats
    [Index]        43b
    [Level]        23`b
    [MaxHP]        15`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_802261E4
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80226290
    [Script]      $Script_Init_80226300
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         44`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80226300
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80226924 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022634C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022635C )
    Return
    End
}

#new:Script $Script_Idle_8022634C
{
    Return
    End
}

#new:Script $Script_HandleEvent_8022635C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[1] )
            If  *Var[1]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0010000A
                ExecWait  $Script_8021BC34
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0010000A
                ExecWait  DoNormalHit
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000C
            SetConst  *Var[2]  0010000D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000C
            SetConst  *Var[2]  0010000D
            ExecWait  DoBurnHit
            ExecWait  $Script_8021BBFC
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        Case  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            ExecWait  $Script_8021BBFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100003
            SetConst  *Var[2]  0010000A
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00100003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0010000A
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80226924
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self 00000014 0000001E *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00100001 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  FFFFFFFF
        Add   *Var[1]  00000004
        Add   *Var[2]  00000002
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Add   *Var[0]  FFFFFFFD
        Add   *Var[1]  0000000A
        Add   *Var[2]  00000005
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  SetAnimation  ( .Actor:Self 00000003 00100014 )
    Call  SetAnimation  ( .Actor:Self 00000001 0010000F )
    Loop  00000004
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            AddF  *Var[1]  *Fixed[2.4]
        Else
            Add   *Var[1]  00000006
        EndIf
        Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  FFFFFFFD
        Add   *Var[1]  00000010
        Add   *Var[2]  00000002
        SetF  *Var[3]  *Fixed[0.4]
    Else
        Add   *Var[0]  FFFFFFF8
        Add   *Var[1]  00000028
        Add   *Var[2]  00000005
        SetF  *Var[3]  *Fixed[1.0]
    EndIf
    Call  PlayEffect        ( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002C5 )
    Thread
        Loop  0000000F
            Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
            Call  SetPartDispOffset     ( .Actor:Self 00000003 00000001 00000000 00000000 )
            Wait  1`
            Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
            Call  SetPartDispOffset     ( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
            Wait  1`
        EndLoop
        Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetPartDispOffset     ( .Actor:Self 00000003 00000000 00000000 00000000 )
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100010 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100011 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00100012 )
    Wait  3`
    Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000201B )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000003 00100015 )
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RandInt       ( 00000064 *Var[3] )
            Sub   *Var[3]  00000032
            Add   *Var[0]  *Var[3]
            Call  JumpPartTo    ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 00000014 .True )
            Thread
                Add   *Var[0]  FFFFFFCE
                Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            EndThread
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000003C )
            Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000003 00100015 )
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Thread
        Add   *Var[0]  FFFFFFCE
        Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000F .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[9] )
    Switch  *Var[9]
        Case  ==  00000000
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
        Case  ==  00000001
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  15`
            Call  YieldTurn ( )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 00000008 )
            Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:SpecialFormation $SpecialFormation_80227404
{
    $GhostLakilester $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_CopyPartner
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
    Call  SetAnimation      ( .Actor:Self 00000001 004E0006 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[1]  00000008
        SetF  *Var[3]  *Fixed[0.4]
    Else
        Add   *Var[1]  00000014
        SetF  *Var[3]  *Fixed[1.0]
    EndIf
    Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Var[3] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  $Function_8021943C ( )
    Call  MakeLerp  ( 00000000 000000C8 00000014 .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  $Function_80219480    ( *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Wait  10`
    Call  $Function_GetPartner  ( *Var[5] *Var[6] )
    Call  $Function_80219524    ( *Var[5] )
    Switch  *Var[5]
        Case  ==  00000001
            Call  SummonEnemy   ( $SpecialFormation_8021E660 00000000 )
        Case  ==  00000002
            Call  SummonEnemy   ( $SpecialFormation_80220314 00000000 )
        Case  ==  00000003
            Call  SummonEnemy   ( $SpecialFormation_80221574 00000000 )
        Case  ==  00000004
            Call  SummonEnemy   ( $SpecialFormation_80222500 00000000 )
        Case  ==  00000009
            Call  SummonEnemy   ( $SpecialFormation_802238D0 00000000 )
        Case  ==  00000006
            Call  SummonEnemy   ( $SpecialFormation_802247CC 00000000 )
        Case  ==  00000007
            Call  SummonEnemy   ( $SpecialFormation_80226164 00000000 )
        Case  ==  00000008
            Call  SummonEnemy   ( $SpecialFormation_80227404 00000000 )
    EndSwitch
    Set   *Var[A]  *Var[0]
    Call  CopyStatusEffects ( .Actor:Self *Var[A] )
    Call  SetBattleVar      ( 00000003 *Var[5] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000003
        Add   *Var[2]  00000005
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Wait  5`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
    Call  SetActorFlagBits  ( .Actor:Self 00400004 .True )
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  SetEnemyHP    ( *Var[A] *Var[0] )
    Call  CopyBuffs     ( .Actor:Self *Var[A] )
    Call  GetOwnerID    ( *Var[0] )
    Call  SetActorVar   ( *Var[A] 00000000 *Var[0] )
    Call  SetActorVar   ( *Var[A] 00000001 *Var[6] )
    Wait  20`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Thread
        Call  MakeLerp  ( 000000C8 00000000 00000014 .Easing:Linear )
        Label  1
        Call  UpdateLerp ( )
        Call  $Function_80219480    ( *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000001
            Goto  1
        EndIf
    EndThread
    Call  SetActorSounds    ( *Var[A] .ActorSound:Jump 00000000 00000000 )
    Switch  *Var[5]
        Case  ==  00000008
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.01] )
            Call  SetGoalPos    ( *Var[A] *Var[0] 0000000A *Var[2] )
            Call  JumpToGoal    ( *Var[A] 0000000A .False .False .False )
            Wait  10`
        CaseOR  ==  00000006
        CaseOR  ==  00000009
        CaseOR  ==  00000004
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[0.01] )
            Call  SetGoalPos    ( *Var[A] *Var[0] 0000001E *Var[2] )
            Call  JumpToGoal    ( *Var[A] 00000014 .False .False .False )
        EndCaseGroup
    EndSwitch
    Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[A] )
    Call  ResetActorSounds  ( *Var[A] .ActorSound:Jump )
    Wait  20`
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80227C40
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000258
                Call  GetBattleVar  ( 00000000 *Var[0] )
                If  *Var[0]  !&  00000004
                    Call  GetBattleVar  ( 00000000 *Var[0] )
                    ConstOR  *Var[0] 00000004
                    Call  SetBattleVar  ( 00000000 *Var[0] )
                    ExecWait  $Script_CopyPartner
                Else
                    Call  GetBattleVar  ( 00000003 *Var[0] )
                    Call  $Function_GetPartner  ( *Var[1] *Var[2] )
                    If  *Var[0]  ==  *Var[1]
                        ExecWait  $Script_CopyPartner
                    Else
                        ExecWait  $Script_LungeAttack
                    EndIf
                EndIf
            Else
                ExecWait  $Script_LungeAttack
            EndIf
        Case  ==  00000001
        Case  ==  00000002
            ExecWait  $Script_LungeAttack
        Case  ==  00000003
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80227DD0
{
    .Status:Normal    00520001
    .Status:Stone     00520000
    .Status:Sleep     0052000F
    .Status:Poison    00520001
    .Status:Stop      00520000
    .Status:Static    00520001
    .Status:Paralyze  00520000
    .Status:Dizzy     0052000E
    .Status:Fear      0052000E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80227E1C
{
    .Status:Normal    00520010
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80227E28
{
    .Status:Normal    00520012
    .Status:End
}

#new:DefenseTable $DefenseTable_80227E34
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80227E40
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     80`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     10`
    .Status:Paralyze   80`
    .Status:Shrink     75`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80227EEC
{
    00800000 01000000 F93000FF $IdleAnimations_80227DD0 $DefenseTable_80227E34 00000000 00000000 FDE90000 00000000
    00120001 02000000 000000FF $IdleAnimations_80227E1C $DefenseTable_80227E34 00000000 00000000 00000000 00000000
    00120001 03000000 000000FF $IdleAnimations_80227E28 $DefenseTable_80227E34 00000000 00000000 00000000 00000000
}

#new:Actor $Gulpit
{
    % stats
    [Index]        36b
    [Level]        22`b
    [MaxHP]        12`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80227E40
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80227EEC
    [Script]      $Script_Init_80227F80
    % move effectiveness
    [Escape]       60`b
    [Item]         70`b
    [AirLift]      50`b
    [Hurricane]    50`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         53`b  50`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]   -3`b  37`b % dx dy
    [StatusIcon]   10`b  45`b % dx dy
}

#new:Script $Script_Init_80227F80
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802291B4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80227FCC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228030 )
    Return
    End
}

#new:Script $Script_Idle_80227FCC
{
    Return
    End
}

#new:Script $Script_80227FDC
{
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  00520003
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 00520001 )
    Return
    End
}

#new:Script $Script_HandleEvent_80228030
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000C
            SetConst  *Var[2]  0052000D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000C
            SetConst  *Var[2]  0052000D
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoJumpBack
            ExecWait  $Script_80227FDC
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0052000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520003
            SetConst  *Var[2]  0052000B
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520003
            ExecWait  DoBlowAway
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80228518
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000050
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 00520003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  AddGoalPos    ( .Actor:Self 0000000A 00000000 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00520001 )
    Wait  10`
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000020EE )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00520004 )
    Wait  9`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80227FDC
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_80227FDC
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022898C
{
    Set   *Var[A]  *Var[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Sub   *Var[2]  00000001
    Call  SetAnimation  ( .Actor:Self 00000001 00520002 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00520001 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000020EE )
    Call  GetActorVar   ( *Var[A] 00000000 *Var[0] )
    Set   *Var[B]  *Var[0]
    Switch  *Var[B]
        Case  ==  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00520005 )
            Wait  3`
            Call  RemoveActor   ( *Var[A] )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00520006 )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00520007 )
            Set   *Var[A]  00000002
        Case  ==  00000001
            Call  SetAnimation  ( .Actor:Self 00000001 00520008 )
            Wait  3`
            Call  RemoveActor   ( *Var[A] )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00520009 )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 0052000A )
            Set   *Var[A]  00000003
    EndSwitch
    Call  SetPartSounds     ( .Actor:Self *Var[A] .ActorSound:Jump 000003D9 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[9]  *Var[0]
            Call  UseCamPreset      ( 00000002 )
            Call  SetPartFlagBits   ( .Actor:Self *Var[A] 00000001 .False )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Add   *Var[2]  00000002
            Call  SetPartPos        ( .Actor:Self *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF9C 00000000 00000005 )
            Call  SetPartMoveSpeed  ( .Actor:Self *Var[A] *Fixed[14.0] )
            Call  SetPartJumpGravity    ( .Actor:Self *Var[A] *Fixed[0.01] )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpPartTo        ( .Actor:Self *Var[A] *Var[0] *Var[1] *Var[2] 00000000 .True )
            Call  SetPartFlagBits   ( .Actor:Self *Var[A] 00000001 .True )
            If  *Var[9]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80227FDC
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetPartFlagBits   ( .Actor:Self *Var[A] 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Add   *Var[2]  00000002
    Call  SetPartPos        ( .Actor:Self *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetPartMoveSpeed  ( .Actor:Self *Var[A] *Fixed[14.0] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[A] *Fixed[0.01] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpPartTo        ( .Actor:Self *Var[A] *Var[0] *Var[1] *Var[2] 00000000 .True )
    Switch  *Var[A]
        Case  ==  00000002
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000007 00000020 )
        Case  ==  00000003
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 00520001 )
            Call  GetPartOffset ( .Actor:Self *Var[A] *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  FFFFFF9C
            Call  SetPartJumpGravity    ( .Actor:Self *Var[A] *Fixed[1.0] )
            Call  JumpPartTo    ( .Actor:Self *Var[A] *Var[0] *Var[1] *Var[2] 00000019 .True )
            Call  SetPartFlagBits       ( .Actor:Self *Var[A] 00000001 .True )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_80227FDC
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802291B4
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_80228518
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        ExecWait  $Script_80228518
        Return
    EndIf
    Set   *Var[A]  00000000
    Call  EnemyCreateTargetList ( 00010002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    If  *Var[2]  ==  00000037
        Add   *Var[A]  00000001
        Switch  *Var[A]
            Case  ==  00000001
                Set   *Var[B]  *Var[0]
            Case  ==  00000002
                Set   *Var[C]  *Var[0]
            Case  ==  00000003
                Set   *Var[D]  *Var[0]
        EndSwitch
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Switch  *Var[A]
        Case  ==  00000000
            ExecWait  $Script_80228518
        Case  ==  00000001
            Set   *Var[0]  *Var[B]
            ExecWait  $Script_8022898C
        Case  ==  00000002
            Call  RandInt   ( 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Set   *Var[0]  *Var[B]
                Case  ==  00000001
                    Set   *Var[0]  *Var[C]
            EndSwitch
            ExecWait  $Script_8022898C
        Case  >=  00000003
            Call  RandInt   ( 00000002 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Set   *Var[0]  *Var[B]
                Case  ==  00000001
                    Set   *Var[0]  *Var[C]
                Case  ==  00000002
                    Set   *Var[0]  *Var[D]
            EndSwitch
            ExecWait  $Script_8022898C
    EndSwitch
    Return
    End
}

PADDING: 802294C8 to 802294D0 (00635068 to 00635070)
00000000 00000000

#new:IdleAnimations $IdleAnimations_802294D0
{
    .Status:Normal    00520010
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802294DC
{
    .Status:Normal    00520012
    .Status:End
}

#new:DefenseTable $DefenseTable_802294E8
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802294F4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802295A0
{
    00800000 01000000 000E00FF $IdleAnimations_802294D0 $DefenseTable_802294E8 00000000 00000000 00FA0000 00000000
}

#new:Actor $GulpitRocks
{
    % stats
    [Index]        37b
    [Level]         0`b
    [MaxHP]         1`b
    [Coins]         0`b
    [Flags]       00244004
    [StatusTable] $StatusTable_802294F4
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802295A0
    [Script]      $Script_Init_802295EC
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]     100`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  18`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802295EC
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229AAC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022973C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802297B0 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802294D0 )
            Call  SetAnimation  ( .Actor:Self 00000001 00520010 )
            Call  GetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetActorSize  ( .Actor:Self 00000018 0000000F )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802294DC )
            Call  SetAnimation  ( .Actor:Self 00000001 00520012 )
            Call  GetActorVar   ( .Actor:Self 00000000 00000001 )
            Call  SetActorSize  ( .Actor:Self 0000000A 00000008 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_8022973C
{
    Return
    End
}

#new:Script $Script_8022974C
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    Switch  *Var[A]
        Case  ==  00000000
        Case  ==  00000001
            SetConst  *Var[1]  *Var[2]
    EndSwitch
    Return
    End
}

#new:Script $Script_HandleEvent_802297B0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520010
            SetConst  *Var[2]  00520012
            ExecWait  $Script_8022974C
            ExecWait  DoNormalHit
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:BeginAirLift % 3A
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520010
            SetConst  *Var[2]  00520012
            ExecWait  $Script_8022974C
            ExecWait  DoImmune
        EndCaseGroup
        CaseOR  ==  .Event:BurnDeath % 24
        CaseOR  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00520010
            SetConst  *Var[2]  00520012
            ExecWait  $Script_8022974C
            ExecWait  DoNormalHit
            Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
            Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  SetAnimation  ( .Actor:Self 00000001 00520011 )
                Case  ==  00000001
                    Call  SetAnimation  ( .Actor:Self 00000001 00520013 )
            EndSwitch
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  30`
            Call  RemoveActor   ( .Actor:Self )
            Return
        EndCaseGroup
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80229AAC
{
    Return
    End
}

PADDING: 80229ABC to 80229AC0 (0063565C to 00635660)
00000000

#new:IdleAnimations $IdleAnimations_80229AC0
{
    .Status:Normal    003A0101
    .Status:Stone     003A0100
    .Status:Sleep     003A0103
    .Status:Poison    003A0101
    .Status:Stop      003A0100
    .Status:Static    003A0101
    .Status:Paralyze  003A0100
    .Status:Dizzy     003A0105
    .Status:Fear      003A0105
    .Status:End
}

#new:DefenseTable $DefenseTable_80229B0C
{
    .Element:Normal 00000000
    .Element:Fire   FFFFFFFE
    .Element:Ice    00000063
    .Element:End
}

#new:StatusTable $StatusTable_80229B28
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80229BD4
{
    00800000 01000000 F42000FF $IdleAnimations_80229AC0 $DefenseTable_80229B0C 00000008 00000000 08FD0000 00000000
}

#new:Actor $WhiteClubba
{
    % stats
    [Index]        38b
    [Level]        23`b
    [MaxHP]        12`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80229B28
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80229BD4
    [Script]      $Script_Init_80229C20
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      50`b
    [Hurricane]    60`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         42`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_80229C20
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022A18C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80229C6C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80229C7C )
    Return
    End
}

#new:Script $Script_Idle_80229C6C
{
    Return
    End
}

#new:Script $Script_HandleEvent_80229C7C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0106
            SetConst  *Var[2]  003A0107
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0106
            SetConst  *Var[2]  003A0107
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0107
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            SetConst  *Var[2]  003A0104
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022A18C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B
        Set   *Var[1]  00000000
        Sub   *Var[2]  00000006
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Wait  15`
    Else
        Call  SetAnimation      ( .Actor:Self 00000001 003A0102 )
        Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000
            Call  AddGoalPos    ( .Actor:Self 0000001B 00000000 FFFFFFFA )
        Else
            Call  AddGoalPos    ( .Actor:Self 0000000A 00000000 FFFFFFFA )
        EndIf
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 003A0101 )
        Wait  10`
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
            Call  SetAnimation      ( .Actor:Self 00000001 003A0108 )
            Wait  20`
            If  *Var[0]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                Wait  20`
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Goto  28
    EndIf
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
    MulF  *Var[0]  *Fixed[100.0]
    DivF  *Var[0]  *Var[1]
    If  *Var[0]  <  0000001E
        Goto  32
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000019
        Goto  32
    EndIf
    Label  28
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Goto  64
    Label  32
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000010 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Call  GetActorHP    ( .Actor:Player *Var[0] )
    If  *Var[0]  ==  .HitResult:Hit % 0
        Goto  64
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Call  GetActorHP    ( .Actor:Player *Var[0] )
    If  *Var[0]  ==  .HitResult:Hit % 0
        Goto  64
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Label  64
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  19`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            ExecWait  DoReturnHome
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8022AAAC to 8022AAB0 (0063664C to 00636650)
00000000

#new:IdleAnimations $IdleAnimations_8022AAB0
{
    .Status:Normal    00360101
    .Status:Stone     00360100
    .Status:Sleep     00360100
    .Status:Poison    00360101
    .Status:Stop      00360100
    .Status:Static    00360100
    .Status:Paralyze  00360100
    .Status:Paralyze  00360100
    .Status:Dizzy     0036010F
    .Status:End
}

#new:DefenseTable $DefenseTable_8022AAFC
{
    .Element:Normal 00000000
    .Element:Fire   FFFFFFFE
    .Element:Ice    00000063
    .Element:End
}

#new:StatusTable $StatusTable_8022AB18
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022ABC4
{
    00800000 01000000 F13200FF $IdleAnimations_8022AAB0 $DefenseTable_8022AAFC 00000008 00000000 03F20000 00000000
}

#new:Actor $FrostPiranha
{
    % stats
    [Index]        39b
    [Level]        22`b
    [MaxHP]        10`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022AB18
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022ABC4
    [Script]      $Script_Init_8022AC10
    % move effectiveness
    [Escape]       70`b
    [Item]         20`b
    [AirLift]      20`b
    [Hurricane]    20`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         60`b  52`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -22`b  32`b % dx dy
    [StatusIcon]    1`b  44`b % dx dy
}

#new:Script $Script_Init_8022AC10
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022B2D4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022AC5C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADFC )
    Return
    End
}

#new:Script $Script_Idle_8022AC5C
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00040000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFE5 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000005 FFFFFFF5 )
        Call  $Function_802195F0    ( FFFFFFDB 00000009 FFFFFFF9 0000001F )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF1 00000032 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000003 FFFFFFF2 )
        Call  $Function_802195F0    ( FFFFFFEA 00000020 00000001 0000002C )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8022AD6C
{
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00360103 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_8022ADFC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360110
            SetConst  *Var[2]  00360111
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360110
            SetConst  *Var[2]  00360111
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360111
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoShockHit
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8022AD6C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036010E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360103
            SetConst  *Var[2]  0036010E
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360103
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360103
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022B2D4
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_8022B3AC
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00004000
        ExecWait  $Script_8022B3AC
        Return
    EndIf
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000000FA
        ExecWait  $Script_8022BD44
    Else
        ExecWait  $Script_8022B3AC
    EndIf
    Return
    End
}

#new:Script $Script_8022B3AC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation      ( .Actor:Self 00000001 00360118 )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
        Wait  8`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B
        Set   *Var[1]  00000000
        Set   *Var[3]  *Var[0]
        Set   *Var[4]  *Var[1]
        Set   *Var[5]  *Var[2]
        Call  GetActorPos       ( .Actor:Player *Var[6] *Var[7] *Var[8] )
        Add   *Var[3]  *Var[6]
        Add   *Var[4]  *Var[7]
        Add   *Var[5]  *Var[8]
        Div   *Var[3]  00000002
        Div   *Var[4]  00000002
        Div   *Var[5]  00000002
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[3] *Var[4] *Var[5] )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 00000028 )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
        Call  SetAnimation      ( .Actor:Self 00000001 00360117 )
        Wait  8`
    Else
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00360103 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
        Call  SetAnimation  ( .Actor:Self 00000001 00360103 )
        Call  SetGoalToTarget       ( .Actor:Self )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags        ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Add   *Var[0]  0000000A
        Else
            Add   *Var[0]  0000001B
        EndIf
        Set   *Var[1]  00000000
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
    EndIf
    Thread
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00360105 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00360106 )
            Wait  6`
            Call  SetAnimation  ( .Actor:Self 00000001 00360107 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360118 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360117 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
                Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
                Call  SetActorYaw       ( .Actor:Self 000000B4 )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                ExecWait  $Script_8022AD6C
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00360105 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00360106 )
    Wait  1`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Wait  10`
            Call  SetAnimation      ( .Actor:Self 00000001 00360107 )
            Wait  20`
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360118 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360117 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                ExecWait  $Script_8022AD6C
            EndIf
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022BD44
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000014
    Else
        Add   *Var[0]  00000032
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
    Call  SetAnimation  ( .Actor:Self 00000001 0036010B )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000003AB )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  0000000C
        Set   *Var[1]  00000005
        SetF  *Var[3]  *Fixed[0.4]
    Else
        Add   *Var[0]  00000020
        Set   *Var[1]  0000000D
        SetF  *Var[3]  *Fixed[1.0]
    EndIf
    Call  $Function_802196BC    ( *Var[2] *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000078 00000000 00000078 )
    Wait  1`
    Call  SetAnimation  ( .Actor:Self 00000001 0036010C )
    Wait  5`
    Call  EnemyTestTarget       ( .Actor:Self *Var[A] ~Flags:DamageType:Ice 00004000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036010D )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8022AD6C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 40000008 0000FFFF 000042FE 00000000 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036010D )
            Wait  20`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8022AD6C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8022C304 to 8022C310 (00637EA4 to 00637EB0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8022C310
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8022C31C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022C328
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8022C3D4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022C480
{
    00800000 01000000 022300FF $IdleAnimations_8022C560 $DefenseTable_8022C310 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8022C4A4
{
    00020001 01000000 022300FF $IdleAnimations_8022C560 $DefenseTable_8022C31C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8022C5AC $DefenseTable_8022C31C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_8022C5F8 $DefenseTable_8022C31C 00000000 00000000 00000000 00000000
}

#new:Actor $GRYMagikoopa
{
    % stats
    [Index]        57b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022C328
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022C480
    [Script]      $Script_Init_8022E748
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRYMagikoopa
{
    % stats
    [Index]        58b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8022C3D4
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8022C4A4
    [Script]      $Script_Init_8022E7EC
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022C560
{
    .Status:Normal    00560501
    .Status:Stone     00560500
    .Status:Sleep     00560508
    .Status:Poison    00560501
    .Status:Stop      00560500
    .Status:Static    00560501
    .Status:Paralyze  00560500
    .Status:Dizzy     00560507
    .Status:Fear      00560507
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022C5AC
{
    .Status:Normal    00570501
    .Status:Stone     00570500
    .Status:Sleep     00570508
    .Status:Poison    00570501
    .Status:Stop      00570500
    .Status:Static    00570501
    .Status:Paralyze  00570500
    .Status:Dizzy     00570507
    .Status:Fear      00570507
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022C5F8
{
    .Status:Normal    0057050A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8022C604
{
    Return
    End
}

#new:Script $Script_HandleEvent_8022C614
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560505
            SetConst  *Var[2]  00560506
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560505
            SetConst  *Var[2]  00560506
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560506
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560501
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560501
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
            ExecWait  $Script_GRYMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560502
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_8022CB2C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80219998    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_8022CC38
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80219A90    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560501 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C614 )
    Call  SetActorType      ( .Actor:Self 00000057 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8022C328 )
    Call  $Function_802199C4    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_8022D234
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022CB2C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022CB2C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
            ExecWait  $Script_8022CC38
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022CB2C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570505
            SetConst  *Var[2]  00570506
            ExecWait  DoBurnHit
            ExecWait  $Script_8022CC38
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570505
            SetConst  *Var[2]  00570506
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570506
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570501
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570501
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570504 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
            ExecWait  $Script_GRYMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570502
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570502 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80219840    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80219840    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560503 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_8022E748
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022C604 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E890 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C614 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_8022E7EC
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022C604 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E890 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022D234 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_8022E890
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80219AE8    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetStatusFlags    ( *Var[0] *Var[4] )
            If  *Var[4]  !&  04002000
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_GRYMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_GRYMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_GRYMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DB )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  VanishActor   ( *Var[8] 00000002 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Unknown $???_8022EFD0
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_8022EFE0
{
    Call  $Function_80219DA8 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8022F01C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_8022F0E4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8022F01C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219DCC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022F1C4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219DCC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022F288
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Exec  $Script_8022EFE0
    Thread
        Set   *Var[0]  00000016
        Set   *Var[1]  00000001
        Exec  $Script_8022F0E4
        Wait  5`
        Set   *Var[0]  00000014
        Set   *Var[1]  00000003
        Exec  $Script_8022F0E4
        Wait  5`
        Set   *Var[0]  00000012
        Set   *Var[1]  00000004
        Exec  $Script_8022F0E4
        Wait  5`
        Set   *Var[0]  00000010
        Set   *Var[1]  00000002
        Exec  $Script_8022F0E4
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8022F398
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F3A8
{
    FFFFFFFF
    ~Model:sam_bt01:saku
    00000000
}

#new:Stage $Stage_8022F3B4
{
    $ASCII_80231378  % sam_tex
    $ASCII_80231368  % sam_bt01_shape
    $ASCII_80231358  % sam_bt01_hit
    $Script_BeforeBattle_8022F288
    $Script_AfterBattle_8022F398
    $ASCII_80231350  % yki_bg
    $ForegroundModelList_8022F3A8
    00000000
    00000000
    00000000
}

PADDING: 8022F3DC to 8022F3E0 (0063AF7C to 0063AF80)
00000000

% Origin: HEURISTIC
#new:Unknown $???_8022F3E0
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_8022F3F0
{
    Call  $Function_8021A0C8 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8022F42C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_8022F4F4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8022F42C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A0EC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022F5D4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A0EC    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022F698
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
    Thread
        Set   *Var[0]  00000012
        Set   *Var[1]  00000000
        Exec  $Script_8022F4F4
        Wait  5`
        Set   *Var[0]  00000014
        Set   *Var[1]  00000000
        Exec  $Script_8022F4F4
        Wait  5`
        Set   *Var[0]  00000016
        Set   *Var[1]  00000000
        Exec  $Script_8022F4F4
        Wait  5`
        Set   *Var[0]  00000018
        Set   *Var[1]  00000000
        Exec  $Script_8022F4F4
    EndThread
    Exec  $Script_8022F3F0
    Return
    End
}

#new:Script $Script_AfterBattle_8022F7D0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F7E0
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_8022F7EC
{
    $ASCII_802313A8  % sam_tex
    $ASCII_80231398  % sam_bt02_shape
    $ASCII_80231388  % sam_bt02_hit
    $Script_BeforeBattle_8022F698
    $Script_AfterBattle_8022F7D0
    $ASCII_80231380  % yki_bg
    $ForegroundModelList_8022F7E0
    00000000
    00000000
    00000000
}

PADDING: 8022F814 to 8022F820 (0063B3B4 to 0063B3C0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_8022F820
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_8022F830
{
    Call  $Function_8021A3E8 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022F86C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022F934
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8022F86C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A40C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022FA14
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A40C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022FAD8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
    Exec  $Script_8022F830
    Return
    End
}

#new:Script $Script_AfterBattle_8022FB2C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022FB3C
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_8022FB48
{
    $ASCII_802313D8  % sam_tex
    $ASCII_802313C8  % sam_bt02_shape
    $ASCII_802313B8  % sam_bt02_hit
    $Script_BeforeBattle_8022FAD8
    $Script_AfterBattle_8022FB2C
    $ASCII_802313B0  % yki_bg
    $ForegroundModelList_8022FB3C
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Unknown $???_8022FB70
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_8022FB80
{
    Call  $Function_8021A708 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022FBBC
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022FC84
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8022FBBC
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A72C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022FD64
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A72C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022FE28
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
    Exec  $Script_8022FB80
    Return
    End
}

#new:Script $Script_AfterBattle_8022FE90
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022FEA0
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_8022FEAC
{
    $ASCII_80231408  % sam_tex
    $ASCII_802313F8  % sam_bt02_shape
    $ASCII_802313E8  % sam_bt02_hit
    $Script_BeforeBattle_8022FE28
    $Script_AfterBattle_8022FE90
    $ASCII_802313E0  % yki_bg
    $ForegroundModelList_8022FEA0
    00000000
    00000000
    00000000
}

PADDING: 8022FED4 to 8022FEE0 (0063BA74 to 0063BA80)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_8022FEE0
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_8022FEF0
{
    Call  $Function_8021AA28 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022FF2C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022FFF4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8022FF2C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021AA4C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802300D4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021AA4C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80230198
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
    Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
    Exec  $Script_8022FEF0
    Return
    End
}

#new:Script $Script_AfterBattle_80230214
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80230224
{
    FFFFFFFF
    ~Model:sam_bt02:kouri1
    00000000
}

#new:Stage $Stage_80230230
{
    $ASCII_80231438  % sam_tex
    $ASCII_80231428  % sam_bt02_shape
    $ASCII_80231418  % sam_bt02_hit
    $Script_BeforeBattle_80230198
    $Script_AfterBattle_80230214
    $ASCII_80231410  % yki_bg
    $ForegroundModelList_80230224
    00000000
    00000000
    00000000
}

PADDING: 80230258 to 80230260 (0063BDF8 to 0063BE00)
00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80230260
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_80230270
{
    Call  $Function_8021AD48 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_802302AC
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_80230374
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_802302AC
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021AD6C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80230454
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021AD6C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80230518
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Thread
        Set   *Var[0]  00000010
        Set   *Var[1]  00000000
        Exec  $Script_80230374
        Wait  5`
        Set   *Var[0]  00000019
        Set   *Var[1]  00000000
        Exec  $Script_80230454
        Wait  5`
        Set   *Var[0]  00000016
        Set   *Var[1]  00000000
        Exec  $Script_80230454
        Wait  5`
        Set   *Var[0]  00000013
        Set   *Var[1]  00000000
        Exec  $Script_80230454
    EndThread
    Exec  $Script_80230270
    Return
    End
}

#new:Script $Script_AfterBattle_80230628
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80230638
{
    FFFFFFFF
    ~Model:sam_bt03:o278
    00000000
}

#new:Stage $Stage_80230644
{
    $ASCII_80231468  % sam_tex
    $ASCII_80231458  % sam_bt03_shape
    $ASCII_80231448  % sam_bt03_hit
    $Script_BeforeBattle_80230518
    $Script_AfterBattle_80230628
    $ASCII_80231440  % sam_bg
    $ForegroundModelList_80230638
    00000000
    00000000
    00000000
}

PADDING: 8023066C to 80230670 (0063C20C to 0063C210)
00000000

#new:Vector3D $Vector3D_80230670
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_8023067C
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_80230688
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_80230694
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_802306A0
{
    -28` 0` -46`
}

#new:Vector3D $Vector3D_802306AC
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_802306B8
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_802306C4
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_802306D0
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_802306DC
{
    -28` 0` -46`
}

#new:Vector3D $Vector3D_802306E8
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_802306F4
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_80230700
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_8023070C
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_80230718
{
    -28` 0` -46`
}

#new:Vector3D $Vector3D_80230724
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_80230730
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_8023073C
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_80230748
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_80230754
{
    -28` 0` -46`
}

#new:Vector3D $Vector3D_80230760
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_8023076C
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_80230778
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_80230784
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_80230790
{
    -28` 0` -46`
}

#new:Vector3D $Vector3D_8023079C
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_802307A8
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_802307B4
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_802307C0
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_802307CC
{
    -28` 0` -46`
}

#new:Vector3D $Vector3D_802307D8
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_802307E4
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_802307F0
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_802307FC
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_80230808
{
    -28` 0` -46`
}

#new:Vector3D $Vector3D_80230814
{
    -35` 0` -52`
}

#new:Vector3D $Vector3D_80230820
{
    -20` 0` -50`
}

#new:Vector3D $Vector3D_8023082C
{
    -17` 0` -40`
}

#new:Vector3D $Vector3D_80230838
{
    -7` 0` -48`
}

#new:Vector3D $Vector3D_80230844
{
    -28` 0` -46`
}

#new:Formation $Formation_00
{
    $Duplighost 00000001 0000000A 00000000 00000000 00000000 00000000
    $Duplighost 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Gulpit 00000001 00000014 00000000 00000000 00000000 00000000
    $Gulpit 00000002 00000013 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230670 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_8023067C 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230688 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230694 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306A0 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
    $Gulpit 00000001 00000013 00000000 00000000 00000000 00000000
    $Gulpit 00000002 00000012 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306AC 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306B8 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306C4 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306D0 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306DC 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
    $Gulpit 00000001 00000013 00000000 00000000 00000000 00000000
    $FrostPiranha 00000002 00000012 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306E8 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802306F4 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230700 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_8023070C 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230718 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
    $FrostPiranha 00000001 00000013 00000000 00000000 00000000 00000000
    $Gulpit 00000002 00000012 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230724 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230730 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_8023073C 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230748 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230754 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
    $FrostPiranha 00000001 00000013 00000000 00000000 00000000 00000000
    $Gulpit 00000002 00000012 00000000 00000000 00000000 00000000
    $FrostPiranha 00000003 00000011 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230760 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_8023076C 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230778 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230784 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230790 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $FrostPiranha 00000001 0000000A 00000000 00000000 00000000 00000000
    $FrostPiranha 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $FrostPiranha 00000002 00000008 00000000 00000000 00000000 00000000
    $FrostPiranha 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $Gulpit 00000002 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_8023079C 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307A8 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307B4 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307C0 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307CC 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $Gulpit 00000001 00000009 00000000 00000000 00000000 00000000
    $FrostPiranha 00000002 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307D8 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307E4 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307F0 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_802307FC 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230808 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $Gulpit 00000001 00000009 00000000 00000000 00000000 00000000
    $FrostPiranha 00000002 00000008 00000000 00000000 00000000 00000000
    $Gulpit 00000003 00000007 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230814 00000009 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230820 00000008 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_8023082C 00000007 00000001 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230838 00000006 00000000 00000000 00000000 00000000
    $GulpitRocks $Vector3D_80230844 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
    $FrostPiranha 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
    $GRYMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80231600 00000002 $Formation_00 $Stage_8022F3B4 00000000
    $SJIS_802315F4 00000007 $Formation_01 $Stage_8022F3B4 00000000
    $SJIS_802315E8 00000008 $Formation_02 $Stage_8022F3B4 00000000
    $SJIS_802315CC 00000008 $Formation_03 $Stage_8022F3B4 00000000
    $SJIS_802315A8 00000008 $Formation_04 $Stage_8022F3B4 00000000 % unused
    $SJIS_80231578 00000009 $Formation_05 $Stage_8022F3B4 00000000 % unused
    $SJIS_80231564 00000002 $Formation_06 $Stage_8022F3B4 00000000
    $SJIS_80231550 00000004 $Formation_07 $Stage_8022F3B4 00000000
    $SJIS_80231534 00000008 $Formation_08 $Stage_8022F3B4 00000000 % unused
    $SJIS_8023150C 00000008 $Formation_09 $Stage_8022F3B4 00000000
    $SJIS_802314DC 00000009 $Formation_0A $Stage_8022F3B4 00000000
    $SJIS_802314C8 00000002 $Formation_0B $Stage_8022F3B4 00000000
    $SJIS_802314A0 00000004 $Formation_0C $Stage_8022F3B4 00000000
    $SJIS_80231470 00000004 $Formation_0D $Stage_8022F3B4 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80231634 $Stage_8022F3B4
    $ASCII_8023162C $Stage_8022F7EC
    $ASCII_80231624 $Stage_8022FB48
    $ASCII_8023161C $Stage_8022FEAC
    $ASCII_80231614 $Stage_80230230
    $ASCII_8023160C $Stage_80230644
    00000000 00000000
}

PADDING: 802312C8 to 802312D0 (0063CE68 to 0063CE70)
00000000 00000000

#new:ConstDouble $ConstDouble_802312D0
{
    47.000000d
}

#new:ConstDouble $ConstDouble_802312D8
{
    1.120000d
}

#new:ConstDouble $ConstDouble_802312E0
{
    0.530000d
}

#new:ConstDouble $ConstDouble_802312E8
{
    47.000000d
}

#new:ConstDouble $ConstDouble_802312F0
{
    0.800000d
}

#new:ConstDouble $ConstDouble_802312F8
{
    0.530000d
}

#new:ConstDouble $ConstDouble_80231300
{
    0.800000d
}

#new:ConstDouble $ConstDouble_80231308
{
    16.500000d
}

#new:ConstDouble $ConstDouble_80231310
{
    33.000000d
}

#new:ConstDouble $ConstDouble_80231318
{
    4.800000d
}

#new:JumpTable $JumpTable_80231320
{
    $Function_80219524[54] $Function_80219524[60] $Function_80219524[6C] $Function_80219524[78]
    $Function_80219524[B0] $Function_80219524[90] $Function_80219524[9C] $Function_80219524[A8]
    $Function_80219524[84]
}

PADDING: 80231344 to 80231350 (0063CEE4 to 0063CEF0)
00000000 00000000 00000000

#new:ASCII $ASCII_80231350
{
    "yki_bg"
}

#new:ASCII $ASCII_80231358
{
    "sam_bt01_hit"
}

#new:ASCII $ASCII_80231368
{
    "sam_bt01_shape"
}

#new:ASCII $ASCII_80231378
{
    "sam_tex"
}

#new:ASCII $ASCII_80231380
{
    "yki_bg"
}

#new:ASCII $ASCII_80231388
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_80231398
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_802313A8
{
    "sam_tex"
}

#new:ASCII $ASCII_802313B0
{
    "yki_bg"
}

#new:ASCII $ASCII_802313B8
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_802313C8
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_802313D8
{
    "sam_tex"
}

#new:ASCII $ASCII_802313E0
{
    "yki_bg"
}

#new:ASCII $ASCII_802313E8
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_802313F8
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_80231408
{
    "sam_tex"
}

#new:ASCII $ASCII_80231410
{
    "yki_bg"
}

#new:ASCII $ASCII_80231418
{
    "sam_bt02_hit"
}

#new:ASCII $ASCII_80231428
{
    "sam_bt02_shape"
}

#new:ASCII $ASCII_80231438
{
    "sam_tex"
}

#new:ASCII $ASCII_80231440
{
    "sam_bg"
}

#new:ASCII $ASCII_80231448
{
    "sam_bt03_hit"
}

#new:ASCII $ASCII_80231458
{
    "sam_bt03_shape"
}

#new:ASCII $ASCII_80231468
{
    "sam_tex"
}

#new:SJIS $SJIS_80231470
{
    ホワイトガボン,パックン,ガボン,グレイカメック % howaitogabon,pakkun,gabon,gureikamekku
}

#new:SJIS $SJIS_802314A0
{
    ホワイトガボン,パックン,ガボン,パックン % howaitogabon,pakkun,gabon,pakkun
}

#new:SJIS $SJIS_802314C8
{
    ホワイトガボンx２ % howaitogabonx2
}

#new:SJIS $SJIS_802314DC
{
    アイスパックン,ゴックン,アイスパックン,ゴックン % aisupakkun,gokkun,aisupakkun,gokkun
}

#new:SJIS $SJIS_8023150C
{
    アイスパックン,ゴックン,アイスパックン % aisupakkun,gokkun,aisupakkun
}

#new:SJIS $SJIS_80231534
{
    アイスパックンx２,ゴックン % aisupakkunx2,gokkun
}

#new:SJIS $SJIS_80231550
{
    アイスパックンx４ % aisupakkunx4
}

#new:SJIS $SJIS_80231564
{
    アイスパックンx２ % aisupakkunx2
}

#new:SJIS $SJIS_80231578
{
    ゴックン,アイスパックン,ゴックン,アイスパックン % gokkun,aisupakkun,gokkun,aisupakkun
}

#new:SJIS $SJIS_802315A8
{
    ゴックン,アイスパックン,ゴックン % gokkun,aisupakkun,gokkun
}

#new:SJIS $SJIS_802315CC
{
    ゴックンx2,アイスパックン % gokkunx2,aisupakkun
}

#new:SJIS $SJIS_802315E8
{
    ゴックンx3 % gokkunx3
}

#new:SJIS $SJIS_802315F4
{
    ゴックンx2 % gokkunx2
}

#new:SJIS $SJIS_80231600
{
    バケバケx2 % bakebakex2
}

#new:ASCII $ASCII_8023160C
{
    "sam_03"
}

#new:ASCII $ASCII_80231614
{
    "sam_02d"
}

#new:ASCII $ASCII_8023161C
{
    "sam_02c"
}

#new:ASCII $ASCII_80231624
{
    "sam_02b"
}

#new:ASCII $ASCII_8023162C
{
    "sam_02"
}

#new:ASCII $ASCII_80231634
{
    "sam_01"
}

PADDING: 8023163C to 80231640 (0063D1DC to 0063D1E0)
00000000

