% Script File: 14 Area JAN.bscr
% Decoded from: 573920 to 584940 (14 Area JAN)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (005739EC to 005739F0)
00000000

#new:Function $Function_802180D0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021819C to 802181A0 (00573ABC to 00573AC0)
00000000

#new:Function $Function_802181A0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218254
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218308 to 80218310 (00573C28 to 00573C30)
00000000 00000000

#new:Function $Function_80218310
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802183DC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIO       AT, 40C90FD8
	MTC1      AT, F8
	MTC1      S2, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F8, F4, F8
	NOP
	MTC1      S0, F6
	NOP
	CVT.S.W   F6, F6
	LIF       F2, 1.0
	DIV.S     F4, F4, F6
	SUB.S     F2, F2, F4
	MUL.S     F20, F0, F2
	NOP
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:cos_rad
	DIV.S     F12, F8, F12
	MUL.S     F20, F20, F0
	NOP
	COPY      A0, S1
	TRUNC.W.S F10, F20
	MFC1      A2, F10
	JAL       ~Func:set_variable
	COPY      A1, S4
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

PADDING: 802184EC to 802184F0 (00573E0C to 00573E10)
00000000

#new:Function $Function_802184F0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802185BC to 802185C0 (00573EDC to 00573EE0)
00000000

#new:IdleAnimations $IdleAnimations_802185C0
{
    .Status:Normal    00420004
    .Status:Stone     00420002
    .Status:Sleep     0042000D
    .Status:Poison    0042000F
    .Status:Stop      00420002
    .Status:Static    00420004
    .Status:Paralyze  00420002
    .Status:Dizzy     0042000F
    .Status:Fear      0042000F
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021860C
{
    .Status:Normal    00420003
    .Status:Stone     0042000D
    .Status:Sleep     0042000D
    .Status:Poison    0042000F
    .Status:Stop      00420001
    .Status:Static    00420003
    .Status:Paralyze  00420001
    .Status:Dizzy     0042000F
    .Status:Fear      0042000F
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218658
{
    .Status:Normal    00420014
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218664
{
    .Status:Normal    00420019
    .Status:End
}

#new:DefenseTable $DefenseTable_80218670
{
    .Element:Normal 00000000
    .Element:Fire   00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80218684
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_80218698
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_80218744
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802187F0
{
    00800000 02000000 001600FF $IdleAnimations_802185C0 $DefenseTable_80218670 00010000 00000000 FDF80000 00000000
    00022001 01000000 001800FF $IdleAnimations_8021BF40 $DefenseTable_80218684 00000000 00000000 FFF60000 00000000
    00122001 03000000 000000FF $IdleAnimations_80218658 $DefenseTable_80218684 00000000 00000000 00000000 00000000
    00122001 04000000 000000FF $IdleAnimations_80218664 $DefenseTable_80218684 00000000 00000000 00000000 00000000
}

#new:Actor $SpearGuy
{
    % stats
    [Index]        2Ab
    [Level]        16`b
    [MaxHP]         7`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80218698
    % ai
    [PartsCount]    4`s
    [PartsTable]  $PartsTable_802187F0
    [Script]      $Script_Init_80218980
    % move effectiveness
    [Escape]       50`b
    [Item]         70`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_SetSpearStance
{
    Switch  *Var[0]
        Case  ==  00000002
        Case  ==  00000000
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_802185C0 )
            Call  SetPartEventFlags ( .Actor:Self 00000002 00010000 )
        Case  ==  00000001
            Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
            Call  SetPartEventFlags ( .Actor:Self 00000002 00000010 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_80218980
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            ExecWait  $Script_SetSpearStance
            Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
        Case  ==  00000001
            ExecWait  $Script_SetSpearStance
            Call  SetPartEventFlags ( .Actor:Self 00000002 00000010 )
            Call  SetAnimation      ( .Actor:Self 00000002 00420003 )
    EndSwitch
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021BCB4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218E3C )
    Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_80218B24 )
    Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
    Call  GetEncounterState ( *Var[0] )
    Switch  *Var[0]
        Case  ==  00000002
        CaseOR  ==  00000004
        CaseOR  ==  00000006
            Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
            Call  SetAnimation      ( .Actor:Self 00000002 00420003 )
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_NextTurn_80218B24
{
    Call  BindNextTurn  ( .Actor:Self 00000000 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80218BE0 )
    Return
    End
}

#new:Script $Script_80218B5C
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000000
        Call  GetStatusFlags    ( .Actor:Self *Var[B] )
        If  *Var[B]  &  00049000
        Else
            Set   *Var[1]  *Var[2]
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_Idle_80218BE0
{
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00049000
                Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .True )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
            Else
                Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_802185C0 )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .False )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .True )
            EndIf
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .True )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80218D7C
{
    Call  UseCamPreset  ( 00000002 )
    SetConst  *Var[0]  00000002
    SetConst  *Var[1]  00420006
    ExecWait  DoReturnHome
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
        Case  ==  00000001
            Call  SetAnimation  ( .Actor:Self 00000002 00420003 )
    EndSwitch
    Return
    End
}

#new:Script $Script_HandleEvent_80218E3C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420007
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  GetStatusFlags    ( .Actor:Self *Var[B] )
                If  *Var[B]  &  00049000
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  0042000A
                    SetConst  *Var[2]  0042000C
                Else
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  0042000B
                    SetConst  *Var[2]  FFFFFFFF
                EndIf
            Else
                SetConst  *Var[0]  00000002
                SetConst  *Var[1]  0042000A
                SetConst  *Var[2]  0042000C
            EndIf
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  GetStatusFlags    ( .Actor:Self *Var[B] )
                If  *Var[B]  &  00049000
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  0042000A
                    SetConst  *Var[2]  0042000C
                    ExecWait  DoBurnHit
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  0042000C
                    ExecWait  DoDeath
                Else
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  0042000B
                    SetConst  *Var[2]  FFFFFFFF
                    ExecWait  DoBurnHit
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  0042000B
                    ExecWait  DoDeath
                EndIf
            Else
                SetConst  *Var[0]  00000002
                SetConst  *Var[1]  0042000A
                SetConst  *Var[2]  0042000C
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000002
                SetConst  *Var[1]  0042000C
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420007
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420007
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420009
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420007
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420007
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoJumpBack
            ExecWait  $Script_80218D7C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420007
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420009
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420003
            SetConst  *Var[2]  00420004
            ExecWait  $Script_80218B5C
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420007
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420009
            SetConst  *Var[2]  00420008
            ExecWait  $Script_80218B5C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  00420004
                    ExecWait  DoRecover
                Case  ==  00000001
                    SetConst  *Var[0]  00000002
                    SetConst  *Var[1]  00420003
                    ExecWait  DoRecover
            EndSwitch
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420006
            SetConst  *Var[2]  00420007
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00420004
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Set   *Flag[00]  .False
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
            Switch  *Var[A]
                Case  ==  00000000
                    If  *Var[3]  &  00080000
                        Add   *Var[0]  FFFFFFF5
                        Add   *Var[1]  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    If  *Var[3]  &  00040000
                        Add   *Var[0]  FFFFFFFC
                        Add   *Var[1]  00000024
                        Set   *Flag[00]  .True
                    EndIf
                    If  *Var[3]  &  00001000
                        Add   *Var[0]  FFFFFFF8
                        Add   *Var[1]  00000024
                        Set   *Flag[00]  .True
                    EndIf
                    If  *Flag[00]  ==  .False
                        Add   *Var[0]  FFFFFFE4
                        Add   *Var[1]  00000008
                    EndIf
                Case  ==  00000001
                    If  *Var[3]  &  00080000
                        Add   *Var[0]  FFFFFFFC
                        Add   *Var[1]  0000000F
                        Set   *Flag[00]  .True
                    EndIf
                    If  *Var[3]  &  00040000
                        Add   *Var[0]  FFFFFFFC
                        Add   *Var[1]  00000024
                        Set   *Flag[00]  .True
                    EndIf
                    If  *Var[3]  &  00001000
                        Add   *Var[0]  FFFFFFF8
                        Add   *Var[1]  00000024
                        Set   *Flag[00]  .True
                    EndIf
                    If  *Flag[00]  ==  .False
                        Add   *Var[0]  FFFFFFF6
                        Add   *Var[1]  00000026
                    EndIf
            EndSwitch
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SpearStab
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00420006 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  0000000A
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Add   *Var[2]  00000001
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
    Wait  5`
    Call  SetAnimation  ( .Actor:Self 00000002 0042001A )
    Wait  15`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor      ( .Actor:Self 00000309 )
            Call  SetAnimation  ( .Actor:Self 00000002 0042001B )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Sub   *Var[0]  00000014
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            ExecWait  $Script_80218D7C
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 00000309 )
    Call  SetAnimation      ( .Actor:Self 00000002 0042001B )
    Wait  5`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  20`
            ExecWait  $Script_80218D7C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SummonBackup
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  UseCamPreset      ( 00000001 )
    Call  SetAnimation      ( .Actor:Self 00000002 00420005 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
    EndThread
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000A
    Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420010 )
    Wait  25`
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
    EndThread
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420010 )
    Wait  30`
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000A
    Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  PlayEffect    ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor      ( .Actor:Self 0000206D )
    Call  SetAnimation  ( .Actor:Self 00000002 0042000E )
    Wait  20`
    Call  GetOriginalActorType  ( .Actor:Self *Var[0] )
    Call  EnemyCreateTargetList ( 00008004 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[1] *Var[2] )
    Call  GetOriginalActorType  ( *Var[1] *Var[2] )
    If  *Var[0]  ==  *Var[2]
        Call  SetAnimation      ( *Var[1] 00000002 00420004 )
        Call  GetIndexFromHome  ( *Var[1] *Var[3] )
        If  *Var[A]  <  *Var[3]
            Call  GetActorVar   ( *Var[1] 00000000 *Var[4] )
            If  *Var[4]  ==  00000000
                Call  SetActorVar       ( *Var[1] 00000000 00000001 )
                Call  SetIdleAnimations ( *Var[1] 00000002 $IdleAnimations_8021860C )
                Call  SetPartEventFlags ( *Var[1] 00000002 00000010 )
                Call  SetAnimation      ( *Var[1] 00000002 00420003 )
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[1] )
    If  *Var[1]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Set   *Flag[00]  .False
    Call  EnemyCreateTargetList ( 00008004 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetIndexFromHome      ( *Var[0] *Var[1] )
    If  *Var[1]  <  *Var[A]
        Set   *Flag[00]  .True
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    If  *Flag[00]  ==  .False
        Call  SummonEnemy   ( $SpecialFormation_8021A8C0 00000000 )
    Else
        Call  SummonEnemy   ( $SpecialFormation_8021A8DC 00000000 )
    EndIf
    Set   *Var[B]  *Var[0]
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( *Var[B] 00000002 00420010 )
    Call  SetGoalToIndex    ( *Var[B] *Var[A] )
    Call  GetGoalPos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000DC
    Call  SetActorPos   ( *Var[B] *Var[0] 00000000 00000000 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
        Wait  15`
    EndThread
    Call  SetActorSpeed ( *Var[B] *Fixed[4.0] )
    Call  RunToGoal     ( *Var[B] 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  PlaySoundAtActor      ( .Actor:Self 0000206D )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  PlayEffect    ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation  ( *Var[B] 00000002 0042000E )
    Wait  20`
    If  *Flag[00]  ==  .False
        Call  SetAnimation  ( *Var[B] 00000002 00420004 )
    Else
        Call  SetAnimation  ( *Var[B] 00000002 00420003 )
    EndIf
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[B] )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetActorVar   ( *Var[B] 00000001 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( *Var[B] 00000001 00000002 )
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000001 00000003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Vector3D $Vector3D_8021A8B4
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A8C0
{
    $SpearGuy $Vector3D_8021A8B4 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_8021A8DC
{
    $SpearGuy $Vector3D_8021A8B4 00000064 00000001 00000000 00000000 00000000
}

#new:Script $Script_BecomeShyGuy
{
    Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
    Wait  10`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000002 00420013 )
    Wait  5`
    Call  SetAnimation  ( .Actor:Self 00000002 00420018 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000A
    Add   *Var[1]  0000000F
    Sub   *Var[2]  00000001
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits       ( .Actor:Self 00000004 00000001 .False )
    Call  SetPartJumpGravity    ( .Actor:Self 00000004 *Fixed[0.5] )
    Add   *Var[0]  00000032
    Sub   *Var[2]  0000001E
    Thread
        Loop  0000000F
            Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 0000000A )
            Wait  1`
            Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 FFFFFFF6 )
            Wait  1`
        EndLoop
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
    Thread
        Loop  0000000A
            Call  GetPartOffset ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( 00000011 00000003 *Var[0] *Var[1] *Var[2] 00000005 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Call  PlaySoundAtPart   ( .Actor:Self 00000004 000002FC )
    Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Jump 00000000 00000000 )
    Call  JumpPartTo    ( .Actor:Self 00000004 *Var[0] 00000000 *Var[2] 0000001E .True )
    Wait  5`
    Call  SetPartFlags  ( .Actor:Self 00000002 00022005 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00022005 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00022005 )
    ExecWait  $Script_8021BF8C
    Call  SetActorType  ( .Actor:Self 0000001F )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80218744 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_SpearThrow
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000002 00420006 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000002 00420015 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Sub   *Var[0]  00000064
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Sub   *Var[0]  00000046
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000002 00420011 )
            Wait  5`
            Thread
                Call  SetAnimation  ( .Actor:Self 00000002 00420017 )
                Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  00000014
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                Sub   *Var[0]  0000000A
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                Call  SetAnimation  ( .Actor:Self 00000002 00420012 )
            EndThread
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] 00000014 *Var[2] )
            Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
            Thread
                Call  MakeLerp  ( FFFFFFE2 0000002D 00000014 .Easing:Linear )
                Label  0
                Call  UpdateLerp ( )
                Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  0
                EndIf
            EndThread
            Call  PlaySoundAtPart   ( .Actor:Self 00000003 0000030A )
            Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000002
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.7] )
            Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
            Wait  10`
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Wait  10`
            ExecWait  $Script_BecomeShyGuy
            Call  YieldTurn ( )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000002 00420011 )
    Wait  5`
    Thread
        Call  SetAnimation  ( .Actor:Self 00000002 00420017 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  00000014
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
        Sub   *Var[0]  0000000A
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Call  SetAnimation  ( .Actor:Self 00000002 00420012 )
    EndThread
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] 00000014 *Var[2] )
    Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Thread
        Call  MakeLerp  ( FFFFFFE2 0000002D 00000014 .Easing:Linear )
        Label  0
        Call  UpdateLerp ( )
        Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000001
            Goto  0
        EndIf
    EndThread
    Call  PlaySoundAtPart   ( .Actor:Self 00000003 0000030A )
    Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000002
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.7] )
    Call  JumpPartTo        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Wait  3`
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Wait  20`
    ExecWait  $Script_BecomeShyGuy
    Switch  *Var[0]
        CaseOR  ==  00000000
        CaseOR  ==  00000002
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021B770
{
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[01]  ==  .False
        Set   *Var[A]  00000000
        Return
    EndIf
    If  *Flag[02]  ==  .False
        Set   *Var[A]  00000001
        Return
    EndIf
    If  *Flag[03]  ==  .False
        Set   *Var[A]  00000002
        Return
    EndIf
    If  *Flag[04]  ==  .False
        Set   *Var[A]  00000003
        Return
    EndIf
    Set   *Var[A]  FFFFFFFF
    Return
    End
}

#new:Script $Script_8021B96C
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        Case  ==  00000029
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  !=  00000002
                    Add   *Var[9]  00000001
                EndIf
            EndIf
        Case  ==  0000002A
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000001 *Var[3] )
                If  *Var[3]  <  00000002
                    Add   *Var[9]  00000001
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_8021BB18
{
    Call  GetIndexFromHome  ( .Actor:Self *Var[A] )
    Set   *Flag[00]  .False
    Call  EnemyCreateTargetList ( 00008004 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    If  *Var[1]  <  *Var[A]
        Set   *Flag[00]  .True
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .True
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  .Actor:Player % 0
            Set   *Var[0]  00000001
            ExecWait  $Script_SetSpearStance
        EndIf
    Else
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001
            Set   *Var[0]  00000000
            ExecWait  $Script_SetSpearStance
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021BCB4
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_SpearStab
        ExecWait  $Script_8021BB18
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  00000000
        CaseOR  ==  00000001
            ExecWait  $Script_8021B770
            If  *Var[A]  ==  FFFFFFFF
                ExecWait  $Script_SpearStab
                ExecWait  $Script_8021BB18
                Return
            EndIf
            ExecWait  $Script_8021B96C
            Switch  *Var[9]
                Case  ==  00000001
                    Call  RandInt   ( 000003E8 *Var[0] )
                    If  *Var[0]  <  0000012C
                        ExecWait  $Script_SummonBackup
                        Return
                    EndIf
                Case  ==  00000002
                    Call  RandInt   ( 000003E8 *Var[0] )
                    If  *Var[0]  <  00000096
                        ExecWait  $Script_SummonBackup
                        Return
                    EndIf
                Case  ==  00000003
                    Call  RandInt   ( 000003E8 *Var[0] )
                    If  *Var[0]  <  00000064
                        ExecWait  $Script_SummonBackup
                        Return
                    EndIf
            EndSwitch
            ExecWait  $Script_SpearStab
            ExecWait  $Script_8021BB18
        EndCaseGroup
        Case  ==  00000002
            Call  EnemyCreateTargetList ( 00008002 )
            Call  GetTargetListLength   ( *Var[0] )
            If  *Var[0]  ==  00000001
                ExecWait  $Script_SpearThrow
                Return
            EndIf
            ExecWait  $Script_SpearStab
            ExecWait  $Script_8021BB18
        Case  ==  00000003
            ExecWait  $Script_SpearThrow
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021BF40
{
    .Status:Normal    003B0001
    .Status:Stone     003B0000
    .Status:Sleep     003B0012
    .Status:Poison    003B0001
    .Status:Stop      003B0000
    .Status:Static    003B0001
    .Status:Paralyze  003B0000
    .Status:Dizzy     003B0013
    .Status:Fear      003B0013
    .Status:End
}

#new:Script $Script_8021BF8C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D8D8 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021BFD8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C14C )
    Return
    End
}

#new:Script $Script_Idle_8021BFD8
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218000    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021C0E8
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0003
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021C14C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021C0E8
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0003
            SetConst  *Var[2]  003B0014
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021C628
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_8021C0E8
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021CD50
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021D8D8
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_8021C628
    Else
        ExecWait  $Script_8021CD50
    EndIf
    Return
    End
}

PADDING: 8021D934 to 8021D940 (00579254 to 00579260)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021D940
{
    .Status:Normal    00440002
    .Status:Stone     00440000
    .Status:Sleep     0044000C
    .Status:Poison    00440002
    .Status:Stop      00440000
    .Status:Static    00440002
    .Status:Paralyze  00440000
    .Status:Dizzy     00440009
    .Status:Fear      00440009
    .Status:End
}

#new:DefenseTable $DefenseTable_8021D98C
{
    .Element:Normal 00000000
    .Element:Fire   00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021D9A0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021DA4C
{
    00800000 01000000 F61800FF $IdleAnimations_8021D940 $DefenseTable_8021D98C 00000000 00000000 F8FB0000 00000000
}

#new:Actor $HurtPlant
{
    % stats
    [Index]        26b
    [Level]        16`b
    [MaxHP]         8`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021D9A0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021DA4C
    [Script]      $Script_Init_8021DA98
    % move effectiveness
    [Escape]       70`b
    [Item]         70`b
    [AirLift]      20`b
    [Hurricane]    20`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  95`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         40`b  35`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -18`b  23`b % dx dy
    [StatusIcon]    1`b  20`b % dx dy
}

#new:Script $Script_Init_8021DA98
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E33C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021DAE4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DCF4 )
    Return
    End
}

#new:Script $Script_Idle_8021DAE4
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  &  00001000
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFA 0000000E )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFFB )
            Call  $Function_802180D0    ( FFFFFFEC 00000008 00000000 0000000E )
        Default
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF6 00000018 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFF8 FFFFFFFB )
            Call  $Function_802180D0    ( FFFFFFEE 00000017 00000001 00000014 )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021DBFC
{
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
    Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
    Wait  10`
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    Call  SetAnimation      ( .Actor:Self 00000001 00440003 )
    Wait  10`
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
    Return
    End
}

#new:Script $Script_HandleEvent_8021DCF4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
            Wait  3`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000A
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000A
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
            Wait  3`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
            Wait  3`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
            Wait  3`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoShockHit
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021DBFC
        Case  ==  .Event:ShockDeath % 26
            Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
            Wait  3`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00440002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
            Wait  3`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00440002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation      ( .Actor:Self 00000001 0044000D )
            Wait  3`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0044000E
            ExecWait  DoNormalHit
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
            Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
            Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
            Wait  20`
            Call  8027D32C  ( FFFFFF81 )
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  RemoveActor       ( .Actor:Self )
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00440002
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00440002
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021E33C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
        Call  UseCamPreset      ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
        Call  MoveBattleCamOver ( 00000001 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Wait  15`
        Goto  7B
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
    Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Wait  8`
    Call  UseCamPreset      ( 00000013 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001B
    Set   *Var[1]  00000000
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 0000002D )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001B
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
    Label  7B
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00440003 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00440005 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000002C4 )
    Call  SetAnimation      ( .Actor:Self 00000001 00440006 )
    Wait  6`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 00440007 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021DBFC
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00020000
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Else
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020364 00000002 00000020 )
    EndIf
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 00440007 )
            Wait  5`
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021DBFC
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021E9C4 to 8021E9D0 (0057A2E4 to 0057A2F0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021E9D0
{
    .Element:Normal 00000000
    .Element:Fire   00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021E9E4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     70`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021EA90
{
    00800000 01000000 001400FF $IdleAnimations_8021EADC $DefenseTable_8021E9D0 00000000 00000000 00F60000 00000000
}

#new:Actor $JungleFuzzy
{
    % stats
    [Index]        29b
    [Level]        16`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021E9E4
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021EA90
    [Script]      $Script_Init_8021EB28
    % move effectiveness
    [Escape]       30`b
    [Item]         75`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         33`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021EADC
{
    .Status:Normal    002B0301
    .Status:Stone     002B0300
    .Status:Sleep     002B030E
    .Status:Poison    002B0301
    .Status:Stop      002B0300
    .Status:Static    002B0301
    .Status:Paralyze  002B0300
    .Status:Dizzy     002B030F
    .Status:Fear      002B030F
    .Status:End
}

#new:Script $Script_Init_8021EB28
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221628 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021EB8C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EB9C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021EB8C
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021EB9C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  .Event:Death % 20
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0313
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0308
            EndIf
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0310
            SetConst  *Var[2]  002B0312
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0310
            SetConst  *Var[2]  002B0312
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0312
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0308
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0308
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0308
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0313
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0313
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0303
            ExecWait  8029C0A4
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0313
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0313
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0313
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0313
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0308
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0308
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0303
            SetConst  *Var[2]  002B0309
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0303
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0303
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0301
            ExecWait  DoImmune
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Divide
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000014A )
    Call  SetBattleCamOffsetZ   ( 0000001E )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  20`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  UseCamPreset      ( 00000001 )
    Thread
        Wait  30`
        Call  PlaySoundAtActor  ( .Actor:Self 0000206E )
        Wait  30`
        Loop  00000004
            Call  PlaySoundAtActor  ( .Actor:Self 0000206F )
            Wait  11`
        EndLoop
        Call  PlaySoundAtActor  ( .Actor:Self 00002070 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 002B030D )
    Wait  130`
    Call  SetAnimation  ( .Actor:Self 00000001 002B0302 )
    Call  SummonEnemy   ( $SpecialFormation_8022180C 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Call  SetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  SetGoalToIndex    ( *Var[0] *Var[A] )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 002B0302 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
        Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  JumpToGoal    ( .Actor:Self 0000000E .False .True .False )
    EndThread
    Wait  1`
    Call  SetAnimation  ( *Var[0] 00000001 002B0302 )
    Call  SetActorJumpGravity   ( *Var[0] *Fixed[1.4] )
    Call  JumpToGoal    ( *Var[0] 0000000E .False .True .False )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  ForceHomePos  ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  HPBarToHome   ( *Var[0] )
    Call  SetAnimation  ( *Var[0] 00000001 002B0301 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetActorVar   ( *Var[0] 00000000 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( *Var[0] 00000000 00000002 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_LeechAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Goto  64
    EndIf
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0303 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C
    Call  SetAnimation      ( .Actor:Self 00000001 002B0301 )
    Label  64
    Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0304 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Set   *Var[1]  00000000
            Sub   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0305 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000B .False .True .False )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0309 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  4`
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0303 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000
                Set   *Flag[00]  .False
            Else
                Set   *Flag[00]  .True
            EndIf
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    If  *Flag[00]  ==  .True
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Player *Var[1] )
    If  *Var[1]  &  00100000
        Wait  10`
        Loop  00000002
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0307 )
            Wait  21`
            Call  SetAnimation  ( .Actor:Self 00000001 002B0300 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Wait  2`
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Wait  10`
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[A] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0305 )
            Wait  30`
        EndLoop
    Else
        Call  ShowMessageBox    ( 00000031 00007FFF )
        Call  802694A4  ( 00000001 )
        Call  LoadActionCommand ( 00000006 )
        Call  802A9000 ( )
        Call  802691C8  ( 00000001 00000017 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  SetBattleFlagBits ( 00004000 .False )
        Call  802A9110  ( 00000000 00007FFF 00000003 )
        Set   *Var[D]  00000000
        Loop  00000005
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetAnimation      ( .Actor:Self 00000001 002B0307 )
            Set   *Flag[00]  .False
            Loop  00000015
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetAnimation      ( .Actor:Self 00000001 002B0300 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
            Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000002
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  0000000A
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Set   *Flag[00]  .False
            Loop  00000002
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  UseIdleAnimation  ( .Actor:Player .True )
            Call  EnemyDamageTarget ( .Actor:Self *Var[A] 0A000000 00000000 00000000 00000002 00000040 )
            Call  GetLastDamage     ( .Actor:Player *Var[3] )
            If  *Var[3]  !=  00000000
                Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
                Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A
                Call  $Function_802181A0    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Thread
                    Wait  15`
                    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                    Call  $Function_80218254    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                EndThread
                Add   *Var[0]  00000014
                Add   *Var[1]  00000014
                Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                Add   *Var[0]  *Var[3]
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            Else
                Add   *Var[D]  00000001
                If  *Var[D]  >  00000001
                    Call  80269470 ( )
                    BreakLoop
                EndIf
            EndIf
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
            Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
            Call  GetPlayerHP       ( *Var[1] )
            If  *Var[1]  ==  00000000
                Call  80269470 ( )
                BreakLoop
            EndIf
            Set   *Flag[00]  .False
            Loop  00000023
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                BreakLoop
            EndIf
        EndLoop
        Call  80269470 ( )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
    EndIf
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0301 )
    Call  UseCamPreset  ( 00000002 )
    Thread
        Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
        Wait  2`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
        Wait  2`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
    EndThread
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
    Wait  1`
    Thread
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Wait  5`
    Call  YieldTurn ( )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0303 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C
    Call  SetAnimation  ( .Actor:Self 00000001 002B0301 )
    Call  EnableIdleScript      ( .Actor:Self 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802210E0
{
    Set   *Flag[01]  .False
    Set   *Flag[02]  .False
    Set   *Flag[03]  .False
    Set   *Flag[04]  .False
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Set   *Var[A]  FFFFFFFF
    Set   *Var[B]  FFFFFFFF
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Actor:Player % 0
            If  *Flag[02]  ==  .False
                Set   *Var[A]  00000001
            EndIf
        Case  ==  00000001 % 1
            If  *Flag[01]  ==  .False
                Set   *Var[A]  00000000
            EndIf
            If  *Flag[03]  ==  .False
                If  *Var[A]  ==  FFFFFFFF
                    Set   *Var[A]  00000002
                Else
                    Set   *Var[B]  00000002
                EndIf
            EndIf
        Case  ==  00000002 % 2
            If  *Flag[02]  ==  .False
                Set   *Var[A]  00000001
            EndIf
            If  *Flag[04]  ==  .False
                If  *Var[A]  ==  FFFFFFFF
                    Set   *Var[A]  00000003
                Else
                    Set   *Var[B]  00000003
                EndIf
            EndIf
        Case  ==  00000003 % 3
            If  *Flag[03]  ==  .False
                Set   *Var[A]  00000002
            EndIf
    EndSwitch
    If  *Var[B]  !=  FFFFFFFF
        Call  RandInt   ( 000003E8 *Var[0] )
        If  *Var[0]  <  000001F4 % 1F4
            Set   *Var[A]  *Var[B]
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_80221468
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        CaseOR  ==  0000001A
        CaseOR  ==  00000029
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  !=  00000002
                    Add   *Var[9]  00000001
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  0000002A
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000001 *Var[3] )
                If  *Var[3]  <  00000002
                    Add   *Var[9]  00000001
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80221628
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_LeechAttack
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000002
        ExecWait  $Script_LeechAttack
        Return
    EndIf
    ExecWait  $Script_802210E0
    If  *Var[A]  ==  FFFFFFFF
        ExecWait  $Script_LeechAttack
        Return
    EndIf
    ExecWait  $Script_80221468
    Switch  *Var[9]
        Case  ==  00000001
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000190
                ExecWait  $Script_Divide
                Return
            EndIf
        Case  ==  00000002
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000096
                ExecWait  $Script_Divide
                Return
            EndIf
        Case  ==  00000003
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000046
                ExecWait  $Script_Divide
                Return
            EndIf
    EndSwitch
    ExecWait  $Script_LeechAttack
    Return
    End
}

#new:Vector3D $Vector3D_80221800
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8022180C
{
    $JungleFuzzy $Vector3D_80221800 00000000 00000000 00000000 00000000 00000000
}

PADDING: 80221828 to 80221830 (0057D148 to 0057D150)
00000000 00000000

#new:IdleAnimations $IdleAnimations_80221830
{
    .Status:Normal    00450002
    .Status:Stone     00450001
    .Status:Sleep     00450008
    .Status:Poison    00450002
    .Status:Stop      00450001
    .Status:Static    00450002
    .Status:Paralyze  00450001
    .Status:Dizzy     00450009
    .Status:Fear      00450009
    .Status:End
}

#new:DefenseTable $DefenseTable_8022187C
{
    .Element:Normal 00000000
    .Element:Fire   00000000
    .Element:End
}

#new:StatusTable $StatusTable_80221890
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022193C
{
    00800000 01000000 FE1600FF $IdleAnimations_80221830 $DefenseTable_8022187C 00000000 00000000 00F60000 00000000
}

#new:Actor $MBush
{
    % stats
    [Index]        27b
    [Level]        16`b
    [MaxHP]         8`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80221890
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022193C
    [Script]      $Script_Init_80221988
    % move effectiveness
    [Escape]       70`b
    [Item]         60`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  30`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80221988
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80221F78 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802219D4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221A74 )
    Return
    End
}

#new:Script $Script_Idle_802219D4
{
    Return
    End
}

#new:Script $Script_802219E4
{
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00450005 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00450002 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_80221A74
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0045000A
            SetConst  *Var[2]  0045000B
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0045000A
            SetConst  *Var[2]  0045000B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0045000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_802219E4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450005
            SetConst  *Var[2]  00450009
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450005
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00450005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80221F78
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00450004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020C9 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation      ( .Actor:Self 00000001 00450006 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Sub   *Var[0]  00000014
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
            Wait  15`
            Call  SetAnimation      ( .Actor:Self 00000001 00450002 )
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_802219E4
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00450006 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020219 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00450002 )
            Wait  8`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_802219E4
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8022254C to 80222550 (0057DE6C to 0057DE70)
00000000

#new:IdleAnimations $IdleAnimations_80222550
{
    .Status:Normal    00400001
    .Status:Stone     00400000
    .Status:Sleep     00400004
    .Status:Poison    00400001
    .Status:Stop      00400000
    .Status:Static    00400001
    .Status:Paralyze  00400000
    .Status:Dizzy     0040000A
    .Status:Fear      0040000A
    .Status:End
}

#new:DefenseTable $DefenseTable_8022259C
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_802225B0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022265C
{
    00800000 01000000 FE2600FF $IdleAnimations_80222550 $DefenseTable_8022259C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $MediGuy
{
    % stats
    [Index]        22b
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_802225B0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022265C
    [Script]      $Script_Init_802226A8
    % move effectiveness
    [Escape]       60`b
    [Item]         70`b
    [AirLift]      90`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   12`b  31`b % dx dy
}

#new:Script $Script_Init_802226A8
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223A8C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022274C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222920 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000005
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_8022274C
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_80218310    ( FFFFFFF6 00000014 0000000A 00000014 )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_80218310    ( FFFFFFF6 00000014 0000000C 0000001F )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8022285C
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_80222920
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8022285C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8022285C
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400003
            SetConst  *Var[2]  0040000B
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_FlyingAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Thread
        SetF  *Var[0]  *Fixed[0.0]
        Loop  0000000F
            AddF  *Var[0]  *Fixed[2.0]
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
            Thread
                Wait  5`
                Set   *Var[0]  00000000
                Loop  0000003C
                    Call  $Function_802183DC    ( *Var[0] *Var[1] 0000000F 0000003C *Fixed[30.0] )
                    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var[1] )
                    Add   *Var[0]  00000001
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Add   *Var[2]  00000001
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            ExecWait  $Script_8022285C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000001
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset      ( 00000002 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[2.0] )
            Wait  20`
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8022285C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HealOneAlly
{
    Set   *Var[A]  *Var[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  GetOwnerID    ( *Var[0] )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Add   *Var[2]  00000032
    Call  PlayEffect    ( ~FX:Sparkles:Random *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Recover:LittleHeart *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Wait  10`
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( *Var[A] )
    Call  GetEnemyMaxHP ( *Var[A] *Var[4] )
    Mul   *Var[4]  0000003C
    Div   *Var[4]  00000064
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[A] 0000206D )
        Call  PlaySoundAtActor  ( *Var[A] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[A] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[A] *Var[4] .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802239AC
{
    Call  EnemyCreateTargetList ( 00000002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorHP        ( *Var[0] *Var[2] )
    Call  GetEnemyMaxHP     ( *Var[0] *Var[3] )
    If  *Var[2]  !=  *Var[3]
        Call  GetOwnerTarget    ( *Var[0] *Var[1] )
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80223A8C
{
    ExecWait  $Script_802239AC
    If  *Var[0]  ==  FFFFFFFF
        ExecWait  $Script_FlyingAttack
    Else
        Call  RandInt   ( 000003E8 *Var[A] )
        If  *Var[A]  <  00000258
            ExecWait  $Script_HealOneAlly
        Else
            ExecWait  $Script_FlyingAttack
        EndIf
    EndIf
    Return
    End
}

#new:DefenseTable $DefenseTable_80223B20
{
    .Element:Normal 00000004
    .Element:Fire   00000063
    .Element:Blast  00000063
    .Element:End
}

#new:DefenseTable $DefenseTable_80223B3C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80223B48
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80223BF4
{
    00800000 01000000 001800FF $IdleAnimations_80223C8C $DefenseTable_80223B20 00001010 00000000 000E0000 00000000
}

#new:Actor $SpikeTop
{
    % stats
    [Index]        2Cb
    [Level]        17`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000800
    [StatusTable] $StatusTable_80223B48
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80223BF4
    [Script]      $Script_Init_80223D1C
    % move effectiveness
    [Escape]       60`b
    [Item]         60`b
    [AirLift]      70`b
    [Hurricane]    65`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]   -8`b  16`b % dx dy
    [StatusIcon]    8`b  13`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80223C40
{
    .Status:Normal    004D0003
    .Status:Stone     004D0000
    .Status:Sleep     004D001B
    .Status:Poison    004D0003
    .Status:Stop      004D0000
    .Status:Static    004D0003
    .Status:Paralyze  004D0000
    .Status:Dizzy     004D001E
    .Status:Fear      004D001E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80223C8C
{
    .Status:Normal    004D0004
    .Status:Stone     004D0001
    .Status:Sleep     004D001C
    .Status:Poison    004D0004
    .Status:Stop      004D0001
    .Status:Static    004D0004
    .Status:Paralyze  004D0001
    .Status:Dizzy     004D001F
    .Status:Fear      004D001F
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80223CD8
{
    .Status:Normal    004D0005
    .Status:Stone     004D0002
    .Status:Sleep     004D001D
    .Status:Poison    004D0005
    .Status:Stop      004D0002
    .Status:Static    004D0005
    .Status:Dizzy     004D0020
    .Status:Fear      004D0020
    .Status:End
}

#new:Script $Script_Init_80223D1C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80223EEC )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
        Call  $Function_802184F0    ( FFFFFFF6 00000000 0000000A 00000000 )
        Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80225624 )
        Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224330 )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
    Else
        Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
        Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
        Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802260DC )
        Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224888 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C40 )
        Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    EndIf
    Call  HPBarToHome       ( .Actor:Self )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_80223EEC
{
    Return
    End
}

#new:Script $Script_80223EFC
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000001 00000014 )
    Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
    Call  $Function_802184F0    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802260DC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224888 )
    Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223B3C )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223CD8 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
    Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  GetIndexFromPos   ( .Actor:Self *Var[A] )
    Mod   *Var[A]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[A] )
    Call  GetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetHomePos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Set   *Var[D]  *Var[A]
    Set   *Var[E]  *Var[B]
    Set   *Var[F]  *Var[C]
    Sub   *Var[D]  *Var[0]
    Sub   *Var[E]  *Var[1]
    Sub   *Var[F]  *Var[2]
    Div   *Var[D]  00000002
    Div   *Var[E]  00000002
    Div   *Var[F]  00000002
    Add   *Var[0]  *Var[D]
    Add   *Var[1]  *Var[E]
    Add   *Var[2]  *Var[F]
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 004D0005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_80224330
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
            ExecWait  $Script_80223EFC
        Case  ==  .Event:FlipTrigger % D
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
            ExecWait  $Script_80223EFC
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0019
            SetConst  *Var[2]  004D001A
            ExecWait  DoBurnHit
            ExecWait  $Script_80223EFC
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0019
            SetConst  *Var[2]  004D001A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D001A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D000D
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D000D
            ExecWait  DoImmune
            Wait  2`
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00200000
                ExecWait  $Script_80223EFC
            EndIf
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0009
            SetConst  *Var[2]  004D0014
            ExecWait  DoScareAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802247EC
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[3] )
    If  *Var[3]  ==  00000002
        Set   *Var[1]  *Var[2]
    EndIf
    Return
    End
}

#new:IntTable $IntTable_8022483C
{
    00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
    00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
    00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80224888
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_802247EC
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0016
                SetConst  *Var[2]  004D0017
                ExecWait  DoBurnHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0018
                SetConst  *Var[2]  004D0018
                ExecWait  DoBurnHit
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0016
                SetConst  *Var[2]  004D0017
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0017
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0018
                SetConst  *Var[2]  004D0018
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0018
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_802247EC
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000001 00000014 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223B3C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223CD8 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 004D0013 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_8022483C
            Loop  00000013
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D000B
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 004D000E )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D000B
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[1]  00000009
            Else
                Add   *Var[1]  00000018
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_802247EC
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_802247EC
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_802247EC
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_802247EC
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0003
                ExecWait  DoRecover
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0008
                SetConst  *Var[2]  004D0013
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0008
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  SetActorDispOffset    ( .Actor:Self 00000007 00000000 00000000 )
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0013
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0015
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D000B
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80225624
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000018 )
    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
    Call  $Function_802184F0    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802260DC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224888 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C40 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorPos   ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 004D0009 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
        Wait  8`
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000005 )
        Call  SetBattleCamZoom  ( 000001AE )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  MoveBattleCamOver ( 0000000A )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000004 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetPartYaw    ( .Actor:Self 00000001 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[1]  00000018
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
            EndThread
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0008 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  *Var[4]
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
            EndThread
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
        EndCaseGroup
    EndSwitch
    Label  A
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802260DC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000002
        Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
        Sub   *Var[0]  00000001
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  UseCamPreset  ( 00000002 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0005
            SetConst  *Var[2]  004D0003
            ExecWait  8029BBB4
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000018 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223B20 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C40 )
            Call  BindIdle  ( .Actor:Self $Script_Idle_80223EEC )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 004D000B )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 004D000F )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
    Call  SetAnimation      ( .Actor:Self 00000001 004D000A )
    Wait  20`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFF6A 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  000000C8
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
            Wait  10`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
            Wait  8`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80226B00
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80226C18
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_802271C4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  00000020
    Exec  $Script_80226B00
    Set   *Var[0]  0000002B
    Exec  $Script_80226B00
    Set   *Var[0]  00000035
    Exec  $Script_80226C18
    Call  PlayEffect        ( ~FX:SunRays:RightCorner 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80227298
{
    Return
    End
}

#new:Stage $Stage_802272A8
{
    $ASCII_80228CD8  % jan_tex
    $ASCII_80228CC8  % jan_bt00_shape
    $ASCII_80228CB8  % jan_bt00_hit
    $Script_BeforeBattle_802271C4
    $Script_AfterBattle_80227298
    $ASCII_80228CB0  % yos_bg
    00000000
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_802272D0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_802273E8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80227994
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt01:g18 00000000 )
    Thread
        Wait  5`
        Set   *Var[0]  00000009
        Exec  $Script_802273E8
        Wait  5`
        Set   *Var[0]  0000000A
        Exec  $Script_802273E8
        Wait  5`
        Set   *Var[0]  0000000B
        Exec  $Script_802273E8
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80227A6C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227A7C
{
    ~Model:jan_bt01:o85
    00000000
}

#new:Stage $Stage_80227A84
{
    $ASCII_80228D08  % jan_tex
    $ASCII_80228CF8  % jan_bt01_shape
    $ASCII_80228CE8  % jan_bt01_hit
    $Script_BeforeBattle_80227994
    $Script_AfterBattle_80227A6C
    $ASCII_80228CE0  % yos_bg
    $ForegroundModelList_80227A7C
    00000000
    00000000
    00000000
}

PADDING: 80227AAC to 80227AB0 (005833CC to 005833D0)
00000000

% Origin: HEURISTIC
#new:Script $Script_80227AB0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80227BC8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80228174
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt01:g17 00000000 )
    Thread
        Wait  5`
        Set   *Var[0]  00000009
        Exec  $Script_80227BC8
        Wait  5`
        Set   *Var[0]  0000000A
        Exec  $Script_80227BC8
        Wait  5`
        Set   *Var[0]  0000000B
        Exec  $Script_80227BC8
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8022824C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022825C
{
    ~Model:jan_bt01:o85
    00000000
}

#new:Stage $Stage_80228264
{
    $ASCII_80228D38  % jan_tex
    $ASCII_80228D28  % jan_bt01_shape
    $ASCII_80228D18  % jan_bt01_hit
    $Script_BeforeBattle_80228174
    $Script_AfterBattle_8022824C
    $ASCII_80228D10  % yos_bg
    $ForegroundModelList_8022825C
    00000000
    00000000
    00000000
}

PADDING: 8022828C to 80228290 (00583BAC to 00583BB0)
00000000

#new:Script $Script_BeforeBattle_80228290
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_802282CC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802282DC
{
    ~Model:jan_bt02:o64
    ~Model:jan_bt02:o65
    ~Model:jan_bt02:o66
    00000000
}

#new:Stage $Stage_802282EC
{
    $ASCII_80228D68  % jan_tex
    $ASCII_80228D58  % jan_bt02_shape
    $ASCII_80228D48  % jan_bt02_hit
    $Script_BeforeBattle_80228290
    $Script_AfterBattle_802282CC
    $ASCII_80228D40  % yos_bg
    $ForegroundModelList_802282DC
    00000000
    00000000
    00000000
}

PADDING: 80228314 to 80228320 (00583C34 to 00583C40)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80228320
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt03:g2 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80228370
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228380
{
    ~Model:jan_bt03:o91
    ~Model:jan_bt03:o90
    ~Model:jan_bt03:o86
    00000000
}

#new:Stage $Stage_80228390
{
    $ASCII_80228D98  % jan_tex
    $ASCII_80228D88  % jan_bt03_shape
    $ASCII_80228D78  % jan_bt03_hit
    $Script_BeforeBattle_80228320
    $Script_AfterBattle_80228370
    $ASCII_80228D70  % jan_bg
    $ForegroundModelList_80228380
    00000000
    00000000
    00000000
}

PADDING: 802283B8 to 802283C0 (00583CD8 to 00583CE0)
00000000 00000000

#new:Script $Script_BeforeBattle_802283C0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt03:g39 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80228410
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228420
{
    ~Model:jan_bt03:o91
    ~Model:jan_bt03:o90
    ~Model:jan_bt03:o86
    00000000
}

#new:Stage $Stage_80228430
{
    $ASCII_80228DC8  % jan_tex
    $ASCII_80228DB8  % jan_bt03_shape
    $ASCII_80228DA8  % jan_bt03_hit
    $Script_BeforeBattle_802283C0
    $Script_AfterBattle_80228410
    $ASCII_80228DA0  % jan_bg
    $ForegroundModelList_80228420
    00000000
    00000000
    00000000
}

PADDING: 80228458 to 80228460 (00583D78 to 00583D80)
00000000 00000000

#new:Script $Script_BeforeBattle_80228460
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt04:g111 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_802284B0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802284C0
{
    ~Model:jan_bt04:o31
    00000000
}

#new:Stage $Stage_802284C8
{
    $ASCII_80228DF8  % jan_tex
    $ASCII_80228DE8  % jan_bt04_shape
    $ASCII_80228DD8  % jan_bt04_hit
    $Script_BeforeBattle_80228460
    $Script_AfterBattle_802284B0
    $ASCII_80228DD0  % jan_bg
    $ForegroundModelList_802284C0
    00000000
    00000000
    00000000
}

#new:Script $Script_BeforeBattle_802284F0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt04:g2 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80228540
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228550
{
    ~Model:jan_bt04:o31
    00000000
}

#new:Stage $Stage_80228558
{
    $ASCII_80228E28  % jan_tex
    $ASCII_80228E18  % jan_bt04_shape
    $ASCII_80228E08  % jan_bt04_hit
    $Script_BeforeBattle_802284F0
    $Script_AfterBattle_80228540
    $ASCII_80228E00  % jan_bg
    $ForegroundModelList_80228550
    00000000
    00000000
    00000000
}

#new:Formation $Formation_00
{
    $SpearGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $SpearGuy 00000002 00000009 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpearGuy 00000001 00000009 00000001 00000000 00000000 00000000
    $SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $SpearGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000
    $JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $MediGuy 00000005 00000009 00000000 00000000 00000000 00000000
    $SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $HurtPlant 00000001 0000000A 00000000 00000000 00000000 00000000
    $HurtPlant 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $HurtPlant 00000000 0000000A 00000000 00000000 00000000 00000000
    $HurtPlant 00000001 00000009 00000000 00000000 00000000 00000000
    $HurtPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $JungleFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
    $JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpearGuy 00000001 00000009 00000001 00000000 00000000 00000000
    $JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $MBush 00000001 0000000A 00000000 00000000 00000000 00000000
    $MBush 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $MBush 00000000 0000000A 00000000 00000000 00000000 00000000
    $MBush 00000001 00000009 00000000 00000000 00000000 00000000
    $MBush 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $MBush 00000000 0000000A 00000000 00000000 00000000 00000000
    $MBush 00000001 00000009 00000000 00000000 00000000 00000000
    $MBush 00000002 00000008 00000000 00000000 00000000 00000000
    $MBush 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80228FC8 00000002 $Formation_00 $Stage_80227A84 00000000
    $SJIS_80228FB8 00000003 $Formation_01 $Stage_80227A84 00000000
    $SJIS_80228FA0 00000002 $Formation_02 $Stage_80227A84 00000000
    $SJIS_80228F84 00000004 $Formation_03 $Stage_80227A84 00000000
    $SJIS_80228F68 00000003 $Formation_04 $Stage_80227A84 00000000 % unused
    $SJIS_80228F40 00000003 $Formation_05 $Stage_80227A84 00000000 % unused
    $SJIS_80228F10 00000004 $Formation_06 $Stage_80227A84 00000000
    $SJIS_80228EE4 00000003 $Formation_07 $Stage_80227A84 00000000 % unused
    $SJIS_80228ECC 00000002 $Formation_08 $Stage_80227A84 00000000
    $SJIS_80228EB4 00000003 $Formation_09 $Stage_80227A84 00000000 % unused
    $SJIS_80228EA4 00000002 $Formation_0A $Stage_80227A84 00000000
    $SJIS_80228E94 00000003 $Formation_0B $Stage_80227A84 00000000
    $SJIS_80228E84 00000004 $Formation_0C $Stage_80227A84 00000000 % unused
    $SJIS_80228E60 00000003 $Formation_0D $Stage_80227A84 00000000
    $SJIS_80228E50 00000002 $Formation_0E $Stage_80227A84 00000000
    $SJIS_80228E40 00000003 $Formation_0F $Stage_80227A84 00000000 % unused
    $SJIS_80228E30 00000004 $Formation_10 $Stage_80227A84 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80229010 $Stage_802272A8
    $ASCII_80229008 $Stage_80227A84
    $ASCII_80229000 $Stage_80228264
    $ASCII_80228FF8 $Stage_802282EC
    $ASCII_80228FF0 $Stage_80228390
    $ASCII_80228FE8 $Stage_80228430
    $ASCII_80228FE0 $Stage_802284C8
    $ASCII_80228FD8 $Stage_80228558
    00000000 00000000
}

PADDING: 80228CA8 to 80228CB0 (005845C8 to 005845D0)
00000000 00000000

#new:ASCII $ASCII_80228CB0
{
    "yos_bg"
}

#new:ASCII $ASCII_80228CB8
{
    "jan_bt00_hit"
}

#new:ASCII $ASCII_80228CC8
{
    "jan_bt00_shape"
}

#new:ASCII $ASCII_80228CD8
{
    "jan_tex"
}

#new:ASCII $ASCII_80228CE0
{
    "yos_bg"
}

#new:ASCII $ASCII_80228CE8
{
    "jan_bt01_hit"
}

#new:ASCII $ASCII_80228CF8
{
    "jan_bt01_shape"
}

#new:ASCII $ASCII_80228D08
{
    "jan_tex"
}

#new:ASCII $ASCII_80228D10
{
    "yos_bg"
}

#new:ASCII $ASCII_80228D18
{
    "jan_bt01_hit"
}

#new:ASCII $ASCII_80228D28
{
    "jan_bt01_shape"
}

#new:ASCII $ASCII_80228D38
{
    "jan_tex"
}

#new:ASCII $ASCII_80228D40
{
    "yos_bg"
}

#new:ASCII $ASCII_80228D48
{
    "jan_bt02_hit"
}

#new:ASCII $ASCII_80228D58
{
    "jan_bt02_shape"
}

#new:ASCII $ASCII_80228D68
{
    "jan_tex"
}

#new:ASCII $ASCII_80228D70
{
    "jan_bg"
}

#new:ASCII $ASCII_80228D78
{
    "jan_bt03_hit"
}

#new:ASCII $ASCII_80228D88
{
    "jan_bt03_shape"
}

#new:ASCII $ASCII_80228D98
{
    "jan_tex"
}

#new:ASCII $ASCII_80228DA0
{
    "jan_bg"
}

#new:ASCII $ASCII_80228DA8
{
    "jan_bt03_hit"
}

#new:ASCII $ASCII_80228DB8
{
    "jan_bt03_shape"
}

#new:ASCII $ASCII_80228DC8
{
    "jan_tex"
}

#new:ASCII $ASCII_80228DD0
{
    "jan_bg"
}

#new:ASCII $ASCII_80228DD8
{
    "jan_bt04_hit"
}

#new:ASCII $ASCII_80228DE8
{
    "jan_bt04_shape"
}

#new:ASCII $ASCII_80228DF8
{
    "jan_tex"
}

#new:ASCII $ASCII_80228E00
{
    "jan_bg"
}

#new:ASCII $ASCII_80228E08
{
    "jan_bt04_hit"
}

#new:ASCII $ASCII_80228E18
{
    "jan_bt04_shape"
}

#new:ASCII $ASCII_80228E28
{
    "jan_tex"
}

#new:SJIS $SJIS_80228E30
{
    ぎたいそうx4 % gitaisoux4
}

#new:SJIS $SJIS_80228E40
{
    ぎたいそうx3 % gitaisoux3
}

#new:SJIS $SJIS_80228E50
{
    ぎたいそうx2 % gitaisoux2
}

#new:SJIS $SJIS_80228E60
{
    トロピカル,ヤリダンサー,トロピカル % toropikaru,yaridansa-,toropikaru
}

#new:SJIS $SJIS_80228E84
{
    トロピカルx4 % toropikarux4
}

#new:SJIS $SJIS_80228E94
{
    トロピカルx3 % toropikarux3
}

#new:SJIS $SJIS_80228EA4
{
    トロピカルx2 % toropikarux2
}

#new:SJIS $SJIS_80228EB4
{
    ピロリンそうだましx3 % pirorinsoudamashix3
}

#new:SJIS $SJIS_80228ECC
{
    ピロリンそうだましx2 % pirorinsoudamashix2
}

#new:SJIS $SJIS_80228EE4
{
    ヤリダンサー,かいふくヘイホー,トゲメット % yaridansa-,kaifukuheiho-,togemetto
}

#new:SJIS $SJIS_80228F10
{
    ヤリダンサー,トロピカル,ヤリダンサー,トロピカル % yaridansa-,toropikaru,yaridansa-,toropikaru
}

#new:SJIS $SJIS_80228F40
{
    ヤリダンサー,トロピカル,ヤリダンサー % yaridansa-,toropikaru,yaridansa-
}

#new:SJIS $SJIS_80228F68
{
    ヤリダンサー,トロピカルx２ % yaridansa-,toropikarux2
}

#new:SJIS $SJIS_80228F84
{
    ヤリダンサー,トロピカルx３ % yaridansa-,toropikarux3
}

#new:SJIS $SJIS_80228FA0
{
    ヤリダンサー,トロピカル % yaridansa-,toropikaru
}

#new:SJIS $SJIS_80228FB8
{
    ヤリダンサーx3 % yaridansa-x3
}

#new:SJIS $SJIS_80228FC8
{
    ヤリダンサーx2 % yaridansa-x2
}

#new:ASCII $ASCII_80228FD8
{
    "jan_04b"
}

#new:ASCII $ASCII_80228FE0
{
    "jan_04"
}

#new:ASCII $ASCII_80228FE8
{
    "jan_03b"
}

#new:ASCII $ASCII_80228FF0
{
    "jan_03"
}

#new:ASCII $ASCII_80228FF8
{
    "jan_02"
}

#new:ASCII $ASCII_80229000
{
    "jan_01b"
}

#new:ASCII $ASCII_80229008
{
    "jan_01"
}

#new:ASCII $ASCII_80229010
{
    "jan_00"
}

PADDING: 80229018 to 80229020 (00584938 to 00584940)
00000000 00000000

