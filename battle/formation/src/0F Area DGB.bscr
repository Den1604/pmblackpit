% Script File: 0F Area DGB.bscr
% Decoded from: 50F020 to 5125D0 (0F Area DGB)

#new:IdleAnimations $IdleAnimations_80218000
{
    .Status:Normal    003A0001
    .Status:Stone     003A0000
    .Status:Sleep     003A0003
    .Status:Poison    003A0001
    .Status:Stop      003A0000
    .Status:Static    003A0001
    .Status:Paralyze  003A0000
    .Status:Dizzy     003A0005
    .Status:Fear      003A0005
    .Status:End
}

#new:DefenseTable $DefenseTable_8021804C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80218058
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80218104
{
    00800000 01000000 F42000FF $IdleAnimations_80218000 $DefenseTable_8021804C 00000000 00000000 08FD0000 00000000
}

#new:Actor $Clubba
{
    % stats
    [Index]        1Eb
    [Level]        13`b
    [MaxHP]         8`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80218058
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80218104
    [Script]      $Script_Init_80218150
    % move effectiveness
    [Escape]       60`b
    [Item]         70`b
    [AirLift]      60`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         42`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_80218150
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802186BC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021819C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802181AC )
    Return
    End
}

#new:Script $Script_Idle_8021819C
{
    Return
    End
}

#new:Script $Script_HandleEvent_802181AC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0006
            SetConst  *Var[2]  003A0007
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0006
            SetConst  *Var[2]  003A0007
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0002
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0002
            SetConst  *Var[2]  003A0004
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0004
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802186BC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B
        Set   *Var[1]  00000000
        Sub   *Var[2]  00000006
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Wait  15`
    Else
        Call  SetAnimation      ( .Actor:Self 00000001 003A0002 )
        Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000
            Call  AddGoalPos    ( .Actor:Self 0000001B 00000000 FFFFFFFA )
        Else
            Call  AddGoalPos    ( .Actor:Self 0000000A 00000000 FFFFFFFA )
        EndIf
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 003A0001 )
        Wait  10`
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
            Call  SetAnimation      ( .Actor:Self 00000001 003A0008 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                Wait  20`
            EndIf
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0002
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 003A0009 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A000A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Thread
                Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
            EndThread
            Call  UseCamPreset  ( 00000002 )
            Wait  19`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0002
            ExecWait  DoReturnHome
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80218C10
{
    .Status:Normal    006B0002
    .Status:Stone     006B0000
    .Status:Sleep     006B0000
    .Status:Poison    006B0002
    .Status:Stop      006B0000
    .Status:Static    006B0000
    .Status:Paralyze  006B0000
    .Status:Paralyze  006B0000
    .Status:Dizzy     006B0000
    .Status:Dizzy     006B0000
    .Status:Fear      006B0000
    .Status:End
}

#new:DefenseTable $DefenseTable_80218C6C
{
    .Element:Normal 00000063
    .Element:End
}

#new:StatusTable $StatusTable_80218C78
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80218D24
{
    00802000 01000000 F14B00FF $IdleAnimations_80218C10 $DefenseTable_80218C6C 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbaBlubba
{
    % stats
    [Index]        A4b
    [Level]         0`b
    [MaxHP]        10`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80218C78
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80218D24
    [Script]      $Script_Init_80218D70
    % move effectiveness
    [Escape]       15`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]        100`b 100`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -33`b  78`b % dx dy
    [StatusIcon]   10`b  75`b % dx dy
}

#new:Script $Script_Init_80218D70
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80219750 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80219204 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219338 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80218FB0 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    If  *StoryProgress  >=  FFFFFFE2
        Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Else
        Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
    EndIf
    Exec  $Script_80218E60 *Var[0]
    Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Return
    End
}

#new:Script $Script_80218E60
{
    Label  0
    Wait  1`
    Call  ActorExists   ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  .False
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Goto  0
    EndIf
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  006B0006
        Goto  1
    EndIf
    If  *Var[0]  ==  006B0007
        Goto  1
    EndIf
    Goto  0
    Label  1
    Call  StartRumble   ( 00000001 )
    Call  ShakeCam      ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_NextTurn_80218FB0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  802535B4  ( 00000000 )
                Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
                Call  UseCamPreset      ( 00000013 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000004B
                Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
                Call  SetBattleCamZoom  ( 0000017C )
                Call  SetBattleCamOffsetZ   ( 00000000 )
                Call  MoveBattleCamOver ( 00000014 )
                Call  ActorSpeak        ( 000E0102 .Actor:Self 00000001 006B0009 006B0002 ) % Bahh ha ha ha ha! Caught you, thief! It's not nice ...
                Thread
                    Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
                    Wait  4`
                    Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
                    Wait  15`
                    Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
                EndThread
                Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 00000014 )
                Wait  20`
                Call  802535B4  ( 00000001 )
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_80219204
{
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80219238
{
    Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_802192E0
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
    If  *Var[1]  ==  00000000
        Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_80219338
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            ExecWait  $Script_802192E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0002
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BeginFirstStrike % 38
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:BurnDeath % 24
            ExecWait  $Script_802192E0
            Wait  20`
            Wait  15`
            If  *Var[0]  ==  00000024
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  006B0014
                ExecWait  DoDeath
                Return
            EndIf
        EndCaseGroup
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_802192E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoJumpBack
            ExecWait  $Script_80219238
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            ExecWait  $Script_802192E0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0002
            ExecWait  DoImmune
        EndCaseGroup
        CaseOR  ==  .Event:ShockDeath % 26
        CaseOR  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoDeath
            Return
        EndCaseGroup
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpikeContact % 2A
        Case  ==  .Event:BurnContact % 2C
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_80219238
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0002
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80219750
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    If  *Var[0]  ==  .HitResult:Miss % 6
        Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
        Call  SetGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 006B0001 )
        Wait  30`
        Set   *Var[0]  00000000
        Loop  0000000C
            Add   *Var[0]  0000000F
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Wait  10`
        Set   *Var[0]  000000B4
        Loop  0000000C
            Sub   *Var[0]  0000000F
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000050
        Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 0000001E 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
        Wait  40`
        Call  SetAnimation  ( .Actor:Self 00000001 006B0001 )
        Set   *Var[0]  00000000
        Loop  0000000F
            Add   *Var[0]  0000000C
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Call  SetAnimation  ( .Actor:Self 00000001 006B0006 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[0]  000000DC
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        Kill  *Var[0]
        Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
        Call  SetBattleFlagBits ( 00060000 .True )
        Call  8026F60C      ( 0000000A )
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  802535B4  ( 00000000 )
        Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
        Call  UseCamPreset      ( 00000013 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000004B
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  SetBattleCamZoom  ( 0000017C )
        Call  SetBattleCamOffsetZ   ( 00000000 )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  ActorSpeak        ( 000E0103 .Actor:Self 00000001 006B0009 006B0002 ) % Bah ha ha ha ha! That wimpy little attack doesn't  ...
        Thread
            Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
            Wait  4`
            Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
        EndThread
        Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
        Call  SetAnimation      ( .Actor:Self 00000001 006B0001 )
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  802535B4  ( 00000001 )
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  0000003C
        ExecWait  $Script_80219D88
    Else
        ExecWait  $Script_8021A36C
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80219D88
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 00000096 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 006B0007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    If  *Var[5]  !&  00080000
        Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
    Wait  3`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Thread
            Call  StartRumble   ( 00000001 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[15.0] )
        EndThread
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  SetAnimation      ( .Actor:Self 00000001 006B0002 )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            ExecWait  $Script_80219238
            Return
        EndCaseGroup
        Default
    EndSwitch
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  !&  00080000
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    If  *Var[5]  !&  00080000
        Call  80269EAC  ( 00000017 )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Wait  30`
            Call  SetAnimation      ( .Actor:Self 00000001 006B0002 )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  YieldTurn ( )
            ExecWait  $Script_80219238
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_8021A36C
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  SetBattleCamZoom  ( 000000B4 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000046 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B000F )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0010 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000003E7 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 006B0011 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000017 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
            Call  SetAnimation      ( .Actor:Self 00000001 006B0012 )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            EndThread
            Thread
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndThread
            Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  StartRumble   ( 00000001 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Wait  8`
            Call  SetAnimation      ( .Actor:Self 00000001 006B0013 )
            Wait  4`
            ExecWait  $Script_80219238
            Return
        EndCaseGroup
        Default
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 006B0011 )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
    EndSwitch
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  !&  00080000
        Call  80269EAC  ( 00000018 )
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000006 00000020 )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  GetStatusFlags    ( .Actor:Self *Var[5] )
            If  *Var[5]  &  00080000
                Goto  1
            EndIf
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000 % 80000000
                Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                If  *Var[0]  !&  00100000 % 100000
                    Call  LandJump  ( .Actor:Self )
                Else
                    Goto  1
                EndIf
            Else
                Goto  1
            EndIf
            Label  0
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:ShockWave:White *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            EndThread
            Thread
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndThread
            Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  StartRumble   ( 00000001 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            Goto  2
            Label  1
            Call  GetStatusFlags        ( .Actor:Self *Var[5] )
            If  *Var[5]  !&  00080000
                Wait  3`
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Thread
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
            EndThread
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            If  *Var[5]  !&  00080000
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
                Wait  8`
            EndIf
            Label  2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  YieldTurn ( )
            ExecWait  $Script_80219238
        EndCaseGroup
    EndSwitch
    Return
    End
}

PADDING: 8021B04C to 8021B050 (0051206C to 00512070)
00000000

#new:Script $Script_BeforeBattle_8021B050
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8021B070
{
    Return
    End
}

#new:Stage $Stage_8021B080
{
    $ASCII_8021B470  % dgb_tex
    $ASCII_8021B460  % dgb_bt01_shape
    $ASCII_8021B450  % dgb_bt01_hit
    $Script_BeforeBattle_8021B050
    $Script_AfterBattle_8021B070
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021B0A8 to 8021B0B0 (005120C8 to 005120D0)
00000000 00000000

#new:Script $Script_BeforeBattle_8021B0B0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8021B0D0
{
    Return
    End
}

#new:Stage $Stage_8021B0E0
{
    $ASCII_8021B498  % dgb_tex
    $ASCII_8021B488  % dgb_bt02_shape
    $ASCII_8021B478  % dgb_bt02_hit
    $Script_BeforeBattle_8021B0B0
    $Script_AfterBattle_8021B0D0
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021B108 to 8021B110 (00512128 to 00512130)
00000000 00000000

#new:Script $Script_BeforeBattle_8021B110
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8021B130
{
    Return
    End
}

#new:Stage $Stage_8021B140
{
    $ASCII_8021B4C0  % dgb_tex
    $ASCII_8021B4B0  % dgb_bt03_shape
    $ASCII_8021B4A0  % dgb_bt03_hit
    $Script_BeforeBattle_8021B110
    $Script_AfterBattle_8021B130
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021B168 to 8021B170 (00512188 to 00512190)
00000000 00000000

#new:Script $Script_BeforeBattle_8021B170
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8021B190
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021B1A0
{
    ~Model:dgb_bt04:kumo1
    00000000
}

#new:Stage $Stage_8021B1A8
{
    $ASCII_8021B4E8  % dgb_tex
    $ASCII_8021B4D8  % dgb_bt04_shape
    $ASCII_8021B4C8  % dgb_bt04_hit
    $Script_BeforeBattle_8021B170
    $Script_AfterBattle_8021B190
    00000000
    $ForegroundModelList_8021B1A0
    00000000
    00000000
    00000000
}

#new:Script $Script_BeforeBattle_8021B1D0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8021B1F0
{
    Return
    End
}

#new:Stage $Stage_8021B200
{
    $ASCII_8021B510  % dgb_tex
    $ASCII_8021B500  % dgb_bt05_shape
    $ASCII_8021B4F0  % dgb_bt05_hit
    $Script_BeforeBattle_8021B1D0
    $Script_AfterBattle_8021B1F0
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021B228 to 8021B230 (00512248 to 00512250)
00000000 00000000

#new:Formation $Formation_00
{
    $Clubba 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Clubba 00000001 0000000A 00000000 00000000 00000000 00000000
    $Clubba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $Clubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $Clubba 00000001 00000009 00000000 00000000 00000000 00000000
    $Clubba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $Clubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $Clubba 00000001 00000009 00000000 00000000 00000000 00000000
    $Clubba 00000002 00000008 00000000 00000000 00000000 00000000
    $Clubba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8021B348
{
    75` 0` 10`
}

#new:Formation $Formation_04
{
    $TubbaBlubba $Vector3D_8021B348 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $TubbaBlubba $Vector3D_8021B348 0000000A 00000001 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8021B574 00000001 $Formation_00 $Stage_8021B080 00000000
    $SJIS_8021B564 00000002 $Formation_01 $Stage_8021B080 00000000
    $SJIS_8021B554 00000003 $Formation_02 $Stage_8021B080 00000000
    $SJIS_8021B544 00000004 $Formation_03 $Stage_8021B080 00000000
    $SJIS_8021B534 00000001 $Formation_04 $Stage_8021B080 00000000
    $SJIS_8021B518 00000001 $Formation_05 $Stage_8021B080 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_8021B5A0 $Stage_8021B080
    $ASCII_8021B598 $Stage_8021B0E0
    $ASCII_8021B590 $Stage_8021B140
    $ASCII_8021B588 $Stage_8021B1A8
    $ASCII_8021B580 $Stage_8021B200
    00000000 00000000
}

PADDING: 8021B448 to 8021B450 (00512468 to 00512470)
00000000 00000000

#new:ASCII $ASCII_8021B450
{
    "dgb_bt01_hit"
}

#new:ASCII $ASCII_8021B460
{
    "dgb_bt01_shape"
}

#new:ASCII $ASCII_8021B470
{
    "dgb_tex"
}

#new:ASCII $ASCII_8021B478
{
    "dgb_bt02_hit"
}

#new:ASCII $ASCII_8021B488
{
    "dgb_bt02_shape"
}

#new:ASCII $ASCII_8021B498
{
    "dgb_tex"
}

#new:ASCII $ASCII_8021B4A0
{
    "dgb_bt03_hit"
}

#new:ASCII $ASCII_8021B4B0
{
    "dgb_bt03_shape"
}

#new:ASCII $ASCII_8021B4C0
{
    "dgb_tex"
}

#new:ASCII $ASCII_8021B4C8
{
    "dgb_bt04_hit"
}

#new:ASCII $ASCII_8021B4D8
{
    "dgb_bt04_shape"
}

#new:ASCII $ASCII_8021B4E8
{
    "dgb_tex"
}

#new:ASCII $ASCII_8021B4F0
{
    "dgb_bt05_hit"
}

#new:ASCII $ASCII_8021B500
{
    "dgb_bt05_shape"
}

#new:ASCII $ASCII_8021B510
{
    "dgb_tex"
}

#new:SJIS $SJIS_8021B518
{
    むてきドガボンせりふなし % mutekidogabonserifunashi
}

#new:SJIS $SJIS_8021B534
{
    むてきドガボン % mutekidogabon
}

#new:SJIS $SJIS_8021B544
{
    ガボンへいx４ % gabonheix4
}

#new:SJIS $SJIS_8021B554
{
    ガボンへいx３ % gabonheix3
}

#new:SJIS $SJIS_8021B564
{
    ガボンへいx２ % gabonheix2
}

#new:SJIS $SJIS_8021B574
{
    ガボンへい % gabonhei
}

#new:ASCII $ASCII_8021B580
{
    "dgb_05"
}

#new:ASCII $ASCII_8021B588
{
    "dgb_04"
}

#new:ASCII $ASCII_8021B590
{
    "dgb_03"
}

#new:ASCII $ASCII_8021B598
{
    "dgb_02"
}

#new:ASCII $ASCII_8021B5A0
{
    "dgb_01"
}

PADDING: 8021B5A8 to 8021B5B0 (005125C8 to 005125D0)
00000000 00000000

