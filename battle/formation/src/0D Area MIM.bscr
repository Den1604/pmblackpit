% Script File: 0D Area MIM.bscr
% Decoded from: 4F7BE0 to 4FEA50 (0D Area MIM)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802180B4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218168 to 80218170 (004F7D48 to 004F7D50)
00000000 00000000

#new:Function $Function_80218170
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021823C
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S4, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S2, V0
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:cos_deg
	MOV.S     F12, F20
	MTC1      S2, F22
	NOP
	CVT.S.W   F22, F22
	MUL.S     F0, F22, F0
	NOP
	MOV.S     F12, F20
	MTC1      S3, F20
	NOP
	CVT.S.W   F20, F20
	ADD.S     F20, F20, F0
	JAL       ~Func:sin_deg
	ADDIU     S0, S0, 4
	MUL.S     F22, F22, F0
	NOP
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	MFC1      A2, F20
	MTC1      S4, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:set_float_variable
	SUB.S     F20, F20, F22
	LW        A1, 0 (S0)
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A0, S1
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

PADDING: 80218358 to 80218360 (004F7F38 to 004F7F40)
00000000 00000000

#new:Function $Function_80218360
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:enable_world_fog
	NOP
	ADDIU     A0, R0, 3B6
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	ADDIU     A0, R0, 10
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	LIA       V0, 800B1D80
	ADDIU     V1, R0, 14
	SH        V1, 584 (V0)
	SH        V1, 586 (V0)
	ADDIU     V1, R0, 1C
	SH        V1, 588 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802183BC to 802183C0 (004F7F9C to 004F7FA0)
00000000

#new:DefenseTable $DefenseTable_802183C0
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802183CC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison     90`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     70`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80218478
{
    00800000 01000000 001400FF $IdleAnimations_802184C4 $DefenseTable_802183C0 00000000 00000000 00F60000 00000000
}

#new:Actor $ForestFuzzy
{
    % stats
    [Index]        1Ab
    [Level]        11`b
    [MaxHP]         6`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802183CC
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80218478
    [Script]      $Script_Init_80218510
    % move effectiveness
    [Escape]       40`b
    [Item]         85`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         33`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802184C4
{
    .Status:Normal    002B0101
    .Status:Stone     002B0100
    .Status:Sleep     002B010E
    .Status:Poison    002B0101
    .Status:Stop      002B0100
    .Status:Static    002B0101
    .Status:Paralyze  002B0100
    .Status:Dizzy     002B010F
    .Status:Fear      002B010F
    .Status:End
}

#new:Script $Script_Init_80218510
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A61C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80218574 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218584 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80218574
{
    Return
    End
}

#new:Script $Script_HandleEvent_80218584
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  .Event:Death % 20
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0113
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0108
            EndIf
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0110
            SetConst  *Var[2]  002B0112
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0110
            SetConst  *Var[2]  002B0112
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0112
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0108
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0108
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0108
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0113
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0113
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0103
            ExecWait  8029C0A4
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0113
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0113
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0113
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0113
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0108
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0108
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0103
            SetConst  *Var[2]  002B0109
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0103
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0103
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0101
            ExecWait  DoImmune
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80218C48
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000014A )
    Call  SetBattleCamOffsetZ   ( 0000001E )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  20`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  UseCamPreset      ( 00000001 )
    Thread
        Wait  30`
        Call  PlaySoundAtActor  ( .Actor:Self 0000206E )
        Wait  30`
        Loop  00000004
            Call  PlaySoundAtActor  ( .Actor:Self 0000206F )
            Wait  11`
        EndLoop
        Call  PlaySoundAtActor  ( .Actor:Self 00002070 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 002B010D )
    Wait  130`
    Call  SetAnimation  ( .Actor:Self 00000001 002B0102 )
    Call  SummonEnemy   ( $SpecialFormation_8021A800 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Call  SetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  SetGoalToIndex    ( *Var[0] *Var[A] )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 002B0102 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
        Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  JumpToGoal    ( .Actor:Self 0000000E .False .True .False )
    EndThread
    Wait  1`
    Call  SetAnimation  ( *Var[0] 00000001 002B0102 )
    Call  SetActorJumpGravity   ( *Var[0] *Fixed[1.4] )
    Call  JumpToGoal    ( *Var[0] 0000000E .False .True .False )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  ForceHomePos  ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  HPBarToHome   ( *Var[0] )
    Call  SetAnimation  ( *Var[0] 00000001 002B0101 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetActorVar   ( *Var[0] 00000000 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( *Var[0] 00000000 00000002 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80219054
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Goto  64
    EndIf
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0103 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C
    Call  SetAnimation      ( .Actor:Self 00000001 002B0101 )
    Label  64
    Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0104 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Set   *Var[1]  00000000
            Sub   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0105 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000B .False .True .False )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0109 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  4`
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0103 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000
                Set   *Flag[00]  .False
            Else
                Set   *Flag[00]  .True
            EndIf
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0105 )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    If  *Flag[00]  ==  .True
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Wait  10`
    Call  UseIdleAnimation  ( .Actor:Player .False )
    Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0107 )
    Wait  21`
    Call  SetAnimation  ( .Actor:Self 00000001 002B0100 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
    Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
    Wait  2`
    Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
    Wait  10`
    Wait  2`
    Call  UseIdleAnimation  ( .Actor:Player .True )
    Call  EnemyDamageTarget ( .Actor:Self *Var[A] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0101 )
    Call  UseCamPreset  ( 00000002 )
    Call  GetLastDamage ( .Actor:Player *Var[3] )
    If  *Var[3]  !=  00000000
        Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
        Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Call  $Function_80218000    ( *Var[0] *Var[1] *Var[2] *Var[3] )
        Thread
            Wait  15`
            Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
            Call  $Function_802180B4    ( *Var[0] *Var[1] *Var[2] *Var[3] )
        EndThread
        Add   *Var[0]  00000014
        Add   *Var[1]  00000014
        Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetActorHP    ( .Actor:Self *Var[0] )
        Add   *Var[0]  *Var[3]
        Call  SetEnemyHP    ( .Actor:Self *Var[0] )
    EndIf
    Thread
        Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
        Wait  2`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
        Wait  2`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
    EndThread
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
    Wait  1`
    Thread
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
        Wait  1`
        Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
        Wait  1`
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    EndThread
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Wait  5`
    Call  YieldTurn ( )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0103 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C
    Call  SetAnimation  ( .Actor:Self 00000001 002B0101 )
    Call  EnableIdleScript      ( .Actor:Self 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A0D4
{
    Set   *Flag[01]  .False
    Set   *Flag[02]  .False
    Set   *Flag[03]  .False
    Set   *Flag[04]  .False
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Set   *Var[A]  FFFFFFFF
    Set   *Var[B]  FFFFFFFF
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Actor:Player % 0
            If  *Flag[02]  ==  .False
                Set   *Var[A]  00000001
            EndIf
        Case  ==  00000001 % 1
            If  *Flag[01]  ==  .False
                Set   *Var[A]  00000000
            EndIf
            If  *Flag[03]  ==  .False
                If  *Var[A]  ==  FFFFFFFF
                    Set   *Var[A]  00000002
                Else
                    Set   *Var[B]  00000002
                EndIf
            EndIf
        Case  ==  00000002 % 2
            If  *Flag[02]  ==  .False
                Set   *Var[A]  00000001
            EndIf
            If  *Flag[04]  ==  .False
                If  *Var[A]  ==  FFFFFFFF
                    Set   *Var[A]  00000003
                Else
                    Set   *Var[B]  00000003
                EndIf
            EndIf
        Case  ==  00000003 % 3
            If  *Flag[03]  ==  .False
                Set   *Var[A]  00000002
            EndIf
    EndSwitch
    If  *Var[B]  !=  FFFFFFFF
        Call  RandInt   ( 000003E8 *Var[0] )
        If  *Var[0]  <  000001F4 % 1F4
            Set   *Var[A]  *Var[B]
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_8021A45C
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        CaseOR  ==  0000001A
        CaseOR  ==  00000029
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  !=  00000002
                    Add   *Var[9]  00000001
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  0000002A
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000001 *Var[3] )
                If  *Var[3]  <  00000002
                    Add   *Var[9]  00000001
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021A61C
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_80219054
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000002
        ExecWait  $Script_80219054
        Return
    EndIf
    ExecWait  $Script_8021A0D4
    If  *Var[A]  ==  FFFFFFFF
        ExecWait  $Script_80219054
        Return
    EndIf
    ExecWait  $Script_8021A45C
    Switch  *Var[9]
        Case  ==  00000001
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  0000012C
                ExecWait  $Script_80218C48
                Return
            EndIf
        Case  ==  00000002
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000096
                ExecWait  $Script_80218C48
                Return
            EndIf
        Case  ==  00000003
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000064
                ExecWait  $Script_80218C48
                Return
            EndIf
    EndSwitch
    ExecWait  $Script_80219054
    Return
    End
}

#new:Vector3D $Vector3D_8021A7F4
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A800
{
    $ForestFuzzy $Vector3D_8021A7F4 00000000 00000000 00000000 00000000 00000000
}

PADDING: 8021A81C to 8021A820 (004FA3FC to 004FA400)
00000000

#new:IdleAnimations $IdleAnimations_8021A820
{
    .Status:Normal    004B0001
    .Status:Stone     004B0000
    .Status:Sleep     004B0009
    .Status:Poison    004B0001
    .Status:Stop      004B0000
    .Status:Static    004B0001
    .Status:Paralyze  004B0000
    .Status:Dizzy     004B000A
    .Status:Fear      004B000A
    .Status:End
}

#new:DefenseTable $DefenseTable_8021A86C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021A878
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021A924
{
    00800000 01000000 F92100FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 02F60000 00000000
    00120001 02000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
    00120001 03000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
    00120001 04000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
    00120001 05000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
    00120001 06000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $Bzzap
{
    % stats
    [Index]        31b
    [Level]        19`b
    [MaxHP]         3`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021A878
    % ai
    [PartsCount]    6`s
    [PartsTable]  $PartsTable_8021A924
    [Script]      $Script_Init_8021AA24
    % move effectiveness
    [Escape]       40`b
    [Item]         70`b
    [AirLift]      95`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021AA24
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D28C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021AB10 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ACA8 )
    Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Return
    End
}

#new:Script $Script_Idle_8021AB10
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00041000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF9 00000013 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFFA )
        Call  $Function_80218170    ( FFFFFFEC 00000014 0000000A 0000001B )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF9 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFF6 )
        Call  $Function_80218170    ( FFFFFFF0 00000016 00000004 00000016 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021AC20
{
    Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 004B0003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Return
    End
}

#new:Script $Script_HandleEvent_8021ACA8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0007
            SetConst  *Var[2]  004B0008
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0007
            SetConst  *Var[2]  004B0008
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoJumpBack
            ExecWait  $Script_8021AC20
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B000B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8021AC20
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0003
            SetConst  *Var[2]  004B0006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0001
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004B0006
            ExecWait  DoBlowAway
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021B28C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 004B0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000034 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Add   *Var[2]  00000001
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Wait  5`
            Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
            Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8021AC20
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Add   *Var[2]  00000001
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
    Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
    Wait  6`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020328 00000006 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  20`
            Call  YieldTurn ( )
            ExecWait  $Script_8021AC20
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021B77C
{
    Set   *Var[9]  *Var[0]
    Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Add   *Var[A]  000000C8
    Add   *Var[B]  00000064
    Call  SetPartPos    ( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] )
    Call  SetPartFlagBits       ( .Actor:Self *Var[9] 00000001 .False )
    Call  SetAnimation  ( .Actor:Self *Var[9] 004B0003 )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Add   *Var[B]  00000032
    Sub   *Var[C]  0000001E
    Call  SetPartMoveSpeed      ( .Actor:Self *Var[9] *Fixed[6.0] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[1.0] )
    Call  FlyPartTo     ( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  GetPartOffset ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    Call  MakeLerp      ( 0000005A 000001C2 00000032 .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  $Function_8021823C    ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
    Call  SetPartPos    ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    If  *Var[3]  >  *Var[6]
        Call  SetPartYaw    ( .Actor:Self *Var[9] 000000B4 )
    Else
        Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    EndIf
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    If  *Var[9]  ==  00000002
        Call  UseCamPreset  ( 00000008 )
        Call  SetBattleCamZoom      ( 00000190 )
        Call  SetBattleCamOffsetZ   ( 0000001E )
        Call  BattleCamTargetActor  ( .Actor:Player )
        Call  MoveBattleCamOver     ( 0000003C )
    EndIf
    Call  SetAnimation  ( .Actor:Self *Var[9] 004B0003 )
    Call  GetActorPos   ( .Actor:Player *Var[A] *Var[B] *Var[C] )
    Add   *Var[B]  0000001E
    Add   *Var[C]  0000001E
    Call  SetPartMoveSpeed      ( .Actor:Self *Var[9] *Fixed[6.0] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[1.0] )
    Call  FlyPartTo     ( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
    Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
    Call  GetPartOffset ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    Call  MakeLerp      ( FFFFFFA6 FFFFFD30 00000064 .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  $Function_8021823C    ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
    Call  SetPartPos    ( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
    If  *Var[3]  >  *Var[6]
        Call  SetPartYaw    ( .Actor:Self *Var[9] 000000B4 )
    Else
        Call  SetPartYaw    ( .Actor:Self *Var[9] 00000000 )
    EndIf
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_8021BC74
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000002 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000005 .ActorSound:Fly 00000000 00000000 )
    Call  SetPartSounds ( .Actor:Self 00000006 .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020CC )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 004B0005 )
    Wait  40`
    Call  SetAnimation  ( .Actor:Self 00000001 004B0001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  PlaySound     ( 00000358 )
    Set   *Var[0]  00000002
    Exec  $Script_8021B77C *Var[A]
    Wait  11`
    Set   *Var[0]  00000003
    Exec  $Script_8021B77C
    Wait  11`
    Set   *Var[0]  00000004
    Exec  $Script_8021B77C
    Wait  11`
    Set   *Var[0]  00000005
    Exec  $Script_8021B77C
    Wait  11`
    Set   *Var[0]  00000006
    Exec  $Script_8021B77C
    Label  0
    DoesScriptExist  *Var[A] *Var[0]
    Wait  1`
    If  *Var[0]  ==  00000001
        Goto  0
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000002 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000003 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000003 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000003 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000004 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000004 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000004 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000005 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000005 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000005 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
            EndThread
            Wait  11`
            Thread
                Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
                Call  SetAnimation  ( .Actor:Self 00000006 004B0004 )
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
                Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
                Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
                Call  SetPartYaw    ( .Actor:Self 00000006 000000B4 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000064
                Add   *Var[2]  00000064
                Call  AddActorDecoration    ( .Actor:Self 00000006 00000000 .Decoration:Sweat )
                Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
                Call  RemoveActorDecoration ( .Actor:Self 00000006 00000000 )
                Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            EndThread
            Wait  11`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  UseCamPreset      ( 00000002 )
            Wait  30`
            Call  StopSound ( 00000358 )
            Call  YieldTurn ( )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000010 )
        Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000002 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
    EndThread
    Wait  11`
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
        Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000003 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    EndThread
    Wait  11`
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
        Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000004 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    EndThread
    Wait  11`
    Thread
        Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
        Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
        Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
        Wait  2`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
        Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
        Call  SetPartYaw    ( .Actor:Self 00000005 000000B4 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Add   *Var[2]  00000064
        Call  FlyPartTo     ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
        Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
    EndThread
    Wait  11`
    Wait  1`
    Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
    Call  SetAnimation      ( .Actor:Self 00000006 004B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
    Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
            Call  SetPartYaw    ( .Actor:Self 00000006 000000B4 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000064
            Add   *Var[2]  00000064
            Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            Call  StopSound     ( 00000358 )
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021D28C
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_8021B28C
        Return
    EndIf
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000001F4
        ExecWait  $Script_8021B28C
    Else
        ExecWait  $Script_8021BC74
    EndIf
    Return
    End
}

PADDING: 8021D324 to 8021D330 (004FCF04 to 004FCF10)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021D330
{
    .Status:Normal    00370001
    .Status:Stone     00370000
    .Status:Sleep     00370000
    .Status:Poison    00370001
    .Status:Stop      00370000
    .Status:Static    00370001
    .Status:Paralyze  00370000
    .Status:Dizzy     00370001
    .Status:Fear      00370001
    .Status:End
}

MISSING: 8021D37C to 8021D394 (004FCF5C to 004FCF74)
00000001 00370001 00000000 00000001 00370006 00000000

#new:DefenseTable $DefenseTable_8021D394
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021D3A0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021D44C
{
    00800000 01000000 002300FF $IdleAnimations_8021D330 $DefenseTable_8021D394 00000010 00000000 00F60000 00000000
}

#new:Actor $PiranhaPlant
{
    % stats
    [Index]        19b
    [Level]        11`b
    [MaxHP]         5`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021D3A0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021D44C
    [Script]      $Script_Init_8021D498
    % move effectiveness
    [Escape]       70`b
    [Item]         40`b
    [AirLift]      20`b
    [Hurricane]    20`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]   -7`b  33`b % dx dy
    [StatusIcon]   10`b  33`b % dx dy
}

#new:Script $Script_Init_8021D498
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021DCD4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021D4E4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D60C )
    Return
    End
}

#new:Script $Script_Idle_8021D4E4
{
    Return
    End
}

#new:Script $Script_8021D4F4
{
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
    Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
    Wait  10`
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    Call  SetAnimation      ( .Actor:Self 00000001 00370003 )
    Wait  10`
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
    Return
    End
}

#new:Script $Script_HandleEvent_8021D60C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0037000A
            SetConst  *Var[2]  0037000B
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0037000A
            SetConst  *Var[2]  0037000B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0037000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoShockHit
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021D4F4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Thread
                Wait  10`
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  &  00080000
                    Add   *Var[0]  00000000
                    Add   *Var[1]  0000000E
                Else
                    Add   *Var[0]  00000000
                    Add   *Var[1]  00000023
                EndIf
                Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  20`
            EndThread
            Loop  00000028
                Call  SetAnimation  ( .Actor:Self 00000001 00370001 )
                Wait  1`
                Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
                Wait  1`
            EndLoop
            Call  SetAnimation  ( .Actor:Self 00000001 00370001 )
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoNormalHit
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
            Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
            Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
            Wait  8`
            Call  8027D32C  ( FFFFFF81 )
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  RemoveActor       ( .Actor:Self )
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00370009
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021DCD4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
        Call  UseCamPreset      ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
        Call  MoveBattleCamOver ( 00000001 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000014
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Wait  15`
        Goto  7B
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
    Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Wait  8`
    Call  UseCamPreset      ( 00000013 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Set   *Var[1]  00000000
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 0000002D )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  &  00080000
        Add   *Var[0]  00000008
        Add   *Var[0]  FFFFFFFD
    Else
        Add   *Var[0]  00000014
    EndIf
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 00000014 .False .False .False )
    Label  7B
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00370003 )
    Wait  8`
    Call  SetAnimation      ( .Actor:Self 00000001 00370005 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  GetStatusFlags    ( .Actor:Self *Var[5] )
            If  *Var[5]  !&  00080000
                Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
                Wait  2`
            EndIf
            Thread
                Wait  6`
                Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00370007 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00370008 )
            Wait  2`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021D4F4
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
    Wait  2`
    Thread
        Wait  6`
        Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00370007 )
    Wait  10`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  2`
            Call  SetAnimation  ( .Actor:Self 00000001 00370008 )
            Wait  15`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021D4F4
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_BeforeBattle_8021E450
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  $Function_80218360 ( )
    Return
    End
}

#new:Script $Script_AfterBattle_8021E47C
{
    Return
    End
}

#new:Stage $Stage_8021E48C
{
    $ASCII_8021EC20  % mim_tex
    $ASCII_8021EC10  % mim_bt01_shape
    $ASCII_8021EC00  % mim_bt01_hit
    $Script_BeforeBattle_8021E450
    $Script_AfterBattle_8021E47C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021E4B4 to 8021E4C0 (004FE094 to 004FE0A0)
00000000 00000000 00000000

#new:Formation $Formation_00
{
    $ForestFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $ForestFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
    $ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
    $Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
    $Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
    $Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8021EE50 00000002 $Formation_00 $Stage_8021E48C 00000000
    $SJIS_8021EE38 00000003 $Formation_01 $Stage_8021E48C 00000000
    $SJIS_8021EE20 00000004 $Formation_02 $Stage_8021E48C 00000000
    $SJIS_8021EDFC 00000002 $Formation_03 $Stage_8021E48C 00000000 % unused
    $SJIS_8021EDD4 00000003 $Formation_04 $Stage_8021E48C 00000000
    $SJIS_8021EDAC 00000004 $Formation_05 $Stage_8021E48C 00000000
    $SJIS_8021ED84 00000004 $Formation_06 $Stage_8021E48C 00000000
    $SJIS_8021ED3C 00000004 $Formation_07 $Stage_8021E48C 00000000
    $SJIS_8021ED28 00000001 $Formation_08 $Stage_8021E48C 00000000 % unused
    $SJIS_8021ED14 00000002 $Formation_09 $Stage_8021E48C 00000000
    $SJIS_8021ED00 00000003 $Formation_0A $Stage_8021E48C 00000000
    $SJIS_8021ECEC 00000004 $Formation_0B $Stage_8021E48C 00000000
    $SJIS_8021ECC8 00000002 $Formation_0C $Stage_8021E48C 00000000 % unused
    $SJIS_8021ECA0 00000003 $Formation_0D $Stage_8021E48C 00000000
    $SJIS_8021EC78 00000003 $Formation_0E $Stage_8021E48C 00000000
    $SJIS_8021EC40 00000003 $Formation_0F $Stage_8021E48C 00000000
    $SJIS_8021EC34 00000002 $Formation_10 $Stage_8021E48C 00000000
    $SJIS_8021EC28 00000003 $Formation_11 $Stage_8021E48C 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_8021EE68 $Stage_8021E48C
    00000000 00000000
}

PADDING: 8021EBFC to 8021EC00 (004FE7DC to 004FE7E0)
00000000

#new:ASCII $ASCII_8021EC00
{
    "mim_bt01_hit"
}

#new:ASCII $ASCII_8021EC10
{
    "mim_bt01_shape"
}

#new:ASCII $ASCII_8021EC20
{
    "mim_tex"
}

#new:SJIS $SJIS_8021EC28
{
    ハッチーx3 % hacchi-x3
}

#new:SJIS $SJIS_8021EC34
{
    ハッチーx2 % hacchi-x2
}

#new:SJIS $SJIS_8021EC40
{
    パックンフラワー,グリーンチョロボン,パックンフラワー % pakkunfurawa-,guri-nchorobon,pakkunfurawa-
}

#new:SJIS $SJIS_8021EC78
{
    パックンフラワー,グリーンチョロボンx2 % pakkunfurawa-,guri-nchorobonx2
}

#new:SJIS $SJIS_8021ECA0
{
    パックンフラワーx2,グリーンチョロボン % pakkunfurawa-x2,guri-nchorobon
}

#new:SJIS $SJIS_8021ECC8
{
    パックンフラワー,グリーンチョロボン % pakkunfurawa-,guri-nchorobon
}

#new:SJIS $SJIS_8021ECEC
{
    パックンフラワーx4 % pakkunfurawa-x4
}

#new:SJIS $SJIS_8021ED00
{
    パックンフラワーx3 % pakkunfurawa-x3
}

#new:SJIS $SJIS_8021ED14
{
    パックンフラワーx2 % pakkunfurawa-x2
}

#new:SJIS $SJIS_8021ED28
{
    パックンフラワー % pakkunfurawa-
}

#new:SJIS $SJIS_8021ED3C
{
    グリーンチョロボン,パックンフラワー,グリーンチョロボン,パックンフラワー % guri-nchorobon,pakkunfurawa-,guri-nchorobon,pakkunfurawa-
}

#new:SJIS $SJIS_8021ED84
{
    グリーンチョロボンx3,パックンフラワー % guri-nchorobonx3,pakkunfurawa-
}

#new:SJIS $SJIS_8021EDAC
{
    グリーンチョロボンx2,パックンフラワーx2 % guri-nchorobonx2,pakkunfurawa-x2
}

#new:SJIS $SJIS_8021EDD4
{
    グリーンチョロボンx2,パックンフラワー % guri-nchorobonx2,pakkunfurawa-
}

#new:SJIS $SJIS_8021EDFC
{
    グリーンチョロボン,パックンフラワー % guri-nchorobon,pakkunfurawa-
}

#new:SJIS $SJIS_8021EE20
{
    グリーンチョロボンx4 % guri-nchorobonx4
}

#new:SJIS $SJIS_8021EE38
{
    グリーンチョロボンx3 % guri-nchorobonx3
}

#new:SJIS $SJIS_8021EE50
{
    グリーンチョロボンx2 % guri-nchorobonx2
}

#new:ASCII $ASCII_8021EE68
{
    "mim_01"
}

