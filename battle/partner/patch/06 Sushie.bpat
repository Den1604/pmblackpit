% Script File: 06 Sushie.bscr
% Decoded from: 707CA0 to 70BD10 (06 Sushie)

/%
Remove all Sushie's Battle Scripts and then create
all of them again but just with another name

This allow me to modify any script in wathever
way I want, so I don't need to keep in mind
only using Exec or ExecWaits to not cause an
overflow.

TLDR: It makes everything a lot easier
I didn't though about this before xd, so the 1st
4 partners (Goombario, Kooper, Bombette and Para)
still use the old method (only placing Execs and
ExecWait on specific parts to don't cause and overflow.)
%/

/%#delete $Function_80238000
#delete $Function_80238114
#delete $Function_802381EC
#delete $Function_802382A4
#delete $Function_80238328
#delete $Function_80238388
#delete $Function_80238480
#delete $Function_80238540
#delete $Function_80238E30%/

#delete $Script_Init_80239010
#delete $Script_Idle_80239070
#delete $Script_HandleEvent_80239080
#delete $Script_TakeTurn_802393EC
#delete $Script_80239480
#delete $Script_802394CC
#delete $Script_80239508
%#delete $Script_NextTurn_802395BC
#delete $Script_802395CC
#delete $Script_80239714
#delete $Script_80239938
#delete $Script_80239AE0
#delete $Script_80239B68
#delete $Script_80239BF0
#delete $Script_80239CBC
#delete $Script_80239DA4
#delete $Script_8023AAE0
%#delete $Script_8023B194 % unused script
%#delete $Script_8023B974 % unused script

/%#delete $ConstDouble_8023C060
#delete $ConstDouble_8023C068%/

@ $Sushie
{
    % stats
    [Index]        75b
    [Level]         0`b
    [MaxHP]        99`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80238F18
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80238FC4
    [Script]      $Script_Sushie_Init_80239010
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]         37`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Sushie_Init_80239010
{
    Call  BindTakeTurn  ( .Actor:Self $Script_Sushie_TakeTurn_802393EC )
    Call  BindIdle      ( .Actor:Self $Script_Sushie_Idle_80239070 )
    Call  BindHandleEvent   ( .Actor:Self $Script_Sushie_HandleEvent_80239080 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802395BC )
    Return
    End
}

#new:Script $Script_Sushie_Idle_80239070
{
    Return
    End
}

#new:Script $Script_Sushie_HandleEvent_80239080
{
    Call  UseIdleAnimation  ( .Actor:Partner .False )
    Call  CloseActionCommandInfo ( )
    Call  GetLastEvent      ( .Actor:Partner *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[1]  000F000D
            SetConst  *Var[2]  000F000D
            ExecWait  802977BC
            SetConst  *Var[1]  000F000D
            ExecWait  80296014
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  PlaySoundAtActor  ( .Actor:Partner 0000208C )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F000D
            ExecWait  80297814
        EndCaseGroup
        Case  ==  .Event:SpikeContact % 2A
            SetConst  *Var[1]  000F000D
            Set   *Var[2]  00000014
            ExecWait  80294FE4
            SetConst  *Var[1]  000F000D
            ExecWait  80296014
        Case  ==  .Event:BurnContact % 2C
            SetConst  *Var[1]  000F000E
            Set   *Var[2]  00000014
            SetConst  *Var[3]  000F000F
            ExecWait  80294C68
            SetConst  *Var[1]  000F000D
            ExecWait  80296014
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[1]  000F000E
            SetConst  *Var[2]  000F000F
            ExecWait  8029621C
            SetConst  *Var[1]  000F000D
            ExecWait  80296014
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[1]  000F000D
            Set   *Var[2]  00000014
            ExecWait  80295744
        Case  ==  00000033 % 33
            SetConst  *Var[1]  000F000D
            ExecWait  80296014
        Case  ==  00000034 % 34
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0001
            SetConst  *Var[2]  000F0003
            Set   *Var[3]  00000000
            ExecWait  80295EC4
        CaseOR  ==  00000018 % 18
        CaseOR  ==  .Event:Block % 1A
            Call  PlaySoundAtActor  ( .Actor:Partner 0000208C )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  000F0014
            ExecWait  80297814
            Wait  10`
        EndCaseGroup
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Partner .True )
    Return
    End
}

#new:Script $Script_Sushie_TakeTurn_802393EC
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            ExecWait  $Script_Sushie_802395CC
        Case  ==  00000005
            ExecWait  $Script_Sushie_80239480
        Case  ==  00000003
            ExecWait  $Script_Sushie_802394CC
        Case  ==  00000007
            ExecWait  $Script_Sushie_80239508
    EndSwitch
    Return
    End
}

#new:Script $Script_Sushie_80239480
{
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0011 )
    Wait  36`
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Return
    End
}

#new:Script $Script_Sushie_802394CC
{
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  000F0003
    ExecWait  80294AFC
    Return
    End
}

#new:Script $Script_Sushie_80239508
{
    Call  UseIdleAnimation  ( .Actor:Partner .False )
    Call  SetGoalToHome ( .Actor:Partner )
    Call  SetActorSpeed ( .Actor:Partner *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call  SetActorYaw   ( .Actor:Partner 00000000 )
    Call  RunToGoal     ( .Actor:Partner 00000000 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Call  UseIdleAnimation  ( .Actor:Partner .True )
    Return
    End
}

#new:Script $Script_Sushie_802395CC
{
    Call  802694A4  ( 00000001 )
    Call  SetBattleFlagBits ( 00004000 .False )
    Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
    Switch  *Var[0]
        Case  ==  00000008
            Call  LoadStarPowerScript ( )
            ExecWait  *Var[0]
            Return
    EndSwitch
    Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
    Switch  *Var[2]
        Case  ==  000000A7 % Belly Flop
            ExecWait  $Script_Init_BellyFlop
        Case  ==  000000A8 % Belly Flop - Super Rank
            ExecWait  $Script_Init_BellyFlop
        Case  ==  000000A9 % Belly Flop - Ultra Rank
            ExecWait  $Script_Init_BellyFlop
        Case  ==  000000AA % Squirt
            ExecWait  $Script_Init_Squirt
        Case  ==  000000AB % Water Block
            ExecWait  $Script_Init_WaterBlock
        Case  ==  000000AC % Tidal Wave
            ExecWait  $Script_Init_TidalWave
    EndSwitch
    Return
    End
}

#new:Script $Script_BellyFlop_GoBackToHome_Succeed
{
    % Belly Flop - Stylish Move
    Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
    If  *Var[0] == .True
        % Rotate Sushie
        Thread
            Call  SetActorRotationOffset    ( .Actor:Self 0 12` 0 )
            SetTimescale *Fixed[3.0]
            Loop 6
                % 1
                Call    MakeLerp    	( 0 -180` 3 .Easing:Linear )
                Loop     
                    Call     UpdateLerp
                    Call     SetActorRotation  ( .Actor:Self 0 0 *Var[0] )
                    Wait     1
                    If  *Var[1]  ==  .False
                        BreakLoop
                    EndIf
                EndLoop
                % 2
                Call    MakeLerp    	( -180` 0 3 0 )
                Loop     
                    Call     UpdateLerp
                    Call     SetActorRotation  ( .Actor:Self 0 0 *Var[0] )
                    Wait     1
                    If  *Var[1]  ==  .False
                        BreakLoop
                    EndIf
                EndLoop
            EndLoop
            SetTimescale *Fixed[1.0]
            Call  SetActorRotation  ( .Actor:Self 0 0 0 )
            Call  SetActorRotationOffset    ( .Actor:Self 0 9 0 )
        EndThread
    EndIf
    Set   *TrackInput .False % turn off tracker
    Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
    Exec  $Script_InitTracker
    Call  80280818 ( )
    Call  UseCamPreset  ( 00000004 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0006 )
    Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000003C
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[1.4] )
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Partner 00000014 .False .True .False )
    Sub   *Var[0]  0000001E
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Partner 00000008 .False .True .False )
    Sub   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Thread % Belly Flop - 2nd Stylish Move
        Wait 2
        Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
        If *Var[0] == .False % The A button wasn't still pressed
            Loop 4 % 4 frames
                % Timing Tutor Badge
                ExecWait $Script_TimingTutor % writes in var0,1,2
                Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
                % Set *Var[0] .True % testing
                If *Var[0] == .True
                    Set   *TrackInput .False % turn off tracker
                    % Add 1 to the stylish counter (last move only)
                    Call $ReadAddress  ( $Data_Inputs 0 *Var[0] 2 .False )
                    Add *Var[0] 1
                    Call $WriteAddress ( $Data_Inputs 0 *Var[0] 2 .False )
                    % Set global stylish flag for current move
                    If *Var[0] > 1
                        Set *Flag_Stylish_Partner_Sushie_BellyFlop .True
                    EndIf
                    Set *Var[A] .False % this move doesn't have an SP cap
                    ExecWait $Script_DoStylishFX
                    Wait 1
                    Goto EndThread2
                EndIf
                Wait 1
            EndLoop
            % A button wasn't pressed
            Set   *TrackInput .False % turn off tracker
            Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
        Else % button A was pressed to soon
            Set   *TrackInput .False % turn off tracker
            Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
        EndIf
        Label EndThread2
    EndThread
    Call  JumpToGoal    ( .Actor:Partner 00000006 .False .True .False )
    Sub   *Var[0]  0000000A
    Call  JumpToGoal    ( .Actor:Partner 00000004 .False .True .False )
    Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
    If *Var[0] == .True
        % happy :D
        Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0011 )
        Wait  25`
    EndIf
    Set   *TrackInput .False % turn off tracker
    Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Wait  15`
    Call  SetGoalToHome ( .Actor:Partner )
    Call  SetActorSpeed ( .Actor:Partner *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call  RunToGoal     ( .Actor:Partner 00000000 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Return
    End
}

#new:Script $Script_BellyFlop_GoBackToHome_Failed
{
    Call  80280818 ( )
    Call  UseCamPreset  ( 00000033 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0006 )
    Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000F
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[0.4] )
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Partner 00000008 .False .True .False )
    Sub   *Var[0]  00000005
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Partner 00000004 .False .True .False )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Wait  15`
    Call  SetGoalToHome ( .Actor:Partner )
    Call  SetActorSpeed ( .Actor:Partner *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call  RunToGoal     ( .Actor:Partner 00000000 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Return
    End
}

#new:Script $Script_Sushie_80239AE0
{
    Call  80280818 ( )
    Call  UseCamPreset  ( 00000004 )
    Call  SetGoalToHome ( .Actor:Partner )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call  FlyToGoal     ( .Actor:Partner 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Return
    End
}

#new:Script $Script_Sushie_80239B68
{
    Call  80280818 ( )
    Call  UseCamPreset  ( 00000033 )
    Call  SetGoalToHome ( .Actor:Partner )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call  FlyToGoal     ( .Actor:Partner 0000001E 00000000 .Easing:CosInOut )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Return
    End
}

#new:Script $Script_Sushie_80239BF0
{
    Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Partner *Fixed[4.0] )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call  RunToGoal     ( .Actor:Partner 00000000 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Return
    End
}

#new:Script $Script_Sushie_80239CBC
{
    Call  SetGoalToTarget   ( .Actor:Partner )
    Call  GetGoalPos        ( .Actor:Partner *Var[B] *Var[C] *Var[D] )
    Call  GetActorPos       ( .Actor:Partner *Var[C] *Var[D] *Var[E] )
    If  *Var[B]  >  *Var[C]
        Sub   *Var[B]  *Var[C]
    Else
        Sub   *Var[C]  *Var[B]
        Set   *Var[B]  *Var[C]
    EndIf
    Sub   *Var[B]  00000014
    DivF  *Var[B]  *Fixed[10.588867]
    AddF  *Var[B]  0000000F
    Set   *Var[A]  *Var[B]
    Return
    End
}

#new:Script $Script_Init_BellyFlop
{
    Exec  $Script_NukeTracker
    Call  LoadActionCommand ( 00000002 )
    Call  802A9000 ( )
    ExecWait  $Script_Sushie_80239BF0
    ExecWait  $Script_Sushie_80239CBC
    Loop  0000001E
        Wait  1`
        Call  CheckButtonDown   ( 00040000 *Var[0] )
        If  *Var[0]  !=  .False
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_InitTracker
    Call  802A9258      ( 00000000 00000039 00000003 )
    Call  802695D4      ( 00000000 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0004 )
    Call  UseCamPreset  ( 0000003B )
    Set   *Var[0]  0000001E
    Loop  0000003C
        Wait  1`
        Sub   *Var[0]  00000001
        If  *Var[0]  ==  00000000
            Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0008 )
        EndIf
        Call  CheckButtonDown   ( 00040000 *Var[0] )
        If  *Var[0]  ==  .False
            BreakLoop
        EndIf
    EndLoop
    Thread
        Call  802807D0  ( *Var[0] )
        Call  UseCamPreset      ( 00000034 )
        Call  MoveBattleCamOver ( 00000014 )
    EndThread
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0005 )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Partner 00000000 0000000C 00000000 )
        Set   *Var[0]  00000000
        Loop  0000000A
            Add   *Var[0]  00000024
            Call  SetActorRotation  ( .Actor:Partner 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
        Call  SetActorRotation  ( .Actor:Partner 00000000 00000000 00000014 )
    EndThread
    Thread
        Call  802807D0  ( *Var[0] )
        If  *Var[0]  >  00000000
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[2]
                Case  ==  000000A7
                    Wait  13`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.1] *Fixed[1.1] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.1] *Fixed[1.1] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.2] *Fixed[1.2] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.2] *Fixed[1.2] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.3] *Fixed[1.3] *Fixed[1.0] )
                Case  ==  000000A8
                    Wait  13`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.15] *Fixed[1.15] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.2] *Fixed[1.2] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.35] *Fixed[1.35] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.55] *Fixed[1.55] *Fixed[1.0] )
                Case  ==  000000A9
                    Wait  13`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.2] *Fixed[1.2] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.3] *Fixed[1.3] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.5] *Fixed[1.5] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.6] *Fixed[1.6] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.8] *Fixed[1.8] *Fixed[1.0] )
            EndSwitch
        Else
            Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
            Switch  *Var[2]
                Case  ==  000000A7
                    Wait  13`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Case  ==  000000A8
                    Wait  13`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.05] *Fixed[1.05] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.1] *Fixed[1.1] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.15] *Fixed[1.15] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.2] *Fixed[1.2] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.25] *Fixed[1.25] *Fixed[1.0] )
                Case  ==  000000A9
                    Wait  13`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.1] *Fixed[1.1] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.2] *Fixed[1.2] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.3] *Fixed[1.3] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
                    Wait  1`
                    Call  SetActorScale ( .Actor:Partner *Fixed[1.5] *Fixed[1.5] *Fixed[1.0] )
            EndSwitch
        EndIf
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Partner 00002034 )
    Call  SetGoalToTarget   ( .Actor:Partner )
    Call  802807D0  ( *Var[0] )
    If  *Var[0]  >  00000000 % Action Command Succeed
        Thread
            Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0005 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0006 )
        EndThread
        Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[1.6] )
        % Belly Flop - Stylish Move
        Thread
            % Get Distance between sushie and the actor
            Loop
                Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
                If *Var[0] == .False % The A button wasn't still pressed
                    Call GetDistanceToGoal ( .Actor:Self *Var[0] )
                    If *Var[0] < 25`
                        Loop 2 % 2 frames
                            % Timing Tutor Badge
                            ExecWait $Script_TimingTutor % writes in var0,1,2
                            Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
                            % Set *Var[0] .True % testing
                            If *Var[0] == .True
                                Set   *TrackInput .False % turn off tracker
                                % Add 1 to the stylish counter (last move only)
                                Call $ReadAddress  ( $Data_Inputs 0 *Var[0] 2 .False )
                                Add *Var[0] 1
                                Call $WriteAddress ( $Data_Inputs 0 *Var[0] 2 .False )
                                Set *Var[A] .False % this move doesn't have an SP cap
                                ExecWait $Script_DoStylishFX
                                Wait  1
                                Goto  EndThread
                            EndIf
                            Wait 1
                        EndLoop
                        Wait 1
                        Goto EndThread
                    EndIf
                Else % A button was pressed to soon
                    Set   *TrackInput .False % turn off tracker
                    Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
                    BreakLoop
                EndIf
                Wait 1
            EndLoop
            Label EndThread
        EndThread
        Call  JumpToGoal    ( .Actor:Partner 00000014 .False .True .False )
    Else
        Set   *TrackInput .False % turn off tracker
        Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
        Thread
            Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0005 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0006 )
        EndThread
        Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[1.0] )
        Call  JumpToGoal    ( .Actor:Partner 00000014 .False .True .False )
    EndIf
    Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000F0007 )
    Call  SetActorRotation  ( .Actor:Partner 00000000 00000000 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Partner 00000000 00000000 00000000 )
    Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
    Switch  *Var[2]
        Case  ==  000000A7
            Set   *Var[E]  00000001
            Set   *Var[F]  00000003
        Case  ==  000000A8
            Set   *Var[E]  00000002
            Set   *Var[F]  00000004
        Case  ==  000000A9
            Set   *Var[E]  00000003
            Set   *Var[F]  00000005
    EndSwitch
    Call  PartnerTestEnemy  ( *Var[0] ~Flags:DamageType:0 00000014 00000000 00000001 00000010 )
    If  *Var[0]  ==  .HitResult:Miss % 6
        Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  LandJump      ( .Actor:Partner )
        Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
        Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
        Call  AddGoalPos    ( .Actor:Partner 0000000F 00000000 00000000 )
        Call  JumpToGoal    ( .Actor:Partner 00000014 .False .True .False )
        Call  AddGoalPos    ( .Actor:Partner 0000000A 00000000 00000000 )
        Call  JumpToGoal    ( .Actor:Partner 0000000A .False .True .False )
        Wait  10`
        Call  SetGoalToHome ( .Actor:Partner )
        Call  SetActorSpeed ( .Actor:Partner *Fixed[6.0] )
        Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
        Call  RunToGoal     ( .Actor:Partner 00000000 )
        Return
    EndIf
    Thread
        Wait  3`
        Call  SetActorScale ( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndThread
    Call  802807D0  ( *Var[0] )
    Switch  *Var[0]
        Case  >  00000000
            Call  PartnerDamageEnemy    ( *Var[0] ~Flags:DamageType:Jump 00000004 00000000 *Var[F] 00000070 )
        Default
            Call  PartnerDamageEnemy    ( *Var[0] ~Flags:DamageType:Jump 00000004 00000000 *Var[E] 00000030 )
    EndSwitch
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000033 )
            ExecWait  $Script_BellyFlop_GoBackToHome_Failed
        EndCaseGroup
        CaseOR  ==  00000001 % 1
        CaseOR  ==  00000003 % 3
            Call  UseCamPreset      ( 00000003 )
            Call  MoveBattleCamOver ( 00000008 )
            ExecWait  $Script_BellyFlop_GoBackToHome_Succeed
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_Squirt
{
    Exec  $Script_NukeTracker
    Call  LoadActionCommand ( 0000000F )
    Call  802A9000 ( )
    Call  GetActorLevel     ( .Actor:Partner *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  802691C8  ( 00000003 00000028 0000004B 00000064 00000000 00000000 )
        Case  ==  00000001
            Call  802691C8  ( 00000004 00000023 0000003C 00000050 00000064 00000000 )
        Case  ==  00000002
            Call  802691C8  ( 00000005 00000014 00000028 0000003C 00000050 00000064 )
    EndSwitch
    Call  UseCamPreset  ( 0000000D )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver     ( 00000028 )
    Call  InitTargetIterator ( )
    Thread % Small jump before holding breath
        Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0005 )
        Wait  5`
        Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0006 )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Exec  $Script_InitTracker
    % Timing Tutor Badge
    Thread
        Loop 3 % Stylish Frame window
            ExecWait $Script_TimingTutor % writes in var0,1,2
            Wait 1
        EndLoop
    EndThread
    Call  JumpToGoal    ( .Actor:Partner 0000000A .False .True .False )
    % Squirt - 1st Stylish Move
    Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
    If *Var[0] == .True
        % Turn Off A Button Tracker
        Set  *TrackInput .False
        Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
        % Add 1 to the stylish counter (last move only)
        Call $ReadAddress  ( $Data_Inputs 0 *Var[0] 2 .False )
        Add *Var[0] 1
        Call $WriteAddress ( $Data_Inputs 0 *Var[0] 2 .False )
        Set *Var[A] .False % this move doesn't have an SP cap
        ExecWait $Script_DoStylishFX
        %=====================
        % Sushie Jump
        % Rotate Sushie
        Call PlaySoundAtActor ( .Actor:Self 2034 ) % Jump
        Thread
            Call  SetActorRotationOffset    ( .Actor:Self 0 12` 0 )
            SetTimescale *Fixed[3.0]
            Call    MakeLerp    	( 0 -180` 8 .Easing:Linear )
            Loop     
                Call     UpdateLerp
                Call     SetActorRotation  ( .Actor:Self 0 0 *Var[0] )
                Wait     1
                If  *Var[1]  ==  .False
                    BreakLoop
                EndIf
            EndLoop
            % 2
            Call    MakeLerp    	( -180` 0 8 .Easing:Linear )
            Loop     
                Call     UpdateLerp
                Call     SetActorRotation  ( .Actor:Self 0 0 *Var[0] )
                Wait     1
                If  *Var[1]  ==  .False
                    BreakLoop
                EndIf
            EndLoop
            SetTimescale *Fixed[1.0]
            Call  SetActorRotation  ( .Actor:Self 0 0 0 )
            Call  SetActorRotationOffset    ( .Actor:Self 0 9 0 )
        EndThread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        % Do Jump
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
        Call  JumpToGoal    ( .Actor:Self 20` .False .False .False )
    EndIf
    Set  *TrackInput .False
    Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
    Call  $Function_80238000 ( )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0009 )
    Call  AddBattleCamZoom      ( FFFFFFB0 )
    Call  MoveBattleCamOver     ( 0000005A )
    Call  802A911C      ( 00000000 00000057 00000003 )
    Loop  0000005A
        Call  802695A8  ( *Var[0] )
        If  *Var[0]  ==  00000000
            Call  GetActorScale ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            SetF  *Var[1]  *Var[0]
            SubF  *Var[1]  *Fixed[1.0]
            DivF  *Var[1]  00000004
            SubF  *Var[0]  *Var[1]
        Else
            SetF  *Var[0]  *Var[0]
            DivF  *Var[0]  00000064
            SetF  *Var[1]  *Fixed[1.0]
            AddF  *Var[0]  *Var[1]
        EndIf
        Call  SetActorScale ( .Actor:Self *Var[0] *Var[0] *Fixed[1.0] )
        SetF  *Var[E]  *Var[0]
        Wait  1`
    EndLoop
    Call  PlaySoundAtActor  ( .Actor:Partner 00000297 )
    Call  UseCamPreset      ( 00000003 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  PartnerTestEnemy  ( *Var[0] 10000004 00000014 00000000 00000001 00000010 )
    If  *Var[0]  ==  .HitResult:Miss % 6
        Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F000A )
        Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000000A
        Add   *Var[1]  0000000B
        Call  GetGoalPos    ( .Actor:Partner *Var[3] *Var[4] *Var[5] )
        Call  $Function_802382A4 ( )
        Call  PlayEffect    ( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Var[E] 0000000A 00000000 00000000 00000000 00000000 )
        Wait  20`
        ExecWait  $Script_Sushie_80239B68
        Return
    EndIf
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F000A )
    Thread
        Call  $Function_802381EC ( )
    EndThread
    Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Add   *Var[1]  0000000B
    Call  GetGoalPos    ( .Actor:Partner *Var[3] *Var[4] *Var[5] )
    Call  PlayEffect    ( ~FX:Squirt:Waterbeam *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Var[E] 0000000A 00000000 00000000 00000000 00000000 )
    Exec  $Script_InitTracker
    Wait  10`
    Call  802695A8      ( *Var[0] )
    Call  $Function_80238114 ( )
    Switch  *Var[0]
        Case  >  00000000
            Call  PartnerDamageEnemy    ( *Var[0] 10000004 00000212 00000000 *Var[F] 00000070 )
            Call  PlaySoundAtActor      ( .Actor:Partner 00000110 )
        Default
            Call  PartnerDamageEnemy    ( *Var[0] 10000004 00000212 00000000 *Var[F] 00000030 )
            Call  PlaySoundAtActor      ( .Actor:Partner 00000110 )
    EndSwitch
    Call  802695A8  ( *Var[0] )
    If *Var[0] > 80` % Action Command Succesfull
        % Squirt - 2nd Stylish Move
        Exec  $Script_Squirt_DoStylish2 *Var[9]
        Loop
            DoesScriptExist ( *Var[9] *Var[0] )
            If *Var[0] == .False
                BreakLoop
            EndIf
            Wait 1
        EndLoop
    EndIf
    Call    SetActorRotationOffset    ( .Actor:Self 0 0 0 )
    Call    SetActorRotation    ( .Actor:Self 0 0 0 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            ExecWait  $Script_Sushie_80239B68
        EndCaseGroup
        CaseOR  ==  00000001 % 1
        CaseOR  ==  00000003 % 3
            ExecWait  $Script_Sushie_80239AE0
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_Squirt_DoStylish2
{
    Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
	If *Var[0] == .False % The A button wasn't still pressed
		Loop 4 % 4 frames
			% Timing Tutor Badge
			ExecWait $Script_TimingTutor % writes in var0,1,2
			Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
			% Set *Var[0] .True % testing
			If *Var[0] == .True
				Set   *TrackInput .False % turn off tracker
				Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
				% Add 1 to the stylish counter (last move only)
				Call $ReadAddress  ( $Data_Inputs 0 *Var[0] 2 .False )
				Add *Var[0] 1
				Call $WriteAddress ( $Data_Inputs 0 *Var[0] 2 .False )
                % Set global stylish flag for current move
                If *Var[0] > 1
                    Set *Flag_Stylish_Partner_Sushie_Squirt .True
                EndIf
				Set *Var[A] .False % this move doesn't have an SP cap
				ExecWait $Script_DoStylishFX
				% happy :D
				Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0011 )
				Wait  25`
				BreakLoop
			EndIf
			Wait 1
		EndLoop
	EndIf
    Return
    End
}

#new:Script $Script_Init_WaterBlock
{
    Exec  $Script_NukeTracker
    Call  UseIdleAnimation  ( .Actor:Partner .False )
    Call  InitTargetIterator ( )
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( FFFFFFA1 0000001A 0000000A )
    Call  SetBattleCamOffsetZ   ( 0000000B )
    Call  SetBattleCamZoom  ( 000000EE )
    Call  MoveBattleCamOver ( 0000001E )
    Wait  10`
    Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000F0009 )
    Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[1.0] )
    Call  GetActorPos       ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Call  SetGoalPos        ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Partner 0000000A .False .True .False )
    Call  LoadActionCommand ( 00000016 )
    Call  802A9000  ( 00000000 )
    Call  80269344  ( 00000000 )
    Set   *Var[0]  00000000
    Loop  00000004
        Add   *Var[0]  0000002D
        Call  SetActorYaw   ( .Actor:Partner *Var[0] )
        Wait  1`
    EndLoop
    Wait  4`
    Call  802A9398      ( 00000000 00000064 00000003 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F000B )
    Wait  110`
    Call  802807D0      ( *Var[0] )
    If  *Var[0]  ==  00000000
        Set   *Var[A]  *Var[0]
        Goto  A
    EndIf
    Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000F000C )
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( FFFFFFA1 0000001B 0000000A )
    Call  SetBattleCamOffsetZ   ( 0000000B )
    Call  SetBattleCamZoom  ( 00000115 )
    Call  MoveBattleCamOver ( 0000000A )
    Thread
        Call  PlaySoundAtActor  ( .Actor:Partner 00000298 )
        Call  $Function_80238388 ( )
        Wait  65`
        Exec  $Script_InitTracker
        Call  SetAnimation      ( .Actor:Partner FFFFFFFF 000F0011 )
    EndThread
    Wait  45`
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000053
    Call  PlayEffect        ( ~FX:WaterFall *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Partner 00002035 )
    Thread
        Wait  20`
        Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000064
        Call  PlayEffect    ( 00000011 00000004 *Var[0] *Var[1] *Var[2] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Sub   *Var[1]  00000014
        Call  PlayEffect    ( 00000011 00000004 *Var[0] *Var[1] *Var[2] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Sub   *Var[1]  00000014
        Call  PlayEffect    ( 00000011 00000004 *Var[0] *Var[1] *Var[2] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Sub   *Var[1]  00000014
        Call  PlayEffect    ( 00000011 00000004 *Var[0] *Var[1] *Var[2] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Sub   *Var[1]  00000014
        Call  PlayEffect    ( 00000011 00000004 *Var[0] *Var[1] *Var[2] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Wait  40`
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  $Function_80238480    ( *Var[0] *Var[1] *Var[2] )
    Wait  30`
    Call  802807D0      ( *Var[0] )
    Call  $Function_80238328 ( )
    Set   *Var[A]  *Var[0]
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000F
    Add   *Var[1]  00000023
    Add   *Var[F]  00000006
    Call  PlayEffect    ( 00000056 *Var[F] *Var[0] *Var[1] *Var[2] *Fixed[1.5] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  4`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver     ( 00000014 )
    Call  80280818 ( )
    Label  A
    % Water Block - Stylish Move
    Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
    If *Var[0] == .False % The A button wasn't still pressed
        % Stylish Move
		Exec  $Script_WaterBlock_DoStylish *Var[9]
		Loop
			DoesScriptExist ( *Var[9] *Var[0] )
			If *Var[0] == .False
				BreakLoop
			EndIf
			Wait 1
		EndLoop
    EndIf
    Set   *TrackInput .False % turn off tracker
	Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
    Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[1.0] )
    Call  SetGoalToHome ( .Actor:Partner )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call $ReadAddress  ( $Data_Inputs 0 *Var[0] 2 .False )
    If *Var[0] > 0 % A stylish move was landed
        Call  JumpToGoal    ( .Actor:Partner 12` .False .True .False )
        Wait 10`
    Else
        Call  JumpToGoal    ( .Actor:Partner 0000000A .False .True .False )
    EndIf
    Set   *Var[1]  000000B4
    Loop  00000004
        Sub   *Var[1]  0000002D
        Call  SetActorYaw   ( .Actor:Partner *Var[1] )
    EndLoop
    Call  SetActorYaw   ( .Actor:Partner 00000000 )
    If  *Var[A]  ==  00000000
    Else
        Call  ShowVariableMessageBox    ( 00000026 0000003C *Var[A] )
    EndIf
    Call  WaitForMessageBoxDone ( )
    Return
    End
}

#new:Script $Script_WaterBlock_DoStylish
{
    Loop 5 % 5 frames
        % Timing Tutor Badge
        ExecWait $Script_TimingTutor % writes in var0,1,2
        Call $ReadAddress ( $Data_Inputs 0 *Var[0] .False .False )
        % Set *Var[0] .True % testing
        If *Var[0] == .True
            Set   *TrackInput .False % turn off tracker
            Call  $WriteAddress ( $Data_Inputs 0 0 .False .False ) % turn input bool as false again
            % Add 1 to the stylish counter (last move only)
            Call $ReadAddress  ( $Data_Inputs 0 *Var[0] 2 .False )
            Add *Var[0] 1
            Call $WriteAddress ( $Data_Inputs 0 *Var[0] 2 .False )
            % Set global stylish flag for current move
            Set *Flag_Stylish_Partner_Sushie_WaterBlock .True
            Set *Var[A] .False % this move doesn't have an SP cap
            ExecWait $Script_DoStylishFX
            % Rotate Sushie
            Thread
                SetTimescale *Fixed[3.0]
                Call  PlaySound ( 2034 ) % flip
                Call  SetActorRotationOffset    ( .Actor:Self 0 15` 0 )
                % 1
                Call    MakeLerp    	( 0 180` 15` .Easing:Linear )
                Loop     
                    Call     UpdateLerp
                    Call     SetActorRotation  ( .Actor:Self 0 0 *Var[0] )
                    Wait     1
                    If  *Var[1]  ==  .False
                        BreakLoop
                    EndIf
                EndLoop
                % 2
                Call    MakeLerp    	( -180` 0 10` .Easing:Linear )
                Loop     
                    Call     UpdateLerp
                    Call     SetActorRotation  ( .Actor:Self 0 0 *Var[0] )
                    Wait     1
                    If  *Var[1]  ==  .False
                        BreakLoop
                    EndIf
                EndLoop
                SetTimescale *Fixed[1.0]
                Call  SetActorRotation  ( .Actor:Self 0 0 0 )
                Call  SetActorRotationOffset    ( .Actor:Self 0 0 0 )
            EndThread
            BreakLoop
        EndIf
        Wait 1
    EndLoop
    Return
    End
}

#new:Script $Script_Init_TidalWave
{
    Exec  $Script_NukeTracker
    Call  UseIdleAnimation      ( .Actor:Partner .False )
    Call  LoadActionCommand     ( 00000017 )
    Call  802A9000 ( )
    Call  802691C8      ( 00000005 00000014 0000001E 0000003C 00000050 00000064 )
    Call  InitTargetIterator ( )
    Call  UseCamPreset  ( 00000013 )
    Call  SetBattleCamTarget    ( FFFFFFBF 00000035 0000000A )
    Call  SetBattleCamOffsetZ   ( 00000010 )
    Call  SetBattleCamZoom      ( 000000D6 )
    Call  MoveBattleCamOver     ( 00000014 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0003 )
    Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[0.5] )
    Call  GetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Partner 00000005 .False .True .False )
    Call  SetActorJumpGravity   ( .Actor:Partner *Fixed[1.0] )
    Call  AddGoalPos    ( .Actor:Partner 0000001E 00000028 00000000 )
    Call  JumpToGoal    ( .Actor:Partner 0000000F .False .True .False )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F000B )
    Call  802A9138      ( 00000000 00000064 00000003 )
    Call  SetActorRotationOffset    ( .Actor:Partner 00000000 0000000C 00000000 )
    Thread
        Wait  54`
        Loop  00000008
            Call  SetActorDispOffset    ( .Actor:Partner 00000000 00000000 00000000 )
            Wait  1`
            Call  SetActorDispOffset    ( .Actor:Partner FFFFFFFF 00000000 00000000 )
            Wait  1`
        EndLoop
        Loop  00000007
            Call  SetActorDispOffset    ( .Actor:Partner 00000001 00000000 00000000 )
            Wait  1`
            Call  SetActorDispOffset    ( .Actor:Partner FFFFFFFF 00000000 00000000 )
            Wait  1`
        EndLoop
        Loop  00000008
            Call  SetActorDispOffset    ( .Actor:Partner 00000001 00000000 00000000 )
            Wait  1`
            Call  SetActorDispOffset    ( .Actor:Partner FFFFFFFE 00000000 00000000 )
            Wait  1`
        EndLoop
        Call  SetActorDispOffset    ( .Actor:Partner 00000000 00000000 00000000 )
    EndThread
    Loop  00000064
        Call  802695A8  ( *Var[0] )
        Call  $Function_80238E30 ( )
        Wait  1`
    EndLoop
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000005 )
    Wait  10`
    Call  EnableActorBlur   ( .Actor:Partner 00000001 )
    Call  $Function_80238540 ( )
    Call  SetActorPos       ( .Actor:Partner FFFFFF24 00000000 00000000 )
    Call  EnableActorBlur   ( .Actor:Partner 00000000 )
    Wait  15`
    Call  UseCamPreset      ( 00000003 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  GetActionSuccessCopy  ( *Var[0] )
    Set   *Var[E]  *Var[0]
    Set   *Var[F]  *Var[0]
    Call  InitTargetIterator ( )
    Loop
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  PartnerTestEnemy  ( *Var[0] ~Flags:DamageType:0 00000014 00000000 00000002 00000010 )
        If  *Var[0]  ==  .HitResult:Miss % 6
            Goto  A
        EndIf
        Switch  *Var[E]
            Case  >=  00000006
                Call  PartnerDamageEnemy    ( *Var[0] 30000004 00000000 00000000 *Var[F] 00000070 )
            Default
                Call  PartnerDamageEnemy    ( *Var[0] 30000004 00000000 00000000 *Var[F] 00000030 )
        EndSwitch
        Wait  5`
        Label  A
        Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
        If  *Var[0]  ==  FFFFFFFF % FFFFFFFF
            BreakLoop
        EndIf
    EndLoop
    Call  80280818 ( )
    Exec  $Script_InitTracker
    Call  SetGoalToHome ( .Actor:Partner )
    Call  AddGoalPos    ( .Actor:Partner 00000000 00000096 00000000 )
    Call  GetGoalPos    ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  SetActorPos   ( .Actor:Partner *Var[0] *Var[1] *Var[2] )
    Call  SetActorRotationOffset    ( .Actor:Partner 00000000 00000000 00000000 )
    Call  SetActorJumpGravity       ( .Actor:Partner *Fixed[1.0] )
    Call  SetGoalToHome ( .Actor:Partner )
    Call  SetAnimation  ( .Actor:Partner FFFFFFFF 000F0001 )
    Call  JumpToGoal    ( .Actor:Partner 00000028 .False .True .False )
    Call  SetActorJumpGravity       ( .Actor:Partner *Fixed[0.7] )
    ExecWait $Script_TydalWave_GoBackToHome % globals/patch/Stylish_GlobalScripts.patch
    Return
    End
}
