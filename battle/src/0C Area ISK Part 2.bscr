% Script File: 0C Area ISK Part 2.bscr
% Decoded from: 4EF4A0 to 4F7BE0 (0C Area ISK Part 2)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	ADDIU     S4, R0, 3
	SW        S2, 18 (SP)
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        A0, 148 (A0)
	LIF       F20, 7.0
	LIO       AT, 3F19999A
	MTC1      AT, F30
	LIF       F28, 3.0
	JAL       ~Func:get_actor
	CLEAR     S2
	ADDIU     A0, R0, 180
	JAL       ~Func:heap_malloc
	COPY      S3, V0
	COPY      S1, V0
	ADDIU     S0, S1, 8
	LWC1      F26, 14C (S3)
	LWC1      F2, 144 (S3)
	LIF       F1, 2.625
	MTC1      R0, F0
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	LWC1      F0, 148 (S3)
	LIF       F5, 2.3125
	MTC1      R0, F4
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F4
	SW        S1, 78 (S3)
	CVT.S.D   F24, F2
	CVT.S.D   F22, F0
	.oB4
	COPY      A0, S3
	ADDU      A1, S4, S2
	SWC1      F20, 1C (S0)
	SWC1      F20, 24 (S0)
	SWC1      F20, 20 (S0)
	SWC1      F24, 0 (S1)
	SWC1      F22, FFFC (S0)
	SWC1      F26, 0 (S0)
	SW        R0, 14 (S0)
	SWC1      F30, 18 (S0)
	SWC1      F28, C (S0)
	JAL       ~Func:get_actor_part
	SW        R0, 10 (S0)
	LWC1      F0, 0 (S1)
	ADDIU     S2, S2, 1
	SWC1      F0, 2C (V0)
	LWC1      F0, FFFC (S0)
	ADDIU     S1, S1, 30
	SWC1      F0, 30 (V0)
	LWC1      F0, 0 (S0)
	SWC1      F0, 34 (V0)
	SLTI      V0, S2, 8
	BNE       V0, R0, .oB4
	ADDIU     S0, S0, 30
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_80218150
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MTC1      A1, F22
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MTC1      A2, F6
	SDC1      F20, 18 (SP)
	MUL.S     F20, F6, F0
	NOP
	SW        S0, 10 (SP)
	LIF       F0, 360.0
	COPY      S0, A0
	SW        RA, 14 (SP)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	MOV.S     F20, F0
	NEG.S     F2, F22
	MUL.S     F2, F2, F20
	NOP
	MUL.S     F22, F22, F0
	NOP
	LWC1      F4, 0 (S0)
	ADD.S     F4, F4, F2
	LWC1      F0, 4 (S0)
	ADD.S     F0, F0, F22
	SWC1      F4, 0 (S0)
	SWC1      F0, 4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802181E8
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MTC1      A1, F22
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MTC1      A2, F2
	SDC1      F20, 18 (SP)
	MUL.S     F20, F2, F0
	NOP
	SW        S0, 10 (SP)
	LIF       F0, 360.0
	COPY      S0, A0
	SW        RA, 14 (SP)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	MOV.S     F12, F20
	MUL.S     F22, F22, F0
	NOP
	SWC1      F22, 0 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021825C
{
	ADDIU     SP, SP, FFA0
	SW        S0, 20 (SP)
	COPY      S0, A0
	SW        RA, 3C (SP)
	SW        S6, 38 (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	SDC1      F26, 58 (SP)
	SDC1      F24, 50 (SP)
	SDC1      F22, 48 (SP)
	SDC1      F20, 40 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S2, C (S0)
	COPY      S1, V0
	BEQ       S1, R0, .o3D8
	CLEAR     V0
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	COPY      A0, S0
	COPY      S5, V0
	ADDIU     V0, R0, A
	LB        V1, 210 (S1)
	LW        S2, 78 (S1)
	BNE       V1, V0, .oA4
	ADDIU     S6, R0, 3
	LWC1      F2, 144 (S1)
	LIF       F1, 2.375
	MTC1      R0, F0
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	LWC1      F0, 148 (S1)
	LIF       F5, 2.0625
	MTC1      R0, F4
	BEQ       R0, R0, .oD0
	CVT.D.S   F0, F0
	.oA4
	LWC1      F2, 144 (S1)
	LIF       F1, 2.625
	MTC1      R0, F0
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	LWC1      F0, 148 (S1)
	LIF       F5, 2.3125
	MTC1      R0, F4
	CVT.D.S   F0, F0
	.oD0
	ADD.D     F0, F0, F4
	CVT.S.D   F20, F2
	CVT.S.D   F22, F0
	CLEAR     S3
	ADDIU     S4, R0, A
	ADDIU     S0, S2, 4
	LIF       F26, 3.5
	LIF       F24, 1.0
	.oF8
	LB        V0, 210 (S1)
	BNE       V0, S4, .o114
	NOP
	SWC1      F26, 20 (S0)
	SWC1      F26, 28 (S0)
	BEQ       R0, R0, .o12C
	SWC1      F26, 24 (S0)
	.o114
	LIF       F0, 7.0
	NOP
	SWC1      F0, 20 (S0)
	SWC1      F0, 28 (S0)
	SWC1      F0, 24 (S0)
	.o12C
	LWC1      F2, 14 (S0)
	LWC1      F0, 10 (S0)
	SUB.S     F2, F2, F0
	NEG.S     F0, F0
	ADD.S     F0, F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .o180
	SWC1      F2, 14 (S0)
	SWC1      F0, 14 (S0)
	LW        V0, A8 (S1)
	BEQ       V0, R0, .o180
	NOP
	BNE       S3, R0, .o180
	ADDIU     A0, R0, 2063
	LWC1      F0, 14C (S1)
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       ~Func:play_sound_at_position
	CLEAR     A1
	.o180
	LWC1      F0, 0 (S0)
	LWC1      F2, 14 (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 0 (S0)
	LB        V0, 210 (S1)
	BNE       V0, S4, .o1CC
	CVT.D.S   F0, F0
	LIF       F3, 2.0625
	MTC1      R0, F2
	NOP
	C.LT.D    F0, F2
	NOP
	BC1F      .o200
	MOV.S     F12, F20
	LIF       F0, 2.5
	BEQ       R0, R0, .o1F8
	SW        R0, 14 (S0)
	.o1CC
	LIF       F3, 2.3125
	MTC1      R0, F2
	NOP
	C.LT.D    F0, F2
	NOP
	BC1F      .o200
	MOV.S     F12, F20
	LIF       F0, 5.0
	SW        R0, 14 (S0)
	.o1F8
	SWC1      F0, 0 (S0)
	MOV.S     F12, F20
	.o200
	LW        A2, 0 (S2)
	LW        A3, 0 (S0)
	JAL       ~Func:dist2D
	MOV.S     F14, F22
	MOV.S     F12, F20
	MOV.S     F14, F22
	LW        A2, 0 (S2)
	LW        A3, 0 (S0)
	JAL       ~Func:atan2
	MOV.S     F20, F0
	LWC1      F2, 28 (S0)
	C.LE.S    F2, F20
	NOP
	BC1F      .o280
	MOV.S     F22, F0
	SUB.S     F2, F20, F2
	MFC1      A2, F22
	MFC1      A1, F2
	JAL       $Function_802181E8
	ADDIU     A0, SP, 18
	LWC1      F0, 18 (SP)
	LIF       F3, 1.75
	MTC1      R0, F2
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F2
	NOP
	LWC1      F2, 14 (S0)
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	CVT.S.D   F2, F2
	SWC1      F2, 14 (S0)
	.o280
	LWC1      F0, 24 (S0)
	C.LE.S    F0, F20
	NOP
	BC1F      .o2CC
	NOP
	LWC1      F0, 20 (S0)
	C.LE.S    F0, F20
	NOP
	BC1F      .o2B0
	NOP
	BEQ       R0, R0, .o2C0
	SUB.S     F0, F20, F0
	.o2B0
	LWC1      F0, 18 (S0)
	LWC1      F2, 1C (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 18 (S0)
	.o2C0
	MFC1      A1, F0
	BEQ       R0, R0, .o318
	NOP
	.o2CC
	LWC1      F2, 1C (S0)
	LAD       F0, $ConstDouble_802204E0
	CVT.D.S   F2, F2
	MUL.D     F2, F2, F0
	NOP
	LWC1      F0, 18 (S0)
	CVT.D.S   F0, F0
	SUB.D     F0, F0, F2
	MTC1      R0, F4
	MTC1      R0, F5
	CVT.S.D   F0, F0
	CVT.D.S   F2, F0
	C.LT.D    F2, F4
	NOP
	BC1F      .o314
	SWC1      F0, 18 (S0)
	SW        R0, 18 (S0)
	.o314
	LW        A1, 18 (S0)
	.o318
	MFC1      A2, F22
	JAL       $Function_80218150
	COPY      A0, S2
	LWC1      F0, 18 (S0)
	LIF       F3, 2.25
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F2, F0
	NOP
	BC1F      .o358
	COPY      A0, S1
	LIF       F0, 4.0
	NOP
	SWC1      F0, 18 (S0)
	.o358
	ADDU      A1, S6, S3
	MTC1      S5, F0
	NOP
	CVT.S.W   F0, F0
	JAL       ~Func:get_actor_part
	SWC1      F0, 4 (S0)
	LWC1      F0, 0 (S2)
	COPY      V1, V0
	SWC1      F0, 2C (V1)
	LWC1      F0, 0 (S0)
	SWC1      F0, 30 (V1)
	LWC1      F0, 4 (S0)
	SWC1      F0, 34 (V1)
	LB        V0, 210 (S1)
	BNEL      V0, S4, .o3B0
	SWC1      F24, 4C (V1)
	LIF       F0, 0.5
	SWC1      F24, 54 (V1)
	SWC1      F0, 4C (V1)
	BEQ       R0, R0, .o3B8
	SWC1      F0, 50 (V1)
	.o3B0
	SWC1      F24, 50 (V1)
	SWC1      F24, 54 (V1)
	.o3B8
	ADDIU     S3, S3, 1
	LWC1      F22, 0 (S0)
	ADDIU     S0, S0, 30
	LWC1      F20, 0 (S2)
	SLTI      V0, S3, 8
	BNE       V0, R0, .oF8
	ADDIU     S2, S2, 30
	ADDIU     V0, R0, 2
	.o3D8
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F26, 58 (SP)
	LDC1      F24, 50 (SP)
	LDC1      F22, 48 (SP)
	LDC1      F20, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HEURISTIC
#new:Function $Function_8021866C
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 4 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218690
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021875C
{
	ADDIU     SP, SP, FFC8
	SW        S1, 2C (SP)
	COPY      S1, A0
	SW        RA, 34 (SP)
	SW        S2, 30 (SP)
	SW        S0, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	ADDIU     A0, R0, 2
	MTC1      S2, F6
	NOP
	CVT.S.W   F6, F6
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A1, F6
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	SWC1      F0, 10 (SP)
	LIF       F0, -0.5
	LIO       AT, BF666666
	MTC1      AT, F2
	LIF       F4, 0.5
	LUI       A2, 4316
	MFC1      A3, F6
	ADDIU     V1, R0, 3C
	SW        V1, 20 (SP)
	SWC1      F0, 14 (SP)
	SWC1      F2, 18 (SP)
	JAL       80071510
	SWC1      F4, 1C (SP)
	LW        V1, C (V0)
	SW        R0, 30 (V1)
	LW        V1, C (V0)
	SW        R0, 38 (V1)
	LW        V1, C (V0)
	SW        R0, 34 (V1)
	LW        RA, 34 (SP)
	LW        S2, 30 (SP)
	LW        S1, 2C (SP)
	LW        S0, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

PADDING: 80218848 to 80218850 (004EFCE8 to 004EFCF0)
00000000 00000000

#new:Function $Function_80218850
{
	LUI       A1, C305
	ADDIU     SP, SP, FFC8
	SDC1      F22, 28 (SP)
	LIF       F22, 72.0
	SDC1      F24, 30 (SP)
	LIF       F24, -143.0
	ADDIU     A0, R0, 1
	SDC1      F20, 20 (SP)
	LIO       AT, 3E99999A
	MTC1      AT, F20
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[0]
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F20, 10 (SP)
	ADDIU     A0, R0, 1
	LUI       A1, 4301
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[4]
	SWC1      F20, 10 (SP)
	JAL       80070490
	SW        V0, 14 (SP)
	LW        RA, 18 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_802188E4
{
	LAW       A0, $End[0]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:remove_effect
	NOP
	LAW       A0, $End[4]
	JAL       ~Func:remove_effect
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 8021891C to 80218920 (004EFDBC to 004EFDC0)
00000000

#new:Function $Function_80218920
{
	LUI       A1, C2B4
	ADDIU     SP, SP, FFC8
	SDC1      F22, 28 (SP)
	LIF       F22, 45.0
	SDC1      F24, 30 (SP)
	LIF       F24, -146.0
	ADDIU     A0, R0, 1
	SDC1      F20, 20 (SP)
	LIF       F20, 0.25
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[10]
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F20, 10 (SP)
	ADDIU     A0, R0, 1
	LUI       A1, 42A0
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[14]
	SWC1      F20, 10 (SP)
	JAL       80070490
	SW        V0, 14 (SP)
	LW        RA, 18 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_802189B0
{
	LAW       A0, $End[10]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:remove_effect
	NOP
	LAW       A0, $End[14]
	JAL       ~Func:remove_effect
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802189E8 to 802189F0 (004EFE88 to 004EFE90)
00000000 00000000

#new:Function $Function_802189F0
{
	ADDIU     SP, SP, FFE0
	LIA       V0, $End[20]
	LIO       AT, 3E99999A
	MTC1      AT, F0
	LUI       A1, C2DC
	LUI       A2, 42A0
	LUI       A3, C312
	ADDIU     A0, R0, 1
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F0, 10 (SP)
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218A38
{
	LAW       A0, $End[20]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:remove_effect
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218A60
{
	ADDIU     SP, SP, FFE0
	LIA       V0, $End[30]
	LIO       AT, 3E99999A
	MTC1      AT, F0
	LUI       A1, C2DC
	LUI       A2, 42A0
	LUI       A3, C312
	ADDIU     A0, R0, 1
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F0, 10 (SP)
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218AA8
{
	LAW       A0, $End[30]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:remove_effect
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218AD0
{
	ADDIU     SP, SP, FFE0
	LIA       V0, $End[40]
	LIO       AT, 3E99999A
	MTC1      AT, F0
	LUI       A1, 42DC
	LUI       A2, 42A0
	LUI       A3, C312
	ADDIU     A0, R0, 1
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F0, 10 (SP)
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218B18
{
	LAW       A0, $End[40]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:remove_effect
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_80218B40
{
    .Status:Normal    00690001
    .Status:Stone     00690000
    .Status:Sleep     00690007
    .Status:Poison    00690001
    .Status:Stop      00690000
    .Status:Static    00690000
    .Status:Paralyze  00690000
    .Status:Dizzy     00690008
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218B84
{
    .Status:Normal    00690003
    .Status:Poison    00690003
    .Status:Stop      00690000
    .Status:Stone     00690000
    .Status:Sleep     00690007
    .Status:Static    00690000
    .Status:Paralyze  00690000
    .Status:Dizzy     00690008
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218BC8
{
    .Status:Normal    00690004
    .Status:Poison    00690004
    .Status:Stop      00690000
    .Status:Stone     00690000
    .Status:Sleep     00690007
    .Status:Static    00690000
    .Status:Paralyze  00690000
    .Status:Dizzy     00690008
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218C0C
{
    .Status:Normal    00690005
    .Status:Poison    00690005
    .Status:Stop      00690000
    .Status:Stone     00690000
    .Status:Sleep     00690007
    .Status:Static    00690000
    .Status:Paralyze  00690000
    .Status:Dizzy     00690008
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218C50
{
    .Status:Normal    00690002
    .Status:End
}

#new:DefenseTable $DefenseTable_80218C5C
{
    .Element:Normal 00000003
    .Element:Shock  00000003
    .Element:Fire   00000063
    .Element:Ice    00000063
    .Element:Magic  00000063
    .Element:End
}

#new:StatusTable $StatusTable_80218C88
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink     75`
    .Status:Stop       75`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80218D34
{
    00020000 01000000 001800FF $IdleAnimations_80218B40 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00900001 02000000 F32800FF $IdleAnimations_80218B40 $DefenseTable_80218C5C 00000000 00000000 00F00000 00000000
    00124002 03000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00124002 04000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00124002 05000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00124002 06000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00124002 07000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00124002 08000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00124002 09000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
    00124002 0A000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
}

#new:Actor $Chomp
{
    % stats
    [Index]        A2b
    [Level]        14`b
    [MaxHP]         4`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80218C88
    % ai
    [PartsCount]   10`s
    [PartsTable]  $PartsTable_80218D34
    [Script]      $Script_Init_80218EC4
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  95`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         56`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80218EC4
{
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A7C4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80219108 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197C4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Set   *Var[0]  00000003
    Loop  00000008
        Call  SetPartSize   ( .Actor:Self *Var[0] 00000010 00000010 )
        Add   *Var[0]  00000001
    EndLoop
    Call  $Function_80218000 ( )
    Exec  $Script_8021972C
    Return
    End
}

#new:Script $Script_80218FCC
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  0035D000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetTargetOffset   ( .Actor:Self 00000002 00000000 00000018 )
        Call  8027D4C8      ( FFFFFF81 00000002 00000000 00000000 )
    Else
        Call  SetIdleGoalToHome ( .Actor:Self )
        Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFF3 00000028 )
        Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF2 )
    EndIf
    Return
    End
}

#new:Script $Script_Idle_80219108
{
    Label  0
    Loop
        ExecWait  $Script_80218FCC
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  0035D000
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218C0C )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleJumpToGoal    ( .Actor:Self 0000000B 00000001 )
    Loop
        ExecWait  $Script_80218FCC
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  0035D000
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleJumpToGoal    ( .Actor:Self 00000006 00000001 )
    Call  RandInt   ( 0000000A *Var[0] )
    Add   *Var[0]  00000001
    Wait  *Var[0]
    Loop
        ExecWait  $Script_80218FCC
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  0035D000
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218BC8 )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleJumpToGoal    ( .Actor:Self 0000000F 00000001 )
    Loop
        ExecWait  $Script_80218FCC
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  0035D000
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218C0C )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000014
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleJumpToGoal    ( .Actor:Self 0000000C 00000001 )
    Loop
        ExecWait  $Script_80218FCC
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  0035D000
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000000A
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleJumpToGoal    ( .Actor:Self 00000009 00000001 )
    Loop
        ExecWait  $Script_80218FCC
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  0035D000
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218B84 )
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleJumpToGoal    ( .Actor:Self 00000006 00000001 )
    Call  RandInt   ( 0000000A *Var[0] )
    Add   *Var[0]  0000000A
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_8021972C
{
    Label  0
    Wait  1`
    Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  ==  .True
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  $Function_8021825C    ( *Var[2] )
        Goto  0
    EndIf
    Label  1
    Return
    End
}

#new:Script $Script_HandleEvent_802197C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Set   *Var[F]  *Var[0]
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoNormalHit
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
            Wait  10`
            Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  $Script_8021A200
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Call  AddGoalPos    ( .Actor:Self 0000000F 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Call  AddGoalPos    ( .Actor:Self 00000005 00000000 00000000 )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690005
            ExecWait  $Script_8021B41C
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
            EndThread
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
                If  *Var[0]  &  00080000
                    Sub   *Var[1]  0000000A
                    Add   *Var[2]  00000004
                Else
                    Sub   *Var[1]  00000005
                    Add   *Var[2]  0000000B
                EndIf
                Call  SetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoAirLift
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690001
            ExecWait  DoImmune
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoShockHit
            Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
            Wait  10`
            Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoNormalHit
            Wait  10`
            Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  $Script_8021A200
            Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690001
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00151000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        If  *Var[1]  !=  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  FallToGoal    ( .Actor:Self 0000000B )
        EndIf
    EndIf
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A200
{
    Call  ActorExists   ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  ==  .False
        Goto  1
    EndIf
    Call  GetActorVar   ( .Actor:Enemy0 00000008 *Var[0] )
    If  *Var[0]  ==  .False
        Goto  1
    EndIf
    Label  0
    Call  SetAnimation  ( .Actor:Self 00000001 00690006 )
    Call  SetTargetActor        ( .Actor:Self .Actor:Enemy0 )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] 00000014 *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  JumpToGoal    ( .Actor:Self 00000000 .False .True .False )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
    EndThread
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self 00000096 *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000000 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000 % 80000
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalPos    ( .Actor:Self 00000082 *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000 % 80000
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Wait  15`
    Goto  A
    Label  1
    Call  SetAnimation  ( .Actor:Self 00000001 00690006 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self 00000087 *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000000 .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000 % 80000
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalPos    ( .Actor:Self 00000069 *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000 % 80000
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Wait  15`
    Label  A
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  00690001
    ExecWait  $Script_8021B41C
    Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
    Return
    End
}

#new:Script $Script_TakeTurn_8021A7C4
{
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Add   *Var[0]  0000002D
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
    Thread
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndIf
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00690005 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 0000010F )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySound     ( 0000010F )
            Call  SetAnimation  ( .Actor:Self 00000001 00690001 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000019
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Sub   *Var[0]  0000000F
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000004 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00690004 )
            Wait  20`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000014 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690001
            ExecWait  $Script_8021B41C
            Call  SetAnimation  ( .Actor:Self 00000001 00690001 )
            Call  HPBarToHome   ( .Actor:Self )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
            Call  EnableIdleScript      ( .Actor:Self FFFFFFFF )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00690001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000004
    Else
        Add   *Var[0]  0000000A
    EndIf
    Set   *Var[1]  0000001B
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Wait  2`
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  EnemyDamageTarget     ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[F]
        Default
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000014 )
            Call  SetAnimation  ( .Actor:Self 00000001 00690004 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Add   *Var[0]  0000001E
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Add   *Var[0]  00000014
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Sub   *Var[0]  0000000A
            Call  JumpToGoal        ( .Actor:Self 00000004 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00690001 )
            Wait  8`
            Call  UseCamPreset  ( 00000002 )
            If  *Var[F]  ==  0000000A % A
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
                Return
            EndIf
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00690001
            ExecWait  $Script_8021B41C
            Call  SetAnimation  ( .Actor:Self 00000001 00690001 )
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
    Call  HPBarToHome       ( .Actor:Self )
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021B41C
{
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Call  SetAnimation  ( .Actor:Self 00000001 00690004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    ExecWait  $Script_8021B50C
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_8021B50C
{
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[3]  <  *Var[0]
        Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Else
        Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndIf
    Label  0
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    If  *Var[3]  ==  *Var[0]
        Goto  A
    EndIf
    If  *Var[3]  <  *Var[0]
        Set   *Var[4]  *Var[0]
        Sub   *Var[4]  *Var[3]
        If  *Var[4]  <  0000001E
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
        Else
            Set   *Var[4]  *Var[3]
            Add   *Var[3]  0000001E
            Call  SetGoalPos        ( .Actor:Self *Var[3] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
        EndIf
    Else
        Set   *Var[4]  *Var[3]
        Sub   *Var[4]  *Var[0]
        If  *Var[4]  <  0000001E
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
        Else
            Sub   *Var[3]  0000001E
            Call  SetGoalPos        ( .Actor:Self *Var[3] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000006 .False .True .False )
            Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
            Thread
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00080000
                    Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
                EndIf
            EndThread
        EndIf
    EndIf
    Goto  0
    Label  A
    Return
    End
}

PADDING: 8021B954 to 8021B960 (004F2DF4 to 004F2E00)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021B960
{
    .Status:Normal    00680001
    .Status:Stone     00680000
    .Status:Sleep     0068000C
    .Status:Poison    00680001
    .Status:Stop      00680000
    .Status:Static    00680000
    .Status:Paralyze  00680000
    .Status:Paralyze  00680000
    .Status:Dizzy     0068000A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021B9AC
{
    .Status:Normal    0068000A
    .Status:Stone     00680007
    .Status:Sleep     0068000D
    .Status:Poison    0068000A
    .Status:Stop      00680007
    .Status:Static    0068000A
    .Status:Paralyze  0068000A
    .Status:Paralyze  0068000A
    .Status:Dizzy     0068000A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021B9F8
{
    .Status:Normal    00330006
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021BA04
{
    .Status:Normal    00680016
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021BA10
{
    .Status:Normal    00680016
    .Status:End
}

#new:DefenseTable $DefenseTable_8021BA1C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021BA28
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      20`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      30`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   30`
    .Status:Shrink     60`
    .Status:Stop       40`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_8021BAD4
{
    00020000 01000000 002800FF $IdleAnimations_8021B960 $DefenseTable_8021BA1C 00000000 00000000 00000000 00000000
    00800001 02000000 002700FF $IdleAnimations_8021B960 $DefenseTable_8021BA1C 00000000 00000000 FBF10000 00000000
    40120000 03000000 000000FF $IdleAnimations_8021B9F8 00000000 00000000 00000000 00000000 00000000
    40120000 04000000 000000FF $IdleAnimations_8021B9F8 00000000 00000000 00000000 00000000 00000000
    40120000 05000000 000000FF $IdleAnimations_8021B9F8 00000000 00000000 00000000 00000000 00000000
    00120001 06000000 000000FF $IdleAnimations_8021BA04 00000000 00000000 00000000 00000000 00000000
    00120001 07000000 000000FF $IdleAnimations_8021BA04 00000000 00000000 00000000 00000000 00000000
    00120001 08000000 000000FF $IdleAnimations_8021BA10 00000000 00000000 00000000 00000000 00000000
}

#new:Actor $Tutankoopa
{
    % stats
    [Index]        A1b
    [Level]        55`b
    [MaxHP]        30`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021BA28
    % ai
    [PartsCount]    8`s
    [PartsTable]  $PartsTable_8021BAD4
    [Script]      $Script_Init_8021BC1C
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  70`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]         56`b  45`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  35`b % dx dy
    [StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_8021BC1C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021CCD4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021BE28 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021BFD0 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F9C4 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  ForceHomePos  ( .Actor:Self 00000061 00000046 0000000F )
    Call  SetPartPos    ( .Actor:Self 00000003 00000046 00000046 00000003 )
    Call  SetPartPos    ( .Actor:Self 00000004 00000050 00000046 FFFFFFF9 )
    Call  SetPartPos    ( .Actor:Self 00000005 0000003C 00000046 FFFFFFF9 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000003 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000C 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021BE28
{
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00040000
                Call  SetTargetOffset       ( .Actor:Self 00000002 FFFFFFF6 00000016 )
                Call  8027D4C8  ( FFFFFF81 00000002 00000002 FFFFFFF8 )
                Call  $Function_80218690    ( FFFFFFE7 0000000F 00000000 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000002 00000000 00000027 )
                Call  8027D4C8  ( FFFFFF81 00000002 FFFFFFFB FFFFFFF1 )
                Call  $Function_80218690    ( FFFFFFEF 00000017 0000000B 00000020 )
            EndIf
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000002 FFFFFFF6 00000016 )
            Call  8027D4C8  ( FFFFFF81 00000002 00000002 FFFFFFF8 )
            Call  $Function_80218690    ( FFFFFFE7 0000000F 00000000 00000014 )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8021BFD0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680006
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680006
            ExecWait  DoNormalHit
            Call  GetActorVar   ( .Actor:Self 0000000D *Var[2] )
            If  *Var[2]  !=  00000000
                Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
                ExecWait  $Script_8021C974
            EndIf
        Case  ==  .Event:BeginFirstStrike % 38
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001
            Set   *Var[1]  00680012
            Set   *Var[2]  00680013
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001
            Set   *Var[1]  00680012
            Set   *Var[2]  00680013
            ExecWait  DoBurnHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680013
            ExecWait  $Script_8021FA54
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_8021C748
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0068000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680006
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680002
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[1] )
            If  *Var[1]  ==  00000001
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
                If  *Var[1]  !=  00000000
                    SetConst  *Var[1]  0068000A
                Else
                    SetConst  *Var[1]  00680001
                EndIf
            Else
                SetConst  *Var[1]  00680001
            EndIf
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            If  *Var[1]  ==  00000000
                If  *Var[E]  &  00000080
                    Call  GetActorVar   ( .Actor:Self 0000000B *Var[0] )
                    If  *Var[0]  ==  00000000
                        Call  SetActorVar   ( .Actor:Self 0000000B 00000001 )
                        Wait  60`
                    EndIf
                EndIf
            EndIf
        CaseOR  ==  .Event:ShockDeath % 26
        CaseOR  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680006
            ExecWait  $Script_8021FA54
            Return
        EndCaseGroup
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021C748
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680006
            ExecWait  $Script_8021FA54
            Return
        Case  ==  .Event:SpikeContact % 2A
            Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
        Case  ==  .Event:BurnContact % 2C
            Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680001
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00680001
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021C748
{
    Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Call  SetGoalPos    ( .Actor:Self 00000096 *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000000 .False .True .False )
    Sub   *Var[1]  00000014
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalPos    ( .Actor:Self 00000082 *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00680007 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 00680008 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
    Call  RunToGoal     ( .Actor:Self 0000000A .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
    Return
    End
}

#new:Script $Script_8021C974
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000001
        Return
    EndIf
    Call  8027D32C      ( FFFFFF81 )
    Call  PlaySoundAtActor      ( .Actor:Self 000020E3 )
    Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.9] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Add   *Var[2]  00000018
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
    Thread
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.5] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
        Wait  1`
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndThread
    Call  StartRumble   ( 00000001 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00680007 )
    Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000028
    Call  PlayEffect    ( ~FX:Stars:Orbiting *Var[0] *Var[1] *Var[2] 00000014 00000004 *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0068000A )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Wait  30`
    Call  RemoveEffect  ( *Var[F] )
    Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
    Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B9AC )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_TakeTurn_8021CCD4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Label  0
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
        If  *Var[0]  ==  .False
            Call  GetActorVar   ( .Actor:Self 0000000C *Var[0] )
            If  *Var[0]  ==  .False
                ExecWait  $Script_8021E9C8
                Call  EnableIdleScript  ( .Actor:Self 00000001 )
                Call  UseIdleAnimation  ( .Actor:Self .True )
                Return
            Else
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Self 0000000C *Var[0] )
            EndIf
        EndIf
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00080000
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000000
                Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                If  *Var[0]  ==  00000000
                    ExecWait  $Script_8021D81C
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Else
                    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                    If  *Var[0]  !&  00080000
                        ExecWait  $Script_8021D04C
                        Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                    Else
                        ExecWait  $Script_8021D81C
                        Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
                    EndIf
                EndIf
            Default
                Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
                ExecWait  $Script_8021D81C
        EndSwitch
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    Else
        Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
        Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
        ExecWait  $Script_8021F80C
        ExecWait  $Script_8021F5E8
        Goto  0
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    Return
    End
}

#new:Script $Script_8021D04C
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000001
            Set   *Var[9]  00000005
        Case  ==  00000002
            Set   *Var[9]  00000004
        Case  ==  00000003
            Set   *Var[9]  00000003
        Default
            Return
    EndSwitch
    Sub   *Var[0]  00000001
    Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Call  UseCamPreset  ( 0000000F )
    Call  SetBattleCamZoom      ( 00000140 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  8024EB84      ( FFFFFF81 *Var[9] )
    Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
    Call  GetPartOffset ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Sub   *Var[2]  00000003
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 0000000A .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00680004 )
    Wait  7`
    Call  GetPartOffset ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Add   *Var[1]  00000028
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[0.8] )
    Call  JumpPartTo    ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] 00000005 .True )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self *Var[9] 00330005 )
    Call  PlaySoundAtActor      ( .Actor:Self 000002F9 )
    Call  UseCamPreset  ( 00000002 )
    Call  EnemyTestTarget       ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation      ( .Actor:Self 00000001 00680005 )
            Call  SetPartMoveSpeed  ( .Actor:Self *Var[9] *Fixed[14.0] )
            Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[0.2] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Set   *Var[1]  FFFFFFFB
            Call  FlyPartTo ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
            Call  UseCamPreset      ( 00000002 )
            Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000041
            Set   *Var[1]  FFFFFFFB
            Call  SetPartMoveSpeed  ( .Actor:Self *Var[9] *Fixed[6.0] )
            Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] 00000000 0000000F .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self *Var[9] 00000001 .True )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
            Call  RunToGoal     ( .Actor:Self 0000000A .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
            Return
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00680005 )
    Call  SetPartMoveSpeed  ( .Actor:Self *Var[9] *Fixed[14.0] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[0.2] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[0.2] )
    Call  FlyPartTo ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[8] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Call  UseCamPreset      ( 00000002 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000037
    Set   *Var[1]  00000000
    Call  SetPartMoveSpeed  ( .Actor:Self *Var[9] *Fixed[6.0] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[9] *Fixed[0.1] )
    Call  FlyPartTo ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
    Call  SetPartMoveSpeed  ( .Actor:Self *Var[9] *Fixed[4.0] )
    Sub   *Var[0]  00000014
    Call  FlyPartTo ( .Actor:Self *Var[9] *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
    Call  SetPartFlagBits   ( .Actor:Self *Var[9] 00000001 .True )
    Wait  19`
    If  *Var[8]  ==  0000000A % A
        Return
    EndIf
    Call  UseCamPreset  ( 00000002 )
    Call  YieldTurn ( )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
    Call  RunToGoal     ( .Actor:Self 0000000A .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
    Return
    End
}

#new:Script $Script_8021D81C
{
    Call  UseCamPreset      ( 0000000F )
    Call  SetBattleCamZoom  ( 0000015E )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000028 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetActorVar       ( .Actor:Self 00000006 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset  ( 0000000D )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver     ( 00000014 )
        Wait  20`
        Call  ActorSpeak    ( 000D00E5 .Actor:Self 00000001 00680003 00680003 ) % Bleah heh heh heh... I'm a magical genius! Watch,  ...
        Call  UseCamPreset  ( 00000002 )
        Call  UseCamPreset  ( 00000002 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020E1 )
    Call  SetAnimation  ( .Actor:Self 00000001 00680003 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Call  PlayEffect    ( ~FX:Hieroglyphics *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000046 )
    Call  PlaySound     ( 000020E7 )
    Call  PlayEffect    ( ~FX:ChompDrop 00000000 0000003C 00000000 *Fixed[0.2] 00000000 *Fixed[1.4] 000000FF *Fixed[0.1] 00000096 00000000 00000000 00000000 )
    Wait  15`
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  !&  0435D000
        Call  UseIdleAnimation  ( .Actor:Player .False )
        Call  SetAnimation  ( .Actor:Player 00000000 0001002B )
        Wait  49`
        Call  PlaySound     ( 000020E9 )
        Wait  5`
        Call  SetAnimation  ( .Actor:Self 00000001 00680005 )
        Wait  8`
        Call  SetAnimation  ( .Actor:Player 00000000 00010014 )
        Wait  5`
        Call  StartRumble   ( 0000000A )
        Call  PlaySound     ( 000020EA )
        Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[4.0] )
        Wait  20`
        Call  SetAnimation  ( .Actor:Player 00000000 00010028 )
        Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000014
        Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
        Call  PlaySound     ( 000020E8 )
    Else
        Wait  50`
        Call  PlaySound ( 000020E9 )
        Wait  18`
        Call  StartRumble   ( 0000000A )
        Call  PlaySound ( 000020EA )
        Wait  20`
        Call  PlaySound ( 000020E8 )
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000006 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetActorVar   ( .Actor:Self 00000006 00000001 )
            ExecWait  $Script_8021E008
        Case  ==  00000001
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            Call  SetActorVar   ( .Actor:Self 00000006 00000002 )
            If  *Var[0]  >  00000002
                ExecWait  $Script_8021DDE8
            Else
                ExecWait  $Script_8021E008
            EndIf
        Default
            Call  RandInt   ( 00000002 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                If  *Var[0]  >  00000002
                    ExecWait  $Script_8021DDE8
                Else
                    ExecWait  $Script_8021E008
                EndIf
            Else
                ExecWait  $Script_8021E008
            EndIf
    EndSwitch
    Return
    End
}

#new:Script $Script_8021DDE8
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Enemy0 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  000000AA
    Call  SetPartPos        ( .Actor:Self 00000008 *Var[0] *Var[3] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .False )
    Call  SetAnimation      ( .Actor:Self 00000008 00680016 )
    Call  PlaySound ( 000020EB )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000008 *Fixed[8.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000008 *Fixed[0.3] )
    Call  FallPartTo        ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] 00000014 )
    Thread
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .False )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .True )
            Wait  1`
        EndLoop
    EndThread
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  !&  0035D000
        Call  SetAnimation  ( .Actor:Player 00000000 00010032 )
    EndIf
    Call  SetActorVar       ( .Actor:Self 0000000D 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000020 )
    Return
    End
}

#new:Script $Script_8021E008
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Loop  00000006
                    Call  RandInt   ( 00000078 *Var[0] )
                    Sub   *Var[0]  00000096
                    Call  RandInt   ( 0000005A *Var[1] )
                    Sub   *Var[0]  00000028
                    Call  PlaySound ( 000020EB )
                    Call  $Function_8021875C    ( *Var[0] 00000000 *Var[1] )
                    Call  RandInt   ( 00000005 *Var[0] )
                    Add   *Var[0]  00000005
                    Wait  *Var[0]
                EndLoop
            EndThread
            Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
            Call  EnemyTestTarget   ( .Actor:Self *Var[B] ~Flags:DamageType:0 00000000 00000001 00000010 )
            Switch  *Var[B]
                Case  ==  .HitResult:Miss % 6
                    Return
                Default
                    Call  8026BF48  ( 00000001 )
                    Thread
                        Call  PlaySound ( 000020EB )
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Sub   *Var[0]  00000005
                        Set   *Var[1]  00000000
                        Set   *Var[3]  000000AA
                        Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[3] *Var[2] )
                        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
                        Call  SetAnimation      ( .Actor:Self 00000006 00680016 )
                        Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[8.0] )
                        Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.3] )
                        Call  FallPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000014 )
                        Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
                        If  *Var[A]  ==  .HitResult:Lucky % 5
                            Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                        EndIf
                    EndThread
                    Wait  25`
                    Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  GetGoalPos        ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Sub   *Var[4]  00000005
                    Add   *Var[5]  00000005
                    Set   *Var[7]  000000AA
                    Call  SetPartPos        ( .Actor:Self 00000007 *Var[4] *Var[7] *Var[6] )
                    Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .False )
                    Call  SetAnimation      ( .Actor:Self 00000007 00680016 )
                    Call  PlaySound ( 000020EB )
                    Call  SetPartMoveSpeed  ( .Actor:Self 00000007 *Fixed[8.0] )
                    Call  SetPartJumpGravity    ( .Actor:Self 00000007 *Fixed[0.3] )
                    Call  FallPartTo        ( .Actor:Self 00000007 *Var[4] *Var[5] *Var[6] 00000014 )
                    Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
                    Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
                    Wait  20`
                    Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .True )
                    Call  8026BF48  ( 00000000 )
                    Return
            EndSwitch
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Loop  00000006
            Call  RandInt   ( 00000078 *Var[0] )
            Sub   *Var[0]  00000096
            Call  RandInt   ( 0000005A *Var[1] )
            Sub   *Var[0]  00000028
            Call  PlaySound ( 000020EB )
            Call  $Function_8021875C    ( *Var[0] 00000000 *Var[1] )
            Call  RandInt   ( 00000005 *Var[0] )
            Add   *Var[0]  00000005
            Wait  *Var[0]
        EndLoop
    EndThread
    Call  8026BF48  ( 00000001 )
    Thread
        Wait  25`
        Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[4] *Var[5] *Var[6] )
        Sub   *Var[4]  00000005
        Add   *Var[5]  00000005
        Set   *Var[7]  000000AA
        Call  SetPartPos        ( .Actor:Self 00000007 *Var[4] *Var[7] *Var[6] )
        Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .False )
        Call  SetAnimation      ( .Actor:Self 00000007 00680016 )
        Call  PlaySound ( 000020EB )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000007 *Fixed[8.0] )
        Call  SetPartJumpGravity    ( .Actor:Self 00000007 *Fixed[0.3] )
        Call  FallPartTo        ( .Actor:Self 00000007 *Var[4] *Var[5] *Var[6] 00000014 )
        Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
        Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
        Wait  20`
        Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .True )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  PlaySound ( 000020EB )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Add   *Var[1]  00000005
    Set   *Var[3]  000000AA
    Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[3] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
    Call  SetAnimation      ( .Actor:Self 00000006 00680016 )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[8.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.3] )
    Call  FallPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000014 )
    Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
    Wait  2`
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Wait  19`
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
    If  *Var[0]  ==  0000000A % A
        Return
    EndIf
    Return
    End
}

#new:Vector3D $Vector3D_8021E9A0
{
    190` 0` 0`
}

#new:SpecialFormation $SpecialFormation_8021E9AC
{
    $Chomp $Vector3D_8021E9A0 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_8021E9C8
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    Call  GetActorVar       ( .Actor:Self 00000003 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000D )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  SetAnimation      ( .Actor:Self 00000001 00680003 )
        Call  ActorSpeak        ( 000D00E6 .Actor:Self 00000001 00680003 00680003 ) % Bleah heh heh heh... Come, Chomp! Come! Bite this  ...
    Else
        Call  UseCamPreset      ( 0000000D )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  SetAnimation      ( .Actor:Self 00000001 00680003 )
        Call  ActorSpeak        ( 000D00E7 .Actor:Self 00000001 00680003 00680003 ) % Come!! Chomp!!
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000D )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
        Call  SetBattleCamZoom  ( 000000E1 )
        Call  SetBattleCamOffsetZ   ( FFFFFFE2 )
        Call  MoveBattleCamOver ( 00000028 )
    Else
        Call  UseCamPreset      ( 0000000D )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
        Call  SetBattleCamZoom  ( 000000C8 )
        Call  SetBattleCamOffsetZ   ( 00000023 )
        Call  MoveBattleCamOver ( 00000028 )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Thread
        Label  0
        Call  StartRumble   ( 00000001 )
        Call  ShakeCam      ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Wait  1`
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  <  0000003C
            Goto  0
        EndIf
    EndThread
    Call  PlaySound     ( 0000026B )
    Label  A
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[D] )
    Call  TranslateModel    ( 0000001F 00000000 *Var[D] 00000000 )
    Add   *Var[D]  00000001
    Call  SetActorVar   ( .Actor:Self 00000005 *Var[D] )
    Wait  1`
    If  *Var[D]  <  0000003C
        Goto  A
    EndIf
    Call  StopSound     ( 0000026B )
    Wait  10`
    Call  SummonEnemy   ( $SpecialFormation_8021E9AC 00000000 )
    Set   *Var[B]  *Var[0]
    Set   *Var[0]  000000A5
    Set   *Var[1]  00000000
    Set   *Var[2]  FFFFFFE2
    Call  SetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  SetActorDispOffset    ( *Var[B] 00000000 00000000 00000000 )
    Call  UseIdleAnimation      ( *Var[B] .False )
    Call  EnableIdleScript      ( *Var[B] 00000000 )
    Call  SetAnimation  ( *Var[B] 00000001 00690005 )
    Call  SetActorSpeed ( *Var[B] *Fixed[6.0] )
    Call  SetActorJumpGravity   ( *Var[B] *Fixed[0.8] )
    Set   *Var[0]  0000005A
    Set   *Var[1]  00000000
    Set   *Var[2]  FFFFFFE2
    Set   *Var[3]  00000008
    Set   *Var[4]  0000001E
    ExecWait  $Script_8021F42C
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[5] )
    If  *Var[5]  ==  00000000
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamZoom  ( 000000A0 )
        Call  GetActorPos       ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  0000003C
        Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
        Call  MoveBattleCamOver ( 00000008 )
        Loop  00000003
            Call  UseCamPreset      ( 00000013 )
            Call  SetBattleCamZoom  ( 00000096 )
            Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
            Call  MoveBattleCamOver ( 00000005 )
            Wait  4`
            Call  PlaySoundAtActor  ( .Actor:Self 00002061 )
            Call  UseCamPreset      ( 00000013 )
            Call  SetBattleCamZoom  ( 000000C8 )
            Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
            Call  MoveBattleCamOver ( 00000005 )
            Wait  4`
        EndLoop
    Else
        Wait  8`
        Call  SetGoalPos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( *Var[B] 00000008 .False .True .False )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndThread
        Call  SetGoalPos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( *Var[B] 00000008 .False .True .False )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndThread
        Wait  8`
    EndIf
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver     ( 0000001E )
    Call  SetActorSpeed ( *Var[B] *Fixed[3.0] )
    Call  SetActorJumpGravity   ( *Var[B] *Fixed[0.8] )
    Set   *Var[0]  00000014
    Set   *Var[1]  00000000
    Set   *Var[2]  00000014
    Set   *Var[3]  00000008
    Set   *Var[4]  00000014
    ExecWait  $Script_8021F42C
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( *Var[B] 00000002 *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[B] )
    Call  SetActorSpeed ( *Var[B] *Fixed[6.0] )
    Call  SetActorJumpGravity   ( *Var[B] *Fixed[0.8] )
    Call  EnableIdleScript      ( *Var[B] 00000001 )
    Call  UseIdleAnimation      ( *Var[B] .True )
    Call  SetActorVar   ( .Actor:Self 00000005 0000003C )
    Thread
        Label  28
        Call  StartRumble   ( 00000001 )
        Call  ShakeCam      ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
        Wait  1`
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  !=  00000000
            Goto  28
        EndIf
    EndThread
    Call  PlaySound     ( 0000026B )
    Label  32
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[D] )
    Call  TranslateModel    ( 0000001F 00000000 *Var[D] 00000000 )
    Sub   *Var[D]  00000001
    Call  SetActorVar   ( .Actor:Self 00000005 *Var[D] )
    Wait  1`
    If  *Var[D]  >  00000000
        Goto  32
    EndIf
    Call  StopSound ( 0000026B )
    Call  PlaySound ( 0000026C )
    Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[0.5] )
    Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
    Return
    End
}

#new:Script $Script_8021F42C
{
    Label  14
    Call  GetActorPos   ( *Var[B] *Var[5] *Var[6] *Var[7] )
    If  *Var[5]  ==  *Var[0]
        Goto  1E
    EndIf
    Set   *Var[6]  *Var[5]
    Sub   *Var[6]  *Var[0]
    If  *Var[6]  <  *Var[4]
        Call  SetGoalPos        ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal        ( *Var[B] *Var[3] .False .True .False )
        Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndThread
    Else
        Sub   *Var[5]  *Var[4]
        Call  SetGoalPos        ( *Var[B] *Var[5] *Var[1] *Var[2] )
        Call  JumpToGoal        ( *Var[B] *Var[3] .False .True .False )
        Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000001 *Fixed[0.5] )
        EndThread
    EndIf
    Goto  14
    Label  1E
    Return
    End
}

#new:Script $Script_8021F5E8
{
    Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
    Call  UseCamPreset  ( 0000000D )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E1 )
    Call  SetAnimation  ( .Actor:Self 00000001 00680008 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Call  PlayEffect    ( ~FX:Hieroglyphics *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  45`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000003C )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E6 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
    Call  SetGoalPos    ( .Actor:Self 00000061 00000046 0000000F )
    Call  JumpToGoal    ( .Actor:Self 0000002D .False .True .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000003B4 )
    EndThread
    Wait  5`
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021F80C
{
    Call  SetAnimation  ( .Actor:Self 00000001 00680008 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000003B4 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00680001 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B960 )
    Wait  10`
    Call  GetActorVar       ( .Actor:Self 00000004 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000D )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  ActorSpeak        ( 000D00E4 .Actor:Self 00000001 0068000B 00680001 ) % Ouch! What are you doing? That hurt! I'm king of t ...
        Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
    EndIf
    Return
    End
}

#new:Script $Script_NextTurn_8021F9C4
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  SetActorVar   ( .Actor:Self 0000000A 00000001 )
            EndSwitch
    EndSwitch
    Return
    End
}

#new:Script $Script_8021FA54
{
    Call  ActorExists   ( .Actor:Enemy1 *Var[2] )
    If  *Var[2]  !=  .False
        Call  GetActorHP    ( .Actor:Enemy1 *Var[2] )
        If  *Var[2]  !=  .False
            Thread
                Call  8027D32C  ( 00000201 )
                Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
                Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
                Call  SetAnimation      ( .Actor:Enemy1 00000001 00690006 )
                Wait  10`
                Set   *Var[2]  00000000
                Loop  00000018
                    Call  SetActorYaw   ( .Actor:Enemy1 *Var[2] )
                    Add   *Var[2]  0000001E
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Enemy1 00000000 )
                Call  GetActorPos   ( .Actor:Enemy1 *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A
                Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Enemy1 .Sound:Death )
                Set   *Var[3]  00000000
                Loop  0000000C
                    Call  SetActorRotation  ( .Actor:Enemy1 *Var[3] 00000000 00000000 )
                    Add   *Var[3]  00000008
                    Wait  1`
                EndLoop
                Call  RemoveActor   ( .Actor:Enemy1 )
            EndThread
        EndIf
    EndIf
    ExecWait  Collapse
    Label  0
    Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  !=  .False
        Wait  1`
        Goto  0
    EndIf
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

PADDING: 8021FCEC to 8021FCF0 (004F718C to 004F7190)
00000000

#new:Script $Script_BeforeBattle_8021FCF0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021FD2C
{
    Return
    End
}

#new:Stage $Stage_8021FD3C
{
    $ASCII_80220500  % isk_tex
    $ASCII_802204F0  % isk_bt00_shape
    00000000
    $Script_BeforeBattle_8021FCF0
    $Script_AfterBattle_8021FD2C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021FD64 to 8021FD70 (004F7204 to 004F7210)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8021FD70
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021FDAC
{
    Return
    End
}

#new:Stage $Stage_8021FDBC
{
    $ASCII_80220528  % isk_tex
    $ASCII_80220518  % isk_bt01_shape
    $ASCII_80220508  % isk_bt01_hit
    $Script_BeforeBattle_8021FD70
    $Script_AfterBattle_8021FDAC
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8021FDE4 to 8021FDF0 (004F7284 to 004F7290)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8021FDF0
{
    Call  SetSpriteShading  ( 000C0000 )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021FE2C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021FE3C
{
    ~Model:isk_bt02:o398
    ~Model:isk_bt02:o397
    ~Model:isk_bt02:o399
    00000000
}

#new:Stage $Stage_8021FE4C
{
    $ASCII_80220550  % isk_tex
    $ASCII_80220540  % isk_bt02_shape
    $ASCII_80220530  % isk_bt02_hit
    $Script_BeforeBattle_8021FDF0
    $Script_AfterBattle_8021FE2C
    00000000
    $ForegroundModelList_8021FE3C
    00000000
    00000000
    00000000
}

PADDING: 8021FE74 to 8021FE80 (004F7314 to 004F7320)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8021FE80
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:isk_bt02:o365 .False )
    Call  EnableModel   ( ~Model:isk_bt02:o366 .False )
    Call  EnableModel   ( ~Model:isk_bt02:o367 .False )
    Call  EnableModel   ( ~Model:isk_bt02:o389 .False )
    Call  EnableModel   ( ~Model:isk_bt02:o390 .False )
    Call  EnableModel   ( ~Model:isk_bt02:o391 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_8021FF34
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021FF44
{
    ~Model:isk_bt02:o398
    ~Model:isk_bt02:o397
    ~Model:isk_bt02:o399
    00000000
}

#new:Stage $Stage_8021FF54
{
    $ASCII_80220578  % isk_tex
    $ASCII_80220568  % isk_bt02_shape
    $ASCII_80220558  % isk_bt02_hit
    $Script_BeforeBattle_8021FE80
    $Script_AfterBattle_8021FF34
    00000000
    $ForegroundModelList_8021FF44
    00000000
    00000000
    00000000
}

PADDING: 8021FF7C to 8021FF80 (004F741C to 004F7420)
00000000

#new:Script $Script_BeforeBattle_8021FF80
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:isk_bt02:kai2 .False )
    Call  EnableModel   ( ~Model:isk_bt02:kai1 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_8021FFE4
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021FFF4
{
    ~Model:isk_bt02:o398
    ~Model:isk_bt02:o397
    ~Model:isk_bt02:o399
    00000000
}

#new:Stage $Stage_80220004
{
    $ASCII_802205A0  % isk_tex
    $ASCII_80220590  % isk_bt02_shape
    $ASCII_80220580  % isk_bt02_hit
    $Script_BeforeBattle_8021FF80
    $Script_AfterBattle_8021FFE4
    00000000
    $ForegroundModelList_8021FFF4
    00000000
    00000000
    00000000
}

PADDING: 8022002C to 80220030 (004F74CC to 004F74D0)
00000000

#new:Script $Script_BeforeBattle_80220030
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022006C
{
    Return
    End
}

#new:Stage $Stage_8022007C
{
    $ASCII_802205D0  % isk_tex
    $ASCII_802205C0  % isk_bt03_shape
    $ASCII_802205B0  % isk_bt03_hit
    $Script_BeforeBattle_80220030
    $Script_AfterBattle_8022006C
    $ASCII_802205A8  % sbk3_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802200A4 to 802200B0 (004F7544 to 004F7550)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_802200B0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_802200EC
{
    Return
    End
}

#new:Stage $Stage_802200FC
{
    $ASCII_802205F8  % isk_tex
    $ASCII_802205E8  % isk_bt03_shape
    $ASCII_802205D8  % isk_bt03_hit
    $Script_BeforeBattle_802200B0
    $Script_AfterBattle_802200EC
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80220124 to 80220130 (004F75C4 to 004F75D0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80220130
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  $Function_80218850 ( )
    Return
    End
}

#new:Script $Script_AfterBattle_80220178
{
    Call  $Function_802188E4 ( )
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80220194
{
    ~Model:isk_bt04:o500
    ~Model:isk_bt04:o501
    00000000
}

#new:Stage $Stage_802201A0
{
    $ASCII_80220620  % isk_tex
    $ASCII_80220610  % isk_bt04_shape
    $ASCII_80220600  % isk_bt04_hit
    $Script_BeforeBattle_80220130
    $Script_AfterBattle_80220178
    00000000
    $ForegroundModelList_80220194
    00000000
    00000000
    00000000
}

PADDING: 802201C8 to 802201D0 (004F7668 to 004F7670)
00000000 00000000

#new:Script $Script_BeforeBattle_802201D0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  $Function_80218920 ( )
    Return
    End
}

#new:Script $Script_AfterBattle_80220218
{
    Call  $Function_802189B0 ( )
    Return
    End
}

#new:Stage $Stage_80220234
{
    $ASCII_80220648  % isk_tex
    $ASCII_80220638  % isk_bt05_shape
    $ASCII_80220628  % isk_bt05_hit
    $Script_BeforeBattle_802201D0
    $Script_AfterBattle_80220218
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022025C to 80220260 (004F76FC to 004F7700)
00000000

#new:Script $Script_BeforeBattle_80220260
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  $Function_802189F0 ( )
    Return
    End
}

#new:Script $Script_AfterBattle_802202A8
{
    Call  $Function_80218A38 ( )
    Return
    End
}

#new:Stage $Stage_802202C4
{
    $ASCII_80220670  % isk_tex
    $ASCII_80220660  % isk_bt06_shape
    $ASCII_80220650  % isk_bt06_hit
    $Script_BeforeBattle_80220260
    $Script_AfterBattle_802202A8
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802202EC to 802202F0 (004F778C to 004F7790)
00000000

#new:Script $Script_BeforeBattle_802202F0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  $Function_80218A60 ( )
    Call  EnableModel       ( ~Model:isk_bt06:kesu .False )
    Return
    End
}

#new:Script $Script_AfterBattle_8022034C
{
    Call  $Function_80218AA8 ( )
    Return
    End
}

#new:Stage $Stage_80220368
{
    $ASCII_80220698  % isk_tex
    $ASCII_80220688  % isk_bt06_shape
    $ASCII_80220678  % isk_bt06_hit
    $Script_BeforeBattle_802202F0
    $Script_AfterBattle_8022034C
    00000000
    00000000
    00000000
    00000000
    00000000
}

#new:Script $Script_BeforeBattle_80220390
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  $Function_80218AD0 ( )
    Return
    End
}

#new:Script $Script_AfterBattle_802203D8
{
    Call  $Function_80218B18 ( )
    Return
    End
}

#new:Stage $Stage_802203F4
{
    $ASCII_802206C0  % isk_tex
    $ASCII_802206B0  % isk_bt07_shape
    $ASCII_802206A0  % isk_bt07_hit
    $Script_BeforeBattle_80220390
    $Script_AfterBattle_802203D8
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022041C to 80220420 (004F78BC to 004F78C0)
00000000

#new:Vector3D $Vector3D_80220420
{
    97` 70` 17`
}

#new:Formation $Formation_00
{
    $Tutankoopa $Vector3D_80220420 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_802206C8 00000001 $Formation_00 $Stage_8021FDBC 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80220734 $Stage_8021FD3C
    $ASCII_8022072C $Stage_8021FDBC
    $ASCII_80220724 $Stage_8021FE4C
    $ASCII_8022071C $Stage_8021FF54
    $ASCII_80220714 $Stage_80220004
    $ASCII_8022070C $Stage_8022007C
    $ASCII_80220704 $Stage_802200FC
    $ASCII_802206FC $Stage_802201A0
    $ASCII_802206F4 $Stage_80220234
    $ASCII_802206EC $Stage_802202C4
    $ASCII_802206E4 $Stage_80220368
    $ASCII_802206DC $Stage_802203F4
    00000000 00000000
}

PADDING: 802204D8 to 802204E0 (004F7978 to 004F7980)
00000000 00000000

#new:ConstDouble $ConstDouble_802204E0
{
    0.200000d
}

PADDING: 802204E8 to 802204F0 (004F7988 to 004F7990)
00000000 00000000

#new:ASCII $ASCII_802204F0
{
    "isk_bt00_shape"
}

#new:ASCII $ASCII_80220500
{
    "isk_tex"
}

#new:ASCII $ASCII_80220508
{
    "isk_bt01_hit"
}

#new:ASCII $ASCII_80220518
{
    "isk_bt01_shape"
}

#new:ASCII $ASCII_80220528
{
    "isk_tex"
}

#new:ASCII $ASCII_80220530
{
    "isk_bt02_hit"
}

#new:ASCII $ASCII_80220540
{
    "isk_bt02_shape"
}

#new:ASCII $ASCII_80220550
{
    "isk_tex"
}

#new:ASCII $ASCII_80220558
{
    "isk_bt02_hit"
}

#new:ASCII $ASCII_80220568
{
    "isk_bt02_shape"
}

#new:ASCII $ASCII_80220578
{
    "isk_tex"
}

#new:ASCII $ASCII_80220580
{
    "isk_bt02_hit"
}

#new:ASCII $ASCII_80220590
{
    "isk_bt02_shape"
}

#new:ASCII $ASCII_802205A0
{
    "isk_tex"
}

#new:ASCII $ASCII_802205A8
{
    "sbk3_bg"
}

#new:ASCII $ASCII_802205B0
{
    "isk_bt03_hit"
}

#new:ASCII $ASCII_802205C0
{
    "isk_bt03_shape"
}

#new:ASCII $ASCII_802205D0
{
    "isk_tex"
}

#new:ASCII $ASCII_802205D8
{
    "isk_bt03_hit"
}

#new:ASCII $ASCII_802205E8
{
    "isk_bt03_shape"
}

#new:ASCII $ASCII_802205F8
{
    "isk_tex"
}

#new:ASCII $ASCII_80220600
{
    "isk_bt04_hit"
}

#new:ASCII $ASCII_80220610
{
    "isk_bt04_shape"
}

#new:ASCII $ASCII_80220620
{
    "isk_tex"
}

#new:ASCII $ASCII_80220628
{
    "isk_bt05_hit"
}

#new:ASCII $ASCII_80220638
{
    "isk_bt05_shape"
}

#new:ASCII $ASCII_80220648
{
    "isk_tex"
}

#new:ASCII $ASCII_80220650
{
    "isk_bt06_hit"
}

#new:ASCII $ASCII_80220660
{
    "isk_bt06_shape"
}

#new:ASCII $ASCII_80220670
{
    "isk_tex"
}

#new:ASCII $ASCII_80220678
{
    "isk_bt06_hit"
}

#new:ASCII $ASCII_80220688
{
    "isk_bt06_shape"
}

#new:ASCII $ASCII_80220698
{
    "isk_tex"
}

#new:ASCII $ASCII_802206A0
{
    "isk_bt07_hit"
}

#new:ASCII $ASCII_802206B0
{
    "isk_bt07_shape"
}

#new:ASCII $ASCII_802206C0
{
    "isk_tex"
}

#new:SJIS $SJIS_802206C8
{
    カーメン　ワンワン % ka-men wanwan
}

#new:ASCII $ASCII_802206DC
{
    "isk_07"
}

#new:ASCII $ASCII_802206E4
{
    "isk_06b"
}

#new:ASCII $ASCII_802206EC
{
    "isk_06"
}

#new:ASCII $ASCII_802206F4
{
    "isk_05"
}

#new:ASCII $ASCII_802206FC
{
    "isk_04"
}

#new:ASCII $ASCII_80220704
{
    "isk_03b"
}

#new:ASCII $ASCII_8022070C
{
    "isk_03"
}

#new:ASCII $ASCII_80220714
{
    "isk_02c"
}

#new:ASCII $ASCII_8022071C
{
    "isk_02b"
}

#new:ASCII $ASCII_80220724
{
    "isk_02"
}

#new:ASCII $ASCII_8022072C
{
    "isk_01"
}

#new:ASCII $ASCII_80220734
{
    "isk_00"
}

PADDING: 8022073C to 80220740 (004F7BDC to 004F7BE0)
00000000

