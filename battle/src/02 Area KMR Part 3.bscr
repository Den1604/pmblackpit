% Script File: 02 Area KMR Part 3.bscr
% Decoded from: 447440 to 464490 (02 Area KMR Part 3)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021B030
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021B030)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021B030)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218000
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802182D8
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021E61C
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021E61C)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021E61C)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218464
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_802182D8
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218558 to 80218560 (00447998 to 004479A0)
00000000 00000000

#new:Function $Function_80218560
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802185B8
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_80221BBC
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_80221BBC)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_80221BBC)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218744
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_802185B8
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218838 to 80218840 (00447C78 to 00447C80)
00000000 00000000

#new:Function $Function_80218840
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021890C to 80218910 (00447D4C to 00447D50)
00000000

#new:Function $Function_80218910
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802189DC
{
	ADDIU     SP, SP, FFD0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	LIA       A0, 80104A28
	JAL       ~Func:create_icon
	MOV.S     F20, F0
	COPY      S1, V0
	TRUNC.W.S F2, F22
	MFC1      A1, F2
	TRUNC.W.S F2, F20
	MFC1      A2, F2
	JAL       ~Func:set_icon_render_pos
	COPY      A0, S1
	LUI       A1, 3FC0
	JAL       80144C20
	COPY      A0, S1
	COPY      A0, S1
	LIO       A1, 00200002
	JAL       ~Func:clear_icon_flags
	RESERVED
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, S1
	JAL       ~Func:load_tattle_flags
	ADDIU     A0, R0, 8B
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80218AA4
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	JAL       ~Func:free_icon
	COPY      A0, V0
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218AD0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218B9C
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8022FEC8
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8022FEC8)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8022FEC8)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218D28
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218B9C
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HEURISTIC
#new:Function $Function_80218E1C
{
	ADDIU     SP, SP, FFD0
	SW        S6, 28 (SP)
	COPY      S6, A0
	SW        RA, 2C (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S5, C (S6)
	LW        A1, 0 (S5)
	JAL       ~Func:get_variable
	ADDIU     S5, S5, 4
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S5)
	ADDIU     S5, S5, 4
	COPY      A0, S6
	JAL       ~Func:get_variable
	COPY      S4, V0
	COPY      A0, S6
	LW        A1, 0 (S5)
	JAL       ~Func:get_variable
	COPY      S1, V0
	SUBU      S3, S3, S4
	MTC1      S3, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F4, F4, F4
	NOP
	SUBU      S2, S2, S1
	MTC1      S2, F2
	NOP
	CVT.S.W   F2, F2
	MUL.S     F2, F2, F2
	NOP
	SUBU      S0, S0, V0
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F4, F4, F2
	ADD.S     F12, F4, F0
	SQRT.S    F0, F12
	C.EQ.S    F0, F0
	NOP
	BC1T      .o104
	ADDIU     S5, S5, 4
	JAL       ~Func:sqrtf
	NOP
	.o104
	LW        A1, 0 (S5)
	TRUNC.W.S F6, F0
	MFC1      A2, F6
	JAL       ~Func:set_variable
	COPY      A0, S6
	LW        RA, 2C (SP)
	LW        S6, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80218F60
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	CLEAR     A0
	ADDIU     V0, R0, 1
	COPY      A1, A0
	COPY      A2, A0
	LAW       V1, 801512F0
	COPY      A3, A0
	JAL       ~Func:set_background_color_blend
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218FA4
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_background_color_blend
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80218FDC to 80218FE0 (0044841C to 00448420)
00000000

#new:Function $Function_80218FE0
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80219248 to 80219250 (00448688 to 00448690)
00000000 00000000

#new:Function $Function_80219250
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 802194B8 to 802194C0 (004488F8 to 00448900)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_802194C0
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80219728 to 80219730 (00448B68 to 00448B70)
00000000 00000000

#new:Function $Function_80219730
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_80219998
{
	ADDIU     SP, SP, FFE8
	ADDIU     A0, R0, 3D4
	SW        RA, 10 (SP)
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	ADDIU     A0, R0, F
	ADDIU     A1, R0, 5
	ADDIU     A2, R0, 37
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	JAL       ~Func:enable_world_fog
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802199D8 to 802199E0 (00448E18 to 00448E20)
00000000 00000000

#new:Function $Function_802199E0
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:enable_world_fog
	NOP
	ADDIU     A0, R0, 3B6
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	ADDIU     A0, R0, 10
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	LIA       V0, 800B1D80
	ADDIU     V1, R0, 14
	SH        V1, 584 (V0)
	SH        V1, 586 (V0)
	ADDIU     V1, R0, 1C
	SH        V1, 588 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80219A3C to 80219A40 (00448E7C to 00448E80)
00000000

% Origin: HEURISTIC
#new:Function $Function_80219A40
{
	ADDIU     SP, SP, FFC0
	SW        S6, 38 (SP)
	COPY      S6, A0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	CLEAR     S0
	LIA       V1, $???_802336E0
	SLL       V0, S6, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S5, R0, 8000
	MULT      S0, S3
	.o64
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       ~Func:sins
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S5
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oDC
	COPY      V0, V1
	ADDIU     V0, V1, 7FFF
	.oDC
	SRA       A0, V0, F
	ADDIU     V0, A0, 64
	SB        V0, E (S1)
	ADDIU     V0, A0, 32
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S3
	SB        V0, D (S1)
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       ~Func:sins
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S5
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, C (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o64
	MULT      S0, S3
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	COPY      A0, S6
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_802336E0
	SLL       V1, S6, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80219C38
{
	ADDIU     SP, SP, FFE8
	CLEAR     A0
	SW        RA, 10 (SP)
	JAL       80071270
	ADDIU     A1, R0, 10
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219C5C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V0, V0, 1F
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MFHI      A3
	SRA       V1, A3, 2
	SUBU      V1, V1, V0
	MTC1      V1, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIF       F0, 360.0
	LIF       F2, 8.0
	DIV.S     F12, F12, F0
	MUL.S     F12, F12, F2
	NOP
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        S3, 0 (S0)
	JAL       ~Func:sin_rad
	LW        S0, 4 (S0)
	COPY      A0, S1
	LIF       F2, 10.0
	COPY      A1, S2
	MUL.S     F20, F0, F2
	NOP
	JAL       ~Func:set_variable
	CLEAR     A2
	COPY      A0, S1
	TRUNC.W.S F4, F20
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A1, S3
	COPY      A0, S1
	COPY      A1, S0
	JAL       ~Func:set_variable
	CLEAR     A2
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80219D60
{
	ADDIU     SP, SP, FFA0
	SW        S0, 20 (SP)
	COPY      S0, A0
	SW        RA, 28 (SP)
	SW        S1, 24 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	COPY      S1, V0
	ADDIU     A0, R0, 1
	BEQ       S1, A0, .o100
	SW        S1, 70 (S0)
	SLTI      V0, S1, 2
	BEQ       V0, R0, .o64
	ADDIU     V0, R0, 2
	BEQ       S1, R0, .o7C
	ADDIU     V0, R0, 8E
	BEQ       R0, R0, .o400
	NOP
	.o64
	BEQ       S1, V0, .o27C
	ADDIU     V0, R0, 3
	BEQ       S1, V0, .oBC
	ADDIU     V1, R0, 5B
	BEQ       R0, R0, .o400
	NOP
	.o7C
	LIF       F4, 142.0
	LIF       F30, -118.0
	ADDIU     V1, R0, FF8A
	SW        R0, 14 (SP)
	SWC1      F4, 10 (SP)
	SW        V0, 90 (S0)
	ADDIU     V0, R0, 2C
	SW        V0, 9C (S0)
	ADDIU     V0, R0, 3
	SW        R0, 94 (S0)
	SW        V1, 98 (S0)
	SW        V1, A0 (S0)
	BEQ       R0, R0, .oF0
	SW        V0, A4 (S0)
	.oBC
	LIF       F4, 91.0
	LIF       F30, -118.0
	ADDIU     V0, R0, FF8A
	SW        R0, 14 (SP)
	SWC1      F4, 10 (SP)
	SW        V1, 90 (S0)
	SW        R0, 94 (S0)
	SW        V0, 98 (S0)
	SW        V1, 9C (S0)
	SW        V0, A0 (S0)
	SW        S1, A4 (S0)
	.oF0
	SW        R0, A8 (S0)
	SW        R0, B0 (S0)
	BEQ       R0, R0, .o400
	SW        A0, 70 (S0)
	.o100
	LW        V0, A8 (S0)
	LW        V1, A4 (S0)
	ADDU      V0, V0, V1
	SW        V0, A8 (S0)
	SLTI      V0, V0, 2E
	BNE       V0, R0, .o124
	NOP
	ADDIU     V0, R0, 2D
	SW        V0, A8 (S0)
	.o124
	LWC1      F4, 90 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 10 (SP)
	LWC1      F4, 94 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	LIO       AT, 40C90FD0
	MTC1      AT, F26
	LWC1      F30, 98 (S0)
	CVT.S.W   F30, F30
	MUL.S     F12, F12, F26
	NOP
	LWC1      F28, 9C (S0)
	CVT.S.W   F28, F28
	LIF       F24, 360.0
	LWC1      F4, A0 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 18 (SP)
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	CVT.D.S   F0, F0
	LIF       F23, 1.875
	MTC1      R0, F22
	LWC1      F4, 10 (SP)
	SUB.D     F0, F22, F0
	CVT.D.S   F20, F4
	MUL.D     F20, F20, F0
	NOP
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	MUL.S     F0, F28, F0
	NOP
	LW        V0, A8 (S0)
	SLL       V0, V0, 1
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       ~Func:sin_rad
	SWC1      F20, 10 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	LIF       F2, 90.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 14 (SP)
	ADD.S     F4, F4, F0
	DIV.S     F12, F12, F24
	JAL       ~Func:sin_rad
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	SUB.D     F22, F22, F0
	CVT.D.S   F20, F30
	MUL.D     F20, F20, F22
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	LWC1      F4, 18 (SP)
	MUL.S     F0, F4, F0
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	BEQ       R0, R0, .o3F0
	ADDIU     V0, R0, 2D
	.o27C
	LW        V0, A8 (S0)
	LW        V1, A4 (S0)
	ADDU      V0, V0, V1
	SW        V0, A8 (S0)
	SLTI      V0, V0, 5B
	BNE       V0, R0, .o29C
	ADDIU     V0, R0, 5A
	SW        V0, A8 (S0)
	.o29C
	LWC1      F4, 90 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 10 (SP)
	LWC1      F4, 94 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	LIO       AT, 40C90FD0
	MTC1      AT, F26
	LWC1      F30, 98 (S0)
	CVT.S.W   F30, F30
	MUL.S     F12, F12, F26
	NOP
	LWC1      F28, 9C (S0)
	CVT.S.W   F28, F28
	LIF       F24, 360.0
	LWC1      F4, A0 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 18 (SP)
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	CVT.D.S   F0, F0
	LIF       F23, 1.875
	MTC1      R0, F22
	LWC1      F4, 10 (SP)
	SUB.D     F0, F22, F0
	CVT.D.S   F20, F4
	MUL.D     F20, F20, F0
	NOP
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	MUL.S     F0, F28, F0
	NOP
	LW        V0, A8 (S0)
	SLL       V0, V0, 1
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       ~Func:sin_rad
	SWC1      F20, 10 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	LIF       F2, 90.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 14 (SP)
	ADD.S     F4, F4, F0
	DIV.S     F12, F12, F24
	JAL       ~Func:sin_rad
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	SUB.D     F22, F22, F0
	CVT.D.S   F20, F30
	MUL.D     F20, F20, F22
	NOP
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F24
	LWC1      F4, 18 (SP)
	MUL.S     F0, F4, F0
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	ADDIU     V0, R0, 5A
	.o3F0
	LW        V1, A8 (S0)
	BNE       V1, V0, .o400
	CVT.S.D   F30, F20
	SW        S1, B0 (S0)
	.o400
	LWC1      F4, 10 (SP)
	TRUNC.W.S F4, F4
	SWC1      F4, 84 (S0)
	LWC1      F4, 14 (SP)
	TRUNC.W.S F4, F4
	SWC1      F4, 88 (S0)
	TRUNC.W.S F4, F30
	SWC1      F4, 8C (S0)
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Formation $Formation_00
{
    $SpikedGoomba 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $ParagoombaB 00000005 0000000A 00000000 00000000 00000000 00000000
    $ParagoombaA 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $JrTroopa1 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $JrTroopa2 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $JrTroopa3 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $JrTroopa4 00000001 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $JrTroopa5 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $JrTroopa6 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80234E44 00000001 $Formation_00 $Stage_8023274C 00000000
    $SJIS_80234E28 00000002 $Formation_01 $Stage_8023274C 00000000
    $SJIS_80234E1C 00000001 $Formation_02 $Stage_80232FBC 00000000
    $SJIS_80234E10 00000001 $Formation_03 $Stage_80233640 00000000
    $SJIS_80234E04 00000001 $Formation_04 $Stage_802336AC 00000000
    $SJIS_80234DF8 00000001 $Formation_05 $Stage_80234C80 00000000
    $SJIS_80234DEC 00000001 $Formation_06 $Stage_80233AC4 00000000
    $SJIS_80234DE0 00000001 $Formation_07 $Stage_80234DAC 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80234E80 $Stage_80232300
    $ASCII_80234E78 $Stage_8023274C
    $ASCII_80234E70 $Stage_80232B9C
    $ASCII_80234E68 $Stage_80232FBC
    $ASCII_80234E60 $Stage_8023341C
    00000000 00000000
}

#new:DefenseTable $DefenseTable_8021A390
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021A39C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021A448
{
    00800000 01000000 001800FF $IdleAnimations_8021A494 $DefenseTable_8021A390 00000010 00000000 00F40000 00000000
}

#new:Actor $SpikedGoomba
{
    % stats
    [Index]         9b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021A39C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021A448
    [Script]      $Script_Init_8021BEBC
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]      95`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021A494
{
    .Status:Normal    00270001
    .Status:Stone     00270000
    .Status:Sleep     0027000A
    .Status:Poison    00270001
    .Status:Stop      00270000
    .Status:Static    00270001
    .Status:Paralyze  00270000
    .Status:Dizzy     00270009
    .Status:Fear      00270009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021A4E0
{
    .Status:Normal    00270003
    .Status:Stone     00270000
    .Status:Sleep     0027000A
    .Status:Poison    00270001
    .Status:Stop      00270000
    .Status:Static    00270003
    .Status:Paralyze  00270000
    .Status:Dizzy     00270009
    .Status:Fear      00270009
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021A52C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B19C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021A578 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A854 )
    Return
    End
}

#new:Script $Script_Idle_8021A578
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A4E0 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A494 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A4E0 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A494 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021A854
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270007
            SetConst  *Var[2]  00270008
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270007
            SetConst  *Var[2]  00270008
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0027000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0027000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270005
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270003
            SetConst  *Var[2]  00270006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00270006
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:SpikeTaunt % 1B
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
            EndIf
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[1]  0000000A
            Else
                Add   *Var[1]  0000001A
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021B030
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021B19C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00270003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0027000A )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00270006 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  >  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
                Wait  15`
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
                Wait  3`
            EndIf
            Call  YieldTurn ( )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_8021BEBC
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021B19C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A578 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A854 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021C0FC )
    Return
    End
}

#new:Script $Script_8021BF1C
{
    Call  SetActorYaw   ( .Actor:Player 0000001E )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000003C )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000005A )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000078 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000096 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 000000B4 )
    Wait  5`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  ActorSpeak    ( 000B00B9 .Actor:Partner 00000000 009D0008 009D0001 ) % This is a Spiked Goomba. See the spike on his head ...
    Set   *Flag_BTL_05  .True
    Call  SetActorYaw   ( .Actor:Player 00000096 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000078 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000005A )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000003C )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000001E )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000000 )
    Wait  5`
    Return
    End
}

#new:Script $Script_NextTurn_8021C0FC
{
    Call  UseIdleAnimation  ( .Actor:Partner .False )
    Call  EnableIdleScript  ( .Actor:Partner 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            If  *Flag_BTL_05  ==  .False
                ExecWait  $Script_8021BF1C
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Partner 00000001 )
    Call  UseIdleAnimation  ( .Actor:Partner .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021C1B0
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8021C1BC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021C1C8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison    100`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021C274
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021C320
{
    00020001 01000000 001400FF $IdleAnimations_8021DB9C $DefenseTable_8021C1B0 00000000 00000000 00F60000 00000000
    00800000 02000000 001800FF $IdleAnimations_8021C3D8 $DefenseTable_8021C1BC 00004000 00000000 00F60000 00000000
    00020001 03000000 F01800FF $IdleAnimations_8021C470 $DefenseTable_8021C1B0 00000000 00000000 00F60000 00000000
    00020001 04000000 F01800FF $IdleAnimations_8021C47C $DefenseTable_8021C1B0 00000000 00000000 00F60000 00000000
}

#new:Actor $ParagoombaA
{
    % stats
    [Index]         8b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021C274
    % ai
    [PartsCount]    4`s
    [PartsTable]  $PartsTable_8021C320
    [Script]      $Script_Init_8021F450
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]     100`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C3D8
{
    .Status:Normal    00280001
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280001
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C424
{
    .Status:Normal    00280004
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280004
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C470
{
    .Status:Normal    00280009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C47C
{
    .Status:Normal    0028000A
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021C488
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021CDFC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021C4D4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C808 )
    Return
    End
}

#new:Script $Script_Idle_8021C4D4
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C424 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C3D8 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8021C790
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021C808
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_8021D614
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            ExecWait  $Script_8021D614
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            ExecWait  $Script_8021D614
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
            ExecWait  $Script_8021C790
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021C790
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            SetConst  *Var[2]  00280006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021CDFC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Thread
                Loop  00000004
                    Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
                    Wait  4`
                EndLoop
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021C790
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021C790
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D614
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218280    ( 00000064 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
    EndThread
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Call  GetLastEvent      ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  0000000A
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021C1C8 )
    Call  SetActorType      ( .Actor:Self 00000007 )
    ExecWait  $Script_8021DC34
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021DB9C
{
    .Status:Normal    00260001
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260001
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021DBE8
{
    .Status:Normal    00260003
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260003
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:Script $Script_8021DC34
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E788 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021DC80 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DF5C )
    Return
    End
}

#new:Script $Script_Idle_8021DC80
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DBE8 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DB9C )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DBE8 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DB9C )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021DF5C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            SetConst  *Var[2]  00260005
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021E61C
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021E788
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218464    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218464    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_8021F450
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021CDFC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021C4D4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C808 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F690 )
    Return
    End
}

#new:Script $Script_8021F4B0
{
    Call  SetActorYaw   ( .Actor:Player 0000001E )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000003C )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000005A )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000078 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000096 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 000000B4 )
    Wait  5`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  ActorSpeak    ( 000B00B8 .Actor:Partner 00000000 009D0008 009D0001 ) % Listen up, Mario. The enemy's flying.  Your Hammer ...
    Set   *Flag_BTL_06  .True
    Call  SetActorYaw   ( .Actor:Player 00000096 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000078 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000005A )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000003C )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000001E )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000000 )
    Wait  5`
    Return
    End
}

#new:Script $Script_NextTurn_8021F690
{
    Call  UseIdleAnimation  ( .Actor:Partner .False )
    Call  EnableIdleScript  ( .Actor:Partner 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            If  *Flag_BTL_06  ==  .False
                ExecWait  $Script_8021F4B0
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Partner 00000001 )
    Call  UseIdleAnimation  ( .Actor:Partner .True )
    Return
    End
}

PADDING: 8021F744 to 8021F750 (0044EB84 to 0044EB90)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021F750
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8021F75C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021F768
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison    100`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021F814
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear       80`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021F8C0
{
    00020001 01000000 001400FF $IdleAnimations_8022113C $DefenseTable_8021F750 00000000 00000000 00F60000 00000000
    00800000 02000000 001800FF $IdleAnimations_8021F978 $DefenseTable_8021F75C 00004000 00000000 00F60000 00000000
    00020001 03000000 F01800FF $IdleAnimations_8021FA10 $DefenseTable_8021F750 00000000 00000000 00F60000 00000000
    00020001 04000000 F01800FF $IdleAnimations_8021FA1C $DefenseTable_8021F750 00000000 00000000 00F60000 00000000
}

#new:Actor $ParagoombaB
{
    % stats
    [Index]         8b
    [Level]         6`b
    [MaxHP]         2`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021F814
    % ai
    [PartsCount]    4`s
    [PartsTable]  $PartsTable_8021F8C0
    [Script]      $Script_Init_8021FA28
    % move effectiveness
    [Escape]       90`b
    [Item]        100`b
    [AirLift]     100`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021F978
{
    .Status:Normal    00280001
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280001
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021F9C4
{
    .Status:Normal    00280004
    .Status:Stone     00280000
    .Status:Sleep     0028000B
    .Status:Poison    00280001
    .Status:Stop      00280000
    .Status:Static    00280004
    .Status:Paralyze  00280000
    .Status:Dizzy     0028000C
    .Status:Fear      0028000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021FA10
{
    .Status:Normal    00280009
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021FA1C
{
    .Status:Normal    0028000A
    .Status:End
}

#new:Script $Script_Init_8021FA28
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022039C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021FA74 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FDA8 )
    Return
    End
}

#new:Script $Script_Idle_8021FA74
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021F9C4 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021F978 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8021FD30
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021FDA8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_80220BB4
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            ExecWait  $Script_80220BB4
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000D
            SetConst  *Var[2]  0028000E
            ExecWait  DoBurnHit
            ExecWait  $Script_80220BB4
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
            ExecWait  $Script_8021FD30
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028000F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021FD30
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            SetConst  *Var[2]  00280006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280004
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022039C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Thread
                Loop  00000004
                    Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
                    Wait  4`
                EndLoop
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021FD30
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
            ExecWait  $Script_8021FD30
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80220BB4
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218560    ( 00000064 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
    EndThread
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Call  GetLastEvent      ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  0000000A
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F768 )
    Call  SetActorType      ( .Actor:Self 00000007 )
    ExecWait  $Script_802211D4
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8022113C
{
    .Status:Normal    00260001
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260001
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80221188
{
    .Status:Normal    00260003
    .Status:Stone     00260000
    .Status:Sleep     00260008
    .Status:Poison    00260001
    .Status:Stop      00260000
    .Status:Static    00260003
    .Status:Paralyze  00260000
    .Status:Dizzy     00260007
    .Status:Fear      00260007
    .Status:End
}

#new:Script $Script_802211D4
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80221D28 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80221220 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802214FC )
    Return
    End
}

#new:Script $Script_Idle_80221220
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221188 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022113C )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221188 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022113C )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_802214FC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260009
            SetConst  *Var[2]  0026000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            SetConst  *Var[2]  00260005
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260005
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_80221BBC
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_80221D28
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218744    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_80218744    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_802229F0
{
    .Status:Normal    00210003
    .Status:Stone     00210000
    .Status:Sleep     00210000
    .Status:Poison    00210000
    .Status:Stop      00210000
    .Status:Static    00210000
    .Status:Paralyze  00210000
    .Status:End
}

#new:DefenseTable $DefenseTable_80222A2C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80222A38
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep     100`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_80222AE4
{
    00800000 01000000 001E00FF $IdleAnimations_802229F0 $DefenseTable_80222A2C 00000000 00000000 00000000 00000000
}

#new:Actor $JrTroopa1
{
    % stats
    [Index]        88b
    [Level]        41`b
    [MaxHP]         5`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80222A38
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80222AE4
    [Script]      $Script_Init_80223180
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  30`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_80222B30
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000026 )
    Call  SetBattleCamZoom  ( 00000100 )
    Call  MoveBattleCamOver ( 0000000F )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80222BC8
{
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000C )
    Return
    End
}

#new:Script $Script_80222C08
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000037 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80222C6C
{
    .Status:Normal    00210014
    .Status:End
}

#new:Script $Script_80222C78
{
    Set   *Var[A]  *Var[0]
    Call  8027D32C      ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[1] )
    Wait  10`
    Call  80269E80      ( *Var[5] )
    Switch  *Var[5]
        CaseOR  ==  0000000A
        CaseOR  ==  0000000E
        CaseOR  ==  0000000C
        CaseOR  ==  00000010
        CaseOR  ==  0000000B
        CaseOR  ==  0000000F
        CaseOR  ==  0000000D
        CaseOR  ==  00000011
        CaseOR  ==  00000002
        EndCaseGroup
        Default
            Set   *Var[2]  00000000
            Loop  00000018
                Call  SetActorYaw   ( .Actor:Self *Var[2] )
                Add   *Var[2]  0000001E
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndSwitch
    Label  0
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A
    Add   *Var[2]  0000000A
    Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySound     ( 000003E5 )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Call  UseCamPreset  ( 0000000E )
    Call  SetBattleCamZoom  ( 00000104 )
    Call  SetBattleCamOffsetZ   ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Call  SetAnimation  ( .Actor:Self *Var[A] 00210027 )
    Wait  12`
    Call  SetAnimation  ( .Actor:Self *Var[A] 00210014 )
    Call  SetIdleAnimations ( .Actor:Self *Var[A] $IdleAnimations_80222C6C )
    Wait  30`
    Call  UseIdleAnimation  ( .Actor:Partner .False )
    Call  UseCamPreset  ( 00000002 )
    Wait  15`
    Call  UseIdleAnimation  ( .Actor:Player .False )
    Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
    Call  SetActorYaw   ( .Actor:Player 0000001E )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000003C )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000005A )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000078 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000096 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 000000B4 )
    Wait  5`
    Call  ActorSpeak    ( 000B00B4 .Actor:Partner 00000000 009D0008 009D0001 ) % Mario, that was wonderful fighting. You got Star P ...
    Call  SetActorYaw   ( .Actor:Player 00000096 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000078 )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000005A )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000003C )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 0000001E )
    Wait  1`
    Call  SetActorYaw   ( .Actor:Player 00000000 )
    Wait  5`
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Return
    End
}

#new:Script $Script_Init_80223180
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802234A4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223290 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80223D2C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022325C
{
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80223290
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  GetLastDamage ( .Actor:Self *Var[1] )
        If  *Var[1]  !=  00000000
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
        EndIf
    EndIf
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210013
            ExecWait  $Script_80222C78
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210003
            ExecWait  DoImmune
        EndCaseGroup
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802234A4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  AddActorVar       ( .Actor:Self 00000000 00000001 )
    Call  GetActorHP        ( .Actor:Self *Var[0] )
    Call  GetEnemyMaxHP     ( .Actor:Self *Var[1] )
    Sub   *Var[1]  *Var[0]
    If  *Var[1]  ==  00000003
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        If  *Var[0]  ==  00000000
            Call  SetActorVar       ( .Actor:Self 00000005 00000001 )
            ExecWait  $Script_80222B30
            Call  MoveBattleCamOver ( 00000014 )
            Wait  20`
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  EnableIdleScript  ( .Actor:Self 00000000 )
            Call  ActorSpeak        ( 000B00B1 .Actor:Self 00000001 00210016 00210003 ) % Grrrr!! I'm just getting warmed up!
        EndIf
    EndIf
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00210009 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0021000E )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E2 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000004 *Var[1] )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 *Var[1] 00000010 )
    Switch  *Var[0]
        Case  ==  .HitResult:Miss % 6
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Sub   *Var[0]  0000000A
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Wait  8`
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Return
    EndSwitch
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
    Thread
        Wait  3`
        Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
        Wait  5`
        Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
    EndThread
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Wait  2`
    Call  GetActorVar       ( .Actor:Self 00000004 *Var[1] )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 *Var[1] 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Wait  10`
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80223D2C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                Wait  15`
                Call  802535B4      ( 00000000 )
                Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
                Thread
                    Set   *Var[1]  00000000
                    Wait  8`
                    Loop  00000005
                        Wait  1`
                        Sub   *Var[1]  00000024
                        Call  SetActorYaw   ( .Actor:Player *Var[1] )
                    EndLoop
                EndThread
                Call  SetAnimation  ( .Actor:Self 00000001 0021002B )
                Call  ActorSpeak    ( 000B00AF .Actor:Partner 00000000 009D0008 009D0001 ) % Mario, this is Jr. Troopa. He's the boss of the ne ...
                Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
                Call  SetAnimation  ( .Actor:Player 00000000 00010029 )
                Wait  10`
                Thread
                    Set   *Var[1]  000000B4
                    Wait  4`
                    Loop  00000005
                        Wait  1`
                        Add   *Var[1]  00000024
                        Call  SetActorYaw   ( .Actor:Player *Var[1] )
                    EndLoop
                EndThread
                Wait  10`
                Call  802535B4  ( 00000001 )
                Call  UseCamPreset      ( 00000002 )
                Call  MoveBattleCamOver ( 00000004 )
            EndIf
        EndIf
    Case  ==  0000000C
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
            ExecWait  $Script_80222C08
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
            Thread
                Set   *Var[1]  00000000
                Loop  00000005
                    Wait  1`
                    Sub   *Var[1]  00000024
                    Call  SetActorYaw   ( .Actor:Player *Var[1] )
                EndLoop
            EndThread
            Call  UseIdleAnimation  ( .Actor:Partner .False )
            Call  ActorSpeak        ( 000B00B0 .Actor:Partner 00000000 009D0008 009D0001 ) % Oh, excellent! Good move! Go on!!
            Call  UseIdleAnimation  ( .Actor:Partner .True )
            Call  SetAnimation      ( .Actor:Player 00000000 00010032 )
            Wait  20`
            Call  SetActorYaw       ( .Actor:Player 00000000 )
            Wait  4`
            Call  UseIdleAnimation  ( .Actor:Player .True )
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
        If  *Var[0]  ==  00000000
            Call  GetActorHP    ( .Actor:Self *Var[0] )
            If  *Var[0]  <=  00000001
                Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
                Call  UseIdleAnimation  ( .Actor:Partner .False )
                Call  ActorSpeak    ( 000B00B2 .Actor:Partner 00000000 009D0008 009D0001 ) % Mario, you've almost got him! Keep it up! Go on!
                Call  UseIdleAnimation  ( .Actor:Partner .True )
                ExecWait  $Script_80222B30
                Call  ActorSpeak    ( 000B00B3 .Actor:Self 00000001 00210016 00210003 ) % All right, you asked for it! Say hello to Jr. Troo ...
                Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
                Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000010
                Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  30`
                Wait  20`
                Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
                Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
                Wait  20`
            EndIf
        EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8022437C to 80224380 (004537BC to 004537C0)
00000000

#new:IdleAnimations $IdleAnimations_80224380
{
    .Status:Normal    00210003
    .Status:Sleep     0021001C
    .Status:Stone     00210000
    .Status:Poison    00210000
    .Status:Stop      00210000
    .Status:Static    00210000
    .Status:Paralyze  00210000
    .Status:End
}

MISSING: 802243BC to 802243F8 (004537FC to 00453838)
00000001 00210003 00000006 00210000 0000000C 00210000 00000009 00210000
00000008 00210000 0000000B 00210000 00000005 00210000 00000000

#new:IdleAnimations $IdleAnimations_802243F8
{
    .Status:Normal    00210004
    .Status:Stop      00210002
    .Status:End
}

#new:DefenseTable $DefenseTable_8022440C
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_80224418
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep      80`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_802244C4
{
    00800000 01000000 FA1200FF $IdleAnimations_80224380 $DefenseTable_8022440C 00000000 00000000 05FC0000 00000000
}

#new:Actor $JrTroopa2
{
    % stats
    [Index]        89b
    [Level]        44`b
    [MaxHP]        15`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80224418
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802244C4
    [Script]      $Script_Init_80224A94
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  30`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_80224510
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000026 )
    Call  SetBattleCamZoom  ( 00000100 )
    Call  MoveBattleCamOver ( 0000000F )
    Return
    End
}

#new:Script $Script_802245A8
{
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000C )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802245E8
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000037 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8022464C
{
    .Status:Normal    00210014
    .Status:End
}

#new:Script $Script_80224658
{
    Set   *Var[A]  *Var[0]
    Call  8027D32C      ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[1] )
    Wait  10`
    Call  80269E80      ( *Var[5] )
    Switch  *Var[5]
        CaseOR  ==  0000000A
        CaseOR  ==  0000000E
        CaseOR  ==  0000000C
        CaseOR  ==  00000010
        CaseOR  ==  0000000B
        CaseOR  ==  0000000F
        CaseOR  ==  0000000D
        CaseOR  ==  00000011
        CaseOR  ==  00000002
        EndCaseGroup
        Default
            Set   *Var[2]  00000000
            Loop  00000018
                Call  SetActorYaw   ( .Actor:Self *Var[2] )
                Add   *Var[2]  0000001E
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndSwitch
    Label  0
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A
    Add   *Var[2]  0000000A
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySound ( 000003E5 )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 00000104 )
    Call  SetBattleCamOffsetZ   ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Call  SetAnimation      ( .Actor:Self *Var[A] 00210027 )
    Wait  12`
    Call  SetAnimation      ( .Actor:Self *Var[A] 00210014 )
    Call  SetIdleAnimations ( .Actor:Self *Var[A] $IdleAnimations_8022464C )
    Wait  60`
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Return
    End
}

#new:Script $Script_80224964
{
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:CloseShell )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A
    Add   *Var[2]  00000005
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00210012 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802243F8 )
    Wait  10`
    Return
    End
}

#new:Script $Script_Init_80224A94
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225314 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80224B24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224B58 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225B4C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80224B24
{
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80224B58
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_802250E4
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            ExecWait  $Script_802250E4
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoNormalHit
            ExecWait  $Script_802251CC
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210013
            ExecWait  $Script_80224658
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001
            Set   *Var[1]  00210028
            Set   *Var[2]  00210029
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001
            Set   *Var[1]  00210028
            Set   *Var[2]  00210029
            ExecWait  DoBurnHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210029
            ExecWait  $Script_80224658
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_802250E4
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_802251CC
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210013
            ExecWait  $Script_80224658
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210009
            ExecWait  DoReturnHome
            ExecWait  $Script_80224964
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210011
            ExecWait  DoJumpBack
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210013
            ExecWait  $Script_80224658
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210004
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210003
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210003
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802250E4
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  GetLastDamage     ( .Actor:Self *Var[1] )
        Call  GetBattleFlags    ( *Var[2] )
        If  *Var[2]  !&  00080000
            If  *Var[1]  !=  00000000
                Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  00351000
                    Call  FreezeBattleCam   ( .True )
                EndIf
            EndIf
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_802251CC
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00351000
            Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
            ExecWait  $Script_80224510
            Call  MoveBattleCamOver ( 0000001E )
            Wait  30`
            Call  ActorSpeak        ( 000C012A .Actor:Self 00000001 0021001D 0021001D ) % Yeeowch!! Who knew that Mario had such battle skil ...
            Call  SetAnimation      ( .Actor:Self 00000001 0021001A )
            Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
            ExecWait  $Script_80224964
            ExecWait  $Script_802245A8
        Else
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
        EndIf
    EndIf
    Call  FreezeBattleCam   ( .False )
    Return
    End
}

#new:Script $Script_TakeTurn_80225314
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:OpenShell )
    Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
    Wait  20`
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00210009 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0021000E )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Lucky % 5
        CaseOR  ==  .HitResult:Miss % 6
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
            Thread
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
            EndThread
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  2`
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000019 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            ExecWait  $Script_80224964
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
    Thread
        Wait  3`
        Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
        Wait  5`
        Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
    EndThread
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        Default
            Call  UseCamPreset  ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Wait  10`
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            ExecWait  $Script_80224964
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80225B4C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Wait  15`
                ExecWait  $Script_80224510
                Wait  10`
                Call  ActorSpeak    ( 000C0128 .Actor:Self 00000001 0021001A 0021001B ) % Get ready to hurt, Mario! I'm gonna show you a new ...
                Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
                Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000010
                Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  30`
                ExecWait  $Script_80224964
                Wait  30`
                Call  ActorSpeak    ( 000C0129 .Actor:Self 00000001 00210017 00210004 ) % Yeah! Check that out! You've never seen anything l ...
                Wait  10`
                ExecWait  $Script_802245A8
            Else
            EndIf
        Case  ==  0000000C
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 80225DB8 to 80225DC0 (004551F8 to 00455200)
00000000 00000000

#new:IdleAnimations $IdleAnimations_80225DC0
{
    .Status:Normal    00250002
    .Status:Sleep     0025000A
    .Status:Stone     00250000
    .Status:Poison    00250000
    .Status:Stop      00250000
    .Status:Static    00250000
    .Status:Paralyze  00250000
    .Status:Dizzy     0025000B
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80225E04
{
    .Status:Normal    00210003
    .Status:Sleep     0021001C
    .Status:Stone     00210000
    .Status:Poison    00210000
    .Status:Stop      00210000
    .Status:Static    00210000
    .Status:Paralyze  00210000
    .Status:Dizzy     0021001D
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80225E48
{
    .Status:Normal    00210014
    .Status:End
}

#new:DefenseTable $DefenseTable_80225E54
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_80225E60
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep      50`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   50`
    .Status:Shrink     80`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_80225F0C
{
    00800001 01000000 002300FF $IdleAnimations_80225DC0 $DefenseTable_80225E54 00000000 00000000 00FA0000 00000000
    00020000 02000000 001E00FF $IdleAnimations_80225E04 $DefenseTable_80225E54 00000000 00000000 00000000 00000000
}

#new:Actor $JrTroopa3
{
    % stats
    [Index]        8Ab
    [Level]        52`b
    [MaxHP]        40`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80225E60
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80225F0C
    [Script]      $Script_Init_80226510
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         60`b  35`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  35`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_80225F7C
{
    Call  GetStatusFlags    ( .Actor:Self *Var[2] )
    If  *Var[2]  &  0035D000
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[2] )
    If  *Var[2]  &  00080000
        Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
        If  *Var[2]  ==  000000B7
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000001E
            Call  ShowEmote     ( 00000000 .Emote:Question FFFFFFD3 0000001E 00000002 *Var[0] *Var[1] *Var[2] 00000005 )
            Wait  30`
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_802260AC
{
    Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000
        Add   *Var[1]  00000010
    Else
        Add   *Var[1]  00000006
    EndIf
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  00000000
        Loop  00000020
            Wait  1`
            Add   *Var[0]  0000002D
            Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
        EndLoop
    EndThread
    Wait  32`
    Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_802263D4
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000026 )
    Call  SetBattleCamZoom  ( 00000100 )
    Call  MoveBattleCamOver ( 0000000F )
    Return
    End
}

#new:Script $Script_8022646C
{
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000C )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802264AC
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000037 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_80226510
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226F58 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802265A0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802266B0 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80227724 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_Idle_802265A0
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00041000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF4 0000001C )
        Call  8027D4C8  ( FFFFFF81 00000001 00000004 FFFFFFFA )
        Call  $Function_80218840    ( FFFFFFE7 0000001B FFFFFFFF 0000001B )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
        Call  $Function_80218840    ( FFFFFFEA 0000001E 00000002 0000001C )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_802266B0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoNormalHit
            ExecWait  $Script_80225F7C
            ExecWait  $Script_80227E1C
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  $Script_802279B0
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001
            Set   *Var[1]  00250008
            Set   *Var[2]  00250009
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001
            Set   *Var[1]  00250008
            Set   *Var[2]  00250009
            ExecWait  DoBurnHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250009
            ExecWait  $Script_802279B0
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  $Script_802279B0
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoJumpBack
            ExecWait  $Script_80227D38
            Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250007
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250002
            ExecWait  $Script_802279B0
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250002
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250002
            ExecWait  DoImmune
            ExecWait  $Script_80225F7C
            ExecWait  $Script_80227E1C
        Case  ==  .Event:SpikeContact % 2A
            Call  SetAnimation  ( .Actor:Self 00000001 00250007 )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 0025000D )
                Wait  1000`
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0025000D
                ExecWait  DoImmune
                ExecWait  $Script_802263D4
                Call  ActorSpeak    ( 001D019B .Actor:Self 00000001 0025000C 0025000C ) % Hey, Mario!! Don't even think of trying to  beat m ...
                ExecWait  $Script_8022646C
            EndIf
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250002
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00250002
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80226D4C
{
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Add   *Var[0]  0000001E
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Sub   *Var[0]  0000000A
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
    Return
    End
}

#new:Script $Script_TakeTurn_80226F58
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000001 00250005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000005 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00250006 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000014 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00250006 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Wait  10`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80227724
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[F] )
    Switch  *Var[F]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Wait  15`
                Call  UseCamPreset  ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  SetBattleCamOffsetZ   ( 00000023 )
                Call  MoveBattleCamOver     ( 0000001E )
                Wait  30`
                Call  ActorSpeak    ( 000E0020 .Actor:Self 00000002 0021001A 0021001B ) % Don't think I'm as vulnerable as I was before. Che ...
                Wait  8`
                ExecWait  $Script_802260AC
                Call  SetPartFlagBits       ( .Actor:Self 00000002 00000001 .True )
                Call  SetPartFlagBits       ( .Actor:Self 00000001 00000001 .False )
                Wait  30`
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  00000014
                Call  SetGoalPos    ( .Actor:Self *Var[0] 0000003C *Var[2] )
                Call  FlyToGoal     ( .Actor:Self 0000002D 00000000 .Easing:Linear )
                Call  ForceHomePos  ( .Actor:Self *Var[0] 0000003C *Var[2] )
                Call  HPBarToHome   ( .Actor:Self )
                Wait  8`
                Call  ActorSpeak    ( 000E0021 .Actor:Self 00000001 0025000C 00250002 ) % Ha ha! Yeah, that's right! Let's see how you like  ...
                Wait  10`
                ExecWait  $Script_8022646C
            EndIf
        Case  ==  0000000C
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802279B0
{
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[1]  ==  00000000
        Goto  0
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  FallToGoal        ( .Actor:Self 0000000A )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    Call  HPBarToCurrent    ( .Actor:Self )
    Call  8027D2D8  ( FFFFFF81 )
    Label  0
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Add   *Var[2]  0000000A
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  SetAnimation      ( .Actor:Self 00000002 00210015 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 00000104 )
    Call  SetBattleCamOffsetZ   ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Call  SetAnimation      ( .Actor:Self 00000002 00210014 )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80225E48 )
    Wait  60`
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Return
    End
}

#new:Script $Script_80227D38
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[4]  *Var[1]
    MulF  *Var[4]  *Fixed[0.3]
    Call  FlyToGoal     ( .Actor:Self 00000000 *Var[4] .Easing:Linear )
    Return
    End
}

#new:Script $Script_80227E1C
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  0035D000
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
            Wait  15`
            ExecWait  $Script_802263D4
            Wait  10`
            Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 0025000C 00250002 ) % Don't underestimate me, Mario! I'll never be be sc ...
            Wait  10`
            ExecWait  $Script_8022646C
        EndIf
    EndIf
    Return
    End
}

PADDING: 80227EFC to 80227F00 (0045733C to 00457340)
00000000

#new:IdleAnimations $IdleAnimations_80227F00
{
    .Status:Normal    00230003
    .Status:Sleep     0023000D
    .Status:Stone     00230000
    .Status:Poison    00230000
    .Status:Stop      00230000
    .Status:Static    00230000
    .Status:Paralyze  00230000
    .Status:Dizzy     0023000E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80227F44
{
    .Status:Normal    00210005
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80227F50
{
    .Status:Normal    00210014
    .Status:End
}

#new:DefenseTable $DefenseTable_80227F5C
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_80227F68
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep      40`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   45`
    .Status:Shrink     60`
    .Status:Stop       70`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_80228014
{
    00800001 01000000 FB2000FF $IdleAnimations_80227F00 $DefenseTable_80227F5C 00000010 00000000 00F50000 00000000
    00020000 02000000 001E00FF $IdleAnimations_80227F44 $DefenseTable_80227F5C 00000010 00000000 00000000 00000000
}

#new:Actor $JrTroopa4
{
    % stats
    [Index]        8Bb
    [Level]        59`b
    [MaxHP]        40`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80227F68
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80228014
    [Script]      $Script_Init_80228618
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         60`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  35`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_80228084
{
    Call  GetStatusFlags    ( .Actor:Self *Var[2] )
    If  *Var[2]  &  0035D000
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[2] )
    If  *Var[2]  &  00080000
        Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
        If  *Var[2]  ==  000000B7
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000001E
            Call  ShowEmote     ( 00000000 .Emote:Question FFFFFFD3 0000001E 00000002 *Var[0] *Var[1] *Var[2] 00000005 )
            Wait  30`
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_802281B4
{
    Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000
        Add   *Var[1]  00000010
    Else
        Add   *Var[1]  00000006
    EndIf
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  00000000
        Loop  00000020
            Wait  1`
            Add   *Var[0]  0000002D
            Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
        EndLoop
    EndThread
    Wait  32`
    Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_802284DC
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000026 )
    Call  SetBattleCamZoom  ( 00000100 )
    Call  MoveBattleCamOver ( 0000000F )
    Return
    End
}

#new:Script $Script_80228574
{
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000C )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802285B4
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000037 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_80228618
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022936C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802286C0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802287D0 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80229B38 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Return
    End
}

#new:Script $Script_Idle_802286C0
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00041000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF1 0000001C )
        Call  8027D4C8  ( FFFFFF81 00000001 00000004 FFFFFFFA )
        Call  $Function_80218910    ( FFFFFFE7 0000001B FFFFFFFF 0000001B )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF8 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
        Call  $Function_80218910    ( FFFFFFEA 0000001E 00000002 0000001C )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_802287D0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_80228FE8
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            ExecWait  $Script_80228FE8
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoNormalHit
            ExecWait  $Script_8022906C
            ExecWait  $Script_80228084
            ExecWait  $Script_8022A480
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  $Script_8022A018
            Return
        Case  ==  .Event:BurnHit % E
            ExecWait  $Script_80228FE8
            Set   *Var[0]  00000001
            Set   *Var[1]  0023000A
            Set   *Var[2]  0023000B
            ExecWait  DoBurnHit
            ExecWait  $Script_8022906C
        Case  ==  .Event:BurnDeath % 24
            ExecWait  $Script_80228FE8
            Set   *Var[0]  00000001
            Set   *Var[1]  0023000A
            Set   *Var[2]  0023000B
            ExecWait  DoBurnHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0023000B
            ExecWait  $Script_8022A018
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_80228FE8
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_8022906C
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  $Script_8022A018
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoJumpBack
            ExecWait  $Script_8022A39C
            Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230009
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230000
            ExecWait  $Script_8022A018
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230003
            ExecWait  DoImmune
            ExecWait  $Script_80228084
            ExecWait  $Script_8022A480
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            Switch  *Var[3]
                Case  &  00041000
                    Add   *Var[0]  FFFFFFF3
                    Add   *Var[1]  00000025
                Case  &  00080000
                    Add   *Var[0]  FFFFFFFF
                    Add   *Var[1]  0000000E
                Default
                    Add   *Var[0]  FFFFFFFC
                    Add   *Var[1]  00000025
            EndSwitch
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 00230010 )
                Wait  1000`
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 00230010 )
                Wait  20`
                ExecWait  $Script_802284DC
                Call  ActorSpeak    ( 001D019B .Actor:Self 00000001 0023000F 0023000F ) % Hey, Mario!! Don't even think of trying to  beat m ...
                ExecWait  $Script_80228574
            EndIf
        Case  ==  .Event:SpikeContact % 2A
            Call  SetAnimation  ( .Actor:Self 00000001 00230009 )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8022A39C
            Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00230003
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80228FE8
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  GetLastDamage ( .Actor:Self *Var[1] )
        If  *Var[1]  !=  00000000
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_8022906C
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00351000
            Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
            ExecWait  $Script_802284DC
            Call  ActorSpeak    ( 000700BC .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Yow! What in the...? I didn't think you'd do that! ...
            Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
            ExecWait  $Script_80228574
        Else
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
        EndIf
    EndIf
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80229160
{
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Add   *Var[0]  0000001E
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Sub   *Var[0]  0000000A
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
    Return
    End
}

#new:Script $Script_TakeTurn_8022936C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000001 00230007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000006 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00230008 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000014 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00230008 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Wait  10`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_80229B38
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Wait  15`
                Call  UseCamPreset  ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  SetBattleCamOffsetZ   ( 00000023 )
                Call  MoveBattleCamOver     ( 0000001E )
                Wait  20`
                Call  ActorSpeak    ( 000700B8 .Actor:Self 00000002 00210005 00210005 ) % Wheeze wheeze wheeze... Here it comes! You... you' ...
                Wait  10`
                Call  SetActorFlagBits      ( .Actor:Self 00001000 .True )
                Call  8026D940      ( FFFFFF81 FFFFFFEC 00000028 )
                Call  8027D2D8      ( FFFFFF81 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Set   *Var[0]  00000073
                Set   *Var[1]  00000096
                Call  $Function_802189DC    ( *Var[0] *Var[1] *Var[A] )
                Wait  10`
                Call  GetEnemyMaxHP ( .Actor:Self *Var[0] )
                Label  0
                Sub   *Var[0]  00000001
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
                Wait  1`
                If  *Var[0]  >  00000014
                    Goto  0
                EndIf
                Call  SetAnimation  ( .Actor:Self 00000002 00210013 )
                Wait  15`
                Loop  00000002
                    Call  SetActorFlagBits  ( .Actor:Self 00001000 .False )
                    Wait  15`
                    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
                    Wait  15`
                EndLoop
                Call  ActorSpeak    ( 000700B9 .Actor:Self 00000002 00210013 00210013 ) % Gasp! Oh, no!! All that swimming! My HP is almost  ...
                Call  SetActorFlagBits  ( .Actor:Self 00001000 .False )
                Call  $Function_80218AA4    ( *Var[A] )
                Call  8027D32C      ( FFFFFF81 )
                Call  8026D940      ( FFFFFF81 00000000 00000000 )
                Call  SetAnimation  ( .Actor:Self 00000002 00210005 )
                Wait  25`
                Call  ActorSpeak    ( 000700BA .Actor:Self 00000002 00210016 00210003 ) % Well, I'll make up for my low HP by using my new s ...
                Wait  10`
                ExecWait  $Script_802281B4
                Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
                Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
                Wait  20`
                Call  SetGoalToHome ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self 00000028 00000050 00000000 )
                Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:Linear )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  HPBarToHome   ( .Actor:Self )
                Wait  10`
                Call  ActorSpeak    ( 000700BB .Actor:Self 00000001 0023000F 00230003 ) % I know all of your fighting patterns now, Mario. S ...
                Wait  10`
                ExecWait  $Script_80228574
            EndIf
        Case  ==  0000000C
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022A018
{
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    If  *Var[1]  ==  00000000
        Goto  0
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  FallToGoal        ( .Actor:Self 0000000A )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    Call  HPBarToCurrent    ( .Actor:Self )
    Call  8027D2D8  ( FFFFFF81 )
    Label  0
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Add   *Var[2]  0000000A
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  SetAnimation      ( .Actor:Self 00000002 00210015 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Wait  15`
    Call  PlaySound ( 000003E5 )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 00000104 )
    Call  SetBattleCamOffsetZ   ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Call  SetAnimation      ( .Actor:Self 00000002 00210014 )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80227F50 )
    Wait  60`
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Return
    End
}

#new:Script $Script_8022A39C
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[4]  *Var[1]
    MulF  *Var[4]  *Fixed[0.3]
    Call  FlyToGoal     ( .Actor:Self 00000000 *Var[4] .Easing:Linear )
    Return
    End
}

#new:Script $Script_8022A480
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  0035D000
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
            Wait  10`
            ExecWait  $Script_802284DC
            Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 0023000F 00230003 ) % Don't underestimate me, Mario! I'll never be be sc ...
            ExecWait  $Script_80228574
        EndIf
    EndIf
    Return
    End
}

PADDING: 8022A548 to 8022A550 (00459988 to 00459990)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8022A550
{
    .Status:Normal    00240002
    .Status:Sleep     0024000C
    .Status:Stone     00240000
    .Status:Poison    00240000
    .Status:Stop      00240000
    .Status:Static    00240000
    .Status:Paralyze  00240000
    .Status:Dizzy     0024000D
    .Status:End
}

MISSING: 8022A594 to 8022A5D8 (004599D4 to 00459A18)
00000001 00240002 00000006 00240000 0000000C 00240000 00000009 00240000
00000008 00240000 0000000B 00240000 00000005 00240000 00000004 0024000D
00000000

#new:IdleAnimations $IdleAnimations_8022A5D8
{
    .Status:Normal    00210003
    .Status:Sleep     0021001C
    .Status:Stone     00210000
    .Status:Poison    00210000
    .Status:Stop      00210000
    .Status:Static    00210000
    .Status:Paralyze  00210000
    .Status:Dizzy     0021001D
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022A61C
{
    .Status:Normal    00210014
    .Status:End
}

#new:DefenseTable $DefenseTable_8022A628
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_8022A634
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep      35`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      45`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   45`
    .Status:Shrink     60`
    .Status:Stop       60`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -2`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_8022A6E0
{
    00800001 01000000 001C00FF $IdleAnimations_8022A550 $DefenseTable_8022A628 00000000 00000000 FEF90000 00000000
    00020000 02000000 001E00FF $IdleAnimations_8022A5D8 $DefenseTable_8022A628 00000000 00000000 00000000 00000000
}

#new:Actor $JrTroopa5
{
    % stats
    [Index]        8Cb
    [Level]        65`b
    [MaxHP]        50`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022A634
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_8022A6E0
    [Script]      $Script_Init_8022ACE4
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -20`b  35`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_8022A750
{
    Call  GetStatusFlags    ( .Actor:Self *Var[2] )
    If  *Var[2]  &  0035D000
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[2] )
    If  *Var[2]  &  00080000
        Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
        If  *Var[2]  ==  000000B7
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000001E
            Call  ShowEmote     ( 00000000 .Emote:Question FFFFFFD3 0000001E 00000002 *Var[0] *Var[1] *Var[2] 00000005 )
            Wait  30`
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_8022A880
{
    Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000
        Add   *Var[1]  00000010
    Else
        Add   *Var[1]  00000006
    EndIf
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  00000000
        Loop  00000020
            Wait  1`
            Add   *Var[0]  0000002D
            Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
        EndLoop
    EndThread
    Wait  32`
    Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_8022ABA8
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000026 )
    Call  SetBattleCamZoom  ( 00000100 )
    Call  MoveBattleCamOver ( 0000000F )
    Return
    End
}

#new:Script $Script_8022AC40
{
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000C )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022AC80
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000037 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_8022ACE4
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B4F0 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022ADA4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADD8 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022BB44 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8022ADA4
{
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8022ADD8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoNormalHit
            ExecWait  $Script_8022A750
            ExecWait  $Script_8022C2A4
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240000
            ExecWait  $Script_8022BF1C
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[0]  00000001
            Set   *Var[1]  0024000A
            Set   *Var[2]  0024000B
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[0]  00000001
            Set   *Var[1]  0024000A
            Set   *Var[2]  0024000B
            ExecWait  DoBurnHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0024000B
            ExecWait  $Script_8022BF1C
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  $Script_8022BF1C
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240005
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240009
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240000
            ExecWait  $Script_8022BF1C
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240002
            ExecWait  DoImmune
            ExecWait  $Script_8022A750
            ExecWait  $Script_8022C2A4
        EndCaseGroup
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 0024000F )
                Wait  1000`
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 0024000F )
                Wait  20`
                ExecWait  $Script_8022ABA8
                Call  ActorSpeak    ( 001D019B .Actor:Self 00000001 0024000E 00240003 ) % Hey, Mario!! Don't even think of trying to  beat m ...
                Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
                ExecWait  $Script_8022AC40
            EndIf
        Case  ==  .Event:SpikeContact % 2A
            Call  SetAnimation  ( .Actor:Self 00000001 00240009 )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00240005 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240002
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00240002
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022B4F0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000001 00240006 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000024
        SetF  *Var[5]  *Fixed[1.0]
    Else
        Set   *Var[3]  00000000
        Set   *Var[4]  0000000E
        SetF  *Var[5]  *Fixed[0.4]
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[3]
    Add   *Var[1]  *Var[4]
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] *Var[5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  SetAnimation  ( .Actor:Self 00000001 00240007 )
    Call  UseCamPreset  ( 00000002 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  GetActorPos       ( .Actor:Player *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000078
            Add   *Var[4]  00000014
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Set   *Var[6]  FFFFFFF8
                Set   *Var[7]  00000014
                SetF  *Var[8]  *Fixed[1.0]
            Else
                Set   *Var[6]  FFFFFFFD
                Set   *Var[7]  00000008
                SetF  *Var[8]  *Fixed[0.4]
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  *Var[6]
            Add   *Var[1]  *Var[7]
            Call  PlayEffect    ( ~FX:ShapeSpell:Projectile *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 0000001E 00000000 00000000 00000000 00000000 00000000 )
            Wait  35`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  GetActorPos       ( .Actor:Player *Var[3] *Var[4] *Var[5] )
    Add   *Var[4]  00000014
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 % 80000
        Set   *Var[6]  FFFFFFF8
        Set   *Var[7]  00000014
        SetF  *Var[8]  *Fixed[1.0]
    Else
        Set   *Var[6]  FFFFFFFD
        Set   *Var[7]  00000008
        SetF  *Var[8]  *Fixed[0.4]
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[6]
    Add   *Var[1]  *Var[7]
    Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 0000000F 00000000 00000000 00000000 00000000 00000000 )
    Wait  15`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000008 00000020 )
    Switch  *Var[0]
        Case  ==  .HitResult:Hit % 0
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Call  GetLastDamage ( .Actor:Player *Var[1] )
                If  *Var[1]  !=  00000000
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                EndIf
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8022BB44
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000C
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetStatusFlags    ( .Actor:Self *Var[1] )
                If  *Var[1]  !&  0035D000
                    Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
                    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
                    If  *Var[0]  ==  00000000
                        ExecWait  $Script_8022ABA8
                        Wait  20`
                    EndIf
                    Call  ActorSpeak    ( 001200DD .Actor:Self 00000001 0024000E 00240003 ) % Mario! You like magic tricks? You won't like this  ...
                    Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
                    ExecWait  $Script_8022AC40
                    Wait  20`
                EndIf
            Else
                Wait  20`
            EndIf
            Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
            Return
        Case  ==  0000000B
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000001
                Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
                ExecWait  $Script_8022ABA8
                Wait  20`
                Call  ActorSpeak    ( 001200DE .Actor:Self 00000001 0024000E 00240003 ) % Ha ha ha ha!! That felt fantastic! I just keep on  ...
                Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
                ExecWait  $Script_8022AC40
                Wait  10`
            EndIf
            Return
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Wait  15`
                ExecWait  $Script_8022ABA8
                Wait  10`
                Call  ActorSpeak    ( 001200DB .Actor:Self 00000002 0021001A 0021001B ) % Oh, I've been busy, Mario! I learned cooool techni ...
                Wait  8`
                ExecWait  $Script_8022A880
                Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
                Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
                Wait  15`
                Call  ActorSpeak    ( 001200DC .Actor:Self 00000001 0024000E 00240003 ) % Look at that piece of work! I've been taking a lit ...
                Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
                Wait  10`
                ExecWait  $Script_8022AC40
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022BF1C
{
    Call  8027D32C  ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  80269E80  ( *Var[5] )
    Switch  *Var[5]
        CaseOR  ==  0000000A
        CaseOR  ==  0000000E
        CaseOR  ==  0000000C
        CaseOR  ==  00000010
        CaseOR  ==  0000000B
        CaseOR  ==  0000000F
        CaseOR  ==  0000000D
        CaseOR  ==  00000011
        CaseOR  ==  00000002
        EndCaseGroup
        Default
            Set   *Var[2]  00000000
            Loop  00000018
                Call  SetActorYaw   ( .Actor:Self *Var[2] )
                Add   *Var[2]  0000001E
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndSwitch
    Label  0
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Add   *Var[2]  0000000A
        Loop  00000003
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
        EndLoop
    EndThread
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  SetAnimation      ( .Actor:Self 00000002 00210015 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Wait  15`
    Call  PlaySound ( 000003E5 )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 00000104 )
    Call  SetBattleCamOffsetZ   ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Call  SetAnimation      ( .Actor:Self 00000002 00210014 )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8022A61C )
    Wait  60`
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Return
    End
}

#new:Script $Script_8022C2A4
{
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    If  *Var[0]  ==  00000001
        Wait  10`
        ExecWait  $Script_8022ABA8
        Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 0024000E 00240003 ) % Don't underestimate me, Mario! I'll never be be sc ...
        Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  !=  00000001
            ExecWait  $Script_8022AC40
        EndIf
    EndIf
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8022C370
{
    .Status:Normal    00210003
    .Status:Sleep     0021001C
    .Status:Stone     00210000
    .Status:Stop      00210000
    .Status:Paralyze  00210000
    .Status:Dizzy     0021001D
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022C3A4
{
    .Status:Normal    00230003
    .Status:Sleep     0023000D
    .Status:Stone     00230000
    .Status:Stop      00230000
    .Status:Paralyze  00230000
    .Status:Dizzy     0023000E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022C3D8
{
    .Status:Normal    00240002
    .Status:Sleep     0024000C
    .Status:Stone     00240000
    .Status:Stop      00240000
    .Status:Paralyze  00240000
    .Status:Dizzy     0024000D
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022C40C
{
    .Status:Normal    00210014
    .Status:End
}

#new:DefenseTable $DefenseTable_8022C418
{
    .Element:Normal 00000002
    .Element:End
}

#new:DefenseTable $DefenseTable_8022C424
{
    .Element:Normal 00000002
    .Element:End
}

#new:DefenseTable $DefenseTable_8022C430
{
    .Element:Normal 00000002
    .Element:End
}

#new:StatusTable $StatusTable_8022C43C
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep      30`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      40`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   40`
    .Status:Shrink     60`
    .Status:Stop       60`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -2`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -2`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:StatusTable $StatusTable_8022C4E8
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep      30`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   40`
    .Status:Shrink     50`
    .Status:Stop       50`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -2`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:StatusTable $StatusTable_8022C594
{
    .Status:Normal    100`
    .Status:Default   100`
    .Status:Sleep      30`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      40`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   40`
    .Status:Shrink     50`
    .Status:Stop       50`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -2`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -2`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_8022C640
{
    00800000 01000000 001A00FF $IdleAnimations_8022C370 $DefenseTable_8022C418 00000000 00000000 FEFA0000 00000000
    00020001 02000000 FB2000FF $IdleAnimations_8022C3A4 $DefenseTable_8022C424 00000010 00000000 00F50000 00000000
    00020001 03000000 001C00FF $IdleAnimations_8022C3D8 $DefenseTable_8022C430 00000000 00000000 FEF90000 00000000
}

#new:Actor $JrTroopa6
{
    % stats
    [Index]        8Db
    [Level]        74`b
    [MaxHP]        60`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022C43C
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8022C640
    [Script]      $Script_Init_8022CF80
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  70`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -20`b  35`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_8022C6D4
{
    Call  GetStatusFlags    ( .Actor:Self *Var[2] )
    If  *Var[2]  &  0035D000
        Return
    EndIf
    Call  GetBattleFlags    ( *Var[2] )
    If  *Var[2]  &  00080000
        Call  GetMenuSelection  ( *Var[0] *Var[1] *Var[2] )
        If  *Var[2]  ==  000000B7
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
            Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000001E
            Call  ShowEmote     ( 00000000 .Emote:Question FFFFFFD3 0000001E 00000002 *Var[0] *Var[1] *Var[2] 00000005 )
            Wait  30`
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_8022C804
{
    Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000
        Add   *Var[1]  00000010
    Else
        Add   *Var[1]  00000006
    EndIf
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( 00000013 00000001 *Var[0] *Var[1] *Var[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  00000000
        Loop  00000020
            Wait  1`
            Add   *Var[0]  0000002D
            Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
        EndLoop
    EndThread
    Wait  32`
    Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_8022CB2C
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  UseCamPreset      ( 00000007 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetBattleCamOffsetZ   ( 00000026 )
    Call  SetBattleCamZoom  ( 00000100 )
    Call  MoveBattleCamOver ( 0000000F )
    Return
    End
}

#new:Script $Script_8022CBC4
{
    Call  802535B4  ( 00000001 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000C )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022CC04
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000037 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8022CC68
{
    .Status:Normal    00210014
    .Status:End
}

#new:Script $Script_8022CC74
{
    Set   *Var[A]  *Var[0]
    Call  8027D32C      ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetAnimation  ( .Actor:Self *Var[A] *Var[1] )
    Wait  10`
    Call  80269E80      ( *Var[5] )
    Switch  *Var[5]
        CaseOR  ==  0000000A
        CaseOR  ==  0000000E
        CaseOR  ==  0000000C
        CaseOR  ==  00000010
        CaseOR  ==  0000000B
        CaseOR  ==  0000000F
        CaseOR  ==  0000000D
        CaseOR  ==  00000011
        CaseOR  ==  00000002
        EndCaseGroup
        Default
            Set   *Var[2]  00000000
            Loop  00000018
                Call  SetActorYaw   ( .Actor:Self *Var[2] )
                Add   *Var[2]  0000001E
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
    EndSwitch
    Label  0
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000A
    Add   *Var[2]  0000000A
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySound ( 000003E5 )
    Call  DropStarPoints    ( .Actor:Self )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  SetBattleCamZoom  ( 00000104 )
    Call  SetBattleCamOffsetZ   ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
    Call  SetAnimation      ( .Actor:Self *Var[A] 00210027 )
    Wait  12`
    Call  SetAnimation      ( .Actor:Self *Var[A] 00210014 )
    Call  SetIdleAnimations ( .Actor:Self *Var[A] $IdleAnimations_8022CC68 )
    Wait  60`
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Return
    End
}

#new:Script $Script_Init_8022CF80
{
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000005 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022D920 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022D058 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022D1C4 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8023147C )
    Return
    End
}

#new:Script $Script_Idle_8022D058
{
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000002
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            If  *Var[A]  &  00041000
                Call  SetTargetOffset       ( .Actor:Self 00000002 FFFFFFF1 0000001C )
                Call  8027D4C8  ( FFFFFF81 00000002 00000004 FFFFFFFA )
                Call  $Function_80218AD0    ( FFFFFFE7 0000001B FFFFFFFF 0000001B )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000002 FFFFFFF8 00000021 )
                Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFFA )
                Call  $Function_80218AD0    ( FFFFFFEA 0000001E 00000002 0000001C )
            EndIf
        Default
            Call  $Function_80218AD0    ( FFFFFFEC 00000023 0000000A 00000019 )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8022D1C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[A] )
    Switch  *Var[A]
        Case  ==  .Event:HitCombo % 9
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoNormalHit
            ExecWait  $Script_8022C6D4
            ExecWait  $Script_80232170
        Case  ==  .Event:Death % 20
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoNormalHit
            Wait  10`
            ExecWait  $Script_802318F8
            Return
        Case  ==  .Event:BurnHit % E
            Set   *Var[1]  00000001
            ExecWait  $Script_802315F0
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            Set   *Var[1]  00000001
            ExecWait  $Script_802315F0
            ExecWait  DoBurnHit
            Wait  10`
            ExecWait  $Script_802318F8
            Return
        Case  ==  .Event:SpinSmashHit % B
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_802318F8
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 00000000 )
            Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoShockHit
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoJumpBack
            ExecWait  $Script_80232040
        Case  ==  .Event:ShockDeath % 26
            Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 00000000 )
            Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoShockHit
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoJumpBack
            ExecWait  $Script_802318F8
            Return
        Case  ==  00000017 % 17
            Set   *Var[1]  00000005
            ExecWait  $Script_802315F0
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            Set   *Var[1]  00000005
            ExecWait  $Script_802315F0
            ExecWait  DoImmune
            ExecWait  $Script_8022C6D4
            ExecWait  $Script_80232170
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            Switch  *Var[3]
                Case  &  00041000
                    Add   *Var[0]  FFFFFFF3
                    Add   *Var[1]  00000025
                Case  &  00080000
                    Add   *Var[0]  FFFFFFFF
                    Add   *Var[1]  0000000E
                Default
                    Add   *Var[0]  FFFFFFFC
                    Add   *Var[1]  00000025
            EndSwitch
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Set   *Var[1]  00000002
                ExecWait  $Script_802315F0
                Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
                Wait  1000`
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Set   *Var[1]  00000005
                ExecWait  $Script_802315F0
                Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
                Wait  20`
                ExecWait  $Script_8022CB2C
                Set   *Var[1]  00000003
                ExecWait  $Script_802315F0
                Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
                Call  ActorSpeak    ( 001D019B .Actor:Self *Var[0] FFFFFFFF FFFFFFFF ) % Hey, Mario!! Don't even think of trying to  beat m ...
                ExecWait  $Script_8022CBC4
            EndIf
        Case  ==  .Event:SpikeContact % 2A
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  DoNormalHit
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_80232040
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00210003
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022D920
{
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    If  *Var[0]  !=  00000003
        Call  GetActorHP    ( .Actor:Self *Var[1] )
        Call  GetEnemyMaxHP ( .Actor:Self *Var[2] )
        Mul   *Var[1]  00000064
        Div   *Var[1]  *Var[2]
        If  *Var[0]  ==  00000001
            If  *Var[1]  <  00000041
                ExecWait  $Script_8022DD48
            EndIf
        Else
            If  *Var[1]  <  00000023
                ExecWait  $Script_8022DF54
            EndIf
        EndIf
    EndIf
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    If  *Var[0]  <  0000000F
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  !&  00000002
            ConstOR  *Var[0] 00000002
            Call  SetActorVar       ( .Actor:Self 00000002 *Var[0] )
            Call  UseCamPreset      ( 0000000E )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  MoveBattleCamOver ( 00000014 )
            Call  GetActorVar       ( .Actor:Self 00000003 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000002
                    Call  SetAnimation  ( .Actor:Self 00000002 0023000F )
                Case  ==  00000003
                    Call  SetAnimation  ( .Actor:Self 00000003 0024000E )
                Default
                    Call  SetAnimation  ( .Actor:Self 00000001 00210016 )
            EndSwitch
            Call  ActorSpeak    ( 00130060 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Aaaargh!!! You've still got some skills!!
        EndIf
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000002
            Call  RandInt   ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                ExecWait  $Script_8022ED10
            Else
                ExecWait  $Script_8022F468
            EndIf
        Case  ==  00000003
            Call  RandInt   ( 00000064 *Var[0] )
            Switch  *Var[0]
                Case  <  0000003C
                    ExecWait  $Script_80230034
                Case  <  00000050
                    ExecWait  $Script_80230794
                Default
                    Call  GetActorHP    ( .Actor:Self *Var[0] )
                    Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
                    If  *Var[0]  !=  *Var[1]
                        Call  GetActorVar   ( .Actor:Self 00000004 *Var[2] )
                        If  *Var[2]  >  00000000
                            Sub   *Var[2]  00000001
                            Call  SetActorVar   ( .Actor:Self 00000004 *Var[2] )
                            ExecWait  $Script_8023106C
                        Else
                            ExecWait  $Script_80230034
                        EndIf
                    Else
                        ExecWait  $Script_80230034
                    EndIf
            EndSwitch
        Default
            ExecWait  $Script_8022E198
    EndSwitch
    Return
    End
}

#new:Script $Script_8022DD48
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  ActorSpeak        ( 0013005E .Actor:Self 00000001 00210018 00210018 ) % Darn it!!!!! OK, try this on for size!! Ultimate P ...
    ExecWait  $Script_8022C804
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .True )
    Wait  10`
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    Call  SetGoalToHome     ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000014 0000003C 00000000 )
    Call  FlyToGoal ( .Actor:Self 0000001E 00000000 .Easing:Linear )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Call  SetActorVar       ( .Actor:Self 00000003 00000002 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8022C4E8 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
    Return
    End
}

#new:Script $Script_8022DF54
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  ActorSpeak        ( 0013005F .Actor:Self 00000002 0023000F 0023000F ) % Shoooot!!!!!!!!!!! OK, maybe something else...  Ho ...
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000078 )
    ExecWait  $Script_8022C804
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000014
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FallToGoal        ( .Actor:Self 0000000A )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Call  SetActorVar       ( .Actor:Self 00000003 00000003 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8022C594 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Return
    End
}

#new:Script $Script_8022E198
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00210009 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[0]  00000014
    Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000008 00000010 )
    Switch  *Var[F]
        Case  ==  .HitResult:Lucky % 5
            Thread
                Call  SetAnimation  ( .Actor:Self 00000001 0021000A )
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 0021000C )
            EndThread
            Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210021 )
            Thread
                Wait  3`
                Call  SetAnimation  ( .Actor:Self 00000001 00210014 )
            EndThread
            Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
            Call  EnemyTestTarget       ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  FlyToGoal     ( .Actor:Self 00000010 00000000 .Easing:CubicOut )
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        Case  ==  .HitResult:Miss % 6
            Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000032
            Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E2 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0021000E )
            Wait  2`
            Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Add   *Var[2]  00000003
            Thread
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
            EndThread
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000012 .False .True .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00210024 )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E2 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 0021000E )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
    Thread
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
    EndThread
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Add   *Var[0]  0000001E
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
    Sub   *Var[0]  0000000A
    Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
    Wait  8`
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
    Call  EnableIdleScript      ( .Actor:Self 00000001 )
    Call  UseIdleAnimation      ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022ED10
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00230007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000006 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00230008 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 00000014 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00230003 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Return
        EndCaseGroup
        Default
    EndSwitch
    Wait  10`
    Call  UseCamPreset  ( 00000042 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000002 00230008 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
    Call  UseCamPreset  ( 00000002 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    Wait  10`
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  YieldTurn ( )
    Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
    Call  SetAnimation  ( .Actor:Self 00000002 00230003 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022F468
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:CloseShell )
    Call  SetAnimation      ( .Actor:Self 00000002 00230011 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000002 00230005 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000006 00000010 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
                Call  SetGoalToTarget       ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  0000000A
                Set   *Var[1]  0000000C
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            EndThread
            Set   *Var[0]  00000000
            Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
            Loop  00000014
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  $Function_80218D28    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
                Set   *Var[1]  *Var[4]
                Set   *Var[2]  *Var[5]
                Set   *Var[3]  *Var[6]
                Wait  1`
            EndLoop
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
                Sub   *Var[1]  00000028
                Set   *Var[2]  0000000A
                Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
                Call  JumpToGoal    ( .Actor:Self 0000000E .False .True .False )
            EndThread
            Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
            Loop  0000000E
                Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                Call  $Function_80218D28    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                Set   *Var[7]  *Var[0]
                Add   *Var[7]  000000B4
                Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var[7] )
                Set   *Var[1]  *Var[4]
                Set   *Var[2]  *Var[5]
                Set   *Var[3]  *Var[6]
                Wait  1`
            EndLoop
            Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 00000000 )
            Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:OpenShell )
            Call  SetAnimation      ( .Actor:Self 00000002 00230012 )
            Wait  10`
            Call  SetAnimation      ( .Actor:Self 00000002 00230007 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
    EndSwitch
    Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 0000000C 00000000 )
    Thread
        Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
    EndThread
    Set   *Var[0]  00000000
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Loop  00000014
        Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
        Call  $Function_80218D28    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
        Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
        Set   *Var[1]  *Var[4]
        Set   *Var[2]  *Var[5]
        Set   *Var[3]  *Var[6]
        Wait  1`
    EndLoop
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000009 00000020 )
    Call  UseCamPreset      ( 00000002 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Add   *Var[1]  00000028
        Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  JumpToGoal    ( .Actor:Self 0000000E .False .True .False )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Loop  0000000E
        Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
        Call  $Function_80218D28    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
        Set   *Var[7]  *Var[0]
        Add   *Var[7]  000000B4
        Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var[7] )
        Set   *Var[1]  *Var[4]
        Set   *Var[2]  *Var[5]
        Set   *Var[3]  *Var[6]
        Wait  1`
    EndLoop
    Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 00000000 )
    Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:OpenShell )
    Call  SetAnimation      ( .Actor:Self 00000002 00230012 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000002 00230007 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToHome     ( .Actor:Self )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8022FEC8
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_80230034
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000024
        SetF  *Var[5]  *Fixed[1.0]
    Else
        Set   *Var[3]  00000000
        Set   *Var[4]  0000000E
        SetF  *Var[5]  FA84329A
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[3]
    Add   *Var[1]  *Var[4]
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] *Var[5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  SetAnimation  ( .Actor:Self 00000003 00240007 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
    Switch  *Var[A]
        Case  ==  .HitResult:Miss % 6
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  GetActorPos       ( .Actor:Player *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000078
            Add   *Var[4]  00000014
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Set   *Var[6]  FFFFFFF8
                Set   *Var[7]  00000014
                SetF  *Var[8]  *Fixed[1.0]
            Else
                Set   *Var[6]  FFFFFFFD
                Set   *Var[7]  00000008
                SetF  *Var[8]  FA84329A
            EndIf
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  *Var[6]
            Add   *Var[1]  *Var[7]
            Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 0000001E 00000000 00000000 00000000 00000000 00000000 )
            Wait  35`
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Case  ==  .HitResult:Lucky % 5
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000C
                Call  PlayEffect    ( ~FX:FaintDustCloud *Var[0] *Var[1] *Var[2] *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  SetAnimation  ( .Actor:Self 00000003 00240008 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Wait  40`
                Sub   *Var[0]  00000007
                Add   *Var[1]  0000000E
                Add   *Var[2]  00000004
                Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  20`
                Call  SetAnimation  ( .Actor:Self 00000003 00240002 )
            EndThread
            Wait  20`
            Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            Wait  40`
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  GetActorPos       ( .Actor:Player *Var[3] *Var[4] *Var[5] )
    Add   *Var[4]  00000014
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000 % 80000
        Set   *Var[6]  FFFFFFF8
        Set   *Var[7]  00000014
        SetF  *Var[8]  *Fixed[1.0]
    Else
        Set   *Var[6]  FFFFFFFD
        Set   *Var[7]  00000008
        SetF  *Var[8]  FA84329A
    EndIf
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[6]
    Add   *Var[1]  *Var[7]
    Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 0000000F 00000000 00000000 00000000 00000000 00000000 )
    Wait  15`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000008 00000020 )
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80230794
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000024
        SetF  *Var[5]  *Fixed[1.0]
    Else
        Set   *Var[3]  00000000
        Set   *Var[4]  0000000E
        SetF  *Var[5]  FA84329A
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[3]
    Add   *Var[1]  *Var[4]
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] *Var[5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver     ( 0000003C )
    Wait  30`
    Call  PlaySoundAtActor      ( .Actor:Self .Sound:BigPowerUp )
    Call  SetAnimation  ( .Actor:Self 00000003 00240007 )
    Call  $Function_80218F60 ( )
    Call  MakeLerp      ( 00000000 000000C8 0000003C .Easing:CosInOut )
    Label  0
    Call  UpdateLerp ( )
    Call  $Function_80218FA4    ( *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  RandInt   ( 00000028 *Var[1] )
    Add   *Var[0]  *Var[1]
    Add   *Var[0]  00000032
    Set   *Var[1]  000000C8
    Call  PlaySoundAtActor  ( .Actor:Self 00000366 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
    Switch  *Var[A]
        Case  ==  .HitResult:Miss % 6
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[3] 00000000 *Var[5] )
            Call  PlayEffect        ( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
            Wait  20`
            Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
            Label  2
            Call  UpdateLerp ( )
            Call  $Function_80218FA4    ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  2
            EndIf
            Wait  20`
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Case  ==  .HitResult:Lucky % 5
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  RandInt       ( 00000028 *Var[1] )
            Sub   *Var[0]  *Var[1]
            Set   *Var[1]  000000C8
            Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Call  PlayEffect    ( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] 00000000 *Var[5] *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
            Thread
                Wait  10`
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000C
                Call  PlayEffect    ( ~FX:FaintDustCloud *Var[0] *Var[1] *Var[2] *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  SetAnimation  ( .Actor:Self 00000003 00240008 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Wait  40`
                Sub   *Var[0]  00000007
                Add   *Var[1]  0000000E
                Add   *Var[2]  00000004
                Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  20`
                Call  SetAnimation  ( .Actor:Self 00000003 00240002 )
            EndThread
            Wait  20`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
            Label  2
            Call  UpdateLerp ( )
            Call  $Function_80218FA4    ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  2
            EndIf
            Wait  20`
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] 00000000 *Var[5] )
    Call  PlayEffect        ( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
    Wait  14`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000030 00000000 00010000 00000009 00000020 )
    Call  UseCamPreset      ( 00000002 )
    Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
    Label  2
    Call  UpdateLerp ( )
    Call  $Function_80218FA4    ( *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  2
    EndIf
    Wait  20`
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8023106C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Wait  30`
    Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000024
        SetF  *Var[5]  *Fixed[1.0]
    Else
        Set   *Var[3]  00000000
        Set   *Var[4]  0000000E
        SetF  *Var[5]  FA84329A
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[3]
    Add   *Var[1]  *Var[4]
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] *Var[5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Add   *Var[2]  00000032
    Call  PlayEffect    ( ~FX:Sparkles:Random *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Recover:LittleHeart *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  SetAnimation  ( .Actor:Self 00000003 00240002 )
    Wait  10`
    Call  GetEnemyMaxHP ( .Actor:Self *Var[0] )
    Mul   *Var[0]  00000011
    Div   *Var[0]  00000064
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
        Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( .Actor:Self *Var[0] .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Wait  30`
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_8023147C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  !&  00000001
                ConstOR  *Var[0] 00000001
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                Call  UseCamPreset  ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  MoveBattleCamOver     ( 00000014 )
                Call  ActorSpeak    ( 0013005D .Actor:Self 00000001 0021001A 0021001A ) % Here it comes, Mario!! This is the final fight!!!  ...
                Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
            EndIf
        Case  ==  0000000C
        Case  ==  0000000B
        Case  ==  0000000A
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802315F0
{
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[1]
        Case  ==  00000000
            Switch  *Var[0]
                Case  ==  00000002
                    Set   *Var[1]  00230009
                Case  ==  00000003
                    Set   *Var[1]  00240009
                Default
                    Set   *Var[1]  00210011
            EndSwitch
        Case  ==  00000001
            Switch  *Var[0]
                Case  ==  00000002
                    Set   *Var[1]  0023000A
                    Set   *Var[2]  0023000B
                Case  ==  00000003
                    Set   *Var[1]  0024000A
                    Set   *Var[2]  0024000B
                Default
                    Set   *Var[1]  00210028
                    Set   *Var[2]  00210029
            EndSwitch
        Case  ==  00000002
            Switch  *Var[0]
                Case  ==  00000002
                    Set   *Var[1]  00230010
                Case  ==  00000003
                    Set   *Var[1]  0024000F
                Default
                    Set   *Var[1]  0021002A
            EndSwitch
        Case  ==  00000003
            Switch  *Var[0]
                Case  ==  00000002
                    Set   *Var[1]  0023000F
                Case  ==  00000003
                    Set   *Var[1]  0024000E
                Default
                    Set   *Var[1]  00210016
            EndSwitch
        Case  ==  00000004
            Switch  *Var[0]
                Case  ==  00000002
                    Set   *Var[1]  00230007
                Case  ==  00000003
                    Set   *Var[1]  00240005
                Default
                    Set   *Var[1]  00210009
            EndSwitch
        Default
            Switch  *Var[0]
                Case  ==  00000002
                    Set   *Var[1]  00230003
                Case  ==  00000003
                    Set   *Var[1]  00240002
                Default
                    Set   *Var[1]  00210003
            EndSwitch
    EndSwitch
    Return
    End
}

#new:Script $Script_802318F8
{
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000002
            Call  UseCamPreset  ( 00000002 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            If  *Var[1]  ==  00000000
                Goto  0
            EndIf
            Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
            Call  8027D32C  ( FFFFFF81 )
            Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Call  FallToGoal        ( .Actor:Self 0000000A )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Call  HPBarToCurrent    ( .Actor:Self )
            Call  8027D2D8  ( FFFFFF81 )
            Label  0
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A
                Add   *Var[2]  0000000A
                Loop  00000003
                    Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  3`
                EndLoop
            EndThread
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00210015 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  15`
            Call  PlaySound ( 000003E5 )
            Call  DropStarPoints    ( .Actor:Self )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  UseCamPreset      ( 0000000E )
            Call  SetBattleCamZoom  ( 00000104 )
            Call  SetBattleCamOffsetZ   ( 0000000F )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  MoveBattleCamOver ( 0000001E )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
            Call  SetAnimation      ( .Actor:Self 00000001 00210014 )
            Wait  60`
            Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
            Return
        Case  ==  00000003
            Call  8027D32C  ( FFFFFF81 )
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  80269E80  ( *Var[5] )
            Switch  *Var[5]
                CaseOR  ==  0000000A
                CaseOR  ==  0000000E
                CaseOR  ==  0000000C
                CaseOR  ==  00000010
                CaseOR  ==  0000000B
                CaseOR  ==  0000000F
                CaseOR  ==  0000000D
                CaseOR  ==  00000011
                CaseOR  ==  00000002
                EndCaseGroup
                Default
                    Set   *Var[2]  00000000
                    Loop  00000018
                        Call  SetActorYaw   ( .Actor:Self *Var[2] )
                        Add   *Var[2]  0000001E
                        Wait  1`
                    EndLoop
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
            EndSwitch
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A
                Add   *Var[2]  0000000A
                Loop  00000003
                    Call  PlayEffect    ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  3`
                EndLoop
            EndThread
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00210015 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  15`
            Call  PlaySound ( 000003E5 )
            Call  DropStarPoints    ( .Actor:Self )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  UseCamPreset      ( 0000000E )
            Call  SetBattleCamZoom  ( 00000104 )
            Call  SetBattleCamOffsetZ   ( 0000000F )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  MoveBattleCamOver ( 0000001E )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
            Call  SetAnimation      ( .Actor:Self 00000001 00210014 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022C40C )
            Wait  60`
            Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
            Return
        Default
            Set   *Var[1]  00000000
            ExecWait  $Script_802315F0
            ExecWait  $Script_8022CC74
            Return
    EndSwitch
    Return
    End
}

#new:Script $Script_80232040
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000002
            Set   *Var[1]  00000004
            ExecWait  $Script_802315F0
            Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
        Case  ==  00000003
            Set   *Var[1]  00000004
            ExecWait  $Script_802315F0
            ExecWait  DoReturnHome
        Default
            Set   *Var[1]  00000004
            ExecWait  $Script_802315F0
            ExecWait  DoReturnHome
    EndSwitch
    Return
    End
}

#new:Script $Script_80232170
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000001
        Wait  10`
        ExecWait  $Script_8022CB2C
        Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000002
                Call  ActorSpeak    ( 001D019A .Actor:Self 00000002 0023000F 00230003 ) % Don't underestimate me, Mario! I'll never be be sc ...
            Case  ==  00000003
                Call  ActorSpeak    ( 001D019A .Actor:Self 00000003 0024000E 00240003 ) % Don't underestimate me, Mario! I'll never be be sc ...
            Default
                Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 00210016 00210003 ) % Don't underestimate me, Mario! I'll never be be sc ...
        EndSwitch
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  !=  00000001
            ExecWait  $Script_8022CBC4
        EndIf
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

PADDING: 802322C8 to 802322D0 (00461708 to 00461710)
00000000 00000000

#new:Script $Script_BeforeBattle_802322D0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_802322F0
{
    Return
    End
}

#new:Stage $Stage_80232300
{
    $ASCII_80234EA0  % kmr_tex
    $ASCII_80234E90  % kmr_bt02_shape
    00000000
    $Script_BeforeBattle_802322D0
    $Script_AfterBattle_802322F0
    $ASCII_80234E88  % kmr_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80232328 to 80232330 (00461768 to 00461770)
00000000 00000000

#new:Script $Script_80232330
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218FE0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232428
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218FE0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232560
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218FE0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_802326B8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80232330
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80232330
    Return
    End
}

#new:Script $Script_AfterBattle_80232730
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80232740
{
    ~Model:kmr_bt03:n2
    ~Model:kmr_bt03:m4
    00000000
}

#new:Stage $Stage_8023274C
{
    $ASCII_80234ED0  % kmr_tex
    $ASCII_80234EC0  % kmr_bt03_shape
    $ASCII_80234EB0  % kmr_bt03_hit
    $Script_BeforeBattle_802326B8
    $Script_AfterBattle_80232730
    $ASCII_80234EA8  % kmr_bg
    $ForegroundModelList_80232740
    00000000
    00000000
    00000000
}

PADDING: 80232774 to 80232780 (00461BB4 to 00461BC0)
00000000 00000000 00000000

#new:Script $Script_80232780
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219250    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232878
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219250    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802329B0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219250    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80232B08
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80232780
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80232780
    Return
    End
}

#new:Script $Script_AfterBattle_80232B80
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80232B90
{
    ~Model:kmr_bt04:m4
    ~Model:kmr_bt04:n2
    00000000
}

#new:Stage $Stage_80232B9C
{
    $ASCII_80234F00  % kmr_tex
    $ASCII_80234EF0  % kmr_bt04_shape
    $ASCII_80234EE0  % kmr_bt04_hit
    $Script_BeforeBattle_80232B08
    $Script_AfterBattle_80232B80
    $ASCII_80234ED8  % kmr_bg
    $ForegroundModelList_80232B90
    00000000
    00000000
    00000000
}

PADDING: 80232BC4 to 80232BD0 (00462004 to 00462010)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80232BD0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802194C0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232CC8
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802194C0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232E00
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802194C0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80232F58
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  EnableModel       ( ~Model:kmr_bt05:yuka .False )
    Call  EnableModel       ( ~Model:kmr_bt05:o303 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80232FA0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80232FB0
{
    ~Model:kmr_bt05:n2
    ~Model:kmr_bt05:m4
    00000000
}

#new:Stage $Stage_80232FBC
{
    $ASCII_80234F30  % kmr_tex
    $ASCII_80234F20  % kmr_bt05_shape
    $ASCII_80234F10  % kmr_bt05_hit
    $Script_BeforeBattle_80232F58
    $Script_AfterBattle_80232FA0
    $ASCII_80234F08  % kmr_bg
    $ForegroundModelList_80232FB0
    00000000
    00000000
    00000000
}

PADDING: 80232FE4 to 80232FF0 (00462424 to 00462430)
00000000 00000000 00000000

#new:Script $Script_80232FF0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219730    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802330E8
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219730    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80233220
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219730    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80233378
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  $Function_80219998 ( )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80232FF0
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80232FF0
    Return
    End
}

#new:Script $Script_AfterBattle_802333FC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8023340C
{
    ~Model:kmr_bt06:n2
    ~Model:kmr_bt06:o303
    ~Model:kmr_bt06:ha3
    00000000
}

#new:Stage $Stage_8023341C
{
    $ASCII_80234F60  % kmr_tex
    $ASCII_80234F50  % kmr_bt06_shape
    $ASCII_80234F40  % kmr_bt06_hit
    $Script_BeforeBattle_80233378
    $Script_AfterBattle_802333FC
    $ASCII_80234F38  % kmr_bg
    $ForegroundModelList_8023340C
    00000000
    00000000
    00000000
}

PADDING: 80233444 to 80233450 (00462884 to 00462890)
00000000 00000000 00000000

#new:Script $Script_80233450
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  TranslateModel    ( *Var[A] 00000000 00000002 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000002 00000000 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
    Wait  5`
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80233558
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000013
    Exec  $Script_80233450
    Set   *Var[0]  00000014
    Exec  $Script_80233450
    Set   *Var[0]  00000015
    Exec  $Script_80233450
    Set   *Var[0]  00000016
    Exec  $Script_80233450
    Set   *Var[0]  00000017
    Exec  $Script_80233450
    Set   *Var[0]  00000018
    Exec  $Script_80233450
    Return
    End
}

#new:Script $Script_AfterBattle_80233620
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80233630
{
    ~Model:nok_bt01:ha3
    ~Model:nok_bt01:hap
    ~Model:nok_bt01:kusa3
    00000000
}

#new:Stage $Stage_80233640
{
    $ASCII_80234F90  % nok_tex
    $ASCII_80234F80  % nok_bt01_shape
    $ASCII_80234F70  % nok_bt01_hit
    $Script_BeforeBattle_80233558
    $Script_AfterBattle_80233620
    $ASCII_80234F68  % nok_bg
    $ForegroundModelList_80233630
    00000000
    00000000
    00000000
}

PADDING: 80233668 to 80233670 (00462AA8 to 00462AB0)
00000000 00000000

#new:Script $Script_BeforeBattle_80233670
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  $Function_802199E0 ( )
    Return
    End
}

#new:Script $Script_AfterBattle_8023369C
{
    Return
    End
}

#new:Stage $Stage_802336AC
{
    $ASCII_80234FB8  % mim_tex
    $ASCII_80234FA8  % mim_bt01_shape
    $ASCII_80234F98  % mim_bt01_hit
    $Script_BeforeBattle_80233670
    $Script_AfterBattle_8023369C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802336D4 to 802336E0 (00462B14 to 00462B20)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_802336E0
{
    00000000 00000000 00000000 00000000
}

#new:Script $Script_802336F0
{
    Call  $Function_80219C38 ( )
    Loop
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8023372C
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RandInt   ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Set   *Var[1]  00000000
    Loop  0000000A
        Add   *Var[1]  00000024
        Call  RotateModel   ( *Var[A] *Var[1] 00000000 00000001 00000000 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_802337F4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Exec  $Script_8023372C
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219C5C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802338D4
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  00000000
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219C5C    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80233998
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Exec  $Script_802336F0
    Thread
        Set   *Var[0]  00000016
        Set   *Var[1]  00000001
        Exec  $Script_802337F4
        Wait  5`
        Set   *Var[0]  00000014
        Set   *Var[1]  00000003
        Exec  $Script_802337F4
        Wait  5`
        Set   *Var[0]  00000012
        Set   *Var[1]  00000004
        Exec  $Script_802337F4
        Wait  5`
        Set   *Var[0]  00000010
        Set   *Var[1]  00000002
        Exec  $Script_802337F4
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80233AA8
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80233AB8
{
    FFFFFFFF
    ~Model:sam_bt01:saku
    00000000
}

#new:Stage $Stage_80233AC4
{
    $ASCII_80234FE8  % sam_tex
    $ASCII_80234FD8  % sam_bt01_shape
    $ASCII_80234FC8  % sam_bt01_hit
    $Script_BeforeBattle_80233998
    $Script_AfterBattle_80233AA8
    $ASCII_80234FC0  % yki_bg
    $ForegroundModelList_80233AB8
    00000000
    00000000
    00000000
}

PADDING: 80233AEC to 80233AF0 (00462F2C to 00462F30)
00000000

#new:Script $Script_80233AF0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  $Function_80219D60    ( 00000000 )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  1`
    Loop
        Call  $Function_80219D60    ( 00000001 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000001
            BreakLoop
        EndIf
    EndLoop
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
    Wait  2`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
    Wait  3`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  5`
    Loop
        Call  $Function_80219D60    ( 00000002 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000002
            BreakLoop
        EndIf
    EndLoop
    Call  RandInt   ( 00000050 *Var[B] )
    Add   *Var[B]  0000001E
    Loop  *Var[B]
        Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
    EndLoop
    Call  RandInt   ( 00000005 *Var[0] )
    If  *Var[0]  !=  00000000
        Goto  0
    EndIf
    Call  $Function_80219D60    ( 00000003 )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  1`
    Loop
        Call  $Function_80219D60    ( 00000001 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000001
            BreakLoop
        EndIf
    EndLoop
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
    Wait  5`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
    Wait  2`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
    Wait  3`
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
    Wait  5`
    Loop
        Call  $Function_80219D60    ( 00000002 )
        Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel   ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[B]  ==  00000002
            BreakLoop
        EndIf
    EndLoop
    Call  RandInt   ( 00000050 *Var[B] )
    Add   *Var[B]  0000001E
    Loop  *Var[B]
        Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] *Var[2] )
        Call  RotateModel       ( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_80234180
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:IntTable $IntTable_80234524
{
    00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8
    FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF
}

% Origin: HEURISTIC
#new:Script $Script_80234564
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[5]  00000005
    UseIntBuffer  $IntTable_80234524
    Label  0
    Get1Int  *Var[1]
    If  *Var[1]  ==  000000FF
        UseIntBuffer  $IntTable_80234524
        Get1Int  *Var[1]
    EndIf
    Set   *Var[0]  *Var[5]
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] 00000000 )
    Wait  1`
    Add   *Var[5]  00000001
    Set   *Var[C]  *Var[B]
    Sub   *Var[C]  00000014
    If  *Var[5]  >  *Var[C]
        Goto  1
    EndIf
    Set   *Var[0]  *Var[5]
    Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] 00000000 )
    Wait  1`
    Add   *Var[5]  00000001
    Set   *Var[C]  *Var[B]
    Sub   *Var[C]  00000014
    If  *Var[5]  >  *Var[C]
        Goto  1
    EndIf
    Goto  0
    Label  1
    Set   *Var[2]  00000000
    Loop  00000014
        Add   *Var[5]  00000001
        Sub   *Var[1]  00000002
        Set   *Var[0]  *Var[5]
        Call  TranslateModel    ( *Var[A] *Var[0] *Var[1] 00000000 )
        Wait  1`
    EndLoop
    Sub   *Var[5]  00000118
    Set   *Var[1]  00000000
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802347D0
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80234B74
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  0000002C
        Exec  $Script_80234180
        Wait  5`
        Set   *Var[0]  0000002F
        Exec  $Script_80234180
        Wait  5`
        Set   *Var[0]  0000002E
        Exec  $Script_80234180
        Wait  5`
        Set   *Var[0]  0000002D
        Exec  $Script_80234180
    EndThread
    Set   *Var[0]  00000028
    Exec  $Script_80233AF0
    Return
    End
}

#new:Script $Script_AfterBattle_80234C70
{
    Return
    End
}

#new:Stage $Stage_80234C80
{
    $ASCII_80235018  % mac_tex
    $ASCII_80235008  % mac_bt01_shape
    $ASCII_80234FF8  % mac_bt01_hit
    $Script_BeforeBattle_80234B74
    $Script_AfterBattle_80234C70
    $ASCII_80234FF0  % nok_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80234CA8 to 80234CB0 (004640E8 to 004640F0)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80234CB0
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80234D60
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80234D9C
{
    Return
    End
}

#new:Stage $Stage_80234DAC
{
    $ASCII_80235040  % kpa_tex
    $ASCII_80235030  % kpa_bt13_shape
    $ASCII_80235020  % kpa_bt13_hit
    $Script_BeforeBattle_80234D60
    $Script_AfterBattle_80234D9C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80234DD4 to 80234DE0 (00464214 to 00464220)
00000000 00000000 00000000

#new:SJIS $SJIS_80234DE0
{
    コワッパ７ % kowappa7
}

#new:SJIS $SJIS_80234DEC
{
    コワッパ６ % kowappa6
}

#new:SJIS $SJIS_80234DF8
{
    コワッパ５ % kowappa5
}

#new:SJIS $SJIS_80234E04
{
    コワッパ４ % kowappa4
}

#new:SJIS $SJIS_80234E10
{
    コワッパ２ % kowappa2
}

#new:SJIS $SJIS_80234E1C
{
    コワッパ１ % kowappa1
}

#new:SJIS $SJIS_80234E28
{
    パタクリボー（レクチャー） % patakuribo-（rekucha-）
}

#new:SJIS $SJIS_80234E44
{
    トゲクリボー（レクチャー） % togekuribo-（rekucha-）
}

#new:ASCII $ASCII_80234E60
{
    "kmr_06"
}

#new:ASCII $ASCII_80234E68
{
    "kmr_05"
}

#new:ASCII $ASCII_80234E70
{
    "kmr_04"
}

#new:ASCII $ASCII_80234E78
{
    "kmr_03"
}

#new:ASCII $ASCII_80234E80
{
    "kmr_02"
}

#new:ASCII $ASCII_80234E88
{
    "kmr_bg"
}

#new:ASCII $ASCII_80234E90
{
    "kmr_bt02_shape"
}

#new:ASCII $ASCII_80234EA0
{
    "kmr_tex"
}

#new:ASCII $ASCII_80234EA8
{
    "kmr_bg"
}

#new:ASCII $ASCII_80234EB0
{
    "kmr_bt03_hit"
}

#new:ASCII $ASCII_80234EC0
{
    "kmr_bt03_shape"
}

#new:ASCII $ASCII_80234ED0
{
    "kmr_tex"
}

#new:ASCII $ASCII_80234ED8
{
    "kmr_bg"
}

#new:ASCII $ASCII_80234EE0
{
    "kmr_bt04_hit"
}

#new:ASCII $ASCII_80234EF0
{
    "kmr_bt04_shape"
}

#new:ASCII $ASCII_80234F00
{
    "kmr_tex"
}

#new:ASCII $ASCII_80234F08
{
    "kmr_bg"
}

#new:ASCII $ASCII_80234F10
{
    "kmr_bt05_hit"
}

#new:ASCII $ASCII_80234F20
{
    "kmr_bt05_shape"
}

#new:ASCII $ASCII_80234F30
{
    "kmr_tex"
}

#new:ASCII $ASCII_80234F38
{
    "kmr_bg"
}

#new:ASCII $ASCII_80234F40
{
    "kmr_bt06_hit"
}

#new:ASCII $ASCII_80234F50
{
    "kmr_bt06_shape"
}

#new:ASCII $ASCII_80234F60
{
    "kmr_tex"
}

#new:ASCII $ASCII_80234F68
{
    "nok_bg"
}

#new:ASCII $ASCII_80234F70
{
    "nok_bt01_hit"
}

#new:ASCII $ASCII_80234F80
{
    "nok_bt01_shape"
}

#new:ASCII $ASCII_80234F90
{
    "nok_tex"
}

#new:ASCII $ASCII_80234F98
{
    "mim_bt01_hit"
}

#new:ASCII $ASCII_80234FA8
{
    "mim_bt01_shape"
}

#new:ASCII $ASCII_80234FB8
{
    "mim_tex"
}

#new:ASCII $ASCII_80234FC0
{
    "yki_bg"
}

#new:ASCII $ASCII_80234FC8
{
    "sam_bt01_hit"
}

#new:ASCII $ASCII_80234FD8
{
    "sam_bt01_shape"
}

#new:ASCII $ASCII_80234FE8
{
    "sam_tex"
}

#new:ASCII $ASCII_80234FF0
{
    "nok_bg"
}

#new:ASCII $ASCII_80234FF8
{
    "mac_bt01_hit"
}

#new:ASCII $ASCII_80235008
{
    "mac_bt01_shape"
}

#new:ASCII $ASCII_80235018
{
    "mac_tex"
}

#new:ASCII $ASCII_80235020
{
    "kpa_bt13_hit"
}

#new:ASCII $ASCII_80235030
{
    "kpa_bt13_shape"
}

#new:ASCII $ASCII_80235040
{
    "kpa_tex"
}

PADDING: 80235048 to 80235050 (00464488 to 00464490)
00000000 00000000

