% Script File: 0E Area ARN.bscr
% Decoded from: 4FEA50 to 50F020 (0E Area ARN)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218058
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021A4BC
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021A4BC)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021A4BC)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802181E4
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218058
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802182D8 to 802182E0 (004FED28 to 004FED30)
00000000 00000000

#new:Function $Function_802182E0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218338
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021FD00
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021FD00)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021FD00)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802184C4
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218338
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802185B8 to 802185C0 (004FF008 to 004FF010)
00000000 00000000

#new:Function $Function_802185C0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218618
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	COPY      S0, V0
	BNE       S0, R0, .o40
	NOP
	LW        V1, 8 (V0)
	ADDIU     V0, R0, 4
	BEQ       R0, R0, .o48
	SB        V0, 1D (V1)
	.o40
	LW        V0, 8 (V0)
	SB        R0, 1D (V0)
	.o48
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80218674 to 80218680 (004FF0C4 to 004FF0D0)
00000000 00000000 00000000

#new:Function $Function_80218680
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LW        V0, C (S2)
	MTC1      S4, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 4 (V0)
	LW        V0, C (S2)
	MTC1      S3, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 8 (V0)
	LW        V0, C (S2)
	MTC1      S0, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, C (V0)
	LW        V1, C (S2)
	SWC1      F0, 34 (V1)
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218764 to 80218770 (004FF1B4 to 004FF1C0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80218770
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021877C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison    100`
    .Status:Frozen      0`
    .Status:Dizzy      80`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80218828
{
    00800000 01000000 001600FF $IdleAnimations_80219818 $DefenseTable_80218770 00000000 00000000 00F60000 00000000
}

#new:Actor $HyperGoomba
{
    % stats
    [Index]        1Bb
    [Level]        12`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021877C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80218828
    [Script]      $Script_Init_802188C0
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218874
{
    .Status:Normal    00260208
    .Status:Stone     00260200
    .Status:Sleep     00260208
    .Status:Poison    00260208
    .Status:Stop      00260200
    .Status:Static    00260208
    .Status:Paralyze  00260200
    .Status:Dizzy     00260207
    .Status:Fear      00260207
    .Status:End
}

#new:Script $Script_Init_802188C0
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_802198FC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219BD8 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802195F0 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80218950 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_NextTurn_80218950
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
        Case  ==  0000000C
        Case  ==  0000000B
            Call  SetBattleVar  ( 00000001 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    EndSwitch
    Return
    End
}

#new:Script $Script_802189D4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
        Wait  30`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000014 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
        Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
        Call  PlaySoundAtActor  ( .Actor:Self 000020DD )
        Call  $Function_80218000    ( 00000080 0000000A )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.5] )
        EndThread
        Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218874 )
        Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
        Call  EnableActorGlow   ( .Actor:Self .True )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
        Wait  2`
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Loop  00000014
        Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
        Wait  1`
        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  EnemyTestTarget       ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF38 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
            Call  JumpToGoal        ( .Actor:Self 00000000 .False .True .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorPos       ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Wait  20`
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  YieldTurn ( )
            Call  SetActorPos       ( .Actor:Self 0000012C 00000000 00000000 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
    Call  JumpToGoal        ( .Actor:Self 00000000 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Set   *Var[0]  00000050
                Loop  0000003C
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  UseCamPreset  ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Sub   *Var[0]  00000032
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000001E .False .True .False )
            Sub   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Wait  10`
            Call  EnableActorGlow       ( .Actor:Self .False )
            Call  SetPartEventBits      ( .Actor:Self 00000001 00400000 .False )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_80219818 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802195F0
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetBattleVar  ( 00000001 00000001 )
        ExecWait  $Script_TakeTurn_8021A628
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_802189D4
        Return
    EndIf
    Call  GetBattleVar  ( 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000002EE
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_802189D4
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_TakeTurn_8021A628
                EndIf
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000001F4
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_802189D4
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_TakeTurn_8021A628
                EndIf
            EndIf
        Case  ==  00000001
            ExecWait  $Script_TakeTurn_8021A628
        Case  ==  00000002
            ExecWait  $Script_802189D4
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80219818
{
    .Status:Normal    00260201
    .Status:Stone     00260200
    .Status:Sleep     00260208
    .Status:Poison    00260201
    .Status:Stop      00260200
    .Status:Static    00260201
    .Status:Paralyze  00260200
    .Status:Dizzy     00260207
    .Status:Fear      00260207
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219864
{
    .Status:Normal    00260203
    .Status:Stone     00260200
    .Status:Sleep     00260208
    .Status:Poison    00260201
    .Status:Stop      00260200
    .Status:Static    00260203
    .Status:Paralyze  00260200
    .Status:Dizzy     00260207
    .Status:Fear      00260207
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_802198B0
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021A628 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802198FC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219BD8 )
    Return
    End
}

#new:Script $Script_Idle_802198FC
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219864 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219864 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_80219BD8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260209
            SetConst  *Var[2]  0026020A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260209
            SetConst  *Var[2]  0026020A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026020A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026020E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoJumpBack
            Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026020E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  EnableActorGlow   ( .Actor:Self .False )
                Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
                Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260201
            ExecWait  DoImmune
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260203
            SetConst  *Var[2]  00260205
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260203
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021A4BC
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021A628
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802181E4    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260208 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260207 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802181E4    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026020B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021B2F0
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8021B2FC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021B308
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison    100`
    .Status:Frozen      0`
    .Status:Dizzy      80`
    .Status:Fear      100`
    .Status:Static    100`
    .Status:Paralyze  100`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021B3B4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison     80`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze  100`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021B460
{
    00020001 01000000 001600FF $IdleAnimations_8021F05C $DefenseTable_8021B2F0 00000000 00000000 00F60000 00000000
    00800000 02000000 001800FF $IdleAnimations_8021C594 $DefenseTable_8021B2FC 00004000 00000000 00F60000 00000000
    00020001 03000000 F01800FF $IdleAnimations_8021C62C $DefenseTable_8021B2F0 00000000 00000000 00F60000 00000000
    00020001 04000000 F01800FF $IdleAnimations_8021C638 $DefenseTable_8021B2F0 00000000 00000000 00F60000 00000000
}

#new:Actor $HyperParagoomba
{
    % stats
    [Index]        1Cb
    [Level]        12`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021B3B4
    % ai
    [PartsCount]    4`s
    [PartsTable]  $PartsTable_8021B460
    [Script]      $Script_Init_8021B564
    % move effectiveness
    [Escape]       50`b
    [Item]         80`b
    [AirLift]      95`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  26`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021B518
{
    .Status:Normal    00280202
    .Status:Stone     00280200
    .Status:Sleep     0028020B
    .Status:Poison    00280202
    .Status:Stop      00280200
    .Status:Static    00280202
    .Status:Paralyze  00280200
    .Status:Dizzy     0028020C
    .Status:Fear      0028020C
    .Status:End
}

#new:Script $Script_Init_8021B564
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021C690 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C9C4 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B5F4 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C36C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_NextTurn_8021B5F4
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
        Case  ==  0000000C
        Case  ==  0000000B
            Call  SetBattleVar  ( 00000001 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    EndSwitch
    Return
    End
}

#new:Script $Script_8021B678
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  SetAnimation      ( .Actor:Self 00000002 00280202 )
        Wait  30`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000014 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
        Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal        ( .Actor:Self 00000014 .False .False .False )
        Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
        Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021B518 )
        Call  EnableActorGlow   ( .Actor:Self .True )
        Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Loop  00000014
        Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
        Wait  1`
        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .False .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
            Thread
                Set   *Var[0]  FFFFFFC4
                Loop  0000003C
                    Add   *Var[0]  00000013
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
            Call  JumpToGoal    ( .Actor:Self 00000000 .False .False .False )
            Call  UseCamPreset  ( 00000001 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFFC4 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  AddGoalPos    ( .Actor:Self FFFFFF38 00000000 00000000 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
            Thread
                Set   *Var[0]  00000000
                Loop  0000001E
                    Add   *Var[0]  00000018
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  SetActorPos   ( .Actor:Self 0000012C 00000000 00000000 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
            Call  SetAnimation  ( .Actor:Self 00000002 00280201 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations     ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFBA )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
    Call  JumpToGoal        ( .Actor:Self 00000000 .False .False .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  FFFFFFBA
                Loop  0000003C
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Sub   *Var[0]  00000046
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .False .False )
            Sub   *Var[0]  0000003C
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
            Wait  20`
            Call  YieldTurn ( )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
            ExecWait  $Script_8021C94C
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021C36C
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetBattleVar  ( 00000001 00000001 )
        ExecWait  $Script_TakeTurn_8021D1DC
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_8021B678
        Return
    EndIf
    Call  GetBattleVar  ( 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000002EE
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_8021B678
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_TakeTurn_8021D1DC
                EndIf
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000001F4
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_8021B678
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_TakeTurn_8021D1DC
                EndIf
            EndIf
        Case  ==  00000001
            ExecWait  $Script_TakeTurn_8021D1DC
        Case  ==  00000002
            ExecWait  $Script_8021B678
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021C594
{
    .Status:Normal    00280201
    .Status:Stone     00280200
    .Status:Sleep     0028020B
    .Status:Poison    00280201
    .Status:Stop      00280200
    .Status:Static    00280201
    .Status:Paralyze  00280200
    .Status:Dizzy     0028020C
    .Status:Fear      0028020C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C5E0
{
    .Status:Normal    00280204
    .Status:Stone     00280200
    .Status:Sleep     0028020B
    .Status:Poison    00280201
    .Status:Stop      00280200
    .Status:Static    00280204
    .Status:Paralyze  00280200
    .Status:Dizzy     0028020C
    .Status:Fear      0028020C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C62C
{
    .Status:Normal    00280209
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C638
{
    .Status:Normal    0028020A
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021C644
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D1DC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021C690 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C9C4 )
    Return
    End
}

#new:Script $Script_Idle_8021C690
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C5E0 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8021C94C
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 00280201 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021C9C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280206
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_8021D9F4
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028020D
            SetConst  *Var[2]  0028020E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028020D
            SetConst  *Var[2]  0028020E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028020E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280206
            ExecWait  DoNormalHit
            ExecWait  $Script_8021D9F4
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028020D
            SetConst  *Var[2]  0028020E
            ExecWait  DoBurnHit
            ExecWait  $Script_8021D9F4
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028020F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280206
            ExecWait  DoJumpBack
            Call  SetAnimation      ( .Actor:Self 00000002 0028020C )
            ExecWait  $Script_8021C94C
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  0028020F
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280207
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  EnableActorGlow   ( .Actor:Self .False )
                Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
                Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280201
            ExecWait  DoImmune
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280206
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280207
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
            ExecWait  $Script_8021C94C
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280204
            SetConst  *Var[2]  00280206
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280204
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00280206
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021D1DC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00280204 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280205 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Sub   *Var[0]  00000050
            Set   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280205 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            Thread
                Loop  00000004
                    Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
                    Wait  4`
                EndLoop
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000002 00280202 )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
            Wait  10`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
            Call  UseCamPreset      ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  YieldTurn ( )
            Call  SetAnimation      ( .Actor:Self 00000002 00280204 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021C94C
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Wait  10`
            Call  UseCamPreset  ( 00000042 )
            Call  SetBattleCamZoom  ( 0000012C )
            Call  BattleCamTargetActor  ( .Actor:Self )
            Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280205 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280205 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    EndSwitch
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
            ExecWait  $Script_8021C94C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D9F4
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 0026020A )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_802182E0    ( 00000064 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
    EndThread
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Call  GetLastEvent      ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  0000000A
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021B308 )
    Call  SetActorType      ( .Actor:Self 0000001B )
    ExecWait  $Script_8021E058
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021DF7C
{
    .Status:Normal    00260208
    .Status:Stone     00260200
    .Status:Sleep     00260208
    .Status:Poison    00260208
    .Status:Stop      00260200
    .Status:Static    00260208
    .Status:Paralyze  00260200
    .Status:Dizzy     00260207
    .Status:Fear      00260207
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021DFC8
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F140 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F41C )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021EE34 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021E194 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_8021E058
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F140 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F41C )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021EE34 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021E194 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
        Case  ==  00000001
            Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
            Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Return
    End
}

#new:Script $Script_NextTurn_8021E194
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
        Case  ==  0000000C
        Case  ==  0000000B
            Call  SetBattleVar  ( 00000001 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    EndSwitch
    Return
    End
}

#new:Script $Script_8021E218
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
        Wait  30`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000014 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
        Call  SetGoalPos        ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
        Call  PlaySoundAtActor  ( .Actor:Self 000020DD )
        Call  $Function_802182E0    ( 00000080 0000000A )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.5] )
        EndThread
        Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DF7C )
        Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
        Call  EnableActorGlow   ( .Actor:Self .True )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
        Wait  2`
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Loop  00000014
        Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
        Wait  1`
        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  EnemyTestTarget       ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF38 00000000 00000000 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
            Call  JumpToGoal        ( .Actor:Self 00000000 .False .True .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorPos       ( .Actor:Self *Var[0] 00000000 *Var[2] )
            Wait  20`
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  YieldTurn ( )
            Call  SetActorPos       ( .Actor:Self 0000012C 00000000 00000000 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
    Call  JumpToGoal        ( .Actor:Self 00000000 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Set   *Var[0]  00000050
                Loop  0000003C
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  UseCamPreset  ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Sub   *Var[0]  00000032
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000001E .False .True .False )
            Sub   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Wait  10`
            Call  EnableActorGlow       ( .Actor:Self .False )
            Call  SetPartEventBits      ( .Actor:Self 00000001 00400000 .False )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021EE34
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetBattleVar  ( 00000001 00000001 )
        ExecWait  $Script_TakeTurn_8021FE6C
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_8021E218
        Return
    EndIf
    Call  GetBattleVar  ( 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000002EE
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_8021E218
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_TakeTurn_8021FE6C
                EndIf
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000001F4
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_8021E218
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_TakeTurn_8021FE6C
                EndIf
            EndIf
        Case  ==  00000001
            ExecWait  $Script_TakeTurn_8021FE6C
        Case  ==  00000002
            ExecWait  $Script_8021E218
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021F05C
{
    .Status:Normal    00260201
    .Status:Stone     00260200
    .Status:Sleep     00260208
    .Status:Poison    00260201
    .Status:Stop      00260200
    .Status:Static    00260201
    .Status:Paralyze  00260200
    .Status:Dizzy     00260207
    .Status:Fear      00260207
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021F0A8
{
    .Status:Normal    00260203
    .Status:Stone     00260200
    .Status:Sleep     00260208
    .Status:Poison    00260201
    .Status:Stop      00260200
    .Status:Static    00260203
    .Status:Paralyze  00260200
    .Status:Dizzy     00260207
    .Status:Fear      00260207
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021F0F4
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FE6C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021F140 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F41C )
    Return
    End
}

#new:Script $Script_Idle_8021F140
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F0A8 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F0A8 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021F41C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260209
            SetConst  *Var[2]  0026020A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260209
            SetConst  *Var[2]  0026020A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026020A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026020E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoJumpBack
            Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0026020E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  EnableActorGlow   ( .Actor:Self .False )
                Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
                Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260201
            ExecWait  DoImmune
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260203
            SetConst  *Var[2]  00260205
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260203
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00260205
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021FD00
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021FE6C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802184C4    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260208 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260207 )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_802184C4    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0026020B )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 80220B34 to 80220B40 (00507584 to 00507590)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80220B40
{
    .Element:Normal 00000003
    .Element:Fire   00000063
    .Element:End
}

#new:DefenseTable $DefenseTable_80220B54
{
    .Element:Normal 00000001
    .Element:Fire   00000063
    .Element:End
}

#new:StatusTable $StatusTable_80220B68
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      40`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   50`
    .Status:Shrink     90`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80220C14
{
    00800000 01000000 001600FF $IdleAnimations_80221CD4 $DefenseTable_80220B40 00000010 00000000 00F60000 00000000
}

#new:Actor $HyperCleft
{
    % stats
    [Index]        1Db
    [Level]        15`b
    [MaxHP]         4`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80220B68
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80220C14
    [Script]      $Script_Init_80220CAC
    % move effectiveness
    [Escape]       70`b
    [Item]         30`b
    [AirLift]      30`b
    [Hurricane]    30`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  95`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         44`b  36`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80220C60
{
    .Status:Normal    00300104
    .Status:Stone     00300100
    .Status:Sleep     0030010C
    .Status:Poison    00300104
    .Status:Stop      00300100
    .Status:Static    00300104
    .Status:Paralyze  00300100
    .Status:Dizzy     0030010E
    .Status:Fear      0030010E
    .Status:End
}

#new:Script $Script_Init_80220CAC
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80221DD0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222140 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221A58 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80220D3C )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Return
    End
}

#new:Script $Script_NextTurn_80220D3C
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
        Case  ==  0000000C
        Case  ==  0000000B
            Call  SetBattleVar  ( 00000001 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    EndSwitch
    Return
    End
}

#new:Script $Script_80220DC0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset  ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver     ( 00000014 )
        Wait  20`
        Call  PlaySoundAtActor      ( .Actor:Self .Sound:PowerUp )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Call  PlayEffect    ( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00300104 )
        Wait  30`
        Call  UseCamPreset  ( 00000002 )
        Call  MoveBattleCamOver     ( 00000014 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        Call  $Function_802185C0    ( 000000C8 0000000A )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.5] )
        EndThread
        Call  PlaySoundAtActor  ( .Actor:Self 000002D9 )
        Call  PlayEffect        ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
        EndThread
        Call  SetActorVar       ( .Actor:Self 00000000 00000002 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220C60 )
        Call  EnableActorGlow   ( .Actor:Self .True )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Loop  00000014
        Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
        Wait  1`
        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DA )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Thread
                Loop  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFF38 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  15`
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorPos   ( .Actor:Self 0000012C 00000000 00000000 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Loop  00000019
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00300111 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  00000000
                Loop  0000003C
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000001E .False .True .False )
            Sub   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Wait  20`
            Call  YieldTurn ( )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80221A58
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetBattleVar  ( 00000001 00000001 )
        ExecWait  $Script_80223310
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_80222F1C
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000002
        ExecWait  $Script_80220DC0
        Return
    EndIf
    Call  GetBattleVar  ( 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000002EE
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_80220DC0
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_80223310
                EndIf
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000001F4
                    Call  SetBattleVar  ( 00000001 00000002 )
                    ExecWait  $Script_80220DC0
                Else
                    Call  SetBattleVar  ( 00000001 00000001 )
                    ExecWait  $Script_80223310
                EndIf
            EndIf
        Case  ==  00000001
            ExecWait  $Script_80223310
            Return
        Case  ==  00000002
            ExecWait  $Script_80220DC0
            Return
    EndSwitch
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80221CD4
{
    .Status:Normal    00300102
    .Status:Stone     00300100
    .Status:Sleep     0030010C
    .Status:Poison    00300102
    .Status:Stop      00300100
    .Status:Static    00300102
    .Status:Paralyze  00300100
    .Status:Dizzy     0030010E
    .Status:Fear      0030010E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80221D20
{
    .Status:Normal    00300105
    .Status:Stone     00300101
    .Status:Sleep     0030010D
    .Status:Poison    00300105
    .Status:Stop      00300101
    .Status:Static    00300105
    .Status:Paralyze  00300101
    .Status:Dizzy     0030010F
    .Status:Fear      0030010F
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_80221D6C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80221DD0 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223B5C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222140 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80221DD0
{
    Return
    End
}

#new:Script $Script_80221DE0
{
    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
    Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
    Thread
        Set   *Var[0]  00000000
        Loop  00000005
            Add   *Var[0]  FFFFFFDC
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
    Sub   *Var[1]  00000006
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
    Call  $Function_802185C0    ( 000000C8 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
    EndThread
    Call  PlayEffect        ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 00000028 00000008 *Fixed[0.0] 00000014 00000000 00000000 00000000 00000000 00000000 )
    Call  SetActorPos       ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00300103 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221D20 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220B54 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 0000000F )
    Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF9 )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
    Call  $Function_80218618        ( 00000000 )
    Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
    Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  EnableActorGlow   ( .Actor:Self .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
    Return
    End
}

#new:Script $Script_HandleEvent_80222140
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[0] )
            Switch  *Var[0]
                Case  &  00000200 % 200
                    ExecWait  $Script_80221DE0
                Default
                    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
                    If  *Var[0]  ==  00000001
                        SetConst  *Var[1]  00300109
                    Else
                        SetConst  *Var[1]  00300108
                    EndIf
                    SetConst  *Var[0]  00000001
                    ExecWait  DoNormalHit
            EndSwitch
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetLastElement    ( *Var[0] )
            Switch  *Var[0]
                Case  &  00000200
                    ExecWait  $Script_80221DE0
                Default
                    Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .True )
                    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
                    If  *Var[0]  ==  00000001
                        SetConst  *Var[0]  00000001
                        SetConst  *Var[1]  00300109
                        SetConst  *Var[2]  FFFFFFFF
                        ExecWait  DoBurnHit
                    Else
                        SetConst  *Var[0]  00000001
                        SetConst  *Var[1]  00300108
                        SetConst  *Var[2]  FFFFFFFF
                        ExecWait  DoBurnHit
                    EndIf
                    Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .False )
            EndSwitch
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300109
                SetConst  *Var[2]  FFFFFFFF
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300109
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300108
                SetConst  *Var[2]  FFFFFFFF
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300108
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[1]  00300109
            Else
                SetConst  *Var[1]  00300108
            EndIf
            SetConst  *Var[0]  00000001
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300109
                ExecWait  DoSpinSmashHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300109
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300108
                ExecWait  DoSpinSmashHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300108
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00300108
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00300108
            ExecWait  DoJumpBack
            Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00300107
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  EnableActorGlow   ( .Actor:Self .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00300108
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00300108
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000002
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  EnableActorGlow   ( .Actor:Self .False )
                Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
                Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[1]  00300103
            Else
                SetConst  *Var[1]  00300102
            EndIf
            SetConst  *Var[0]  00000001
            ExecWait  DoImmune
        Case  ==  .Event:SpikeTaunt % 1B
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 00300118 )
            EndIf
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[0]  FFFFFFFD
                Add   *Var[1]  0000000A
            Else
                Add   *Var[0]  FFFFFFF8
                Add   *Var[1]  0000001B
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[1]  00300103
            Else
                SetConst  *Var[1]  00300102
            EndIf
            SetConst  *Var[0]  00000001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300109
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300109
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300108
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300108
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300102
                ExecWait  DoRecover
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300103
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300107
                SetConst  *Var[2]  00300108
                ExecWait  DoScareAway
                Return
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0030010F
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0030010F
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00300108
            EndIf
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80222F1C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00300103 )
    Wait  20`
    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00300105 )
    Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  >  00000000
        Sub   *Var[0]  00000001
        Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Else
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00300103 )
        Thread
            Wait  3`
            Loop  00000005
                Add   *Var[0]  00000024
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                Wait  1`
            EndLoop
        EndThread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Sub   *Var[1]  00000006
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
        Call  $Function_802185C0    ( 000000C8 0000000A )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
        EndThread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        Call  SetActorPos       ( .Actor:Self *Var[0] 00000000 *Var[2] )
        Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
        Call  SetAnimation      ( .Actor:Self 00000001 00300102 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220B40 )
        Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000016 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
        Wait  1`
        Call  $Function_80218618        ( 00000001 )
        Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223310
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 00300110 )
    Wait  10`
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000001 00300111 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 FFFFFFFB )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00300100 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self 000020D1 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Thread
                    Wait  10`
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndThread
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 0000002D )
            Call  SetAnimation  ( .Actor:Self 00000001 00300108 )
            Wait  15`
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
    Call  UseCamPreset  ( 00000002 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000000F
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_TakeTurn_80223B5C
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_80222F1C
    Else
        ExecWait  $Script_80223310
    EndIf
    Return
    End
}

PADDING: 80223BBC to 80223BC0 (0050A60C to 0050A610)
00000000

#new:IdleAnimations $IdleAnimations_80223BC0
{
    .Status:Normal    006C0001
    .Status:Stone     006C0000
    .Status:Sleep     006C0004
    .Status:Poison    006C0001
    .Status:Stop      006C0000
    .Status:Static    006C0000
    .Status:Paralyze  006C0000
    .Status:Paralyze  006C0000
    .Status:Dizzy     006C000D
    .Status:Dizzy     006C000D
    .Status:Fear      006C000A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80223C1C
{
    .Status:Normal    006C000B
    .Status:Stone     006C0000
    .Status:Sleep     006C0004
    .Status:Poison    006C000B
    .Status:Stop      006C0000
    .Status:Static    006C0000
    .Status:Paralyze  006C0000
    .Status:Paralyze  006C0000
    .Status:Dizzy     006C000D
    .Status:Dizzy     006C000D
    .Status:Fear      006C000A
    .Status:End
}

#new:DefenseTable $DefenseTable_80223C78
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80223C84
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink     90`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80223D30
{
    00020000 01000000 001800FF $IdleAnimations_80223BC0 $DefenseTable_80223C78 00000000 00000000 00F60000 00000000
    80800001 02003600 00E200FF $IdleAnimations_80223BC0 $DefenseTable_80223C78 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbasHeart
{
    % stats
    [Index]        A5b
    [Level]         0`b
    [MaxHP]        50`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80223C84
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80223D30
    [Script]      $Script_Init_80223DA0
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]         30`b  30`b % width height
    [HealthBar]     5`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80223DA0
{
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802245C8 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80223E98 )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80224038 )
    Call  SetPartTargetFlagBits ( .Actor:Self 00000002 00000002 .True )
    Return
    End
}

#new:Script $Script_Idle_80223E98
{
    Label  0
    Call  ActorExists   ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
        If  *Var[0]  !=  .False
            Call  GetActorPos       ( .Actor:Self *Var[1] *Var[2] *Var[3] )
            Call  GetStatusFlags    ( .Actor:Self *Var[4] )
            If  *Var[4]  !&  00080000
                Add   *Var[2]  0000000F
                SetF  *Var[4]  *Fixed[1.0]
            Else
                Add   *Var[2]  00000006
                SetF  *Var[4]  *Fixed[0.4]
            EndIf
            Call  $Function_80218680    ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] )
        EndIf
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80223FD8
{
    Set   *Var[1]  006C000E
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  !=  00000000
        Set   *Var[1]  006C000B
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_80224038
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            ExecWait  $Script_80223FD8
            SetConst  *Var[0]  00000001
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BeginFirstStrike % 38
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006C0010
            SetConst  *Var[2]  006C0011
            ExecWait  DoBurnHit
        EndCaseGroup
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_80223FD8
            SetConst  *Var[0]  00000001
            ExecWait  DoSpinSmashHit
        CaseOR  ==  .Event:ShockHit % 2F
        CaseOR  ==  .Event:ShockDeath % 26
            ExecWait  $Script_80223FD8
            SetConst  *Var[0]  00000001
            ExecWait  DoShockHit
            ExecWait  $Script_80223FD8
            SetConst  *Var[0]  00000001
            ExecWait  DoJumpBack
            Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
            ExecWait  $Script_802244DC
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Set   *Var[1]  006C0001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  !=  00000000
                Set   *Var[1]  006C000B
            EndIf
            SetConst  *Var[0]  00000001
            ExecWait  DoImmune
        EndCaseGroup
        CaseOR  ==  .Event:Death % 20
            ExecWait  $Script_80223FD8
            SetConst  *Var[0]  00000001
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_80223FD8
            SetConst  *Var[0]  00000001
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpikeContact % 2A
        Case  ==  .Event:BurnContact % 2C
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
            ExecWait  $Script_802244DC
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006C0001
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    If  *Var[0]  <=  00000005
        ExecWait  $Script_80224414
        Return
    Else
        Call  UseIdleAnimation  ( .Actor:Self .True )
    EndIf
    Return
    End
}

#new:Script $Script_80224414
{
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000028 )
    Wait  40`
    Call  ActorSpeak        ( 000E00C6 .Actor:Self 00000001 006C000D 006C000D ) % Owwwweeee! Oh, I'm hurting! I have to get out of h ...
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000019 )
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Call  SetBattleFlagBits ( 00060000 .True )
    Call  8026F60C  ( 00000014 )
    Return
    End
}

#new:Script $Script_802244DC
{
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000002D
    Set   *Var[1]  00000000
    ExecWait  8029C12C
    Call  SetGoalToHome ( .Actor:Self )
    Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_TakeTurn_802245C8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    If  *Var[0]  !=  .HitResult:Miss % 6
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  !&  00000001 % 1
            Call  GetCurrentPartnerID   ( *Var[0] )
            If  *Var[0]  ==  .Partner:Bow % 9
                Call  802535B4      ( 00000000 )
                ConstOR  *Var[0] 00000003
                Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                Call  UseCamPreset  ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  MoveBattleCamOver ( 00000028 )
                Wait  40`
                Call  ActorSpeak    ( 000E00C3 .Actor:Self 00000001 006C000B 006C0001 ) % Hey, you! Lady ghost! You look quite tasty. Stick  ...
                Call  UseCamPreset  ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Partner )
                Call  MoveBattleCamOver ( 00000019 )
                Wait  25`
                Call  UseIdleAnimation  ( .Actor:Partner .False )
                Call  SetAnimation  ( .Actor:Partner 00000001 000D0004 )
                Call  ActorSpeak    ( 000E00C4 .Actor:Partner 00000001 000D0004 000D0001 ) % Blech! You wish! You don't have a chance, you ghos ...
                Call  SetAnimation  ( .Actor:Partner 00000001 000D000F )
                Call  EndActorSpeech    ( .Actor:Partner 00000001 FFFFFFFF FFFFFFFF )
                Call  UseCamPreset  ( 00000002 )
                Call  UseIdleAnimation  ( .Actor:Partner .True )
                Call  MoveBattleCamOver ( 0000001E )
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  ==  00000000
                    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
                    If  *Var[0]  !=  00000000
                        Call  802535B4  ( 00000001 )
                    EndIf
                Else
                    Call  802535B4  ( 00000001 )
                EndIf
            EndIf
        EndIf
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetActorVar       ( .Actor:Self 00000003 00000001 )
                Call  UseCamPreset      ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Self )
                Call  MoveBattleCamOver ( 00000028 )
                Wait  40`
                Call  ActorSpeak        ( 000E00C5 .Actor:Self 00000001 006C000B 006C0001 ) % Heh heh heh heh... I'm gonna do this great attack. ...
            EndIf
            ExecWait  $Script_80225258
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
            If  *Var[0]  &  00000002
                Call  802535B4  ( 00000001 )
            EndIf
        Case  ==  00000001
            ExecWait  $Script_802255D8
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  GetActorVar   ( .Actor:Self 00000005 *Var[1] )
                Add   *Var[1]  00000001
                Call  SetActorVar   ( .Actor:Self 00000005 *Var[1] )
                If  *Var[1]  >=  00000002
                    Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
                Else
                    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
                EndIf
            EndIf
        Case  ==  00000002
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            ExecWait  $Script_80224B3C
    EndSwitch
    Call  GetActorVar       ( .Actor:Self 00000002 *Var[0] )
    ConstAND  *Var[0] FFFFFFFD
    Call  SetActorVar       ( .Actor:Self 00000002 *Var[0] )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80224B3C
{
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  0000002D
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Set   *Var[1]  00000000
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C
    Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
    Call  SetAnimation  ( .Actor:Self 00000001 006C0016 )
    Wait  5`
    Call  SetAnimation  ( .Actor:Self 00000001 006C0015 )
    Call  EnemyTestTarget       ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Sub   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Wait  20`
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
            ExecWait  $Script_802244DC
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  UseCamPreset  ( 00000002 )
            Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Add   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Wait  8`
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
            ExecWait  $Script_802244DC
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_80225258
{
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( 00000055 00000032 00000000 )
    Call  SetBattleCamZoom  ( 00000118 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  MoveBattleCamOver ( 00000028 )
    Wait  40`
    Call  SetAnimation      ( .Actor:Self 00000001 006C000B )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[4] )
    If  *Var[4]  !&  00080000
        Add   *Var[1]  0000000F
        SetF  *Var[3]  *Fixed[1.0]
    Else
        Add   *Var[1]  00000006
        SetF  *Var[3]  *Fixed[0.4]
    EndIf
    Call  PlayEffect    ( ~FX:GatherMagic:Dark *Var[0] *Var[1] *Var[2] *Var[3] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Var[3] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020F7 )
    Wait  60`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[4] )
    If  *Var[4]  !&  00080000
        Add   *Var[1]  0000000F
        SetF  *Var[3]  *Fixed[1.0]
    Else
        Add   *Var[1]  00000006
        SetF  *Var[3]  *Fixed[0.4]
    EndIf
    Call  PlayEffect        ( ~FX:EnergyOut:ShortStreaks *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetActorVar       ( .Actor:Self 00000004 *Var[F] )
    Call  EnableActorGlow   ( .Actor:Self .True )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C1C )
    Return
    End
}

#new:Script $Script_802255D8
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( 00000055 00000032 00000000 )
    Call  SetBattleCamZoom  ( 00000118 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  SetAnimation      ( .Actor:Self 00000001 006C000C )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000
        Add   *Var[1]  00000010
    Else
        Add   *Var[1]  00000006
    EndIf
    Call  PlayEffect    ( ~FX:GatherEnergyPink *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  60`
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Call  SetAnimation  ( .Actor:Self 00000001 006C000B )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 00000012 .False .True .False )
    EndThread
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Sub   *Var[0]  00000001
    Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  EnableActorGlow   ( .Actor:Self .False )
        Call  GetActorVar       ( .Actor:Self 00000004 *Var[0] )
        Call  RemoveEffect      ( *Var[0] )
        Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223BC0 )
    EndIf
    Call  PlaySound ( 000020F9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000005
            Call  PlayEffect    ( ~FX:HeartAttack:Miss *Var[0] *Var[1] *Var[2] *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  145`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            Else
            EndIf
            Return
        EndCaseGroup
    EndSwitch
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000005
    Call  PlayEffect    ( ~FX:HeartAttack:Success *Var[0] *Var[1] *Var[2] *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Thread
        Wait  160`
        Call  PlaySound ( 000020FC )
    EndThread
    Call  UseIdleAnimation  ( .Actor:Player .False )
    Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
    Wait  30`
    Call  UseCamPreset      ( 00000013 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamTarget    ( *Var[0] *Var[1] *Var[2] )
    Call  SetBattleCamZoom  ( 0000012C )
    Call  SetBattleCamOffsetZ   ( 00000023 )
    Call  MoveBattleCamOver ( 00000032 )
    Wait  56`
    Call  PlaySoundAtActor  ( .Actor:Player 000003DB )
    Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
    Wait  37`
    Call  PlaySoundAtActor  ( .Actor:Player 000003DB )
    Wait  22`
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Call  PlaySoundAtActor  ( .Actor:Player 000020FB )
    Call  UseIdleAnimation  ( .Actor:Player .True )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 0000000C 00000020 )
    Return
    End
}

PADDING: 80225C3C to 80225C40 (0050C68C to 0050C690)
00000000

#new:IdleAnimations $IdleAnimations_80225C40
{
    .Status:Normal    006B0001
    .Status:Stone     006B0000
    .Status:Sleep     006B0018
    .Status:Poison    006B0001
    .Status:Stop      006B0000
    .Status:Static    006B0000
    .Status:Paralyze  006B0000
    .Status:Paralyze  006B0000
    .Status:Dizzy     006B0018
    .Status:Fear      006B0000
    .Status:End
}

#new:DefenseTable $DefenseTable_80225C94
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80225CA0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      80`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   80`
    .Status:Shrink     90`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80225D4C
{
    00800000 01000000 F14B00FF $IdleAnimations_80225C40 $DefenseTable_80225C94 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbaBlubba
{
    % stats
    [Index]        A3b
    [Level]        70`b
    [MaxHP]        10`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80225CA0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80225D4C
    [Script]      $Script_Init_80225D98
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]        110`b 100`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -33`b  78`b % dx dy
    [StatusIcon]   10`b  75`b % dx dy
}

#new:Script $Script_Init_80225D98
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802264AC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80225F58 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802260D0 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Exec  $Script_80225E08
    Return
    End
}

#new:Script $Script_80225E08
{
    Label  0
    Wait  1`
    Call  ActorExists   ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  .False
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Goto  0
    EndIf
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  006B0006
        Goto  1
    EndIf
    If  *Var[0]  ==  006B0007
        Goto  1
    EndIf
    Goto  0
    Label  1
    Call  StartRumble   ( 00000001 )
    Call  ShakeCam      ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_Idle_80225F58
{
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80225F8C
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000000
        Return
    EndIf
    Return
    End
}

#new:Script $Script_80225FD4
{
    Set   *Var[1]  006B0001
    ExecWait  $Script_80225F8C
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Set   *Var[1]  006B0006
    ExecWait  $Script_80225F8C
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Set   *Var[1]  006B0001
    ExecWait  $Script_80225F8C
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_802260D0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[A] )
    Switch  *Var[A]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
            ExecWait  $Script_80227878
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:ShockHit % 2F
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoJumpBack
            ExecWait  $Script_80225FD4
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoShockHit
            ExecWait  $Script_80227878
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoNormalHit
            ExecWait  $Script_80227878
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0014
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_80227878
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  006B0001
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802264AC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  0000003C
        ExecWait  $Script_80226558
    Else
        ExecWait  $Script_80226B88
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80226558
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 00000096 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Set   *Var[1]  006B0006
    ExecWait  $Script_80225F8C
    Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  !&  00080000
        Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
    Wait  8`
    Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
    Wait  3`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Thread
            Call  StartRumble   ( 00000001 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[15.0] )
        EndThread
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:ShockWave:White *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  30`
            Set   *Var[1]  006B0001
            ExecWait  $Script_80225F8C
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            If  *Var[A]  ==  00000005
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            ExecWait  $Script_80225FD4
            Return
        EndCaseGroup
        Default
    EndSwitch
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  !&  00080000
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    If  *Var[5]  !&  00080000
        Call  80269EAC  ( 00000017 )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  30`
            Set   *Var[1]  006B0001
            ExecWait  $Script_80225F8C
            Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  YieldTurn ( )
            ExecWait  $Script_80225FD4
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_80226B88
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  SetBattleCamZoom  ( 00000096 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Set   *Var[1]  006B0006
    ExecWait  $Script_80225F8C
    Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000046 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B000A )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self 00000001 006B000B )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000003E7 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000017 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
            Call  PlayEffect    ( ~FX:ShockWave:White *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            EndThread
            Thread
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndThread
            Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  StartRumble   ( 00000001 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Wait  8`
            Call  SetAnimation      ( .Actor:Self 00000001 006B000E )
            Wait  4`
            ExecWait  $Script_80225FD4
            Return
        EndCaseGroup
        Default
            Thread
                Wait  9`
                Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  !&  00080000
        Call  80269EAC  ( 00000018 )
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 000000C8 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  MoveBattleCamOver ( 0000001E )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetStatusFlags    ( .Actor:Self *Var[5] )
            If  *Var[5]  &  00080000
                Goto  1
            EndIf
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000
                Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                If  *Var[0]  !&  00100000
                    Call  LandJump  ( .Actor:Self )
                Else
                    Goto  1
                EndIf
            Else
                Goto  1
            EndIf
            Label  0
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:ShockWave:White *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            EndThread
            Thread
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndThread
            Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  StartRumble   ( 00000001 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            Goto  2
            Label  1
            Call  GetStatusFlags        ( .Actor:Self *Var[5] )
            If  *Var[5]  !&  00080000
                Wait  3`
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Thread
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
            EndThread
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            If  *Var[5]  !&  00080000
                Call  StartRumble   ( 00000001 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
                Wait  8`
            EndIf
            Label  2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  YieldTurn ( )
            ExecWait  $Script_80225FD4
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_80227878
{
    Call  SetAnimation  ( .Actor:Self 00000001 006B0014 )
    Call  ActorSpeak    ( 000E00C9 .Actor:Self 00000001 006B0014 006B0014 ) % Eeeeoooow!!
    Set   *Var[0]  00000001
    Set   *Var[1]  006B0014
    ExecWait  DoDeath
    Return
    End
}

PADDING: 802278EC to 802278F0 (0050E33C to 0050E340)
00000000

#new:Script $Script_BeforeBattle_802278F0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_80227910
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227920
{
    FFFFFFFF
    ~Model:arn_bt01:iwa4
    00000000
}

#new:Stage $Stage_8022792C
{
    $ASCII_802282D8  % arn_tex
    $ASCII_802282C8  % arn_bt01_shape
    $ASCII_802282B8  % arn_bt01_hit
    $Script_BeforeBattle_802278F0
    $Script_AfterBattle_80227910
    $ASCII_802282B0  % arn_bg
    $ForegroundModelList_80227920
    00000000
    00000000
    00000000
}

PADDING: 80227954 to 80227960 (0050E3A4 to 0050E3B0)
00000000 00000000 00000000

#new:Script $Script_80227960
{
    Set   *Var[A]  *Var[0]
    Set   *Var[0]  00000000
    Label  0
    Add   *Var[0]  00000001
    If  *Var[0]  >  00000167
        Sub   *Var[0]  00000168
    EndIf
    Call  RotateModel   ( *Var[A] *Var[0] 00000000 00000000 00000001 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80227A0C
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000008
    ExecWait  $Script_80227960
    Return
    End
}

#new:Script $Script_AfterBattle_80227A48
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227A58
{
    FFFFFFFF
    ~Model:arn_bt02:iwa4
    00000000
}

#new:Stage $Stage_80227A64
{
    $ASCII_80228308  % arn_tex
    $ASCII_802282F8  % arn_bt02_shape
    $ASCII_802282E8  % arn_bt02_hit
    $Script_BeforeBattle_80227A0C
    $Script_AfterBattle_80227A48
    $ASCII_802282E0  % arn_bg
    $ForegroundModelList_80227A58
    00000000
    00000000
    00000000
}

PADDING: 80227A8C to 80227A90 (0050E4DC to 0050E4E0)
00000000

#new:Script $Script_BeforeBattle_80227A90
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_80227AB0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227AC0
{
    FFFFFFFF
    ~Model:arn_bt03:iwa4
    00000000
}

#new:Stage $Stage_80227ACC
{
    $ASCII_80228338  % arn_tex
    $ASCII_80228328  % arn_bt03_shape
    $ASCII_80228318  % arn_bt03_hit
    $Script_BeforeBattle_80227A90
    $Script_AfterBattle_80227AB0
    $ASCII_80228310  % arn_bg
    $ForegroundModelList_80227AC0
    00000000
    00000000
    00000000
}

PADDING: 80227AF4 to 80227B00 (0050E544 to 0050E550)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80227B00
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80227B3C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227B4C
{
    ~Model:arn_bt04:o349
    00000000
}

#new:Stage $Stage_80227B54
{
    $ASCII_80228360  % arn_tex
    $ASCII_80228350  % arn_bt04_shape
    $ASCII_80228340  % arn_bt04_hit
    $Script_BeforeBattle_80227B00
    $Script_AfterBattle_80227B3C
    00000000
    $ForegroundModelList_80227B4C
    00000000
    00000000
    00000000
}

PADDING: 80227B7C to 80227B80 (0050E5CC to 0050E5D0)
00000000

#new:Script $Script_BeforeBattle_80227B80
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80227BBC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227BCC
{
    ~Model:arn_bt05:o354
    00000000
}

#new:Stage $Stage_80227BD4
{
    $ASCII_80228388  % arn_tex
    $ASCII_80228378  % arn_bt05_shape
    $ASCII_80228368  % arn_bt05_hit
    $Script_BeforeBattle_80227B80
    $Script_AfterBattle_80227BBC
    00000000
    $ForegroundModelList_80227BCC
    00000000
    00000000
    00000000
}

PADDING: 80227BFC to 80227C00 (0050E64C to 0050E650)
00000000

#new:Script $Script_BeforeBattle_80227C00
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_80227C20
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227C30
{
    ~Model:arn_bt06:kabe3
    00000000
}

#new:Stage $Stage_80227C38
{
    $ASCII_802283B0  % arn_tex
    $ASCII_802283A0  % arn_bt06_shape
    $ASCII_80228390  % arn_bt06_hit
    $Script_BeforeBattle_80227C00
    $Script_AfterBattle_80227C20
    00000000
    $ForegroundModelList_80227C30
    00000000
    00000000
    00000000
}

#new:Formation $Formation_00
{
    $HyperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $HyperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
    $HyperGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
    $HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
    $HyperGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $HyperParagoomba 00000005 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $HyperParagoomba 00000005 0000000A 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $HyperParagoomba 00000004 0000000A 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000005 00000009 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $HyperParagoomba 00000004 0000000A 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000005 00000009 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
    $HyperParagoomba 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $HyperCleft 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $HyperCleft 00000001 0000000A 00000000 00000000 00000000 00000000
    $HyperCleft 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
    $HyperCleft 00000001 00000009 00000000 00000000 00000000 00000000
    $HyperCleft 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
    $HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
    $HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
    $HyperCleft 00000001 00000009 00000000 00000000 00000000 00000000
    $HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
    $HyperGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_802280C0
{
    90` 20` 0`
}

#new:Formation $Formation_0F
{
    $TubbasHeart $Vector3D_802280C0 0000000A 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_802280E8
{
    75` 0` 10`
}

#new:Formation $Formation_10
{
    $TubbaBlubba $Vector3D_802280E8 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80228580 00000001 $Formation_00 $Stage_8022792C 00000000
    $SJIS_8022856C 00000002 $Formation_01 $Stage_8022792C 00000000
    $SJIS_80228558 00000003 $Formation_02 $Stage_8022792C 00000000
    $SJIS_80228530 00000003 $Formation_03 $Stage_8022792C 00000000
    $SJIS_80228508 00000004 $Formation_04 $Stage_8022792C 00000000 % unused
    $SJIS_802284CC 00000004 $Formation_05 $Stage_8022792C 00000000 % unused
    $SJIS_802284B4 00000001 $Formation_06 $Stage_8022792C 00000000
    $SJIS_8022849C 00000002 $Formation_07 $Stage_8022792C 00000000
    $SJIS_80228484 00000003 $Formation_08 $Stage_8022792C 00000000
    $SJIS_8022846C 00000004 $Formation_09 $Stage_8022792C 00000000
    $SJIS_80228458 00000001 $Formation_0A $Stage_8022792C 00000000
    $SJIS_80228440 00000002 $Formation_0B $Stage_8022792C 00000000 % unused
    $SJIS_80228428 00000003 $Formation_0C $Stage_8022792C 00000000
    $SJIS_80228400 00000003 $Formation_0D $Stage_8022792C 00000000
    $SJIS_802283D8 00000004 $Formation_0E $Stage_8022792C 00000000
    $SJIS_802283C4 00000001 $Formation_0F $Stage_80227C38 00000000
    $SJIS_802283B8 00000001 $Formation_10 $Stage_8022792C 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_802285BC $Stage_8022792C
    $ASCII_802285B4 $Stage_80227A64
    $ASCII_802285AC $Stage_80227ACC
    $ASCII_802285A4 $Stage_80227B54
    $ASCII_8022859C $Stage_80227BD4
    $ASCII_80228594 $Stage_80227C38
    00000000 00000000
}

#new:ASCII $ASCII_802282B0
{
    "arn_bg"
}

#new:ASCII $ASCII_802282B8
{
    "arn_bt01_hit"
}

#new:ASCII $ASCII_802282C8
{
    "arn_bt01_shape"
}

#new:ASCII $ASCII_802282D8
{
    "arn_tex"
}

#new:ASCII $ASCII_802282E0
{
    "arn_bg"
}

#new:ASCII $ASCII_802282E8
{
    "arn_bt02_hit"
}

#new:ASCII $ASCII_802282F8
{
    "arn_bt02_shape"
}

#new:ASCII $ASCII_80228308
{
    "arn_tex"
}

#new:ASCII $ASCII_80228310
{
    "arn_bg"
}

#new:ASCII $ASCII_80228318
{
    "arn_bt03_hit"
}

#new:ASCII $ASCII_80228328
{
    "arn_bt03_shape"
}

#new:ASCII $ASCII_80228338
{
    "arn_tex"
}

#new:ASCII $ASCII_80228340
{
    "arn_bt04_hit"
}

#new:ASCII $ASCII_80228350
{
    "arn_bt04_shape"
}

#new:ASCII $ASCII_80228360
{
    "arn_tex"
}

#new:ASCII $ASCII_80228368
{
    "arn_bt05_hit"
}

#new:ASCII $ASCII_80228378
{
    "arn_bt05_shape"
}

#new:ASCII $ASCII_80228388
{
    "arn_tex"
}

#new:ASCII $ASCII_80228390
{
    "arn_bt06_hit"
}

#new:ASCII $ASCII_802283A0
{
    "arn_bt06_shape"
}

#new:ASCII $ASCII_802283B0
{
    "arn_tex"
}

#new:SJIS $SJIS_802283B8
{
    ドガボン % dogabon
}

#new:SJIS $SJIS_802283C4
{
    ドガボンしんぞう % dogabonshinzou
}

#new:SJIS $SJIS_802283D8
{
    ハイパーシンエモンx2,ハイパークリボーx2 % haipa-shin'emonx2,haipa-kuribo-x2
}

#new:SJIS $SJIS_80228400
{
    ハイパーシンエモン,ハイパークリボーx2 % haipa-shin'emon,haipa-kuribo-x2
}

#new:SJIS $SJIS_80228428
{
    ハイパーシンエモンx3 % haipa-shin'emonx3
}

#new:SJIS $SJIS_80228440
{
    ハイパーシンエモンx2 % haipa-shin'emonx2
}

#new:SJIS $SJIS_80228458
{
    ハイパーシンエモン % haipa-shin'emon
}

#new:SJIS $SJIS_8022846C
{
    ハイパーパタクリボーx4 % haipa-patakuribo-x4
}

#new:SJIS $SJIS_80228484
{
    ハイパーパタクリボーx3 % haipa-patakuribo-x3
}

#new:SJIS $SJIS_8022849C
{
    ハイパーパタクリボーx2 % haipa-patakuribo-x2
}

#new:SJIS $SJIS_802284B4
{
    ハイパーパタクリボー % haipa-patakuribo-
}

#new:SJIS $SJIS_802284CC
{
    ハイパークリボーx2,ハイパーパタクリボー,ハイパークリボー % haipa-kuribo-x2,haipa-patakuribo-,haipa-kuribo-
}

#new:SJIS $SJIS_80228508
{
    ハイパークリボーx3,ハイパーパタクリボー % haipa-kuribo-x3,haipa-patakuribo-
}

#new:SJIS $SJIS_80228530
{
    ハイパークリボーx2,ハイパーパタクリボー % haipa-kuribo-x2,haipa-patakuribo-
}

#new:SJIS $SJIS_80228558
{
    ハイパークリボーx３ % haipa-kuribo-x3
}

#new:SJIS $SJIS_8022856C
{
    ハイパークリボーx２ % haipa-kuribo-x2
}

#new:SJIS $SJIS_80228580
{
    ハイパークリボー % haipa-kuribo-
}

#new:ASCII $ASCII_80228594
{
    "arn_06"
}

#new:ASCII $ASCII_8022859C
{
    "arn_05"
}

#new:ASCII $ASCII_802285A4
{
    "arn_04"
}

#new:ASCII $ASCII_802285AC
{
    "arn_03"
}

#new:ASCII $ASCII_802285B4
{
    "arn_02"
}

#new:ASCII $ASCII_802285BC
{
    "arn_01"
}

PADDING: 802285C4 to 802285D0 (0050F014 to 0050F020)
00000000 00000000 00000000

