% Script File: 10 Area OMO.bscr
% Decoded from: 5125D0 to 52B6A0 (10 Area OMO)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (0051269C to 005126A0)
00000000

#new:Function $Function_802180D0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021819C to 802181A0 (0051276C to 00512770)
00000000

#new:Function $Function_802181A0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021826C to 80218270 (0051283C to 00512840)
00000000

#new:Function $Function_80218270
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021833C to 80218340 (0051290C to 00512910)
00000000

#new:Function $Function_80218340
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021840C to 80218410 (005129DC to 005129E0)
00000000

#new:Function $Function_80218410
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802184DC to 802184E0 (00512AAC to 00512AB0)
00000000

#new:Function $Function_802184E0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802185AC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIO       AT, 40C90FD8
	MTC1      AT, F8
	MTC1      S2, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F8, F4, F8
	NOP
	MTC1      S0, F6
	NOP
	CVT.S.W   F6, F6
	LIF       F2, 1.0
	DIV.S     F4, F4, F6
	SUB.S     F2, F2, F4
	MUL.S     F20, F0, F2
	NOP
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:cos_rad
	DIV.S     F12, F8, F12
	MUL.S     F20, F20, F0
	NOP
	COPY      A0, S1
	TRUNC.W.S F10, F20
	MFC1      A2, F10
	JAL       ~Func:set_variable
	COPY      A1, S4
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

PADDING: 802186BC to 802186C0 (00512C8C to 00512C90)
00000000

#new:Function $Function_802186C0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021878C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	ADDIU     A0, R0, 6
	LIA       A1, $End[0]
	MTC1      S4, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (A1)
	MTC1      S3, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 2C (A1)
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F20
	COPY      A3, V0
	JAL       800712D0
	SWC1      F0, 30 (A1)
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

PADDING: 8021887C to 80218880 (00512E4C to 00512E50)
00000000

#new:Function $Function_80218880
{
	ADDIU     SP, SP, FFD8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	BEQ       A1, R0, .o130
	LW        S0, C (S2)
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 24
	COPY      S1, V0
	SW        S1, 70 (S2)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 20 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 0 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 4 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	SWC1      F0, 8 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	SW        V0, 1C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A0, 20 (S1)
	JAL       ~Func:get_item_entity
	SWC1      F0, 10 (S1)
	COPY      S0, V0
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	JAL       ~Func:dist2D
	LW        A3, 8 (S1)
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	LW        A3, 8 (S1)
	JAL       ~Func:atan2
	MOV.S     F20, F0
	LWC1      F4, 10 (S1)
	LWC1      F6, 1C (S1)
	CVT.S.W   F6, F6
	MUL.S     F4, F4, F6
	NOP
	LIF       F2, 0.5
	NOP
	MUL.S     F4, F4, F2
	NOP
	SWC1      F0, C (S1)
	LWC1      F0, 4 (S1)
	LWC1      F2, C (S0)
	SUB.S     F0, F0, F2
	MOV.S     F2, F6
	DIV.S     F0, F0, F6
	ADD.S     F4, F4, F0
	DIV.S     F20, F20, F2
	SWC1      F20, 14 (S1)
	SWC1      F4, 18 (S1)
	.o130
	LW        S1, 70 (S2)
	JAL       ~Func:get_item_entity
	LW        A0, 20 (S1)
	COPY      S0, V0
	BNE       S0, R0, .o158
	NOP
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	BEQ       R0, R0, .o1FC
	ADDIU     V0, R0, 2
	.o158
	LWC1      F12, C (S1)
	JAL       ~Func:sin_deg
	NOP
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 8 (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 8 (S0)
	JAL       ~Func:cos_deg
	LWC1      F12, C (S1)
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 10 (S0)
	SUB.S     F0, F0, F2
	SWC1      F0, 10 (S0)
	LWC1      F0, C (S0)
	LWC1      F2, 18 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, C (S0)
	LWC1      F0, 18 (S1)
	LWC1      F2, 10 (S1)
	LW        V0, 1C (S1)
	SUB.S     F0, F0, F2
	ADDIU     V0, V0, FFFF
	SW        V0, 1C (S1)
	BLTZ      V0, .o1D4
	SWC1      F0, 18 (S1)
	BEQ       R0, R0, .o1FC
	CLEAR     V0
	.o1D4
	LWC1      F0, 0 (S1)
	SWC1      F0, 8 (S0)
	LWC1      F0, 4 (S1)
	SWC1      F0, C (S0)
	LWC1      F0, 8 (S1)
	SWC1      F0, 10 (S0)
	SW        R0, 18 (S1)
	JAL       ~Func:heap_free
	LW        A0, 70 (S2)
	ADDIU     V0, R0, 1
	.o1FC
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218A98
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	JAL       ~Func:get_item_entity
	COPY      A0, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      S1, V0
	LWC1      F0, 8 (S1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, C (S1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 10 (S1)
	LW        A1, 0 (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218B38
{
	ADDIU     SP, SP, FFC0
	SW        S3, 2C (SP)
	COPY      S3, A0
	SW        S0, 20 (SP)
	CLEAR     S0
	SW        S2, 28 (SP)
	LIA       S2, 800DC070
	SW        S4, 30 (SP)
	LIA       S4, 8010F290
	SW        S5, 34 (SP)
	ADDIU     A0, R0, FFFF
	SW        RA, 38 (SP)
	SW        S1, 24 (SP)
	LB        V0, AE (S2)
	LW        S1, C (S3)
	BNE       V0, A0, .o54
	COPY      S5, S4
	SW        R0, 10 (SP)
	ADDIU     S0, R0, 1
	.o54
	LB        V0, AF (S2)
	BNE       V0, A0, .o70
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 1
	SW        V0, 10 (V1)
	ADDU      S0, S0, V0
	.o70
	LB        V0, B0 (S2)
	BNE       V0, A0, .o8C
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 2
	SW        V0, 10 (V1)
	ADDIU     S0, S0, 1
	.o8C
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 2
	ADDIU     A0, S0, FFFF
	JAL       ~Func:rand_int
	ADDIU     S0, V0, 2
	SLL       V0, V0, 2
	ADDU      V0, SP, V0
	LW        V1, 10 (V0)
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o124
	SLTI      V0, V1, 2
	BEQ       V0, R0, .oD0
	ADDIU     V0, R0, 2
	BEQL      V1, R0, .oE0
	SB        S0, AE (S2)
	BEQ       R0, R0, .o194
	NOP
	.oD0
	BEQL      V1, V0, .o16C
	SB        S0, B0 (S2)
	BEQ       R0, R0, .o194
	NOP
	.oE0
	LW        A1, 0 (S1)
	LB        V0, 1 (S4)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80228748)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 1 (S4)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80228754)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o124
	SB        S0, AF (S2)
	LW        A1, 0 (S1)
	LB        V0, 0 (S5)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_80228760)
	JAL       ~Func:set_variable
	COPY      A0, S3
	LB        V0, 0 (S5)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8022876C)
	BEQ       R0, R0, .o18C
	COPY      A0, S3
	.o16C
	LW        A1, 0 (S1)
	ADDIU     S1, S1, 4
	COPY      A0, S3
	JAL       ~Func:set_variable
	ADDIU     A2, R0, 16C
	COPY      A0, S3
	LW        A1, 0 (S1)
	ADDIU     A2, R0, 4F
	.o18C
	JAL       ~Func:set_variable
	NOP
	.o194
	LW        RA, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80218CF4
{
	ADDIU     SP, SP, FFE8
	LIA       V1, 800DC070
	ADDIU     A2, R0, FFFF
	SW        RA, 10 (SP)
	LB        V0, AE (V1)
	BEQ       V0, A2, .o38
	LW        A1, C (A0)
	LB        V0, AF (V1)
	BEQ       V0, A2, .o38
	NOP
	LB        V0, B0 (V1)
	BNE       V0, A2, .o44
	NOP
	.o38
	LW        A1, 0 (A1)
	BEQ       R0, R0, .o48
	CLEAR     A2
	.o44
	LW        A1, 0 (A1)
	.o48
	JAL       ~Func:set_variable
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218D54
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80218DAC to 80218DB0 (0051337C to 00513380)
00000000

#new:Function $Function_80218DB0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218E08
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218ED4 to 80218EE0 (005134A4 to 005134B0)
00000000 00000000 00000000

#new:Function $Function_80218EE0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218FAC to 80218FB0 (0051357C to 00513580)
00000000

#new:Function $Function_80218FB0
{
	ADDIU     SP, SP, FF30
	SW        S5, AC (SP)
	SW        RA, B0 (SP)
	SW        S4, A8 (SP)
	SW        S3, A4 (SP)
	SW        S2, A0 (SP)
	SW        S1, 9C (SP)
	SW        S0, 98 (SP)
	SDC1      F24, C8 (SP)
	SDC1      F22, C0 (SP)
	SDC1      F20, B8 (SP)
	BEQ       A1, R0, .oAC
	COPY      S5, A0
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 18
	COPY      S2, V0
	CLEAR     S4
	ADDIU     S0, S2, C
	LIA       S3, $Script_8022DA34
	LIF       F20, 3.5
	LIA       S1, $???_8022DA30
	SW        S2, 70 (S5)
	.o64
	LW        V0, 0 (S1)
	ADDIU     S1, S1, 4
	ADDIU     S4, S4, 1
	SW        V0, 4 (S0)
	COPY      A0, V0
	LW        V0, 0 (S3)
	ADDIU     S3, S3, 4
	JAL       ~Func:get_model_list_index_from_tree_index
	SW        V0, 8 (S0)
	JAL       ~Func:get_model_from_list_index
	COPY      A0, V0
	SW        R0, 0 (S2)
	SW        R0, FFF8 (S0)
	SWC1      F20, FFFC (S0)
	SW        R0, 0 (S0)
	ADDIU     S0, S0, 18
	BEQ       S4, R0, .o64
	ADDIU     S2, S2, 18
	.oAC
	CLEAR     S4
	ADDIU     S3, SP, 58
	LW        S2, 70 (S5)
	MTC1      R0, F24
	ADDIU     S1, S2, 4
	.oC0
	LWC1      F12, 8 (S1)
	LWC1      F0, 4 (S1)
	ADD.S     F12, F12, F0
	JAL       ~Func:clamp_angle
	SWC1      F12, 8 (S1)
	LIO       AT, 4048F5C3
	MTC1      AT, F12
	NOP
	MUL.S     F12, F0, F12
	NOP
	LIF       F2, 180.0
	SWC1      F0, 8 (S1)
	JAL       ~Func:sin_rad
	DIV.S     F12, F12, F2
	LIF       F2, 20.0
	NOP
	MUL.S     F20, F0, F2
	NOP
	MUL.S     F22, F20, F20
	NOP
	ADDIU     S4, S4, 1
	LIF       F0, 90.0
	LW        A0, C (S1)
	JAL       ~Func:get_model_list_index_from_tree_index
	DIV.S     F22, F22, F0
	JAL       ~Func:get_model_from_list_index
	COPY      A0, V0
	COPY      S0, V0
	LHU       V0, 0 (S0)
	MFC1      A2, F24
	ORI       V0, V0, 1400
	SH        V0, 0 (S0)
	LWC1      F0, 0 (S2)
	LWC1      F2, 0 (S1)
	NEG.S     F0, F0
	NEG.S     F2, F2
	MFC1      A1, F0
	MFC1      A3, F2
	JAL       ~Func:guTranslateF
	ADDIU     A0, SP, 18
	MFC1      A1, F20
	MFC1      A2, F24
	MFC1      A3, F24
	LIF       F0, 1.0
	COPY      A0, S3
	JAL       ~Func:guRotateF
	SWC1      F0, 10 (SP)
	ADDIU     A0, SP, 18
	COPY      A1, S3
	ADDIU     S0, S0, 58
	JAL       ~Func:guMtxCatF
	COPY      A2, S0
	ADDIU     A0, SP, 18
	LW        A3, 0 (S1)
	ADDIU     S1, S1, 18
	LW        A1, 0 (S2)
	MFC1      A2, F22
	JAL       ~Func:guTranslateF
	ADDIU     S2, S2, 18
	COPY      A0, S0
	ADDIU     A1, SP, 18
	JAL       ~Func:guMtxCatF
	COPY      A2, A0
	BEQ       S4, R0, .oC0
	CLEAR     V0
	LW        RA, B0 (SP)
	LW        S5, AC (SP)
	LW        S4, A8 (SP)
	LW        S3, A4 (SP)
	LW        S2, A0 (SP)
	LW        S1, 9C (SP)
	LW        S0, 98 (SP)
	LDC1      F24, C8 (SP)
	LDC1      F22, C0 (SP)
	LDC1      F20, B8 (SP)
	JR        RA
	ADDIU     SP, SP, D0
}

PADDING: 802191B8 to 802191C0 (00513788 to 00513790)
00000000 00000000

#new:Function $Function_802191C0
{
	LAW       V0, 8007419C
	SW        R0, 84 (A0)
	LBU       V0, AA (V0)
	ANDI      V0, V0, 1
	BEQ       V0, R0, .o20
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o20
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_802191E8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:add_coins
	ADDIU     A0, R0, 1
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80219208 to 80219210 (005137D8 to 005137E0)
00000000 00000000

#new:DefenseTable $DefenseTable_80219210
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_80219224
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802192D0
{
    00800000 01000000 001800FF $IdleAnimations_8021931C $DefenseTable_80219210 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_RED
{
    % stats
    [Index]        1Fb
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80219224
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802192D0
    [Script]      $Script_Init_80219368
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021931C
{
    .Status:Normal    003B0001
    .Status:Stone     003B0000
    .Status:Sleep     003B0012
    .Status:Poison    003B0001
    .Status:Stop      003B0000
    .Status:Static    003B0001
    .Status:Paralyze  003B0000
    .Status:Dizzy     003B0013
    .Status:Fear      003B0013
    .Status:End
}

#new:Script $Script_Init_80219368
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021ACB4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802193B4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219528 )
    Return
    End
}

#new:Script $Script_Idle_802193B4
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218000    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_802194C4
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0003
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Return
    End
}

#new:Script $Script_HandleEvent_80219528
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_802194C4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0003
            SetConst  *Var[2]  003B0014
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80219A04
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_802194C4
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A12C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021ACB4
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_80219A04
    Else
        ExecWait  $Script_8021A12C
    EndIf
    Return
    End
}

#new:DefenseTable $DefenseTable_8021AD10
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021AD24
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021ADD0
{
    00800000 01000000 001800FF $IdleAnimations_8021AE1C $DefenseTable_8021AD10 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_BLU
{
    % stats
    [Index]        1Fb
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021AD24
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021ADD0
    [Script]      $Script_Init_8021AE68
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021AE1C
{
    .Status:Normal    003B0101
    .Status:Stone     003B0100
    .Status:Sleep     003B0112
    .Status:Poison    003B0101
    .Status:Stop      003B0100
    .Status:Static    003B0101
    .Status:Paralyze  003B0100
    .Status:Dizzy     003B0113
    .Status:Fear      003B0113
    .Status:End
}

#new:Script $Script_Init_8021AE68
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021C7B4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021AEB4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B028 )
    Return
    End
}

#new:Script $Script_Idle_8021AEB4
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_802180D0    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_802180D0    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021AFC4
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0103
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021B028
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010D
            SetConst  *Var[2]  003B010E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010D
            SetConst  *Var[2]  003B010E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021AFC4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0103
            SetConst  *Var[2]  003B0114
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B010C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021B504
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0103 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0104 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0105 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0104
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0104 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0105 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_8021AFC4
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021BC2C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0109 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0103 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0104 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0109 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B010A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0105 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0104
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0109 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B010A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0109 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0107 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0110 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0111 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0113 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0104
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021C7B4
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_8021B504
    Else
        ExecWait  $Script_8021BC2C
    EndIf
    Return
    End
}

#new:DefenseTable $DefenseTable_8021C810
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021C824
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021C8D0
{
    00800000 01000000 001800FF $IdleAnimations_8021C91C $DefenseTable_8021C810 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_YLW
{
    % stats
    [Index]        1Fb
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021C824
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021C8D0
    [Script]      $Script_Init_8021C968
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C91C
{
    .Status:Normal    003B0401
    .Status:Stone     003B0400
    .Status:Sleep     003B0412
    .Status:Poison    003B0401
    .Status:Stop      003B0400
    .Status:Static    003B0401
    .Status:Paralyze  003B0400
    .Status:Dizzy     003B0413
    .Status:Fear      003B0413
    .Status:End
}

#new:Script $Script_Init_8021C968
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E2B4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021C9B4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CB28 )
    Return
    End
}

#new:Script $Script_Idle_8021C9B4
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_802181A0    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_802181A0    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021CAC4
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0403
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021CB28
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040D
            SetConst  *Var[2]  003B040E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040D
            SetConst  *Var[2]  003B040E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021CAC4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0401
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0401
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0403
            SetConst  *Var[2]  003B0414
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B040C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D004
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0403 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0404 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0405 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0404
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0404 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0405 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_8021CAC4
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D72C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0409 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0403 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0404 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0409 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B040A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0405 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0404
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0409 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B040A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0409 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0407 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0410 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0411 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0413 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0404
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021E2B4
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_8021D004
    Else
        ExecWait  $Script_8021D72C
    EndIf
    Return
    End
}

#new:DefenseTable $DefenseTable_8021E310
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021E324
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021E3D0
{
    00800000 01000000 001800FF $IdleAnimations_8021E41C $DefenseTable_8021E310 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_PNK
{
    % stats
    [Index]        1Fb
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021E324
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021E3D0
    [Script]      $Script_Init_8021E468
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021E41C
{
    .Status:Normal    003B0301
    .Status:Stone     003B0300
    .Status:Sleep     003B0312
    .Status:Poison    003B0301
    .Status:Stop      003B0300
    .Status:Static    003B0301
    .Status:Paralyze  003B0300
    .Status:Dizzy     003B0313
    .Status:Fear      003B0313
    .Status:End
}

#new:Script $Script_Init_8021E468
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FDB4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021E4B4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E628 )
    Return
    End
}

#new:Script $Script_Idle_8021E4B4
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218270    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218270    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021E5C4
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0303
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021E628
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030D
            SetConst  *Var[2]  003B030E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030D
            SetConst  *Var[2]  003B030E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021E5C4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0303
            SetConst  *Var[2]  003B0314
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B030C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021EB04
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0303 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0304 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0305 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0304
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0304 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0305 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_8021E5C4
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021F22C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0309 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0303 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0304 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0309 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B030A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0305 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0304
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0309 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B030A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0309 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0307 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0310 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0311 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0313 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0304
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021FDB4
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_8021EB04
    Else
        ExecWait  $Script_8021F22C
    EndIf
    Return
    End
}

#new:DefenseTable $DefenseTable_8021FE10
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021FE24
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021FED0
{
    00800000 01000000 001800FF $IdleAnimations_8021FF1C $DefenseTable_8021FE10 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_GRN
{
    % stats
    [Index]        1Fb
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021FE24
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021FED0
    [Script]      $Script_Init_8021FF68
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021FF1C
{
    .Status:Normal    003B0201
    .Status:Stone     003B0200
    .Status:Sleep     003B0212
    .Status:Poison    003B0201
    .Status:Stop      003B0200
    .Status:Static    003B0201
    .Status:Paralyze  003B0200
    .Status:Dizzy     003B0213
    .Status:Fear      003B0213
    .Status:End
}

#new:Script $Script_Init_8021FF68
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802218B4 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021FFB4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220128 )
    Return
    End
}

#new:Script $Script_Idle_8021FFB4
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218340    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218340    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_802200C4
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0203
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
    Return
    End
}

#new:Script $Script_HandleEvent_80220128
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020D
            SetConst  *Var[2]  003B020E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020D
            SetConst  *Var[2]  003B020E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_802200C4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0203
            SetConst  *Var[2]  003B0214
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B020C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80220604
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0203 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0204 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0204
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0204 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_802200C4
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80220D2C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0203 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0204 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0204
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0207 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0210 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0211 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0213 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0204
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802218B4
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_80220604
    Else
        ExecWait  $Script_80220D2C
    EndIf
    Return
    End
}

#new:DefenseTable $DefenseTable_80221910
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022191C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   60`
    .Status:Shrink     50`
    .Status:Stop       50`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_802219C8
{
    00800000 01000000 001800FF $IdleAnimations_80221A14 $DefenseTable_80221910 00000000 00000000 FFF60000 00000000
}

#new:Actor $AntiGuy
{
    % stats
    [Index]        AFb
    [Level]        42`b
    [MaxHP]        50`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022191C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802219C8
    [Script]      $Script_Init_80221A60
    % move effectiveness
    [Escape]       50`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         30`b  30`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80221A14
{
    .Status:Normal    003B0501
    .Status:Stone     003B0500
    .Status:Sleep     003B0512
    .Status:Poison    003B0501
    .Status:Stop      003B0500
    .Status:Static    003B0501
    .Status:Paralyze  003B0500
    .Status:Dizzy     003B0513
    .Status:Fear      003B0513
    .Status:End
}

#new:Script $Script_Init_80221A60
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802233AC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80221AAC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221C20 )
    Return
    End
}

#new:Script $Script_Idle_80221AAC
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218410    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218410    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80221BBC
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0503
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
    Return
    End
}

#new:Script $Script_HandleEvent_80221C20
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050D
            SetConst  *Var[2]  003B050E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050D
            SetConst  *Var[2]  003B050E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_80221BBC
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0501
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0501
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0503
            SetConst  *Var[2]  003B0514
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B050C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802220FC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0503 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0504 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0504
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0504 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_80221BBC
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80222824
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0503 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0504 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0504
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 0000000C 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0507 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0510 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0511 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0513 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0504
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802233AC
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_802220FC
    Else
        ExecWait  $Script_80222824
    EndIf
    Return
    End
}

PADDING: 80223408 to 80223410 (0051D9D8 to 0051D9E0)
00000000 00000000

#new:IdleAnimations $IdleAnimations_80223410
{
    .Status:Normal    00400001
    .Status:Stone     00400000
    .Status:Sleep     00400004
    .Status:Poison    00400001
    .Status:Stop      00400000
    .Status:Static    00400001
    .Status:Paralyze  00400000
    .Status:Dizzy     0040000A
    .Status:Fear      0040000A
    .Status:End
}

#new:DefenseTable $DefenseTable_8022345C
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_80223470
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022351C
{
    00800000 01000000 FE2600FF $IdleAnimations_80223410 $DefenseTable_8022345C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $MediGuy
{
    % stats
    [Index]        22b
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80223470
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022351C
    [Script]      $Script_Init_80223568
    % move effectiveness
    [Escape]       60`b
    [Item]         70`b
    [AirLift]      90`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   12`b  31`b % dx dy
}

#new:Script $Script_Init_80223568
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022494C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022360C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802237E0 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000005
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_8022360C
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_802184E0    ( FFFFFFF6 00000014 0000000A 00000014 )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_802184E0    ( FFFFFFF6 00000014 0000000C 0000001F )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8022371C
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_802237E0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8022371C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8022371C
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400003
            SetConst  *Var[2]  0040000B
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_FlyingAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Thread
        SetF  *Var[0]  *Fixed[0.0]
        Loop  0000000F
            AddF  *Var[0]  *Fixed[2.0]
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
            Thread
                Wait  5`
                Set   *Var[0]  00000000
                Loop  0000003C
                    Call  $Function_802185AC    ( *Var[0] *Var[1] 0000000F 0000003C *Fixed[30.0] )
                    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var[1] )
                    Add   *Var[0]  00000001
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Add   *Var[2]  00000001
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            ExecWait  $Script_8022371C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000001
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset      ( 00000002 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[2.0] )
            Wait  20`
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8022371C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HealOneAlly
{
    Set   *Var[A]  *Var[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  GetOwnerID    ( *Var[0] )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Add   *Var[2]  00000032
    Call  PlayEffect    ( ~FX:Sparkles:Random *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Recover:LittleHeart *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Wait  10`
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( *Var[A] )
    Call  GetEnemyMaxHP ( *Var[A] *Var[4] )
    Mul   *Var[4]  0000003C
    Div   *Var[4]  00000064
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[A] 0000206D )
        Call  PlaySoundAtActor  ( *Var[A] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[A] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[A] *Var[4] .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022486C
{
    Call  EnemyCreateTargetList ( 00000002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorHP        ( *Var[0] *Var[2] )
    Call  GetEnemyMaxHP     ( *Var[0] *Var[3] )
    If  *Var[2]  !=  *Var[3]
        Call  GetOwnerTarget    ( *Var[0] *Var[1] )
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8022494C
{
    ExecWait  $Script_8022486C
    If  *Var[0]  ==  FFFFFFFF
        ExecWait  $Script_FlyingAttack
    Else
        Call  RandInt   ( 000003E8 *Var[A] )
        If  *Var[A]  <  00000258
            ExecWait  $Script_HealOneAlly
        Else
            ExecWait  $Script_FlyingAttack
        EndIf
    EndIf
    Return
    End
}

#new:IdleAnimations $IdleAnimations_802249E0
{
    .Status:Normal    003C0001
    .Status:Stone     003C0000
    .Status:Sleep     003C0006
    .Status:Poison    003C0001
    .Status:Stop      003C0000
    .Status:Static    003C0001
    .Status:Paralyze  003C0000
    .Status:Dizzy     003C0007
    .Status:Fear      003C0007
    .Status:End
}

#new:DefenseTable $DefenseTable_80224A2C
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_80224A40
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80224AEC
{
    00800000 01000000 001800FF $IdleAnimations_802249E0 $DefenseTable_80224A2C 00000000 00000000 00F60000 00000000
}

#new:Actor $GrooveGuy
{
    % stats
    [Index]        20b
    [Level]        15`b
    [MaxHP]         7`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80224A40
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80224AEC
    [Script]      $Script_Init_80224B38
    % move effectiveness
    [Escape]       50`b
    [Item]         70`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80224B38
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226338 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80224B9C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224D10 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80224B9C
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_802186C0    ( FFFFFFF3 0000000F 00000004 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
        Call  $Function_802186C0    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80224CAC
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003C0004
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003C0001 )
    Return
    End
}

#new:Script $Script_HandleEvent_80224D10
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C000E
            SetConst  *Var[2]  003C000F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C000E
            SetConst  *Var[2]  003C000F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C000F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_80224CAC
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0004
            SetConst  *Var[2]  003C0011
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0004
            ExecWait  DoAirLift
        CaseOR  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0004
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003C0001
            ExecWait  DoImmune
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_BasicAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003C0004 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003C0010 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_80224CAC
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 003C0010 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003C0001 )
            Wait  8`
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_80224CAC
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SleepySpin
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003C0010 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000002E2 )
    Call  SetAnimation      ( .Actor:Self 00000001 003C000C )
    Set   *Var[0]  00000000
    Loop  0000001E
        Add   *Var[0]  00000030
        Mod   *Var[0]  00000168
        Call  SetActorYaw   ( .Actor:Self *Var[0] )
        Wait  1`
    EndLoop
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 003C000B )
            Wait  20`
            If  *Var[0]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_80224CAC
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 40000000 00000000 80040232 00000000 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  WasStatusInflicted    ( .Actor:Self *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Thread
                    Set   *Var[0]  00000000
                    Loop  0000001E
                        Add   *Var[0]  00000030
                        Mod   *Var[0]  00000168
                        Call  SetActorYaw   ( .Actor:Player *Var[0] )
                        Wait  1`
                    EndLoop
                    Call  SetActorYaw   ( .Actor:Player 00000000 )
                EndThread
            EndIf
            Call  PlaySoundAtActor  ( .Actor:Self 000002E3 )
            Call  SetAnimation      ( .Actor:Self 00000001 003C000B )
            Set   *Var[0]  00000000
            Loop  0000000F
                Add   *Var[0]  00000018
                Mod   *Var[0]  00000168
                Call  SetActorYaw   ( .Actor:Self *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
            Call  UseCamPreset  ( 00000002 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002E4 )
            Thread
                Set   *Var[0]  00000000
                Loop  00000014
                    Add   *Var[0]  00000048
                    Mod   *Var[0]  00000168
                    Call  SetActorYaw   ( .Actor:Self *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorYaw   ( .Actor:Self *Var[0] )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003C000A )
            Wait  25`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_80224CAC
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_GetFirstOpenColumn
{
    Set   *Flag[01]  .False
    Set   *Flag[02]  .False
    Set   *Flag[03]  .False
    Set   *Flag[04]  .False
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[01]  ==  .False
        Set   *Var[A]  00000000
        Return
    EndIf
    If  *Flag[02]  ==  .False
        Set   *Var[A]  00000001
        Return
    EndIf
    If  *Flag[03]  ==  .False
        Set   *Var[A]  00000002
        Return
    EndIf
    If  *Flag[04]  ==  .False
        Set   *Var[A]  00000003
        Return
    EndIf
    Set   *Var[A]  FFFFFFFF
    Return
    End
}

#new:Script $Script_CountActiveSummoners
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        Case  ==  00000020
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  !=  00000002
                    Add   *Var[9]  00000001
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80226338
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000002
        Call  RandInt   ( 00000064 *Var[0] )
        If  *Var[0]  <  0000003C
            Call  GetStatusFlags    ( .Actor:Player *Var[0] )
            If  *Var[0]  &  00040000
                ExecWait  $Script_BasicAttack
            Else
                ExecWait  $Script_SleepySpin
            EndIf
        Else
            ExecWait  $Script_BasicAttack
        EndIf
        Return
    EndIf
    ExecWait  $Script_GetFirstOpenColumn
    If  *Var[A]  ==  FFFFFFFF
        Call  RandInt   ( 00000064 *Var[0] )
        If  *Var[0]  <  0000003C
            Call  GetStatusFlags    ( .Actor:Player *Var[0] )
            If  *Var[0]  &  00040000
                ExecWait  $Script_BasicAttack
            Else
                ExecWait  $Script_SleepySpin
            EndIf
        Else
            ExecWait  $Script_BasicAttack
        EndIf
        Return
    EndIf
    ExecWait  $Script_CountActiveSummoners
    Switch  *Var[9]
        Case  ==  00000001
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  0000012C
                ExecWait  $Script_RandomSummon
                Return
            EndIf
        Case  ==  00000002
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000096
                ExecWait  $Script_RandomSummon
                Return
            EndIf
        Case  ==  00000003
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  00000064
                ExecWait  $Script_RandomSummon
                Return
            EndIf
    EndSwitch
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  0000003C
        Call  GetStatusFlags    ( .Actor:Player *Var[0] )
        If  *Var[0]  &  00040000
            ExecWait  $Script_BasicAttack
        Else
            ExecWait  $Script_SleepySpin
        EndIf
    Else
        ExecWait  $Script_BasicAttack
    EndIf
    Return
    End
}

#new:Script $Script_RandomSummon
{
    Call  UseCamPreset  ( 0000000B )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  RandInt   ( 00000002 *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            ExecWait  $Script_80226C00
        Case  ==  00000001
            ExecWait  $Script_80226DEC
        Case  ==  00000002
            ExecWait  $Script_802271A0
    EndSwitch
    Call  UseCamPreset      ( 00000002 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802249E0 )
    Return
    End
}

#new:Script $Script_8022671C
{
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000B )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000D )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000B )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 003C000D )
    Wait  4`
    Thread
        Wait  1`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 003C000C )
    Call  GetStatusFlags    ( .Actor:Self *Var[3] )
    If  *Var[3]  !&  00080000
        SetF  *Var[3]  *Fixed[1.0]
    Else
        SetF  *Var[3]  *Fixed[0.4]
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  $Function_8021878C    ( *Var[0] *Var[1] *Var[2] *Var[3] 00000030 )
    Call  PlaySoundAtActor      ( .Actor:Self 000002E6 )
    Set   *Var[0]  00000000
    Loop  00000030
        Add   *Var[0]  0000001E
        If  *Var[0]  >=  00000168
            Sub   *Var[0]  00000168
        EndIf
        Call  SetActorRotation  ( .Actor:Self 00000000 *Var[0] 00000000 )
        Wait  1`
    EndLoop
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000001E
    Call  PlayEffect        ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
    Call  SetAnimation      ( .Actor:Self 00000001 003C000A )
    Wait  8`
    Return
    End
}

#new:Script $Script_80226C00
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    ExecWait  $Script_8022671C
    Call  SummonEnemy   ( $SpecialFormation_802273A8 00000000 )
    Set   *Var[B]  *Var[0]
    Set   *Var[0]  000000C8
    Set   *Var[1]  00000000
    Set   *Var[2]  00000000
    Call  SetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( *Var[B] 00000001 003B0004 )
    Call  UseCamPreset  ( 00000003 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetGoalToIndex    ( *Var[B] *Var[A] )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( *Var[B] *Fixed[4.0] )
    Call  RunToGoal     ( *Var[B] 00000000 .False )
    Call  SetAnimation  ( *Var[B] 00000001 003B0001 )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[B] )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80226DEC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    ExecWait  $Script_8022671C
    Call  UseCamPreset      ( 00000003 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SummonEnemy       ( $SpecialFormation_802273C4 00000000 )
    Set   *Var[B]  *Var[0]
    Call  SetAnimation      ( *Var[B] 00000001 003C000C )
    Call  SetGoalToIndex    ( *Var[B] *Var[A] )
    Call  GetGoalPos        ( *Var[B] *Var[3] *Var[4] *Var[5] )
    Add   *Var[3]  000000C8
    Call  SetActorPos       ( *Var[B] *Var[3] *Var[4] *Var[5] )
    Thread
        Set   *Var[6]  00000000
        Loop  00000032
            Add   *Var[6]  0000001E
            Mod   *Var[6]  00000168
            Call  SetActorYaw   ( *Var[B] *Var[6] )
            Wait  1`
        EndLoop
        Call  SetActorYaw   ( *Var[B] 00000000 )
    EndThread
    Call  SetActorSounds    ( *Var[B] .ActorSound:Walk 00000000 00000000 )
    Thread
        Loop  00000002
            Call  PlaySoundAtActor  ( *Var[B] 000002E2 )
            Wait  25`
        EndLoop
    EndThread
    Call  SetActorSpeed ( *Var[B] *Fixed[4.0] )
    Call  RunToGoal     ( *Var[B] 00000000 .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
    Call  SetAnimation  ( *Var[B] 00000001 003C000A )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Wait  25`
    Call  SetAnimation  ( *Var[B] 00000001 003C0001 )
    Call  HPBarToHome   ( *Var[B] )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetActorVar   ( *Var[B] 00000000 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( *Var[B] 00000000 00000002 )
    EndSwitch
    Return
    End
}

#new:Script $Script_802271A0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    ExecWait  $Script_8022671C
    Call  SummonEnemy   ( $SpecialFormation_802273E0 00000000 )
    Set   *Var[B]  *Var[0]
    Call  SetAnimation  ( *Var[B] 00000001 00400005 )
    Add   *Var[A]  00000004
    Call  SetGoalToIndex    ( *Var[B] *Var[A] )
    Call  GetGoalPos    ( *Var[B] *Var[3] *Var[4] *Var[5] )
    Set   *Var[0]  000000C8
    Set   *Var[1]  *Var[4]
    Set   *Var[2]  *Var[5]
    Call  SetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  SetActorSounds    ( *Var[B] .ActorSound:Walk 00000380 00000000 )
    Call  UseCamPreset  ( 00000003 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetActorSpeed ( *Var[B] *Fixed[4.0] )
    Call  RunToGoal     ( *Var[B] 00000000 .False )
    Call  SetAnimation  ( *Var[B] 00000001 00400001 )
    Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[B] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[B] )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Vector3D $Vector3D_8022739C
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_802273A8
{
    $ShyGuy_RED $Vector3D_8022739C 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_802273C4
{
    $GrooveGuy $Vector3D_8022739C 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_802273E0
{
    $MediGuy $Vector3D_8022739C 00000064 00000000 00000000 00000000 00000000
}

PADDING: 802273FC to 80227400 (005219CC to 005219D0)
00000000

#new:IdleAnimations $IdleAnimations_80227400
{
    .Status:Normal    003F0003
    .Status:Stone     003F0001
    .Status:Sleep     003F000F
    .Status:Poison    003F0003
    .Status:Stop      003F0001
    .Status:Static    003F0003
    .Status:Paralyze  003F0001
    .Status:Dizzy     003F0012
    .Status:Fear      003F0012
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022744C
{
    .Status:Normal    003F0002
    .Status:Stone     003F0000
    .Status:Sleep     003F000F
    .Status:Poison    003F0002
    .Status:Stop      003F0000
    .Status:Static    003F0002
    .Status:Paralyze  003F0000
    .Status:Dizzy     003F0012
    .Status:Fear      003F0012
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80227498
{
    .Status:Normal    003F0010
    .Status:End
}

#new:DefenseTable $DefenseTable_802274A4
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_802274B8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      80`
    .Status:Fear      100`
    .Status:Static      0`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80227564
{
    00800000 01000000 001E00FF $IdleAnimations_80227400 $DefenseTable_802274A4 00000000 00000000 FFF30000 00000000
    00120001 02000000 001800FF $IdleAnimations_80227498 $DefenseTable_802274A4 00000000 00000000 FFF60000 00000000
}

#new:Actor $SpyGuy
{
    % stats
    [Index]        24b
    [Level]        15`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802274B8
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80227564
    [Script]      $Script_Init_802275D4
    % move effectiveness
    [Escape]       50`b
    [Item]         60`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802275D4
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802293DC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802276C4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227ABC )
    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  8027D75C      ( FFFFFF81 *Var[0] )
    If  *Var[0]  !=  00000000
        Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022744C )
        Call  SetAnimation      ( .Actor:Self 00000001 003F0002 )
    EndIf
    Return
    End
}

#new:Script $Script_Idle_802276C4
{
    Return
    End
}

#new:Script $Script_802276D4
{
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    If  *Var[0]  ==  00000000
        Return
    EndIf
    Call  GetLastDamage ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  0035D000
        Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 003F0002 )
        Case  ==  00000001
            Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
    EndSwitch
    Label  0
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  00000100
        Wait  1`
        Goto  0
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
            Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_80227400 )
            Call  SetAnimation  ( .Actor:Self 00000001 003F0017 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003F0019 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
        Case  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
            Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8022744C )
            Call  SetAnimation  ( .Actor:Self 00000001 003F0018 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003F001A )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 003F0002 )
    EndSwitch
    Wait  10`
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_80227ABC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000B
            ExecWait  DoNormalHit
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000B
            ExecWait  DoNormalHit
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
            ExecWait  $Script_802276D4
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000D
            SetConst  *Var[2]  003F000E
            ExecWait  DoBurnHit
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
            ExecWait  $Script_802276D4
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000D
            SetConst  *Var[2]  003F000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000B
            ExecWait  DoSpinSmashHit
            Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
            ExecWait  $Script_802276D4
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000C
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000
                SetConst  *Var[1]  003F0002
            Else
                SetConst  *Var[1]  003F0003
            EndIf
            ExecWait  DoImmune
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000
                SetConst  *Var[1]  003F0002
            Else
                SetConst  *Var[1]  003F0003
            EndIf
            ExecWait  DoImmune
            ExecWait  $Script_802276D4
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000
                SetConst  *Var[1]  003F0002
            Else
                SetConst  *Var[1]  003F0003
            EndIf
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000
                SetConst  *Var[1]  003F0006
            Else
                SetConst  *Var[1]  003F0007
            EndIf
            SetConst  *Var[2]  003F0011
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000
                SetConst  *Var[1]  003F0006
            Else
                SetConst  *Var[1]  003F0007
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            If  *Var[1]  ==  00000000
                SetConst  *Var[1]  003F0006
            Else
                SetConst  *Var[1]  003F0007
            EndIf
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SlingshotAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000002E7 )
    Call  SetAnimation      ( .Actor:Self 00000001 003F0015 )
    Wait  12`
    Wait  12`
    Call  SetAnimation      ( .Actor:Self 00000001 003F0016 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Add   *Var[1]  0000000A
    Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000002E8 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Call  GetPartOffset ( .Actor:Self 00000002 *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF9C 00000000 00000000 )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[14.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  15`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[14.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 .True )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetPartOffset     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000001E .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IntTable $IntTable_80228748
{
    00000166 00000167 00000168
}

#new:IntTable $IntTable_80228754
{
    00000049 0000004A 0000004B
}

#new:IntTable $IntTable_80228760
{
    00000169 0000016A 0000016B
}

#new:IntTable $IntTable_8022876C
{
    0000004C 0000004D 0000004E
}

#new:Script $Script_80228778
{
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    Switch  *Var[A]
        Case  ==  00000000
        Case  ==  00000001
            Call  GetActorPos   ( .Actor:Player *Var[1] *Var[2] *Var[3] )
            Set   *Var[2]  00000000
            Sub   *Var[3]  00000001
            Call  $Function_80218B38    ( *Var[4] *Var[5] )
            Call  MakeItemEntity        ( *Var[4] *Var[1] *Var[2] *Var[3] .ItemSpawnMode:Decoration 00000000 )
            Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Add   *Var[1]  0000001E
            Call  $Function_80218880    ( *Var[0] *Var[1] *Var[2] *Var[3] 00000014 *Fixed[1.0] )
            Add   *Var[1]  00000014
            Call  $Function_80218880    ( *Var[0] *Var[1] *Var[2] *Var[3] 0000000A *Fixed[1.0] )
            Add   *Var[1]  0000000A
            Call  $Function_80218880    ( *Var[0] *Var[1] *Var[2] *Var[3] 00000005 *Fixed[1.0] )
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
        Case  ==  00000002
            Call  ShowMessageBox    ( *Var[5] 0000003C )
            Sub   *Var[1]  00000096
            Call  $Function_80218880    ( *Var[0] *Var[1] *Var[2] *Var[3] 0000001E *Fixed[1.0] )
            Call  RemoveItemEntity  ( *Var[0] )
            Call  SetActorVar       ( .Actor:Self 00000000 00000003 )
            Return
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HammerAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003F0007 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000046 00000000 00000000 )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003F0007 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[1] )
    If  *Var[1]  !&  00080000
        Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    EndIf
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
    Wait  10`
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Thread
        Wait  4`
        Call  PlaySoundAtActor  ( .Actor:Self 00000327 )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 003F000A )
            Wait  6`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F0007
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 003F000A )
    Wait  5`
    Wait  2`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Set   *Flag[00]  .False
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000 % 80000000
                Call  $Function_80218CF4    ( *Var[0] )
                If  *Var[0]  !=  FFFFFFFF
                    Set   *Flag[00]  .True
                EndIf
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  <=  00000000
                Wait  20`
                Goto  64
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[1] )
            If  *Var[1]  &  00080000
                Wait  20`
                Goto  64
            EndIf
            Call  GetStatusFlags    ( .Actor:Player *Var[1] )
            If  *Var[1]  &  40100000
                Wait  20`
                Goto  64
            EndIf
            If  *Flag[00]  ==  .True
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                Exec  $Script_80228778
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  00000046
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  RunToGoal     ( .Actor:Self 00000000 .False )
                Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
                Label  0
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
                If  *Var[0]  !=  00000000
                    Wait  1`
                    Goto  0
                EndIf
                Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
                Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                Call  $Function_80218A98    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Add   *Var[1]  00000014
                Sub   *Var[3]  00000002
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
                Call  RunToGoal     ( .Actor:Self 00000000 .False )
                Thread
                    Wait  5`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020DC )
                    Call  $Function_80218D54    ( 000000C8 0000000A )
                EndThread
                Call  SetAnimation  ( .Actor:Self 00000001 003F0009 )
                Wait  5`
                Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
                Sub   *Var[1]  00000007
                Call  PlayEffect    ( ~FX:Firework:White *Var[1] *Var[2] *Var[3] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  40`
            Else
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  00000046
                Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
                Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  RunToGoal     ( .Actor:Self 00000000 .False )
                Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
                Wait  10`
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A
                Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000019 FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
                Wait  20`
            EndIf
            Label  64
            Call  UseCamPreset  ( 00000002 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003F0007
            ExecWait  DoReturnHome
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802293DC
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022744C )
        Call  SetAnimation      ( .Actor:Self 00000001 003F0002 )
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            ExecWait  $Script_SlingshotAttack
        Case  ==  00000001
            ExecWait  $Script_HammerAttack
    EndSwitch
    Return
    End
}

PADDING: 802294B8 to 802294C0 (00523A88 to 00523A90)
00000000 00000000

#new:IdleAnimations $IdleAnimations_802294C0
{
    .Status:Normal    003D0001
    .Status:Stone     003D0000
    .Status:Sleep     003D0004
    .Status:Poison    003D0001
    .Status:Stop      003D0000
    .Status:Static    003D0001
    .Status:Paralyze  003D0000
    .Status:Dizzy     003D0005
    .Status:Fear      003D0005
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022950C
{
    .Status:Normal    003D0010
    .Status:Stone     003D000D
    .Status:Sleep     003D0019
    .Status:Poison    003D0010
    .Status:Stop      003D000D
    .Status:Static    003D0010
    .Status:Paralyze  003D000D
    .Status:Dizzy     003D0010
    .Status:Fear      003D0010
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80229558
{
    .Status:Normal    003D000F
    .Status:Stone     003D000C
    .Status:Sleep     003D0018
    .Status:Poison    003D000F
    .Status:Stop      003D000C
    .Status:Static    003D000F
    .Status:Paralyze  003D000C
    .Status:Dizzy     003D000F
    .Status:Fear      003D000F
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802295A4
{
    .Status:Normal    003D0011
    .Status:Stone     003D000E
    .Status:Sleep     003D001A
    .Status:Poison    003D0011
    .Status:Stop      003D000E
    .Status:Static    003D0011
    .Status:Paralyze  003D000E
    .Status:Dizzy     003D0011
    .Status:Fear      003D0011
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802295F0
{
    .Status:Normal    003D000B
    .Status:End
}

#new:DefenseTable $DefenseTable_802295FC
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80229610
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_80229624
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

MISSING: 802296D0 to 8022977C (00523CA0 to 00523D4C)
00000001 00000000 00000002 00000000 00000006 00000046 00000009 00000032
00000007 00000000 00000004 0000005A 00000003 00000064 0000000B 00000032
00000005 0000005A 0000000A 0000004B 00000008 0000005A 0000001F 00000000
00000020 00000000 00000025 00000000 00000022 00000000 00000024 00000000
00000023 00000000 00000021 00000000 00000026 00000001 00000027 00000000
00000029 00000000 00000000

#new:PartsTable $PartsTable_8022977C
{
    00020001 01000000 002000FF $IdleAnimations_8022B104 $DefenseTable_80229610 00000000 00000000 00F60000 00000000
    00800000 02000000 001800FF $IdleAnimations_802294C0 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
    00100003 03000000 023200FF $IdleAnimations_8022950C $DefenseTable_802295FC 00000000 00000000 FFF60000 0029007E
    00122003 04000000 001800FF $IdleAnimations_80229558 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
    00122003 05000000 001800FF $IdleAnimations_802295A4 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
    00120001 06000000 001800FF $IdleAnimations_802295F0 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
}

#new:Actor $SkyGuy
{
    % stats
    [Index]        21b
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80229624
    % ai
    [PartsCount]    6`s
    [PartsTable]  $PartsTable_8022977C
    [Script]      $Script_Init_8022987C
    % move effectiveness
    [Escape]       50`b
    [Item]         80`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8022987C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022A9D0 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80229A24 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022A398 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00100001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000005 00100001 .False )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000005
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetPartTargetFlagBits ( .Actor:Self 00000003 00000004 .True )
    Return
    End
}

#new:Script $Script_Idle_80229A24
{
    Return
    End
}

#new:Script $Script_80229A34
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[2] )
    If  *Var[2]  !=  00000000
        ExecWait  DoDeath
    Else
        Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
        Call  GetActorPos   ( .Actor:Self *Var[7] *Var[8] *Var[9] )
        Add   *Var[8]  00000014
        Call  PlayEffect    ( ~FX:Balloon:Orange *Var[7] *Var[8] *Var[9] *Fixed[1.0] 00000096 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Sub   *Var[7]  0000000E
        Sub   *Var[8]  00000004
        Call  PlayEffect    ( ~FX:Balloon:Red *Var[7] *Var[8] *Var[9] *Fixed[1.0] 00000096 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Add   *Var[7]  0000001C
        Call  PlayEffect    ( ~FX:Balloon:Blue *Var[7] *Var[8] *Var[9] *Fixed[1.0] 00000096 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00020001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00020001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000005 00020001 .True )
        ExecWait  DoDeath
    EndIf
    Return
    End
}

#new:Script $Script_80229C40
{
    Call  SetAnimation  ( .Actor:Self 00000002 003D0002 )
    Call  SetAnimation  ( .Actor:Self 00000003 003D0013 )
    Call  SetAnimation  ( .Actor:Self 00000004 003D0012 )
    Call  SetAnimation  ( .Actor:Self 00000005 003D0014 )
    Return
    End
}

#new:Script $Script_80229CB0
{
    Call  MakeLerp      ( 00000064 00000050 00000007 .Easing:CubicOut )
    Label  0
    Call  UpdateLerp ( )
    DivF  *Var[0]  *Fixed[100.0]
    SetF  *Var[2]  *Fixed[2.0]
    SubF  *Var[2]  *Var[0]
    Call  SetPartScale  ( .Actor:Self 00000003 *Var[2] *Var[0] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Var[2] *Var[0] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Var[2] *Var[0] *Fixed[1.0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  MakeLerp      ( 00000050 00000064 00000007 .Easing:CosFastOvershoot )
    Label  1
    Call  UpdateLerp ( )
    DivF  *Var[0]  *Fixed[100.0]
    SetF  *Var[2]  *Fixed[2.0]
    SubF  *Var[2]  *Var[0]
    Call  SetPartScale  ( .Actor:Self 00000003 *Var[2] *Var[0] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Var[2] *Var[0] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Var[2] *Var[0] *Fixed[1.0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Return
    End
}

#new:Script $Script_80229F08
{
    Call  GetLastElement    ( *Var[0] )
    Set   *Var[0]  00010000
    If  *Var[0]  &  00014202
        Call  8027D32C  ( FFFFFF81 )
        Thread
            Wait  20`
            Call  PlaySoundAtActor  ( .Actor:Self 000002E1 )
        EndThread
        Call  SetAnimation  ( .Actor:Self 00000003 003D002E )
        Call  SetAnimation  ( .Actor:Self 00000004 003D002D )
        Call  SetAnimation  ( .Actor:Self 00000005 003D002F )
        Wait  30`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00020001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000004 00020001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000005 00020001 .True )
        Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
        Wait  15`
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetAnimation  ( .Actor:Self 00000002 003D0000 )
        Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
        Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 00000018 00000000 00000019 00000000 00000000 00000000 00000000 00000000 )
        Wait  25`
        Call  SetAnimation  ( .Actor:Self 00000002 003D0006 )
        Wait  30`
        Call  SetAnimation  ( .Actor:Self 00000002 003D0006 )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
        Call  $Function_80218DB0    ( 00000078 0000000A )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.5] )
        EndThread
        Call  PlaySoundAtActor  ( .Actor:Self 000020E4 )
        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
        Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
        Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
        Call  SetAnimation  ( .Actor:Self 00000001 003B0012 )
        Call  PlayEffect    ( ~FX:Steam:FloatingRings *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  40`
        Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
        Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022CA9C )
        Call  BindIdle      ( .Actor:Self $Script_Idle_8022B19C )
        Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B310 )
        Call  SetActorType  ( .Actor:Self 0000001F )
        Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
        Call  HPBarToHome   ( .Actor:Self )
        Call  ResetAllActorSounds   ( .Actor:Self )
    Else
        ExecWait  $Script_80229CB0
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_8022A398
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  8026E914  ( *Var[0] *Var[1] )
            If  *Var[1]  >=  00000003
                ExecWait  $Script_80229CB0
            Else
                SetConst  *Var[0]  00000002
                SetConst  *Var[1]  003D0006
                ExecWait  DoNormalHit
            EndIf
        Case  ==  .Event:Hit % A
            Call  8026E914  ( *Var[0] *Var[1] )
            If  *Var[1]  >=  00000003
                ExecWait  $Script_80229CB0
                ExecWait  $Script_80229F08
            Else
                SetConst  *Var[0]  00000002
                SetConst  *Var[1]  003D0006
                ExecWait  DoNormalHit
            EndIf
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0009
            SetConst  *Var[2]  003D000A
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0009
            SetConst  *Var[2]  003D000A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D000A
            ExecWait  $Script_80229A34
            Return
        Case  ==  00000017 % 17
            Call  8026E914  ( *Var[0] *Var[1] )
            If  *Var[1]  >=  00000003
                ExecWait  $Script_80229CB0
            Else
                SetConst  *Var[0]  00000002
                SetConst  *Var[1]  003D0001
                ExecWait  DoImmune
            EndIf
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  8026E914  ( *Var[0] *Var[1] )
            If  *Var[1]  >=  00000003
                ExecWait  $Script_80229CB0
            Else
                SetConst  *Var[0]  00000002
                SetConst  *Var[1]  003D0001
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0006
            ExecWait  $Script_80229A34
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000002 003D0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 003D0001 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00100000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000005 00100000 .False )
            Call  SetAnimation      ( .Actor:Self 00000003 003D001F )
            Call  SetAnimation      ( .Actor:Self 00000004 003D001E )
            Call  SetAnimation      ( .Actor:Self 00000005 003D0020 )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0003
            SetConst  *Var[2]  003D0006
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  003D0007
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    ExecWait  $Script_80229C40
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022A9D0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000002E7 )
    Call  SetAnimation      ( .Actor:Self 00000002 003D0008 )
    Wait  12`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Add   *Var[2]  00000002
    Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000006 003D000B )
    Wait  12`
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000002E8 )
    Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000003 00000020 )
    Switch  *Var[0]
        Case  ==  .HitResult:Miss % 6
            Call  SetTargetActor    ( .Actor:Self .Actor:Player )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000078
            Set   *Var[1]  00000000
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[12.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  JumpPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            ExecWait  $Script_80229C40
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        Case  ==  .HitResult:Lucky % 5
            Call  SetTargetActor    ( .Actor:Self .Actor:Player )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Set   *Var[1]  FFFFFFFB
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[14.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
            Call  SetAnimation      ( .Actor:Self 00000002 003D0007 )
            Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000041
            Set   *Var[1]  FFFFFFFB
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000F .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            ExecWait  $Script_80229C40
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[14.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
    Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000F .Easing:Linear )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000037
            Set   *Var[1]  00000000
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
            Sub   *Var[0]  00000014
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
        EndCaseGroup
    EndSwitch
    ExecWait  $Script_80229C40
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8022B104
{
    .Status:Normal    003B0001
    .Status:Stone     003B0000
    .Status:Sleep     003B0012
    .Status:Poison    003B0001
    .Status:Stop      003B0000
    .Status:Static    003B0001
    .Status:Paralyze  003B0000
    .Status:Dizzy     003B0013
    .Status:Fear      003B0013
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8022B150
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022CA9C )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022B19C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B310 )
    Return
    End
}

#new:Script $Script_Idle_8022B19C
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218E08    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218E08    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8022B2AC
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0003
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8022B310
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8022B2AC
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0003
            SetConst  *Var[2]  003B0014
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022B7EC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_8022B2AC
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022BF14
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022CA9C
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_8022B7EC
    Else
        ExecWait  $Script_8022BF14
    EndIf
    Return
    End
}

PADDING: 8022CAF8 to 8022CB00 (005270C8 to 005270D0)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8022CB00
{
    .Status:Normal    003E0001
    .Status:Stone     003E0000
    .Status:Sleep     003E0007
    .Status:Poison    003E0001
    .Status:Stop      003E0000
    .Status:Static    003E0001
    .Status:Paralyze  003E0000
    .Status:Dizzy     003E0008
    .Status:Fear      003E0008
    .Status:End
}

#new:DefenseTable $DefenseTable_8022CB4C
{
    .Element:Normal 00000000
    .Element:Water  FFFFFFFE
    .Element:Ice    FFFFFFFE
    .Element:Fire   00000063
    .Element:Shock  00000000
    .Element:Hammer 00000000
    .Element:Blast  FFFFFFFF
    .Element:End
}

#new:StatusTable $StatusTable_8022CB88
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      80`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022CC34
{
    00800000 01000000 001800FF $IdleAnimations_8022CB00 $DefenseTable_8022CB4C 00000002 00000000 FFF60000 00000000
}

#new:Actor $PyroGuy
{
    % stats
    [Index]        23b
    [Level]        15`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022CB88
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022CC34
    [Script]      $Script_Init_8022CC80
    % move effectiveness
    [Escape]       60`b
    [Item]         60`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  36`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8022CC80
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022D344 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022CCCC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022CE60 )
    Return
    End
}

#new:Script $Script_Idle_8022CCCC
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218EE0    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218EE0    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8022CDDC
{
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003E0004
    SetConst  *Var[2]  003E0001
    ExecWait  DoReturnHome
    Return
    End
}

#new:Script $Script_HandleEvent_8022CE60
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8022CDDC
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0003
            SetConst  *Var[2]  003E0009
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003E0003
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:UpAndAway % 3D
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022D344
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003E0003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000046
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003E0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003E0005 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8022CDDC
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    Call  SetAnimation      ( .Actor:Self 00000001 003E0005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Fire 00000000 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003E0001 )
            Wait  8`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8022CDDC
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8022DA24 to 8022DA30 (00527FF4 to 00528000)
00000000 00000000 00000000

#new:Unknown $???_8022DA30
{
    00000019
}

#new:Script $Script_8022DA34
{
    Call  $Function_80218FB0 ( )
    Return
    End
}

#new:Script $Script_BeforeBattle_8022DA50
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Thread
        SetF  *Var[0]  *Fixed[0.0]
        SetF  *Var[1]  *Fixed[0.0]
        Loop
            Call  RotateModel       ( ~Model:omo_bt01:o367 *Var[1] 00000000 00000000 00000001 )
            Call  RotateModel       ( ~Model:omo_bt01:hari *Var[0] 00000000 00000000 00000001 )
            SubF  *Var[0]  *Fixed[0.6]
            SubF  *Var[1]  *Fixed[7.2]
            Call  ClampAngleFloat   ( *Var[0] )
            Call  ClampAngleFloat   ( *Var[1] )
            Wait  1`
        EndLoop
    EndThread
    Exec  $Script_8022DA34
    Return
    End
}

#new:Script $Script_AfterBattle_8022DB68
{
    Return
    End
}

#new:Stage $Stage_8022DB78
{
    $ASCII_80230B48  % omo_tex
    $ASCII_80230B38  % omo_bt01_shape
    $ASCII_80230B28  % omo_bt01_hit
    $Script_BeforeBattle_8022DA50
    $Script_AfterBattle_8022DB68
    $ASCII_80230B20  % omo_bg
    00000000
    00000000
    00000000
    00000000
}

#new:Script $Script_BeforeBattle_8022DBA0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022DBDC
{
    Return
    End
}

#new:Stage $Stage_8022DBEC
{
    $ASCII_80230B78  % omo_tex
    $ASCII_80230B68  % omo_bt02_shape
    $ASCII_80230B58  % omo_bt02_hit
    $Script_BeforeBattle_8022DBA0
    $Script_AfterBattle_8022DBDC
    $ASCII_80230B50  % omo_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022DC14 to 8022DC20 (005281E4 to 005281F0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022DC20
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:omo_bt03:g97 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022DC70
{
    Return
    End
}

#new:Stage $Stage_8022DC80
{
    $ASCII_80230BA8  % omo_tex
    $ASCII_80230B98  % omo_bt03_shape
    $ASCII_80230B88  % omo_bt03_hit
    $Script_BeforeBattle_8022DC20
    $Script_AfterBattle_8022DC70
    $ASCII_80230B80  % omo_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022DCA8 to 8022DCB0 (00528278 to 00528280)
00000000 00000000

#new:Script $Script_BeforeBattle_8022DCB0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022DCEC
{
    Return
    End
}

#new:Stage $Stage_8022DCFC
{
    $ASCII_80230BD8  % omo_tex
    $ASCII_80230BC8  % omo_bt03_shape
    $ASCII_80230BB8  % omo_bt03_hit
    $Script_BeforeBattle_8022DCB0
    $Script_AfterBattle_8022DCEC
    $ASCII_80230BB0  % omo_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022DD24 to 8022DD30 (005282F4 to 00528300)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022DD30
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetTexPanner      ( ~Model:omo_bt04:o409 0000000A )
    Thread
        Set   *Var[E]  00000000
        Loop
            Add   *Var[E]  00008000
            Call  SetTexPanOffset   ( 0000000A 00000000 *Var[E] 00000000 )
            Wait  10`
        EndLoop
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8022DDEC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022DDFC
{
    ~Model:omo_bt04:itigo
    ~Model:omo_bt04:kisya
    ~Model:omo_bt04:kusari
    00000000
}

#new:Stage $Stage_8022DE0C
{
    $ASCII_80230C08  % omo_tex
    $ASCII_80230BF8  % omo_bt04_shape
    $ASCII_80230BE8  % omo_bt04_hit
    $Script_BeforeBattle_8022DD30
    $Script_AfterBattle_8022DDEC
    $ASCII_80230BE0  % omo_bg
    $ForegroundModelList_8022DDFC
    00000004
    $SpecialFormation_8022DE64
    00000000
}

#new:Vector3D $Vector3D_8022DE34
{
    -49` 56` -68`
}

#new:Vector3D $Vector3D_8022DE40
{
    -13` 56` -68`
}

#new:Vector3D $Vector3D_8022DE4C
{
    20` 56` -68`
}

#new:Vector3D $Vector3D_8022DE58
{
    53` 56` -68`
}

#new:SpecialFormation $SpecialFormation_8022DE64
{
    $SlotMachineStart $Vector3D_8022DE34 00000000 00000000 00000000 00000000 00000000
    $SlotMachineStop $Vector3D_8022DE40 00000000 00000001 00000000 00000000 00000000
    $SlotMachineStop $Vector3D_8022DE4C 00000000 00000002 00000000 00000000 00000000
    $SlotMachineStop $Vector3D_8022DE58 00000000 00000003 00000000 00000000 00000000
}

#new:IntTable $IntTable_8022DED4
{
    00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:IntTable $IntTable_8022DEF4
{
    00000000 00000001 00000000 00000002 00000001 00000002 00000000 00000002
}

#new:IntTable $IntTable_8022DF14
{
    00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:DefenseTable $DefenseTable_8022DF34
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022DF40
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022DFEC
{
    00800000 01000000 000000FF 00000000 $DefenseTable_8022DF34 00000000 00000000 00000000 00000000
}

#new:Actor $SlotMachineStop
{
    % stats
    [Index]        CFb
    [Level]        99`b
    [MaxHP]        99`b
    [Coins]         0`b
    [Flags]       00244005
    [StatusTable] $StatusTable_8022DF40
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022DFEC
    [Script]      $Script_Init_8022E060
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]   0`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         44`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Actor $SlotMachineStart
{
    % stats
    [Index]        CEb
    [Level]        99`b
    [MaxHP]        99`b
    [Coins]         0`b
    [Flags]       00244005
    [StatusTable] $StatusTable_8022DF40
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022DFEC
    [Script]      $Script_Init_8022E060
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]   0`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         44`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8022E060
{
    UseArray  $End[290]
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022F4A8 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8022E1F8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ED54 )
    Set   *Array[1]  00000000
    Set   *Array[2]  00000000
    Set   *Array[3]  00000000
    Set   *Array[4]  00000000
    Call  RandInt   ( 00000008 *Var[0] )
    Mul   *Var[0]  0000002D
    Set   *Array[5]  *Var[0]
    Call  RandInt   ( 00000008 *Var[0] )
    Mul   *Var[0]  0000002D
    Set   *Array[6]  *Var[0]
    Call  RandInt   ( 00000008 *Var[0] )
    Mul   *Var[0]  0000002D
    Set   *Array[7]  *Var[0]
    Call  $Function_802191C0 ( )
    If  *Var[0]  ==  00000001
        Set   *Array[1]  00000001
        Set   *Array[2]  00000001
        Set   *Array[3]  00000001
        Set   *Array[4]  00000001
    EndIf
    Return
    End
}

#new:Script $Script_Idle_8022E1F8
{
    UseArray  $End[290]
    Call  EnableTexPanning  ( 0000002D .True )
    Set   *Var[E]  00000000
    Set   *Var[F]  00000000
    Label  0
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  00000001
            Switch  *Array[2]
                Case  ==  00000000
                Case  ==  00000001
                    Add   *Array[5]  00000005
                Case  ==  00000002
                    If  *Array[8]  >  00000000
                        Add   *Array[5]  00000005
                        Sub   *Array[8]  00000005
                        BreakCase
                    EndIf
                    Set   *Var[0]  *Array[5]
                    Mod   *Var[0]  0000002D
                    If  *Var[0]  !=  00000000
                        Add   *Array[5]  00000005
                    Else
                        Set   *Array[2]  00000003
                    EndIf
            EndSwitch
            Call  RotateModel   ( 00000020 *Array[5] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000021 *Array[5] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000022 *Array[5] 00000001 00000000 00000000 )
        Case  ==  00000002
            Switch  *Array[3]
                Case  ==  00000000
                Case  ==  00000001
                    Add   *Array[6]  00000005
                Case  ==  00000002
                    If  *Array[9]  >  00000000
                        Add   *Array[6]  00000005
                        Sub   *Array[9]  00000005
                        BreakCase
                    EndIf
                    Set   *Var[0]  *Array[6]
                    Mod   *Var[0]  0000002D
                    If  *Var[0]  !=  00000000
                        Add   *Array[6]  00000005
                    Else
                        Set   *Array[3]  00000003
                    EndIf
            EndSwitch
            Call  RotateModel   ( 00000024 *Array[6] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000025 *Array[6] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000026 *Array[6] 00000001 00000000 00000000 )
        Case  ==  00000003
            Switch  *Array[4]
                Case  ==  00000000
                Case  ==  00000001
                    Add   *Array[7]  00000005
                Case  ==  00000002
                    If  *Array[A]  >  00000000
                        Add   *Array[7]  00000005
                        Sub   *Array[A]  00000005
                        BreakCase
                    EndIf
                    Set   *Var[0]  *Array[7]
                    Mod   *Var[0]  0000002D
                    If  *Var[0]  !=  00000000
                        Add   *Array[7]  00000005
                    Else
                        Set   *Array[4]  00000003
                    EndIf
            EndSwitch
            Call  RotateModel   ( 00000028 *Array[7] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000029 *Array[7] 00000001 00000000 00000000 )
            Call  RotateModel   ( 0000002A *Array[7] 00000001 00000000 00000000 )
    EndSwitch
    If  *Array[5]  >=  00000168
        Sub   *Array[5]  00000168
    EndIf
    If  *Array[6]  >=  00000168
        Sub   *Array[6]  00000168
    EndIf
    If  *Array[7]  >=  00000168
        Sub   *Array[7]  00000168
    EndIf
    If  *Array[1]  ==  00000000
        Add   *Var[F]  FFFFFEEB
        Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *Var[F] )
    EndIf
    If  *Array[1]  ==  00000001
        Add   *Var[F]  FFFFFBAA
        Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *Var[F] )
    EndIf
    If  *Array[1]  ==  00000002
        Add   *Var[F]  FFFFF2FE
        Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *Var[F] )
    EndIf
    If  *Array[1]  ==  00000002
        Goto  1
    EndIf
    If  *Array[1]  ==  00000000
        Goto  1
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000000
        Goto  1
    EndIf
    Set   *Var[0]  *Array[2]
    Add   *Var[0]  *Array[3]
    Add   *Var[0]  *Array[4]
    If  *Var[0]  ==  00000009
        Set   *Var[0]  *Array[5]
        Div   *Var[0]  0000002D
        UseIntBuffer  $IntTable_8022DED4
        GetIntN  *Var[A] *Var[0]
        Set   *Var[0]  *Array[6]
        Div   *Var[0]  0000002D
        UseIntBuffer  $IntTable_8022DEF4
        GetIntN  *Var[B] *Var[0]
        Set   *Var[0]  *Array[7]
        Div   *Var[0]  0000002D
        UseIntBuffer  $IntTable_8022DF14
        GetIntN  *Var[C] *Var[0]
        Loop
            If  *Var[A]  !=  *Var[B]
                BreakLoop
            EndIf
            If  *Var[A]  !=  *Var[C]
                BreakLoop
            EndIf
            If  *Var[B]  !=  *Var[C]
                BreakLoop
            EndIf
            Thread
                Call  8026BF48  ( 00000001 )
                Call  UseCamPreset      ( 00000013 )
                Call  SetBattleCamTarget    ( 00000000 00000064 00000000 )
                Call  SetBattleCamOffsetZ   ( 00000000 )
                Call  SetBattleCamZoom  ( 00000154 )
                Call  MoveBattleCamOver ( 0000000A )
                Switch  *Var[A]
                    Case  ==  00000000
                        Loop  0000000A
                            Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  10`
                        EndLoop
                    Case  ==  00000001
                        Loop  0000000A
                            Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  10`
                        EndLoop
                    Case  ==  00000002
                        Loop  0000000A
                            Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_802191E8 ( )
                            Wait  10`
                        EndLoop
                EndSwitch
                Set   *Array[1]  00000000
                Set   *Array[2]  00000000
                Set   *Array[3]  00000000
                Set   *Array[4]  00000000
                Call  8026BF48  ( 00000000 )
            EndThread
            Set   *Array[1]  00000002
            BreakLoop
        EndLoop
    EndIf
    Label  1
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8022ED54
{
    UseArray  $End[290]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:ShockHit % 2F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000 % 0
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 00000000 00000000 )
                    Set   *Array[1]  00000001
                    Set   *Array[2]  00000001
                    Set   *Array[3]  00000001
                    Set   *Array[4]  00000001
                Case  ==  00000001 % 1
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
                    If  *Array[2]  ==  00000001
                        Set   *Array[8]  00000064
                        Set   *Array[9]  00000096
                        Set   *Array[A]  000000C8
                        Set   *Array[2]  00000002
                        Set   *Array[3]  00000002
                        Set   *Array[4]  00000002
                    EndIf
                Case  ==  00000002 % 2
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
                    If  *Array[3]  ==  00000001
                        Set   *Array[8]  00000096
                        Set   *Array[9]  00000064
                        Set   *Array[A]  000000C8
                        Set   *Array[2]  00000002
                        Set   *Array[3]  00000002
                        Set   *Array[4]  00000002
                    EndIf
                Case  ==  00000003 % 3
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
                    If  *Array[4]  ==  00000001
                        Set   *Array[8]  000000C8
                        Set   *Array[9]  00000096
                        Set   *Array[A]  00000064
                        Set   *Array[2]  00000002
                        Set   *Array[3]  00000002
                        Set   *Array[4]  00000002
                    EndIf
            EndSwitch
        EndCaseGroup
        CaseOR  ==  .Event:BurnDeath % 24
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:ShockDeath % 26
        CaseOR  ==  .Event:Death % 20
        CaseOR  ==  .Event:SpinSmashDeath % 21
        CaseOR  ==  .Event:SpikeContact % 2A
        CaseOR  ==  .Event:BurnContact % 2C
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022F4A8
{
    UseArray  $End[290]
    Return
    End
}

PADDING: 8022F4C4 to 8022F4D0 (00529A94 to 00529AA0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022F4D0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:omo_bt05:g1 00000000 )
    Call  SetGroupEnabled   ( ~Model:omo_bt05:dai1 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022F534
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F544
{
    ~Model:omo_bt05:itigo
    ~Model:omo_bt05:kisya
    00000000
}

#new:Stage $Stage_8022F550
{
    $ASCII_80230C38  % omo_tex
    $ASCII_80230C28  % omo_bt05_shape
    $ASCII_80230C18  % omo_bt05_hit
    $Script_BeforeBattle_8022F4D0
    $Script_AfterBattle_8022F534
    $ASCII_80230C10  % omo_bg
    $ForegroundModelList_8022F544
    00000000
    00000000
    00000000
}

PADDING: 8022F578 to 8022F580 (00529B48 to 00529B50)
00000000 00000000

#new:Script $Script_BeforeBattle_8022F580
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:omo_bt05:g2 00000000 )
    Call  SetGroupEnabled   ( ~Model:omo_bt05:dai2 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022F5E4
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F5F4
{
    ~Model:omo_bt05:mae2
    00000000
}

#new:Stage $Stage_8022F5FC
{
    $ASCII_80230C68  % omo_tex
    $ASCII_80230C58  % omo_bt05_shape
    $ASCII_80230C48  % omo_bt05_hit
    $Script_BeforeBattle_8022F580
    $Script_AfterBattle_8022F5E4
    $ASCII_80230C40  % omo_bg
    $ForegroundModelList_8022F5F4
    00000000
    00000000
    00000000
}

PADDING: 8022F624 to 8022F630 (00529BF4 to 00529C00)
00000000 00000000 00000000

#new:Script $Script_8022F630
{
    Set   *Var[A]  *Var[0]
    Set   *Var[9]  *Var[1]
    Set   *Var[8]  *Var[2]
    Label  0
    Call  MakeLerp  ( 00000000 *Var[9] *Var[8] .Easing:CosInOut )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] 00000000 *Var[0] 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Call  MakeLerp  ( *Var[9] 00000000 *Var[8] .Easing:CosInOut )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] 00000000 *Var[0] 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022F790
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  0000001A
        Set   *Var[1]  FFFFFFCE
        Set   *Var[2]  00000078
        Exec  $Script_8022F630
        Wait  10`
        Set   *Var[0]  0000001E
        Set   *Var[1]  FFFFFFB0
        Set   *Var[2]  00000096
        Exec  $Script_8022F630
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8022F860
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F870
{
    ~Model:omo_bt06:kuruma
    ~Model:omo_bt06:hosi
    00000000
}

#new:Stage $Stage_8022F87C
{
    $ASCII_80230C98  % omo_tex
    $ASCII_80230C88  % omo_bt06_shape
    $ASCII_80230C78  % omo_bt06_hit
    $Script_BeforeBattle_8022F790
    $Script_AfterBattle_8022F860
    $ASCII_80230C70  % omo_bg
    $ForegroundModelList_8022F870
    00000000
    00000000
    00000000
}

PADDING: 8022F8A4 to 8022F8B0 (00529E74 to 00529E80)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022F8B0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022F8EC
{
    Return
    End
}

#new:Stage $Stage_8022F8FC
{
    $ASCII_80230CC0  % omo_tex
    $ASCII_80230CB0  % omo_bt07_shape
    $ASCII_80230CA0  % omo_bt07_hit
    $Script_BeforeBattle_8022F8B0
    $Script_AfterBattle_8022F8EC
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022F924 to 8022F930 (00529EF4 to 00529F00)
00000000 00000000 00000000

#new:Formation $Formation_00
{
    $ShyGuy_RED 00000001 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_RED 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $ShyGuy_BLU 00000001 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_BLU 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $ShyGuy_YLW 00000001 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_YLW 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_YLW 00000001 00000009 00000000 00000000 00000000 00000000
    $ShyGuy_YLW 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $ShyGuy_PNK 00000001 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_PNK 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $ShyGuy_GRN 00000001 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_GRN 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $ShyGuy_RED 00000000 0000000A 00000000 00000000 00000000 00000000
    $MediGuy 00000005 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $ShyGuy_BLU 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
    $ShyGuy_RED 00000002 00000008 00000000 00000000 00000000 00000000
    $ShyGuy_BLU 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $ShyGuy_PNK 00000000 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $ShyGuy_PNK 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
    $MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $ShyGuy_GRN 00000000 0000000A 00000000 00000000 00000000 00000000
    $SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
    $SkyGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_YLW 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
    $SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
    $ShyGuy_YLW 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
    $SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
    $SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
    $SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
    $SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
    $SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
    $MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
    $SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
    $SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $SpyGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
    $SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
    $SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
    $SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_19
{
    $SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
    $MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1A
{
    $SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
    $SpyGuy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1B
{
    $SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
    $MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1C
{
    $PyroGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1D
{
    $PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1E
{
    $PyroGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1F
{
    $PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_20
{
    $PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
    $MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_21
{
    $PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_22
{
    $PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_23
{
    $PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
    $MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_24
{
    $PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_25
{
    $GrooveGuy 00000001 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_26
{
    $GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_27
{
    $GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $MediGuy 00000005 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_28
{
    $GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_29
{
    $GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
    $MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2A
{
    $GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2B
{
    $GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy_BLU 00000001 00000009 00000000 00000000 00000000 00000000
    $SkyGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2C
{
    $AntiGuy 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8023107C 00000002 $Formation_00 $Stage_8022DE0C 00000000
    $SJIS_80231074 00000002 $Formation_01 $Stage_8022DE0C 00000000
    $SJIS_80231068 00000002 $Formation_02 $Stage_8022DE0C 00000000
    $SJIS_8023105C 00000003 $Formation_03 $Stage_8022DE0C 00000000
    $SJIS_80231054 00000002 $Formation_04 $Stage_8022DE0C 00000000
    $SJIS_80231048 00000002 $Formation_05 $Stage_8022DE0C 00000000
    $SJIS_80231034 00000003 $Formation_06 $Stage_8022DE0C 00000000 % unused
    $SJIS_80231018 00000003 $Formation_07 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230FFC 00000003 $Formation_08 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230FE4 00000004 $Formation_09 $Stage_8022DE0C 00000000
    $SJIS_80230FCC 00000003 $Formation_0A $Stage_8022DE0C 00000000 % unused
    $SJIS_80230FB0 00000004 $Formation_0B $Stage_8022DE0C 00000000 % unused
    $SJIS_80230F94 00000003 $Formation_0C $Stage_8022DE0C 00000000 % unused
    $SJIS_80230F88 00000002 $Formation_0D $Stage_8022DE0C 00000000 % unused
    $SJIS_80230F78 00000002 $Formation_0E $Stage_8022DE0C 00000000 % unused
    $SJIS_80230F64 00000003 $Formation_0F $Stage_8022DE0C 00000000
    $SJIS_80230F50 00000002 $Formation_10 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230F38 00000003 $Formation_11 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230F1C 00000003 $Formation_12 $Stage_8022DE0C 00000000
    $SJIS_80230F00 00000004 $Formation_13 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230EE0 00000003 $Formation_14 $Stage_8022DE0C 00000000
    $SJIS_80230ED4 00000002 $Formation_15 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230EC0 00000002 $Formation_16 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230EAC 00000002 $Formation_17 $Stage_8022DE0C 00000000
    $SJIS_80230E94 00000003 $Formation_18 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230E7C 00000004 $Formation_19 $Stage_8022DE0C 00000000
    $SJIS_80230E70 00000004 $Formation_1A $Stage_8022DE0C 00000000 % unused
    $SJIS_80230E48 00000004 $Formation_1B $Stage_8022DE0C 00000000
    $SJIS_80230E3C 00000002 $Formation_1C $Stage_8022DE0C 00000000 % unused
    $SJIS_80230E30 00000003 $Formation_1D $Stage_8022DE0C 00000000
    $SJIS_80230E1C 00000002 $Formation_1E $Stage_8022DE0C 00000000 % unused
    $SJIS_80230E04 00000003 $Formation_1F $Stage_8022DE0C 00000000 % unused
    $SJIS_80230DEC 00000004 $Formation_20 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230DCC 00000003 $Formation_21 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230DAC 00000003 $Formation_22 $Stage_8022DE0C 00000000
    $SJIS_80230D8C 00000004 $Formation_23 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230D78 00000003 $Formation_24 $Stage_8022DE0C 00000000
    $SJIS_80230D68 00000002 $Formation_25 $Stage_8022DE0C 00000000
    $SJIS_80230D58 00000003 $Formation_26 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230D40 00000003 $Formation_27 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230D28 00000003 $Formation_28 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230D0C 00000004 $Formation_29 $Stage_8022DE0C 00000000 % unused
    $SJIS_80230CF0 00000003 $Formation_2A $Stage_8022DE0C 00000000
    $SJIS_80230CD4 00000003 $Formation_2B $Stage_8022DE0C 00000000
    $SJIS_80230CC8 00000001 $Formation_2C $Stage_8022DE0C 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_802310C4 $Stage_8022DB78
    $ASCII_802310BC $Stage_8022DBEC
    $ASCII_802310B4 $Stage_8022DC80
    $ASCII_802310AC $Stage_8022DCFC
    $ASCII_802310A4 $Stage_8022DE0C
    $ASCII_8023109C $Stage_8022F550
    $ASCII_80231094 $Stage_8022F5FC
    $ASCII_8023108C $Stage_8022F87C
    $ASCII_80231084 $Stage_8022F8FC
    00000000 00000000
}

PADDING: 80230B18 to 80230B20 (0052B0E8 to 0052B0F0)
00000000 00000000

#new:ASCII $ASCII_80230B20
{
    "omo_bg"
}

#new:ASCII $ASCII_80230B28
{
    "omo_bt01_hit"
}

#new:ASCII $ASCII_80230B38
{
    "omo_bt01_shape"
}

#new:ASCII $ASCII_80230B48
{
    "omo_tex"
}

#new:ASCII $ASCII_80230B50
{
    "omo_bg"
}

#new:ASCII $ASCII_80230B58
{
    "omo_bt02_hit"
}

#new:ASCII $ASCII_80230B68
{
    "omo_bt02_shape"
}

#new:ASCII $ASCII_80230B78
{
    "omo_tex"
}

#new:ASCII $ASCII_80230B80
{
    "omo_bg"
}

#new:ASCII $ASCII_80230B88
{
    "omo_bt03_hit"
}

#new:ASCII $ASCII_80230B98
{
    "omo_bt03_shape"
}

#new:ASCII $ASCII_80230BA8
{
    "omo_tex"
}

#new:ASCII $ASCII_80230BB0
{
    "omo_bg"
}

#new:ASCII $ASCII_80230BB8
{
    "omo_bt03_hit"
}

#new:ASCII $ASCII_80230BC8
{
    "omo_bt03_shape"
}

#new:ASCII $ASCII_80230BD8
{
    "omo_tex"
}

#new:ASCII $ASCII_80230BE0
{
    "omo_bg"
}

#new:ASCII $ASCII_80230BE8
{
    "omo_bt04_hit"
}

#new:ASCII $ASCII_80230BF8
{
    "omo_bt04_shape"
}

#new:ASCII $ASCII_80230C08
{
    "omo_tex"
}

#new:ASCII $ASCII_80230C10
{
    "omo_bg"
}

#new:ASCII $ASCII_80230C18
{
    "omo_bt05_hit"
}

#new:ASCII $ASCII_80230C28
{
    "omo_bt05_shape"
}

#new:ASCII $ASCII_80230C38
{
    "omo_tex"
}

#new:ASCII $ASCII_80230C40
{
    "omo_bg"
}

#new:ASCII $ASCII_80230C48
{
    "omo_bt05_hit"
}

#new:ASCII $ASCII_80230C58
{
    "omo_bt05_shape"
}

#new:ASCII $ASCII_80230C68
{
    "omo_tex"
}

#new:ASCII $ASCII_80230C70
{
    "omo_bg"
}

#new:ASCII $ASCII_80230C78
{
    "omo_bt06_hit"
}

#new:ASCII $ASCII_80230C88
{
    "omo_bt06_shape"
}

#new:ASCII $ASCII_80230C98
{
    "omo_tex"
}

#new:ASCII $ASCII_80230CA0
{
    "omo_bt07_hit"
}

#new:ASCII $ASCII_80230CB0
{
    "omo_bt07_shape"
}

#new:ASCII $ASCII_80230CC0
{
    "omo_tex"
}

#new:SJIS $SJIS_80230CC8
{
    ブラック % burakku
}

#new:SJIS $SJIS_80230CD4
{
    ダンシング,あお,バルーン % danshingu,ao,baru-n
}

#new:SJIS $SJIS_80230CF0
{
    ダンシングx２,ファイアー % danshingux2,faia-
}

#new:SJIS $SJIS_80230D0C
{
    ダンシングx２,かいふくx２ % danshingux2,kaifukux2
}

#new:SJIS $SJIS_80230D28
{
    ダンシングx２,かいふく % danshingux2,kaifuku
}

#new:SJIS $SJIS_80230D40
{
    ダンシング,かいふくx２ % danshingu,kaifukux2
}

#new:SJIS $SJIS_80230D58
{
    ダンシングx３ % danshingux3
}

#new:SJIS $SJIS_80230D68
{
    ダンシングx２ % danshingux2
}

#new:SJIS $SJIS_80230D78
{
    ファイアx2,コマンド % faiax2,komando
}

#new:SJIS $SJIS_80230D8C
{
    ファイア,ダンシング,かいふくx2 % faia,danshingu,kaifukux2
}

#new:SJIS $SJIS_80230DAC
{
    ファイア,コマンド,ダンシング % faia,komando,danshingu
}

#new:SJIS $SJIS_80230DCC
{
    ファイア,ダンシング,ファイア % faia,danshingu,faia
}

#new:SJIS $SJIS_80230DEC
{
    ファイアx２,かいふくx２ % faiax2,kaifukux2
}

#new:SJIS $SJIS_80230E04
{
    ファイアx２,かいふく % faiax2,kaifuku
}

#new:SJIS $SJIS_80230E1C
{
    ファイア,かいふく % faia,kaifuku
}

#new:SJIS $SJIS_80230E30
{
    ファイアx３ % faiax3
}

#new:SJIS $SJIS_80230E3C
{
    ファイアx２ % faiax2
}

#new:SJIS $SJIS_80230E48
{
    コマンド,ファイア,ダンシング,かいふく % komando,faia,danshingu,kaifuku
}

#new:SJIS $SJIS_80230E70
{
    コマンドx４ % komandox4
}

#new:SJIS $SJIS_80230E7C
{
    コマンドx３,かいふく % komandox3,kaifuku
}

#new:SJIS $SJIS_80230E94
{
    コマンドx２,かいふく % komandox2,kaifuku
}

#new:SJIS $SJIS_80230EAC
{
    コマンド,かいふく % komando,kaifuku
}

#new:SJIS $SJIS_80230EC0
{
    コマンド,ファイア % komando,faia
}

#new:SJIS $SJIS_80230ED4
{
    コマンドx２ % komandox2
}

#new:SJIS $SJIS_80230EE0
{
    バルーン,ダンシング,かいふく % baru-n,danshingu,kaifuku
}

#new:SJIS $SJIS_80230F00
{
    バルーン,みどり,かいふくx２ % baru-n,midori,kaifukux2
}

#new:SJIS $SJIS_80230F1C
{
    バルーン,みどり,かいふく % baru-n,midori,kaifuku
}

#new:SJIS $SJIS_80230F38
{
    バルーンx２,コマンド % baru-nx2,komando
}

#new:SJIS $SJIS_80230F50
{
    バルーン,かいふく % baru-n,kaifuku
}

#new:SJIS $SJIS_80230F64
{
    バルーンx２,きいろ % baru-nx2,kiiro
}

#new:SJIS $SJIS_80230F78
{
    バルーン,きいろ % baru-n,kiiro
}

#new:SJIS $SJIS_80230F88
{
    バルーンx２ % baru-nx2
}

#new:SJIS $SJIS_80230F94
{
    みどり,バルーン,かいふく % midori,baru-n,kaifuku
}

#new:SJIS $SJIS_80230FB0
{
    もも,ダンシング,かいふくx２ % momo,danshingu,kaifukux2
}

#new:SJIS $SJIS_80230FCC
{
    もも,ファイア,かいふく % momo,faia,kaifuku
}

#new:SJIS $SJIS_80230FE4
{
    きいろ,みどり,あか,あお % kiiro,midori,aka,ao
}

#new:SJIS $SJIS_80230FFC
{
    きいろ,コマンド,かいふく % kiiro,komando,kaifuku
}

#new:SJIS $SJIS_80231018
{
    あお,ダンシング,かいふく % ao,danshingu,kaifuku
}

#new:SJIS $SJIS_80231034
{
    あか,かいふくx２ % aka,kaifukux2
}

#new:SJIS $SJIS_80231048
{
    みどりx２ % midorix2
}

#new:SJIS $SJIS_80231054
{
    ももx２ % momox2
}

#new:SJIS $SJIS_8023105C
{
    きいろx３ % kiirox3
}

#new:SJIS $SJIS_80231068
{
    きいろx２ % kiirox2
}

#new:SJIS $SJIS_80231074
{
    あおx２ % aox2
}

#new:SJIS $SJIS_8023107C
{
    あかx２ % akax2
}

#new:ASCII $ASCII_80231084
{
    "omo_07"
}

#new:ASCII $ASCII_8023108C
{
    "omo_06"
}

#new:ASCII $ASCII_80231094
{
    "omo_05b"
}

#new:ASCII $ASCII_8023109C
{
    "omo_05"
}

#new:ASCII $ASCII_802310A4
{
    "omo_04"
}

#new:ASCII $ASCII_802310AC
{
    "omo_03b"
}

#new:ASCII $ASCII_802310B4
{
    "omo_03"
}

#new:ASCII $ASCII_802310BC
{
    "omo_02"
}

#new:ASCII $ASCII_802310C4
{
    "omo_01"
}

PADDING: 802310CC to 802310D0 (0052B69C to 0052B6A0)
00000000

