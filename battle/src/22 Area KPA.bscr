% Script File: 22 Area KPA.bscr
% Decoded from: 684A30 to 69F200 (22 Area KPA)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (00684AFC to 00684B00)
00000000

#new:Function $Function_802180D0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021819C
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 802181F4 to 80218200 (00684C24 to 00684C30)
00000000 00000000 00000000

#new:Function $Function_80218200
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80218358
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_802184E8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218514
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802185E0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218638
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 802186FC to 80218700 (0068512C to 00685130)
00000000

#new:Function $Function_80218700
{
	ADDIU     SP, SP, FFD8
	SW        S2, 20 (SP)
	COPY      S2, A0
	SW        RA, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      S0, A1
	BEQ       S0, R0, .oDC
	COPY      S1, V0
	LWC1      F2, 18 (S1)
	LWC1      F0, 144 (S1)
	SUB.S     F2, F2, F0
	MUL.S     F2, F2, F2
	NOP
	LWC1      F6, 1C (S1)
	LWC1      F0, 148 (S1)
	SUB.S     F6, F6, F0
	MUL.S     F6, F6, F6
	NOP
	LWC1      F4, 14C (S1)
	LWC1      F0, 20 (S1)
	SUB.S     F0, F0, F4
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F2, F2, F6
	ADD.S     F12, F2, F0
	SQRT.S    F4, F12
	C.EQ.S    F4, F4
	NOP
	BC1T      .o90
	NOP
	JAL       ~Func:sqrtf
	NOP
	MOV.S     F4, F0
	.o90
	LWC1      F0, 4C (S1)
	LIF       F2, 0.5
	DIV.S     F0, F4, F0
	MUL.S     F0, F0, F2
	NOP
	LIF       F2, 1.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F8, F0
	SWC1      F8, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 359
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       ~Func:play_sound_at_position
	CLEAR     A1
	.oDC
	LW        V0, 70 (S2)
	COPY      V1, V0
	ADDIU     V0, V0, FFFF
	BGTZ      V1, .o114
	SW        V0, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 759
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       ~Func:play_sound_at_position
	CLEAR     A1
	BEQ       R0, R0, .o118
	ADDIU     V0, R0, 2
	.o114
	CLEAR     V0
	.o118
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:IdleAnimations $IdleAnimations_80218830
{
    .Status:Normal    00550004
    .Status:Stone     00550000
    .Status:Sleep     0055002A
    .Status:Poison    00550004
    .Status:Stop      00550000
    .Status:Static    00550004
    .Status:Paralyze  00550000
    .Status:Dizzy     00550026
    .Status:Fear      00550026
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021887C
{
    .Status:Normal    00550005
    .Status:Stone     00550001
    .Status:Sleep     0055002B
    .Status:Poison    00550005
    .Status:Stop      00550001
    .Status:Static    00550005
    .Status:Paralyze  00550001
    .Status:Dizzy     00550027
    .Status:Fear      00550027
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802188C8
{
    .Status:Normal    00550006
    .Status:Stone     00550002
    .Status:Sleep     0055002C
    .Status:Poison    00550006
    .Status:Stop      00550002
    .Status:Static    00550006
    .Status:Paralyze  00550002
    .Status:Dizzy     00550028
    .Status:Fear      00550028
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80218914
{
    .Status:Normal    00550007
    .Status:Stone     00550003
    .Status:Sleep     0055002D
    .Status:Poison    00550007
    .Status:Stop      00550003
    .Status:Static    00550007
    .Status:Paralyze  00550003
    .Status:Dizzy     00550029
    .Status:Fear      00550029
    .Status:End
}

#new:DefenseTable $DefenseTable_80218960
{
    .Element:Normal 00000004
    .Element:End
}

#new:DefenseTable $DefenseTable_8021896C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80218978
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80218A24
{
    00800000 01000000 FD1500FF $IdleAnimations_8021887C $DefenseTable_80218960 00001010 00000000 00F80000 00000000
}

#new:Actor $BonyBeetle
{
    % stats
    [Index]        46b
    [Level]        25`b
    [MaxHP]         8`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80218978
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80218A24
    [Script]      $Script_Init_80218A70
    % move effectiveness
    [Escape]       50`b
    [Item]         60`b
    [AirLift]      70`b
    [Hurricane]    60`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         27`b  27`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80218A70
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  8027D75C      ( FFFFFF81 *Var[1] )
    If  *Var[0]  ==  00000001
        If  *Var[1]  ==  00000001
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021887C )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 00550005 )
        Else
            Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218830 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00550004 )
        EndIf
    Else
        Call  RandInt   ( 000003E8 *Var[0] )
        If  *Var[0]  <  000001F4
            Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218830 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00550004 )
        Else
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021887C )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 00550005 )
        EndIf
    EndIf
    EndIf
    Call  8027D4C8      ( FFFFFF81 00000001 00000000 FFFFFFF8 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000015 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80218D6C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218D7C )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80219110 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80218D6C
{
    Return
    End
}

#new:Script $Script_HandleEvent_80218D7C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            ExecWait  $Script_802191FC
        Case  ==  00000001
            ExecWait  $Script_8021A060
        Case  ==  00000002
            ExecWait  $Script_8021BA6C
        Case  ==  00000003
            ExecWait  $Script_8021C234
    EndSwitch
    Call  ActorExists   ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  .True
        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
        If  *Var[0]  ==  .True
            ExecWait  $Script_80218EE8
            Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
        EndIf
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80218EE8
{
    Call  GetLastDamage ( .Actor:Self *Var[0] )
    If  *Var[0]  <=  00000000
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  0035D000
        Return
    EndIf
    Label  0
    Call  GetBattleFlags    ( *Var[A] )
    If  *Var[A]  &  00000100
        Wait  1`
        Goto  0
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  PlaySoundAtActor  ( .Actor:Self 000020CE )
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0055002E )
            Wait  25`
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021887C )
        Case  ==  00000001
            Call  PlaySoundAtActor  ( .Actor:Self 000020CF )
            Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 0055002F )
            Wait  25`
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218830 )
        Case  ==  00000002
        Case  ==  00000003
    EndSwitch
    Return
    End
}

#new:Script $Script_TakeTurn_80219110
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            ExecWait  $Script_Tackle
        Case  ==  00000001
            ExecWait  $Script_Tackle_Spikes
        Case  ==  00000002
            ExecWait  $Script_FlipOver
        Case  ==  00000003
            ExecWait  $Script_FlipOver_Spikes
    EndSwitch
    Return
    End
}

#new:IntTable $IntTable_802191AC
{
    00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
    00000011 0000000D 00000007 00000000 00000004 00000006 00000007 00000006
    00000004 00000000 00000002 00000000
}

#new:Script $Script_802191FC
{
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoNormalHit
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001E
            SetConst  *Var[2]  0055001F
            ExecWait  DoBurnHit
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001E
            SetConst  *Var[2]  0055001F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoSpinSmashHit
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF8 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000015 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021896C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802188C8 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 00550008 )
            UseIntBuffer  $IntTable_802191AC
            Loop  00000014
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Wait  20`
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000E
            ExecWait  DoReturnHome
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550010
            ExecWait  DoImmune
            Wait  20`
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 00550012 )
                Wait  10`
            EndIf
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550004
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000E
            SetConst  *Var[2]  00550018
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000E
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550018
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Return
    End
}

#new:Script $Script_Tackle
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00550016 )
        Goto  64
    EndIf
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00550010 )
    Wait  10`
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
    Call  SetAnimation      ( .Actor:Self 00000001 00550016 )
    Wait  15`
    Label  64
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00550012 )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 0055000E )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00550004 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00550012 )
            Wait  5`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000E
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00550004 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A060
{
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoNormalHit
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550020
            SetConst  *Var[2]  00550021
            ExecWait  DoBurnHit
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550020
            SetConst  *Var[2]  00550021
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550021
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoSpinSmashHit
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000003 )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF8 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000015 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021896C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218914 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 00550009 )
            UseIntBuffer  $IntTable_802191AC
            Loop  00000014
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Wait  20`
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000F
            ExecWait  DoReturnHome
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550011
            ExecWait  DoImmune
            Wait  20`
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 00550013 )
            EndIf
            Wait  10`
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Set   *Flag[00]  .False
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[0]  FFFFFFFD
                Add   *Var[1]  0000000A
                Set   *Flag[00]  .True
            EndIf
            If  *Var[3]  &  00040000
                Add   *Var[0]  00000000
                Add   *Var[1]  0000001A
                Set   *Flag[00]  .True
            EndIf
            If  *Flag[00]  ==  .False
                Add   *Var[0]  FFFFFFF8
                Add   *Var[1]  0000001A
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550019
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550005
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000F
            SetConst  *Var[2]  00550019
            ExecWait  DoScareAway
            Return
        Default
    EndSwitch
    Return
    End
}

#new:Script $Script_Tackle_Spikes
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00550017 )
        Wait  10`
        Goto  64
    EndIf
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00550011 )
    Wait  10`
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 00000020 00000006 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 00000020 00000008 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 00000020 0000000A 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 00000020 0000000C 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
    Call  SetAnimation      ( .Actor:Self 00000001 00550017 )
    Wait  15`
    Label  64
    Thread
        Loop  00000014
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000005 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[24.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  UseCamPreset  ( 00000001 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  000000B4
                Loop  0000000F
                    Add   *Var[0]  0000000C
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Sub   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  000000B4
                Loop  00000005
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Sub   *Var[0]  0000001E
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000005 .False .True .False )
            Wait  5`
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000F
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[24.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Thread
        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
        Set   *Var[0]  00000000
        Loop  0000000A
            Add   *Var[0]  00000012
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  000000B4
                Loop  0000000F
                    Add   *Var[0]  0000000C
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000A
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Sub   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  000000B4
                Loop  00000005
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndThread
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Wait  5`
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00550013 )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055000F
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8021B7C8
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
    Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021896C )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802188C8 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  8027D4C8      ( FFFFFF81 00000001 00000000 FFFFFFF8 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000015 )
    Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  SetAnimation  ( .Actor:Self 00000001 00550006 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_8021BA6C
{
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550022
            SetConst  *Var[2]  00550023
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550022
            SetConst  *Var[2]  00550023
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550023
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF8 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000015 )
            Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021896C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802188C8 )
            Call  SetAnimation      ( .Actor:Self 00000001 0055001A )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            UseIntBuffer  $IntTable_802191AC
            Loop  00000014
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Wait  20`
        CaseOR  ==  .Event:ScareAway % 39
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550006
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550006
            ExecWait  DoRecover
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001A
            ExecWait  DoBlowAway
    EndSwitch
    Return
    End
}

#new:Script $Script_FlipOver
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000009 *Var[0] )
    Sub   *Var[0]  00000001
    If  *Var[0]  >  00000000
        Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
        Call  SetAnimation  ( .Actor:Self 00000001 0055001C )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00550006 )
        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
    Else
        Call  UseCamPreset      ( 0000000F )
        Call  SetBattleCamZoom  ( 0000015E )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
        Call  SetAnimation      ( .Actor:Self 00000001 0055001C )
        Wait  20`
        Call  SetAnimation      ( .Actor:Self 00000001 00550006 )
        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
        Call  SetAnimation      ( .Actor:Self 00000001 0055000A )
        Wait  20`
        Call  SetActorYaw       ( .Actor:Self 00000000 )
        Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80218960 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218830 )
        Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021C234
{
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550024
            SetConst  *Var[2]  00550025
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550024
            SetConst  *Var[2]  00550025
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550025
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000003 )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF8 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000015 )
            Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021896C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218914 )
            Call  SetAnimation      ( .Actor:Self 00000001 0055001B )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            UseIntBuffer  $IntTable_802191AC
            Loop  00000014
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Wait  20`
        CaseOR  ==  .Event:ScareAway % 39
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550007
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550007
            ExecWait  DoRecover
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00550007
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0055001B
            ExecWait  DoBlowAway
            Return
    EndSwitch
    Return
    End
}

#new:Script $Script_FlipOver_Spikes
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000009 *Var[0] )
    Sub   *Var[0]  00000001
    If  *Var[0]  >  00000000
        Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
        Call  SetAnimation  ( .Actor:Self 00000001 0055001D )
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00550007 )
        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
    Else
        Call  UseCamPreset      ( 0000000F )
        Call  SetBattleCamZoom  ( 0000015E )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
        Call  SetAnimation      ( .Actor:Self 00000001 0055001D )
        Wait  20`
        Call  SetAnimation      ( .Actor:Self 00000001 00550007 )
        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
        Call  SetAnimation      ( .Actor:Self 00000001 0055000B )
        Wait  20`
        Call  SetActorYaw       ( .Actor:Self 00000000 )
        Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80218960 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021887C )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
        Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021CA20
{
    .Status:Normal    00530002
    .Status:Stone     00530000
    .Status:Sleep     0053000E
    .Status:Poison    00530002
    .Status:Stop      00530000
    .Status:Static    00530002
    .Status:Paralyze  00530000
    .Status:Dizzy     0053000D
    .Status:Fear      0053000D
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA6C
{
    .Status:Normal    00530001
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA78
{
    .Status:Normal    0053000F
    .Status:End
}

#new:DefenseTable $DefenseTable_8021CA84
{
    .Element:Normal 00000002
    .Element:Fire   FFFFFFF6
    .Element:Blast  FFFFFFF6
    .Element:End
}

#new:DefenseTable $DefenseTable_8021CAA0
{
    .Element:Normal 00000063
    .Element:Fire   FFFFFFF6
    .Element:Blast  FFFFFFF6
    .Element:End
}

#new:StatusTable $StatusTable_8021CABC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   50`
    .Status:Shrink     60`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_8021CB68
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021CC14
{
    00800000 01000000 F81E00FF $IdleAnimations_8021CA20 $DefenseTable_8021CA84 00000000 00000000 FFF60000 00000000
    00120001 02000000 000000FF $IdleAnimations_8021CA78 $DefenseTable_8021CA84 00000000 00000000 00000000 00000000
}

#new:Actor $DryBones
{
    % stats
    [Index]        47b
    [Level]        30`b
    [MaxHP]         8`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021CABC
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_8021CC14
    [Script]      $Script_Init_8021CC84
    % move effectiveness
    [Escape]       50`b
    [Item]         10`b
    [AirLift]      75`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  95`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  15`b % dx dy
    [StatusIcon]    3`b  27`b % dx dy
}

#new:Script $Script_Init_8021CC84
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DB48 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021CF2C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D404 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021CCFC )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_NextTurn_8021CCFC
{
    Call  GetOriginalActorType  ( .Actor:Self *Var[A] )
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    If  *Var[2]  !=  *Var[A]
        Call  GetActorHP    ( *Var[0] *Var[3] )
        If  *Var[3]  !=  00000000
            Return
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorVar   ( *Var[0] 00000008 *Var[3] )
    If  *Var[3]  !=  00000001
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  SetActorFlagBits  ( *Var[0] 00600000 .True )
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Return
    End
}

#new:Script $Script_Idle_8021CF2C
{
    Label  0
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    Call  GetStatusFlags    ( .Actor:Self *Var[1] )
    Switch  *Var[0]
        Case  ==  00000000
            Switch  *Var[1]
                Case  &  00001000
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFA 00000018 )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000001 FFFFFFFB )
                Default
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFF8 0000001E )
                    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
            EndSwitch
        Case  ==  00000001
            Switch  *Var[1]
                Case  &  00001000
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFF 0000000A )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Default
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFF 0000000A )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            EndSwitch
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021D0E8
{
    Call  PlaySoundAtActor  ( .Actor:Self 000002D2 )
    Call  SetAnimation      ( .Actor:Self 00000001 00530008 )
    Wait  20`
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA6C )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021CAA0 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021CB68 )
    Call  ClearStatusEffects    ( .Actor:Self )
    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFF 0000000A )
    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
    Call  RandInt   ( 00000000 *Var[0] )
    Add   *Var[0]  00000002
    Call  SetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Call  GetOriginalActorType  ( .Actor:Self *Var[A] )
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    If  *Var[2]  !=  *Var[A]
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorVar   ( *Var[0] 00000008 *Var[3] )
    If  *Var[3]  !=  00000001
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  SetActorFlagBits  ( *Var[0] 00600000 .True )
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_8021D404
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00530007
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00530007
            ExecWait  DoNormalHit
        Case  ==  .Event:BurnHit % E
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .True )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0053000B
            SetConst  *Var[2]  0053000C
            ExecWait  DoBurnHit
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .False )
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0053000B
            SetConst  *Var[2]  0053000C
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0053000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00530007
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00530007
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_8021D0E8
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530002
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530001
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00530007
            ExecWait  DoNormalHit
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                Wait  10`
                ExecWait  $Script_8021D0E8
            EndIf
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530002
                ExecWait  DoRecover
            EndIf
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00530004
            SetConst  *Var[2]  00530007
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530004
                ExecWait  DoAirLift
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530009
                ExecWait  DoAirLift
            EndIf
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000
                    If  *Var[0]  &  00080000
                        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF FFFFFFFE 00000000 )
                    Else
                        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFB 00000000 )
                    EndIf
                EndIf
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530007
                ExecWait  DoBlowAway
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530009
                ExecWait  DoBlowAway
            EndIf
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530002
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00530001
                ExecWait  DoImmune
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021DAC4
{
    Set   *Var[0]  00000000
    Label  0
    Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
    Add   *Var[0]  0000003C
    Mod   *Var[0]  00000168
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_TakeTurn_8021DB48
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00530006 )
        Goto  64
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        Sub   *Var[0]  00000001
        If  *Var[0]  ==  00000000
            Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
            Call  SetAnimation      ( .Actor:Self 00000001 00530009 )
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self 000002D3 )
            Call  SetAnimation      ( .Actor:Self 00000001 0053000A )
            Wait  20`
            Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA20 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021CA84 )
            Call  SetStatusTable    ( .Actor:Self $StatusTable_8021CABC )
            Call  SetPartFlagBits   ( .Actor:Self 00000001 00002000 .False )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFF8 0000001E )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
            Call  GetEnemyMaxHP     ( .Actor:Self *Var[0] )
            Call  SetEnemyHP        ( .Actor:Self *Var[0] )
        Else
            Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
            Call  SetAnimation      ( .Actor:Self 00000001 00530009 )
            Wait  10`
            Call  SetActorVar       ( .Actor:Self 00000000 *Var[0] )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetAnimation  ( .Actor:Self 00000001 00530005 )
    Wait  15`
    Call  SetAnimation  ( .Actor:Self 00000001 00530006 )
    Thread
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 00530002 )
    EndThread
    Label  64
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[F]  *Var[0]
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
            Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002D1 )
            Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
            Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
            Exec  $Script_8021DAC4 *Var[A]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064
            Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[12.0] )
            Call  RunPartTo ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Kill  *Var[A]
            If  *Var[F]  ==  00000005
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002D1 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Exec  $Script_8021DAC4 *Var[A]
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[12.0] )
    Call  RunPartTo ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetPartOffset     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000001E .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Kill  *Var[A]
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021E490
{
    .Status:Normal    005A0002
    .Status:Stone     005A0000
    .Status:Sleep     005A0011
    .Status:Poison    005A0002
    .Status:Stop      005A0000
    .Status:Static    005A0002
    .Status:Paralyze  005A0000
    .Status:Dizzy     005A0012
    .Status:Fear      005A0012
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021E4DC
{
    .Status:Normal    005A000D
    .Status:End
}

#new:DefenseTable $DefenseTable_8021E4E8
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_8021E4F4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     60`
    .Status:Frozen      0`
    .Status:Dizzy      70`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   70`
    .Status:Shrink     70`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_8021E5A0
{
    00800000 01000000 FD2300FF $IdleAnimations_8021E490 $DefenseTable_8021E4E8 00000000 00000000 FDF60000 00000000
    00120001 02000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000
    00120001 03000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000
    00120001 04000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000
    00120001 05000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000
    00120001 06000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000
}

#new:Actor $HammerBros
{
    % stats
    [Index]        4Bb
    [Level]        27`b
    [MaxHP]        12`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021E4F4
    % ai
    [PartsCount]    6`s
    [PartsTable]  $PartsTable_8021E5A0
    [Script]      $Script_Init_8021E6A0
    % move effectiveness
    [Escape]       30`b
    [Item]         40`b
    [AirLift]      75`b
    [Hurricane]    60`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_8021E6A0
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022028C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021E704 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E860 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021E704
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  &  00001000
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Default
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFD 00000023 )
                    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
                Case  ==  00000001
                    Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                    Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            EndSwitch
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_8021E860
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000E
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000F
            SetConst  *Var[2]  005A0010
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000F
            SetConst  *Var[2]  005A0010
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A0010
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000E
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000E
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000E
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A0015
            ExecWait  DoImmune
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                Call  SetAnimation  ( .Actor:Self 00000001 005A0017 )
                Wait  10`
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000E
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A0002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A0007
            SetConst  *Var[2]  005A000E
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A0007
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFE 00000001 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFB 00000003 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A000E
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  005A0002
            ExecWait  DoImmune
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021ED74
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ChildThread
            Set   *Var[0]  00000000
            Label  0
            Add   *Var[0]  00000014
            Mod   *Var[0]  00000168
            Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
            Wait  1`
            Goto  0
        EndChildThread
        Call  SetPartPos        ( .Actor:Self 00000002 00000000 00000032 00000000 )
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
        Call  SetAnimation      ( .Actor:Self 00000001 005A000C )
        Goto  64
    EndIf
    ChildThread
        Set   *Var[0]  00000000
        Label  0
        Add   *Var[0]  00000014
        Mod   *Var[0]  00000168
        Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
        Wait  1`
        Goto  0
    EndChildThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000017
    Add   *Var[1]  00000017
    Sub   *Var[2]  00000002
    Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
    Wait  8`
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Label  64
    Thread
        Wait  15`
        Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
    EndThread
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
            Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002E9 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  0000000A
            Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Sub   *Var[0]  00000028
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Sub   *Var[0]  0000001E
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
            Sub   *Var[0]  00000014
            Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  15`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002E9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 80080332 00000005 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetPartOffset ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Set   *Var[1]  0000000A
            Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
            Sub   *Var[0]  0000001E
            Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
            Sub   *Var[0]  00000014
            Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  20`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021F5EC
{
    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
    Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
    Wait  4`
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .False )
    Call  SetPartSounds ( .Actor:Self *Var[0] .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtPart   ( .Actor:Self *Var[0] 000002E9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Set   *Var[2]  0000000A
    Call  RandInt       ( 0000003C *Var[4] )
    Set   *Var[5]  0000001E
    Sub   *Var[5]  *Var[4]
    Add   *Var[1]  *Var[5]
    Call  SetPartJumpGravity    ( .Actor:Self *Var[0] *Fixed[1.3] )
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
    Sub   *Var[1]  00000032
    Set   *Var[2]  0000000A
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
    Sub   *Var[1]  0000001E
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
    Sub   *Var[1]  00000014
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Return
    End
}

#new:Script $Script_8021F838
{
    Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
    Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
    Wait  4`
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .False )
    Call  SetPartSounds ( .Actor:Self *Var[0] .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtPart   ( .Actor:Self *Var[0] 000002E9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Call  SetPartJumpGravity    ( .Actor:Self *Var[0] *Fixed[1.3] )
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
    Sub   *Var[1]  00000032
    Set   *Var[2]  0000000A
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
    Sub   *Var[1]  0000001E
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
    Sub   *Var[1]  00000014
    Call  JumpPartTo    ( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
    Call  SetPartFlagBits   ( .Actor:Self *Var[0] 00000001 .True )
    Return
    End
}

#new:Script $Script_8021FA30
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Thread
        Set   *Var[0]  00000000
        Loop  00000064
            Add   *Var[0]  00000014
            Mod   *Var[0]  00000168
            Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000005 00000000 00000000 *Var[0] )
            Call  SetPartRotation   ( .Actor:Self 00000006 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000017
    Add   *Var[1]  00000017
    Sub   *Var[2]  00000002
    Call  SetPartPos    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Set   *Var[0]  00000002
            Exec  $Script_8021F5EC
            Wait  5`
            Set   *Var[0]  00000003
            Exec  $Script_8021F5EC
            Wait  5`
            Set   *Var[0]  00000004
            Exec  $Script_8021F5EC
            Wait  5`
            Set   *Var[0]  00000005
            Exec  $Script_8021F5EC
            Wait  5`
            Set   *Var[0]  00000006
            Exec  $Script_8021F5EC
            Wait  5`
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
            If  *Var[A]  ==  00000005
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Set   *Var[0]  00000002
        Exec  $Script_8021F838
        Wait  5`
        Set   *Var[0]  00000003
        Exec  $Script_8021F838
        Wait  5`
        Set   *Var[0]  00000004
        Exec  $Script_8021F838
        Wait  5`
        Set   *Var[0]  00000005
        Exec  $Script_8021F838
        Wait  5`
        Set   *Var[0]  00000006
        Exec  $Script_8021F838
    EndThread
    Wait  21`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000010 )
    Wait  5`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Wait  5`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Wait  5`
    Call  SetAnimation      ( .Actor:Self 00000001 005A0002 )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Wait  5`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 80080332 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  20`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022028C
{
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
    MulF  *Var[0]  *Fixed[100.0]
    DivF  *Var[0]  *Var[1]
    If  *Var[0]  >  00000022
        ExecWait  $Script_8021ED74
    Else
        ExecWait  $Script_8021FA30
    EndIf
    Return
    End
}

PADDING: 8022031C to 80220320 (0068CD4C to 0068CD50)
00000000

#new:IdleAnimations $IdleAnimations_80220320
{
    .Status:Normal    00590001
    .Status:Stone     00590000
    .Status:Sleep     00590011
    .Status:Poison    00590001
    .Status:Stop      00590000
    .Status:Static    00590001
    .Status:Paralyze  00590000
    .Status:Dizzy     00590013
    .Status:Fear      00590013
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022036C
{
    .Status:Normal    00590003
    .Status:Stone     00590000
    .Status:Sleep     00590011
    .Status:Poison    00590003
    .Status:Stop      00590000
    .Status:Static    00590003
    .Status:Paralyze  00590000
    .Status:Dizzy     00590013
    .Status:Fear      00590013
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802203B8
{
    .Status:Normal    0059000F
    .Status:Stone     00590010
    .Status:Sleep     00590012
    .Status:Poison    0059000F
    .Status:Stop      00590010
    .Status:Static    0059000F
    .Status:Paralyze  00590010
    .Status:Dizzy     00590014
    .Status:Fear      00590014
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80220404
{
    .Status:Normal    00590006
    .Status:Stone     00590006
    .Status:Sleep     00590006
    .Status:Poison    00590006
    .Status:Stop      00590006
    .Status:Static    00590006
    .Status:Paralyze  00590006
    .Status:Dizzy     00590006
    .Status:Fear      00590006
    .Status:End
}

#new:DefenseTable $DefenseTable_80220450
{
    .Element:Normal 00000003
    .Element:Shock  00000003
    .Element:End
}

#new:DefenseTable $DefenseTable_80220464
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80220470
{
    .Element:Normal 00000003
    .Element:Fire   00000003
    .Element:End
}

#new:StatusTable $StatusTable_80220484
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     60`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   75`
    .Status:Shrink     70`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_80220530
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802205CC
{
    00800000 01000000 002000FF $IdleAnimations_80220320 $DefenseTable_80220450 00001010 00000000 00F40000 00000000
}

#new:Actor $Koopatrol
{
    % stats
    [Index]        4Cb
    [Level]        25`b
    [MaxHP]         8`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80220484
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802205CC
    [Script]      $Script_Init_80220618
    % move effectiveness
    [Escape]       50`b
    [Item]         60`b
    [AirLift]      75`b
    [Hurricane]    65`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  32`b % dx dy
    [StatusIcon]    5`b  32`b % dx dy
}

#new:Script $Script_Init_80220618
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224684 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022098C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220E74 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80220768 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetBattleVar  ( 00000004 00000000 )
        Case  ==  00000001
            Call  SetBattleVar  ( 00000005 00000000 )
        Case  ==  00000002
            Call  SetBattleVar  ( 00000006 00000000 )
        Case  ==  00000003
            Call  SetBattleVar  ( 00000007 00000000 )
    EndSwitch
    Return
    End
}

#new:Script $Script_NextTurn_80220768
{
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
        Case  ==  0000000C
        Case  ==  0000000B
            Call  SetBattleVar  ( 00000001 00000000 )
    EndSwitch
    Return
    End
}

#new:Script $Script_802207D4
{
    Switch  *Var[0]
        Case  ==  00000000
            If  *Var[1]  &  00041000
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Call  $Function_802180D0    ( FFFFFFF6 00000014 0000000A 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  $Function_802180D0    ( FFFFFFF1 00000020 00000005 00000020 )
            EndIf
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  $Function_802180D0    ( FFFFFFF6 00000014 0000000A 00000014 )
        Case  ==  00000002
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000014 )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
            Call  $Function_802180D0    ( FFFFFFF1 00000016 00000005 00000016 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_8022098C
{
    Label  0
    Call  RandInt   ( 00000050 *Var[A] )
    Add   *Var[A]  00000050
    Loop  *Var[A]
        Label  1
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_802207D4
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  1
        EndIf
        If  *Var[1]  &  0235D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022036C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220320 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802203B8 )
    EndSwitch
    Loop  00000014
        Label  2
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_802207D4
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  2
        EndIf
        If  *Var[1]  &  0235D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022036C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220320 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802203B8 )
    EndSwitch
    Loop  00000050
        Label  3
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_802207D4
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  3
        EndIf
        If  *Var[1]  &  0235D000
            Wait  1`
            Goto  3
        EndIf
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_80220E1C
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80220E74
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000000 % 0
                CaseOR  ==  00000001 % 1
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoNormalHit
                EndCaseGroup
                Case  ==  00000002 % 2
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590006
                    ExecWait  DoNormalHit
            EndSwitch
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0059000C
            SetConst  *Var[2]  0059000D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0059000C
            SetConst  *Var[2]  0059000D
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0059000D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000000
                CaseOR  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoSpinSmashHit
                EndCaseGroup
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590006
                    ExecWait  DoSpinSmashHit
            EndSwitch
        Case  ==  .Event:SpinSmashDeath % 21
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000000
                CaseOR  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoSpinSmashHit
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoDeath
                EndCaseGroup
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590006
                    ExecWait  DoSpinSmashHit
                    Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
                    Wait  5`
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoDeath
            EndSwitch
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220464 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802203B8 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0059000B )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_80220E1C
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0059000F )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0059000B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0059000B
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00590004
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0059000B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0059000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000002
                Call  SetStatusTable    ( .Actor:Self $StatusTable_80220484 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220450 )
                Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
                Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220320 )
                Call  GetStatusFlags    ( .Actor:Self *Var[A] )
                If  *Var[A]  !&  18000000
                    Call  EnableActorGlow   ( .Actor:Self .False )
                EndIf
                Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00590008
                ExecWait  DoImmune
            EndIf
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590007
                    ExecWait  DoImmune
                    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                    If  *Var[0]  !&  0035D000
                        Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
                        Wait  10`
                    EndIf
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
                    ExecWait  DoImmune
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590006
                    ExecWait  DoImmune
            EndSwitch
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Set   *Flag[00]  .False
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[1]  00000010
                Set   *Flag[00]  .True
            EndIf
            If  *Var[3]  &  00040000
                Add   *Var[0]  FFFFFFF2
                Add   *Var[1]  00000014
                Set   *Flag[00]  .True
            EndIf
            If  *Var[3]  &  00001000
                Add   *Var[0]  FFFFFFF2
                Add   *Var[1]  00000014
                Set   *Flag[00]  .True
            EndIf
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
            If  *Var[A]  ==  00000002
                Add   *Var[1]  00000017
                Set   *Flag[00]  .True
            EndIf
            If  *Flag[00]  ==  .False
                Add   *Var[1]  0000002A
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:Death % 20
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000000
                CaseOR  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoNormalHit
                    Wait  10`
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoDeath
                    Return
                EndCaseGroup
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590006
                    ExecWait  DoNormalHit
                    Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
                    Wait  5`
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000B
                    ExecWait  DoDeath
                    Return
            EndSwitch
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590001
                    ExecWait  DoRecover
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
                    ExecWait  DoImmune
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590006
                    ExecWait  DoRecover
            EndSwitch
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000000
                CaseOR  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590004
                    SetConst  *Var[2]  0059000B
                    ExecWait  DoScareAway
                    Return
                EndCaseGroup
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
                    ExecWait  DoImmune
            EndSwitch
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590016
                    ExecWait  DoAirLift
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
                    ExecWait  DoAirLift
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
                    ExecWait  DoAirLift
            EndSwitch
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590016
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
            EndSwitch
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00590001
                Case  ==  00000001
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
                Case  ==  00000002
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0059000F
            EndSwitch
            ExecWait  DoImmune
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_ShellToss
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00590006 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Sub   *Var[0]  00000001
            If  *Var[0]  >  00000000
                Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  15`
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Else
                Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  10`
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
                Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
                Call  SetAnimation      ( .Actor:Self 00000001 0059000F )
                Set   *Var[0]  00000000
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Thread
                    Loop  00000005
                        Add   *Var[0]  0000000F
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                        Wait  1`
                    EndLoop
                EndThread
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetAnimation      ( .Actor:Self 00000001 00590001 )
                Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220320 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220450 )
                Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
                Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndIf
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 00590007 )
        Wait  10`
        Thread
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000004
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndThread
        Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
        Call  SetAnimation      ( .Actor:Self 00000001 00590006 )
        Wait  10`
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000004 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  UseCamPreset      ( 00000005 )
                Call  SetBattleCamZoom  ( 0000012C )
                Call  SetBattleCamOffsetZ   ( 00000014 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
            EndIf
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Wait  4`
            Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
            Wait  6`
            Sub   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00590001 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetPartYaw    ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00590004
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00590001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SuperShellToss
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000A
        Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  SetAnimation      ( .Actor:Self 00000001 00590015 )
        Wait  30`
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000014 )
        Thread
            Wait  8`
            Call  SetAnimation  ( .Actor:Self 00000001 00590007 )
        EndThread
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal        ( .Actor:Self 00000010 .False .True .False )
        Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
        Call  $Function_8021819C    ( 00000080 0000000A )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.5] )
        EndThread
        Call  SetAnimation      ( .Actor:Self 00000001 00590006 )
        Call  SetStatusTable    ( .Actor:Self $StatusTable_80220530 )
        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220470 )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
        Call  SetActorVar       ( .Actor:Self 00000000 00000002 )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220404 )
        Call  EnableActorGlow   ( .Actor:Self .True )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
        Wait  10`
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Return
    EndIf
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Loop  00000014
        Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
        Wait  1`
        Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
        Wait  1`
    EndLoop
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000004 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Thread
                Loop  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFF38 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Wait  15`
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            If  *Var[A]  !&  18000000 % 18000000
                Call  EnableActorGlow   ( .Actor:Self .False )
            EndIf
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorPos       ( .Actor:Self 0000012C 00000000 00000000 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  SetAnimation      ( .Actor:Self 00000001 00590008 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetStatusTable    ( .Actor:Self $StatusTable_80220484 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220450 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220320 )
            Wait  10`
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Loop  0000001E
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[A] ~Flags:DamageType:0 0000FFFF 00000000 0000000A 00000020 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
                Set   *Var[0]  00000000
                Loop  0000003C
                    Add   *Var[0]  00000012
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000001E .False .True .False )
            Sub   *Var[0]  00000028
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Wait  20`
            Call  YieldTurn ( )
            Call  GetStatusFlags        ( .Actor:Self *Var[A] )
            If  *Var[A]  !&  18000000 % 18000000
                Call  EnableActorGlow   ( .Actor:Self .False )
            EndIf
            Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorPos       ( .Actor:Self 0000012C 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00590004
            ExecWait  DoReturnHome
            Call  SetAnimation      ( .Actor:Self 00000001 00590001 )
            Call  SetStatusTable    ( .Actor:Self $StatusTable_80220484 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220450 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
            Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220320 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223ADC
{
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        CaseOR  ==  00000010
        CaseOR  ==  00000049
            Set   *Var[A]  FFFFFFFF
            Return
        EndCaseGroup
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    Set   *Flag[01]  .False
    Set   *Flag[02]  .False
    Set   *Flag[03]  .False
    Set   *Flag[04]  .False
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetIndexFromHome      ( *Var[0] *Var[1] )
    Mod   *Var[1]  00000004
    Switch  *Var[1]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[01]  ==  .False
        Set   *Var[A]  00000000
        Return
    EndIf
    If  *Flag[02]  ==  .False
        Set   *Var[A]  00000001
        Return
    EndIf
    If  *Flag[03]  ==  .False
        Set   *Var[A]  00000002
        Return
    EndIf
    If  *Flag[04]  ==  .False
        Set   *Var[A]  00000003
        Return
    EndIf
    Set   *Var[A]  FFFFFFFF
    Return
    End
}

#new:Vector3D $Vector3D_80223DEC
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80223DF8
{
    $Koopatrol $Vector3D_80223DEC 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_SummonBackup
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
    Call  SetAnimation      ( .Actor:Self 00000001 00590002 )
    Wait  20`
    Loop  00000002
        Call  SetAnimation  ( .Actor:Self 00000001 00590002 )
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
        Call  SetActorYaw   ( .Actor:Self 000000B4 )
        Call  SetAnimation  ( .Actor:Self 00000001 00590009 )
        Wait  8`
        Call  SetAnimation  ( .Actor:Self 00000001 00590002 )
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
        Call  SetActorYaw   ( .Actor:Self 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00590009 )
        Wait  8`
    EndLoop
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Thread
        Wait  8`
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect        ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
    Call  SummonEnemy   ( $SpecialFormation_80223DF8 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Add   *Var[1]  000000C8
    Call  SetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  SetGoalToIndex    ( *Var[0] *Var[A] )
    Call  PlaySoundAtActor  ( *Var[0] 000020D3 )
    Call  SetActorSounds    ( *Var[0] .ActorSound:Walk 00000000 00000000 )
    Call  SetAnimation  ( *Var[0] 00000001 00590006 )
    Call  SetActorSpeed ( *Var[0] *Fixed[6.0] )
    Call  RunToGoal     ( *Var[0] 00000000 .False )
    Call  SetAnimation  ( *Var[0] 00000001 00590008 )
    Wait  10`
    Call  SetAnimation  ( *Var[0] 00000001 00590001 )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  ForceHomePos  ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  HPBarToHome   ( *Var[0] )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetActorVar   ( *Var[0] 00000001 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( *Var[0] 00000001 00000002 )
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
    Call  SetActorVar   ( *Var[0] 00000002 *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Call  GetBattleVar  ( 00000004 *Var[0] )
            Add   *Var[0]  00000001
            Call  SetBattleVar  ( 00000004 *Var[0] )
        Case  ==  00000001
            Call  GetBattleVar  ( 00000005 *Var[0] )
            Add   *Var[0]  00000001
            Call  SetBattleVar  ( 00000005 *Var[0] )
        Case  ==  00000002
            Call  GetBattleVar  ( 00000006 *Var[0] )
            Add   *Var[0]  00000001
            Call  SetBattleVar  ( 00000006 *Var[0] )
        Case  ==  00000003
            Call  GetBattleVar  ( 00000007 *Var[0] )
            Add   *Var[0]  00000001
            Call  SetBattleVar  ( 00000007 *Var[0] )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80224434
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        Case  ==  0000004C
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  0035D000
                Call  GetActorVar   ( *Var[0] 00000000 *Var[3] )
                If  *Var[3]  ==  00000000
                    Call  GetActorVar   ( *Var[0] 00000001 *Var[3] )
                    Switch  *Var[3]
                        CaseOR  ==  00000000
                        CaseOR  ==  00000001
                            Call  GetActorVar   ( .Actor:Self 00000002 *Var[3] )
                            Switch  *Var[3]
                                Case  ==  00000000
                                    Call  GetBattleVar  ( 00000004 *Var[4] )
                                Case  ==  00000001
                                    Call  GetBattleVar  ( 00000005 *Var[4] )
                                Case  ==  00000002
                                    Call  GetBattleVar  ( 00000006 *Var[4] )
                                Case  ==  00000003
                                    Call  GetBattleVar  ( 00000007 *Var[4] )
                            EndSwitch
                            If  *Var[4]  <  00000002
                                Add   *Var[9]  00000001
                            EndIf
                        EndCaseGroup
                        Case  ==  00000002
                    EndSwitch
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80224684
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetBattleVar  ( 00000001 00000001 )
        ExecWait  $Script_ShellToss
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetBattleVar  ( 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        CaseOR  ==  00000000
                        CaseOR  ==  00000001
                            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                            Switch  *Var[0]
                                Case  ==  00000000
                                    Call  GetBattleVar  ( 00000004 *Var[1] )
                                Case  ==  00000001
                                    Call  GetBattleVar  ( 00000005 *Var[1] )
                                Case  ==  00000002
                                    Call  GetBattleVar  ( 00000006 *Var[1] )
                                Case  ==  00000003
                                    Call  GetBattleVar  ( 00000007 *Var[1] )
                            EndSwitch
                            If  *Var[1]  >=  00000002
                                Call  RandInt   ( 000003E8 *Var[0] )
                                If  *Var[0]  <  0000012C
                                    Call  SetBattleVar  ( 00000001 00000002 )
                                    ExecWait  $Script_SuperShellToss
                                Else
                                    Call  SetBattleVar  ( 00000001 00000001 )
                                    ExecWait  $Script_ShellToss
                                EndIf
                                Return
                            EndIf
                        EndCaseGroup
                        Case  ==  00000002
                            Call  RandInt   ( 000003E8 *Var[0] )
                            If  *Var[0]  <  0000012C
                                Call  SetBattleVar  ( 00000001 00000002 )
                                ExecWait  $Script_SuperShellToss
                            Else
                                Call  SetBattleVar  ( 00000001 00000001 )
                                ExecWait  $Script_ShellToss
                            EndIf
                            Return
                    EndSwitch
                    ExecWait  $Script_80223ADC
                    If  *Var[A]  ==  FFFFFFFF
                        Call  RandInt   ( 000003E8 *Var[0] )
                        If  *Var[0]  <  0000012C
                            Call  SetBattleVar  ( 00000001 00000002 )
                            ExecWait  $Script_SuperShellToss
                        Else
                            Call  SetBattleVar  ( 00000001 00000001 )
                            ExecWait  $Script_ShellToss
                        EndIf
                        Return
                    EndIf
                    ExecWait  $Script_80224434
                    Switch  *Var[9]
                        Case  ==  00000001
                            Call  RandInt   ( 000003E8 *Var[0] )
                            If  *Var[0]  <  00000190
                                Call  SetBattleVar  ( 00000001 00000001 )
                                ExecWait  $Script_SummonBackup
                                Return
                            EndIf
                        Case  ==  00000002
                            Call  RandInt   ( 000003E8 *Var[0] )
                            If  *Var[0]  <  000000C8
                                Call  SetBattleVar  ( 00000001 00000001 )
                                ExecWait  $Script_SummonBackup
                                Return
                            EndIf
                        Case  ==  00000003
                            Call  RandInt   ( 000003E8 *Var[0] )
                            If  *Var[0]  <  00000064
                                Call  SetBattleVar  ( 00000001 00000001 )
                                ExecWait  $Script_SummonBackup
                                Return
                            EndIf
                    EndSwitch
                    Call  RandInt   ( 000003E8 *Var[0] )
                    If  *Var[0]  <  0000012C
                        Call  SetBattleVar  ( 00000001 00000002 )
                        ExecWait  $Script_SuperShellToss
                    Else
                        Call  SetBattleVar  ( 00000001 00000001 )
                        ExecWait  $Script_ShellToss
                    EndIf
                Case  ==  00000001
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        CaseOR  ==  00000000
                        CaseOR  ==  00000001
                            Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                            Switch  *Var[0]
                                Case  ==  00000000
                                    Call  GetBattleVar  ( 00000004 *Var[1] )
                                Case  ==  00000001
                                    Call  GetBattleVar  ( 00000005 *Var[1] )
                                Case  ==  00000002
                                    Call  GetBattleVar  ( 00000006 *Var[1] )
                                Case  ==  00000003
                                    Call  GetBattleVar  ( 00000007 *Var[1] )
                            EndSwitch
                            If  *Var[1]  >=  00000002
                                Call  RandInt   ( 000003E8 *Var[0] )
                                If  *Var[0]  <  0000012C
                                    Call  SetBattleVar  ( 00000001 00000002 )
                                    ExecWait  $Script_SuperShellToss
                                Else
                                    Call  SetBattleVar  ( 00000001 00000001 )
                                    ExecWait  $Script_ShellToss
                                EndIf
                                Return
                            EndIf
                        EndCaseGroup
                        Case  ==  00000002
                            ExecWait  $Script_ShellToss
                            Return
                    EndSwitch
                    ExecWait  $Script_80223ADC
                    If  *Var[A]  ==  FFFFFFFF
                        ExecWait  $Script_ShellToss
                        Return
                    EndIf
                    ExecWait  $Script_80224434
                    Switch  *Var[9]
                        Case  ==  00000001
                            Call  RandInt   ( 000003E8 *Var[0] )
                            If  *Var[0]  <  00000190
                                ExecWait  $Script_SummonBackup
                                Return
                            EndIf
                        Case  ==  00000002
                            Call  RandInt   ( 000003E8 *Var[0] )
                            If  *Var[0]  <  000000C8
                                ExecWait  $Script_SummonBackup
                                Return
                            EndIf
                        Case  ==  00000003
                            Call  RandInt   ( 000003E8 *Var[0] )
                            If  *Var[0]  <  00000064
                                ExecWait  $Script_SummonBackup
                                Return
                            EndIf
                    EndSwitch
                    ExecWait  $Script_ShellToss
                Case  ==  00000002
                    ExecWait  $Script_SuperShellToss
            EndSwitch
        Case  ==  00000001
            Call  SetBattleVar  ( 00000001 00000001 )
            ExecWait  $Script_ShellToss
        Case  ==  00000002
            ExecWait  $Script_SuperShellToss
    EndSwitch
    Return
    End
}

PADDING: 80224F14 to 80224F20 (00691944 to 00691950)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80224F20
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80224F2C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80224F38
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      40`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     60`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:StatusTable $StatusTable_80224FE4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      40`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     60`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_80225090
{
    00800000 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80224F20 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_802250B4
{
    00020001 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80224F2C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_802251BC $DefenseTable_80224F2C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80225208 $DefenseTable_80224F2C 00000000 00000000 00000000 00000000
}

#new:Actor $Magikoopa
{
    % stats
    [Index]        4Db
    [Level]        26`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80224F38
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80225090
    [Script]      $Script_Init_80225D60
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingMagikoopa
{
    % stats
    [Index]        4Eb
    [Level]        26`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80224FE4
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_802250B4
    [Script]      $Script_Init_80225F20
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      85`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80225170
{
    .Status:Normal    00560001
    .Status:Stone     00560000
    .Status:Sleep     00560008
    .Status:Poison    00560001
    .Status:Stop      00560000
    .Status:Static    00560001
    .Status:Paralyze  00560000
    .Status:Dizzy     00560007
    .Status:Fear      00560007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802251BC
{
    .Status:Normal    00570001
    .Status:Stone     00570000
    .Status:Sleep     00570008
    .Status:Poison    00570001
    .Status:Stop      00570000
    .Status:Static    00570001
    .Status:Paralyze  00570000
    .Status:Dizzy     00570007
    .Status:Fear      00570007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80225208
{
    .Status:Normal    0057000A
    .Status:End
}

#new:Script $Script_Idle_80225214
{
    Set   *Var[F]  00000000
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
    Call  ActorExists   ( *Var[0] *Var[1] )
    If  *Var[1]  ==  .True
        Call  $Function_80218358    ( *Var[F] *Var[1] *Fixed[254.0] *Fixed[100.0] 00000014 00000000 00000000 )
        Add   *Var[F]  00000001
        Call  GetActorFlags ( .Actor:Self *Var[2] )
        If  *Var[2]  &  00000200
            Call  SetPartAlpha  ( .Actor:Self 00000002 *Var[1] )
            Call  SetPartAlpha  ( *Var[0] 00000001 *Var[1] )
        Else
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[1] )
            Call  SetPartAlpha  ( *Var[0] 00000001 *Var[1] )
        EndIf
    Else
        Set   *Var[F]  00000000
        Call  GetActorFlags ( .Actor:Self *Var[2] )
        If  *Var[2]  &  00000200
            Call  SetPartAlpha  ( .Actor:Self 00000002 000000FF )
        Else
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndIf
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_802253E4
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
        EndIf
    Else
        Call  $Function_802184E8    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_802254F0
{
    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_802185E0    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560001 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226338 )
    Call  SetActorType      ( .Actor:Self 0000004D )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80224F38 )
    Call  $Function_80218514    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_NextTurn_80225D10
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    ConstAND  *Var[0] FFFFFFFE
    Call  SetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Return
    End
}

#new:Script $Script_Init_80225D60
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80225214 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B784 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226338 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225D10 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
    Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000B FFFFFFFF )
    Return
    End
}

#new:Script $Script_Init_80225F20
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80225214 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B784 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226A50 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
    Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar   ( .Actor:Self 0000000B FFFFFFFF )
    Return
    End
}

#new:Script $Script_802260CC
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000001
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
    Call  ActorExists   ( *Var[0] *Var[1] )
    If  *Var[1]  ==  .False
        Return
    EndIf
    Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
    Call  GetLastElement    ( *Var[A] )
    If  *Var[A]  &  20000000
        Label  0
        Call  GetBattleFlags    ( *Var[A] )
        If  *Var[A]  &  00000100
            Wait  1`
            Goto  0
        EndIf
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
    Call  GetActorFlags ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00000200
        Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
    Else
        Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
    EndIf
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  RemoveActor   ( *Var[0] )
    Thread
        Add   *Var[3]  00000002
        Loop  00000002
            Call  PlayEffect    ( ~FX:BigSmokePuff *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Return
    End
}

#new:Script $Script_HandleEvent_80226338
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            ConstOR  *Var[0] 00000001
            Call  SetActorVar   ( .Actor:Self 00000000 *Var[0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:UpAndAway % 3D
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoNormalHit
            ExecWait  $Script_802260CC
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560005
            SetConst  *Var[2]  00560006
            ExecWait  DoBurnHit
            ExecWait  $Script_802260CC
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560005
            SetConst  *Var[2]  00560006
            ExecWait  DoBurnHit
            ExecWait  $Script_802260CC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_802260CC
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_802260CC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560001
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560001
            ExecWait  DoImmune
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  &  00000001
                ExecWait  $Script_802260CC
                Return
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !=  00000000
                ExecWait  $Script_802260CC
            EndIf
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoNormalHit
            ExecWait  $Script_802260CC
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            ExecWait  $Script_802260CC
            Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
            ExecWait  $Script_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560002
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            ExecWait  $Script_802260CC
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560001
            ExecWait  DoImmune
        Case  ==  .Event:StarBeam % 13
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560004
            ExecWait  DoNormalHit
            ExecWait  $Script_802260CC
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_80226A50
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetPartAlpha      ( .Actor:Self 00000002 000000FF )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            ConstOR  *Var[0] 00000001
            Call  SetActorVar   ( .Actor:Self 00000000 *Var[0] )
            ExecWait  $Script_802253E4
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_802253E4
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoNormalHit
            ExecWait  $Script_802260CC
            ExecWait  $Script_802254F0
        EndCaseGroup
        Case  ==  .Event:UpAndAway % 3D
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoNormalHit
            ExecWait  $Script_802260CC
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_802253E4
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570005
            SetConst  *Var[2]  00570006
            ExecWait  DoBurnHit
            ExecWait  $Script_802260CC
            ExecWait  $Script_802254F0
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570005
            SetConst  *Var[2]  00570006
            ExecWait  DoBurnHit
            ExecWait  $Script_802260CC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570006
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_802260CC
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_802260CC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570001
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570001
            ExecWait  DoImmune
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  &  00000001
                ExecWait  $Script_802260CC
                Return
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !=  00000000
                ExecWait  $Script_802260CC
            EndIf
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoNormalHit
            ExecWait  $Script_802260CC
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            ExecWait  $Script_802260CC
            Call  SetAnimation  ( .Actor:Self 00000002 00570004 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
            ExecWait  $Script_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570002
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            ExecWait  $Script_802260CC
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570001
            ExecWait  DoImmune
        Case  ==  .Event:StarBeam % 13
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570004
            ExecWait  DoNormalHit
            ExecWait  $Script_802260CC
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HealOne
{
    Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar       ( .Actor:Self 0000000B 00000000 )
    Call  AddActorVar       ( .Actor:Self 00000004 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
    EndIf
    Wait  5`
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[B] 0000206D )
        Call  PlaySoundAtActor  ( *Var[B] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[B] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[B] 00000005 .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HealAll
{
    Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar       ( .Actor:Self 0000000B 00000001 )
    Call  AddActorVar       ( .Actor:Self 00000003 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
    EndIf
    Wait  5`
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Thread
            Wait  5`
            Call  PlaySoundAtActor  ( *Var[0] 0000206D )
            Call  PlaySoundAtActor  ( *Var[0] 00000214 )
            Wait  30`
            Call  PlaySoundAtActor  ( *Var[0] 0000025C )
        EndThread
        Thread
            Call  8026BF48  ( 00000001 )
            Call  HealActor ( *Var[0] 00000003 .True )
            Call  8026BF48  ( 00000000 )
        EndThread
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  WaitForBuffDone ( )
    Wait  1`
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000000A )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_ShapeSpell
{
    Call  SetActorVar   ( .Actor:Self 0000000B 00000002 )
    Set   *Flag[00]  .False
    Set   *Flag[01]  .False
    Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
    If  *Var[0]  ==  00000001
        Set   *Flag[00]  .True
        Call  GetActorVar   ( .Actor:Self 00000009 *Var[A] )
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        Set   *Flag[01]  .True
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    If  *Flag[00]  ==  .True
        Call  UseIdleAnimation  ( *Var[A] .False )
    EndIf
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    If  *Flag[01]  ==  .False
        If  *Flag[00]  ==  .True
            Call  SetAnimation  ( *Var[A] 00000001 00560002 )
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000011
            Add   *Var[1]  00000021
            Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
        Call  SetAnimation      ( .Actor:Self 00000001 00560002 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000D
        Else
            Sub   *Var[0]  00000011
            Add   *Var[1]  00000021
        EndIf
        Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Else
        If  *Flag[00]  ==  .True
            Call  SetAnimation  ( *Var[A] 00000001 00570002 )
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
        Call  SetAnimation      ( .Actor:Self 00000002 00570002 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
        EndIf
        Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[9] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[9]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            If  *Flag[00]  ==  .True
                Call  PlaySoundAtActor  ( *Var[A] .Sound:SpellCast2 )
            EndIf
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            If  *Flag[01]  ==  .False
                If  *Flag[00]  ==  .True
                    Call  SetAnimation  ( *Var[A] 00000001 00560003 )
                EndIf
                Call  SetAnimation  ( .Actor:Self 00000001 00560003 )
            Else
                If  *Flag[00]  ==  .True
                    Call  SetAnimation  ( *Var[A] 00000001 00570003 )
                EndIf
                Call  SetAnimation  ( .Actor:Self 00000002 00570003 )
            EndIf
            Wait  5`
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[4] *Var[5] *Var[6] )
            Sub   *Var[4]  00000032
            Set   *Var[5]  00000000
            If  *Flag[01]  ==  .False
                If  *Flag[00]  ==  .True
                    Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000014
                    Add   *Var[1]  00000014
                    Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
                EndIf
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  &  00080000
                    Sub   *Var[0]  00000008
                    Add   *Var[1]  00000008
                Else
                    Sub   *Var[0]  00000014
                    Add   *Var[1]  00000014
                EndIf
                Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
            Else
                If  *Flag[00]  ==  .True
                    Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000014
                    Add   *Var[1]  00000014
                    Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
                EndIf
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetStatusFlags    ( .Actor:Self *Var[3] )
                If  *Var[3]  &  00080000
                    Sub   *Var[0]  00000008
                    Add   *Var[1]  00000008
                Else
                    Sub   *Var[0]  00000014
                    Add   *Var[1]  00000014
                EndIf
                Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
            EndIf
            Wait  50`
            If  *Var[9]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Call  YieldTurn ( )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( *Var[A] .True )
            EndIf
            Return
        EndCaseGroup
    EndSwitch
    If  *Flag[00]  ==  .True
        Call  PlaySoundAtActor  ( *Var[A] .Sound:SpellCast2 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    If  *Flag[01]  ==  .False
        If  *Flag[00]  ==  .True
            Call  SetAnimation  ( *Var[A] 00000001 00560003 )
        EndIf
        Call  SetAnimation  ( .Actor:Self 00000001 00560003 )
    Else
        If  *Flag[00]  ==  .True
            Call  SetAnimation  ( *Var[A] 00000001 00570003 )
        EndIf
        Call  SetAnimation  ( .Actor:Self 00000002 00570003 )
    EndIf
    Wait  5`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[4] *Var[5] *Var[6] )
    If  *Flag[01]  ==  .False
        If  *Flag[00]  ==  .True
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Add   *Var[1]  00000014
            Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
        EndIf
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  &  00080000
            Sub   *Var[0]  00000008
            Add   *Var[1]  00000008
        Else
            Sub   *Var[0]  00000014
            Add   *Var[1]  00000014
        EndIf
        Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
    Else
        If  *Flag[00]  ==  .True
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Add   *Var[1]  00000014
            Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
        EndIf
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[3] )
        If  *Var[3]  &  00080000
            Sub   *Var[0]  00000008
            Add   *Var[1]  00000008
        Else
            Sub   *Var[0]  00000014
            Add   *Var[1]  00000014
        EndIf
        Call  $Function_80218200    ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
    EndIf
    Wait  18`
    If  *Flag[00]  ==  .True
        Wait  2`
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000006 00000020 )
    Else
        Wait  2`
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000006 00000020 )
    EndIf
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  20`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    If  *Flag[00]  ==  .True
        Call  UseIdleAnimation  ( *Var[A] .True )
    EndIf
    Return
    End
}

#new:Script $Script_80228DA4
{
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetIndexFromHome      ( *Var[0] *Var[1] )
    Mod   *Var[1]  00000004
    Switch  *Var[1]
        Case  ==  00000000
            Set   *Flag[0B]  .True
        Case  ==  00000001
            Set   *Flag[0C]  .True
        Case  ==  00000002
            Set   *Flag[0D]  .True
        Case  ==  00000003
            Set   *Flag[0E]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Set   *Var[0]  FFFFFFFF
    Call  GetIndexFromHome  ( .Actor:Self *Var[1] )
    Mod   *Var[1]  00000004
    Switch  *Var[1]
        Case  ==  00000000
            If  *Flag[0C]  ==  .False
                Set   *Var[0]  00000001
            EndIf
        Case  ==  00000001
            If  *Flag[0B]  ==  .False
                Set   *Var[0]  00000000
            EndIf
            If  *Flag[0D]  ==  .False
                Set   *Var[0]  00000002
            EndIf
        Case  ==  00000002
            If  *Flag[0C]  ==  .False
                Set   *Var[0]  00000001
            EndIf
            If  *Flag[0E]  ==  .False
                Set   *Var[0]  00000003
            EndIf
        Case  ==  00000003
            If  *Flag[0D]  ==  .False
                Set   *Var[0]  00000002
            EndIf
    EndSwitch
    If  *Var[0]  !=  FFFFFFFF
        Call  GetActorFlags ( .Actor:Self *Var[1] )
        If  *Var[1]  &  00000200
            Add   *Var[0]  00000004
        EndIf
    EndIf
    Return
    End
}

#new:Script $Script_HandleEvent_8022908C
{
    Return
    End
}

#new:Script $Script_Init_8022909C
{
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022908C )
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    Return
    End
}

#new:Script $Script_Init_802290D8
{
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022908C )
    Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
    Return
    End
}

#new:DefenseTable $DefenseTable_80229114
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80229120
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022912C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_802291D8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80229284
{
    00800000 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80229114 00000020 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_802292A8
{
    00800000 01000000 F62300FF $IdleAnimations_802251BC $DefenseTable_80229120 00000020 00000000 00F80000 00000000
}

#new:Actor $Magiclone
{
    % stats
    [Index]        4Fb
    [Level]        26`b
    [MaxHP]        11`b
    [Coins]         0`b
    [Flags]       00200000
    [StatusTable] $StatusTable_8022912C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80229284
    [Script]      $Script_Init_8022909C
    % move effectiveness
    [Escape]       40`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingMagiclone
{
    % stats
    [Index]        50b
    [Level]        26`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00200200
    [StatusTable] $StatusTable_802291D8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802292A8
    [Script]      $Script_Init_802290D8
    % move effectiveness
    [Escape]       40`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

#new:Vector3D $Vector3D_8022931C
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80229328
{
    $Magiclone $Vector3D_8022931C 00000000 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_80229344
{
    $FlyingMagiclone $Vector3D_8022931C 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_MakeCopy
{
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RunAway
        Return
    EndIf
    Call  SetActorVar   ( .Actor:Self 0000000A 00000001 )
    Call  SetActorVar   ( .Actor:Self 0000000B 00000003 )
    Set   *Flag[00]  .False
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        Set   *Flag[00]  .True
    EndIf
    If  *Flag[00]  ==  .False
        Call  SummonEnemy   ( $SpecialFormation_80229328 00000000 )
    Else
        Call  SummonEnemy   ( $SpecialFormation_80229344 00000000 )
    EndIf
    Call  SetActorVar       ( .Actor:Self 00000009 *Var[0] )
    Set   *Var[A]  *Var[0]
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  EnableIdleScript  ( *Var[A] 00000000 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  UseIdleAnimation  ( *Var[A] .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000019 )
    Wait  25`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast3 )
    If  *Flag[00]  ==  .False
        Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
        Call  SetAnimation  ( *Var[A] 00000001 00560002 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000017
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
        Call  SetAnimation  ( *Var[A] 00000001 00570002 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000017
    EndIf
    Call  PlayEffect        ( ~FX:EnergyIn:Stars *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  10`
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  EnableIdleScript  ( *Var[9] 00000001 )
    Wait  30`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  FFFFFFFD
    Call  SetActorPos       ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Set   *Var[9]  *Var[A]
    Wait  15`
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast4 )
    Call  PlaySoundAtActor  ( *Var[9] .Sound:SpellCast4 )
    Call  SetPartFlagBits   ( *Var[9] 00000001 00800000 .False )
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000001F4
        Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
        ExecWait  $Script_80228DA4
        Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
        Call  FlyToGoal ( .Actor:Self 00000000 00000000 .Easing:Linear )
    Else
        Call  SetActorSpeed     ( *Var[9] *Fixed[2.0] )
        ExecWait  $Script_80228DA4
        Call  SetGoalToIndex    ( *Var[9] *Var[0] )
        Call  FlyToGoal ( *Var[9] 00000000 00000000 .Easing:Linear )
    EndIf
    Call  SetPartFlagBits   ( *Var[9] 00000001 00800000 .True )
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  SetEnemyHP    ( *Var[9] *Var[0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Call  GetActorPos   ( *Var[9] *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( *Var[9] *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( *Var[9] )
    If  *Flag[00]  ==  .False
        Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
    Else
        Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
    EndIf
    If  *Flag[00]  ==  .False
        Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
        Call  SetAnimation  ( *Var[9] 00000001 00560001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
        Call  SetAnimation  ( *Var[9] 00000001 00570001 )
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  UseIdleAnimation  ( *Var[9] .True )
    Return
    End
}

#new:Script $Script_BoostAttack
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218638    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetActorAttackBoost   ( *Var[0] *Var[4] )
            If  *Var[4]  <  00000003
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RunAway
        Return
    EndIf
    ExecWait  $Script_ShapeSpell
    Return
    Label  64
    Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar       ( .Actor:Self 0000000B 00000004 )
    Call  AddActorVar       ( .Actor:Self 00000005 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DD )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  BoostAttack   ( *Var[8] 00000001 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_BoostDefense
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218638    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetActorDefenseBoost  ( *Var[0] *Var[4] )
            If  *Var[4]  <  00000003
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RunAway
        Return
    EndIf
    ExecWait  $Script_ShapeSpell
    Return
    Label  64
    Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar       ( .Actor:Self 0000000B 00000005 )
    Call  AddActorVar       ( .Actor:Self 00000006 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DD )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  BoostDefense  ( *Var[8] 00000001 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Electrify
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218638    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetStatusFlags    ( *Var[0] *Var[4] )
            If  *Var[4]  !&  04002000
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RunAway
        Return
    EndIf
    ExecWait  $Script_ShapeSpell
    Return
    Label  64
    Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar       ( .Actor:Self 0000000B 00000006 )
    Call  AddActorVar       ( .Actor:Self 00000007 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Loop  00000004
            Call  PlaySoundAtActor  ( *Var[8] 000003D2 )
            Call  RandInt   ( 00000003 *Var[0] )
            Add   *Var[0]  00000003
            Wait  *Var[0]
        EndLoop
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  ElectrifyActor    ( *Var[8] 00000003 )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Vanish
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218638    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetStatusFlags    ( *Var[0] *Var[4] )
            If  *Var[4]  !&  04002000
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RunAway
        Return
    EndIf
    ExecWait  $Script_ShapeSpell
    Return
    Label  64
    Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
    Call  SetActorVar       ( .Actor:Self 0000000B 00000007 )
    Call  AddActorVar       ( .Actor:Self 00000008 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DB )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  VanishActor   ( *Var[8] 00000002 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022B784
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_ShapeSpell
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
    If  *Var[0]  ==  00000001
        Goto  14
    EndIf
    Set   *Var[A]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
    MulF  *Var[2]  *Fixed[100.0]
    DivF  *Var[2]  *Var[3]
    If  *Flag[00]  ==  .False
        If  *Var[2]  <=  00000019
            Call  RandInt   ( 00000063 *Var[4] )
            Add   *Var[4]  00000001
            If  *Var[4]  <  0000004B
                Add   *Var[A]  00000001
                Set   *Var[B]  *Var[0]
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Var[A]  >  00000000
        Goto  A
    EndIf
    Set   *Var[A]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
    MulF  *Var[2]  *Fixed[100.0]
    DivF  *Var[2]  *Var[3]
    If  *Flag[00]  ==  .False
        If  *Var[2]  <=  00000014
            Call  RandInt   ( 00000063 *Var[4] )
            Add   *Var[4]  00000001
            If  *Var[4]  <  00000050
                Add   *Var[A]  00000001
                Set   *Var[B]  *Var[0]
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  1
    EndIf
    If  *Var[A]  >  00000000
        Goto  A
    EndIf
    Set   *Var[A]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
    MulF  *Var[2]  *Fixed[100.0]
    DivF  *Var[2]  *Var[3]
    If  *Flag[00]  ==  .False
        If  *Var[2]  <=  0000000F
            Call  RandInt   ( 00000063 *Var[4] )
            Add   *Var[4]  00000001
            If  *Var[4]  <  00000064
                Add   *Var[A]  00000001
                Set   *Var[B]  *Var[0]
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    If  *Var[A]  >  00000000
        Goto  A
    EndIf
    Goto  14
    Label  A
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001 % 1
        ExecWait  $Script_RunAway
        Return
    EndIf
    If  *Var[A]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
        If  *Var[0]  <  00000002
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  000001F4
                ExecWait  $Script_HealOne
                Return
            EndIf
        Else
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            If  *Var[0]  <  00000002
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000001F4
                    ExecWait  $Script_HealAll
                    Return
                EndIf
            EndIf
        EndIf
    Else
        Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
        If  *Var[0]  <  00000002
            Call  RandInt   ( 000003E8 *Var[0] )
            If  *Var[0]  <  000001F4
                ExecWait  $Script_HealAll
                Return
            EndIf
        Else
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            If  *Var[0]  <  00000002
                SetF  *Var[9]  *Fixed[100.0]
                Call  EnemyCreateTargetList ( 00008002 )
                Call  InitTargetIterator ( )
                Label  B
                Set   *Flag[00]  .False
                Call  GetOwnerTarget        ( *Var[0] *Var[1] )
                Call  GetOriginalActorType  ( *Var[0] *Var[1] )
                If  *Var[1]  ==  00000047
                    Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                    EndIf
                EndIf
                Call  GetActorHP    ( *Var[0] *Var[2] )
                Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
                MulF  *Var[2]  *Fixed[100.0]
                DivF  *Var[2]  *Var[3]
                If  *Flag[00]  ==  .False
                    If  *Var[2]  <=  *Var[9]
                        SetF  *Var[9]  *Var[2]
                        Set   *Var[B]  *Var[0]
                    EndIf
                EndIf
                Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
                If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
                    Goto  B
                EndIf
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000001F4 % 1F4
                    ExecWait  $Script_HealOne
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Label  14
    Set   *Var[A]  0000000A
    Set   *Var[B]  0000000A
    Set   *Var[C]  0000000A
    Set   *Var[D]  0000000A
    Set   *Var[E]  0000000A
    Set   *Var[F]  0000000A
    Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
    If  *Var[0]  ==  00000001
        Set   *Var[A]  00000064
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Set   *Var[D]  00000000
        Set   *Var[E]  00000000
        Set   *Var[F]  00000000
        Goto  7B
    Else
        ExecWait  $Script_80228DA4
        If  *Var[0]  ==  FFFFFFFF
            Set   *Var[B]  00000000
        EndIf
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  00000000
        Set   *Var[B]  00000000
    EndIf
    Call  GetActorVar   ( .Actor:Self 0000000B *Var[0] )
    Switch  *Var[0]
        Case  ==  00000004
            Call  GetActorVar   ( .Actor:Self 00000005 *Var[1] )
            If  *Var[1]  <  00000003
                Call  RandInt   ( 00000063 *Var[0] )
                Add   *Var[0]  00000001
                If  *Var[0]  <=  00000032
                    Set   *Var[A]  00000000
                    Set   *Var[B]  00000000
                    Set   *Var[C]  00000064
                    Set   *Var[D]  00000000
                    Set   *Var[E]  00000000
                    Set   *Var[F]  00000000
                EndIf
            EndIf
        Case  ==  00000005
            Call  GetActorVar   ( .Actor:Self 00000006 *Var[1] )
            If  *Var[1]  <  00000003
                Call  RandInt   ( 00000063 *Var[0] )
                Add   *Var[0]  00000001
                If  *Var[0]  <=  00000032
                    Set   *Var[A]  00000000
                    Set   *Var[B]  00000000
                    Set   *Var[C]  00000000
                    Set   *Var[D]  00000064
                    Set   *Var[E]  00000000
                    Set   *Var[F]  00000000
                EndIf
            EndIf
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  >=  00000003
        Set   *Var[C]  00000000
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000006 *Var[0] )
    If  *Var[0]  >=  00000003
        Set   *Var[D]  00000000
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000007 *Var[0] )
    If  *Var[0]  >=  00000003
        Set   *Var[E]  00000000
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  >=  00000003
        Set   *Var[F]  00000000
    EndIf
    Label  7B
    Set   *Var[9]  00000000
    Add   *Var[9]  *Var[A]
    Add   *Var[9]  *Var[B]
    Add   *Var[9]  *Var[C]
    Add   *Var[9]  *Var[D]
    Add   *Var[9]  *Var[E]
    Add   *Var[9]  *Var[F]
    Sub   *Var[9]  00000001
    Call  RandInt   ( *Var[9] *Var[0] )
    Add   *Var[0]  00000001
    If  *Var[0]  <=  *Var[A]
        ExecWait  $Script_ShapeSpell
        Return
    EndIf
    Add   *Var[A]  *Var[B]
    If  *Var[0]  <=  *Var[A]
        ExecWait  $Script_MakeCopy
        Return
    EndIf
    Add   *Var[A]  *Var[C]
    If  *Var[0]  <=  *Var[A]
        ExecWait  $Script_BoostAttack
        Return
    EndIf
    Add   *Var[A]  *Var[D]
    If  *Var[0]  <=  *Var[A]
        ExecWait  $Script_BoostDefense
        Return
    EndIf
    Add   *Var[A]  *Var[E]
    If  *Var[0]  <=  *Var[A]
        ExecWait  $Script_Electrify
        Return
    EndIf
    ExecWait  $Script_Vanish
    Return
    End
}

PADDING: 8022C80C to 8022C810 (0069923C to 00699240)
00000000

#new:DefenseTable $DefenseTable_8022C810
{
    .Element:Normal 00000000
    .Element:Water  FFFFFFFE
    .Element:Ice    FFFFFFFE
    .Element:Fire   00000063
    .Element:End
}

#new:StatusTable $StatusTable_8022C834
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze    0`
    .Status:Shrink     90`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022C8E0
{
    00800000 01000000 FE1900FF $IdleAnimations_8022C9BC $DefenseTable_8022C810 00000002 00000000 FDF60000 00000000
    00120001 02000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000
    00120001 03000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000
    00120001 04000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000
    00120001 05000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000
}

#new:Actor $Ember
{
    % stats
    [Index]        45b
    [Level]        24`b
    [MaxHP]        10`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8022C834
    % ai
    [PartsCount]    5`s
    [PartsTable]  $PartsTable_8022C8E0
    [Script]      $Script_Init_8022CA14
    % move effectiveness
    [Escape]       60`b
    [Item]         50`b
    [AirLift]      80`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         33`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022C9BC
{
    .Status:Normal    00460101
    .Status:Stone     00460100
    .Status:Sleep     00460101
    .Status:Poison    00460101
    .Status:Stop      00460100
    .Status:Static    00460101
    .Status:Paralyze  00460100
    .Status:Dizzy     0046010A
    .Status:Fear      0046010A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022CA08
{
    .Status:Normal    00460101
    .Status:End
}

#new:Script $Script_Init_8022CA14
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022EDE4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022CBDC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022D41C )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    EndSwitch
    Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000005
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_8022CBDC
{
    Label  0
    Call  MakeLerp      ( 00000000 0000000A 00000019 .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Call  GetHomePos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Add   *Var[0]  *Var[3]
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    If  *Var[1]  ==  00000001
        Label  B
        Wait  1`
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  &  0035D000
            Goto  B
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  ==  00000001
            Goto  B
        EndIf
        Goto  1
    EndIf
    Call  MakeLerp      ( 0000000A 00000000 00000019 .Easing:CosInOut )
    Label  2
    Call  UpdateLerp ( )
    Call  GetHomePos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Add   *Var[0]  *Var[3]
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    If  *Var[1]  ==  00000001
        Label  16
        Wait  1`
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  &  0035D000
            Goto  16
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  ==  00000001
            Goto  16
        EndIf
        Goto  2
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_8022CE5C
{
    Call  SetAnimation  ( .Actor:Self 00000001 00460103 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Thread
        Call  $Function_80218700 ( )
    EndThread
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00460101 )
    Return
    End
}

#new:Script $Script_8022CEF8
{
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[01]  ==  .False
        Set   *Var[A]  00000000
        Return
    EndIf
    If  *Flag[02]  ==  .False
        Set   *Var[A]  00000001
        Return
    EndIf
    If  *Flag[03]  ==  .False
        Set   *Var[A]  00000002
        Return
    EndIf
    If  *Flag[04]  ==  .False
        Set   *Var[A]  00000003
        Return
    EndIf
    Set   *Var[A]  FFFFFFFF
    Return
    End
}

#new:Vector3D $Vector3D_8022D0F4
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8022D100
{
    $Ember $Vector3D_8022D0F4 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Split
{
    Call  GetLastDamage ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  00000000
        Return
    EndIf
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    If  *Var[0]  <=  00000000
        Return
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  20000000
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  >=  00000002
        Return
    EndIf
    ExecWait  $Script_8022CEF8
    Switch  *Var[A]
        CaseOR  ==  00000000
        CaseOR  ==  00000001
        CaseOR  ==  00000002
        CaseOR  ==  00000003
            Call  SummonEnemy   ( $SpecialFormation_8022D100 00000000 )
            Call  SetActorVar   ( *Var[0] 00000002 00000001 )
            Call  GetActorHP    ( .Actor:Self *Var[B] )
            Call  SetEnemyHP    ( *Var[0] *Var[B] )
            Call  GetActorPos   ( .Actor:Self *Var[B] *Var[C] *Var[D] )
            Call  SetActorPos   ( *Var[0] *Var[B] *Var[C] *Var[D] )
            Call  SetGoalToIndex        ( *Var[0] *Var[A] )
            Call  GetGoalPos    ( *Var[0] *Var[B] *Var[C] *Var[D] )
            Call  SetHomePos    ( *Var[0] *Var[B] *Var[C] *Var[D] )
            Call  SetActorJumpGravity   ( *Var[0] *Fixed[1.2] )
            Call  JumpToGoal    ( *Var[0] 00000014 .False .True .False )
            Call  HPBarToHome   ( *Var[0] )
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            Switch  *Var[1]
                Case  ==  00000000
                    Call  SetActorVar   ( *Var[0] 00000001 00000001 )
                Case  ==  00000001
                    Call  SetActorVar   ( *Var[0] 00000001 00000002 )
            EndSwitch
            Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
            Call  SetActorVar   ( *Var[0] 00000002 00000000 )
        EndCaseGroup
        Default
    EndSwitch
    Return
    End
}

#new:Script $Script_HandleEvent_8022D41C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Exec  $Script_Split
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Exec  $Script_Split
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460108
            SetConst  *Var[2]  00460109
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460108
            SetConst  *Var[2]  00460109
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460109
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            Exec  $Script_Split
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  PlaySoundAtActor  ( .Actor:Self 00000759 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoJumpBack
            ExecWait  $Script_8022CE5C
        Case  ==  .Event:ShockDeath % 26
            Call  PlaySoundAtActor  ( .Actor:Self 00000759 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
        CaseOR  ==  .Event:BurnTaunt % 1C
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460107
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8022CE5C
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460103
            SetConst  *Var[2]  00460107
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460103
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460103
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:UpAndAway % 3D
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022D9C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00460103 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000005
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Thread
        Call  $Function_80218700 ( )
    EndThread
    Call  FlyToGoal ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Call  SetAnimation      ( .Actor:Self 00000001 00460101 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 00460104 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000001
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Sub   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000003 .False .True .False )
            Wait  14`
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            ExecWait  $Script_8022CE5C
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00460104 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000001
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Fire 00000000 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Set   *Var[0]  00000001
            Set   *Var[1]  00460104
            ExecWait  DoJumpBack
            Wait  5`
            ExecWait  $Script_8022CE5C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022DFB4
{
    Set   *Var[6]  00000002
    Loop  00000004
        Thread
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            If  *Var[A]  &  00080000
                Call  SetPartScale  ( .Actor:Self *Var[6] *Fixed[0.2] *Fixed[0.2] *Fixed[0.2] )
            Else
                Call  SetPartScale  ( .Actor:Self *Var[6] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
            EndIf
            Call  SetPartPos        ( .Actor:Self *Var[6] *Var[0] *Var[1] *Var[2] )
            Call  SetPartFlagBits   ( .Actor:Self *Var[6] 00000001 .False )
            Call  SetPartMoveSpeed  ( .Actor:Self *Var[6] *Fixed[8.0] )
            Call  SetPartJumpGravity    ( .Actor:Self *Var[6] *Fixed[0.01] )
            Call  SetPartSounds     ( .Actor:Self *Var[6] .ActorSound:Jump 000002D0 00000000 )
            Call  JumpPartTo        ( .Actor:Self *Var[6] *Var[3] *Var[4] *Var[5] 00000000 .False )
            Call  SetPartFlagBits   ( .Actor:Self *Var[6] 00000001 .True )
        EndThread
        Wait  3`
        Add   *Var[6]  00000001
    EndLoop
    Return
    End
}

#new:Script $Script_8022E158
{
    Exec  $Script_8022DFB4
    Call  GetDistanceToGoal ( .Actor:Self *Var[0] )
    DivF  *Var[0]  *Fixed[8.0]
    Add   *Var[0]  00000001
    Wait  *Var[0]
    Return
    End
}

#new:Script $Script_8022E1B4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000001
        Add   *Var[0]  00000064
        Set   *Var[1]  00000005
    Else
        Add   *Var[0]  0000001E
        Set   *Var[1]  00000032
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000001 00460103 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Thread
        Call  $Function_80218700 ( )
    EndThread
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00460101 )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00460105 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 00460106 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Add   *Var[1]  00000004
            Add   *Var[2]  00000002
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000064
            Add   *Var[5]  00000002
            ExecWait  $Script_8022E158
            If  *Var[A]  ==  00000005
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8022CE5C
            Wait  20`
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00460106 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Add   *Var[1]  00000004
    Add   *Var[2]  00000002
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[4]  00000006
    Add   *Var[5]  00000002
    ExecWait  $Script_8022E158
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000002 00000000 00000000 00000003 00000020 )
    Wait  20`
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_8022CE5C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022E728
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00460103 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 0000001E 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
    Thread
        Call  $Function_80218700 ( )
    EndThread
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002CF )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00460104 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Add   *Var[2]  00000002
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00460104 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8022CE5C
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  5`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002CF )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00460104 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000002
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Fire 00000000 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Wait  20`
            ExecWait  $Script_8022CE5C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022EDE4
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000001
                ExecWait  $Script_8022D9C4
            Case  ==  00000000
                ExecWait  $Script_8022E728
        EndSwitch
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000001
            Call  GetStatusFlags    ( .Actor:Partner *Var[0] )
            If  *Var[0]  &  01000000
                ExecWait  $Script_8022D9C4
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <=  0000012C
                    ExecWait  $Script_8022E1B4
                Else
                    ExecWait  $Script_8022D9C4
                EndIf
            EndIf
        Case  ==  00000000
            Call  GetStatusFlags    ( .Actor:Partner *Var[0] )
            If  *Var[0]  &  01000000
                ExecWait  $Script_8022E728
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <=  0000012C
                    ExecWait  $Script_8022E1B4
                Else
                    ExecWait  $Script_8022E728
                EndIf
            EndIf
    EndSwitch
    Return
    End
}

PADDING: 8022EFDC to 8022EFE0 (0069BA0C to 0069BA10)
00000000

#new:Script $Script_8022EFE0
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022F090
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt01:switch 00000000 )
    Thread
        Set   *Var[0]  00000025
        Exec  $Script_8022EFE0
        Wait  5`
        Set   *Var[0]  00000027
        Exec  $Script_8022EFE0
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8022F134
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F144
{
    ~Model:kpa_bt01:o383
    ~Model:kpa_bt01:o382
    ~Model:kpa_bt01:o381
    00000000
}

#new:Stage $Stage_8022F154
{
    $ASCII_80231F70  % kpa_tex
    $ASCII_80231F60  % kpa_bt01_shape
    $ASCII_80231F50  % kpa_bt01_hit
    $Script_BeforeBattle_8022F090
    $Script_AfterBattle_8022F134
    00000000
    $ForegroundModelList_8022F144
    00000000
    00000000
    00000000
}

PADDING: 8022F17C to 8022F180 (0069BBAC to 0069BBB0)
00000000

#new:Script $Script_8022F180
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022F230
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt01:hasira 00000000 )
    Set   *Var[0]  00000025
    Exec  $Script_8022F180
    Set   *Var[0]  00000027
    Exec  $Script_8022F180
    Return
    End
}

#new:Script $Script_AfterBattle_8022F2B8
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F2C8
{
    ~Model:kpa_bt01:o383
    ~Model:kpa_bt01:o382
    ~Model:kpa_bt01:o381
    00000000
}

#new:Stage $Stage_8022F2D8
{
    $ASCII_80231F98  % kpa_tex
    $ASCII_80231F88  % kpa_bt01_shape
    $ASCII_80231F78  % kpa_bt01_hit
    $Script_BeforeBattle_8022F230
    $Script_AfterBattle_8022F2B8
    00000000
    $ForegroundModelList_8022F2C8
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_8022F300
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8022F3D0
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8022F4BC
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 00000000 *Var[0] )
        Call  SetTexPanOffset   ( *Var[A] 00000001 00000000 *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022F5A8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  00000010
    Set   *Var[1]  00000001
    Set   *Var[2]  FFFFFE70
    Set   *Var[3]  FFFFFCE0
    Exec  $Script_8022F3D0
    Set   *Var[0]  00000013
    Set   *Var[1]  00000003
    Set   *Var[2]  FFFFFE70
    Set   *Var[3]  FFFFFCE0
    Exec  $Script_8022F3D0
    Set   *Var[0]  00000011
    Set   *Var[1]  00000000
    Set   *Var[2]  FFFFFE70
    Set   *Var[3]  FFFFFCE0
    Exec  $Script_8022F4BC
    Set   *Var[0]  00000012
    Set   *Var[1]  00000002
    Set   *Var[2]  FFFFFE70
    Set   *Var[3]  FFFFFCE0
    Exec  $Script_8022F4BC
    Return
    End
}

#new:Script $Script_AfterBattle_8022F714
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F724
{
    ~Model:kpa_bt02:saku
    00000000
}

#new:Stage $Stage_8022F72C
{
    $ASCII_80231FC0  % kpa_tex
    $ASCII_80231FB0  % kpa_bt02_shape
    $ASCII_80231FA0  % kpa_bt02_hit
    $Script_BeforeBattle_8022F5A8
    $Script_AfterBattle_8022F714
    00000000
    $ForegroundModelList_8022F724
    00000000
    00000000
    00000000
}

PADDING: 8022F754 to 8022F760 (0069C184 to 0069C190)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022F760
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  80253734  ( 00000001 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022F7AC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022F7BC
{
    ~Model:kpa_bt03:tar1
    00000000
}

#new:Stage $Stage_8022F7C4
{
    $ASCII_80231FE8  % kpa_tex
    $ASCII_80231FD8  % kpa_bt03_shape
    $ASCII_80231FC8  % kpa_bt03_hit
    $Script_BeforeBattle_8022F760
    $Script_AfterBattle_8022F7AC
    00000000
    $ForegroundModelList_8022F7BC
    00000000
    00000000
    00000000
}

PADDING: 8022F7EC to 8022F7F0 (0069C21C to 0069C220)
00000000

#new:Script $Script_8022F7F0
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022F8A0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:g3 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:wa 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:kusari 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:g4 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi1 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi2 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi3 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi4 00000000 )
    Set   *Var[0]  00000020
    Exec  $Script_8022F7F0
    Set   *Var[0]  00000022
    Exec  $Script_8022F7F0
    Set   *Var[0]  00000024
    Exec  $Script_8022F7F0
    Return
    End
}

#new:Script $Script_AfterBattle_8022F9D0
{
    Return
    End
}

#new:Stage $Stage_8022F9E0
{
    $ASCII_80232010  % kpa_tex
    $ASCII_80232000  % kpa_bt04_shape
    $ASCII_80231FF0  % kpa_bt04_hit
    $Script_BeforeBattle_8022F8A0
    $Script_AfterBattle_8022F9D0
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022FA08 to 8022FA10 (0069C438 to 0069C440)
00000000 00000000

#new:Script $Script_8022FA10
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022FAC0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:g2 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:wa 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:kusari 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi1 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi2 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi3 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi4 00000000 )
    Set   *Var[0]  00000020
    Exec  $Script_8022FA10
    Set   *Var[0]  00000022
    Exec  $Script_8022FA10
    Set   *Var[0]  00000024
    Exec  $Script_8022FA10
    Return
    End
}

#new:Script $Script_AfterBattle_8022FBDC
{
    Return
    End
}

#new:Stage $Stage_8022FBEC
{
    $ASCII_80232038  % kpa_tex
    $ASCII_80232028  % kpa_bt04_shape
    $ASCII_80232018  % kpa_bt04_hit
    $Script_BeforeBattle_8022FAC0
    $Script_AfterBattle_8022FBDC
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022FC14 to 8022FC20 (0069C644 to 0069C650)
00000000 00000000 00000000

#new:Script $Script_8022FC20
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022FCD0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:o415 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:o453 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:o452 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:o454 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:o451 00000000 )
    Call  SetGroupEnabled   ( ~Model:kpa_bt04:o450 00000000 )
    Set   *Var[0]  00000012
    Exec  $Script_8022FC20
    Set   *Var[0]  00000014
    Exec  $Script_8022FC20
    Set   *Var[0]  00000016
    Exec  $Script_8022FC20
    Set   *Var[0]  00000018
    Exec  $Script_8022FC20
    Return
    End
}

#new:Script $Script_AfterBattle_8022FDF4
{
    Return
    End
}

#new:Stage $Stage_8022FE04
{
    $ASCII_80232060  % kpa_tex
    $ASCII_80232050  % kpa_bt04_shape
    $ASCII_80232040  % kpa_bt04_hit
    $Script_BeforeBattle_8022FCD0
    $Script_AfterBattle_8022FDF4
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022FE2C to 8022FE30 (0069C85C to 0069C860)
00000000

#new:Script $Script_BeforeBattle_8022FE30
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022FE6C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022FE7C
{
    ~Model:kpa_bt05:saku
    00000000
}

#new:Stage $Stage_8022FE84
{
    $ASCII_80232088  % kpa_tex
    $ASCII_80232078  % kpa_bt05_shape
    $ASCII_80232068  % kpa_bt05_hit
    $Script_BeforeBattle_8022FE30
    $Script_AfterBattle_8022FE6C
    00000000
    $ForegroundModelList_8022FE7C
    00000000
    00000000
    00000000
}

PADDING: 8022FEAC to 8022FEB0 (0069C8DC to 0069C8E0)
00000000

#new:Script $Script_8022FEB0
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022FF80
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8023006C
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 00000000 *Var[0] )
        Call  SetTexPanOffset   ( *Var[A] 00000001 00000000 *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80230158
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  00000010
    Set   *Var[1]  00000000
    Set   *Var[2]  FFFFFF38
    Set   *Var[3]  00000000
    Exec  $Script_8022FEB0
    Set   *Var[0]  00000011
    Set   *Var[1]  00000001
    Set   *Var[2]  FFFFFF88
    Set   *Var[3]  00000000
    Exec  $Script_8022FEB0
    Set   *Var[0]  00000000
    Set   *Var[1]  00000002
    Set   *Var[2]  FFFFFF9C
    Set   *Var[3]  00000000
    Exec  $Script_8022FEB0
    Return
    End
}

#new:Script $Script_AfterBattle_80230278
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80230288
{
    ~Model:kpa_bt07:kemu1
    00000000
}

#new:Stage $Stage_80230290
{
    $ASCII_802320B0  % kpa_tex
    $ASCII_802320A0  % kpa_bt07_shape
    $ASCII_80232090  % kpa_bt07_hit
    $Script_BeforeBattle_80230158
    $Script_AfterBattle_80230278
    00000000
    $ForegroundModelList_80230288
    00000000
    00000000
    00000000
}

PADDING: 802302B8 to 802302C0 (0069CCE8 to 0069CCF0)
00000000 00000000

#new:Script $Script_BeforeBattle_802302C0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_802302FC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8023030C
{
    ~Model:kpa_bt08:o478
    00000000
}

#new:Stage $Stage_80230314
{
    $ASCII_802320D8  % kpa_tex
    $ASCII_802320C8  % kpa_bt08_shape
    $ASCII_802320B8  % kpa_bt08_hit
    $Script_BeforeBattle_802302C0
    $Script_AfterBattle_802302FC
    00000000
    $ForegroundModelList_8023030C
    00000000
    00000000
    00000000
}

PADDING: 8023033C to 80230340 (0069CD6C to 0069CD70)
00000000

#new:Script $Script_BeforeBattle_80230340
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8023037C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8023038C
{
    ~Model:kpa_bt09:o353
    00000000
}

#new:Stage $Stage_80230394
{
    $ASCII_80232100  % kpa_tex
    $ASCII_802320F0  % kpa_bt09_shape
    $ASCII_802320E0  % kpa_bt09_hit
    $Script_BeforeBattle_80230340
    $Script_AfterBattle_8023037C
    00000000
    $ForegroundModelList_8023038C
    00000000
    00000000
    00000000
}

PADDING: 802303BC to 802303C0 (0069CDEC to 0069CDF0)
00000000

#new:Script $Script_BeforeBattle_802303C0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_802303FC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8023040C
{
    ~Model:kpa_bt11:h2
    00000000
}

#new:Stage $Stage_80230414
{
    $ASCII_80232128  % kpa_tex
    $ASCII_80232118  % kpa_bt11_shape
    $ASCII_80232108  % kpa_bt11_hit
    $Script_BeforeBattle_802303C0
    $Script_AfterBattle_802303FC
    00000000
    $ForegroundModelList_8023040C
    00000000
    00000000
    00000000
}

PADDING: 8023043C to 80230440 (0069CE6C to 0069CE70)
00000000

% Origin: HEURISTIC
#new:Script $Script_80230440
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_802304F0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8023052C
{
    Return
    End
}

#new:Stage $Stage_8023053C
{
    $ASCII_80232150  % kpa_tex
    $ASCII_80232140  % kpa_bt13_shape
    $ASCII_80232130  % kpa_bt13_hit
    $Script_BeforeBattle_802304F0
    $Script_AfterBattle_8023052C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80230564 to 80230570 (0069CF94 to 0069CFA0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80230570
{
    Set   *Var[A]  *Var[0]
    Call  SetTexPanner  ( *Var[A] 00000001 )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00008000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80230620
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8023065C
{
    Return
    End
}

#new:Stage $Stage_8023066C
{
    $ASCII_80232178  % kpa_tex
    $ASCII_80232168  % kpa_bt14_shape
    $ASCII_80232158  % kpa_bt14_hit
    $Script_BeforeBattle_80230620
    $Script_AfterBattle_8023065C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80230694 to 802306A0 (0069D0C4 to 0069D0D0)
00000000 00000000 00000000

#new:Formation $Formation_00
{
    $BonyBeetle 00000001 0000000A 00000001 00000000 00000000 00000000
    $BonyBeetle 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
    $Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
    $Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $DryBones 00000001 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $DryBones 00000000 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $DryBones 00000000 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000008 00000000 00000000 00000000 00000000
    $DryBones 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $DryBones 00000000 0000000A 00000000 00000000 00000000 00000000
    $Ember 00000001 00000009 00000000 00000000 00000000 00000000
    $Ember 00000002 00000008 00000000 00000000 00000000 00000000
    $Ember 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $DryBones 00000000 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $DryBones 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $DryBones 00000000 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $DryBones 00000000 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
    $BonyBeetle 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000001 00000009 00000000 00000000 00000000 00000000
    $HammerBros 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
    $HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
    $HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
    $HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
    $HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $HammerBros 00000002 00000008 00000000 00000000 00000000 00000000
    $Magikoopa 00000003 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
    $HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000001 00000009 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
    $HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000001 00000009 00000000 00000000 00000000 00000000
    $HammerBros 00000002 00000008 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000007 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
    $Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
    $Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_19
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1A
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
    $Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1B
{
    $Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1C
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
    $HammerBros 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_80231040
{
    5` 0` -20`
}

#new:Vector3D $Vector3D_8023104C
{
    45` 0` -10`
}

#new:Vector3D $Vector3D_80231058
{
    85` 0` 0`
}

#new:Vector3D $Vector3D_80231064
{
    125` 0` 5`
}

#new:Formation $Formation_1D
{
    $Koopatrol $Vector3D_80231040 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol $Vector3D_8023104C 00000009 00000000 00000000 00000000 00000000
    $Koopatrol $Vector3D_80231058 00000008 00000000 00000000 00000000 00000000
    $Magikoopa $Vector3D_80231064 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1E
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000
    $Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

MISSING: 80231150 to 802311C0 (0069DB80 to 0069DBF0)
802205F0 00000000 0000000A 00000000 00000000 00000000 00000000 8021E678
00000001 00000009 00000000 00000000 00000000 00000000 80225120 00000002
00000008 00000000 00000000 00000000 00000000 80225120 00000003 00000007
00000000 00000000 00000000 00000000

#new:Formation $Formation_1F
{
    $Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_20
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_21
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_22
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_23
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_24
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_25
{
    $Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000
    $Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
    $Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_26
{
    $Magikoopa 00000001 0000000A 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_27
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_28
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000005 00000009 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_29
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2A
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
    $Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2B
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2C
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2D
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
    $BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
    $Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2E
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2F
{
    $Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000
    $Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_30
{
    $FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_31
{
    $FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000005 00000009 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_32
{
    $FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
    $Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_33
{
    $FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000
    $Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_34
{
    $FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_35
{
    $FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $DryBones 00000001 00000009 00000000 00000000 00000000 00000000
    $DryBones 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_36
{
    $FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_37
{
    $FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $HammerBros 00000001 00000009 00000000 00000000 00000000 00000000
    $HammerBros 00000002 00000008 00000000 00000000 00000000 00000000
    $FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8023274C 00000002 $Formation_00 $Stage_8022F154 00000000
    $SJIS_8023273C 00000003 $Formation_01 $Stage_8022F154 00000000
    $SJIS_80232724 00000003 $Formation_02 $Stage_8022F154 00000000 % unused
    $SJIS_8023270C 00000003 $Formation_03 $Stage_8022F154 00000000 % unused
    $SJIS_802326F4 00000003 $Formation_04 $Stage_8022F154 00000000
    $SJIS_802326DC 00000004 $Formation_05 $Stage_8022F154 00000000 % unused
    $SJIS_802326B4 00000004 $Formation_06 $Stage_8022F154 00000000
    $SJIS_802326A8 00000002 $Formation_07 $Stage_8022F154 00000000
    $SJIS_8023269C 00000003 $Formation_08 $Stage_8022F154 00000000 % unused
    $SJIS_80232690 00000004 $Formation_09 $Stage_8022F154 00000000 % unused
    $SJIS_8023267C 00000004 $Formation_0A $Stage_8022F154 00000000 % unused
    $SJIS_80232668 00000003 $Formation_0B $Stage_8022F154 00000000
    $SJIS_80232654 00000003 $Formation_0C $Stage_8022F154 00000000
    $SJIS_8023263C 00000003 $Formation_0D $Stage_8022F154 00000000 % unused
    $SJIS_80232624 00000004 $Formation_0E $Stage_8022F154 00000000 % unused
    $SJIS_80232610 00000002 $Formation_0F $Stage_8022F154 00000000
    $SJIS_802325FC 00000003 $Formation_10 $Stage_8022F154 00000000 % unused
    $SJIS_802325E4 00000002 $Formation_11 $Stage_8022F154 00000000 % unused
    $SJIS_802325C8 00000003 $Formation_12 $Stage_8022F154 00000000 % unused
    $SJIS_802325AC 00000003 $Formation_13 $Stage_8022F154 00000000
    $SJIS_8023257C 00000004 $Formation_14 $Stage_8022F154 00000000
    $SJIS_80232554 00000003 $Formation_15 $Stage_8022F154 00000000
    $SJIS_8023252C 00000004 $Formation_16 $Stage_8022F154 00000000
    $SJIS_80232520 00000001 $Formation_17 $Stage_8022F154 00000000
    $SJIS_80232514 00000002 $Formation_18 $Stage_8022F154 00000000
    $SJIS_80232508 00000003 $Formation_19 $Stage_8022F154 00000000
    $SJIS_802324FC 00000004 $Formation_1A $Stage_8022F154 00000000
    $SJIS_802324E4 00000002 $Formation_1B $Stage_8022F154 00000000 % unused
    $SJIS_802324B4 00000004 $Formation_1C $Stage_8022F154 00000000 % unused
    $SJIS_8023249C 00000004 $Formation_1D $Stage_8022F154 00000000
    $SJIS_80232484 00000004 $Formation_1E $Stage_8022F154 00000000 % unused
    $SJIS_80232470 00000002 $Formation_1F $Stage_8022F154 00000000
    $SJIS_80232458 00000003 $Formation_20 $Stage_8022F154 00000000
    $SJIS_80232440 00000003 $Formation_21 $Stage_8022F154 00000000
    $SJIS_80232420 00000003 $Formation_22 $Stage_8022F154 00000000 % unused
    $SJIS_8023240C 00000003 $Formation_23 $Stage_8022F154 00000000
    $SJIS_802323E4 00000004 $Formation_24 $Stage_8022F154 00000000
    $SJIS_802323C0 00000004 $Formation_25 $Stage_8022F154 00000000 % unused
    $SJIS_802323B4 00000002 $Formation_26 $Stage_8022F154 00000000 % unused
    $SJIS_802323A8 00000003 $Formation_27 $Stage_8022F154 00000000 % unused
    $SJIS_80232388 00000003 $Formation_28 $Stage_8022F154 00000000 % unused
    $SJIS_80232364 00000004 $Formation_29 $Stage_8022F154 00000000
    $SJIS_8023234C 00000004 $Formation_2A $Stage_8022F154 00000000 % unused
    $SJIS_80232338 00000003 $Formation_2B $Stage_8022F154 00000000
    $SJIS_80232318 00000003 $Formation_2C $Stage_8022F154 00000000
    $SJIS_802322F8 00000004 $Formation_2D $Stage_8022F154 00000000 % unused
    $SJIS_802322D8 00000003 $Formation_2E $Stage_8022F154 00000000 % unused
    $SJIS_802322B4 00000004 $Formation_2F $Stage_8022F154 00000000
    $SJIS_8023229C 00000002 $Formation_30 $Stage_8022F154 00000000 % unused
    $SJIS_80232284 00000003 $Formation_31 $Stage_8022F154 00000000 % unused
    $SJIS_8023224C 00000004 $Formation_32 $Stage_8022F154 00000000
    $SJIS_8023222C 00000003 $Formation_33 $Stage_8022F154 00000000
    $SJIS_80232208 00000002 $Formation_34 $Stage_8022F154 00000000 % unused
    $SJIS_802321E8 00000003 $Formation_35 $Stage_8022F154 00000000
    $SJIS_802321B8 00000003 $Formation_36 $Stage_8022F154 00000000 % unused
    $SJIS_80232180 00000004 $Formation_37 $Stage_8022F154 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_802327C4 $Stage_8022F154
    $ASCII_802327BC $Stage_8022F2D8
    $ASCII_802327B4 $Stage_8022F72C
    $ASCII_802327AC $Stage_8022F7C4
    $ASCII_802327A4 $Stage_8022F9E0
    $ASCII_8023279C $Stage_8022FBEC
    $ASCII_80232794 $Stage_8022FE04
    $ASCII_8023278C $Stage_8022FE84
    $ASCII_80232784 $Stage_80230290
    $ASCII_8023277C $Stage_80230314
    $ASCII_80232774 $Stage_80230394
    $ASCII_8023276C $Stage_80230414
    $ASCII_80232764 $Stage_8023053C
    $ASCII_8023275C $Stage_8023066C
    00000000 00000000
}

#new:ASCII $ASCII_80231F50
{
    "kpa_bt01_hit"
}

#new:ASCII $ASCII_80231F60
{
    "kpa_bt01_shape"
}

#new:ASCII $ASCII_80231F70
{
    "kpa_tex"
}

#new:ASCII $ASCII_80231F78
{
    "kpa_bt01_hit"
}

#new:ASCII $ASCII_80231F88
{
    "kpa_bt01_shape"
}

#new:ASCII $ASCII_80231F98
{
    "kpa_tex"
}

#new:ASCII $ASCII_80231FA0
{
    "kpa_bt02_hit"
}

#new:ASCII $ASCII_80231FB0
{
    "kpa_bt02_shape"
}

#new:ASCII $ASCII_80231FC0
{
    "kpa_tex"
}

#new:ASCII $ASCII_80231FC8
{
    "kpa_bt03_hit"
}

#new:ASCII $ASCII_80231FD8
{
    "kpa_bt03_shape"
}

#new:ASCII $ASCII_80231FE8
{
    "kpa_tex"
}

#new:ASCII $ASCII_80231FF0
{
    "kpa_bt04_hit"
}

#new:ASCII $ASCII_80232000
{
    "kpa_bt04_shape"
}

#new:ASCII $ASCII_80232010
{
    "kpa_tex"
}

#new:ASCII $ASCII_80232018
{
    "kpa_bt04_hit"
}

#new:ASCII $ASCII_80232028
{
    "kpa_bt04_shape"
}

#new:ASCII $ASCII_80232038
{
    "kpa_tex"
}

#new:ASCII $ASCII_80232040
{
    "kpa_bt04_hit"
}

#new:ASCII $ASCII_80232050
{
    "kpa_bt04_shape"
}

#new:ASCII $ASCII_80232060
{
    "kpa_tex"
}

#new:ASCII $ASCII_80232068
{
    "kpa_bt05_hit"
}

#new:ASCII $ASCII_80232078
{
    "kpa_bt05_shape"
}

#new:ASCII $ASCII_80232088
{
    "kpa_tex"
}

#new:ASCII $ASCII_80232090
{
    "kpa_bt07_hit"
}

#new:ASCII $ASCII_802320A0
{
    "kpa_bt07_shape"
}

#new:ASCII $ASCII_802320B0
{
    "kpa_tex"
}

#new:ASCII $ASCII_802320B8
{
    "kpa_bt08_hit"
}

#new:ASCII $ASCII_802320C8
{
    "kpa_bt08_shape"
}

#new:ASCII $ASCII_802320D8
{
    "kpa_tex"
}

#new:ASCII $ASCII_802320E0
{
    "kpa_bt09_hit"
}

#new:ASCII $ASCII_802320F0
{
    "kpa_bt09_shape"
}

#new:ASCII $ASCII_80232100
{
    "kpa_tex"
}

#new:ASCII $ASCII_80232108
{
    "kpa_bt11_hit"
}

#new:ASCII $ASCII_80232118
{
    "kpa_bt11_shape"
}

#new:ASCII $ASCII_80232128
{
    "kpa_tex"
}

#new:ASCII $ASCII_80232130
{
    "kpa_bt13_hit"
}

#new:ASCII $ASCII_80232140
{
    "kpa_bt13_shape"
}

#new:ASCII $ASCII_80232150
{
    "kpa_tex"
}

#new:ASCII $ASCII_80232158
{
    "kpa_bt14_hit"
}

#new:ASCII $ASCII_80232168
{
    "kpa_bt14_shape"
}

#new:ASCII $ASCII_80232178
{
    "kpa_tex"
}

#new:SJIS $SJIS_80232180
{
    くうちゅうカメック,ハンマーブロスx２,くうちゅうカメック % kuuchuukamekku,hanma-burosux2,kuuchuukamekku
}

#new:SJIS $SJIS_802321B8
{
    くうちゅうカメック,トゲノコ,くうちゅうカメック % kuuchuukamekku,togenoko,kuuchuukamekku
}

#new:SJIS $SJIS_802321E8
{
    くうちゅうカメック,カロンx２ % kuuchuukamekku,karonx2
}

#new:SJIS $SJIS_80232208
{
    くうちゅうカメック,ハンマーブロス % kuuchuukamekku,hanma-burosu
}

#new:SJIS $SJIS_8023222C
{
    くうちゅうカメック,トゲノコx２ % kuuchuukamekku,togenokox2
}

#new:SJIS $SJIS_8023224C
{
    くうちゅうカメック,カメック,くうちゅうカメック,カメック % kuuchuukamekku,kamekku,kuuchuukamekku,kamekku
}

#new:SJIS $SJIS_80232284
{
    くうちゅうカメックx３ % kuuchuukamekkux3
}

#new:SJIS $SJIS_8023229C
{
    くうちゅうカメックx２ % kuuchuukamekkux2
}

#new:SJIS $SJIS_802322B4
{
    カメック,トゲノコ,カメック,トゲノコ % kamekku,togenoko,kamekku,togenoko
}

#new:SJIS $SJIS_802322D8
{
    カメックx２,くうちゅうカメック % kamekkux2,kuuchuukamekku
}

#new:SJIS $SJIS_802322F8
{
    カメック,ホネメットx２,カメック % kamekku,honemettox2,kamekku
}

#new:SJIS $SJIS_80232318
{
    カメック,ホネメット,カメック % kamekku,honemetto,kamekku
}

#new:SJIS $SJIS_80232338
{
    カメックx２,カロン % kamekkux2,karon
}

#new:SJIS $SJIS_8023234C
{
    カメック,トゲノコx３ % kamekku,togenokox3
}

#new:SJIS $SJIS_80232364
{
    カメックx２,くうちゅうカメックx２ % kamekkux2,kuuchuukamekkux2
}

#new:SJIS $SJIS_80232388
{
    カメック,くうちゅうカメックx２ % kamekku,kuuchuukamekkux2
}

#new:SJIS $SJIS_802323A8
{
    カメックx３ % kamekkux3
}

#new:SJIS $SJIS_802323B4
{
    カメックx２ % kamekkux2
}

#new:SJIS $SJIS_802323C0
{
    トゲノコ,カメック,トゲノコ,カメック % togenoko,kamekku,togenoko,kamekku
}

#new:SJIS $SJIS_802323E4
{
    トゲノコx２,カメック,くうちゅうカメック % togenokox2,kamekku,kuuchuukamekku
}

#new:SJIS $SJIS_8023240C
{
    トゲノコ,カロンx２ % togenoko,karonx2
}

#new:SJIS $SJIS_80232420
{
    トゲノコ,ホネメット,トゲノコ % togenoko,honemetto,togenoko
}

#new:SJIS $SJIS_80232440
{
    トゲノコ,ホネメットx２ % togenoko,honemettox2
}

#new:SJIS $SJIS_80232458
{
    トゲノコx２,ホネメット % togenokox2,honemetto
}

#new:SJIS $SJIS_80232470
{
    トゲノコ,ホネメット % togenoko,honemetto
}

#new:SJIS $SJIS_80232484
{
    トゲノコx２,カメックx２ % togenokox2,kamekkux2
}

#new:SJIS $SJIS_8023249C
{
    トゲノコx３,カメック % togenokox3,kamekku
}

#new:SJIS $SJIS_802324B4
{
    トゲノコ,ハンマーブロス,トゲノコ,ハンマーブロス % togenoko,hanma-burosu,togenoko,hanma-burosu
}

#new:SJIS $SJIS_802324E4
{
    トゲノコ,ハンマーブロス % togenoko,hanma-burosu
}

#new:SJIS $SJIS_802324FC
{
    トゲノコx４ % togenokox4
}

#new:SJIS $SJIS_80232508
{
    トゲノコx３ % togenokox3
}

#new:SJIS $SJIS_80232514
{
    トゲノコx２ % togenokox2
}

#new:SJIS $SJIS_80232520
{
    トゲノコ % togenoko
}

#new:SJIS $SJIS_8023252C
{
    ハンマーブロスx３,くうちゅうカメック % hanma-burosux3,kuuchuukamekku
}

#new:SJIS $SJIS_80232554
{
    ハンマーブロスx２,くうちゅうカメック % hanma-burosux2,kuuchuukamekku
}

#new:SJIS $SJIS_8023257C
{
    ハンマーブロス,カロン,ハンンマーブロス,カメック % hanma-burosu,karon,hannma-burosu,kamekku
}

#new:SJIS $SJIS_802325AC
{
    ハンマーブロス,トゲノコx２ % hanma-burosu,togenokox2
}

#new:SJIS $SJIS_802325C8
{
    ハンマーブロスx２,トゲノコ % hanma-burosux2,togenoko
}

#new:SJIS $SJIS_802325E4
{
    ハンマーブロス,トゲノコ % hanma-burosu,togenoko
}

#new:SJIS $SJIS_802325FC
{
    ハンマーブロスx３ % hanma-burosux3
}

#new:SJIS $SJIS_80232610
{
    ハンマーブロスx２ % hanma-burosux2
}

#new:SJIS $SJIS_80232624
{
    カロンx２,ホネメットx２ % karonx2,honemettox2
}

#new:SJIS $SJIS_8023263C
{
    カロンx２,ホネメット % karonx2,honemetto
}

#new:SJIS $SJIS_80232654
{
    カロン,トゲノコx２ % karon,togenokox2
}

#new:SJIS $SJIS_80232668
{
    カロンx２,カメック % karonx2,kamekku
}

#new:SJIS $SJIS_8023267C
{
    カロン,エルモスx３ % karon,erumosux3
}

#new:SJIS $SJIS_80232690
{
    カロンx４ % karonx4
}

#new:SJIS $SJIS_8023269C
{
    カロンx３ % karonx3
}

#new:SJIS $SJIS_802326A8
{
    カロンx２ % karonx2
}

#new:SJIS $SJIS_802326B4
{
    ホネメット,カロン,ホネメット,カメック % honemetto,karon,honemetto,kamekku
}

#new:SJIS $SJIS_802326DC
{
    ホネメットx３,カメック % honemettox3,kamekku
}

#new:SJIS $SJIS_802326F4
{
    ホネメットx２,カメック % honemettox2,kamekku
}

#new:SJIS $SJIS_8023270C
{
    ホネメットx２,カロン % honemettox2,karon
}

#new:SJIS $SJIS_80232724
{
    ホネメット,カロンx２ % honemetto,karonx2
}

#new:SJIS $SJIS_8023273C
{
    ホネメットx３ % honemettox3
}

#new:SJIS $SJIS_8023274C
{
    ホネメットx２ % honemettox2
}

#new:ASCII $ASCII_8023275C
{
    "kpa_14"
}

#new:ASCII $ASCII_80232764
{
    "kpa_13"
}

#new:ASCII $ASCII_8023276C
{
    "kpa_11"
}

#new:ASCII $ASCII_80232774
{
    "kpa_09"
}

#new:ASCII $ASCII_8023277C
{
    "kpa_08"
}

#new:ASCII $ASCII_80232784
{
    "kpa_07"
}

#new:ASCII $ASCII_8023278C
{
    "kpa_05"
}

#new:ASCII $ASCII_80232794
{
    "kpa_04c"
}

#new:ASCII $ASCII_8023279C
{
    "kpa_04b"
}

#new:ASCII $ASCII_802327A4
{
    "kpa_04"
}

#new:ASCII $ASCII_802327AC
{
    "kpa_03"
}

#new:ASCII $ASCII_802327B4
{
    "kpa_02"
}

#new:ASCII $ASCII_802327BC
{
    "kpa_01b"
}

#new:ASCII $ASCII_802327C4
{
    "kpa_01"
}

PADDING: 802327CC to 802327D0 (0069F1FC to 0069F200)
00000000

