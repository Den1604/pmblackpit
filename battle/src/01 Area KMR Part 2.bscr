% Script File: 01 Area KMR Part 2.bscr
% Decoded from: 439A90 to 447440 (01 Area KMR Part 2)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021A434
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021A434)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021A434)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218000
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021C244
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021C244)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021C244)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021840C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218280
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218500
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021DF84
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021DF84)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021DF84)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021868C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_80218500
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218780
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LW        A0, 8 (V0)
	LBU       V1, 6 (A0)
	ADDIU     V0, R0, 2
	SRLV      V1, V1, V0
	SB        V1, 6 (A0)
	LW        RA, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802187B0
{
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       ~Func:length2D
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	CLEAR     A0
	ADDIU     A2, R0, 5A
	COPY      A1, A0
	LIA       A3, $FloatTable_8021F984
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	COPY      A2, V1
	COPY      A0, V1
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021F984)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021F984)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	COPY      V1, A2
	COPY      V1, A0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021893C
{
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      S3, V0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	COPY      A0, S4
	JAL       ~Func:get_variable
	SUBU      S3, S3, S0
	COPY      S0, V0
	COPY      A0, S4
	LW        A1, 0 (S2)
	JAL       ~Func:get_variable
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	COPY      A0, S4
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	COPY      A2, V0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_802187B0
	CVT.S.W   F14, F14
	COPY      A0, S4
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       ~Func:set_variable
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218A30
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:get_actor
	LW        A0, 148 (A0)
	LW        A0, 8 (V0)
	LBU       V1, 6 (A0)
	ADDIU     V0, R0, 2
	SRLV      V1, V1, V0
	SB        V1, 6 (A0)
	LW        RA, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_80218A60
{
	ADDIU     SP, SP, FFD8
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A1, F0
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A3, F0
	ADDIU     A0, R0, 2
	JAL       ~Func:fx_walk_large
	SW        R0, 10 (SP)
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218B04 to 80218B10 (0043A594 to 0043A5A0)
00000000 00000000 00000000

#new:Function $Function_80218B10
{
	ADDIU     SP, SP, FFD0
	SDC1      F20, 18 (SP)
	MTC1      A1, F20
	SDC1      F22, 20 (SP)
	MTC1      A2, F22
	SW        S0, 10 (SP)
	SDC1      F24, 28 (SP)
	MTC1      A3, F24
	SW        RA, 14 (SP)
	JAL       ~Func:guMtxIdentF
	COPY      S0, A0
	MUL.S     F22, F20, F22
	NOP
	MUL.S     F20, F20, F24
	NOP
	LIF       F0, 1.0
	NOP
	SWC1      F0, 14 (S0)
	SWC1      F22, 10 (S0)
	SWC1      F20, 18 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 28 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80218B80
{
	ADDIU     SP, SP, FF78
	SW        S1, 54 (SP)
	COPY      S1, A0
	SW        RA, 5C (SP)
	SW        S2, 58 (SP)
	SW        S0, 50 (SP)
	SDC1      F28, 80 (SP)
	SDC1      F26, 78 (SP)
	SDC1      F24, 70 (SP)
	SDC1      F22, 68 (SP)
	SDC1      F20, 60 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	JAL       ~Func:get_model_list_index_from_tree_index
	COPY      A0, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S2
	JAL       ~Func:get_model_from_list_index
	MOV.S     F24, F0
	COPY      S1, V0
	LHU       V0, 0 (S1)
	ANDI      V0, V0, 400
	BNE       V0, R0, .o124
	ADDIU     S0, S1, 58
	MTC1      R0, F20
	MFC1      A2, F22
	MFC1      A1, F20
	MFC1      A3, F20
	JAL       ~Func:guTranslateF
	COPY      A0, S0
	MFC1      A1, F28
	MFC1      A2, F26
	MFC1      A3, F24
	JAL       $Function_80218B10
	ADDIU     A0, SP, 10
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, S0
	ADDIU     A0, SP, 10
	NEG.S     F22, F22
	MFC1      A1, F20
	MFC1      A2, F22
	JAL       ~Func:guTranslateF
	COPY      A3, A1
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, A1
	LHU       V0, 0 (S1)
	ORI       V0, V0, 1400
	BEQ       R0, R0, .o19C
	SH        V0, 0 (S1)
	.o124
	MTC1      R0, F20
	MFC1      A2, F22
	MFC1      A1, F20
	MFC1      A3, F20
	JAL       ~Func:guTranslateF
	ADDIU     A0, SP, 10
	ADDIU     A0, SP, 10
	ADDIU     S0, S1, 58
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, S0
	MFC1      A1, F28
	MFC1      A2, F26
	MFC1      A3, F24
	JAL       $Function_80218B10
	ADDIU     A0, SP, 10
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, S0
	ADDIU     A0, SP, 10
	NEG.S     F22, F22
	MFC1      A1, F20
	MFC1      A2, F22
	JAL       ~Func:guTranslateF
	COPY      A3, A1
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, A1
	.o19C
	LW        RA, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	LDC1      F28, 80 (SP)
	LDC1      F26, 78 (SP)
	LDC1      F24, 70 (SP)
	LDC1      F22, 68 (SP)
	LDC1      F20, 60 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 88
}

PADDING: 80218D4C to 80218D50 (0043A7DC to 0043A7E0)
00000000

#new:Function $Function_80218D50
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80218FB8 to 80218FC0 (0043AA48 to 0043AA50)
00000000 00000000

#new:Function $Function_80218FC0
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80219228 to 80219230 (0043ACB8 to 0043ACC0)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80219230
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80219498 to 802194A0 (0043AF28 to 0043AF30)
00000000 00000000

#new:Function $Function_802194A0
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_80219708
{
	ADDIU     SP, SP, FFE8
	ADDIU     A0, R0, 3D4
	SW        RA, 10 (SP)
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	ADDIU     A0, R0, F
	ADDIU     A1, R0, 5
	ADDIU     A2, R0, 37
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	JAL       ~Func:enable_world_fog
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80219748 to 80219750 (0043B1D8 to 0043B1E0)
00000000 00000000

#new:Vector3D $Vector3D_80219750
{
    14` 0` -10`
}

#new:Vector3D $Vector3D_8021975C
{
    54` 0` 32`
}

#new:Formation $Formation_00
{
    $BlueGoomba1 $Vector3D_80219750 0000000A 00000000 00000000 00000000 00000000
    $RedGoomba1 $Vector3D_8021975C 0000000A 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_802197A0
{
    10` 0` 10`
}

#new:Vector3D $Vector3D_802197AC
{
    70` 0` 30`
}

#new:Vector3D $Vector3D_802197B8
{
    125` 0` 20`
}

#new:Vector3D $Vector3D_802197C4
{
    -40` 0` -45`
}

#new:Formation $Formation_01
{
    $GoombaKing $Vector3D_802197A0 0000000A 00000000 00000000 00000000 00000000
    $RedGoomba2 $Vector3D_802197AC 0000000A 00000000 00000000 00000000 00000000
    $BlueGoomba2 $Vector3D_802197B8 0000000A 00000000 00000000 00000000 00000000
    $GoomnutTree $Vector3D_802197C4 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80225884 00000002 $Formation_00 $Stage_80224B7C 00000000
    $SJIS_80225860 00000004 $Formation_01 $Stage_8022582C 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_802258BC $Stage_80224730
    $ASCII_802258B4 $Stage_80224B7C
    $ASCII_802258AC $Stage_80224FCC
    $ASCII_802258A4 $Stage_802253D8
    $ASCII_8022589C $Stage_8022582C
    00000000 00000000
}

PADDING: 802198AC to 802198B0 (0043B33C to 0043B340)
00000000

#new:DefenseTable $DefenseTable_802198B0
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802198BC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80219968
{
    00800000 01000000 001800FF $IdleAnimations_802199B4 $DefenseTable_802198B0 00000000 00000000 00FD0000 00000000
}

#new:Actor $BlueGoomba1
{
    % stats
    [Index]        90b
    [Level]        20`b
    [MaxHP]         6`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802198BC
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80219968
    [Script]      $Script_Init_8021B268
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]    8`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802199B4
{
    .Status:Normal    00620102
    .Status:Stone     00620100
    .Status:Sleep     0062010D
    .Status:Poison    00620102
    .Status:Stop      00620100
    .Status:Static    00620102
    .Status:Paralyze  00620100
    .Status:Dizzy     0062010C
    .Status:Fear      0062010C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219A00
{
    .Status:Normal    00620106
    .Status:Stone     00620100
    .Status:Sleep     0062010D
    .Status:Poison    00620102
    .Status:Stop      00620100
    .Status:Static    00620106
    .Status:Paralyze  00620100
    .Status:Dizzy     0062010C
    .Status:Fear      0062010C
    .Status:End
}

#new:Script $Script_80219A4C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021A5A0 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80219A98 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219D74 )
    Return
    End
}

#new:Script $Script_Idle_80219A98
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219A00 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802199B4 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219A00 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802199B4 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_80219D74
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062010E
            SetConst  *Var[2]  0062010F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062010E
            SetConst  *Var[2]  0062010F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062010F
            ExecWait  $Script_8021B388
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  $Script_8021B388
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0062010C )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  $Script_8021B388
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620102
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  $Script_8021B388
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620106 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620102
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620106
            SetConst  *Var[2]  00620109
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620106
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00620102 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021A434
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021A5A0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620106 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00620102 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620108 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062010D )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620109 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00620108 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062010C )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021818C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620106 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_8021B268
{
    ExecWait  $Script_80219A4C
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021B2C8 )
    Return
    End
}

#new:Script $Script_TakeTurn_8021B2C8
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  30`
        Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
        Call  ActorSpeak        ( 000B00BF .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Mario! How'd you like some of this?
    EndIf
    ExecWait  $Script_TakeTurn_8021A5A0
    Return
    End
}

#new:Script $Script_8021B388
{
    Call  8027D32C  ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Set   *Var[2]  00000000
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Wait  10`
    Loop  00000018
        Call  SetActorYaw   ( .Actor:Self *Var[2] )
        Add   *Var[2]  0000001E
        Wait  1`
    EndLoop
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[2] *Var[3] *Var[4] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
    Call  DropStarPoints    ( .Actor:Self )
    Set   *Var[3]  00000000
    Loop  0000000C
        Call  SetActorRotation  ( .Actor:Self *Var[3] 00000000 00000000 )
        Add   *Var[3]  00000008
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000000 00000001 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Wait  30`
    Call  ActorExists       ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  ==  .True
        Call  GetActorHP    ( .Actor:Enemy1 *Var[0] )
    EndIf
    If  *Var[0]  !=  .False
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Enemy1 )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
        Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
        Call  SetAnimation      ( .Actor:Enemy1 00000001 0062000B )
        Call  ActorSpeak        ( 000B00C1 .Actor:Enemy1 00000001 FFFFFFFF FFFFFFFF ) % Blue, Blue Goomba!!!!! Gaaah! My little brother! Y ...
        Call  EnableIdleScript  ( .Actor:Enemy1 00000001 )
        Call  UseIdleAnimation  ( .Actor:Enemy1 .True )
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  30`
    EndIf
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021B6C0
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021B6CC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021B778
{
    00800000 01000000 001800FF $IdleAnimations_8021B7C4 $DefenseTable_8021B6C0 00000000 00000000 00FD0000 00000000
}

#new:Actor $RedGoomba1
{
    % stats
    [Index]        91b
    [Level]        20`b
    [MaxHP]         7`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021B6CC
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021B778
    [Script]      $Script_Init_8021D078
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]    8`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021B7C4
{
    .Status:Normal    00620002
    .Status:Stone     00620000
    .Status:Sleep     0062000D
    .Status:Poison    00620002
    .Status:Stop      00620000
    .Status:Static    00620002
    .Status:Paralyze  00620000
    .Status:Dizzy     0062000C
    .Status:Fear      0062000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021B810
{
    .Status:Normal    00620006
    .Status:Stone     00620000
    .Status:Sleep     0062000D
    .Status:Poison    00620002
    .Status:Stop      00620000
    .Status:Static    00620006
    .Status:Paralyze  00620000
    .Status:Dizzy     0062000C
    .Status:Fear      0062000C
    .Status:End
}

#new:Script $Script_8021B85C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021C3B0 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021B8A8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021BB84 )
    Return
    End
}

#new:Script $Script_Idle_8021B8A8
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B810 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B7C4 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B810 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B7C4 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021BB84
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062000E
            SetConst  *Var[2]  0062000F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062000E
            SetConst  *Var[2]  0062000F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062000F
            ExecWait  $Script_8021D0C4
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  $Script_8021D0C4
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000C )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  $Script_8021D0C4
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  $Script_8021D0C4
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620006
            SetConst  *Var[2]  00620009
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00620002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021C244
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021C3B0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620006 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00620002 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620008 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021840C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000D )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620009 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00620008 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000C )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021840C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_8021D078
{
    ExecWait  $Script_8021B85C
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Return
    End
}

#new:Script $Script_8021D0C4
{
    Call  8027D32C  ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Set   *Var[2]  00000000
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Wait  10`
    Loop  00000018
        Call  SetActorYaw   ( .Actor:Self *Var[2] )
        Add   *Var[2]  0000001E
        Wait  1`
    EndLoop
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[2] *Var[3] *Var[4] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
    Call  DropStarPoints    ( .Actor:Self )
    Set   *Var[3]  00000000
    Loop  0000000C
        Call  SetActorRotation  ( .Actor:Self *Var[3] 00000000 00000000 )
        Add   *Var[3]  00000008
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000000 00000001 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Wait  30`
    Call  ActorExists       ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  ==  .True
        Call  GetActorHP    ( .Actor:Enemy0 *Var[0] )
    EndIf
    If  *Var[0]  !=  .False
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Enemy0 )
        Call  MoveBattleCamOver ( 00000014 )
        Wait  20`
        Call  UseIdleAnimation  ( .Actor:Enemy0 .False )
        Call  EnableIdleScript  ( .Actor:Enemy0 00000000 )
        Call  SetAnimation      ( .Actor:Enemy0 00000001 0062010B )
        Call  ActorSpeak        ( 000B00C0 .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) % Re... Red Goomba, my brother... Noooooo! You meani ...
        Call  EnableIdleScript  ( .Actor:Enemy0 00000001 )
        Call  UseIdleAnimation  ( .Actor:Enemy0 .True )
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000001E )
        Wait  30`
    EndIf
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

PADDING: 8021D3FC to 8021D400 (0043EE8C to 0043EE90)
00000000

#new:DefenseTable $DefenseTable_8021D400
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021D40C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021D4B8
{
    00800000 01000000 001800FF $IdleAnimations_8021D504 $DefenseTable_8021D400 00000000 00000000 00FD0000 00000000
}

#new:Actor $BlueGoomba2
{
    % stats
    [Index]        90b
    [Level]        20`b
    [MaxHP]         6`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021D40C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021D4B8
    [Script]      $Script_Init_8021EDB8
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]    8`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021D504
{
    .Status:Normal    00620102
    .Status:Stone     00620100
    .Status:Sleep     0062010D
    .Status:Poison    00620102
    .Status:Stop      00620100
    .Status:Static    00620102
    .Status:Paralyze  00620100
    .Status:Dizzy     0062010C
    .Status:Fear      0062010C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021D550
{
    .Status:Normal    00620106
    .Status:Stone     00620100
    .Status:Sleep     0062010D
    .Status:Poison    00620102
    .Status:Stop      00620100
    .Status:Static    00620106
    .Status:Paralyze  00620100
    .Status:Dizzy     0062010C
    .Status:Fear      0062010C
    .Status:End
}

#new:Script $Script_8021D59C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E0F0 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021D5E8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D8C4 )
    Return
    End
}

#new:Script $Script_Idle_8021D5E8
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D550 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D504 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D550 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D504 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021D8C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062010E
            SetConst  *Var[2]  0062010F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062010E
            SetConst  *Var[2]  0062010F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062010F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0062010C )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620102
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620106 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620102
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620106
            SetConst  *Var[2]  00620109
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620106
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620109
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00620102 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021DF84
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021E0F0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620106 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00620102 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620108 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021868C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062010D )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620109 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00620108 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062010C )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021868C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620108 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620102 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620106 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_8021EDB8
{
    ExecWait  $Script_8021D59C
    Call  SetEnemyHP    ( .Actor:Self 00000002 )
    Call  $Function_80218780 ( )
    Return
    End
}

PADDING: 8021EDF4 to 8021EE00 (00440884 to 00440890)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021EE00
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021EE0C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021EEB8
{
    00800000 01000000 001800FF $IdleAnimations_8021EF04 $DefenseTable_8021EE00 00000000 00000000 00FD0000 00000000
}

#new:Actor $RedGoomba2
{
    % stats
    [Index]        91b
    [Level]        20`b
    [MaxHP]         7`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021EE0C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021EEB8
    [Script]      $Script_Init_802207B8
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]    8`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021EF04
{
    .Status:Normal    00620002
    .Status:Stone     00620000
    .Status:Sleep     0062000D
    .Status:Poison    00620002
    .Status:Stop      00620000
    .Status:Static    00620002
    .Status:Paralyze  00620000
    .Status:Dizzy     0062000C
    .Status:Fear      0062000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021EF50
{
    .Status:Normal    00620006
    .Status:Stone     00620000
    .Status:Sleep     0062000D
    .Status:Poison    00620002
    .Status:Stop      00620000
    .Status:Static    00620006
    .Status:Paralyze  00620000
    .Status:Dizzy     0062000C
    .Status:Fear      0062000C
    .Status:End
}

#new:Script $Script_8021EF9C
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FAF0 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021EFE8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F2C4 )
    Return
    End
}

#new:Script $Script_Idle_8021EFE8
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF50 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF04 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF50 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF04 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_8021F2C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062000E
            SetConst  *Var[2]  0062000F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062000E
            SetConst  *Var[2]  0062000F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0062000F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000C )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620006
            SetConst  *Var[2]  00620009
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00620009
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00620002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021F984
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021FAF0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620006 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00620002 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620008 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  0000000A
            Add   *Var[2]  00000003
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021893C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000D )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620009 )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00620008 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000014
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var[0]  000000B4
                Loop  00000004
                    Sub   *Var[0]  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000C )
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[0] )
                Set   *Var[0]  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var[4] *Var[5] *Var[6] )
                    Call  $Function_8021893C    ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var[0] )
                    Set   *Var[1]  *Var[4]
                    Set   *Var[2]  *Var[5]
                    Set   *Var[3]  *Var[6]
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000010 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Init_802207B8
{
    ExecWait  $Script_8021EF9C
    Call  SetEnemyHP    ( .Actor:Self 00000002 )
    Call  $Function_80218A30 ( )
    Return
    End
}

PADDING: 802207F4 to 80220800 (00442284 to 00442290)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_80220800
{
    .Status:Normal    00630001
    .Status:Stone     00630000
    .Status:Sleep     00630008
    .Status:Poison    00630000
    .Status:Stop      00630000
    .Status:Static    00630000
    .Status:Paralyze  00630000
    .Status:Dizzy     00630007
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80220844
{
    .Status:Normal    00630004
    .Status:Stone     00630000
    .Status:Sleep     00630008
    .Status:Poison    00630000
    .Status:Stop      00630000
    .Status:Static    00630000
    .Status:Paralyze  00630000
    .Status:Dizzy     00630007
    .Status:End
}

MISSING: 80220888 to 80220910 (00442318 to 004423A0)
00000001 00630007 0000000C 00630000 00000006 00630008 00000009 00630000
00000008 00630000 0000000B 00630000 00000005 00630000 00000004 00630007
00000000 00000001 00630009 0000000C 00630000 00000006 00630008 00000009
00630000 00000008 00630000 0000000B 00630000 00000005 00630000 00000004
00630007 00000000

#new:DefenseTable $DefenseTable_80220910
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022091C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod    -1`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_802209C8
{
    00020020 01000000 E70F00FF $IdleAnimations_80220800 $DefenseTable_80220910 00000000 00000000 00000000 00000000
    00800020 02000000 005000FF 00000000 $DefenseTable_80220910 00000000 00000000 00000000 00000000
}

#new:Actor $GoombaKing
{
    % stats
    [Index]        92b
    [Level]        49`b
    [MaxHP]        10`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022091C
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_802209C8
    [Script]      $Script_Init_80220A38
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]         56`b  80`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]   -6`b  38`b % dx dy
    [StatusIcon]   12`b  75`b % dx dy
}

#new:Script $Script_Init_80220A38
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221530 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80220B50 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220F34 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802229C4 )
    Exec  $Script_80222D9C *Var[0]
    Call  SetActorVar   ( .Actor:Self 00000004 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80220B50
{
    Label  0
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Wait  *Var[0]
    Label  1
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  0035D000
        Wait  1`
        Goto  1
    EndIf
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220844 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220800 )
    Wait  20`
    Label  2
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  0035D000
        Wait  1`
        Goto  2
    EndIf
    Call  SetGoalToHome     ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220844 )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal     ( .Actor:Self 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220800 )
    Wait  80`
    Goto  0
    Return
    End
}

#new:Script $Script_80220DB0
{
    Call  UseCamPreset  ( 00000002 )
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
    Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
    Call  AddGoalPos    ( .Actor:Self 0000000F 00000000 00000000 )
    Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
    Call  AddGoalPos    ( .Actor:Self 00000005 00000000 00000000 )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
    Return
    End
}

#new:Script $Script_HandleEvent_80220F34
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  DoNormalHit
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0063000D
            SetConst  *Var[2]  0063000E
            ExecWait  DoBurnHit
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  $Script_80220DB0
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630004
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  DoShockHit
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Kill  *Var[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  $Script_80222F50
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  DoNormalHit
            Wait  10`
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Kill  *Var[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  $Script_80222F50
            Return
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0063000D
            SetConst  *Var[2]  0063000E
            ExecWait  DoBurnHit
            Wait  10`
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Kill  *Var[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0063000E
            ExecWait  $Script_80222F50
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  DoSpinSmashHit
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Kill  *Var[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630006
            ExecWait  $Script_80222F50
            Return
        Case  ==  .Event:SpikeContact % 2A
            Call  SetAnimation  ( .Actor:Self 00000001 00630006 )
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
        Case  ==  .Event:EndFirstStrike % 35
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630001
            ExecWait  DoReturnHome
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00630001
            ExecWait  DoRecover
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80221530
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  GetActorVar   ( .Actor:Enemy3 00000006 *Var[0] )
        If  *Var[0]  !=  00000000
            Call  RandInt   ( 00000064 *Var[1] )
            If  *Var[1]  <  0000003C
                Sub   *Var[0]  00000001
                Call  SetActorVar   ( .Actor:Enemy3 00000006 *Var[0] )
                ExecWait  $Script_80221CD4
                Return
            EndIf
        EndIf
    EndIf
    ExecWait  $Script_80221680
    Return
    Return
    End
}

#new:Script $Script_80221680
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  UseCamPreset      ( 0000003F )
        Call  AddBattleCamZoom  ( FFFFFF9C )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000001E )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Else
        Call  UseCamPreset      ( 0000003F )
        Call  AddBattleCamZoom  ( FFFFFF9C )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 00000014 )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos        ( .Actor:Self 00000020 00000000 00000000 )
    Else
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos        ( .Actor:Self 0000000C 00000000 00000000 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
    Wait  8`
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
        Wait  10`
        Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00630005 )
    Set   *Var[0]  00000000
    Loop  00000014
        Add   *Var[0]  00000012
        Call  SetActorYaw   ( .Actor:Self *Var[0] )
        Wait  1`
    EndLoop
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00630007 )
            Set   *Var[0]  00000000
            Loop  00000014
                Add   *Var[0]  00000012
                Call  SetActorYaw   ( .Actor:Self *Var[0] )
                Wait  1`
            EndLoop
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00630001 )
    Switch  *Var[A]
        Default
            Wait  20`
            Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80221CD4
{
    Call  UseCamPreset  ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver     ( 00000028 )
    Wait  15`
    Call  8024ECF8      ( 00000000 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00630009 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
    Call  PlaySoundAtActor      ( .Actor:Self 000020B4 )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver     ( 0000001E )
    Call  SetAnimation  ( .Actor:Self 00000001 00630000 )
    Thread
        Call  StartRumble       ( 0000000B )
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000
            Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[4.0] )
        EndIf
        Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
        Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFB0 0000007D 00000000 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFF1 00000087 00000000 00000055 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:DropLeaves:Random 00000064 00000067 00000000 00000046 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Wait  12`
                Call  PlaySoundAtPart   ( .Actor:Enemy3 00000003 00000301 )
            EndThread
            Thread
                Wait  10`
                Call  SetPartJumpGravity    ( .Actor:Enemy3 00000003 *Fixed[1.5] )
                Call  GetPartOffset ( .Actor:Enemy3 00000003 *Var[0] *Var[1] *Var[2] )
                Call  FallPartTo    ( .Actor:Enemy3 00000003 *Var[0] 0000000A *Var[2] 0000000E )
                Sub   *Var[0]  0000000C
                Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var[0] 0000000A *Var[2] 0000000A .True )
                Sub   *Var[0]  00000007
                Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var[0] 0000000A *Var[2] 00000007 .True )
                Loop  00000014
                    Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .False )
                    Wait  1`
                    Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .True )
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  5`
                Call  PlaySoundAtPart   ( .Actor:Enemy3 00000004 00000301 )
            EndThread
            Thread
                Wait  3`
                Call  SetPartJumpGravity    ( .Actor:Enemy3 00000004 *Fixed[1.5] )
                Call  GetPartOffset ( .Actor:Enemy3 00000004 *Var[0] *Var[1] *Var[2] )
                Call  FallPartTo    ( .Actor:Enemy3 00000004 *Var[0] 0000000A *Var[2] 0000000F )
                Sub   *Var[0]  0000000C
                Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var[0] 0000000A *Var[2] 0000000A .True )
                Sub   *Var[0]  00000007
                Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var[0] 0000000A *Var[2] 00000007 .True )
                Loop  00000014
                    Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .False )
                    Wait  1`
                    Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .True )
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  17`
                Call  PlaySoundAtPart   ( .Actor:Enemy3 00000005 00000301 )
            EndThread
            Thread
                Wait  15`
                Call  SetPartJumpGravity    ( .Actor:Enemy3 00000005 *Fixed[1.5] )
                Call  GetPartOffset ( .Actor:Enemy3 00000005 *Var[0] *Var[1] *Var[2] )
                Call  FallPartTo    ( .Actor:Enemy3 00000005 *Var[0] 0000000A *Var[2] 00000011 )
                Add   *Var[0]  0000000C
                Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var[0] 0000000A *Var[2] 0000000A .True )
                Add   *Var[0]  00000007
                Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var[0] 0000000A *Var[2] 00000007 .True )
                Loop  00000014
                    Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .False )
                    Wait  1`
                    Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .True )
                    Wait  1`
                EndLoop
            EndThread
            Wait  15`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  12`
        Call  PlaySoundAtPart   ( .Actor:Enemy3 00000003 00000301 )
    EndThread
    Thread
        Wait  10`
        Call  SetPartJumpGravity    ( .Actor:Enemy3 00000003 *Fixed[1.5] )
        Call  GetPartOffset ( .Actor:Enemy3 00000003 *Var[0] *Var[1] *Var[2] )
        Call  FallPartTo    ( .Actor:Enemy3 00000003 *Var[0] 00000023 *Var[2] 0000000E )
        Sub   *Var[0]  0000000C
        Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var[0] 0000000A *Var[2] 0000000A .True )
        Sub   *Var[0]  00000007
        Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var[0] 0000000A *Var[2] 00000007 .True )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .False )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .True )
            Wait  1`
        EndLoop
    EndThread
    Thread
        Wait  5`
        Call  PlaySoundAtPart   ( .Actor:Enemy3 00000004 00000301 )
    EndThread
    Thread
        Wait  3`
        Call  SetPartJumpGravity    ( .Actor:Enemy3 00000004 *Fixed[1.5] )
        Call  GetPartOffset ( .Actor:Enemy3 00000004 *Var[0] *Var[1] *Var[2] )
        Call  FallPartTo    ( .Actor:Enemy3 00000004 *Var[0] 0000000A *Var[2] 0000000F )
        Sub   *Var[0]  0000000C
        Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var[0] 0000000A *Var[2] 0000000A .True )
        Sub   *Var[0]  00000007
        Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var[0] 0000000A *Var[2] 00000007 .True )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .False )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .True )
            Wait  1`
        EndLoop
    EndThread
    Thread
        Wait  17`
        Call  PlaySoundAtPart   ( .Actor:Enemy3 00000005 00000301 )
    EndThread
    Thread
        Wait  15`
        Call  SetPartJumpGravity    ( .Actor:Enemy3 00000005 *Fixed[1.5] )
        Call  GetPartOffset ( .Actor:Enemy3 00000005 *Var[0] *Var[1] *Var[2] )
        Call  FallPartTo    ( .Actor:Enemy3 00000005 *Var[0] 0000000A *Var[2] 00000011 )
        Add   *Var[0]  0000000C
        Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var[0] 0000000A *Var[2] 0000000A .True )
        Add   *Var[0]  00000007
        Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var[0] 0000000A *Var[2] 00000007 .True )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .False )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .True )
            Wait  1`
        EndLoop
    EndThread
    Wait  24`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
    Switch  *Var[0]
        Case  ==  0000000A % A
            Return
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_NextTurn_802229C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  802535B4  ( 00000000 )
                Call  UseCamPreset      ( 0000000D )
                Call  BattleCamTargetActor  ( .Actor:Enemy1 )
                Call  MoveBattleCamOver ( 00000014 )
                Wait  20`
                Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
                Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
                Call  ActorSpeak        ( 000B00CB .Actor:Enemy1 00000001 0062000A 0062000A ) % Beat him up, King Goomba!!
                Call  EnableIdleScript  ( .Actor:Enemy1 00000001 )
                Call  UseIdleAnimation  ( .Actor:Enemy1 .True )
                Call  UseCamPreset      ( 0000000D )
                Call  BattleCamTargetActor  ( .Actor:Enemy2 )
                Call  MoveBattleCamOver ( 0000000A )
                Wait  10`
                Call  UseIdleAnimation  ( .Actor:Enemy2 .False )
                Call  EnableIdleScript  ( .Actor:Enemy2 00000000 )
                Call  ActorSpeak        ( 000B00CC .Actor:Enemy2 00000001 0062010A 0062010A ) % We've got your back!
                Call  EnableIdleScript  ( .Actor:Enemy2 00000001 )
                Call  UseIdleAnimation  ( .Actor:Enemy2 .True )
                Call  UseCamPreset      ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Enemy0 )
                Call  MoveBattleCamOver ( 00000014 )
                Wait  20`
                Call  ActorSpeak        ( 000B00CD .Actor:Enemy0 00000001 00630009 00630009 ) % Leave him to me!
                Call  SetActorVar       ( .Actor:Self 00000003 00000001 )
                Call  UseCamPreset      ( 0000000E )
                Call  BattleCamTargetActor  ( .Actor:Player )
                Call  MoveBattleCamOver ( 0000000A )
                Wait  10`
                Call  UseIdleAnimation  ( .Actor:Partner .False )
                Call  UseIdleAnimation  ( .Actor:Player .False )
                Call  SetActorYaw       ( .Actor:Player 000000B4 )
                Call  SetAnimation      ( .Actor:Player 00000000 00010028 )
                Call  ActorSpeak        ( 000B00CE .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Hey Mario! I think maybe we ought to take out the  ...
                Call  SetAnimation      ( .Actor:Player 00000000 00010029 )
                Wait  15`
                Call  SetActorYaw       ( .Actor:Player 00000000 )
                Call  UseIdleAnimation  ( .Actor:Partner .True )
                Call  UseIdleAnimation  ( .Actor:Player .True )
                Call  UseCamPreset      ( 00000002 )
                Wait  20`
                Call  802535B4  ( 00000001 )
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80222D9C
{
    Label  0
    Wait  1`
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  !=  00630004
        Goto  0
    EndIf
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  !=  00630004
        Goto  0
    EndIf
    Call  StartRumble   ( 00000001 )
    Call  8026DF88      ( FFFFFF81 00000001 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  ==  00000000
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.2] )
            EndIf
        Else
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.7] )
            EndIf
        EndIf
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_80222F50
{
    Call  8027D32C  ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Set   *Var[2]  00000000
    Call  SetAnimation      ( .Actor:Self *Var[0] *Var[1] )
    Wait  10`
    Loop  00000018
        Call  SetActorYaw   ( .Actor:Self *Var[2] )
        Add   *Var[2]  0000001E
        Wait  1`
    EndLoop
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetActorPos       ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[2] *Var[3] *Var[4] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
    Call  DropStarPoints    ( .Actor:Self )
    Set   *Var[3]  00000000
    Loop  0000000C
        Call  SetActorRotation  ( .Actor:Self *Var[3] 00000000 00000000 )
        Add   *Var[3]  00000008
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Wait  30`
    Call  ActorExists       ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  ==  .True
        Call  GetActorHP    ( .Actor:Enemy1 *Var[0] )
    EndIf
    If  *Var[0]  !=  .False
        Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
        Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
        Call  ActorSpeak        ( 000B00CF .Actor:Enemy1 00000001 0062000B 0062000B ) % Oh no! It can't be! King Goomba!!
        Call  EnableIdleScript  ( .Actor:Enemy1 00000001 )
        Call  UseIdleAnimation  ( .Actor:Enemy1 .True )
    EndIf
    Call  ActorExists   ( .Actor:Enemy2 *Var[0] )
    If  *Var[0]  ==  .True
        Call  GetActorHP    ( .Actor:Enemy2 *Var[0] )
    EndIf
    If  *Var[0]  !=  .False
        Call  UseIdleAnimation  ( .Actor:Enemy2 .False )
        Call  EnableIdleScript  ( .Actor:Enemy2 00000000 )
        Call  ActorSpeak        ( 000B00D0 .Actor:Enemy2 00000001 0062010B 0062010B ) % I don't believe it! He beat our King Goomba!
        Call  EnableIdleScript  ( .Actor:Enemy2 00000001 )
        Call  UseIdleAnimation  ( .Actor:Enemy2 .True )
    EndIf
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_802232D0
{
    .Status:Normal    00640000
    .Status:End
}

#new:DefenseTable $DefenseTable_802232DC
{
    .Element:Normal 00000000
    .Element:Hammer 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802232F0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8022339C
{
    00800000 01000000 000A00FF 00000000 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
    00120000 02000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
    00120000 03000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
    00120000 04000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
    00120000 05000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
}

#new:Actor $GoomnutTree
{
    % stats
    [Index]        93b
    [Level]         1`b
    [MaxHP]        -1`b
    [Coins]         0`b
    [Flags]       02004004
    [StatusTable] $StatusTable_802232F0
    % ai
    [PartsCount]    5`s
    [PartsTable]  $PartsTable_8022339C
    [Script]      $Script_Init_80223488
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]   0`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]          0`b   0`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]    0`b   0`b % dx dy
    [StatusIcon]    0`b   0`b % dx dy
}

MISSING: 80223478 to 80223488 (00444F08 to 00444F18)
00000002 00000000 00000001 00000000

#new:Script $Script_Init_80223488
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223804 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80223678 )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80223688 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000006 00000001 )
    Call  SetPartPos    ( .Actor:Self 00000002 0000000A 0000008C 0000000A )
    Call  SetPartPos    ( .Actor:Self 00000003 FFFFFFA1 0000008C 0000000A )
    Call  SetPartPos    ( .Actor:Self 00000004 FFFFFF8D 00000082 00000000 )
    Call  SetPartPos    ( .Actor:Self 00000005 FFFFFFBF 00000076 00000005 )
    Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
    Call  SetPartTargetFlagBits ( .Actor:Self 00000001 00000004 .True )
    Return
    End
}

#new:Script $Script_Idle_80223678
{
    Return
    End
}

#new:Script $Script_HandleEvent_80223688
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  00000017 % 17
            ExecWait  $Script_80223D90
        EndCaseGroup
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:Immune % 19
            ExecWait  $Script_80223D90
            ExecWait  $Script_80223DBC
        EndCaseGroup
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_80223D90
            ExecWait  $Script_80223DBC
        Case  ==  .Event:Death % 20
            ExecWait  $Script_80223D90
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_80223D90
        Case  ==  .Event:SpikeContact % 2A
        Case  ==  .Event:ShockHit % 2F
        Case  ==  .Event:EndFirstStrike % 35
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80223804
{
    Switch  *Var[0]
        Case  ==  00000006
            Return
    EndSwitch
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  0000000A
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223890
{
    SetTimescale  *Fixed[2.0]
    UseIntBuffer  *Var[0]
    Get4Int  *Var[1] *Var[2] *Var[3] *Var[4]
    Get1Int  *Var[5]
    Call  GetActorPos   ( .Actor:Player *Var[6] *Var[F] *Var[8] )
    Call  PlaySound     ( 00000165 )
    Call  PlaySound     ( 00000166 )
    Thread
        Set   *Flag[00]  .False
        If  *Var[1]  !=  00000000
            Wait  1`
            Loop  00000005
                UseIntBuffer  *Var[1]
                Get1Int  *Var[2]
                Loop  *Var[2]
                    Get1Int  *Var[3]
                    Call  $Function_80218B80    ( *Var[3] *Fixed[0.1] *Fixed[0.2] *Var[F] 00000000 )
                    If  *Flag[00]  ==  .False
                        Set   *Flag[00]  .True
                        Call  PlaySoundAtModel  ( *Var[3] 00000166 00000000 )
                    EndIf
                EndLoop
                Wait  1`
                UseIntBuffer  *Var[1]
                Get1Int  *Var[2]
                Loop  *Var[2]
                    Get1Int  *Var[3]
                    Call  $Function_80218B80    ( *Var[3] *Fixed[0.1] *Fixed[-0.2] *Var[F] 00000000 )
                EndLoop
                Wait  1`
            EndLoop
            UseIntBuffer  *Var[1]
            Get1Int  *Var[2]
            Loop  *Var[2]
                Get1Int  *Var[3]
                Call  TranslateModel    ( *Var[3] 00000000 00000000 00000000 )
            EndLoop
            Wait  1`
        EndIf
    EndThread
    Thread
        Set   *Flag[00]  .False
        If  *Var[2]  !=  00000000
            Loop  00000005
                UseIntBuffer  *Var[2]
                Get1Int  *Var[3]
                Loop  *Var[3]
                    Get1Int  *Var[4]
                    Call  $Function_80218B80    ( *Var[4] *Fixed[0.1] *Fixed[0.2] *Var[F] 00000000 )
                    If  *Flag[00]  ==  .False
                        Set   *Flag[00]  .True
                        Call  PlaySoundAtModel  ( *Var[4] 00000165 00000000 )
                    EndIf
                EndLoop
                Wait  1`
                UseIntBuffer  *Var[2]
                Get1Int  *Var[3]
                Loop  *Var[3]
                    Get1Int  *Var[4]
                    Call  $Function_80218B80    ( *Var[4] *Fixed[0.1] *Fixed[-0.2] *Var[F] 00000000 )
                EndLoop
                Wait  1`
            EndLoop
            UseIntBuffer  *Var[2]
            Get1Int  *Var[3]
            Loop  *Var[3]
                Get1Int  *Var[4]
                Call  TranslateModel    ( *Var[4] 00000000 00000000 00000000 )
            EndLoop
            Wait  1`
        EndIf
    EndThread
    Thread
        If  *Var[4]  !=  00000000
            UseIntBuffer  *Var[4]
            Get1Int  *Var[5]
            Loop  *Var[5]
                Get3Int  *Var[6] *Var[7] *Var[8]
                Call  PlayEffect    ( ~FX:DropLeaves:Random *Var[6] *Var[7] *Var[8] 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndLoop
        EndIf
    EndThread
    Wait  15`
    Return
    End
}

#new:Unknown $???_80223D44
{
    00000002 00000021 00000024
}

#new:Unknown $???_80223D50
{
    00000003 00000026 00000027 00000028
}

#new:Unknown $???_80223D60
{
    00000002 FFFFFFF6 0000008C 00000000 00000064 0000008C 00000000
}

#new:Unknown $???_80223D7C
{
    $???_80223D44 $???_80223D50 00000000 $???_80223D60 00000000
}

#new:Script $Script_80223D90
{
    Set   *Var[0]  $???_80223D7C
    ExecWait  $Script_80223890
    Return
    End
}

#new:Script $Script_80223DBC
{
    Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFE7 00000078 00000000 0000005A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
    If  *Var[0]  !=  00000000
        Return
    EndIf
    Call  UseCamPreset  ( 0000000F )
    Call  BattleCamTargetActor  ( .Actor:Enemy0 )
    Wait  20`
    Call  SetActorVar   ( .Actor:Self 00000005 00000001 )
    Call  ActorExists   ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  ==  .False
        Call  SetGoalPos        ( .Actor:Self 0000000A 00000000 0000000A )
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
        Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
        Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
        Call  FallPartTo        ( .Actor:Self 00000002 0000000A 00000014 0000000A 00000014 )
        Call  JumpPartTo        ( .Actor:Self 00000002 0000001E 00000014 0000000A 0000000A .True )
        Call  JumpPartTo        ( .Actor:Self 00000002 00000028 00000014 0000000A 00000005 .True )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  1`
        EndLoop
        Return
    EndIf
    Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
    Call  GetStatusFlags    ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  !&  00080000
        Call  FallPartTo    ( .Actor:Self 00000002 0000000A 00000050 0000000A 0000000A )
    Else
        Call  FallPartTo    ( .Actor:Self 00000002 0000000A 00000020 0000000A 0000000A )
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetOwnerTarget    ( .Actor:Enemy0 00000002 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
    Call  ActorExists       ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  ==  .False
        Call  GetPartOffset ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000041
        Set   *Var[1]  00000014
        Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
        Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
        Add   *Var[0]  0000000C
        Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000008 .True )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  1`
        EndLoop
        Return
    EndIf
    Call  GetActorPos       ( .Actor:Enemy1 *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Enemy1 *Var[3] )
    If  *Var[3]  !&  00080000
        Add   *Var[1]  00000032
    Else
        Add   *Var[1]  00000014
    EndIf
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Call  SetOwnerTarget    ( .Actor:Enemy1 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
    Call  ActorExists       ( .Actor:Enemy2 *Var[0] )
    If  *Var[0]  ==  .False
        Call  GetPartOffset ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000023
        Set   *Var[1]  00000014
        Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
        Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
        Add   *Var[0]  0000000C
        Call  JumpPartTo    ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000008 .True )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Wait  1`
        EndLoop
        Return
    EndIf
    Call  GetActorPos       ( .Actor:Enemy2 *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Enemy2 *Var[3] )
    If  *Var[3]  !&  00080000
        Add   *Var[1]  00000032
    Else
        Add   *Var[1]  00000014
    EndIf
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Call  SetOwnerTarget    ( .Actor:Enemy2 00000001 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
    Call  GetPartOffset     ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Set   *Var[1]  00000014
    Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
    Add   *Var[0]  0000000C
    Call  JumpPartTo        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000008 .True )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
        Wait  1`
    EndLoop
    Return
    End
}

PADDING: 802246FC to 80224700 (0044618C to 00446190)
00000000

#new:Script $Script_BeforeBattle_80224700
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_80224720
{
    Return
    End
}

#new:Stage $Stage_80224730
{
    $ASCII_802258DC  % kmr_tex
    $ASCII_802258CC  % kmr_bt02_shape
    00000000
    $Script_BeforeBattle_80224700
    $Script_AfterBattle_80224720
    $ASCII_802258C4  % kmr_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80224758 to 80224760 (004461E8 to 004461F0)
00000000 00000000

#new:Script $Script_80224760
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218D50    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80224858
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218D50    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80224990
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218D50    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80224AE8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80224760
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80224760
    Return
    End
}

#new:Script $Script_AfterBattle_80224B60
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80224B70
{
    ~Model:kmr_bt03:n2
    ~Model:kmr_bt03:m4
    00000000
}

#new:Stage $Stage_80224B7C
{
    $ASCII_8022590C  % kmr_tex
    $ASCII_802258FC  % kmr_bt03_shape
    $ASCII_802258EC  % kmr_bt03_hit
    $Script_BeforeBattle_80224AE8
    $Script_AfterBattle_80224B60
    $ASCII_802258E4  % kmr_bg
    $ForegroundModelList_80224B70
    00000000
    00000000
    00000000
}

PADDING: 80224BA4 to 80224BB0 (00446634 to 00446640)
00000000 00000000 00000000

#new:Script $Script_80224BB0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218FC0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80224CA8
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218FC0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80224DE0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218FC0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80224F38
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80224BB0
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80224BB0
    Return
    End
}

#new:Script $Script_AfterBattle_80224FB0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80224FC0
{
    ~Model:kmr_bt04:m4
    ~Model:kmr_bt04:n2
    00000000
}

#new:Stage $Stage_80224FCC
{
    $ASCII_8022593C  % kmr_tex
    $ASCII_8022592C  % kmr_bt04_shape
    $ASCII_8022591C  % kmr_bt04_hit
    $Script_BeforeBattle_80224F38
    $Script_AfterBattle_80224FB0
    $ASCII_80225914  % kmr_bg
    $ForegroundModelList_80224FC0
    00000000
    00000000
    00000000
}

PADDING: 80224FF4 to 80225000 (00446A84 to 00446A90)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80225000
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219230    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802250F8
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219230    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80225230
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80219230    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80225388
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  EnableModel       ( ~Model:kmr_bt05:o302 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_802253BC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802253CC
{
    ~Model:kmr_bt05:n2
    ~Model:kmr_bt05:m4
    00000000
}

#new:Stage $Stage_802253D8
{
    $ASCII_8022596C  % kmr_tex
    $ASCII_8022595C  % kmr_bt05_shape
    $ASCII_8022594C  % kmr_bt05_hit
    $Script_BeforeBattle_80225388
    $Script_AfterBattle_802253BC
    $ASCII_80225944  % kmr_bg
    $ForegroundModelList_802253CC
    00000000
    00000000
    00000000
}

#new:Script $Script_80225400
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802194A0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802254F8
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802194A0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80225630
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_802194A0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80225788
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  $Function_80219708 ( )
    Set   *Var[0]  00000001
    Set   *Var[2]  00000000
    Exec  $Script_80225400
    Set   *Var[0]  00000004
    Set   *Var[2]  00000046
    Exec  $Script_80225400
    Return
    End
}

#new:Script $Script_AfterBattle_8022580C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022581C
{
    ~Model:kmr_bt06:n2
    ~Model:kmr_bt06:o303
    ~Model:kmr_bt06:ha3
    00000000
}

#new:Stage $Stage_8022582C
{
    $ASCII_8022599C  % kmr_tex
    $ASCII_8022598C  % kmr_bt06_shape
    $ASCII_8022597C  % kmr_bt06_hit
    $Script_BeforeBattle_80225788
    $Script_AfterBattle_8022580C
    $ASCII_80225974  % kmr_bg
    $ForegroundModelList_8022581C
    00000000
    00000000
    00000000
}

PADDING: 80225854 to 80225860 (004472E4 to 004472F0)
00000000 00000000 00000000

#new:SJIS $SJIS_80225860
{
    クリキング,クリレッド,クリブルー % kurikingu,kurireddo,kuriburu-
}

#new:SJIS $SJIS_80225884
{
    クリレッド,クリブルー % kurireddo,kuriburu-
}

#new:ASCII $ASCII_8022589C
{
    "kmr_06"
}

#new:ASCII $ASCII_802258A4
{
    "kmr_05"
}

#new:ASCII $ASCII_802258AC
{
    "kmr_04"
}

#new:ASCII $ASCII_802258B4
{
    "kmr_03"
}

#new:ASCII $ASCII_802258BC
{
    "kmr_02"
}

#new:ASCII $ASCII_802258C4
{
    "kmr_bg"
}

#new:ASCII $ASCII_802258CC
{
    "kmr_bt02_shape"
}

#new:ASCII $ASCII_802258DC
{
    "kmr_tex"
}

#new:ASCII $ASCII_802258E4
{
    "kmr_bg"
}

#new:ASCII $ASCII_802258EC
{
    "kmr_bt03_hit"
}

#new:ASCII $ASCII_802258FC
{
    "kmr_bt03_shape"
}

#new:ASCII $ASCII_8022590C
{
    "kmr_tex"
}

#new:ASCII $ASCII_80225914
{
    "kmr_bg"
}

#new:ASCII $ASCII_8022591C
{
    "kmr_bt04_hit"
}

#new:ASCII $ASCII_8022592C
{
    "kmr_bt04_shape"
}

#new:ASCII $ASCII_8022593C
{
    "kmr_tex"
}

#new:ASCII $ASCII_80225944
{
    "kmr_bg"
}

#new:ASCII $ASCII_8022594C
{
    "kmr_bt05_hit"
}

#new:ASCII $ASCII_8022595C
{
    "kmr_bt05_shape"
}

#new:ASCII $ASCII_8022596C
{
    "kmr_tex"
}

#new:ASCII $ASCII_80225974
{
    "kmr_bg"
}

#new:ASCII $ASCII_8022597C
{
    "kmr_bt06_hit"
}

#new:ASCII $ASCII_8022598C
{
    "kmr_bt06_shape"
}

#new:ASCII $ASCII_8022599C
{
    "kmr_tex"
}

PADDING: 802259A4 to 802259B0 (00447434 to 00447440)
00000000 00000000 00000000

