% Script File: 07 Area TRD Part 2.bscr
% Decoded from: 4B11F0 to 4CF1B0 (07 Area TRD Part 2)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218058
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      S1, V0
	ADDIU     V0, R0, FFFF
	BNE       S0, V0, .o6C
	ADDIU     V0, R0, 1
	JAL       8011D82C
	COPY      A0, S1
	BEQ       R0, R0, .o10C
	ADDIU     V0, R0, 2
	.o6C
	BEQ       S2, V0, .oD0
	SLTI      V0, S2, 2
	BEQ       V0, R0, .o8C
	ADDIU     V0, R0, 2
	BEQ       S2, R0, .o9C
	ORI       S2, R0, FFFF
	BEQ       R0, R0, .o10C
	NOP
	.o8C
	BEQ       S2, V0, .oFC
	ADDIU     V0, R0, 2
	BEQ       R0, R0, .o10C
	NOP
	.o9C
	LW        A0, 0 (S0)
	BEQ       A0, S2, .o10C
	ADDIU     V0, R0, 2
	JAL       ~Func:get_model_list_index_from_tree_index
	ADDIU     S0, S0, 4
	JAL       ~Func:get_model_from_list_index
	COPY      A0, V0
	COPY      A0, V0
	ADDIU     A1, R0, FFFF
	JAL       8011BC7C
	COPY      A2, S1
	BEQ       R0, R0, .o9C
	NOP
	.oD0
	ORI       S2, R0, FFFF
	.oD4
	LW        V0, 0 (S0)
	BEQ       V0, S2, .o108
	ADDIU     A1, R0, FFFF
	LHU       A0, 2 (S0)
	COPY      A2, S1
	ADDIU     S0, S0, 4
	JAL       8011B950
	CLEAR     A3
	BEQ       R0, R0, .oD4
	NOP
	.oFC
	LAW       V0, 801512F0
	SB        S1, 0 (V0)
	.o108
	ADDIU     V0, R0, 2
	.o10C
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021817C
{
	ADDIU     SP, SP, FFA8
	SW        S1, 34 (SP)
	COPY      S1, A0
	SW        RA, 54 (SP)
	SW        S8, 50 (SP)
	SW        S7, 4C (SP)
	SW        S6, 48 (SP)
	SW        S5, 44 (SP)
	SW        S4, 40 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S0, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S6, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S5, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	SW        V0, 28 (SP)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S8, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S7, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      V1, V0
	ADDIU     V0, R0, 2
	BEQ       S3, V0, .o144
	SLTI      V0, S3, 3
	BEQ       V0, R0, .o118
	ADDIU     V0, R0, 1
	BEQ       S3, V0, .o12C
	ANDI      A0, S6, FF
	BEQ       R0, R0, .o1A0
	NOP
	.o118
	ADDIU     V0, R0, 3
	BEQ       S3, V0, .o180
	ANDI      A0, S6, FF
	BEQ       R0, R0, .o1A0
	NOP
	.o12C
	ANDI      A1, S5, FF
	ANDI      A2, S4, FF
	JAL       ~Func:set_background_color_blend
	ANDI      A3, S2, FF
	BEQ       R0, R0, .o1A0
	NOP
	.o144
	ANDI      A0, S6, FF
	ANDI      A1, S5, FF
	ANDI      A2, S4, FF
	ANDI      A3, S2, FF
	LBU       V0, 2B (SP)
	SW        S0, 1C (SP)
	SW        V1, 20 (SP)
	SW        V0, 10 (SP)
	ANDI      V0, S8, FF
	SW        V0, 14 (SP)
	ANDI      V0, S7, FF
	JAL       8011BEB4
	SW        V0, 18 (SP)
	BEQ       R0, R0, .o1A0
	NOP
	.o180
	ANDI      A1, S5, FF
	ANDI      A2, S4, FF
	ANDI      A3, S2, FF
	LBU       V0, 2B (SP)
	SW        V0, 10 (SP)
	ANDI      V0, S8, FF
	JAL       8011BF98
	SW        V0, 14 (SP)
	.o1A0
	LW        RA, 54 (SP)
	LW        S8, 50 (SP)
	LW        S7, 4C (SP)
	LW        S6, 48 (SP)
	LW        S5, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_80218350
{
	ADDIU     SP, SP, FFE8
	ADDIU     A0, R0, 8
	SW        RA, 10 (SP)
	JAL       8014AF8C
	CLEAR     A1
	JAL       8014AEF8
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_8021837C
{
	ADDIU     SP, SP, FFE0
	SW        RA, 18 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	JAL       ~Func:get_actor
	COPY      A0, V0
	LWC1      F4, 18 (V0)
	LIF       F0, 15.0
	LWC1      F2, 54 (V0)
	SUB.S     F4, F4, F0
	SWC1      F2, 10 (SP)
	LW        A2, 1C (V0)
	LW        A3, 20 (V0)
	MFC1      A1, F4
	JAL       ~Func:play_movement_dust_effects
	ADDIU     A0, R0, 2
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 802183D4 to 802183E0 (004B15C4 to 004B15D0)
00000000 00000000 00000000

#new:Function $Function_802183E0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218438
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	ADDIU     A0, R0, 6
	LIA       A1, $End[80]
	MTC1      S3, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (A1)
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	COPY      A3, V0
	LIF       F2, 10.0
	LUI       A2, 3F80
	SUB.S     F0, F0, F2
	MTC1      S0, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 30 (A1)
	JAL       800712D0
	SWC1      F0, 2C (A1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218510
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 200
	COPY      A0, V0
	BEQ       A0, R0, .o30
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o30
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 201
	COPY      A0, V0
	BEQ       A0, R0, .o50
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o50
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 202
	COPY      A0, V0
	BEQ       A0, R0, .o70
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o70
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 203
	COPY      A0, V0
	BEQL      A0, R0, .o90
	CLEAR     V0
	LW        V1, 8C (A0)
	BNEL      V1, S0, .o90
	CLEAR     V0
	.o90
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802185B0
{
	ADDIU     SP, SP, FFA0
	SW        S2, 58 (SP)
	COPY      S2, A0
	SW        RA, 5C (SP)
	SW        S1, 54 (SP)
	SW        S0, 50 (SP)
	LW        S0, C (S2)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 204
	LW        S1, 94 (V0)
	ADDIU     V0, R0, 3
	BEQ       S1, V0, .oA4
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o4C
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o60
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o4C
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o108
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o60
	JAL       $Function_80218510
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80218510
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 34 (SP)
	.oA4
	JAL       $Function_80218510
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80218510
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80218510
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 40 (SP)
	.o108
	JAL       $Function_80218510
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 4
	JAL       $Function_80218510
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80218510
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80218510
	SWC1      F0, 40 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 44 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 48 (SP)
	LWC1      F0, 140 (V0)
	SWC1      F0, 4C (SP)
	.o188
	CLEAR     A0
	ADDIU     V0, S1, FFFF
	.o190
	BLEZ      V0, .o23C
	COPY      T1, V0
	ADDIU     T0, SP, 20
	COPY      A3, T0
	.o1A0
	SLT       V0, A0, S1
	BEQ       V0, R0, .o22C
	COPY      A2, A0
	COPY      A1, A3
	SLL       V0, A0, 1
	ADDU      V0, V0, A0
	SLL       V0, V0, 2
	ADDU      V1, V0, T0
	.o1C0
	LWC1      F2, 0 (A1)
	LWC1      F0, 0 (V1)
	C.LT.S    F2, F0
	NOP
	BC1F      .o220
	ADDIU     A2, A2, 1
	LW        T2, 0 (A1)
	LW        T3, 4 (A1)
	LW        T4, 8 (A1)
	SW        T2, 10 (SP)
	SW        T3, 14 (SP)
	SW        T4, 18 (SP)
	LW        T2, 0 (V1)
	LW        T3, 4 (V1)
	LW        T4, 8 (V1)
	SW        T2, 0 (A1)
	SW        T3, 4 (A1)
	SW        T4, 8 (A1)
	LW        T2, 10 (SP)
	LW        T3, 14 (SP)
	LW        T4, 18 (SP)
	SW        T2, 0 (V1)
	SW        T3, 4 (V1)
	SW        T4, 8 (V1)
	.o220
	SLT       V0, A2, S1
	BNE       V0, R0, .o1C0
	ADDIU     V1, V1, C
	.o22C
	ADDIU     A0, A0, 1
	SLT       V0, A0, T1
	BNE       V0, R0, .o1A0
	ADDIU     A3, A3, C
	.o23C
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	NOP
	ADDIU     A0, R0, 3
	LW        V1, 8C (V0)
	BEQ       S1, A0, .o324
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o270
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o284
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o270
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o424
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o284
	BEQ       V1, A0, .o29C
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o2E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o29C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o2E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o324
	ADDIU     V0, R0, 5
	BEQ       V1, V0, .o39C
	SLTI      V0, V1, 6
	BEQ       V0, R0, .o348
	ADDIU     V0, R0, 6
	BEQ       V1, A0, .o358
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o348
	BEQ       V1, V0, .o3E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o358
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o39C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o3E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o424
	BEQ       V1, S1, .o4A0
	SLTI      V0, V1, 5
	BEQ       V0, R0, .o444
	ADDIU     V0, R0, 5
	BEQ       V1, A0, .o45C
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o444
	BEQ       V1, V0, .o4E4
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o528
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o45C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4A0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4E4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o528
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 44 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 48 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	COPY      A0, S2
	LWC1      F0, 4C (SP)
	.o568
	LW        A1, 0 (S0)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	NOP
	.o57C
	LW        RA, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80218B48
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	COPY      S0, V0
	SB        V0, 1F0 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80218B94 to 80218BA0 (004B1D84 to 004B1D90)
00000000 00000000 00000000

#new:Function $Function_80218BA0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218BF8
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	ADDIU     A0, R0, 6
	LIA       A1, $End[310]
	MTC1      S3, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (A1)
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	COPY      A3, V0
	LIF       F2, 10.0
	LUI       A2, 3F80
	SUB.S     F0, F0, F2
	MTC1      S0, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 30 (A1)
	JAL       800712D0
	SWC1      F0, 2C (A1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218CD0
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 200
	COPY      A0, V0
	BEQ       A0, R0, .o30
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o30
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 201
	COPY      A0, V0
	BEQ       A0, R0, .o50
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o50
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 202
	COPY      A0, V0
	BEQ       A0, R0, .o70
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o70
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 203
	COPY      A0, V0
	BEQL      A0, R0, .o90
	CLEAR     V0
	LW        V1, 8C (A0)
	BNEL      V1, S0, .o90
	CLEAR     V0
	.o90
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218D70
{
	ADDIU     SP, SP, FFA0
	SW        S2, 58 (SP)
	COPY      S2, A0
	SW        RA, 5C (SP)
	SW        S1, 54 (SP)
	SW        S0, 50 (SP)
	LW        S0, C (S2)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 204
	LW        S1, 94 (V0)
	ADDIU     V0, R0, 3
	BEQ       S1, V0, .oA4
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o4C
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o60
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o4C
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o108
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o60
	JAL       $Function_80218CD0
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80218CD0
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 34 (SP)
	.oA4
	JAL       $Function_80218CD0
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80218CD0
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80218CD0
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 40 (SP)
	.o108
	JAL       $Function_80218CD0
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 4
	JAL       $Function_80218CD0
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80218CD0
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80218CD0
	SWC1      F0, 40 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 44 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 48 (SP)
	LWC1      F0, 140 (V0)
	SWC1      F0, 4C (SP)
	.o188
	CLEAR     A0
	ADDIU     V0, S1, FFFF
	.o190
	BLEZ      V0, .o23C
	COPY      T1, V0
	ADDIU     T0, SP, 20
	COPY      A3, T0
	.o1A0
	SLT       V0, A0, S1
	BEQ       V0, R0, .o22C
	COPY      A2, A0
	COPY      A1, A3
	SLL       V0, A0, 1
	ADDU      V0, V0, A0
	SLL       V0, V0, 2
	ADDU      V1, V0, T0
	.o1C0
	LWC1      F2, 0 (A1)
	LWC1      F0, 0 (V1)
	C.LT.S    F2, F0
	NOP
	BC1F      .o220
	ADDIU     A2, A2, 1
	LW        T2, 0 (A1)
	LW        T3, 4 (A1)
	LW        T4, 8 (A1)
	SW        T2, 10 (SP)
	SW        T3, 14 (SP)
	SW        T4, 18 (SP)
	LW        T2, 0 (V1)
	LW        T3, 4 (V1)
	LW        T4, 8 (V1)
	SW        T2, 0 (A1)
	SW        T3, 4 (A1)
	SW        T4, 8 (A1)
	LW        T2, 10 (SP)
	LW        T3, 14 (SP)
	LW        T4, 18 (SP)
	SW        T2, 0 (V1)
	SW        T3, 4 (V1)
	SW        T4, 8 (V1)
	.o220
	SLT       V0, A2, S1
	BNE       V0, R0, .o1C0
	ADDIU     V1, V1, C
	.o22C
	ADDIU     A0, A0, 1
	SLT       V0, A0, T1
	BNE       V0, R0, .o1A0
	ADDIU     A3, A3, C
	.o23C
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	NOP
	ADDIU     A0, R0, 3
	LW        V1, 8C (V0)
	BEQ       S1, A0, .o324
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o270
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o284
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o270
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o424
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o284
	BEQ       V1, A0, .o29C
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o2E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o29C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o2E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o324
	ADDIU     V0, R0, 5
	BEQ       V1, V0, .o39C
	SLTI      V0, V1, 6
	BEQ       V0, R0, .o348
	ADDIU     V0, R0, 6
	BEQ       V1, A0, .o358
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o348
	BEQ       V1, V0, .o3E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o358
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o39C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o3E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o424
	BEQ       V1, S1, .o4A0
	SLTI      V0, V1, 5
	BEQ       V0, R0, .o444
	ADDIU     V0, R0, 5
	BEQ       V1, A0, .o45C
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o444
	BEQ       V1, V0, .o4E4
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o528
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o45C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4A0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4E4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o528
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 44 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 48 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	COPY      A0, S2
	LWC1      F0, 4C (SP)
	.o568
	LW        A1, 0 (S0)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	NOP
	.o57C
	LW        RA, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80219308
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	COPY      S0, V0
	SB        V0, 1F0 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80219354 to 80219360 (004B2544 to 004B2550)
00000000 00000000 00000000

#new:Function $Function_80219360
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802193B8
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	ADDIU     A0, R0, 6
	LIA       A1, $End[5A0]
	MTC1      S3, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (A1)
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	COPY      A3, V0
	LIF       F2, 10.0
	LUI       A2, 3F80
	SUB.S     F0, F0, F2
	MTC1      S0, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 30 (A1)
	JAL       800712D0
	SWC1      F0, 2C (A1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80219490
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 200
	COPY      A0, V0
	BEQ       A0, R0, .o30
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o30
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 201
	COPY      A0, V0
	BEQ       A0, R0, .o50
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o50
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 202
	COPY      A0, V0
	BEQ       A0, R0, .o70
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o70
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 203
	COPY      A0, V0
	BEQL      A0, R0, .o90
	CLEAR     V0
	LW        V1, 8C (A0)
	BNEL      V1, S0, .o90
	CLEAR     V0
	.o90
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219530
{
	ADDIU     SP, SP, FFA0
	SW        S2, 58 (SP)
	COPY      S2, A0
	SW        RA, 5C (SP)
	SW        S1, 54 (SP)
	SW        S0, 50 (SP)
	LW        S0, C (S2)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 204
	LW        S1, 94 (V0)
	ADDIU     V0, R0, 3
	BEQ       S1, V0, .oA4
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o4C
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o60
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o4C
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o108
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o60
	JAL       $Function_80219490
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80219490
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 34 (SP)
	.oA4
	JAL       $Function_80219490
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80219490
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80219490
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 40 (SP)
	.o108
	JAL       $Function_80219490
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 4
	JAL       $Function_80219490
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80219490
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80219490
	SWC1      F0, 40 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 44 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 48 (SP)
	LWC1      F0, 140 (V0)
	SWC1      F0, 4C (SP)
	.o188
	CLEAR     A0
	ADDIU     V0, S1, FFFF
	.o190
	BLEZ      V0, .o23C
	COPY      T1, V0
	ADDIU     T0, SP, 20
	COPY      A3, T0
	.o1A0
	SLT       V0, A0, S1
	BEQ       V0, R0, .o22C
	COPY      A2, A0
	COPY      A1, A3
	SLL       V0, A0, 1
	ADDU      V0, V0, A0
	SLL       V0, V0, 2
	ADDU      V1, V0, T0
	.o1C0
	LWC1      F2, 0 (A1)
	LWC1      F0, 0 (V1)
	C.LT.S    F2, F0
	NOP
	BC1F      .o220
	ADDIU     A2, A2, 1
	LW        T2, 0 (A1)
	LW        T3, 4 (A1)
	LW        T4, 8 (A1)
	SW        T2, 10 (SP)
	SW        T3, 14 (SP)
	SW        T4, 18 (SP)
	LW        T2, 0 (V1)
	LW        T3, 4 (V1)
	LW        T4, 8 (V1)
	SW        T2, 0 (A1)
	SW        T3, 4 (A1)
	SW        T4, 8 (A1)
	LW        T2, 10 (SP)
	LW        T3, 14 (SP)
	LW        T4, 18 (SP)
	SW        T2, 0 (V1)
	SW        T3, 4 (V1)
	SW        T4, 8 (V1)
	.o220
	SLT       V0, A2, S1
	BNE       V0, R0, .o1C0
	ADDIU     V1, V1, C
	.o22C
	ADDIU     A0, A0, 1
	SLT       V0, A0, T1
	BNE       V0, R0, .o1A0
	ADDIU     A3, A3, C
	.o23C
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	NOP
	ADDIU     A0, R0, 3
	LW        V1, 8C (V0)
	BEQ       S1, A0, .o324
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o270
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o284
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o270
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o424
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o284
	BEQ       V1, A0, .o29C
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o2E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o29C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o2E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o324
	ADDIU     V0, R0, 5
	BEQ       V1, V0, .o39C
	SLTI      V0, V1, 6
	BEQ       V0, R0, .o348
	ADDIU     V0, R0, 6
	BEQ       V1, A0, .o358
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o348
	BEQ       V1, V0, .o3E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o358
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o39C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o3E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o424
	BEQ       V1, S1, .o4A0
	SLTI      V0, V1, 5
	BEQ       V0, R0, .o444
	ADDIU     V0, R0, 5
	BEQ       V1, A0, .o45C
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o444
	BEQ       V1, V0, .o4E4
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o528
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o45C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4A0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4E4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o528
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 44 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 48 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	COPY      A0, S2
	LWC1      F0, 4C (SP)
	.o568
	LW        A1, 0 (S0)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	NOP
	.o57C
	LW        RA, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80219AC8
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	COPY      S0, V0
	SB        V0, 1F0 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80219B14 to 80219B20 (004B2D04 to 004B2D10)
00000000 00000000 00000000

#new:Function $Function_80219B20
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219B78
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	ADDIU     A0, R0, 6
	LIA       A1, $End[830]
	MTC1      S3, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 28 (A1)
	MTC1      S2, F0
	NOP
	CVT.S.W   F0, F0
	COPY      A3, V0
	LIF       F2, 10.0
	LUI       A2, 3F80
	SUB.S     F0, F0, F2
	MTC1      S0, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 30 (A1)
	JAL       800712D0
	SWC1      F0, 2C (A1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80219C50
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 200
	COPY      A0, V0
	BEQ       A0, R0, .o30
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o30
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 201
	COPY      A0, V0
	BEQ       A0, R0, .o50
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o50
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 202
	COPY      A0, V0
	BEQ       A0, R0, .o70
	NOP
	LW        V0, 8C (A0)
	BEQ       V0, S0, .o90
	COPY      V0, A0
	.o70
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 203
	COPY      A0, V0
	BEQL      A0, R0, .o90
	CLEAR     V0
	LW        V1, 8C (A0)
	BNEL      V1, S0, .o90
	CLEAR     V0
	.o90
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219CF0
{
	ADDIU     SP, SP, FFA0
	SW        S2, 58 (SP)
	COPY      S2, A0
	SW        RA, 5C (SP)
	SW        S1, 54 (SP)
	SW        S0, 50 (SP)
	LW        S0, C (S2)
	JAL       ~Func:get_actor
	ADDIU     A0, R0, 204
	LW        S1, 94 (V0)
	ADDIU     V0, R0, 3
	BEQ       S1, V0, .oA4
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o4C
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o60
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o4C
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o108
	CLEAR     A0
	BEQ       R0, R0, .o190
	ADDIU     V0, S1, FFFF
	.o60
	JAL       $Function_80219C50
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80219C50
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 34 (SP)
	.oA4
	JAL       $Function_80219C50
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80219C50
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80219C50
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	BEQ       R0, R0, .o188
	SWC1      F0, 40 (SP)
	.o108
	JAL       $Function_80219C50
	ADDIU     A0, R0, 3
	LWC1      F0, 138 (V0)
	SWC1      F0, 20 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 24 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 4
	JAL       $Function_80219C50
	SWC1      F0, 28 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 2C (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 30 (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 5
	JAL       $Function_80219C50
	SWC1      F0, 34 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 38 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 3C (SP)
	LWC1      F0, 140 (V0)
	ADDIU     A0, R0, 6
	JAL       $Function_80219C50
	SWC1      F0, 40 (SP)
	LWC1      F0, 138 (V0)
	SWC1      F0, 44 (SP)
	LWC1      F0, 13C (V0)
	SWC1      F0, 48 (SP)
	LWC1      F0, 140 (V0)
	SWC1      F0, 4C (SP)
	.o188
	CLEAR     A0
	ADDIU     V0, S1, FFFF
	.o190
	BLEZ      V0, .o23C
	COPY      T1, V0
	ADDIU     T0, SP, 20
	COPY      A3, T0
	.o1A0
	SLT       V0, A0, S1
	BEQ       V0, R0, .o22C
	COPY      A2, A0
	COPY      A1, A3
	SLL       V0, A0, 1
	ADDU      V0, V0, A0
	SLL       V0, V0, 2
	ADDU      V1, V0, T0
	.o1C0
	LWC1      F2, 0 (A1)
	LWC1      F0, 0 (V1)
	C.LT.S    F2, F0
	NOP
	BC1F      .o220
	ADDIU     A2, A2, 1
	LW        T2, 0 (A1)
	LW        T3, 4 (A1)
	LW        T4, 8 (A1)
	SW        T2, 10 (SP)
	SW        T3, 14 (SP)
	SW        T4, 18 (SP)
	LW        T2, 0 (V1)
	LW        T3, 4 (V1)
	LW        T4, 8 (V1)
	SW        T2, 0 (A1)
	SW        T3, 4 (A1)
	SW        T4, 8 (A1)
	LW        T2, 10 (SP)
	LW        T3, 14 (SP)
	LW        T4, 18 (SP)
	SW        T2, 0 (V1)
	SW        T3, 4 (V1)
	SW        T4, 8 (V1)
	.o220
	SLT       V0, A2, S1
	BNE       V0, R0, .o1C0
	ADDIU     V1, V1, C
	.o22C
	ADDIU     A0, A0, 1
	SLT       V0, A0, T1
	BNE       V0, R0, .o1A0
	ADDIU     A3, A3, C
	.o23C
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	NOP
	ADDIU     A0, R0, 3
	LW        V1, 8C (V0)
	BEQ       S1, A0, .o324
	SLTI      V0, S1, 4
	BEQ       V0, R0, .o270
	ADDIU     V0, R0, 2
	BEQ       S1, V0, .o284
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o270
	ADDIU     V0, R0, 4
	BEQ       S1, V0, .o424
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o284
	BEQ       V1, A0, .o29C
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o2E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o29C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o2E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o324
	ADDIU     V0, R0, 5
	BEQ       V1, V0, .o39C
	SLTI      V0, V1, 6
	BEQ       V0, R0, .o348
	ADDIU     V0, R0, 6
	BEQ       V1, A0, .o358
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o348
	BEQ       V1, V0, .o3E0
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o358
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o39C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o3E0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o424
	BEQ       V1, S1, .o4A0
	SLTI      V0, V1, 5
	BEQ       V0, R0, .o444
	ADDIU     V0, R0, 5
	BEQ       V1, A0, .o45C
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o444
	BEQ       V1, V0, .o4E4
	ADDIU     V0, R0, 6
	BEQ       V1, V0, .o528
	NOP
	BEQ       R0, R0, .o57C
	NOP
	.o45C
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 20 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 24 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 28 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4A0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 2C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 30 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 34 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o4E4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 38 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 3C (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LWC1      F0, 40 (SP)
	BEQ       R0, R0, .o568
	COPY      A0, S2
	.o528
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 44 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	LWC1      F0, 48 (SP)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	COPY      A0, S2
	COPY      A0, S2
	LWC1      F0, 4C (SP)
	.o568
	LW        A1, 0 (S0)
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	JAL       ~Func:set_variable
	NOP
	.o57C
	LW        RA, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_8021A288
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        A0, 148 (S0)
	JAL       ~Func:get_actor
	LW        S1, C (S0)
	COPY      A0, S0
	LW        A1, 0 (S1)
	JAL       ~Func:get_variable
	COPY      S0, V0
	SB        V0, 1F0 (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 8021A2D4 to 8021A2E0 (004B34C4 to 004B34D0)
00000000 00000000 00000000

#new:Function $Function_8021A2E0
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 8021A548 to 8021A550 (004B3738 to 004B3740)
00000000 00000000

#new:Formation $Formation_00
{
    $GNinjakoopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $YNinjakoopa 00000000 00000009 00000000 00000000 00000000 00000000
    $BNinjakoopa 00000000 00000008 00000000 00000000 00000000 00000000
    $RNinjakoopa 00000000 00000007 00000000 00000000 00000000 00000000
    $FakeBowser 00000003 00000006 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80235D60 00000005 $Formation_00 $Stage_80231434 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80235DC4 $Stage_80231434
    $ASCII_80235DBC $Stage_802314AC
    $ASCII_80235DB4 $Stage_80231CB0
    $ASCII_80235DAC $Stage_802324D0
    $ASCII_80235DA4 $Stage_80232940
    $ASCII_80235D9C $Stage_80232CB8
    $ASCII_80235D94 $Stage_802334C0
    $ASCII_80235D8C $Stage_80233CC8
    $ASCII_80235D84 $Stage_80234510
    $ASCII_80235D7C $Stage_80234D58
    $ASCII_80235D74 $Stage_80235530
    $ASCII_80235D6C $Stage_80235D2C
    00000000 00000000
}

PADDING: 8021A66C to 8021A670 (004B385C to 004B3860)
00000000

#new:DefenseTable $DefenseTable_8021A670
{
    .Element:Normal 00000001
    .Element:Blast  00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8021A684
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_8021A690
{
    .Status:Normal      0`
    .Status:Default    -1`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021A73C
{
    .Status:Normal    00660004
    .Status:End
}

#new:PartsTable $PartsTable_8021A748
{
    00800001 0100000F D26E00FF $IdleAnimations_8021A73C $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00020000 02000000 000000FF 00000000 $DefenseTable_8021A684 00000000 00000000 00000000 00000000
    00020000 05000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00020000 03000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00020000 04000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00020000 06000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00020000 07000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00120000 08000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00120000 09000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00020000 0A000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
    00020000 0B000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000
}

#new:Actor $FakeBowser
{
    % stats
    [Index]        99b
    [Level]         0`b
    [MaxHP]        10`b
    [Coins]         0`b
    [Flags]       00000004
    [StatusTable] $StatusTable_8021A690
    % ai
    [PartsCount]   11`s
    [PartsTable]  $PartsTable_8021A748
    [Script]      $Script_Init_8021A968
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  90`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]        -71`b 125`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Unknown $???_8021A8FC
{
    00000009 0000000B 0000000C 0000000D 0000000F 00000010 00000011 00000012
    00000013 00000014 00000019 0000001A 0000001B 0000001C 0000001D 0000001F
    00000020 00000021 00000023 00000024 00000025 00000027 00000028 00000029
    0000002B 0000002D 0000FFFF
}

#new:Script $Script_Init_8021A968
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021EC98 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021D508 )
    Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_8021E6F0 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F410 )
    UseArray  $End[0]
    Call  SetActorVar   ( .Actor:Enemy4 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
    Set   *Array[0]  00000000
    Call  SetActorPos   ( .Actor:Self 00000060 00000000 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetPartTargetFlagBits ( .Actor:Self 00000002 00000004 .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021AAC4
{
    -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30
    -4.0108097E30 -4.0105002E30 -4.0105002E30 -4.0111192E30 -4.0105002E30 -4.0105002E30 -4.011274E30 -4.0105002E30
    -4.0105002E30 -4.0114286E30 -4.0105002E30 -4.0105002E30 -4.011738E30 -4.0105002E30 -4.0105002E30 -4.011738E30
    -4.0105002E30 -4.0105002E30 -4.011738E30 -4.0105002E30 -4.0105002E30 -4.011738E30 -4.0105002E30 -4.0105002E30
    -4.011738E30 -4.0105002E30 -4.0105002E30 -4.011738E30 -4.0105002E30 -4.0105002E30 -4.011738E30 -4.0105002E30
    -4.0105002E30 -4.011738E30 -4.0105002E30 -4.0105002E30 -4.0115834E30 -4.0105002E30 -4.0105002E30 -4.0114286E30
    -4.0105002E30 -4.0105002E30 -4.011274E30 -4.0105002E30 -4.0105002E30 -4.0114286E30 -4.0105002E30 -4.0105002E30
    -4.0111192E30 -4.0105002E30 -4.0105002E30 -4.0108097E30 -4.0105002E30 -4.0105002E30 -4.010655E30 -4.0105002E30
    -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 3.57E-43 3.57E-43 3.57E-43
}

#new:Script $Script_8021ABE4
{
    UseArray  $End[0]
    UseFloatBuffer  $FloatTable_8021AAC4
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000001
        Return
    EndIf
    Get3Float  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseFloatBuffer  $FloatTable_8021AAC4
        Get3Float  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetPartRotation   ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:FloatTable $FloatTable_8021ACCC
{
    -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0111192E30 -4.0105002E30 -4.0105002E30
    -4.0120476E30 -4.0105002E30 -4.0105002E30 -4.012976E30 -4.0105002E30 -4.0105002E30 -4.012976E30 -4.0105002E30
    -4.0105002E30 -4.012976E30 -4.0105002E30 -4.0105002E30 -4.012976E30 -4.0105002E30 -4.0105002E30 -4.0126666E30
    -4.0105002E30 -4.0105002E30 -4.0120476E30 -4.0105002E30 -4.0105002E30 -4.011738E30 -4.0105002E30 -4.0105002E30
    -4.0108097E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 3.57E-43 3.57E-43 3.57E-43
}

#new:Script $Script_8021AD68
{
    UseArray  $End[0]
    UseFloatBuffer  $FloatTable_8021ACCC
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000005
        Return
    EndIf
    Get3Float  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseFloatBuffer  $FloatTable_8021ACCC
        Get3Float  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetPartRotation   ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:FloatTable $FloatTable_8021AE50
{
    -4.0105002E30 -4.013595E30 -4.0105002E30 -4.01669E30 -4.0105002E30 -4.0120476E30 -4.0105002E30 -4.0105002E30
    -4.0105002E30 -4.0120476E30 -4.01669E30 -4.0105002E30 -4.013595E30 -4.0105002E30 -4.0105002E30 -4.0105002E30
    -4.0197847E30 -4.0105002E30 -4.0105002E30 -4.0120476E30 -4.0111192E30 -4.0197847E30 -4.0105002E30 -4.013595E30
    -4.0197847E30 -4.013595E30 -4.0105002E30 -4.0105002E30 -4.0228796E30 -4.0111192E30 -4.0105002E30 -4.0105002E30
    -4.0120476E30 -4.0120476E30 -4.0105002E30 -4.012976E30 -4.013595E30 -4.0105002E30 -4.0105002E30 -4.0105002E30
    -4.0197847E30 -4.0105002E30 -4.01669E30 -4.0105002E30 -4.0120476E30 -4.0105002E30 -4.0105002E30 -4.0105002E30
    -4.0105002E30 -4.0120476E30 -4.0105002E30 -4.013595E30 -4.0105002E30 -4.012976E30 -4.0105002E30 -4.01669E30
    -4.0105002E30 -4.0120476E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0120476E30 -4.0120476E30 -4.0197847E30
    -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 3.57E-43 3.57E-43 3.57E-43
}

#new:Script $Script_8021AF70
{
    UseArray  $End[0]
    UseFloatBuffer  $FloatTable_8021AE50
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000003
        Return
    EndIf
    Get3Float  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseFloatBuffer  $FloatTable_8021AE50
        Get3Float  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  RandInt   ( 00000064 *Var[A] )
    If  *Var[A]  <  00000032
        SetF  *Var[A]  *Fixed[0.0]
        SubF  *Var[A]  *Var[0]
        SetF  *Var[0]  *Var[A]
        SetF  *Var[A]  *Fixed[0.0]
        SubF  *Var[A]  *Var[1]
        SetF  *Var[1]  *Var[A]
    EndIf
    Call  SetPartRotation   ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021B0E4
{
    UseArray  $End[0]
    Call  $Function_80218000    ( 00000100 0000001E )
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 00000014 *Fixed[3.0] )
    EndThread
    Call  SetPartFlagBits   ( .Actor:Self 00000005 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000005 00000000 FFFFFFC4 00000000 )
    Set   *Var[1]  0000003C
    Call  SetPartPos        ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  0000003C
            Add   *Var[0]  00000014
            Call  SetPartRotation   ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Sub   *Var[0]  0000003C
    Set   *Var[1]  FFFFFF38
    Add   *Var[2]  00000064
    Call  SetPartJumpGravity    ( .Actor:Self 00000005 *Fixed[0.5] )
    Call  JumpPartTo    ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 0000003C .True )
    Wait  30`
    Call  PlaySoundAtModel      ( 0000000F 000001E2 00000000 )
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
    EndThread
    Call  $Function_80218000    ( 00000064 00000014 )
    Wait  20`
    Call  PlaySoundAtModel      ( 0000000B 000001E2 00000000 )
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Call  $Function_80218000    ( 00000096 00000014 )
    Wait  30`
    Call  PlaySoundAtModel      ( 00000009 000001E2 00000000 )
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.0] )
    EndThread
    Call  $Function_80218000    ( 00000064 00000014 )
    Wait  30`
    Call  PlaySoundAtModel      ( 0000001F 000001E2 00000000 )
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  $Function_80218000    ( 00000046 00000014 )
    Wait  20`
    Call  PlaySoundAtModel      ( 00000019 000001E2 00000000 )
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.0] )
    EndThread
    Call  $Function_80218000    ( 00000064 00000014 )
    Wait  20`
    Call  PlaySoundAtModel      ( 0000002B 000001E2 00000000 )
    Call  $Function_80218000    ( 0000003C 00000014 )
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.6] )
    EndThread
    Wait  20`
    Thread
        SetGroup  00000000
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
    EndThread
    Call  $Function_80218000    ( 0000001E 00000014 )
    Return
    End
}

#new:IntTable $IntTable_8021B5D0
{
    00000000 00000000 00000000 00000000 00000001 00000000 00000000 00000002
    00000000 00000000 00000003 00000000 00000000 00000004 00000000 00000000
    00000004 00000000 00000000 00000004 00000000 00000000 00000004 00000000
    00000000 00000004 00000000 00000000 00000003 00000000 00000000 00000003
    00000000 00000000 00000002 00000000 00000000 00000001 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF
}

#new:Script $Script_8021B6F0
{
    UseArray  $End[0]
    UseIntBuffer  $IntTable_8021B5D0
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000001
        Return
    EndIf
    Get3Int  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseIntBuffer  $IntTable_8021B5D0
        Get3Int  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetActorDispOffset    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021B7D4
{
    00000000 00000002 00000000 00000000 00000007 00000000 00000000 00000009
    00000000 00000000 00000009 00000000 00000000 00000007 00000000 00000000
    00000005 00000000 00000000 00000001 00000000 00000000 00000000 00000000
    00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 000000FF 000000FF 000000FF
}

#new:Script $Script_8021B864
{
    UseArray  $End[0]
    UseIntBuffer  $IntTable_8021B7D4
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000005
        Return
    EndIf
    Get3Int  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseIntBuffer  $IntTable_8021B7D4
        Get3Int  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetActorDispOffset    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021B948
{
    00000000 00000000 00000000 00000000 00000001 00000000 00000000 00000002
    00000000 00000000 00000003 00000000 00000000 00000004 00000000 00000000
    00000004 00000000 00000000 00000004 00000000 00000000 00000004 00000000
    00000000 00000004 00000000 00000000 00000003 00000000 00000000 00000003
    00000000 00000000 00000002 00000000 00000000 00000001 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF
}

#new:Script $Script_8021BA68
{
    UseArray  $End[0]
    UseIntBuffer  $IntTable_8021B948
    Label  0
    Set   *Var[0]  *Array[0]
    Switch  *Var[0]
        Case  ==  00000007
        Case  ==  0000000B
        Default
            Return
    EndSwitch
    Get3Int  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseIntBuffer  $IntTable_8021B948
        Get3Int  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetActorDispOffset    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021BB68
{
    00000000 00000001 00000000 00000000 00000004 00000000 00000000 00000010
    00000000 00000000 00000008 00000000 00000000 00000014 00000000 00000000
    00000008 00000000 00000000 0000000C 00000000 00000000 00000006 00000000
    00000000 00000000 00000000 00000000 00000006 00000000 00000000 00000000
    00000000 00000000 00000002 00000000 00000000 00000000 00000000 00000000
    00000002 00000000 00000000 00000000 00000000 00000000 00000002 00000000
    00000000 00000000 00000000 00000000 00000002 00000000 00000000 00000000
    00000000 00000000 00000002 00000000 00000000 00000000 00000000 00000000
    00000002 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF
}

#new:Script $Script_8021BC88
{
    UseArray  $End[0]
    UseIntBuffer  $IntTable_8021BB68
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000003
        Return
    EndIf
    Get3Int  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseIntBuffer  $IntTable_8021BB68
        Get3Int  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetActorDispOffset    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021BD6C
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000003 00000000 FFFFFFE2 00000000 )
    Set   *Var[1]  0000001E
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  00000050
            Add   *Var[0]  FFFFFFEC
            Call  SetPartRotation   ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Sub   *Var[0]  00000096
    Set   *Var[1]  FFFFFF38
    Sub   *Var[2]  000000C8
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.3] )
    Call  JumpPartTo    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000050 .True )
    Return
    End
}

#new:Script $Script_8021BF14
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 00000004 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000004 00000000 FFFFFFE8 00000000 )
    Set   *Var[1]  00000018
    Call  SetPartPos        ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  0000003C
            Add   *Var[0]  00000004
            Add   *Var[1]  FFFFFFFF
            Call  SetPartRotation   ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Add   *Var[0]  0000001E
    Set   *Var[1]  FFFFFF38
    Add   *Var[2]  00000096
    Call  SetPartJumpGravity    ( .Actor:Self 00000004 *Fixed[0.5] )
    Call  JumpPartTo    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 0000003C .True )
    Return
    End
}

#new:IntTable $IntTable_8021C0CC
{
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 FFFFFFFF
    00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFE 00000000 00000000
    FFFFFFFE 00000000 00000000 FFFFFFFE 00000000 00000000 FFFFFFFE 00000000
    00000000 FFFFFFFE 00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFF
    00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF
}

#new:Script $Script_8021C1EC
{
    UseArray  $End[0]
    UseIntBuffer  $IntTable_8021C0CC
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000001
        Return
    EndIf
    Get3Int  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseIntBuffer  $IntTable_8021C0CC
        Get3Int  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetPartPos    ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021C2D4
{
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 FFFFFFFF
    00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFE 00000000 00000000
    FFFFFFFE 00000000 00000000 FFFFFFFE 00000000 00000000 FFFFFFFE 00000000
    00000000 FFFFFFFE 00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFF
    00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF
}

#new:Script $Script_8021C3F4
{
    UseArray  $End[0]
    UseIntBuffer  $IntTable_8021C2D4
    Label  0
    Set   *Var[0]  *Array[0]
    Switch  *Var[0]
        Case  ==  00000007
        Case  ==  0000000B
        Default
            Return
    EndSwitch
    Get3Int  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseIntBuffer  $IntTable_8021C2D4
        Get3Int  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetPartPos    ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021C4F8
{
    00000000 00000000 00000000 00000000 FFFFFFFE 00000000 00000000 FFFFFFFC
    00000000 00000000 FFFFFFFC 00000000 00000000 FFFFFFFC 00000000 00000000
    FFFFFFFD 00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF
}

#new:Script $Script_8021C594
{
    UseArray  $End[0]
    UseIntBuffer  $IntTable_8021C4F8
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000005
        Return
    EndIf
    Get3Int  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseIntBuffer  $IntTable_8021C4F8
        Get3Int  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetPartPos    ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021C67C
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 0000000A 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  00000050
            Add   *Var[0]  FFFFFFF6
            Call  SetPartRotation   ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Sub   *Var[0]  00000032
    Set   *Var[1]  FFFFFF38
    Sub   *Var[2]  000000C8
    Call  SetPartJumpGravity    ( .Actor:Self 0000000A *Fixed[0.3] )
    Call  JumpPartTo    ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] 00000050 .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021C7F4
{
    -4.0105002E30 -4.0105002E30 -4.0120476E30 -4.0105002E30 -4.0105002E30 -4.013595E30 -4.0105002E30 -4.0105002E30
    -4.0151425E30 -4.0105002E30 -4.0105002E30 -4.01669E30 -4.0105002E30 -4.0105002E30 -4.0182373E30 -4.0105002E30
    -4.0105002E30 -4.0197847E30 -4.0105002E30 -4.0105002E30 -4.0213322E30 -4.0105002E30 -4.0105002E30 -4.0228796E30
    -4.0105002E30 -4.0105002E30 -4.024427E30 -4.0105002E30 -4.0105002E30 -4.024427E30 -4.0105002E30 -4.0105002E30
    -4.0253555E30 -4.0105002E30 -4.0105002E30 -4.024427E30 -4.0105002E30 -4.0105002E30 -4.0253555E30 -4.0105002E30
    -4.0105002E30 -4.024427E30 -4.0105002E30 -4.0105002E30 -4.0253555E30 -4.0105002E30 -4.0105002E30 -4.024427E30
    -4.0105002E30 -4.0105002E30 -4.0253555E30 -4.0105002E30 -4.0105002E30 -4.024427E30 -4.0105002E30 -4.0105002E30
    -4.0253555E30 -4.0105002E30 -4.0105002E30 -4.024427E30 -4.0105002E30 -4.0105002E30 -4.0253555E30 -4.0105002E30
    -4.0105002E30 -4.024427E30 -4.0105002E30 -4.0105002E30 -4.0213322E30 -4.0105002E30 -4.0105002E30 -4.0182373E30
    -4.0105002E30 -4.0105002E30 -4.0151425E30 -4.0105002E30 -4.0105002E30 -4.0120476E30 -4.0105002E30 -4.0105002E30
    -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30
    -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30
    -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 -4.0105002E30
    -4.0105002E30 3.57E-43 3.57E-43 3.57E-43
}

#new:Script $Script_8021C9A4
{
    UseArray  $End[0]
    UseFloatBuffer  $FloatTable_8021C7F4
    Set   *Var[F]  00000000
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000007
        Return
    EndIf
    If  *Var[F]  ==  00000000
        Get3Float  *Var[0] *Var[1] *Var[2]
        If  *Var[0]  ==  000000FF
            Set   *Var[F]  00000001
            Set   *Var[0]  *Fixed[0.0]
            Set   *Var[1]  *Fixed[0.0]
            Set   *Var[2]  *Fixed[0.0]
        EndIf
    EndIf
    MulF  *Var[2]  *Fixed[-2.0]
    Call  SetPartRotation   ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021CAE4
{
    Call  GetPartRotation   ( .Actor:Self 00000006 *Var[2] *Var[3] *Var[4] )
    Call  MakeLerp  ( *Var[4] 00000000 00000014 .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  SetPartRotation   ( .Actor:Self 00000006 *Fixed[0.0] *Fixed[0.0] *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_8021CB98
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000006 00000000 FFFFFFC4 00000000 )
    Set   *Var[1]  0000003C
    Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  00000050
            Add   *Var[0]  00000008
            Add   *Var[1]  0000000A
            Call  SetPartRotation   ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Sub   *Var[0]  00000000
    Set   *Var[1]  FFFFFF38
    Add   *Var[2]  00000064
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.6] )
    Call  JumpPartTo    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000050 .True )
    Return
    End
}

#new:Script $Script_8021CD50
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 0000000B 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 0000000B 00000000 FFFFFFC4 00000000 )
    Set   *Var[1]  0000003C
    Call  SetPartPos        ( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000000
    Set   *Var[1]  FFFFFF38
    Sub   *Var[2]  000000C8
    Call  SetPartJumpGravity    ( .Actor:Self 0000000B *Fixed[0.4] )
    Call  JumpPartTo        ( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] 00000050 .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021CE68
{
    -4.0105002E30 -4.0105002E30 -4.01669E30 -4.0105002E30 -4.0105002E30 -4.0228796E30 -4.0105002E30 -4.0105002E30
    -4.0290693E30 -4.0105002E30 -4.0105002E30 -4.035259E30 -4.0105002E30 -4.0105002E30 -4.0414487E30 -4.0105002E30
    -4.0105002E30 -4.0476384E30 -4.0105002E30 -4.0105002E30 -4.053828E30 -4.0105002E30 -4.0105002E30 -4.0600178E30
    -4.0105002E30 -4.0105002E30 -4.0662075E30 -4.0105002E30 -4.0105002E30 -4.0723972E30 -4.0105002E30 -4.0105002E30
    -4.078587E30 -4.0105002E30 -4.0105002E30 -4.0847766E30 -4.0105002E30 -4.0105002E30 -4.0909663E30 -4.0105002E30
    -4.0105002E30 -4.097156E30 -4.0105002E30 -4.0105002E30 -4.1033457E30 -4.0105002E30 -4.0105002E30 -4.1095354E30
    -4.0105002E30 -4.0105002E30 -4.115725E30 -4.0105002E30 -4.0105002E30 -4.0105002E30 3.57E-43 3.57E-43
    3.57E-43
}

#new:Script $Script_8021CF4C
{
    UseArray  $End[0]
    UseFloatBuffer  $FloatTable_8021CE68
    Label  0
    Set   *Var[0]  *Array[0]
    If  *Var[0]  !=  00000005
        Return
    EndIf
    Get3Float  *Var[0] *Var[1] *Var[2]
    If  *Var[0]  ==  000000FF
        UseFloatBuffer  $FloatTable_8021CE68
        Get3Float  *Var[0] *Var[1] *Var[2]
    EndIf
    Call  SetPartRotation   ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
    Call  SetPartRotation   ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021D054
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 00000008 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  00000050
            Add   *Var[0]  00000008
            Call  SetPartRotation   ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Sub   *Var[0]  00000096
    Set   *Var[1]  FFFFFF38
    Add   *Var[2]  00000064
    Call  SetPartJumpGravity    ( .Actor:Self 00000008 *Fixed[0.3] )
    Call  JumpPartTo    ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] 00000050 .True )
    Return
    End
}

#new:Script $Script_8021D1CC
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 00000009 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  00000050
            Add   *Var[0]  00000008
            Call  SetPartRotation   ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Sub   *Var[0]  00000032
    Set   *Var[1]  FFFFFF38
    Sub   *Var[2]  00000064
    Call  SetPartJumpGravity    ( .Actor:Self 00000009 *Fixed[0.3] )
    Call  JumpPartTo    ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] 00000050 .True )
    Wait  100`
    Return
    End
}

#new:Script $Script_8021D350
{
    UseArray  $End[0]
    Call  SetPartFlagBits   ( .Actor:Self 00000007 00100000 .True )
    Call  GetPartPos        ( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
    Call  SetPartDispOffset ( .Actor:Self 00000007 00000000 FFFFFFE2 00000000 )
    Set   *Var[1]  0000001E
    Call  SetPartPos        ( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  00000050
            Add   *Var[0]  00000019
            Add   *Var[1]  00000001
            Call  SetPartRotation   ( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
    EndThread
    Sub   *Var[0]  00000000
    Set   *Var[1]  FFFFFF38
    Add   *Var[2]  000000C8
    Call  SetPartJumpGravity    ( .Actor:Self 00000007 *Fixed[0.3] )
    Call  JumpPartTo    ( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] 00000050 .True )
    Return
    End
}

#new:Script $Script_Idle_8021D508
{
    UseArray  $End[0]
    Set   *Var[A]  00000000
    Label  0
    Set   *Var[0]  *Array[0]
    Switch  *Var[0]
        Case  ==  00000000
            Set   *Array[0]  00000001
            Exec  $Script_8021B6F0
            Exec  $Script_8021C1EC
            Exec  $Script_8021ABE4
        Case  ==  00000001
        Case  ==  00000002
            Set   *Array[0]  00000003
            Exec  $Script_8021BC88
            Exec  $Script_8021AF70
        Case  ==  00000003
        Case  ==  00000004
            Set   *Array[0]  00000005
            Exec  $Script_8021B864
            Exec  $Script_8021C594
            Exec  $Script_8021AD68
            Exec  $Script_8021CF4C
        Case  ==  00000005
        Case  ==  00000006
            Set   *Array[0]  00000007
            Exec  $Script_8021BA68
            Exec  $Script_8021C3F4
            Exec  $Script_8021C9A4
        Case  ==  00000007
        Case  ==  00000008
            Call  PlaySoundAtActor  ( .Actor:Self 000003B5 )
            Set   *Array[0]  00000009
            Exec  $Script_8021B0E4
            Exec  $Script_8021BD6C
            Exec  $Script_8021BF14
            Exec  $Script_8021CB98
            Exec  $Script_8021CD50
            Exec  $Script_8021D350
            Exec  $Script_8021D054
            Exec  $Script_8021D1CC
            Exec  $Script_8021C67C
            Exec  $Script_8021F630
        Case  ==  00000009
        Case  ==  0000000A
            Set   *Array[0]  0000000B
            Exec  $Script_8021BA68
            Exec  $Script_8021C3F4
            Exec  $Script_8021CAE4
        Case  ==  0000000B
    EndSwitch
    Call  GetPartPos    ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 00000018 *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 00000018 *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 00000018 *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 00000018 *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 0000000F 00000040 .True )
    Call  SetModelFlags ( 00000010 00000040 .True )
    Call  SetModelFlags ( 00000011 00000040 .True )
    Call  SetModelFlags ( 00000012 00000040 .True )
    Call  SetModelFlags ( 00000013 00000040 .True )
    Call  SetModelFlags ( 00000014 00000040 .True )
    Call  SetModelFlags ( 00000015 00000040 .True )
    Call  SetModelFlags ( 00000016 00000040 .True )
    Call  SetModelFlags ( 00000017 00000040 .True )
    Call  GetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 00000022 *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 00000022 *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 00000022 *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 00000022 *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 0000001F 00000040 .True )
    Call  SetModelFlags ( 00000020 00000040 .True )
    Call  SetModelFlags ( 00000021 00000040 .True )
    Call  GetPartPos    ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 0000001E *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 0000001E *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 0000001E *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 0000001E *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 00000019 00000040 .True )
    Call  SetModelFlags ( 0000001A 00000040 .True )
    Call  SetModelFlags ( 0000001B 00000040 .True )
    Call  SetModelFlags ( 0000001C 00000040 .True )
    Call  SetModelFlags ( 0000001D 00000040 .True )
    Call  GetPartPos    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 0000000E *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 0000000E *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 0000000E *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 0000000E *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 0000000B 00000040 .True )
    Call  SetModelFlags ( 0000000C 00000040 .True )
    Call  SetModelFlags ( 0000000D 00000040 .True )
    Call  GetPartPos    ( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 0000000A *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 0000000A *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 0000000A *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 0000000A *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 00000009 00000040 .True )
    Set   *Var[0]  *Array[0]
    If  *Var[0]  ==  00000009
        Call  GetPartPos    ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
    EndIf
    Call  SetPartPos    ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 0000002C *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 0000002C *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 0000002C *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 0000002C *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 0000002B 00000040 .True )
    Set   *Var[0]  *Array[0]
    If  *Var[0]  ==  00000009
        Call  GetPartPos    ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
    EndIf
    Call  SetPartPos    ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 0000002E *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 0000002E *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 0000002E *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 0000002E *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 0000002D 00000040 .True )
    Call  GetPartPos    ( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 00000026 *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 00000026 *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 00000026 *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 00000026 *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 00000023 00000040 .True )
    Call  SetModelFlags ( 00000024 00000040 .True )
    Call  SetModelFlags ( 00000025 00000040 .True )
    Call  GetPartPos    ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
    Call  TranslateGroup    ( 0000002A *Var[0] *Var[1] *Var[2] )
    Call  GetPartRotation   ( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
    Call  RotateGroup   ( 0000002A *Var[0] 00000001 00000000 00000000 )
    Call  RotateGroup   ( 0000002A *Var[1] 00000000 00000001 00000000 )
    Call  RotateGroup   ( 0000002A *Var[2] 00000000 00000000 00000001 )
    Call  SetModelFlags ( 00000027 00000040 .True )
    Call  SetModelFlags ( 00000028 00000040 .True )
    Call  SetModelFlags ( 00000029 00000040 .True )
    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    If  *Var[0]  !&  00000002
        Call  GetActorHP    ( .Actor:Self *Var[0] )
        Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
        Mul   *Var[0]  00000064
        Div   *Var[0]  *Var[1]
        Switch  *Var[0]
            Case  ==  00000000
            Case  <  00000014
                If  *Var[A]  >  00000014
                    Exec  $Script_8021E3A0
                    Set   *Var[A]  00000000
                EndIf
            Case  <  00000028
                If  *Var[A]  >  00000028
                    Exec  $Script_8021E3A0
                    Set   *Var[A]  00000000
                EndIf
            Case  <  0000003C
                If  *Var[A]  >  0000003C
                    Exec  $Script_8021E3A0
                    Set   *Var[A]  00000000
                EndIf
            Case  <  00000050
                If  *Var[A]  >  00000050
                    Exec  $Script_8021E3A0
                    Set   *Var[A]  00000000
                EndIf
        EndSwitch
        Add   *Var[A]  00000001
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021E3A0
{
    Div   *Var[A]  00000004
    Add   *Var[A]  00000001
    Call  RandInt       ( *Var[A] *Var[3] )
    Add   *Var[3]  00000001
    Wait  *Var[3]
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFF8
    Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] 00000062 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt       ( *Var[A] *Var[3] )
    Add   *Var[3]  00000001
    Wait  *Var[3]
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFF4
    Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] 00000017 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt       ( *Var[A] *Var[3] )
    Add   *Var[3]  00000001
    Wait  *Var[3]
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFD1
    Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] 00000046 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt       ( *Var[A] *Var[3] )
    Add   *Var[3]  00000001
    Wait  *Var[3]
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] 00000016 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  RandInt       ( *Var[A] *Var[3] )
    Add   *Var[3]  00000001
    Wait  *Var[3]
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFED
    Call  PlayEffect    ( ~FX:Steam:Ring *Var[0] 0000003B 00000021 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021E6F0
{
    UseArray  $End[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Set   *Array[0]  00000002
            Wait  20`
            Set   *Array[0]  00000000
        Case  ==  .Event:Hit % A
            Set   *Array[0]  00000002
            Wait  20`
            Set   *Array[0]  00000000
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Set   *Array[0]  00000002
            Wait  20`
            Set   *Array[0]  00000000
        EndCaseGroup
        CaseOR  ==  .Event:Death % 20
        CaseOR  ==  .Event:BurnDeath % 24
            Call  8027D32C  ( FFFFFF81 )
            If  *Var[0]  ==  .Event:BurnDeath % 24
                Call  $Function_80218058    ( 00000000 $???_8021A8FC 00000003 )
                Call  $Function_8021817C    ( 00000003 00000023 00000023 00000023 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndIf
            Set   *Array[0]  00000002
            Wait  20`
            If  *Var[0]  ==  .Event:BurnDeath % 24
                Call  $Function_80218058    ( 00000000 $???_8021A8FC 00000000 )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
                DivF  *Var[3]  *Fixed[2.0]
                AddF  *Var[1]  *Var[3]
                AddF  *Var[2]  *Fixed[5.0]
                DivF  *Var[3]  *Fixed[10.0]
                Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Wait  5`
                Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndIf
            Call  ActorSpeak    ( 000C0106 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Oh, no!! That costume was perfect!! Bowser loved i ...
            Wait  30`
            Set   *Array[0]  00000008
            Label  14
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Wait  1`
            If  *Var[0]  !&  00000001
                Goto  14
            EndIf
            Wait  20`
            ExecWait  $Script_80222C44
            Call  GetEnemyMaxHP ( .Actor:Self *Var[0] )
            Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            Return
        EndCaseGroup
        CaseOR  ==  .Event:BurnContact % 2C
        CaseOR  ==  .Event:BurnHit % E
            Call  $Function_80218058    ( 00000000 $???_8021A8FC 00000003 )
            Call  $Function_8021817C    ( 00000003 00000023 00000023 00000023 00000000 00000000 00000000 00000000 00000000 00000000 )
            Set   *Array[0]  00000002
            Wait  20`
            Set   *Array[0]  00000000
            Call  $Function_80218058    ( 00000000 $???_8021A8FC 00000000 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
            DivF  *Var[3]  *Fixed[2.0]
            AddF  *Var[1]  *Var[3]
            AddF  *Var[2]  *Fixed[5.0]
            DivF  *Var[3]  *Fixed[10.0]
            Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  5`
            Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndCaseGroup
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021EC98
{
    UseArray  $End[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Thread
        Loop  00000004
            Call  $Function_80218000    ( 00000100 00000003 )
            Wait  5`
        EndLoop
    EndThread
    Set   *Array[0]  00000004
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000046 00000000 00000000 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Set   *Array[0]  00000000
    Thread
        Call  PlaySoundAtActor  ( .Actor:Self 000020FD )
        Wait  22`
        Call  PlaySoundAtActor  ( .Actor:Self 000020FE )
    EndThread
    Set   *Array[0]  00000006
    Wait  24`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            If  *Var[0]  ==  .HitResult:Lucky % 5
                Thread
                    Wait  15`
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndThread
            EndIf
            Wait  8`
            Thread
                Loop  00000004
                    Call  $Function_80218000    ( 00000100 00000005 )
                    Wait  8`
                EndLoop
            EndThread
            Set   *Array[0]  00000004
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Set   *Array[0]  00000000
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 0000FFFF 00000000 00000001 00000040 )
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  &  80000000 % 80000000
        Call  GetPlayerHP   ( *Var[0] )
        If  *Var[0]  !=  .HitResult:Hit % 0
            Set   *Array[0]  0000000A
        EndIf
    EndIf
    Wait  18`
    Thread
        Loop  00000004
            Call  $Function_80218000    ( 00000100 00000005 )
            Wait  8`
        EndLoop
    EndThread
    Set   *Array[0]  00000004
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Set   *Array[0]  00000000
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  GetPlayerHP   ( *Var[0] )
    If  *Var[0]  <=  .HitResult:Hit % 0
        Return
    EndIf
    Call  802535B4  ( 00000000 )
    Call  UseCamPreset      ( 00000013 )
    Call  SetBattleCamTarget    ( 0000001C 0000004B FFFFFF9B )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  SetBattleCamZoom  ( 000001F4 )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  15`
    Call  GetActorVar       ( .Actor:Self 00000002 *Var[0] )
    Switch  *Var[0]
        Case  ==  .HitResult:Hit % 0
            Call  ActorSpeak    ( 000C00FE .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Gah ha ha ha!! I am invincible! You are powerless  ...
            Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
        Case  ==  00000001 % 1
            Call  ActorSpeak    ( 000C00FF .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % What's the matter with you?! This isn't even funny ...
            Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
        Case  ==  00000002 % 2
            Call  ActorSpeak        ( 000C0100 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Gah ha ha ha!!! Oh...ha ha...you're so weak... ho  ...
            Call  UseCamPreset      ( 00000013 )
            Call  SetBattleCamTarget    ( 00000055 00000051 00000000 )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  SetBattleCamZoom  ( 000000F9 )
            Call  MoveBattleCamOver ( 0000000A )
            Wait  10`
            Call  ActorSpeak        ( 000C0101 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Heh heh heh... Mario really thinks that we're Kin ...
            Wait  10`
            Call  ActorSpeak        ( 000C0102 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Shhhh!!! Mario'll hear us!)
            Call  SetActorVar       ( .Actor:Self 00000002 00000003 )
        Case  ==  00000003 % 3
            Call  ActorSpeak        ( 000C0103 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Ugh, you're pathetic! Are you always this weak? Th ...
            Call  UseCamPreset      ( 00000013 )
            Call  SetBattleCamTarget    ( 00000055 00000051 00000000 )
            Call  SetBattleCamOffsetZ   ( 00000000 )
            Call  SetBattleCamZoom  ( 000000F9 )
            Call  MoveBattleCamOver ( 0000000A )
            Wait  10`
            Call  ActorSpeak        ( 000C0104 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Um... Red!  We've got rips in a lot of different  ...
            Wait  10`
            Call  ActorSpeak        ( 000C0105 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Forget about it! Mario's shaking in his boots! Le ...
            Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
    EndSwitch
    Call  802535B4  ( 00000001 )
    Return
    End
}

#new:Script $Script_NextTurn_8021F410
{
    UseArray  $End[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  !&  00000008
                Call  UseCamPreset      ( 00000013 )
                Call  SetBattleCamTarget    ( FFFFFFFC 0000002E FFFFFFFE )
                Call  SetBattleCamYaw   ( 00000018 )
                Call  SetBattleCamOffsetZ   ( 0000001E )
                Call  SetBattleCamZoom  ( 000001CD )
                Call  MoveBattleCamOver ( 0000001E )
                Wait  30`
                Call  ActorSpeak        ( 000C00FD .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Gah ha ha ha!!!! I've been waiting for you, Mario! ...
                Thread
                    Call  PlaySoundAtActor  ( .Actor:Self 000020FD )
                    Wait  22`
                    Call  PlaySoundAtActor  ( .Actor:Self 000020FE )
                EndThread
                Set   *Array[0]  00000006
                Wait  30`
                Set   *Array[0]  00000000
                Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000008
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                Call  UseCamPreset  ( 00000002 )
                Wait  20`
            EndIf
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021F630
{
    Call  UseIdleAnimation  ( .Actor:Enemy0 .False )
    Call  EnableIdleScript  ( .Actor:Enemy0 00000000 )
    Call  SetActorPos       ( .Actor:Enemy0 00000064 00000000 0000000A )
    Call  SetAnimation      ( .Actor:Enemy0 00000001 0066031C )
    Thread
        Call  SetActorJumpGravity   ( .Actor:Enemy0 *Fixed[0.4] )
        Call  SetActorSounds    ( .Actor:Enemy0 .ActorSound:Jump 00000000 00000000 )
        Call  SetGoalPos        ( .Actor:Enemy0 FFFFFED4 000000FA 00000000 )
        Call  JumpToGoal        ( .Actor:Enemy0 00000032 .False .True .False )
    EndThread
    Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
    Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
    Call  SetActorPos       ( .Actor:Enemy1 00000064 00000000 0000000A )
    Call  SetAnimation      ( .Actor:Enemy1 00000001 0066021C )
    Thread
        Call  SetActorJumpGravity   ( .Actor:Enemy1 *Fixed[0.4] )
        Call  SetActorSounds    ( .Actor:Enemy1 .ActorSound:Jump 00000000 00000000 )
        Call  SetGoalPos        ( .Actor:Enemy1 FFFFFF38 000000FA 00000000 )
        Call  JumpToGoal        ( .Actor:Enemy1 00000032 .False .True .False )
    EndThread
    Call  UseIdleAnimation  ( .Actor:Enemy2 .False )
    Call  EnableIdleScript  ( .Actor:Enemy2 00000000 )
    Call  SetActorPos       ( .Actor:Enemy2 00000064 00000000 0000000A )
    Call  SetAnimation      ( .Actor:Enemy2 00000001 0066001C )
    Thread
        Call  SetActorJumpGravity   ( .Actor:Enemy2 *Fixed[0.4] )
        Call  SetActorSounds    ( .Actor:Enemy2 .ActorSound:Jump 00000000 00000000 )
        Call  SetGoalPos        ( .Actor:Enemy2 00000000 000000FA 00000000 )
        Call  JumpToGoal        ( .Actor:Enemy2 00000032 .False .True .False )
    EndThread
    Call  UseIdleAnimation  ( .Actor:Enemy3 .False )
    Call  EnableIdleScript  ( .Actor:Enemy3 00000000 )
    Call  SetActorPos       ( .Actor:Enemy3 00000064 00000000 0000000A )
    Call  SetAnimation      ( .Actor:Enemy3 00000001 0066011C )
    Thread
        Call  SetActorJumpGravity   ( .Actor:Enemy3 *Fixed[0.4] )
        Call  SetActorSounds    ( .Actor:Enemy3 .ActorSound:Jump 00000000 00000000 )
        Call  SetGoalPos        ( .Actor:Enemy3 00000096 000000FA 00000000 )
        Call  JumpToGoal        ( .Actor:Enemy3 00000032 .False .True .False )
    EndThread
    Wait  100`
    Wait  100`
    Call  EnableGroup   ( 00000018 .False )
    Call  EnableGroup   ( 0000000E .False )
    Call  EnableGroup   ( 0000000A .False )
    Call  EnableGroup   ( 00000022 .False )
    Call  EnableGroup   ( 0000001E .False )
    Call  EnableGroup   ( 0000002C .False )
    Call  EnableGroup   ( 0000002E .False )
    Call  EnableGroup   ( 00000026 .False )
    Call  EnableGroup   ( 0000002A .False )
    Thread
        Wait  23`
        Call  PlaySoundAtActor  ( .Actor:Enemy0 00000301 )
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Enemy1 00000301 )
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Enemy2 00000301 )
        Wait  5`
        Call  PlaySoundAtActor  ( .Actor:Enemy3 00000301 )
    EndThread
    Thread
        Call  SetAnimation  ( .Actor:Enemy0 00000001 00660312 )
        Call  SetActorPos   ( .Actor:Enemy0 00000014 000000FA 00000000 )
        Call  SetGoalPos    ( .Actor:Enemy0 00000014 00000000 00000000 )
        Call  SetActorJumpGravity   ( .Actor:Enemy0 *Fixed[1.5] )
        Call  SetActorSounds    ( .Actor:Enemy0 .ActorSound:Jump 00000000 00000000 )
        Call  FallToGoal    ( .Actor:Enemy0 0000001E )
        Call  PlaySoundAtActor  ( .Actor:Enemy0 000003E9 )
        Call  ResetActorSounds  ( .Actor:Enemy0 .ActorSound:Jump )
        Call  ForceHomePos  ( .Actor:Enemy0 00000014 00000000 00000000 )
        Call  SetAnimation  ( .Actor:Enemy0 00000001 00660305 )
    EndThread
    Thread
        Wait  5`
        Call  SetAnimation  ( .Actor:Enemy1 00000001 00660212 )
        Call  SetActorPos   ( .Actor:Enemy1 0000003C 000000FA FFFFFFFB )
        Call  SetGoalPos    ( .Actor:Enemy1 0000003C 00000000 FFFFFFFB )
        Call  SetActorJumpGravity   ( .Actor:Enemy1 *Fixed[1.5] )
        Call  SetActorSounds    ( .Actor:Enemy1 .ActorSound:Jump 00000000 00000000 )
        Call  FallToGoal    ( .Actor:Enemy1 0000001E )
        Call  PlaySoundAtActor  ( .Actor:Enemy1 000003E9 )
        Call  ResetActorSounds  ( .Actor:Enemy1 .ActorSound:Jump )
        Call  ForceHomePos  ( .Actor:Enemy1 0000003C 00000000 FFFFFFFB )
        Call  SetAnimation  ( .Actor:Enemy1 00000001 00660205 )
    EndThread
    Thread
        Wait  10`
        Call  SetAnimation  ( .Actor:Enemy2 00000001 00660012 )
        Call  SetActorPos   ( .Actor:Enemy2 00000064 000000FA FFFFFFF6 )
        Call  SetGoalPos    ( .Actor:Enemy2 00000064 00000000 FFFFFFF6 )
        Call  SetActorJumpGravity   ( .Actor:Enemy2 *Fixed[1.5] )
        Call  SetActorSounds    ( .Actor:Enemy2 .ActorSound:Jump 00000000 00000000 )
        Call  FallToGoal    ( .Actor:Enemy2 0000001E )
        Call  PlaySoundAtActor  ( .Actor:Enemy2 000003E9 )
        Call  ResetActorSounds  ( .Actor:Enemy2 .ActorSound:Jump )
        Call  ForceHomePos  ( .Actor:Enemy2 00000064 00000000 FFFFFFF6 )
        Call  SetAnimation  ( .Actor:Enemy2 00000001 00660005 )
    EndThread
    Thread
        Wait  15`
        Call  SetAnimation  ( .Actor:Enemy3 00000001 00660112 )
        Call  SetActorPos   ( .Actor:Enemy3 0000008C 000000FA FFFFFFF1 )
        Call  SetGoalPos    ( .Actor:Enemy3 0000008C 00000000 FFFFFFF1 )
        Call  SetActorJumpGravity   ( .Actor:Enemy3 *Fixed[1.5] )
        Call  SetActorSounds    ( .Actor:Enemy3 .ActorSound:Jump 00000000 00000000 )
        Call  FallToGoal    ( .Actor:Enemy3 0000001E )
        Call  PlaySoundAtActor  ( .Actor:Enemy3 000003E9 )
        Call  ResetActorSounds  ( .Actor:Enemy3 .ActorSound:Jump )
        Call  ForceHomePos  ( .Actor:Enemy3 0000008C 00000000 FFFFFFF1 )
        Call  SetAnimation  ( .Actor:Enemy3 00000001 00660105 )
    EndThread
    Wait  30`
    Call  UseCamPreset  ( 00000013 )
    Call  SetBattleCamTarget    ( 00000046 0000002E 00000000 )
    Call  SetBattleCamOffsetZ   ( 00000000 )
    Call  SetBattleCamZoom  ( 00000124 )
    Call  MoveBattleCamOver ( 00000014 )
    Wait  28`
    Call  SetAnimation  ( .Actor:Enemy0 00000001 0066031A )
    Wait  5`
    Call  GetActorPos   ( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000007
    Add   *Var[1]  0000001C
    Add   *Var[2]  00000005
    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Enemy0 000020F3 )
    Call  SetAnimation  ( .Actor:Enemy1 00000001 0066021A )
    Wait  5`
    Call  GetActorPos   ( .Actor:Enemy1 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000007
    Add   *Var[1]  0000001C
    Add   *Var[2]  00000005
    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Enemy1 000020F3 )
    Call  SetAnimation  ( .Actor:Enemy2 00000001 0066001A )
    Wait  5`
    Call  GetActorPos   ( .Actor:Enemy2 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000007
    Add   *Var[1]  0000001C
    Add   *Var[2]  00000005
    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Enemy2 000020F3 )
    Call  SetAnimation  ( .Actor:Enemy3 00000001 0066011A )
    Wait  5`
    Call  GetActorPos   ( .Actor:Enemy3 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000007
    Add   *Var[1]  0000001C
    Add   *Var[2]  00000005
    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Enemy3 000020F3 )
    Wait  30`
    Call  $Function_80218350 ( )
    Call  ActorSpeak    ( 000C0107 .Actor:Enemy1 00000001 FFFFFFFF FFFFFFFF ) % Here come the Koopa Bros.!
    Call  SetActorFlagBits  ( .Actor:Self 00440000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .True )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224D84 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802239BC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802242FC )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225438 )
    Call  SetActorFlagBits  ( .Actor:Enemy0 00040000 .False )
    Call  SetPartFlagBits   ( .Actor:Enemy0 00000001 00020000 .False )
    Call  HPBarToHome   ( .Actor:Enemy0 )
    Call  SetAnimation  ( .Actor:Enemy0 00000001 00660304 )
    Call  SetActorFlagBits  ( .Actor:Enemy1 00040000 .False )
    Call  SetPartFlagBits   ( .Actor:Enemy1 00000001 00020000 .False )
    Call  HPBarToHome   ( .Actor:Enemy1 )
    Call  SetAnimation  ( .Actor:Enemy1 00000001 00660204 )
    Call  SetActorFlagBits  ( .Actor:Enemy2 00040000 .False )
    Call  SetPartFlagBits   ( .Actor:Enemy2 00000001 00020000 .False )
    Call  HPBarToHome   ( .Actor:Enemy2 )
    Call  SetAnimation  ( .Actor:Enemy2 00000001 00660004 )
    Call  SetActorFlagBits  ( .Actor:Enemy3 00040000 .False )
    Call  SetPartFlagBits   ( .Actor:Enemy3 00000001 00020000 .False )
    Call  HPBarToHome   ( .Actor:Enemy3 )
    Call  SetAnimation  ( .Actor:Enemy3 00000001 00660104 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    ConstOR  *Var[0] 00000001
    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    Return
    End
}

#new:Script $Script_80220588
{
    If  *Var[2]  ==  00000000
        Call  SetActorVar   ( .Actor:Self 00000005 *Var[0] )
    EndIf
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  UseIdleAnimation  ( *Var[A] .False )
    Switch  *Var[2]
        Case  ==  00000000
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 0066031B )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 0066021B )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 0066001B )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 0066011B )
            EndSwitch
            Call  SetActorYaw   ( *Var[A] 00000000 )
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000016
            Add   *Var[1]  00000013
            Wait  10`
            Wait  30`
            Set   *Var[0]  *Var[B]
            Sub   *Var[0]  00000001
            Mul   *Var[0]  00000010
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
            Call  SetBattleCamTarget    ( *Var[2] *Var[3] *Var[4] )
            Call  UseCamPreset  ( 00000013 )
            Call  SetBattleCamOffsetZ   ( 00000032 )
            Call  SetBattleCamZoom      ( 00000190 )
            Call  MoveBattleCamOver     ( *Var[0] )
            Wait  *Var[0]
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
            Set   *Var[4]  0000000F
            Call  SetGoalPos    ( *Var[A] *Var[2] *Var[3] *Var[4] )
            Call  AddGoalPos    ( *Var[A] 00000000 00000000 00000000 )
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660303 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660203 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660003 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660103 )
            EndSwitch
            Call  GetGoalPos    ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  GetActorPos   ( *Var[A] *Var[3] *Var[4] *Var[5] )
            If  *Var[0]  <  *Var[3]
                Call  SetActorYaw   ( *Var[A] 00000000 )
            Else
                Call  SetActorYaw   ( *Var[A] 000000B4 )
            EndIf
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660310 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660210 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660010 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660110 )
            EndSwitch
            Wait  5`
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
            Set   *Var[4]  0000000F
            Call  SetGoalPos    ( *Var[A] *Var[2] *Var[3] *Var[4] )
            Set   *Var[0]  *Var[B]
            Sub   *Var[0]  00000001
            Mul   *Var[0]  00000012
            Switch  *Var[B]
                Case  ==  00000004
                    Call  AddGoalPos    ( *Var[A] 00000000 *Var[0] FFFFFFF6 )
                Case  ==  00000003
                    Call  AddGoalPos    ( *Var[A] 00000000 *Var[0] FFFFFFF9 )
                Case  ==  00000002
                    Call  AddGoalPos    ( *Var[A] 00000000 *Var[0] FFFFFFFC )
            EndSwitch
            Call  AddGoalPos    ( *Var[A] 0000000F 00000000 00000000 )
            Thread
                Wait  10`
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660312 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660212 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660012 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660112 )
                EndSwitch
            EndThread
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660311 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660211 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660011 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660111 )
            EndSwitch
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.6] )
            Call  JumpToGoal        ( *Var[A] 00000014 .False .False .False )
            Call  $Function_8021837C    ( *Var[A] )
            Call  PlaySoundAtActor  ( *Var[A] 000003E9 )
            Call  GetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  0000000F
            Call  SetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660304 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660204 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660004 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660104 )
            EndSwitch
            Wait  5`
            Call  SetActorYaw   ( *Var[A] 00000000 )
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 0066031B )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 0066021B )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 0066001B )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 0066011B )
            EndSwitch
            Call  PlaySoundAtActor  ( *Var[A] 000020F3 )
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000016
            Add   *Var[1]  00000013
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  !&  00000002
                Call  ActorSpeak    ( 000C010A *Var[A] 00000001 FFFFFFFF FFFFFFFF ) % OK, Mario! Have a taste of this!
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000002
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            Wait  10`
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660304 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660204 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660004 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660104 )
            EndSwitch
            Call  SetActorFlagBits  ( *Var[A] 00040000 .True )
            Call  SetPartFlagBits   ( *Var[A] 00000001 00020000 .True )
            Call  HPBarToHome       ( *Var[A] )
            Call  SetActorVar       ( *Var[A] 00000001 00000003 )
            Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
        CaseOR  ==  00000001
        CaseOR  ==  00000002
        CaseOR  ==  00000003
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660305 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660205 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660005 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660105 )
            EndSwitch
            Wait  50`
            Set   *Var[0]  *Var[B]
            Sub   *Var[0]  00000001
            If  *Var[C]  ==  *Var[0]
                Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
                Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                Set   *Var[4]  0000000F
                Call  SetGoalPos    ( *Var[A] *Var[2] *Var[3] *Var[4] )
                Call  AddGoalPos    ( *Var[A] 00000000 00000000 00000000 )
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660303 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660203 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660003 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660103 )
                EndSwitch
                Call  RunToGoal ( *Var[A] 0000000A .False )
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660305 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660205 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660005 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660105 )
                EndSwitch
                Call  SetActorFlagBits  ( *Var[A] 00040000 .True )
                Call  SetPartFlagBits   ( *Var[A] 00000001 00020000 .True )
                Call  HPBarToHome       ( *Var[A] )
                Call  SetActorVar       ( *Var[A] 00000001 00000006 )
            EndIf
            Set   *Var[0]  *Var[B]
            Sub   *Var[0]  00000002
            If  *Var[C]  ==  *Var[0]
                Wait  10`
                Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
                Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                Set   *Var[4]  0000000F
                Call  SetGoalPos    ( *Var[A] *Var[2] *Var[3] *Var[4] )
                Call  AddGoalPos    ( *Var[A] 00000000 00000012 FFFFFFFC )
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660310 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660210 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660010 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660110 )
                EndSwitch
                Wait  5`
                Call  AddGoalPos    ( *Var[A] 0000000F 00000000 00000000 )
                Thread
                    Wait  10`
                    Switch  *Var[A]
                        Case  ==  00000200
                            Call  SetAnimation  ( *Var[A] 00000001 00660312 )
                        Case  ==  00000201
                            Call  SetAnimation  ( *Var[A] 00000001 00660212 )
                        Case  ==  00000202
                            Call  SetAnimation  ( *Var[A] 00000001 00660012 )
                        Case  ==  00000203
                            Call  SetAnimation  ( *Var[A] 00000001 00660112 )
                    EndSwitch
                EndThread
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660311 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660211 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660011 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660111 )
                EndSwitch
                Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.6] )
                Call  JumpToGoal        ( *Var[A] 00000014 .False .False .False )
                Call  $Function_8021837C    ( *Var[A] )
                Call  PlaySoundAtActor  ( *Var[A] 000003E9 )
                Call  GetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
                Sub   *Var[3]  0000000F
                Call  SetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660305 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660205 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660005 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660105 )
                EndSwitch
                Call  SetActorFlagBits  ( *Var[A] 00040000 .True )
                Call  SetPartFlagBits   ( *Var[A] 00000001 00020000 .True )
                Call  HPBarToHome       ( *Var[A] )
                Call  SetActorVar       ( *Var[A] 00000001 00000005 )
            EndIf
            Set   *Var[0]  *Var[B]
            Sub   *Var[0]  00000003
            If  *Var[C]  ==  *Var[0]
                Wait  30`
                Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
                Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                Set   *Var[4]  0000000F
                Call  SetGoalPos    ( *Var[A] *Var[2] *Var[3] *Var[4] )
                Call  AddGoalPos    ( *Var[A] 00000000 00000024 FFFFFFF9 )
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660310 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660210 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660010 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660110 )
                EndSwitch
                Wait  5`
                Call  AddGoalPos    ( *Var[A] 0000000F 00000000 00000000 )
                Thread
                    Wait  10`
                    Switch  *Var[A]
                        Case  ==  00000200
                            Call  SetAnimation  ( *Var[A] 00000001 00660312 )
                        Case  ==  00000201
                            Call  SetAnimation  ( *Var[A] 00000001 00660212 )
                        Case  ==  00000202
                            Call  SetAnimation  ( *Var[A] 00000001 00660012 )
                        Case  ==  00000203
                            Call  SetAnimation  ( *Var[A] 00000001 00660112 )
                    EndSwitch
                EndThread
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660311 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660211 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660011 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660111 )
                EndSwitch
                Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.6] )
                Call  JumpToGoal        ( *Var[A] 00000014 .False .False .False )
                Call  $Function_8021837C    ( *Var[A] )
                Call  PlaySoundAtActor  ( *Var[A] 000003E9 )
                Call  GetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
                Sub   *Var[3]  0000000F
                Call  SetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660305 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660205 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660005 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660105 )
                EndSwitch
                Call  SetActorFlagBits  ( *Var[A] 00040000 .True )
                Call  SetPartFlagBits   ( *Var[A] 00000001 00020000 .True )
                Call  HPBarToHome       ( *Var[A] )
                Call  SetActorVar       ( *Var[A] 00000001 00000004 )
            EndIf
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_80221DB4
{
    If  *Var[2]  ==  00000000
        Call  SetActorVar   ( .Actor:Self 00000005 *Var[0] )
    EndIf
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Set   *Var[D]  *Var[3]
    Call  UseIdleAnimation  ( *Var[A] .False )
    Switch  *Var[A]
        Case  ==  00000200
            Call  SetAnimation  ( *Var[A] 00000001 0066031B )
        Case  ==  00000201
            Call  SetAnimation  ( *Var[A] 00000001 0066021B )
        Case  ==  00000202
            Call  SetAnimation  ( *Var[A] 00000001 0066001B )
        Case  ==  00000203
            Call  SetAnimation  ( *Var[A] 00000001 0066011B )
    EndSwitch
    Wait  15`
    Switch  *Var[C]
        Case  ==  FFFFFFFF
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660305 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660205 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660005 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660105 )
            EndSwitch
            Switch  *Var[B]
                Case  ==  00000004
                    Switch  *Var[D]
                        Case  ==  00000002
                            Call  SetActorVar   ( *Var[A] 00000001 00000005 )
                        Case  ==  00000001
                            Call  SetActorVar   ( *Var[A] 00000001 00000004 )
                    EndSwitch
                Case  ==  00000003
                    Call  SetActorVar   ( *Var[A] 00000001 00000005 )
            EndSwitch
        Case  ==  00000000
            Call  GetActorVar       ( .Actor:Self 00000004 *Var[1] )
            Call  GetHomePos        ( *Var[1] *Var[2] *Var[3] *Var[4] )
            Call  SetBattleCamTarget    ( *Var[2] *Var[3] *Var[4] )
            Call  UseCamPreset      ( 00000013 )
            Call  SetBattleCamOffsetZ   ( 00000032 )
            Call  SetBattleCamZoom  ( 00000190 )
            Call  MoveBattleCamOver ( 0000001E )
            If  *Var[D]  ==  00000002
                Wait  25`
            EndIf
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660310 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660210 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660010 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660110 )
            EndSwitch
            Wait  5`
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Call  GetHomePos    ( *Var[0] *Var[1] *Var[2] *Var[3] )
            Set   *Var[3]  0000000F
            Call  SetGoalPos    ( *Var[A] *Var[1] *Var[2] *Var[3] )
            Switch  *Var[B]
                Case  ==  00000004
                    Call  AddGoalPos    ( *Var[A] 00000000 00000036 FFFFFFF6 )
                Case  ==  00000003
                    Call  AddGoalPos    ( *Var[A] 00000000 00000024 FFFFFFF9 )
            EndSwitch
            Call  AddGoalPos    ( *Var[A] 0000000F 00000000 00000000 )
            Thread
                Wait  10`
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660312 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660212 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660012 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660112 )
                EndSwitch
            EndThread
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660311 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660211 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660011 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660111 )
            EndSwitch
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.6] )
            Call  JumpToGoal        ( *Var[A] 00000014 .False .False .False )
            Call  $Function_8021837C    ( *Var[A] )
            Call  PlaySoundAtActor  ( *Var[A] 000003E9 )
            Call  GetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  0000000F
            Call  SetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660304 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660204 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660004 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660104 )
            EndSwitch
            Wait  10`
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 0066031B )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 0066021B )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 0066001B )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 0066011B )
            EndSwitch
            Call  PlaySoundAtActor  ( *Var[A] 000020F3 )
            Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000016
            Add   *Var[1]  00000013
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  30`
            Call  SetActorFlagBits  ( *Var[A] 00040000 .True )
            Call  SetPartFlagBits   ( *Var[A] 00000001 00020000 .True )
            Call  HPBarToHome   ( *Var[A] )
            Call  SetActorVar   ( *Var[A] 00000001 00000003 )
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            ConstOR  *Var[0] 00000100
            Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
        Case  ==  00000001
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660310 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660210 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660010 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660110 )
            EndSwitch
            Wait  5`
            Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
            Call  GetHomePos    ( *Var[0] *Var[1] *Var[2] *Var[3] )
            Set   *Var[3]  0000000F
            Call  SetGoalPos    ( *Var[A] *Var[1] *Var[2] *Var[3] )
            Call  AddGoalPos    ( *Var[A] 00000000 00000024 FFFFFFF9 )
            Call  AddGoalPos    ( *Var[A] 0000000F 00000000 00000000 )
            Thread
                Wait  10`
                Switch  *Var[A]
                    Case  ==  00000200
                        Call  SetAnimation  ( *Var[A] 00000001 00660312 )
                    Case  ==  00000201
                        Call  SetAnimation  ( *Var[A] 00000001 00660212 )
                    Case  ==  00000202
                        Call  SetAnimation  ( *Var[A] 00000001 00660012 )
                    Case  ==  00000203
                        Call  SetAnimation  ( *Var[A] 00000001 00660112 )
                EndSwitch
            EndThread
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660311 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660211 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660011 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660111 )
            EndSwitch
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.6] )
            Call  JumpToGoal        ( *Var[A] 00000014 .False .False .False )
            Call  $Function_8021837C    ( *Var[A] )
            Call  PlaySoundAtActor  ( *Var[A] 000003E9 )
            Call  GetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  0000000F
            Call  SetActorPos       ( *Var[A] *Var[3] *Var[4] *Var[5] )
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660304 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660204 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660004 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660104 )
            EndSwitch
            Wait  10`
            Switch  *Var[A]
                Case  ==  00000200
                    Call  SetAnimation  ( *Var[A] 00000001 00660305 )
                Case  ==  00000201
                    Call  SetAnimation  ( *Var[A] 00000001 00660205 )
                Case  ==  00000202
                    Call  SetAnimation  ( *Var[A] 00000001 00660005 )
                Case  ==  00000203
                    Call  SetAnimation  ( *Var[A] 00000001 00660105 )
            EndSwitch
            Call  SetActorFlagBits  ( *Var[A] 00040000 .True )
            Call  SetPartFlagBits   ( *Var[A] 00000001 00020000 .True )
            Call  HPBarToHome       ( *Var[A] )
            Call  SetActorVar       ( *Var[A] 00000001 00000004 )
    EndSwitch
    Return
    End
}

#new:Script $Script_80222C44
{
    Set   *Var[A]  00000000
    Call  PlayerCreateTargetList    ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorVar   ( *Var[0] 00000001 *Var[1] )
    If  *Var[1]  ==  00000000
        Call  GetStatusFlags    ( *Var[0] *Var[1] )
        If  *Var[1]  ==  00000000
            If  *Var[A]  ==  00000000
                Call  SetActorVar   ( .Actor:Self 00000004 *Var[0] )
            EndIf
            Add   *Var[A]  00000001
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Switch  *Var[A]
        Case  ==  00000000
            Return
        Case  ==  00000001
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            ConstOR  *Var[0] 00000200
            Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Return
    EndSwitch
    Call  SetActorVar       ( .Actor:Self 00000003 *Var[A] )
    Set   *Flag[00]  .False
    Set   *Var[B]  *Var[A]
    Sub   *Var[B]  00000001
    Call  PlayerCreateTargetList    ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorVar       ( *Var[0] 00000001 *Var[1] )
    If  *Var[1]  ==  00000000
        Call  GetStatusFlags    ( *Var[0] *Var[1] )
        If  *Var[1]  ==  00000000
            Set   *Var[1]  *Var[A]
            Set   *Var[2]  *Var[B]
            Exec  $Script_80220588
            Sub   *Var[B]  00000001
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  1
    EndIf
    Call  802535B4      ( 00000000 )
    Label  2
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Wait  1`
    If  *Var[0]  ==  00000003
        Goto  2
    EndIf
    Call  802535B4      ( 00000001 )
    Call  SetActorFlagBits  ( .Actor:Self 02000000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .False )
    Set   *Var[0]  *Var[A]
    Mul   *Var[0]  00000012
    Add   *Var[0]  00000014
    Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var[0] )
    Call  SetActorSize  ( .Actor:Self *Var[0] 0000002D )
    Call  SetActorType  ( .Actor:Self 0000009A )
    Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
    Call  GetActorPos   ( *Var[1] *Var[2] *Var[3] *Var[4] )
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Set   *Var[A]  00000000
    ExecWait  $Script_80223870
    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    Return
    End
}

#new:Script $Script_802230E8
{
    Set   *Var[A]  00000000
    Call  PlayerCreateTargetList    ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorVar   ( *Var[0] 00000001 *Var[1] )
    If  *Var[1]  ==  00000000
        Call  GetStatusFlags    ( *Var[0] *Var[1] )
        If  *Var[1]  ==  00000000
            Add   *Var[A]  00000001
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    If  *Var[A]  ==  00000000
        Return
    EndIf
    Set   *Var[3]  *Var[A]
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[0] )
    Add   *Var[A]  *Var[0]
    Call  SetActorVar   ( .Actor:Self 00000003 *Var[A] )
    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    ConstAND  *Var[0] FFFFFEFF
    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    Set   *Var[0]  00000200
    Loop  00000004
        Call  ActorExists   ( *Var[0] *Var[1] )
        If  *Var[1]  ==  .True
            Call  GetActorVar   ( *Var[0] 00000001 *Var[2] )
            If  *Var[2]  ==  00000003
                Set   *Var[1]  *Var[A]
                Set   *Var[2]  FFFFFFFF
                Exec  $Script_80221DB4
                BreakLoop
            EndIf
        EndIf
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[2]  00000000
    Call  PlayerCreateTargetList    ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorVar   ( *Var[0] 00000001 *Var[8] )
    If  *Var[8]  ==  00000000
        Set   *Var[1]  *Var[A]
        Exec  $Script_80221DB4
        Add   *Var[2]  00000001
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  1
    EndIf
    Call  802535B4      ( 00000000 )
    Label  2
    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    If  *Var[0]  !&  00000100
        Wait  1`
        Goto  2
    EndIf
    Call  802535B4      ( 00000001 )
    Call  SetActorFlagBits  ( .Actor:Self 02000000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .False )
    Set   *Var[0]  *Var[A]
    Mul   *Var[0]  00000012
    Add   *Var[0]  00000014
    Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var[0] )
    Call  SetActorSize  ( .Actor:Self *Var[0] 0000002D )
    Call  SetActorType  ( .Actor:Self 0000009A )
    Call  GetActorVar   ( .Actor:Self 00000004 *Var[1] )
    Call  GetActorPos   ( *Var[1] *Var[2] *Var[3] *Var[4] )
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Set   *Var[A]  00000000
    ExecWait  $Script_80223870
    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    Return
    End
}

#new:Script $Script_802235E0
{
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000002
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    ConstOR  *Var[0] 00000010
    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
    Set   *Var[A]  00000001
    ExecWait  $Script_80223870
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[A] )
    Set   *Var[0]  *Var[A]
    Mul   *Var[0]  00000012
    Add   *Var[0]  00000005
    Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var[0] )
    Call  SetActorSize  ( .Actor:Self *Var[0] 0000002D )
    Return
    End
}

#new:Script $Script_80223718
{
    Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:BurnHit % E
        Set   *Var[A]  00000005
    Else
        Set   *Var[A]  00000006
    EndIf
    ExecWait  $Script_80223870
    Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
    Call  GetActorVar       ( .Actor:Enemy4 00000000 *Var[0] )
    ConstAND  *Var[0] FFFFFFEF
    Call  SetActorVar       ( .Actor:Enemy4 00000000 *Var[0] )
    Call  GetActorVar       ( .Actor:Enemy4 00000000 *Var[0] )
    ConstAND  *Var[0] FFFFFFDF
    Call  SetActorVar       ( .Actor:Enemy4 00000000 *Var[0] )
    Return
    End
}

#new:Script $Script_80223870
{
    Call  ActorExists   ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  ==  .True
        Exec  $Script_802257A8 *Var[1]
    EndIf
    Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  ==  .True
        Exec  $Script_8022E688 *Var[1]
    EndIf
    Call  ActorExists   ( .Actor:Enemy2 *Var[0] )
    If  *Var[0]  ==  .True
        Exec  $Script_8022B6E8 *Var[1]
    EndIf
    Call  ActorExists   ( .Actor:Enemy3 *Var[0] )
    If  *Var[0]  ==  .True
        Exec  $Script_80228748 *Var[1]
    EndIf
    Label  0
    DoesScriptExist  *Var[1] *Var[0]
    If  *Var[0]  ==  00000001
        Wait  1`
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_Idle_802239BC
{
    Label  0
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  !=  00000002
        Wait  1`
        Goto  0
    EndIf
    Call  ActorExists   ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorPos   ( .Actor:Enemy0 *Var[A] *Var[E] *Var[F] )
    EndIf
    Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorPos   ( .Actor:Enemy1 *Var[C] *Var[E] *Var[F] )
    EndIf
    Call  ActorExists   ( .Actor:Enemy2 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorPos   ( .Actor:Enemy2 *Var[D] *Var[E] *Var[F] )
    EndIf
    Call  ActorExists   ( .Actor:Enemy3 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorPos   ( .Actor:Enemy3 *Var[B] *Var[E] *Var[F] )
    EndIf
    Label  1
    Call  ActorExists   ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy0 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  RandInt       ( 00000002 *Var[0] )
                Set   *Var[1]  00000001
                Sub   *Var[0]  *Var[1]
                Add   *Var[0]  *Var[A]
                Call  GetActorPos   ( .Actor:Enemy0 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy0 *Var[0] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy1 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  RandInt       ( 00000002 *Var[0] )
                Set   *Var[1]  00000001
                Sub   *Var[0]  *Var[1]
                Add   *Var[0]  *Var[C]
                Call  GetActorPos   ( .Actor:Enemy1 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy1 *Var[0] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Call  ActorExists   ( .Actor:Enemy2 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy2 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  RandInt       ( 00000002 *Var[0] )
                Set   *Var[1]  00000001
                Sub   *Var[0]  *Var[1]
                Add   *Var[0]  *Var[D]
                Call  GetActorPos   ( .Actor:Enemy2 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy2 *Var[0] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Call  ActorExists   ( .Actor:Enemy3 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy3 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  RandInt       ( 00000002 *Var[0] )
                Set   *Var[1]  00000001
                Sub   *Var[0]  *Var[1]
                Add   *Var[0]  *Var[B]
                Call  GetActorPos   ( .Actor:Enemy3 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy3 *Var[0] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000002
        Wait  2`
        Goto  1
    EndIf
    Call  ActorExists   ( .Actor:Enemy0 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy0 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  GetActorPos   ( .Actor:Enemy0 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy0 *Var[A] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Call  ActorExists   ( .Actor:Enemy1 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy1 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  GetActorPos   ( .Actor:Enemy1 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy1 *Var[C] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Call  ActorExists   ( .Actor:Enemy2 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy2 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  GetActorPos   ( .Actor:Enemy2 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy2 *Var[D] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Call  ActorExists   ( .Actor:Enemy3 *Var[0] )
    If  *Var[0]  !=  .False
        Call  GetActorVar   ( .Actor:Enemy3 00000001 *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000003
            CaseOR  ==  00000004
            CaseOR  ==  00000005
            CaseOR  ==  00000006
                Call  GetActorPos   ( .Actor:Enemy3 *Var[1] *Var[2] *Var[3] )
                Call  SetActorPos   ( .Actor:Enemy3 *Var[B] *Var[2] *Var[3] )
            EndCaseGroup
        EndSwitch
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_802242FC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  00080000 % 80000
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000080
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Else
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000040
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            Set   *Var[A]  00000002
            ExecWait  $Script_80223870
            Wait  30`
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000220
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000040
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000080
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            ExecWait  $Script_802235E0
        Case  ==  .Event:Hit % A
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  00080000
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000080
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Else
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000040
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000220
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000040
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000080
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  &  00000040
                If  *Var[0]  &  00000080
                    ExecWait  $Script_80223718
                    Wait  20`
                    Call  UseIdleAnimation  ( .Actor:Self .True )
                    Return
                EndIf
            EndIf
            Set   *Var[A]  00000002
            ExecWait  $Script_80223870
            Wait  30`
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  !=  00000002
                ExecWait  $Script_802235E0
            EndIf
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  &  00000010
                If  *Var[0]  !&  00000020
                    Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
                    Call  ActorSpeak    ( 000C0109 *Var[0] 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstOR  *Var[0] 00000020
                    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    Wait  20`
                EndIf
            EndIf
        Case  ==  .Event:BurnHit % E
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  00080000
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000080
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Else
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000040
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000220
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000040
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000080
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  &  00000040
                If  *Var[0]  &  00000080
                    ExecWait  $Script_80223718
                    Wait  20`
                    Call  UseIdleAnimation  ( .Actor:Self .True )
                    Return
                EndIf
            EndIf
            Set   *Var[A]  00000003
            ExecWait  $Script_80223870
            Wait  30`
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  !=  00000002
                ExecWait  $Script_802235E0
            EndIf
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  &  00000010
                If  *Var[0]  !&  00000020
                    Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
                    Call  ActorSpeak    ( 000C0109 *Var[0] 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstOR  *Var[0] 00000020
                    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    Wait  20`
                EndIf
            EndIf
        Case  ==  00000017 % 17
            Set   *Var[A]  00000004
            ExecWait  $Script_80223870
        Case  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000002
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000040
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                ConstOR  *Var[0] 00000080
                Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndIf
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  &  00000040
                If  *Var[0]  &  00000080
                    ExecWait  $Script_80223718
                    Wait  20`
                    Call  UseIdleAnimation  ( .Actor:Self .True )
                    Return
                EndIf
            EndIf
            Set   *Var[A]  00000004
            ExecWait  $Script_80223870
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            If  *Var[0]  &  00000010
                If  *Var[0]  !&  00000020
                    Call  GetActorVar   ( .Actor:Self 00000004 *Var[0] )
                    Call  ActorSpeak    ( 000C0109 *Var[0] 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstOR  *Var[0] 00000020
                    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    Wait  20`
                EndIf
            EndIf
        CaseOR  ==  .Event:Death % 20
        CaseOR  ==  .Event:BurnDeath % 24
        EndCaseGroup
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80224D84
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  00000001
        Case  ==  00000002
            Wait  30`
            Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
            Set   *Var[A]  00000000
            ExecWait  $Script_80223870
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            ConstAND  *Var[0] FFFFFFEF
            Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            ConstAND  *Var[0] FFFFFFDF
            Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[A] )
            Set   *Var[0]  *Var[A]
            Mul   *Var[0]  00000012
            Add   *Var[0]  00000014
            Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var[0] )
            Call  SetActorSize  ( .Actor:Self *Var[0] 0000002D )
        Case  ==  00000003
    EndSwitch
    Set   *Var[0]  00000200
    Loop  00000004
        Call  ActorExists   ( *Var[0] *Var[1] )
        If  *Var[1]  ==  .True
            Call  GetStatusFlags    ( *Var[0] *Var[1] )
            If  *Var[1]  ==  .False
                Call  GetActorVar   ( *Var[0] 00000001 *Var[1] )
                If  *Var[1]  ==  .True
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
            EndIf
        EndIf
        Add   *Var[0]  00000001
    EndLoop
    If  *Flag[00]  ==  .True
        Call  UseCamPreset  ( 00000013 )
        Call  SetBattleCamTarget    ( 0000005A 00000000 00000000 )
        Call  SetBattleCamZoom      ( 0000015E )
        Call  SetBattleCamOffsetZ   ( 00000028 )
        Call  MoveBattleCamOver     ( 0000000F )
        Wait  15`
    EndIf
    Set   *Var[A]  00000009
    ExecWait  $Script_80223870
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000001
            ExecWait  $Script_802230E8
        Default
            ExecWait  $Script_80222C44
    EndSwitch
    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    If  *Var[0]  &  00000200
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000F )
        Set   *Var[A]  00000008
        ExecWait  $Script_80223870
        Label  7B
        Call  GetActorVar       ( .Actor:Enemy4 00000000 *Var[0] )
        If  *Var[0]  &  00000200
            Wait  1`
            Goto  7B
        EndIf
        Set   *Var[A]  0000000A
        ExecWait  $Script_80223870
        Wait  5`
        Return
    EndIf
    Set   *Var[A]  0000000A
    ExecWait  $Script_80223870
    Wait  5`
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000003
        Return
    EndIf
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    If  *Var[0]  !&  00000004
        Call  GetActorVar   ( .Actor:Self 00000005 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000200
                Call  ActorSpeak    ( 000C0108 *Var[0] 00000001 00660314 00660304 ) % The Koopa Bros. special: super spinning attack!
            Case  ==  00000201
                Call  ActorSpeak    ( 000C0108 *Var[0] 00000001 00660214 00660204 ) % The Koopa Bros. special: super spinning attack!
            Case  ==  00000202
                Call  ActorSpeak    ( 000C0108 *Var[0] 00000001 00660014 00660004 ) % The Koopa Bros. special: super spinning attack!
            Case  ==  00000203
                Call  ActorSpeak    ( 000C0108 *Var[0] 00000001 00660114 00660104 ) % The Koopa Bros. special: super spinning attack!
        EndSwitch
        Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
        ConstOR  *Var[0] 00000004
        Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
    EndIf
    Set   *Var[A]  00000007
    ExecWait  $Script_80223870
    Label  A
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Wait  1`
    If  *Var[0]  !=  00000000
        Goto  A
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
    Return
    End
}

#new:Script $Script_NextTurn_80225438
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetEnemyMaxHP     ( .Actor:Self *Var[0] )
    Call  SetEnemyHP        ( .Actor:Self *Var[0] )
    Call  GetBattlePhase    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            ConstAND  *Var[0] FFFFFFBF
            Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            ConstAND  *Var[0] FFFFFF7F
            Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
        Case  ==  0000000C
        Case  ==  0000000B
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_80225560
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8022556C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80225578
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      45`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink    100`
    .Status:Stop       75`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_80225624
{
    00800000 01000000 FB2400FF $IdleAnimations_80225670 $DefenseTable_80225560 00001000 00000000 00000000 00000000
}

#new:Actor $GNinjakoopa
{
    % stats
    [Index]        9Bb
    [Level]        16`b
    [MaxHP]         5`b
    [Coins]         0`b
    [Flags]       00240000
    [StatusTable] $StatusTable_80225578
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80225624
    [Script]      $Script_Init_80227CEC
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80225670
{
    .Status:Normal    00660304
    .Status:Stone     00660300
    .Status:Sleep     00660315
    .Status:Poison    00660300
    .Status:Stop      00660300
    .Status:Static    00660300
    .Status:Paralyze  00660300
    .Status:Paralyze  00660300
    .Status:Dizzy     00660318
    .Status:Dizzy     00660318
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802256C4
{
    .Status:Normal    00660305
    .Status:Stone     00660301
    .Status:Poison    00660301
    .Status:Stop      00660301
    .Status:Static    00660301
    .Status:Paralyze  00660301
    .Status:Paralyze  00660301
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80225700
{
    .Status:Normal    0066030D
    .Status:Stone     00660301
    .Status:Poison    00660301
    .Status:Stop      00660301
    .Status:Static    00660301
    .Status:Paralyze  00660301
    .Status:Paralyze  00660301
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022573C
{
    .Status:Normal    0066030C
    .Status:Stone     00660317
    .Status:Sleep     00660317
    .Status:Poison    00660317
    .Status:Stop      00660317
    .Status:Static    00660317
    .Status:Paralyze  00660317
    .Status:Paralyze  00660317
    .Status:Dizzy     00660322
    .Status:Dizzy     00660322
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80225790
{
    .Status:Normal    0066030A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022579C
{
    .Status:Normal    0066030C
    .Status:End
}

#new:Script $Script_802257A8
{
    Call  SetOwnerID        ( .Actor:Enemy0 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  00000000
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Switch  *Var[A]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225670 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660304 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802256C4 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660305 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Wait  5`
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225700 )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066030D )
                EndCaseGroup
            EndSwitch
        Case  ==  00000002
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066030B
                    ExecWait  DoNormalHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225700 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066030D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066030A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000003
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  $Function_80218B48    ( 0000000E )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066030E
                    SetConst  *Var[2]  FFFFFFFF
                    ExecWait  DoBurnHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225700 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066030D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066030A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000004
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00660308
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066031F
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660320 )
                EndCaseGroup
            EndSwitch
            Wait  15`
        Case  ==  00000005
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_802185B0    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066030A )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_802183E0    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  SetAnimation  ( .Actor:Self 00000001 0066030C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022579C )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022573C )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022556C )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000006
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_802185B0    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066030E )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_802183E0    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
                    DivF  *Var[3]  *Fixed[2.0]
                    AddF  *Var[1]  *Var[3]
                    AddF  *Var[2]  *Fixed[5.0]
                    DivF  *Var[3]  *Fixed[10.0]
                    Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066030C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022579C )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022573C )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022556C )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000009
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000001
                    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                    Sub   *Var[0]  00000001
                    If  *Var[0]  >  00000000
                        Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  20`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                    Else
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  12`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                        Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                        Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
                        Thread
                            Set   *Var[0]  00000000
                            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
                            Loop  00000004
                                Add   *Var[0]  00000016
                                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                                Wait  1`
                            EndLoop
                        EndThread
                        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                        Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                        Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
                        Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
                        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225560 )
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225670 )
                        Call  SetAnimation      ( .Actor:Self 00000001 00660304 )
                        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
                    EndIf
                Default
                    Wait  20`
            EndSwitch
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000002
                    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
            EndSwitch
        Case  ==  00000007
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetAnimation  ( .Actor:Self 00000001 00660308 )
                    Wait  10`
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
                        Case  ==  00000003
                            Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
                        Case  ==  00000002
                            Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660307 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[A] )
                        Label  0
                        Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[1] )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 *Var[1] 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  .HitResult:LandedOnSpike % 4
                            Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
                        Case  ==  00000003 % 3
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000002 % 2
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                    EndSwitch
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                    Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                    Set   *Var[4]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[B] )
                    Set   *Var[0]  *Var[B]
                    Sub   *Var[0]  00000001
                    Mul   *Var[0]  00000012
                    Switch  *Var[B]
                        Case  ==  00000004
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
                        Case  ==  00000003
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
                        Case  ==  00000002
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFFC )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 0000003C )
                            Wait  60`
                        Case  ==  00000003
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000002
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
                    Wait  10`
                    Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066031B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660304 )
                    Wait  20`
                    Call  SetActorVar   ( .Actor:Enemy4 00000001 00000000 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetAnimation  ( .Actor:Self 00000001 0066031F )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660307 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Call  EnableActorBlur       ( .Actor:Self 00000001 )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000005
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                        Case  ==  00000006
                            Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
                    EndSwitch
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
                        Case  ==  00000005
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
                        Case  ==  00000006
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000005
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                        Case  ==  00000006
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 0000001E )
                            Wait  30`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660320 )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660305 )
                    Wait  30`
                EndCaseGroup
            EndSwitch
        Case  ==  00000008
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660303 )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066031F )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660307 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Label  0
                        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218438    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066031B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660303 )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] FFFFFDFF
                    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndSwitch
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_80227CEC
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802284D4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80227DE0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227E48 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802284E4 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80227DE0
{
    Return
    End
}

#new:IntTable $IntTable_80227DF0
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80227E48
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030E
            SetConst  *Var[2]  0066030F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030E
            SetConst  *Var[2]  0066030F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022573C )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022556C )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
            Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 0066030B )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Thread
                    Wait  4`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                    Wait  1`
                EndThread
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 0066030C )
            EndIf
            UseIntBuffer  $IntTable_80227DF0
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660308
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  ==  00000000
                    Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0066030C
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030B
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066030B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660304
                ExecWait  DoRecover
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802284D4
{
    Return
    End
}

#new:Script $Script_NextTurn_802284E4
{
    Return
    End
}

PADDING: 802284F4 to 80228500 (004C16E4 to 004C16F0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80228500
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8022850C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80228518
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      30`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      60`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   60`
    .Status:Shrink    100`
    .Status:Stop       75`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_802285C4
{
    00800000 01000000 FB2400FF $IdleAnimations_80228610 $DefenseTable_80228500 00001000 00000000 00000000 00000000
}

#new:Actor $RNinjakoopa
{
    % stats
    [Index]        9Cb
    [Level]        17`b
    [MaxHP]         5`b
    [Coins]         0`b
    [Flags]       00240000
    [StatusTable] $StatusTable_80228518
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802285C4
    [Script]      $Script_Init_8022AC8C
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80228610
{
    .Status:Normal    00660104
    .Status:Stone     00660100
    .Status:Sleep     00660115
    .Status:Poison    00660100
    .Status:Stop      00660100
    .Status:Static    00660100
    .Status:Paralyze  00660100
    .Status:Paralyze  00660100
    .Status:Dizzy     00660118
    .Status:Dizzy     00660118
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80228664
{
    .Status:Normal    00660105
    .Status:Stone     00660101
    .Status:Poison    00660101
    .Status:Stop      00660101
    .Status:Static    00660101
    .Status:Paralyze  00660101
    .Status:Paralyze  00660101
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802286A0
{
    .Status:Normal    0066010D
    .Status:Stone     00660101
    .Status:Poison    00660101
    .Status:Stop      00660101
    .Status:Static    00660101
    .Status:Paralyze  00660101
    .Status:Paralyze  00660101
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802286DC
{
    .Status:Normal    0066010C
    .Status:Stone     00660117
    .Status:Sleep     00660117
    .Status:Poison    00660117
    .Status:Stop      00660117
    .Status:Static    00660117
    .Status:Paralyze  00660117
    .Status:Paralyze  00660117
    .Status:Dizzy     00660122
    .Status:Dizzy     00660122
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80228730
{
    .Status:Normal    0066010A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022873C
{
    .Status:Normal    0066010C
    .Status:End
}

#new:Script $Script_80228748
{
    Call  SetOwnerID        ( .Actor:Enemy3 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  00000000
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Switch  *Var[A]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228610 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660104 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228664 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660105 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Wait  5`
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286A0 )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066010D )
                EndCaseGroup
            EndSwitch
        Case  ==  00000002
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066010B
                    ExecWait  DoNormalHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286A0 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066010D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066010A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000003
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  $Function_80219308    ( 0000000E )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066010E
                    SetConst  *Var[2]  FFFFFFFF
                    ExecWait  DoBurnHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286A0 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066010D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066010A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000004
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00660108
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066011F
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660120 )
                EndCaseGroup
            EndSwitch
            Wait  15`
        Case  ==  00000005
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_80218D70    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066010A )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_80218BA0    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  SetAnimation  ( .Actor:Self 00000001 0066010C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022873C )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286DC )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022850C )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000006
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_80218D70    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066010E )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_80218BA0    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
                    DivF  *Var[3]  *Fixed[2.0]
                    AddF  *Var[1]  *Var[3]
                    AddF  *Var[2]  *Fixed[5.0]
                    DivF  *Var[3]  *Fixed[10.0]
                    Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066010C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022873C )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286DC )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022850C )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000009
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000001
                    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                    Sub   *Var[0]  00000001
                    If  *Var[0]  >  00000000
                        Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  20`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                    Else
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  12`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                        Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                        Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
                        Thread
                            Set   *Var[0]  00000000
                            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
                            Loop  00000004
                                Add   *Var[0]  00000016
                                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                                Wait  1`
                            EndLoop
                        EndThread
                        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                        Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                        Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
                        Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
                        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80228500 )
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228610 )
                        Call  SetAnimation      ( .Actor:Self 00000001 00660104 )
                        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
                    EndIf
                Default
                    Wait  20`
            EndSwitch
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000002
                    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
            EndSwitch
        Case  ==  00000007
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetAnimation  ( .Actor:Self 00000001 00660108 )
                    Wait  10`
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
                        Case  ==  00000003
                            Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
                        Case  ==  00000002
                            Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660107 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[A] )
                        Label  0
                        Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[1] )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 *Var[1] 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  .HitResult:LandedOnSpike % 4
                            Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
                        Case  ==  00000003 % 3
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000002 % 2
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                    EndSwitch
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                    Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                    Set   *Var[4]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[B] )
                    Set   *Var[0]  *Var[B]
                    Sub   *Var[0]  00000001
                    Mul   *Var[0]  00000012
                    Switch  *Var[B]
                        Case  ==  00000004
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
                        Case  ==  00000003
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
                        Case  ==  00000002
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFFC )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 0000003C )
                            Wait  60`
                        Case  ==  00000003
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000002
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
                    Wait  10`
                    Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066011B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660104 )
                    Wait  20`
                    Call  SetActorVar   ( .Actor:Enemy4 00000001 00000000 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetAnimation  ( .Actor:Self 00000001 0066011F )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660107 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Call  EnableActorBlur       ( .Actor:Self 00000001 )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000005
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                        Case  ==  00000006
                            Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
                    EndSwitch
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
                        Case  ==  00000005
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
                        Case  ==  00000006
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000005
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                        Case  ==  00000006
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 0000001E )
                            Wait  30`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660120 )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660105 )
                    Wait  30`
                EndCaseGroup
            EndSwitch
        Case  ==  00000008
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660103 )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066011F )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660107 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Label  0
                        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80218BF8    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066011B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660103 )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] FFFFFDFF
                    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndSwitch
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_8022AC8C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B474 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022AD80 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADE8 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022B484 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8022AD80
{
    Return
    End
}

#new:IntTable $IntTable_8022AD90
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8022ADE8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010E
            SetConst  *Var[2]  0066010F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010E
            SetConst  *Var[2]  0066010F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286DC )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022850C )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
            Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 0066010B )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Thread
                    Wait  4`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                    Wait  1`
                EndThread
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 0066010C )
            EndIf
            UseIntBuffer  $IntTable_8022AD90
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660108
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  ==  00000000
                    Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0066010C
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010B
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660104
                ExecWait  DoRecover
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022B474
{
    Return
    End
}

#new:Script $Script_NextTurn_8022B484
{
    Return
    End
}

PADDING: 8022B494 to 8022B4A0 (004C4684 to 004C4690)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8022B4A0
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8022B4AC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022B4B8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      40`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      30`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   60`
    .Status:Shrink    100`
    .Status:Stop       75`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_8022B564
{
    00800000 01000000 FB2400FF $IdleAnimations_8022B5B0 $DefenseTable_8022B4A0 00001000 00000000 00000000 00000000
}

#new:Actor $BNinjakoopa
{
    % stats
    [Index]        9Db
    [Level]        17`b
    [MaxHP]         5`b
    [Coins]         0`b
    [Flags]       00240000
    [StatusTable] $StatusTable_8022B4B8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022B564
    [Script]      $Script_Init_8022DC2C
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022B5B0
{
    .Status:Normal    00660004
    .Status:Stone     00660000
    .Status:Sleep     00660015
    .Status:Poison    00660000
    .Status:Stop      00660000
    .Status:Static    00660000
    .Status:Paralyze  00660000
    .Status:Paralyze  00660000
    .Status:Dizzy     00660018
    .Status:Dizzy     00660018
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022B604
{
    .Status:Normal    00660005
    .Status:Stone     00660001
    .Status:Poison    00660001
    .Status:Stop      00660001
    .Status:Static    00660001
    .Status:Paralyze  00660001
    .Status:Paralyze  00660001
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022B640
{
    .Status:Normal    0066000D
    .Status:Stone     00660001
    .Status:Poison    00660001
    .Status:Stop      00660001
    .Status:Static    00660001
    .Status:Paralyze  00660001
    .Status:Paralyze  00660001
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022B67C
{
    .Status:Normal    0066000C
    .Status:Stone     00660017
    .Status:Sleep     00660017
    .Status:Poison    00660017
    .Status:Stop      00660017
    .Status:Static    00660017
    .Status:Paralyze  00660017
    .Status:Paralyze  00660017
    .Status:Dizzy     00660022
    .Status:Dizzy     00660022
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022B6D0
{
    .Status:Normal    0066000A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022B6DC
{
    .Status:Normal    0066000C
    .Status:End
}

#new:Script $Script_8022B6E8
{
    Call  SetOwnerID        ( .Actor:Enemy2 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  00000000
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Switch  *Var[A]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B5B0 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660004 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B604 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660005 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Wait  5`
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B640 )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066000D )
                EndCaseGroup
            EndSwitch
        Case  ==  00000002
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066000B
                    ExecWait  DoNormalHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B640 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066000D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066000A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000003
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  $Function_80219AC8    ( 0000000E )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066000E
                    SetConst  *Var[2]  FFFFFFFF
                    ExecWait  DoBurnHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B640 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066000D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066000A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000004
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00660008
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066001F
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660020 )
                EndCaseGroup
            EndSwitch
            Wait  15`
        Case  ==  00000005
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_80219530    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066000A )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_80219360    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  SetAnimation  ( .Actor:Self 00000001 0066000C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6DC )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B67C )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4AC )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000006
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_80219530    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066000E )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_80219360    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
                    DivF  *Var[3]  *Fixed[2.0]
                    AddF  *Var[1]  *Var[3]
                    AddF  *Var[2]  *Fixed[5.0]
                    DivF  *Var[3]  *Fixed[10.0]
                    Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066000C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6DC )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B67C )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4AC )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000009
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000001
                    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                    Sub   *Var[0]  00000001
                    If  *Var[0]  >  00000000
                        Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  20`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                    Else
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  12`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                        Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                        Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
                        Thread
                            Set   *Var[0]  00000000
                            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
                            Loop  00000004
                                Add   *Var[0]  00000016
                                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                                Wait  1`
                            EndLoop
                        EndThread
                        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                        Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                        Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
                        Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
                        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4A0 )
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B5B0 )
                        Call  SetAnimation      ( .Actor:Self 00000001 00660004 )
                        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
                    EndIf
                Default
                    Wait  20`
            EndSwitch
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000002
                    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
            EndSwitch
        Case  ==  00000007
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetAnimation  ( .Actor:Self 00000001 00660008 )
                    Wait  10`
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
                        Case  ==  00000003
                            Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
                        Case  ==  00000002
                            Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660007 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[A] )
                        Label  0
                        Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[1] )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 *Var[1] 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  .HitResult:LandedOnSpike % 4
                            Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
                        Case  ==  00000003 % 3
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000002 % 2
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                    EndSwitch
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                    Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                    Set   *Var[4]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[B] )
                    Set   *Var[0]  *Var[B]
                    Sub   *Var[0]  00000001
                    Mul   *Var[0]  00000012
                    Switch  *Var[B]
                        Case  ==  00000004
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
                        Case  ==  00000003
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
                        Case  ==  00000002
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFFC )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 0000003C )
                            Wait  60`
                        Case  ==  00000003
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000002
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
                    Wait  10`
                    Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066001B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660004 )
                    Wait  20`
                    Call  SetActorVar   ( .Actor:Enemy4 00000001 00000000 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetAnimation  ( .Actor:Self 00000001 0066001F )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660007 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Call  EnableActorBlur       ( .Actor:Self 00000001 )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000005
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                        Case  ==  00000006
                            Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
                    EndSwitch
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
                        Case  ==  00000005
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
                        Case  ==  00000006
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000005
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                        Case  ==  00000006
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 0000001E )
                            Wait  30`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660020 )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660005 )
                    Wait  30`
                EndCaseGroup
            EndSwitch
        Case  ==  00000008
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660003 )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066001F )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660007 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Label  0
                        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_802193B8    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066001B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660003 )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] FFFFFDFF
                    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndSwitch
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_8022DC2C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E414 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022DD20 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022DD88 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022E424 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8022DD20
{
    Return
    End
}

#new:IntTable $IntTable_8022DD30
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8022DD88
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000E
            SetConst  *Var[2]  0066000F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000E
            SetConst  *Var[2]  0066000F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B67C )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4AC )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
            Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 0066000B )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Thread
                    Wait  4`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                    Wait  1`
                EndThread
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 0066000C )
            EndIf
            UseIntBuffer  $IntTable_8022DD30
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660008
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  ==  00000000
                    Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0066000C
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000B
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660004
                ExecWait  DoRecover
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022E414
{
    Return
    End
}

#new:Script $Script_NextTurn_8022E424
{
    Return
    End
}

PADDING: 8022E434 to 8022E440 (004C7624 to 004C7630)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8022E440
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8022E44C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022E458
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   75`
    .Status:Shrink    100`
    .Status:Stop       75`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod  -1`
    .Status:ShrinkTurnMod    -1`
    .Status:StopTurnMod      -2`
    .Status:End
}

#new:PartsTable $PartsTable_8022E504
{
    00800000 01000000 FB2400FF $IdleAnimations_8022E550 $DefenseTable_8022E440 00001000 00000000 00000000 00000000
}

#new:Actor $YNinjakoopa
{
    % stats
    [Index]        9Eb
    [Level]        16`b
    [MaxHP]         5`b
    [Coins]         0`b
    [Flags]       00240000
    [StatusTable] $StatusTable_8022E458
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022E504
    [Script]      $Script_Init_80230BCC
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         38`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022E550
{
    .Status:Normal    00660204
    .Status:Stone     00660200
    .Status:Sleep     00660215
    .Status:Poison    00660200
    .Status:Stop      00660200
    .Status:Static    00660200
    .Status:Paralyze  00660200
    .Status:Paralyze  00660200
    .Status:Dizzy     00660218
    .Status:Dizzy     00660218
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022E5A4
{
    .Status:Normal    00660205
    .Status:Stone     00660201
    .Status:Poison    00660201
    .Status:Stop      00660201
    .Status:Static    00660201
    .Status:Paralyze  00660201
    .Status:Paralyze  00660201
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022E5E0
{
    .Status:Normal    0066020D
    .Status:Stone     00660201
    .Status:Poison    00660201
    .Status:Stop      00660201
    .Status:Static    00660201
    .Status:Paralyze  00660201
    .Status:Paralyze  00660201
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022E61C
{
    .Status:Normal    0066020C
    .Status:Stone     00660217
    .Status:Sleep     00660217
    .Status:Poison    00660217
    .Status:Stop      00660217
    .Status:Static    00660217
    .Status:Paralyze  00660217
    .Status:Paralyze  00660217
    .Status:Dizzy     00660222
    .Status:Dizzy     00660222
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022E670
{
    .Status:Normal    0066020A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022E67C
{
    .Status:Normal    0066020C
    .Status:End
}

#new:Script $Script_8022E688
{
    Call  SetOwnerID        ( .Actor:Enemy1 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  00000000
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Switch  *Var[A]
        Case  ==  00000000
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E550 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660204 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5A4 )
                    Call  SetAnimation      ( .Actor:Self 00000001 00660205 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Wait  5`
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5E0 )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066020D )
                EndCaseGroup
            EndSwitch
        Case  ==  00000002
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066020B
                    ExecWait  DoNormalHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5E0 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066020D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066020A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000003
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  $Function_8021A288    ( 0000000E )
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066020E
                    SetConst  *Var[2]  FFFFFFFF
                    ExecWait  DoBurnHit
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] 000000C0
                    If  *Var[0]  !=  000000C0
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5E0 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066020D )
                    Else
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670 )
                        Call  SetAnimation      ( .Actor:Self 00000001 0066020A )
                    EndIf
                EndCaseGroup
            EndSwitch
        Case  ==  00000004
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  00660208
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  0066021F
                    ExecWait  DoImmune
                    Call  SetAnimation  ( .Actor:Self 00000001 00660220 )
                EndCaseGroup
            EndSwitch
            Wait  15`
        Case  ==  00000005
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_80219CF0    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066020A )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_80219B20    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  SetAnimation  ( .Actor:Self 00000001 0066020C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E67C )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E61C )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E44C )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000006
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                CaseOR  ==  00000003
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Set   *Flag[00]  .False
                    If  *Var[0]  ==  00000003
                        Set   *Flag[00]  .True
                    EndIf
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
                    Call  $Function_80219CF0    ( *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation      ( .Actor:Self 00000001 0066020E )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670 )
                    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
                    If  *Flag[00]  ==  .True
                        Call  $Function_80219B20    ( 00000100 00000005 )
                        Thread
                            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
                        EndThread
                    EndIf
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
                    DivF  *Var[3]  *Fixed[2.0]
                    AddF  *Var[1]  *Var[3]
                    AddF  *Var[2]  *Fixed[5.0]
                    DivF  *Var[3]  *Fixed[10.0]
                    Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066020C )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E67C )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
                    Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
                    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  HPBarToHome   ( .Actor:Self )
                    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E61C )
                    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E44C )
                    Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
                    Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
                    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
                EndCaseGroup
            EndSwitch
        Case  ==  00000009
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000001
                    Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
                    Sub   *Var[0]  00000001
                    If  *Var[0]  >  00000000
                        Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  20`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                    Else
                        Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                        Wait  12`
                        Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                        Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                        Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
                        Thread
                            Set   *Var[0]  00000000
                            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
                            Loop  00000004
                                Add   *Var[0]  00000016
                                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                                Wait  1`
                            EndLoop
                        EndThread
                        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                        Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                        Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                        Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                        Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
                        Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
                        Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E440 )
                        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E550 )
                        Call  SetAnimation      ( .Actor:Self 00000001 00660204 )
                        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
                    EndIf
                Default
                    Wait  20`
            EndSwitch
        Case  ==  0000000A
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000002
                    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
            EndSwitch
        Case  ==  00000007
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000003
                    Call  SetAnimation  ( .Actor:Self 00000001 00660208 )
                    Wait  10`
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
                        Case  ==  00000003
                            Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
                        Case  ==  00000002
                            Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660207 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[A] )
                        Label  0
                        Call  GetActorPos   ( *Var[A] *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[1] )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 *Var[1] 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  GetActorVar       ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  .HitResult:LandedOnSpike % 4
                            Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
                        Case  ==  00000003 % 3
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000002 % 2
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                    EndSwitch
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                    Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                    Set   *Var[4]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[B] )
                    Set   *Var[0]  *Var[B]
                    Sub   *Var[0]  00000001
                    Mul   *Var[0]  00000012
                    Switch  *Var[B]
                        Case  ==  00000004
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
                        Case  ==  00000003
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
                        Case  ==  00000002
                            Call  AddGoalPos    ( .Actor:Self 00000000 *Var[0] FFFFFFFC )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000003 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 0000003C )
                            Wait  60`
                        Case  ==  00000003
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000002
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
                    Wait  10`
                    Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066021B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660204 )
                    Wait  20`
                    Call  SetActorVar   ( .Actor:Enemy4 00000001 00000000 )
                CaseOR  ==  00000004
                CaseOR  ==  00000005
                CaseOR  ==  00000006
                    Call  SetAnimation  ( .Actor:Self 00000001 0066021F )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660207 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 0000003C )
                    Wait  60`
                    Call  EnableActorBlur       ( .Actor:Self 00000001 )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
                        Case  ==  00000005
                            Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
                        Case  ==  00000006
                            Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
                    EndSwitch
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
                        Case  ==  00000005
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
                        Case  ==  00000006
                            Call  GetActorVar   ( .Actor:Enemy4 00000004 *Var[1] )
                            Call  GetHomePos    ( *Var[1] *Var[2] *Var[3] *Var[4] )
                            Set   *Var[4]  0000000F
                            Call  SetGoalPos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
                            Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
                    EndSwitch
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Switch  *Var[0]
                        Case  ==  00000004
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 00000032 )
                            Wait  50`
                        Case  ==  00000005
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 00000028 )
                            Wait  40`
                        Case  ==  00000006
                            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                            Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 0000001E )
                            Wait  30`
                    EndSwitch
                    Call  SetAnimation  ( .Actor:Self 00000001 00660220 )
                    Wait  10`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660205 )
                    Wait  30`
                EndCaseGroup
            EndSwitch
        Case  ==  00000008
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660203 )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066021F )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
                    Call  SetAnimation  ( .Actor:Self 00000001 00660207 )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Thread
                        Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
                        Switch  *Var[0]
                            Case  ==  .HitResult:Lucky % 5
                                Wait  20`
                                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                                Return
                            Case  ==  .HitResult:Miss % 6
                                Return
                        EndSwitch
                        Label  0
                        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                        Call  GetActorPos   ( .Actor:Player *Var[3] *Var[4] *Var[5] )
                        If  *Var[0]  >  *Var[3]
                            Wait  1`
                            Goto  0
                        EndIf
                        Call  SetTargetActor    ( .Actor:Self .Actor:Player )
                        Call  SetGoalToTarget   ( .Actor:Self )
                        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
                    EndThread
                    Call  UseCamPreset      ( 00000002 )
                    Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
                    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
                    Call  EnableActorBlur   ( .Actor:Self 00000001 )
                    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
                    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
                    Call  RunToGoal ( .Actor:Self 00000000 .False )
                    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
                    Call  EnableActorBlur   ( .Actor:Self 00000000 )
                    Thread
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
                        Set   *Var[0]  00000000
                        Loop  00000028
                            Sub   *Var[0]  0000002D
                            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
                            Wait  1`
                        EndLoop
                        Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
                        Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
                    EndThread
                    Call  GetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Set   *Var[2]  0000000F
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
                    Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  $Function_80219B78    ( *Var[0] *Var[1] *Var[2] 0000001E )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
                    Wait  10`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
                    Call  SetActorYaw   ( .Actor:Self 00000000 )
                    Call  SetAnimation  ( .Actor:Self 00000001 0066021B )
                    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Sub   *Var[0]  00000016
                    Add   *Var[1]  00000013
                    Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                    Wait  30`
                    Call  SetAnimation  ( .Actor:Self 00000001 00660203 )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 0000000A .False )
                    Call  GetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
                    ConstAND  *Var[0] FFFFFDFF
                    Call  SetActorVar   ( .Actor:Enemy4 00000000 *Var[0] )
            EndSwitch
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_80230BCC
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802313B4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80230CC0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80230D28 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802313C4 )
    Call  SetActorPos   ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  ForceHomePos  ( .Actor:Self 00000000 FFFFFC18 00000000 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80230CC0
{
    Return
    End
}

#new:IntTable $IntTable_80230CD0
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80230D28
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020E
            SetConst  *Var[2]  0066020F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020E
            SetConst  *Var[2]  0066020F
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020F
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E61C )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E44C )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
            Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                Call  SetAnimation  ( .Actor:Self 00000001 0066020B )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                Thread
                    Wait  4`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                    Wait  1`
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                    Wait  1`
                EndThread
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 0066020C )
            EndIf
            UseIntBuffer  $IntTable_80230CD0
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660208
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  ==  00000000
                    Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0066020C
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020B
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0066020B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00660204
                ExecWait  DoRecover
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802313B4
{
    Return
    End
}

#new:Script $Script_NextTurn_802313C4
{
    Return
    End
}

PADDING: 802313D4 to 802313E0 (004CA5C4 to 004CA5D0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_802313E0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8023141C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8023142C
{
    ~Model:trd_bt00:p1
    00000000
}

#new:Stage $Stage_80231434
{
    $ASCII_80235DEC  % trd_tex
    $ASCII_80235DDC  % trd_bt00_shape
    $ASCII_80235DCC  % trd_bt00_hit
    $Script_BeforeBattle_802313E0
    $Script_AfterBattle_8023141C
    00000000
    $ForegroundModelList_8023142C
    00000000
    00000000
    00000000
}

PADDING: 8023145C to 80231460 (004CA64C to 004CA650)
00000000

#new:Script $Script_BeforeBattle_80231460
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8023149C
{
    Return
    End
}

#new:Stage $Stage_802314AC
{
    $ASCII_80235E14  % trd_tex
    $ASCII_80235E04  % trd_bt01_shape
    $ASCII_80235DF4  % trd_bt01_hit
    $Script_BeforeBattle_80231460
    $Script_AfterBattle_8023149C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802314D4 to 802314E0 (004CA6C4 to 004CA6D0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802314E0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_802315F8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80231BA4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel       ( ~Model:trd_bt02:kabe2_2 .False )
    Thread
        Set   *Var[0]  00000013
        Exec  $Script_802315F8
        Wait  5`
        Set   *Var[0]  00000011
        Exec  $Script_802315F8
        Wait  5`
        Set   *Var[0]  0000000F
        Exec  $Script_802315F8
        Wait  5`
        Set   *Var[0]  0000000D
        Exec  $Script_802315F8
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80231C98
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80231CA8
{
    ~Model:trd_bt02:saku
    00000000
}

#new:Stage $Stage_80231CB0
{
    $ASCII_80235E3C  % trd_tex
    $ASCII_80235E2C  % trd_bt02_shape
    $ASCII_80235E1C  % trd_bt02_hit
    $Script_BeforeBattle_80231BA4
    $Script_AfterBattle_80231C98
    00000000
    $ForegroundModelList_80231CA8
    00000000
    00000000
    00000000
}

PADDING: 80231CD8 to 80231CE0 (004CAEC8 to 004CAED0)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80231CE0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80231DF8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_802323A4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt02:saku .False )
    Call  EnableModel   ( ~Model:trd_bt02:kiwa .False )
    Call  EnableModel   ( ~Model:trd_bt02:tyuu .False )
    Thread
        Set   *Var[0]  00000013
        Exec  $Script_80231DF8
        Wait  5`
        Set   *Var[0]  00000011
        Exec  $Script_80231DF8
        Wait  5`
        Set   *Var[0]  0000000F
        Exec  $Script_80231DF8
        Wait  5`
        Set   *Var[0]  0000000D
        Exec  $Script_80231DF8
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_802324C0
{
    Return
    End
}

#new:Stage $Stage_802324D0
{
    $ASCII_80235E64  % trd_tex
    $ASCII_80235E54  % trd_bt02_shape
    $ASCII_80235E44  % trd_bt02_hit
    $Script_BeforeBattle_802323A4
    $Script_AfterBattle_802324C0
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802324F8 to 80232500 (004CB6E8 to 004CB6F0)
00000000 00000000

#new:Script $Script_80232500
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A2E0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_802325F8
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A2E0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232730
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_8021A2E0    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80232888
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000004
    Set   *Var[2]  00000000
    Exec  $Script_80232500
    Set   *Var[0]  00000002
    Set   *Var[2]  00000046
    Set   *Var[3]  000000AF
    Set   *Var[4]  FFFFFF56
    Exec  $Script_802325F8
    Return
    End
}

#new:Script $Script_AfterBattle_80232920
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80232930
{
    ~Model:trd_bt03:saku
    ~Model:trd_bt03:kabe2
    ~Model:trd_bt03:kabe
    00000000
}

#new:Stage $Stage_80232940
{
    $ASCII_80235E94  % trd_tex
    $ASCII_80235E84  % trd_bt03_shape
    $ASCII_80235E74  % trd_bt03_hit
    $Script_BeforeBattle_80232888
    $Script_AfterBattle_80232920
    $ASCII_80235E6C  % nok_bg
    $ForegroundModelList_80232930
    00000000
    00000000
    00000000
}

PADDING: 80232968 to 80232970 (004CBB58 to 004CBB60)
00000000 00000000

#new:Script $Script_80232970
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232A40
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80232B2C
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 00000000 *Var[0] )
        Call  SetTexPanOffset   ( *Var[A] 00000001 00000000 *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80232C18
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  0000000D
    Set   *Var[1]  00000000
    Set   *Var[2]  00000028
    Set   *Var[3]  00000000
    Exec  $Script_80232970
    Return
    End
}

#new:Script $Script_AfterBattle_80232CA0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80232CB0
{
    ~Model:trd_bt04:hikari1
    00000000
}

#new:Stage $Stage_80232CB8
{
    $ASCII_80235EBC  % trd_tex
    $ASCII_80235EAC  % trd_bt04_shape
    $ASCII_80235E9C  % trd_bt04_hit
    $Script_BeforeBattle_80232C18
    $Script_AfterBattle_80232CA0
    00000000
    $ForegroundModelList_80232CB0
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_80232CE0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80232DF8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_802333A4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  0000001B
        Exec  $Script_80232DF8
        Wait  5`
        Set   *Var[0]  00000019
        Exec  $Script_80232DF8
    EndThread
    Thread
        Set   *Var[0]  00000006
        Exec  $Script_80232DF8
        Wait  5`
        Set   *Var[0]  00000004
        Exec  $Script_80232DF8
        Wait  5`
        Set   *Var[0]  00000002
        Exec  $Script_80232DF8
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_802334B0
{
    Return
    End
}

#new:Stage $Stage_802334C0
{
    $ASCII_80235EEC  % trd_tex
    $ASCII_80235EDC  % trd_bt05_shape
    $ASCII_80235ECC  % trd_bt05_hit
    $Script_BeforeBattle_802333A4
    $Script_AfterBattle_802334B0
    $ASCII_80235EC4  % nok_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802334E8 to 802334F0 (004CC6D8 to 004CC6E0)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802334F0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80233608
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80233BB4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:kai .False )
    Call  EnableModel   ( ~Model:trd_bt05:kusari1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80233CB8
{
    Return
    End
}

#new:Stage $Stage_80233CC8
{
    $ASCII_80235F14  % trd_tex
    $ASCII_80235F04  % trd_bt05_shape
    $ASCII_80235EF4  % trd_bt05_hit
    $Script_BeforeBattle_80233BB4
    $Script_AfterBattle_80233CB8
    00000000
    00000000
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_80233CF0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80233E08
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_802343B4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:yuka3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hako .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Set   *Var[0]  0000001B
    Exec  $Script_80233E08
    Thread
        Set   *Var[0]  00000006
        Exec  $Script_80233E08
        Wait  5`
        Set   *Var[0]  00000004
        Exec  $Script_80233E08
        Wait  5`
        Set   *Var[0]  00000002
        Exec  $Script_80233E08
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80234500
{
    Return
    End
}

#new:Stage $Stage_80234510
{
    $ASCII_80235F3C  % trd_tex
    $ASCII_80235F2C  % trd_bt05_shape
    $ASCII_80235F1C  % trd_bt05_hit
    $Script_BeforeBattle_802343B4
    $Script_AfterBattle_80234500
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80234538 to 80234540 (004CD728 to 004CD730)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80234540
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80234658
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80234C04
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:yuka3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hako .False )
    Call  EnableModel   ( ~Model:trd_bt05:kai .False )
    Call  EnableModel   ( ~Model:trd_bt05:kusari1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hikari2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
    Thread
        Set   *Var[0]  00000006
        Exec  $Script_80234658
        Wait  5`
        Set   *Var[0]  00000004
        Exec  $Script_80234658
        Wait  5`
        Set   *Var[0]  00000002
        Exec  $Script_80234658
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80234D48
{
    Return
    End
}

#new:Stage $Stage_80234D58
{
    $ASCII_80235F64  % trd_tex
    $ASCII_80235F54  % trd_bt05_shape
    $ASCII_80235F44  % trd_bt05_hit
    $Script_BeforeBattle_80234C04
    $Script_AfterBattle_80234D48
    00000000
    00000000
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_80234D80
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80234E98
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80235444
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80235520
{
    Return
    End
}

#new:Stage $Stage_80235530
{
    $ASCII_80235F8C  % trd_tex
    $ASCII_80235F7C  % trd_bt05_shape
    $ASCII_80235F6C  % trd_bt05_hit
    $Script_BeforeBattle_80235444
    $Script_AfterBattle_80235520
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80235558 to 80235560 (004CE748 to 004CE750)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80235560
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80235678
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80235C24
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  0000001B
    Exec  $Script_80235678
    Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hako .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80235D1C
{
    Return
    End
}

#new:Stage $Stage_80235D2C
{
    $ASCII_80235FB4  % trd_tex
    $ASCII_80235FA4  % trd_bt05_shape
    $ASCII_80235F94  % trd_bt05_hit
    $Script_BeforeBattle_80235C24
    $Script_AfterBattle_80235D1C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80235D54 to 80235D60 (004CEF44 to 004CEF50)
00000000 00000000 00000000

#new:SJIS $SJIS_80235D60
{
    ノコブロス % nokoburosu
}

#new:ASCII $ASCII_80235D6C
{
    "trd_05f"
}

#new:ASCII $ASCII_80235D74
{
    "trd_05e"
}

#new:ASCII $ASCII_80235D7C
{
    "trd_05d"
}

#new:ASCII $ASCII_80235D84
{
    "trd_05c"
}

#new:ASCII $ASCII_80235D8C
{
    "trd_05b"
}

#new:ASCII $ASCII_80235D94
{
    "trd_05"
}

#new:ASCII $ASCII_80235D9C
{
    "trd_04"
}

#new:ASCII $ASCII_80235DA4
{
    "trd_03"
}

#new:ASCII $ASCII_80235DAC
{
    "trd_02b"
}

#new:ASCII $ASCII_80235DB4
{
    "trd_02"
}

#new:ASCII $ASCII_80235DBC
{
    "trd_01"
}

#new:ASCII $ASCII_80235DC4
{
    "trd_00"
}

#new:ASCII $ASCII_80235DCC
{
    "trd_bt00_hit"
}

#new:ASCII $ASCII_80235DDC
{
    "trd_bt00_shape"
}

#new:ASCII $ASCII_80235DEC
{
    "trd_tex"
}

#new:ASCII $ASCII_80235DF4
{
    "trd_bt01_hit"
}

#new:ASCII $ASCII_80235E04
{
    "trd_bt01_shape"
}

#new:ASCII $ASCII_80235E14
{
    "trd_tex"
}

#new:ASCII $ASCII_80235E1C
{
    "trd_bt02_hit"
}

#new:ASCII $ASCII_80235E2C
{
    "trd_bt02_shape"
}

#new:ASCII $ASCII_80235E3C
{
    "trd_tex"
}

#new:ASCII $ASCII_80235E44
{
    "trd_bt02_hit"
}

#new:ASCII $ASCII_80235E54
{
    "trd_bt02_shape"
}

#new:ASCII $ASCII_80235E64
{
    "trd_tex"
}

#new:ASCII $ASCII_80235E6C
{
    "nok_bg"
}

#new:ASCII $ASCII_80235E74
{
    "trd_bt03_hit"
}

#new:ASCII $ASCII_80235E84
{
    "trd_bt03_shape"
}

#new:ASCII $ASCII_80235E94
{
    "trd_tex"
}

#new:ASCII $ASCII_80235E9C
{
    "trd_bt04_hit"
}

#new:ASCII $ASCII_80235EAC
{
    "trd_bt04_shape"
}

#new:ASCII $ASCII_80235EBC
{
    "trd_tex"
}

#new:ASCII $ASCII_80235EC4
{
    "nok_bg"
}

#new:ASCII $ASCII_80235ECC
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80235EDC
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80235EEC
{
    "trd_tex"
}

#new:ASCII $ASCII_80235EF4
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80235F04
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80235F14
{
    "trd_tex"
}

#new:ASCII $ASCII_80235F1C
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80235F2C
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80235F3C
{
    "trd_tex"
}

#new:ASCII $ASCII_80235F44
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80235F54
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80235F64
{
    "trd_tex"
}

#new:ASCII $ASCII_80235F6C
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80235F7C
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80235F8C
{
    "trd_tex"
}

#new:ASCII $ASCII_80235F94
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80235FA4
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80235FB4
{
    "trd_tex"
}

PADDING: 80235FBC to 80235FC0 (004CF1AC to 004CF1B0)
00000000

