% Script File: 16 Area KZN.bscr
% Decoded from: 58C2F0 to 59E6E0 (16 Area KZN)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S2, 20 (SP)
	COPY      S2, A0
	SW        RA, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      S0, A1
	BEQ       S0, R0, .oDC
	COPY      S1, V0
	LWC1      F2, 18 (S1)
	LWC1      F0, 144 (S1)
	SUB.S     F2, F2, F0
	MUL.S     F2, F2, F2
	NOP
	LWC1      F6, 1C (S1)
	LWC1      F0, 148 (S1)
	SUB.S     F6, F6, F0
	MUL.S     F6, F6, F6
	NOP
	LWC1      F4, 14C (S1)
	LWC1      F0, 20 (S1)
	SUB.S     F0, F0, F4
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F2, F2, F6
	ADD.S     F12, F2, F0
	SQRT.S    F4, F12
	C.EQ.S    F4, F4
	NOP
	BC1T      .o90
	NOP
	JAL       ~Func:sqrtf
	NOP
	MOV.S     F4, F0
	.o90
	LWC1      F0, 4C (S1)
	LIF       F2, 0.5
	DIV.S     F0, F4, F0
	MUL.S     F0, F0, F2
	NOP
	LIF       F2, 1.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F8, F0
	SWC1      F8, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 359
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       ~Func:play_sound_at_position
	CLEAR     A1
	.oDC
	LW        V0, 70 (S2)
	COPY      V1, V0
	ADDIU     V0, V0, FFFF
	BGTZ      V1, .o114
	SW        V0, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 759
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       ~Func:play_sound_at_position
	CLEAR     A1
	BEQ       R0, R0, .o118
	ADDIU     V0, R0, 2
	.o114
	CLEAR     V0
	.o118
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218130
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802181FC
{
	ADDIU     SP, SP, FFC0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 34 (SP)
	SW        S6, 30 (SP)
	SW        S5, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F20, 38 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S6, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S5, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S1, V0
	ADDIU     A0, R0, 1
	MTC1      S6, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A1, F2
	MTC1      S5, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A2, F2
	MTC1      S4, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A3, F2
	COPY      S0, V0
	SWC1      F20, 10 (SP)
	JAL       80072230
	SW        S2, 14 (SP)
	LW        V1, C (V0)
	SW        S3, 18 (V1)
	LW        V1, C (V0)
	SW        S1, 1C (V1)
	LW        V1, C (V0)
	SW        S0, 20 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, FF
	SW        A0, 28 (V1)
	LW        V1, C (V0)
	SW        A0, 2C (V1)
	LW        V1, C (V0)
	SW        A0, 30 (V1)
	LW        RA, 34 (SP)
	LW        S6, 30 (SP)
	LW        S5, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

PADDING: 80218378 to 80218380 (0058C668 to 0058C670)
00000000 00000000

#new:Function $Function_80218380
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021844C to 80218450 (0058C73C to 0058C740)
00000000

#new:Function $Function_80218450
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_8021851C
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIO       AT, 40C90FD8
	MTC1      AT, F8
	MTC1      S2, F4
	NOP
	CVT.S.W   F4, F4
	MUL.S     F8, F4, F8
	NOP
	MTC1      S0, F6
	NOP
	CVT.S.W   F6, F6
	LIF       F2, 1.0
	DIV.S     F4, F4, F6
	SUB.S     F2, F2, F4
	MUL.S     F20, F0, F2
	NOP
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:cos_rad
	DIV.S     F12, F8, F12
	MUL.S     F20, F20, F0
	NOP
	COPY      A0, S1
	TRUNC.W.S F10, F20
	MFC1      A2, F10
	JAL       ~Func:set_variable
	COPY      A1, S4
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

PADDING: 8021862C to 80218630 (0058C91C to 0058C920)
00000000

% Origin: HINT
#new:Function $Function_80218630
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80218788
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802187B4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218880
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_802188D8
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 8021899C to 802189A0 (0058CC8C to 0058CC90)
00000000

% Origin: HINT
#new:Function $Function_802189A0
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80218AF8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218B24
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218BF0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218C48
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218D0C
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        S2, 18 (SP)
	LIA       S2, 8010F290
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LB        A2, 0 (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	LB        A2, 1 (S2)
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218D6C
{
	ADDIU     SP, SP, FFD8
	SW        S3, 1C (SP)
	COPY      S3, A0
	SW        RA, 20 (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S3)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      S1, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S3
	COPY      S2, V0
	ADDIU     V0, R0, FF81
	BNE       S1, V0, .o54
	NOP
	LW        S1, 148 (S3)
	.o54
	JAL       ~Func:get_actor
	COPY      A0, S1
	COPY      A0, V0
	JAL       ~Func:get_actor_part
	COPY      A1, S2
	LW        A0, 78 (V0)
	JAL       ~Func:lookup_defense
	ADDIU     A1, R0, 1
	COPY      A0, S3
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80218E10
{
    .Element:Normal 00000000
    .Element:Water  FFFFFFFE
    .Element:Ice    FFFFFFFE
    .Element:Fire   00000063
    .Element:Blast  FFFFFFFF
    .Element:End
}

#new:StatusTable $StatusTable_80218E3C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   50`
    .Status:Shrink     75`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80218EE8
{
    00800000 01000000 FE1900FF $IdleAnimations_80218FC4 $DefenseTable_80218E10 00000002 00000002 FDF60000 00000000
    00120001 02000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000
    00120001 03000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000
    00120001 04000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000
    00120001 05000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000
}

#new:Actor $LavaBubble
{
    % stats
    [Index]        2Bb
    [Level]        17`b
    [MaxHP]         9`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80218E3C
    % ai
    [PartsCount]    5`s
    [PartsTable]  $PartsTable_80218EE8
    [Script]      $Script_Init_8021901C
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      90`b
    [Hurricane]    85`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         33`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218FC4
{
    .Status:Normal    00460001
    .Status:Stone     00460000
    .Status:Sleep     00460001
    .Status:Poison    00460001
    .Status:Stop      00460000
    .Status:Static    00460001
    .Status:Paralyze  00460000
    .Status:Dizzy     0046000A
    .Status:Fear      0046000A
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219010
{
    .Status:Normal    00460001
    .Status:End
}

#new:Script $Script_Init_8021901C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021AEA4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802191E4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219500 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    EndSwitch
    Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000005
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_802191E4
{
    Label  0
    Call  MakeLerp      ( 00000000 0000000A 00000019 .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Call  GetHomePos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Add   *Var[0]  *Var[3]
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    If  *Var[1]  ==  00000001
        Label  B
        Wait  1`
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  &  0035D000
            Goto  B
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  ==  00000001
            Goto  B
        EndIf
        Goto  1
    EndIf
    Call  MakeLerp      ( 0000000A 00000000 00000019 .Easing:CosInOut )
    Label  2
    Call  UpdateLerp ( )
    Call  GetHomePos    ( .Actor:Self *Var[2] *Var[3] *Var[4] )
    Add   *Var[0]  *Var[3]
    Call  SetActorPos   ( .Actor:Self *Var[2] *Var[0] *Var[4] )
    If  *Var[1]  ==  00000001
        Label  16
        Wait  1`
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  &  0035D000
            Goto  16
        EndIf
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        If  *Var[0]  ==  00000001
            Goto  16
        EndIf
        Goto  2
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_80219464
{
    Call  SetAnimation  ( .Actor:Self 00000001 00460003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Thread
        Call  $Function_80218000 ( )
    EndThread
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00460001 )
    Return
    End
}

#new:Script $Script_HandleEvent_80219500
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460008
            SetConst  *Var[2]  00460009
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460008
            SetConst  *Var[2]  00460009
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  PlaySoundAtActor  ( .Actor:Self 00000759 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoJumpBack
            ExecWait  $Script_80219464
        Case  ==  .Event:ShockDeath % 26
            Call  PlaySoundAtActor  ( .Actor:Self 00000759 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
        CaseOR  ==  .Event:BurnTaunt % 1C
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_80219464
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460003
            SetConst  *Var[2]  00460007
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00460003
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:UpAndAway % 3D
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_FireTackle
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00460003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000005
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Thread
        Call  $Function_80218000 ( )
    EndThread
    Call  FlyToGoal ( .Actor:Self 00000000 00000000 .Easing:SinOut )
    Call  SetAnimation      ( .Actor:Self 00000001 00460001 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 00460004 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000001
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Sub   *Var[0]  0000000A
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000003 .False .True .False )
            Wait  14`
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            ExecWait  $Script_80219464
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00460004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000001
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Fire 00000000 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Set   *Var[0]  00000001
            Set   *Var[1]  00460004
            ExecWait  DoJumpBack
            Wait  5`
            ExecWait  $Script_80219464
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A074
{
    Set   *Var[6]  00000002
    Loop  00000004
        Thread
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            If  *Var[A]  &  00080000
                Call  SetPartScale  ( .Actor:Self *Var[6] *Fixed[0.2] *Fixed[0.2] *Fixed[0.2] )
            Else
                Call  SetPartScale  ( .Actor:Self *Var[6] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
            EndIf
            Call  SetPartPos        ( .Actor:Self *Var[6] *Var[0] *Var[1] *Var[2] )
            Call  SetPartFlagBits   ( .Actor:Self *Var[6] 00000001 .False )
            Call  SetPartMoveSpeed  ( .Actor:Self *Var[6] *Fixed[8.0] )
            Call  SetPartJumpGravity    ( .Actor:Self *Var[6] *Fixed[0.01] )
            Call  SetPartSounds     ( .Actor:Self *Var[6] .ActorSound:Jump 000002D0 00000000 )
            Call  JumpPartTo        ( .Actor:Self *Var[6] *Var[3] *Var[4] *Var[5] 00000000 .False )
            Call  SetPartFlagBits   ( .Actor:Self *Var[6] 00000001 .True )
        EndThread
        Wait  3`
        Add   *Var[6]  00000001
    EndLoop
    Return
    End
}

#new:Script $Script_8021A218
{
    Exec  $Script_8021A074
    Call  GetDistanceToGoal ( .Actor:Self *Var[0] )
    DivF  *Var[0]  *Fixed[8.0]
    Add   *Var[0]  00000001
    Wait  *Var[0]
    Return
    End
}

#new:Script $Script_Fireballs_Partner
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000001
        Add   *Var[0]  00000064
        Set   *Var[1]  00000005
    Else
        Add   *Var[0]  0000001E
        Set   *Var[1]  00000032
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000001 00460003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Thread
        Call  $Function_80218000 ( )
    EndThread
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000001 00460001 )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 00460005 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 00460006 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Add   *Var[1]  00000004
            Add   *Var[2]  00000002
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000064
            Add   *Var[5]  00000002
            ExecWait  $Script_8021A218
            If  *Var[A]  ==  00000005
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_80219464
            Wait  20`
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00460006 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Add   *Var[1]  00000004
    Add   *Var[2]  00000002
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[4]  00000006
    Add   *Var[5]  00000002
    ExecWait  $Script_8021A218
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000002 00000000 00000000 00000002 00000020 )
    Wait  20`
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_80219464
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Fireballs_Player
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00460003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 0000001E 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
    Thread
        Call  $Function_80218000 ( )
    EndThread
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002CF )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00460004 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Add   *Var[2]  00000002
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00460004 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  UseCamPreset      ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_80219464
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  5`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002CF )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00460004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
    Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000002
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Fire 00000000 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Wait  20`
            ExecWait  $Script_80219464
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021AEA4
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000001
                ExecWait  $Script_FireTackle
            Case  ==  00000000
                ExecWait  $Script_Fireballs_Player
        EndSwitch
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000001
            Call  GetStatusFlags    ( .Actor:Partner *Var[0] )
            If  *Var[0]  &  01000000
                ExecWait  $Script_FireTackle
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <=  0000012C
                    ExecWait  $Script_Fireballs_Partner
                Else
                    ExecWait  $Script_FireTackle
                EndIf
            EndIf
        Case  ==  00000000
            Call  GetStatusFlags    ( .Actor:Partner *Var[0] )
            If  *Var[0]  &  01000000
                ExecWait  $Script_Fireballs_Player
            Else
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <=  0000012C
                    ExecWait  $Script_Fireballs_Partner
                Else
                    ExecWait  $Script_Fireballs_Player
                EndIf
            EndIf
    EndSwitch
    Return
    End
}

PADDING: 8021B09C to 8021B0A0 (0058F38C to 0058F390)
00000000

#new:IdleAnimations $IdleAnimations_8021B0A0
{
    .Status:Normal    00360001
    .Status:Stone     00360000
    .Status:Sleep     00360000
    .Status:Poison    00360001
    .Status:Stop      00360000
    .Status:Static    00360000
    .Status:Paralyze  00360000
    .Status:Paralyze  00360000
    .Status:Dizzy     0036000F
    .Status:End
}

#new:DefenseTable $DefenseTable_8021B0EC
{
    .Element:Normal 00000000
    .Element:Fire   00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021B100
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021B1AC
{
    00800000 01000000 F13200FF $IdleAnimations_8021B0A0 $DefenseTable_8021B0EC 00000000 00000000 03F20000 00000000
}

#new:Actor $PutridPiranha
{
    % stats
    [Index]        2Db
    [Level]        17`b
    [MaxHP]        12`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021B100
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021B1AC
    [Script]      $Script_Init_8021B1F8
    % move effectiveness
    [Escape]       60`b
    [Item]         30`b
    [AirLift]      20`b
    [Hurricane]    20`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  95`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         60`b  52`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -22`b  32`b % dx dy
    [StatusIcon]    1`b  44`b % dx dy
}

#new:Script $Script_Init_8021B1F8
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B8A8 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021B244 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B3D0 )
    Return
    End
}

#new:Script $Script_Idle_8021B244
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00040000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFE5 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000005 FFFFFFF5 )
        Call  $Function_80218130    ( FFFFFFDB 00000009 FFFFFFF9 0000001F )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF1 00000032 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000003 FFFFFFF2 )
        Call  $Function_80218130    ( FFFFFFEA 00000020 00000001 0000002C )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021B354
{
    Call  SetAnimation  ( .Actor:Self 00000001 00360003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021B3D0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360010
            SetConst  *Var[2]  00360011
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360010
            SetConst  *Var[2]  00360011
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360011
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoShockHit
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021B354
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360003
            SetConst  *Var[2]  0036000E
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360003
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021B8A8
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_Bite
        Return
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000046
        ExecWait  $Script_Breath
    Else
        ExecWait  $Script_Bite
    EndIf
    Return
    End
}

#new:Script $Script_Bite
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation      ( .Actor:Self 00000001 00360018 )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
        Wait  8`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B
        Set   *Var[1]  00000000
        Set   *Var[3]  *Var[0]
        Set   *Var[4]  *Var[1]
        Set   *Var[5]  *Var[2]
        Call  GetActorPos       ( .Actor:Player *Var[6] *Var[7] *Var[8] )
        Add   *Var[3]  *Var[6]
        Add   *Var[4]  *Var[7]
        Add   *Var[5]  *Var[8]
        Div   *Var[3]  00000002
        Div   *Var[4]  00000002
        Div   *Var[5]  00000002
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[3] *Var[4] *Var[5] )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 00000028 )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
        Call  SetAnimation      ( .Actor:Self 00000001 00360017 )
        Wait  8`
    Else
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00360003 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
        Call  SetAnimation  ( .Actor:Self 00000001 00360003 )
        Call  SetGoalToTarget       ( .Actor:Self )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags        ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Add   *Var[0]  0000000A
        Else
            Add   *Var[0]  0000001B
        EndIf
        Set   *Var[1]  00000000
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00360001 )
    EndIf
    Thread
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00360005 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00360006 )
            Wait  6`
            Call  SetAnimation  ( .Actor:Self 00000001 00360007 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360018 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360017 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
                Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
                Call  SetActorYaw       ( .Actor:Self 000000B4 )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                ExecWait  $Script_8021B354
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00360005 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00360006 )
    Wait  1`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Wait  10`
            Call  SetAnimation      ( .Actor:Self 00000001 00360007 )
            Wait  20`
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360018 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360017 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
                ExecWait  $Script_8021B354
            EndIf
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Breath
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00360003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00360003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000010
    Else
        Add   *Var[0]  00000028
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360001 )
    Call  SetAnimation  ( .Actor:Self 00000001 00360008 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000003AB )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  0000000C
        Set   *Var[1]  00000005
        SetF  *Var[3]  *Fixed[0.4]
    Else
        Add   *Var[0]  00000020
        Set   *Var[1]  0000000D
        SetF  *Var[3]  *Fixed[1.0]
    EndIf
    Call  $Function_802181FC    ( *Var[2] *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000078 00000000 00000078 )
    Wait  1`
    Call  SetAnimation  ( .Actor:Self 00000001 00360009 )
    Wait  5`
    Call  EnemyTestTarget       ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036000A )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_8021B354
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 80020364 00000002 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036000A )
            Wait  20`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021B354
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021C8A8 to 8021C8B0 (00590B98 to 00590BA0)
00000000 00000000

#new:DefenseTable $DefenseTable_8021C8B0
{
    .Element:Normal 00000004
    .Element:Fire   00000063
    .Element:Blast  00000063
    .Element:End
}

#new:DefenseTable $DefenseTable_8021C8CC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021C8D8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021C984
{
    00800000 01000000 001800FF $IdleAnimations_8021CA1C $DefenseTable_8021C8B0 00001010 00000000 000E0000 00000000
}

#new:Actor $SpikeTop
{
    % stats
    [Index]        2Cb
    [Level]        17`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000800
    [StatusTable] $StatusTable_8021C8D8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021C984
    [Script]      $Script_Init_8021CAAC
    % move effectiveness
    [Escape]       60`b
    [Item]         60`b
    [AirLift]      70`b
    [Hurricane]    65`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]   -8`b  16`b % dx dy
    [StatusIcon]    8`b  13`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C9D0
{
    .Status:Normal    004D0003
    .Status:Stone     004D0000
    .Status:Sleep     004D001B
    .Status:Poison    004D0003
    .Status:Stop      004D0000
    .Status:Static    004D0003
    .Status:Paralyze  004D0000
    .Status:Dizzy     004D001E
    .Status:Fear      004D001E
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA1C
{
    .Status:Normal    004D0004
    .Status:Stone     004D0001
    .Status:Sleep     004D001C
    .Status:Poison    004D0004
    .Status:Stop      004D0001
    .Status:Static    004D0004
    .Status:Paralyze  004D0001
    .Status:Dizzy     004D001F
    .Status:Fear      004D001F
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA68
{
    .Status:Normal    004D0005
    .Status:Stone     004D0002
    .Status:Sleep     004D001D
    .Status:Poison    004D0005
    .Status:Stop      004D0002
    .Status:Static    004D0005
    .Status:Dizzy     004D0020
    .Status:Fear      004D0020
    .Status:End
}

#new:Script $Script_Init_8021CAAC
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021CC7C )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
        Call  $Function_80218380    ( FFFFFFF6 00000000 0000000A 00000000 )
        Call  BindTakeTurn      ( .Actor:Self $Script_SpikeTop_TakeTurn_Ceiling )
        Call  BindHandleEvent   ( .Actor:Self $Script_SpikeTop_HandleEvent_Ceiling )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
    Else
        Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
        Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
        Call  BindTakeTurn      ( .Actor:Self $Script_SpikeTop_TakeTurn_Floor )
        Call  BindHandleEvent   ( .Actor:Self $Script_SpikeTop_HandleEvent_Floor )
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C9D0 )
        Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
        Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    EndIf
    Call  HPBarToHome       ( .Actor:Self )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_8021CC7C
{
    Return
    End
}

#new:Script $Script_SpikeTop_FallDown
{
    Call  8027D32C      ( FFFFFF81 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000001 00000014 )
    Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
    Call  $Function_80218380    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn  ( .Actor:Self $Script_SpikeTop_TakeTurn_Floor )
    Call  BindHandleEvent   ( .Actor:Self $Script_SpikeTop_HandleEvent_Floor )
    Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C8CC )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA68 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
    Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  GetIndexFromPos   ( .Actor:Self *Var[A] )
    Mod   *Var[A]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[A] )
    Call  GetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  SetHomePos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Set   *Var[D]  *Var[A]
    Set   *Var[E]  *Var[B]
    Set   *Var[F]  *Var[C]
    Sub   *Var[D]  *Var[0]
    Sub   *Var[E]  *Var[1]
    Sub   *Var[F]  *Var[2]
    Div   *Var[D]  00000002
    Div   *Var[E]  00000002
    Div   *Var[F]  00000002
    Add   *Var[0]  *Var[D]
    Add   *Var[1]  *Var[E]
    Add   *Var[2]  *Var[F]
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetAnimation  ( .Actor:Self 00000001 004D0005 )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_SpikeTop_HandleEvent_Ceiling
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
            ExecWait  $Script_SpikeTop_FallDown
        Case  ==  .Event:FlipTrigger % D
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
            ExecWait  $Script_SpikeTop_FallDown
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0019
            SetConst  *Var[2]  004D001A
            ExecWait  DoBurnHit
            ExecWait  $Script_SpikeTop_FallDown
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0019
            SetConst  *Var[2]  004D001A
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D001A
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D000D
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D000D
            ExecWait  DoImmune
            Wait  2`
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00200000
                ExecWait  $Script_SpikeTop_FallDown
            EndIf
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0014
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0009
            SetConst  *Var[2]  004D0014
            ExecWait  DoScareAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D57C
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[3] )
    If  *Var[3]  ==  00000002
        Set   *Var[1]  *Var[2]
    EndIf
    Return
    End
}

#new:IntTable $IntTable_8021D5CC
{
    00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
    00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
    00000000 00000002 00000000
}

#new:Script $Script_SpikeTop_HandleEvent_Floor
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_8021D57C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0016
                SetConst  *Var[2]  004D0017
                ExecWait  DoBurnHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0018
                SetConst  *Var[2]  004D0018
                ExecWait  DoBurnHit
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  !=  00000002
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0016
                SetConst  *Var[2]  004D0017
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0017
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0018
                SetConst  *Var[2]  004D0018
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0018
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_8021D57C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000001 00000014 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C8CC )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA68 )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 004D0013 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            Thread
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
                Wait  1`
            EndThread
            UseIntBuffer  $IntTable_8021D5CC
            Loop  00000013
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D000B
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 004D000E )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D000B
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:SpikeTaunt % 1B
            Wait  10`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                Add   *Var[1]  00000009
            Else
                Add   *Var[1]  00000018
            EndIf
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_8021D57C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_8021D57C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_8021D57C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0013
            SetConst  *Var[2]  004D0015
            ExecWait  $Script_8021D57C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0003
                ExecWait  DoRecover
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0008
                SetConst  *Var[2]  004D0013
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0008
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  SetActorDispOffset    ( .Actor:Self 00000007 00000000 00000000 )
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0013
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0015
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D000B
                ExecWait  DoImmune
                Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
                Wait  8`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  004D0005
                ExecWait  DoImmune
            EndIf
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SpikeTop_TakeTurn_Ceiling
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000018 )
    Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
    Call  $Function_80218380    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  BindTakeTurn      ( .Actor:Self $Script_SpikeTop_TakeTurn_Floor )
    Call  BindHandleEvent   ( .Actor:Self $Script_SpikeTop_HandleEvent_Floor )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C9D0 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorPos   ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 004D0009 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[4] *Var[2] )
        Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
        Wait  8`
    EndIf
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000005 )
        Call  SetBattleCamZoom  ( 000001AE )
        Call  SetBattleCamOffsetZ   ( 00000014 )
        Call  MoveBattleCamOver ( 0000000A )
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000004 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  SetPartYaw    ( .Actor:Self 00000001 000000B4 )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[1]  00000018
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
            EndThread
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0008 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  *Var[4]
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Thread
                Wait  5`
                Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
            EndThread
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
        EndCaseGroup
    EndSwitch
    Label  A
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_SpikeTop_TakeTurn_Floor
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000002
        Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
        Sub   *Var[0]  00000001
        If  *Var[0]  >  00000000
            Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  UseCamPreset  ( 00000002 )
        Else
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Wait  20`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0005
            SetConst  *Var[2]  004D0003
            ExecWait  8029BBB4
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000018 )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C8B0 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C9D0 )
            Call  BindIdle  ( .Actor:Self $Script_Idle_8021CC7C )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
            Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
        EndIf
        Call  EnableIdleScript  ( .Actor:Self 00000001 )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Return
    EndIf
    Call  SetTargetActor        ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 004D000B )
    Wait  10`
    Call  SetAnimation  ( .Actor:Self 00000001 004D000F )
    Thread
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
    Call  SetAnimation      ( .Actor:Self 00000001 004D000A )
    Wait  20`
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000003 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Loop
                    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
                    If  *Var[0]  >  *Var[3]
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                Call  UseCamPreset  ( 00000001 )
                If  *Var[A]  ==  .HitResult:Lucky % 5
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndIf
                Wait  15`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self FFFFFF6A 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  15`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  000000C8
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
            Wait  10`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
            Wait  8`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004D0008
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:IdleAnimations $IdleAnimations_8021F890
{
    .Status:Normal    00400001
    .Status:Stone     00400000
    .Status:Sleep     00400004
    .Status:Poison    00400001
    .Status:Stop      00400000
    .Status:Static    00400001
    .Status:Paralyze  00400000
    .Status:Dizzy     0040000A
    .Status:Fear      0040000A
    .Status:End
}

#new:DefenseTable $DefenseTable_8021F8DC
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021F8F0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021F99C
{
    00800000 01000000 FE2600FF $IdleAnimations_8021F890 $DefenseTable_8021F8DC 00000000 00000000 FFFB0000 00000000
}

#new:Actor $MediGuy
{
    % stats
    [Index]        22b
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021F8F0
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021F99C
    [Script]      $Script_Init_8021F9E8
    % move effectiveness
    [Escape]       60`b
    [Item]         70`b
    [AirLift]      90`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   12`b  31`b % dx dy
}

#new:Script $Script_Init_8021F9E8
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80220DCC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021FA8C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FC60 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000005
    Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Idle_8021FA8C
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_80218450    ( FFFFFFF6 00000014 0000000A 00000014 )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFE 00000026 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
        Call  $Function_80218450    ( FFFFFFF6 00000014 0000000C 0000001F )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_8021FB9C
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021FC60
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400008
            SetConst  *Var[2]  00400009
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_8021FB9C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoShockHit
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400007
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021FB9C
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400003
            SetConst  *Var[2]  0040000B
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00400006
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_FlyingAttack
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Thread
        SetF  *Var[0]  *Fixed[0.0]
        Loop  0000000F
            AddF  *Var[0]  *Fixed[2.0]
            Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
            Thread
                Wait  5`
                Set   *Var[0]  00000000
                Loop  0000003C
                    Call  $Function_8021851C    ( *Var[0] *Var[1] 0000000F 0000003C *Fixed[30.0] )
                    Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var[1] )
                    Add   *Var[0]  00000001
                    Wait  1`
                EndLoop
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Add   *Var[2]  00000001
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  30`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            ExecWait  $Script_8021FB9C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  10`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[C]  *Var[2]
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000001
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  UseCamPreset      ( 00000002 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpWithBounce    ( .Actor:Self 0000000A *Fixed[2.0] )
            Wait  20`
            Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_8021FB9C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HealOneAlly
{
    Set   *Var[A]  *Var[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  GetOwnerID    ( *Var[0] )
    Call  GetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
    Add   *Var[2]  00000032
    Call  PlayEffect    ( ~FX:Sparkles:Random *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:Recover:LittleHeart *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
    Wait  10`
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( *Var[A] )
    Call  GetEnemyMaxHP ( *Var[A] *Var[4] )
    Mul   *Var[4]  0000003C
    Div   *Var[4]  00000064
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[A] 0000206D )
        Call  PlaySoundAtActor  ( *Var[A] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[A] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[A] *Var[4] .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80220CEC
{
    Call  EnemyCreateTargetList ( 00000002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetActorHP        ( *Var[0] *Var[2] )
    Call  GetEnemyMaxHP     ( *Var[0] *Var[3] )
    If  *Var[2]  !=  *Var[3]
        Call  GetOwnerTarget    ( *Var[0] *Var[1] )
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_80220DCC
{
    ExecWait  $Script_80220CEC
    If  *Var[0]  ==  FFFFFFFF
        ExecWait  $Script_FlyingAttack
    Else
        Call  RandInt   ( 000003E8 *Var[A] )
        If  *Var[A]  <  00000258
            ExecWait  $Script_HealOneAlly
        Else
            ExecWait  $Script_FlyingAttack
        EndIf
    EndIf
    Return
    End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80220E60
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80220E6C
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80220E78
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_80220F24
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:PartsTable $PartsTable_80220FD0
{
    00800000 01000000 022300FF $IdleAnimations_802210B0 $DefenseTable_80220E60 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_80220FF4
{
    00020001 01000000 022300FF $IdleAnimations_802210B0 $DefenseTable_80220E6C 00800000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_802210FC $DefenseTable_80220E6C 00000000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80221148 $DefenseTable_80220E6C 00000000 00000000 00000000 00000000
}

% Origin: HINT
#new:Actor $RMagikoopa
{
    % stats
    [Index]        51b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80220E78
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80220FD0
    [Script]      $Script_Init_80223298
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingRMagikoopa
{
    % stats
    [Index]        52b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80220F24
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80220FF4
    [Script]      $Script_Init_8022333C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_802210B0
{
    .Status:Normal    00560101
    .Status:Stone     00560100
    .Status:Sleep     00560108
    .Status:Poison    00560101
    .Status:Stop      00560100
    .Status:Static    00560101
    .Status:Paralyze  00560100
    .Status:Dizzy     00560107
    .Status:Fear      00560107
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802210FC
{
    .Status:Normal    00570101
    .Status:Stone     00570100
    .Status:Sleep     00570108
    .Status:Poison    00570101
    .Status:Stop      00570100
    .Status:Static    00570101
    .Status:Paralyze  00570100
    .Status:Dizzy     00570107
    .Status:Fear      00570107
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80221148
{
    .Status:Normal    0057010A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80221154
{
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80221164
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560105
            SetConst  *Var[2]  00560106
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560105
            SetConst  *Var[2]  00560106
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
            ExecWait  $Script_RMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560102
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022167C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218788    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_80221788
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218880    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560101 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221164 )
    Call  SetActorType      ( .Actor:Self 00000051 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80220E78 )
    Call  $Function_802187B4    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_80221D84
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022167C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022167C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
            ExecWait  $Script_80221788
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022167C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570105
            SetConst  *Var[2]  00570106
            ExecWait  DoBurnHit
            ExecWait  $Script_80221788
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570105
            SetConst  *Var[2]  00570106
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570104 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
            ExecWait  $Script_RMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570102
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570102 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218630    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218630    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560103 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_80223298
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80221154 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802233E0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221164 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_8022333C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80221154 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802233E0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221D84 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_802233E0
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_802188D8    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetActorAttackBoost   ( *Var[0] *Var[4] )
            If  *Var[4]  <  00000003
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_RMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_RMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DD )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  BoostAttack   ( *Var[8] 00000001 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80223B20
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80223B2C
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80223B38
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_80223BE4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:PartsTable $PartsTable_80223C90
{
    00800000 01000000 022300FF $IdleAnimations_80223D70 $DefenseTable_80223B20 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_80223CB4
{
    00020001 01000000 022300FF $IdleAnimations_80223D70 $DefenseTable_80223B2C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_80223DBC $DefenseTable_80223B2C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80223E08 $DefenseTable_80223B2C 00000000 00000000 00000000 00000000
}

% Origin: HINT
#new:Actor $WMagikoopa
{
    % stats
    [Index]        59b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80223B38
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80223C90
    [Script]      $Script_Init_80225F58
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingWMagikoopa
{
    % stats
    [Index]        5Ab
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80223BE4
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80223CB4
    [Script]      $Script_Init_80225FBC
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80223D70
{
    .Status:Normal    00560301
    .Status:Stone     00560300
    .Status:Sleep     00560308
    .Status:Poison    00560301
    .Status:Stop      00560300
    .Status:Static    00560301
    .Status:Paralyze  00560300
    .Status:Dizzy     00560307
    .Status:Fear      00560307
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80223DBC
{
    .Status:Normal    00570301
    .Status:Stone     00570300
    .Status:Sleep     00570308
    .Status:Poison    00570301
    .Status:Stop      00570300
    .Status:Static    00570301
    .Status:Paralyze  00570300
    .Status:Dizzy     00570307
    .Status:Fear      00570307
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80223E08
{
    .Status:Normal    0057030A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80223E14
{
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80223E24
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
            ExecWait  $Script_WMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022433C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218AF8    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_80224448
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218BF0    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560301 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223E24 )
    Call  SetActorType      ( .Actor:Self 00000059 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80223B38 )
    Call  $Function_80218B24    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_80224A44
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022433C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022433C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            ExecWait  $Script_80224448
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022433C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            ExecWait  $Script_80224448
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
            ExecWait  $Script_WMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570302 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_802189A0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_802189A0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560303 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_80225F58
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80223E14 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802274E4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223E24 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_80225FBC
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80223E14 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802274E4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224A44 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HealOne
{
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_80218D0C    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_80218D6C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[3]
    Call  $Function_80218C48    ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000000
        Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
        Call  GetActorHP    ( *Var[0] *Var[B] )
        If  *Var[A]  !=  *Var[B]
            If  *Var[2]  <  *Var[9]
                Set   *Var[8]  *Var[0]
                Set   *Var[9]  *Var[2]
            Else
                If  *Var[2]  ==  *Var[9]
                    If  *Var[0]  <  *Var[8]
                        Set   *Var[8]  *Var[0]
                        Set   *Var[9]  *Var[2]
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_80218D0C    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_80218D6C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[4]
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                If  *Var[2]  <  *Var[9]
                    Set   *Var[8]  *Var[0]
                    Set   *Var[9]  *Var[2]
                Else
                    If  *Var[2]  ==  *Var[9]
                        If  *Var[0]  <  *Var[8]
                            Set   *Var[8]  *Var[0]
                            Set   *Var[9]  *Var[2]
                        EndIf
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  1
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047 % 47
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001 % 1
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                Set   *Var[8]  *Var[0]
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Call  GetEnemyMaxHP ( .Actor:Self *Var[A] )
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    If  *Var[A]  !=  *Var[B]
        Set   *Var[8]  FFFFFF81
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  3
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  .Actor:Enemy0 % 200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  3
    EndIf
    ExecWait  $Script_WMagikoopa_RunAway
    Return
    Label  64
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[8] 0000206D )
        Call  PlaySoundAtActor  ( *Var[8] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[8] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[8] 00000005 .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HealAll
{
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Thread
            Wait  5`
            Call  PlaySoundAtActor  ( *Var[0] 0000206D )
            Call  PlaySoundAtActor  ( *Var[0] 00000214 )
            Wait  30`
            Call  PlaySoundAtActor  ( *Var[0] 0000025C )
        EndThread
        Thread
            Call  8026BF48  ( 00000001 )
            Call  HealActor ( *Var[0] 00000003 .True )
            Call  8026BF48  ( 00000000 )
        EndThread
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  WaitForBuffDone ( )
    Wait  1`
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_802274E4
{
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_WMagikoopa_RunAway
        Return
    EndIf
    Set   *Var[A]  00000000
    Set   *Var[B]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Call  GetActorHP    ( *Var[0] *Var[2] )
        Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
        If  *Var[2]  !=  *Var[3]
            Add   *Var[A]  00000001
        EndIf
        Add   *Var[B]  00000001
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Mul   *Var[A]  00000064
    Div   *Var[A]  *Var[B]
    Switch  *Var[A]
        Case  >=  0000003C
            ExecWait  $Script_HealAll
        Case  ==  00000000
            Call  GetActorFlags ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00000200
                ExecWait  $Script_WMagikoopa_ShapeSpell
            Else
                ExecWait  $Script_WMagikoopa_WandStrike
            EndIf
        Default
            ExecWait  $Script_HealOne
    EndSwitch
    Return
    End
}

PADDING: 80227778 to 80227780 (0059BA68 to 0059BA70)
00000000 00000000

#new:Script $Script_BeforeBattle_80227780
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kzn_bt01:o363 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_802277D0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802277E0
{
    ~Model:kzn_bt01:ue2
    ~Model:kzn_bt01:ue1
    ~Model:kzn_bt01:iwa3
    ~Model:kzn_bt01:sita1
    ~Model:kzn_bt01:ue3
    00000000
}

#new:Stage $Stage_802277F8
{
    $ASCII_8022A090  % kzn_tex
    $ASCII_8022A080  % kzn_bt01_shape
    $ASCII_8022A070  % kzn_bt01_hit
    $Script_BeforeBattle_80227780
    $Script_AfterBattle_802277D0
    00000000
    $ForegroundModelList_802277E0
    00000000
    00000000
    00000000
}

#new:Script $Script_BeforeBattle_80227820
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022785C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022786C
{
    ~Model:kzn_bt01:ue2
    ~Model:kzn_bt01:ue1
    ~Model:kzn_bt01:iwa3
    ~Model:kzn_bt01:sita1
    ~Model:kzn_bt01:ue3
    00000000
}

#new:Stage $Stage_80227884
{
    $ASCII_8022A0B8  % kzn_tex
    $ASCII_8022A0A8  % kzn_bt01_shape
    $ASCII_8022A098  % kzn_bt01_hit
    $Script_BeforeBattle_80227820
    $Script_AfterBattle_8022785C
    00000000
    $ForegroundModelList_8022786C
    00000000
    00000000
    00000000
}

PADDING: 802278AC to 802278B0 (0059BB9C to 0059BBA0)
00000000

#new:Script $Script_802278B0
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Sub   *Var[0]  FFFFFED4
        Sub   *Var[1]  FFFFFE0C
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022797C
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00004000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_80227A2C
{
    Set   *Var[A]  *Var[0]
    Set   *Var[9]  *Var[1]
    Set   *Var[8]  *Var[2]
    Set   *Var[7]  *Var[3]
    Label  0
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[8] *Var[2] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[2] *Var[8] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80227BDC
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  00000019
    Set   *Var[1]  00000000
    Exec  $Script_802278B0
    Set   *Var[0]  00000006
    Set   *Var[1]  00000001
    Exec  $Script_802278B0
    Set   *Var[0]  00000007
    Set   *Var[1]  00000002
    Exec  $Script_802278B0
    Set   *Var[0]  00000009
    Set   *Var[1]  00000003
    Exec  $Script_802278B0
    Set   *Var[0]  0000000A
    Set   *Var[1]  00000004
    Exec  $Script_802278B0
    Set   *Var[0]  0000000C
    Set   *Var[1]  00000005
    Exec  $Script_802278B0
    Set   *Var[0]  0000000D
    Set   *Var[1]  00000006
    Exec  $Script_802278B0
    Set   *Var[0]  00000018
    Set   *Var[1]  000000B4
    Set   *Var[2]  00000000
    Set   *Var[3]  000000C8
    Exec  $Script_80227A2C
    Return
    End
}

#new:Script $Script_AfterBattle_80227D98
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80227DA8
{
    ~Model:kzn_bt02:iwa3
    ~Model:kzn_bt02:sita1
    ~Model:kzn_bt02:ue3
    00000000
}

#new:Stage $Stage_80227DB8
{
    $ASCII_8022A0E0  % kzn_tex
    $ASCII_8022A0D0  % kzn_bt02_shape
    $ASCII_8022A0C0  % kzn_bt02_hit
    $Script_BeforeBattle_80227BDC
    $Script_AfterBattle_80227D98
    00000000
    $ForegroundModelList_80227DA8
    00000000
    00000000
    00000000
}

#new:Script $Script_80227DE0
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Sub   *Var[0]  FFFFFED4
        Sub   *Var[1]  FFFFFE0C
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80227EAC
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00004000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80227F5C
{
    Set   *Var[A]  *Var[0]
    Set   *Var[9]  *Var[1]
    Set   *Var[8]  *Var[2]
    Set   *Var[7]  *Var[3]
    Label  0
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[8] *Var[2] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[2] *Var[8] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022810C
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kzn_bt04:08 00000000 )
    Call  SetGroupEnabled   ( ~Model:kzn_bt04:16 00000000 )
    Set   *Var[0]  00000004
    Set   *Var[1]  00000000
    Exec  $Script_80227DE0
    Set   *Var[0]  00000005
    Set   *Var[1]  00000001
    Exec  $Script_80227DE0
    Set   *Var[0]  00000006
    Set   *Var[1]  00000002
    Exec  $Script_80227DE0
    Set   *Var[0]  00000007
    Set   *Var[1]  00000003
    Exec  $Script_80227DE0
    Set   *Var[0]  0000000F
    Set   *Var[1]  00000004
    Exec  $Script_80227DE0
    Set   *Var[0]  00000020
    Set   *Var[1]  00000005
    Exec  $Script_80227DE0
    Set   *Var[0]  00000021
    Set   *Var[1]  00000006
    Exec  $Script_80227DE0
    Set   *Var[0]  0000002B
    Set   *Var[1]  00000007
    Exec  $Script_80227DE0
    Set   *Var[0]  0000000D
    Set   *Var[1]  00000008
    Exec  $Script_80227EAC
    Set   *Var[0]  0000000E
    Set   *Var[1]  00000009
    Exec  $Script_80227EAC
    Return
    End
}

#new:Script $Script_AfterBattle_80228328
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228338
{
    ~Model:kzn_bt04:iwa3
    ~Model:kzn_bt04:sita1
    ~Model:kzn_bt04:ue3
    00000000
}

#new:Stage $Stage_80228348
{
    $ASCII_8022A108  % kzn_tex
    $ASCII_8022A0F8  % kzn_bt04_shape
    $ASCII_8022A0E8  % kzn_bt04_hit
    $Script_BeforeBattle_8022810C
    $Script_AfterBattle_80228328
    00000000
    $ForegroundModelList_80228338
    00000000
    00000000
    00000000
}

#new:Script $Script_80228370
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Sub   *Var[0]  FFFFFED4
        Sub   *Var[1]  FFFFFE0C
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8022843C
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00004000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802284EC
{
    Set   *Var[A]  *Var[0]
    Set   *Var[9]  *Var[1]
    Set   *Var[8]  *Var[2]
    Set   *Var[7]  *Var[3]
    Label  0
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[8] *Var[2] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[2] *Var[8] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022869C
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kzn_bt04:06 00000000 )
    Call  SetGroupEnabled   ( ~Model:kzn_bt04:16 00000000 )
    Set   *Var[0]  00000004
    Set   *Var[1]  00000000
    Exec  $Script_80228370
    Set   *Var[0]  00000005
    Set   *Var[1]  00000001
    Exec  $Script_80228370
    Set   *Var[0]  00000006
    Set   *Var[1]  00000002
    Exec  $Script_80228370
    Set   *Var[0]  00000007
    Set   *Var[1]  00000003
    Exec  $Script_80228370
    Set   *Var[0]  0000000F
    Set   *Var[1]  00000004
    Exec  $Script_80228370
    Set   *Var[0]  00000018
    Set   *Var[1]  00000005
    Exec  $Script_80228370
    Set   *Var[0]  00000019
    Set   *Var[1]  00000006
    Exec  $Script_80228370
    Set   *Var[0]  0000002B
    Set   *Var[1]  00000007
    Exec  $Script_80228370
    Set   *Var[0]  0000000D
    Set   *Var[1]  00000008
    Exec  $Script_8022843C
    Set   *Var[0]  0000000E
    Set   *Var[1]  00000009
    Exec  $Script_8022843C
    Return
    End
}

#new:Script $Script_AfterBattle_802288B8
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_802288C8
{
    ~Model:kzn_bt04:iwa3
    ~Model:kzn_bt04:sita1
    ~Model:kzn_bt04:ue3
    00000000
}

#new:Stage $Stage_802288D8
{
    $ASCII_8022A130  % kzn_tex
    $ASCII_8022A120  % kzn_bt04_shape
    $ASCII_8022A110  % kzn_bt04_hit
    $Script_BeforeBattle_8022869C
    $Script_AfterBattle_802288B8
    00000000
    $ForegroundModelList_802288C8
    00000000
    00000000
    00000000
}

#new:Script $Script_80228900
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Sub   *Var[0]  FFFFFED4
        Sub   *Var[1]  FFFFFE0C
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_802289CC
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00004000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80228A7C
{
    Set   *Var[A]  *Var[0]
    Set   *Var[9]  *Var[1]
    Set   *Var[8]  *Var[2]
    Set   *Var[7]  *Var[3]
    Label  0
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[8] *Var[2] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[2] *Var[8] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80228C2C
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:kzn_bt04:06 00000000 )
    Call  SetGroupEnabled   ( ~Model:kzn_bt04:08 00000000 )
    Set   *Var[0]  00000004
    Set   *Var[1]  00000000
    Exec  $Script_80228900
    Set   *Var[0]  00000005
    Set   *Var[1]  00000001
    Exec  $Script_80228900
    Set   *Var[0]  00000006
    Set   *Var[1]  00000002
    Exec  $Script_80228900
    Set   *Var[0]  00000007
    Set   *Var[1]  00000003
    Exec  $Script_80228900
    Set   *Var[0]  0000000F
    Set   *Var[1]  00000004
    Exec  $Script_80228900
    Set   *Var[0]  0000002B
    Set   *Var[1]  00000007
    Exec  $Script_80228900
    Set   *Var[0]  0000000D
    Set   *Var[1]  00000008
    Exec  $Script_802289CC
    Set   *Var[0]  0000000E
    Set   *Var[1]  00000009
    Exec  $Script_802289CC
    Return
    End
}

#new:Script $Script_AfterBattle_80228DF0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228E00
{
    ~Model:kzn_bt04:iwa3
    ~Model:kzn_bt04:sita1
    ~Model:kzn_bt04:ue3
    00000000
}

#new:Stage $Stage_80228E10
{
    $ASCII_8022A158  % kzn_tex
    $ASCII_8022A148  % kzn_bt04_shape
    $ASCII_8022A138  % kzn_bt04_hit
    $Script_BeforeBattle_80228C2C
    $Script_AfterBattle_80228DF0
    00000000
    $ForegroundModelList_80228E00
    00000000
    00000000
    00000000
}

PADDING: 80228E38 to 80228E40 (0059D128 to 0059D130)
00000000 00000000

#new:Script $Script_80228E40
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Sub   *Var[0]  FFFFFED4
        Sub   *Var[1]  FFFFFE0C
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80228F0C
{
    Set   *Var[A]  *Var[1]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  00004000
        Add   *Var[1]  00000000
        Wait  5`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80228FBC
{
    Set   *Var[A]  *Var[0]
    Set   *Var[9]  *Var[1]
    Set   *Var[8]  *Var[2]
    Set   *Var[7]  *Var[3]
    Label  0
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[8] *Var[2] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[2]  *Var[8]
    Add   *Var[2]  *Var[9]
    Call  MakeLerp  ( *Var[2] *Var[8] *Var[7] .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( *Var[A] *Var[0] 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_8022916C
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  00000011
    Set   *Var[1]  00000000
    Exec  $Script_80228E40
    Set   *Var[0]  0000000F
    Set   *Var[1]  00000001
    Exec  $Script_80228E40
    Set   *Var[0]  0000000A
    Set   *Var[1]  00000002
    Exec  $Script_80228F0C
    Set   *Var[0]  0000000B
    Set   *Var[1]  00000003
    Exec  $Script_80228F0C
    Set   *Var[0]  0000001A
    Set   *Var[1]  00000004
    Exec  $Script_80228F0C
    Set   *Var[0]  0000001B
    Set   *Var[1]  00000005
    Exec  $Script_80228F0C
    Call  EnableModel   ( ~Model:kzn_bt05:p00 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p01 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p02 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p03 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p04 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p05 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p06 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p07 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p08 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p09 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p10 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p11 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:p12 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q00 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q01 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q02 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q03 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q04 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q05 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q06 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q07 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q08 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q09 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q10 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q11 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:q12 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r00 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r01 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r02 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r03 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r04 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r05 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r06 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r07 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r08 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r09 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r10 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r11 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:r12 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s01 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s02 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s03 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s04 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s05 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s06 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s07 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s08 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:s09 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h01 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h02 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h03 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h04 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h05 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h06 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h07 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h08 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h09 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h10 .False )
    Call  EnableModel   ( ~Model:kzn_bt05:h11 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_8022974C
{
    Return
    End
}

#new:Stage $Stage_8022975C
{
    $ASCII_8022A180  % kzn_tex
    $ASCII_8022A170  % kzn_bt05_shape
    $ASCII_8022A160  % kzn_bt05_hit
    $Script_BeforeBattle_8022916C
    $Script_AfterBattle_8022974C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80229784 to 80229790 (0059DA74 to 0059DA80)
00000000 00000000 00000000

#new:Formation $Formation_00
{
    $LavaBubble 00000001 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000
    $LavaBubble 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000
    $SpikeTop 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $FlyingRMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $FlyingWMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $SpikeTop 00000001 0000000A 00000000 00000000 00000000 00000000
    $SpikeTop 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $SpikeTop 00000001 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
    $LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $SpikeTop 00000001 0000000A 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
    $PutridPiranha 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000
    $LavaBubble 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
    $PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
    $PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
    $PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
    $PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
    $SpikeTop 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8022A3AC 00000002 $Formation_00 $Stage_802277F8 00000000
    $SJIS_8022A3A0 00000003 $Formation_01 $Stage_802277F8 00000000 % unused
    $SJIS_8022A394 00000004 $Formation_02 $Stage_802277F8 00000000 % unused
    $SJIS_8022A37C 00000004 $Formation_03 $Stage_802277F8 00000000 % unused
    $SJIS_8022A360 00000003 $Formation_04 $Stage_802277F8 00000000 % unused
    $SJIS_8022A348 00000003 $Formation_05 $Stage_802277F8 00000000
    $SJIS_8022A32C 00000003 $Formation_06 $Stage_802277F8 00000000
    $SJIS_8022A318 00000003 $Formation_07 $Stage_802277F8 00000000
    $SJIS_8022A308 00000002 $Formation_08 $Stage_802277F8 00000000
    $SJIS_8022A2F4 00000002 $Formation_09 $Stage_802277F8 00000000
    $SJIS_8022A2DC 00000003 $Formation_0A $Stage_802277F8 00000000
    $SJIS_8022A2C0 00000002 $Formation_0B $Stage_802277F8 00000000
    $SJIS_8022A2A0 00000003 $Formation_0C $Stage_802277F8 00000000 % unused
    $SJIS_8022A27C 00000004 $Formation_0D $Stage_802277F8 00000000
    $SJIS_8022A264 00000004 $Formation_0E $Stage_802277F8 00000000 % unused
    $SJIS_8022A250 00000002 $Formation_0F $Stage_802277F8 00000000
    $SJIS_8022A23C 00000003 $Formation_10 $Stage_802277F8 00000000 % unused
    $SJIS_8022A210 00000003 $Formation_11 $Stage_802277F8 00000000
    $SJIS_8022A1F0 00000003 $Formation_12 $Stage_802277F8 00000000 % unused
    $SJIS_8022A1C0 00000003 $Formation_13 $Stage_802277F8 00000000
    $SJIS_8022A188 00000004 $Formation_14 $Stage_802277F8 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_8022A3E8 $Stage_802277F8
    $ASCII_8022A3E0 $Stage_80227884
    $ASCII_8022A3D8 $Stage_80227DB8
    $ASCII_8022A3D0 $Stage_80228348
    $ASCII_8022A3C8 $Stage_802288D8
    $ASCII_8022A3C0 $Stage_80228E10
    $ASCII_8022A3B8 $Stage_8022975C
    00000000 00000000
}

PADDING: 8022A06C to 8022A070 (0059E35C to 0059E360)
00000000

#new:ASCII $ASCII_8022A070
{
    "kzn_bt01_hit"
}

#new:ASCII $ASCII_8022A080
{
    "kzn_bt01_shape"
}

#new:ASCII $ASCII_8022A090
{
    "kzn_tex"
}

#new:ASCII $ASCII_8022A098
{
    "kzn_bt01_hit"
}

#new:ASCII $ASCII_8022A0A8
{
    "kzn_bt01_shape"
}

#new:ASCII $ASCII_8022A0B8
{
    "kzn_tex"
}

#new:ASCII $ASCII_8022A0C0
{
    "kzn_bt02_hit"
}

#new:ASCII $ASCII_8022A0D0
{
    "kzn_bt02_shape"
}

#new:ASCII $ASCII_8022A0E0
{
    "kzn_tex"
}

#new:ASCII $ASCII_8022A0E8
{
    "kzn_bt04_hit"
}

#new:ASCII $ASCII_8022A0F8
{
    "kzn_bt04_shape"
}

#new:ASCII $ASCII_8022A108
{
    "kzn_tex"
}

#new:ASCII $ASCII_8022A110
{
    "kzn_bt04_hit"
}

#new:ASCII $ASCII_8022A120
{
    "kzn_bt04_shape"
}

#new:ASCII $ASCII_8022A130
{
    "kzn_tex"
}

#new:ASCII $ASCII_8022A138
{
    "kzn_bt04_hit"
}

#new:ASCII $ASCII_8022A148
{
    "kzn_bt04_shape"
}

#new:ASCII $ASCII_8022A158
{
    "kzn_tex"
}

#new:ASCII $ASCII_8022A160
{
    "kzn_bt05_hit"
}

#new:ASCII $ASCII_8022A170
{
    "kzn_bt05_shape"
}

#new:ASCII $ASCII_8022A180
{
    "kzn_tex"
}

#new:SJIS $SJIS_8022A188
{
    ポイズンパックン,トゲメット,ポイズンパックン,トゲメット % poizunpakkun,togemetto,poizunpakkun,togemetto
}

#new:SJIS $SJIS_8022A1C0
{
    ポイズンパックン,トゲメット,ポイズンパックン % poizunpakkun,togemetto,poizunpakkun
}

#new:SJIS $SJIS_8022A1F0
{
    ポイズンパックンx２,トゲメット % poizunpakkunx2,togemetto
}

#new:SJIS $SJIS_8022A210
{
    ポイズンパックン,バブル,ポイズンパックン % poizunpakkun,baburu,poizunpakkun
}

#new:SJIS $SJIS_8022A23C
{
    ポイズンパックンx３ % poizunpakkunx3
}

#new:SJIS $SJIS_8022A250
{
    ポイズンパックンx２ % poizunpakkunx2
}

#new:SJIS $SJIS_8022A264
{
    トゲメット,バブルx３ % togemetto,baburux3
}

#new:SJIS $SJIS_8022A27C
{
    トゲメットx２,ポイズンパックンx２ % togemettox2,poizunpakkunx2
}

#new:SJIS $SJIS_8022A2A0
{
    トゲメットx２,ポイズンパックン % togemettox2,poizunpakkun
}

#new:SJIS $SJIS_8022A2C0
{
    トゲメット,ポイズンパックン % togemetto,poizunpakkun
}

#new:SJIS $SJIS_8022A2DC
{
    トゲメットx２,バブル % togemettox2,baburu
}

#new:SJIS $SJIS_8022A2F4
{
    トゲメット,バブル % togemetto,baburu
}

#new:SJIS $SJIS_8022A308
{
    トゲメットx２ % togemettox2
}

#new:SJIS $SJIS_8022A318
{
    バブルx2,トゲメット % baburux2,togemetto
}

#new:SJIS $SJIS_8022A32C
{
    バブルx2,ホワイトカメック % baburux2,howaitokamekku
}

#new:SJIS $SJIS_8022A348
{
    バブルx2,レッドカメック % baburux2,reddokamekku
}

#new:SJIS $SJIS_8022A360
{
    バブルx2,かいふくヘイホー % baburux2,kaifukuheiho-
}

#new:SJIS $SJIS_8022A37C
{
    バブル,トゲメットx３ % baburu,togemettox3
}

#new:SJIS $SJIS_8022A394
{
    バブルx4 % baburux4
}

#new:SJIS $SJIS_8022A3A0
{
    バブルx3 % baburux3
}

#new:SJIS $SJIS_8022A3AC
{
    バブルx2 % baburux2
}

#new:ASCII $ASCII_8022A3B8
{
    "kzn_05"
}

#new:ASCII $ASCII_8022A3C0
{
    "kzn_04c"
}

#new:ASCII $ASCII_8022A3C8
{
    "kzn_04b"
}

#new:ASCII $ASCII_8022A3D0
{
    "kzn_04"
}

#new:ASCII $ASCII_8022A3D8
{
    "kzn_02"
}

#new:ASCII $ASCII_8022A3E0
{
    "kzn_01b"
}

#new:ASCII $ASCII_8022A3E8
{
    "kzn_01"
}

