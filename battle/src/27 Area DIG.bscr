% Script File: 27 Area DIG.bscr
% Decoded from: 6DDDC0 to 6F0B30 (27 Area DIG)

% Origin: HEURISTIC
#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (006DDE8C to 006DDE90)
00000000

#new:Function $Function_802180D0
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218184
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218238 to 80218240 (006DDFF8 to 006DE000)
00000000 00000000

#new:Function $Function_80218240
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 8021830C to 80218310 (006DE0CC to 006DE0D0)
00000000

#new:Function $Function_80218310
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802183DC to 802183E0 (006DE19C to 006DE1A0)
00000000

% Origin: HEURISTIC
#new:Function $Function_802183E0
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	LIO       A1, *WhackaHitCount
	CLEAR     A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_variable
	SW        R0, 84 (S0)
	SLTI      V0, V0, 8
	BNE       V0, R0, .o34
	ADDIU     V0, R0, 1
	SW        V0, 84 (S0)
	.o34
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80218428 to 80218430 (006DE1E8 to 006DE1F0)
00000000 00000000

#new:Function $Function_80218430
{
	ADDIU     SP, SP, FF78
	SW        S1, 54 (SP)
	COPY      S1, A0
	SW        RA, 60 (SP)
	SW        S3, 5C (SP)
	SW        S2, 58 (SP)
	SW        S0, 50 (SP)
	SDC1      F26, 80 (SP)
	SDC1      F24, 78 (SP)
	SDC1      F22, 70 (SP)
	SDC1      F20, 68 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F20
	NOP
	CVT.D.W   F20, F20
	LIF       F1, 2.5625
	MTC1      R0, F0
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	DIV.D     F20, F20, F0
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	CVT.S.D   F20, F20
	MUL.S     F20, F20, F0
	NOP
	LW        S3, 0 (S0)
	LW        S0, 4 (S0)
	LIF       F0, 360.0
	LIF       F24, 150.0
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	MUL.S     F22, F0, F24
	NOP
	MTC1      R0, F26
	NOP
	ADD.S     F22, F22, F26
	JAL       ~Func:cos_rad
	MOV.S     F12, F20
	MUL.S     F20, F0, F24
	NOP
	LIF       F24, -252.0
	LWC1      F0, B8 (S1)
	CVT.S.W   F0, F0
	SUB.S     F24, F24, F0
	LWC1      F0, B0 (S1)
	CVT.S.W   F0, F0
	SUB.S     F22, F22, F0
	COPY      A0, S1
	COPY      A1, S2
	ADD.S     F20, F20, F26
	LWC1      F0, B4 (S1)
	CVT.S.W   F0, F0
	MFC1      A2, F22
	JAL       ~Func:set_float_variable
	SUB.S     F20, F20, F0
	COPY      A0, S1
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S1
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S0
	LW        RA, 60 (SP)
	LW        S3, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	LDC1      F26, 80 (SP)
	LDC1      F24, 78 (SP)
	LDC1      F22, 70 (SP)
	LDC1      F20, 68 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 88
}

#new:Function $Function_80218580
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	JAL       ~Func:get_model_list_index_from_tree_index
	LW        A0, AC (S0)
	JAL       ~Func:get_model_from_list_index
	COPY      A0, V0
	LWC1      F0, 98 (V0)
	TRUNC.W.S F2, F0
	SWC1      F2, B0 (S0)
	LWC1      F0, 9C (V0)
	TRUNC.W.S F2, F0
	SWC1      F2, B4 (S0)
	LWC1      F0, A0 (V0)
	TRUNC.W.S F2, F0
	SWC1      F2, B8 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802185D8 to 802185E0 (006DE398 to 006DE3A0)
00000000 00000000

#new:Function $Function_802185E0
{
	LAW       V0, 8007419C
	SW        R0, 84 (A0)
	LBU       V0, AA (V0)
	ANDI      V0, V0, 1
	BEQ       V0, R0, .o20
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o20
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80218608
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:add_coins
	ADDIU     A0, R0, 1
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80218628 to 80218630 (006DE3E8 to 006DE3F0)
00000000 00000000

#new:Function $Function_80218630
{
	LHU       V0, 86 (A0)
	SAH       V0, 802809F8
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80218644
{
	ADDIU     SP, SP, FFE8
	LIA       A0, 800DC070
	ADDIU     V0, R0, 1
	SW        RA, 14 (SP)
	SW        S0, 10 (SP)
	SB        V0, 178 (A0)
	LABU      V1, 800B0F16
	LW        S0, D8 (A0)
	ADDIU     V0, R0, 3
	SH        V0, 17C (A0)
	LAW       V0, 8008F0A0
	SLL       V1, V1, 18
	SRA       V1, V1, 18
	SH        V1, 17A (A0)
	SW        V0, 184 (A0)
	JAL       ~Func:player_create_target_list
	COPY      A0, S0
	LB        V1, 40D (S0)
	SB        R0, 425 (S0)
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	ADDIU     V0, V0, 22C
	ADDU      V0, S0, V0
	LHU       V1, 0 (V0)
	SH        V1, 428 (S0)
	LBU       V0, 3 (V0)
	SB        V0, 426 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802186D4 to 802186E0 (006DE494 to 006DE4A0)
00000000 00000000 00000000

#new:Function $Function_802186E0
{
	ADDIU     SP, SP, FFE8
	LIA       A0, 800DC070
	SW        RA, 14 (SP)
	SW        S0, 10 (SP)
	SB        R0, 178 (A0)
	LABU      V1, 800B0F16
	LW        S0, D8 (A0)
	ADDIU     V0, R0, 20
	SH        V0, 17C (A0)
	LAW       V0, 8008F2E4
	SLL       V1, V1, 18
	SRA       V1, V1, 18
	SH        V1, 17A (A0)
	SW        V0, 184 (A0)
	JAL       ~Func:player_create_target_list
	COPY      A0, S0
	LB        V1, 40E (S0)
	ADDIU     V0, R0, 1
	SB        V0, 425 (S0)
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	ADDIU     V0, V0, 22C
	ADDU      V0, S0, V0
	LHU       V1, 0 (V0)
	SH        V1, 428 (S0)
	LBU       V0, 3 (V0)
	SB        V0, 426 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218770
{
	ADDIU     SP, SP, FFE8
	LIA       V1, 800DC070
	SW        RA, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, DC (V1)
	ADDIU     V0, R0, 6
	SB        V0, 178 (V1)
	SH        R0, 17A (V1)
	LAW       A0, 8008FC44
	ADDIU     V0, R0, 98
	SH        V0, 17C (V1)
	SW        A0, 184 (V1)
	JAL       ~Func:player_create_target_list
	COPY      A0, S0
	LB        V1, 40D (S0)
	SB        R0, 425 (S0)
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	ADDIU     V0, V0, 22C
	ADDU      V0, S0, V0
	LHU       V1, 0 (V0)
	SH        V1, 428 (S0)
	LBU       V0, 3 (V0)
	SB        V0, 426 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802187F0
{
	ADDIU     SP, SP, FFE8
	LIA       V1, 800DC070
	ADDIU     V0, R0, 2
	SW        RA, 14 (SP)
	SW        S0, 10 (SP)
	SB        V0, 178 (V1)
	ADDIU     V0, R0, 82
	SH        V0, 17A (V1)
	ADDIU     V0, R0, 82
	SH        R0, 17C (V1)
	SW        R0, 188 (V1)
	SAH       V0, 8010F444
	LAW       V0, 80088928
	LW        S0, D8 (V1)
	ORI       V0, V0, 8000
	COPY      A0, S0
	JAL       ~Func:player_create_target_list
	SW        V0, 184 (V1)
	LB        V1, 40D (S0)
	SB        R0, 425 (S0)
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	ADDIU     V0, V0, 22C
	ADDU      V0, S0, V0
	LHU       V1, 0 (V0)
	SH        V1, 428 (S0)
	LBU       V0, 3 (V0)
	SB        V0, 426 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80218884 to 80218890 (006DE644 to 006DE650)
00000000 00000000 00000000

#new:Function $Function_80218890
{
	LHU       V0, 86 (A0)
	SAH       V0, 802809F8
	JR        RA
	ADDIU     V0, R0, 2
}

PADDING: 802188A4 to 802188B0 (006DE664 to 006DE670)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:DefenseTable $DefenseTable_802188B0
{
    .Element:Normal 00000001
    .Element:Hammer 00000001
    .Element:Jump   00000001
    .Element:Water  00000001
    .Element:Blast  00000001
    .Element:End
}

% Origin: HEURISTIC
#new:DefenseTable $DefenseTable_802188DC
{
    .Element:Normal 00000000
    .Element:End
}

#new:Unknown $???_802188E8
{
    00000001 00000000 00000002 00000000 00000006 0000005A 00000009 0000003C
    00000007 00000064 00000004 0000005A 00000003 00000000 0000000B 00000050
    00000005 0000005A 0000000A 0000005A 00000008 00000064 0000001F 00000000
    00000020 00000000 00000025 00000000 00000022 00000000 00000024 00000000
    00000023 00000000 00000021 00000000 00000026 00000001 00000027 00000000
    00000029 00000000 00000000
}

#new:Unknown $???_80218994
{
    00800000 01000000 FE2400FF $IdleAnimations_802189E0 $DefenseTable_802188B0 00001000 00000000 00F90000
    00000000 00000000 000B0604 00010000 $???_80218994 $Script_80218AC4 $???_802188E8 465A5A5A
    5F006401 1C240000 F1200520
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_802189E0
{
    .Status:Normal    00290101
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290101
    .Status:Stop      00290100
    .Status:Static    00290101
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_80218A2C
{
    .Status:Normal    00290103
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290103
    .Status:Stop      00290100
    .Status:Static    00290103
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_80218A78
{
    .Status:Normal    0029010F
    .Status:Stone     00290110
    .Status:Sleep     00290112
    .Status:Poison    0029010F
    .Status:Stop      00290110
    .Status:Static    0029010F
    .Status:Paralyze  00290110
    .Status:Dizzy     00290114
    .Status:Fear      00290114
    .Status:End
}

% Origin: HEURISTIC
#new:Script $Script_80218AC4
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80219CEC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80218C80 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219168 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80218B28
{
    Switch  *Var[0]
        Case  ==  00000000
            If  *Var[1]  &  00041000
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  $Function_80218000    ( FFFFFFF1 00000020 00000005 00000020 )
            EndIf
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_Idle_80218C80
{
    Label  0
    Call  RandInt   ( 00000050 *Var[A] )
    Add   *Var[A]  00000050
    Loop  *Var[A]
        Label  1
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80218B28
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  1
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A2C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189E0 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A78 )
    EndSwitch
    Loop  00000014
        Label  2
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80218B28
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  2
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A2C )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189E0 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A78 )
    EndSwitch
    Loop  00000050
        Label  3
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80218B28
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  3
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  3
        EndIf
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:IntTable $IntTable_80219110
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

% Origin: HEURISTIC
#new:Script $Script_HandleEvent_80219168
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802188DC )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A78 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            ChildThread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndChildThread
            UseIntBuffer  $IntTable_80219110
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290107
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000
                    Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                ExecWait  DoReturnHome
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoRecover
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                SetConst  *Var[2]  0029010B
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_TakeTurn_80219CEC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Sub   *Var[0]  00000001
            If  *Var[0]  >  00000000
                Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  30`
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Else
                Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  20`
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
                Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
                Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
                Set   *Var[0]  00000000
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                ChildThread
                    Loop  00000005
                        Add   *Var[0]  0000000F
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                        Wait  1`
                    EndLoop
                EndChildThread
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
                Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189E0 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802188B0 )
                Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
                Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndIf
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
        Wait  10`
        ChildThread
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000004
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndChildThread
        Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
        Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
        Wait  10`
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  UseCamPreset      ( 00000005 )
                Call  SetBattleCamZoom  ( 0000012C )
                Call  SetBattleCamOffsetZ   ( 00000014 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Wait  4`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Wait  6`
            Sub   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetPartYaw    ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021AA20
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021AA2C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison     90`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     70`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021AAD8
{
    00800000 01000000 001400FF $IdleAnimations_8021AB24 $DefenseTable_8021AA20 00000000 00000000 00F60000 00000000
}

#new:Actor $Fuzzy
{
    % stats
    [Index]         Ab
    [Level]         6`b
    [MaxHP]         3`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021AA2C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021AAD8
    [Script]      $Script_Init_8021AB70
    % move effectiveness
    [Escape]       50`b
    [Item]         95`b
    [AirLift]      95`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         33`b  28`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021AB24
{
    .Status:Normal    002B0001
    .Status:Stone     002B0000
    .Status:Sleep     002B000E
    .Status:Poison    002B0001
    .Status:Stop      002B0000
    .Status:Static    002B0001
    .Status:Paralyze  002B0000
    .Status:Dizzy     002B000F
    .Status:Fear      002B000F
    .Status:End
}

#new:Script $Script_Init_8021AB70
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B230 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021ABBC )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ABCC )
    Return
    End
}

#new:Script $Script_Idle_8021ABBC
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021ABCC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  .Event:Death % 20
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0013
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0008
            EndIf
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0010
            SetConst  *Var[2]  002B0012
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0010
            SetConst  *Var[2]  002B0012
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0012
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0013
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            ExecWait  8029C0A4
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0013
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0008
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0013
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0013
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0008
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002B0008
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            SetConst  *Var[2]  002B0009
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002B0003
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021B230
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Goto  64
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    ExecWait  8029C12C
    Call  SetAnimation      ( .Actor:Self 00000001 002B0001 )
    Label  64
    Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0004 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Set   *Var[1]  00000000
            Sub   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0005 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000B .False .True .False )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0009 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  4`
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000
                Set   *Flag[00]  .False
            Else
                Set   *Flag[00]  .True
            EndIf
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 002B0005 )
    Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
    If  *Flag[00]  ==  .True
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Wait  10`
    Call  UseIdleAnimation  ( .Actor:Player .False )
    Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0007 )
    Wait  21`
    Call  SetAnimation  ( .Actor:Self 00000001 002B0000 )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
    Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
    Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
    Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
    Wait  1`
    Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
    Wait  2`
    Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
    Wait  10`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetLastDamage ( .Actor:Player *Var[3] )
            If  *Var[3]  !=  00000000
                Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
                Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000A
                Call  $Function_802180D0    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Thread
                    Wait  15`
                    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                    Call  $Function_80218184    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                EndThread
                Add   *Var[0]  00000014
                Add   *Var[1]  00000014
                Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                Add   *Var[0]  *Var[3]
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            EndIf
            Thread
                Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
                Wait  2`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
                Wait  2`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
            Wait  1`
            Thread
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
                Wait  1`
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  5`
            Call  YieldTurn ( )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            ExecWait  8029C12C
            Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021C2D0
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021C2DC
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021C388
{
    00020000 01000000 001400FF $IdleAnimations_8021C488 $DefenseTable_8021C2D0 00200010 00000000 00000000 00000000
    00800001 02000000 004800FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
    00020001 03000000 003600FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
    00020001 04000000 002400FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
    00020001 05000000 001000FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
    00120001 06000000 000000FF $IdleAnimations_8021C578 $DefenseTable_8021C2D0 00200010 00000000 00000000 00000000
}

#new:Actor $Pokey
{
    % stats
    [Index]        14b
    [Level]         9`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021C2DC
    % ai
    [PartsCount]    6`s
    [PartsTable]  $PartsTable_8021C388
    [Script]      $Script_Init_8021C584
    % move effectiveness
    [Escape]       70`b
    [Item]         70`b
    [AirLift]      90`b
    [Hurricane]    85`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  80`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  75`b % dx dy
    [StatusIcon]   10`b  65`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C488
{
    .Status:Normal    00310004
    .Status:Stone     00310000
    .Status:Sleep     00310025
    .Status:Stop      00310000
    .Status:Paralyze  00310000
    .Status:Dizzy     00310021
    .Status:Fear      00310021
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C4C4
{
    .Status:Normal    00310005
    .Status:Stone     00310001
    .Status:Sleep     00310026
    .Status:Stop      00310001
    .Status:Paralyze  00310001
    .Status:Dizzy     00310022
    .Status:Fear      00310022
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C500
{
    .Status:Normal    00310006
    .Status:Stone     00310002
    .Status:Sleep     00310027
    .Status:Stop      00310002
    .Status:Paralyze  00310002
    .Status:Dizzy     00310023
    .Status:Fear      00310023
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C53C
{
    .Status:Normal    00310007
    .Status:Stone     00310003
    .Status:Sleep     00310028
    .Status:Stop      00310003
    .Status:Paralyze  00310003
    .Status:Dizzy     00310024
    .Status:Fear      00310024
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021C578
{
    .Status:Normal    00310016
    .Status:End
}

#new:Script $Script_Init_8021C584
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021E068 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021C700 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C710 )
    Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000001 00310004 )
    Call  SetActorVar   ( .Actor:Self 00000002 00310008 )
    Call  SetActorVar   ( .Actor:Self 00000003 0031000C )
    Call  SetActorVar   ( .Actor:Self 00000004 00310010 )
    Call  SetActorVar   ( .Actor:Self 00000005 00310011 )
    Call  SetActorVar   ( .Actor:Self 00000006 00310018 )
    Call  SetActorVar   ( .Actor:Self 00000007 00310019 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Idle_8021C700
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021C710
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    SetConst  *Var[0]  00000001
                    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                    ExecWait  DoNormalHit
                Else
                    Call  80269E80  ( *Var[0] )
                    Switch  *Var[0]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_80220CFC
                        EndCaseGroup
                        Default
                            SetConst  *Var[0]  00000001
                            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                            ExecWait  DoNormalHit
                    EndSwitch
                EndIf
            EndIf
        Case  ==  .Event:Death % 20
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
                Wait  10`
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    SetConst  *Var[0]  00000001
                    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                    ExecWait  DoNormalHit
                    Wait  10`
                Else
                    Call  80269E80  ( *Var[0] )
                    Switch  *Var[0]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_80220CFC
                        EndCaseGroup
                        Default
                            SetConst  *Var[0]  00000001
                            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                            ExecWait  DoNormalHit
                            Wait  10`
                    EndSwitch
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar       ( .Actor:Self 00000006 *Var[1] )
            Call  GetActorVar       ( .Actor:Self 00000007 *Var[2] )
            SetConst  *Var[0]  00000001
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                ExecWait  DoBurnHit
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    ExecWait  DoBurnHit
                Else
                    Call  80269E80  ( *Var[A] )
                    Switch  *Var[A]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_80220CFC
                        EndCaseGroup
                        Default
                            ExecWait  DoBurnHit
                    EndSwitch
                EndIf
            EndIf
        CaseOR  ==  .Event:BurnDeath % 24
            Call  GetActorVar       ( .Actor:Self 00000006 *Var[1] )
            Call  GetActorVar       ( .Actor:Self 00000007 *Var[2] )
            SetConst  *Var[0]  00000001
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                ExecWait  DoBurnHit
            Else
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
                If  *Var[A]  ==  00000003
                    ExecWait  DoBurnHit
                Else
                    Call  80269E80  ( *Var[A] )
                    Switch  *Var[A]
                        CaseOR  ==  00000006
                        CaseOR  ==  00000007
                        CaseOR  ==  00000009
                            ExecWait  $Script_80220CFC
                        EndCaseGroup
                        Default
                            ExecWait  DoBurnHit
                    EndSwitch
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000007 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_8021FFA0
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_8021FFA0
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashLaunchHit % 11
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
            Else
                ExecWait  $Script_80220CFC
            EndIf
        Case  ==  00000025 % 25
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  &  00080000
                SetConst  *Var[0]  00000001
                Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
                ExecWait  DoNormalHit
            Else
                ExecWait  $Script_80220CFC
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  FFFFFFFF
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoShockHit
            Call  GetActorVar   ( .Actor:Self 00000002 *Var[1] )
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            ExecWait  8029C12C
        Case  ==  .Event:ShockDeath % 26
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            Call  GetActorVar       ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            Call  GetActorVar       ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:SpikeTaunt % 1B
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Set   *Var[0]  00000000
                    Set   *Var[1]  0000004D
                    SetConst  *Var[2]  00310021
                Case  ==  00000001
                    Set   *Var[0]  00000000
                    Set   *Var[1]  0000003B
                    SetConst  *Var[2]  00310022
                Case  ==  00000002
                    Set   *Var[0]  00000000
                    Set   *Var[1]  00000029
                    SetConst  *Var[2]  00310023
                Case  ==  00000003
                    Set   *Var[0]  00000000
                    Set   *Var[1]  00000017
                    SetConst  *Var[2]  00310024
            EndSwitch
            Call  GetStatusFlags    ( .Actor:Self *Var[3] )
            If  *Var[3]  !&  00001000
                Call  SetAnimation  ( .Actor:Self 00000001 *Var[2] )
            EndIf
            Call  GetActorPos       ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Call  GetStatusFlags    ( .Actor:Self *Var[6] )
            If  *Var[6]  &  00080000
                MulF  *Var[0]  *Fixed[0.4]
                MulF  *Var[1]  *Fixed[0.4]
            EndIf
            AddF  *Var[3]  *Var[0]
            AddF  *Var[4]  *Var[1]
            Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var[3] *Var[4] *Var[5] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  30`
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[1] )
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            ExecWait  $Script_802211D4
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021D408
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  AddGoalPos    ( .Actor:Self 0000003C 00000000 00000000 )
            Else
                Call  AddGoalPos    ( .Actor:Self 00000018 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
        Case  ==  00000001
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  AddGoalPos    ( .Actor:Self 00000028 00000000 00000000 )
            Else
                Call  AddGoalPos    ( .Actor:Self 00000010 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
        Case  ==  00000002
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  00080000
                Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
            Else
                Call  AddGoalPos    ( .Actor:Self 00000008 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
    Call  MakeLerp  ( 00000000 FFFFFFD8 00000014 .Easing:CosInOut )
    Label  0
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    ChildThread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002ED )
    EndChildThread
    Call  MakeLerp  ( FFFFFFD8 0000005A 00000005 .Easing:QuadraticIn )
    Label  3
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  3
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  MakeLerp  ( 0000005A 00000000 00000005 .Easing:Linear )
            Label  4
            Call  UpdateLerp ( )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  4
            EndIf
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  YieldTurn ( )
            Call  UseCamPreset  ( 00000002 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  .HitResult:Hit % 0
                    Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
                Case  ==  00000001 % 1
                    Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
                Case  ==  00000002 % 2
                    Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
            EndSwitch
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
    EndSwitch
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  .HitResult:Hit % 0
            Set   *Var[1]  00000002
        Case  ==  00000001 % 1
            Set   *Var[1]  00000002
        Default
            Set   *Var[1]  00000002
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020300 *Var[1] 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:Linear )
            Label  5
            Call  UpdateLerp ( )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  5
            EndIf
            Call  YieldTurn ( )
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  .HitResult:Hit % 0
                    Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
                Case  ==  00000001 % 1
                    Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
                Case  ==  00000002 % 2
                    Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
                    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
                    Call  SetGoalToHome ( .Actor:Self )
                    Call  RunToGoal     ( .Actor:Self 00000000 .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
            EndSwitch
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021DF04
{
    Set   *Var[9]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[2] )
    Switch  *Var[2]
        Case  ==  00000014
            Call  GetStatusFlags    ( *Var[0] *Var[3] )
            If  *Var[3]  !&  003DD000
                Call  GetActorVar   ( .Actor:Self 00000000 *Var[3] )
                If  *Var[3]  ==  00000000
                    Call  GetActorVar   ( *Var[0] 0000000A *Var[3] )
                    If  *Var[3]  !=  00000002
                        Add   *Var[9]  00000001
                    EndIf
                EndIf
            EndIf
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Return
    End
}

#new:Script $Script_TakeTurn_8021E068
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000003
        ExecWait  $Script_8021F5E0
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  GetActorVar   ( .Actor:Self 0000000A *Var[0] )
        If  *Var[0]  ==  00000002
            Goto  7B
        EndIf
        ExecWait  $Script_8021EB94
        If  *Var[E]  ==  FFFFFFFF
            Goto  7B
        EndIf
        ExecWait  $Script_8021DF04
        Switch  *Var[9]
            Case  ==  00000001
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  00000190
                    ExecWait  $Script_8021EE7C
                    Return
                EndIf
            Case  ==  00000002
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  000000C8
                    ExecWait  $Script_8021EE7C
                    Return
                EndIf
            Case  ==  00000003
                Call  RandInt   ( 000003E8 *Var[0] )
                If  *Var[0]  <  00000064
                    ExecWait  $Script_8021EE7C
                    Return
                EndIf
        EndSwitch
    EndIf
    Label  7B
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  <  000001F4
        ExecWait  $Script_8021D408
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
    EndIf
    ChildThread
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
        Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[2.2] )
        Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
        Call  GetStatusFlags    ( .Actor:Self *Var[5] )
        Call  GetActorVar       ( .Actor:Self 00000000 *Var[A] )
        Switch  *Var[A]
            Case  ==  00000000
                If  *Var[5]  !&  00080000
                    Add   *Var[1]  00000026
                Else
                    Add   *Var[1]  0000000F
                    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
                EndIf
                Call  JumpPartTo    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Case  ==  00000001
                If  *Var[5]  !&  00080000
                    Add   *Var[1]  00000014
                Else
                    Add   *Var[1]  00000008
                    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
                EndIf
                Call  JumpPartTo    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Case  ==  00000002
                If  *Var[5]  !&  00080000
                    Add   *Var[1]  00000008
                Else
                    Add   *Var[1]  00000003
                    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
                EndIf
                Call  JumpPartTo    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
            Case  ==  00000003
        EndSwitch
    EndChildThread
    Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
    Call  GetActorVar       ( .Actor:Self 00000004 *Var[1] )
    Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
    Wait  12`
    Call  GetActorVar       ( .Actor:Self 00000005 *Var[1] )
    Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
    Wait  1`
    Call  PlaySoundAtActor  ( .Actor:Self 000002CE )
    Wait  3`
    ExecWait  $Script_802200CC
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            If  *Var[0]  ==  .HitResult:Lucky % 5
                ChildThread
                    Wait  5`
                    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                EndChildThread
            EndIf
            Call  SetTargetActor    ( .Actor:Self .Actor:Player )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000050
            Sub   *Var[1]  00000005
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
            Call  JumpPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            Call  GetActorVar       ( .Actor:Self 00000002 *Var[1] )
            Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
    Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
    Call  JumpPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 80020300 00000002 00000020 )
    Call  GetActorVar       ( .Actor:Self 00000002 *Var[1] )
    Call  SetAnimation      ( .Actor:Self 00000001 *Var[1] )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000037
            Set   *Var[1]  00000000
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
            Sub   *Var[0]  00000018
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
            Sub   *Var[0]  00000014
            Call  FlyPartTo ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021EB94
{
    Set   *Var[E]  FFFFFFFF
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000000
        Return
    EndIf
    Set   *Flag[01]  .False
    Set   *Flag[02]  .False
    Set   *Flag[03]  .False
    Set   *Flag[04]  .False
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[5] )
    Call  GetIndexFromHome      ( *Var[0] *Var[5] )
    Mod   *Var[5]  00000004
    Switch  *Var[5]
        Case  ==  00000000
            Set   *Flag[01]  .True
        Case  ==  00000001
            Set   *Flag[02]  .True
        Case  ==  00000002
            Set   *Flag[03]  .True
        Case  ==  00000003
            Set   *Flag[04]  .True
    EndSwitch
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  GetIndexFromHome  ( .Actor:Self *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Return
        Case  ==  00000001
            If  *Flag[01]  ==  .False
                Set   *Var[E]  00000000
            EndIf
        Case  ==  00000002
            If  *Flag[02]  ==  .False
                Set   *Var[E]  00000001
            EndIf
        Case  ==  00000003
            If  *Flag[03]  ==  .False
                Set   *Var[E]  00000002
            EndIf
    EndSwitch
    Return
    End
}

#new:Vector3D $Vector3D_8021EE54
{
    400` -100` 0`
}

#new:SpecialFormation $SpecialFormation_8021EE60
{
    $Pokey $Vector3D_8021EE54 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_8021EE7C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000001E )
    Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
    Call  MakeLerp  ( 00000000 FFFFFFEC 00000014 .Easing:CosInOut )
    Label  0
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    ChildThread
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 00000344 )
    EndChildThread
    Call  MakeLerp  ( FFFFFFEC 0000001E 00000014 .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    ChildThread
        Wait  6`
        Call  PlaySoundAtActor  ( .Actor:Self 00000345 )
    EndChildThread
    Call  MakeLerp  ( 0000001E FFFFFFD8 00000014 .Easing:CosInOut )
    Label  2
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  2
    EndIf
    ChildThread
        Wait  4`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EE )
    EndChildThread
    Call  MakeLerp  ( FFFFFFD8 0000005A 0000000A .Easing:CosInOut )
    Label  3
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  3
    EndIf
    Wait  20`
    Call  PlaySoundAtActor  ( .Actor:Self 00000346 )
    Call  StartRumble       ( 00000009 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.0] )
    EndThread
    Call  SummonEnemy   ( $SpecialFormation_8021EE60 00000000 )
    Set   *Var[B]  *Var[0]
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000028
    Sub   *Var[1]  00000050
    Call  SetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
    ChildThread
        Call  PlayEffect    ( ~FX:ShockWave:Sand *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  UseIdleAnimation      ( *Var[B] .False )
        Call  SetAnimation  ( *Var[B] 00000001 0031000C )
        Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  SetActorJumpGravity   ( *Var[B] *Fixed[1.2] )
        Call  SetGoalPos    ( *Var[B] *Var[0] 00000000 *Var[2] )
        Call  JumpToGoal    ( *Var[B] 00000014 .False .True .False )
        Wait  20`
        Call  GetActorPos   ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  SetAnimation  ( *Var[B] 00000001 00310004 )
        Call  SetHomePos    ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  HPBarToHome   ( *Var[B] )
        Call  UseIdleAnimation      ( *Var[B] .True )
    EndChildThread
    Call  GetActorVar   ( .Actor:Self 0000000A *Var[1] )
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetActorVar   ( *Var[B] 0000000A 00000001 )
        Case  ==  00000001
            Call  SetActorVar   ( *Var[B] 0000000A 00000002 )
    EndSwitch
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Set   *Var[A]  *Var[0]
    Call  MakeLerp  ( 0000005A FFFFFFE2 00000007 .Easing:QuadraticOut )
    Label  4
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  4
    EndIf
    Wait  20`
    Call  MakeLerp  ( FFFFFFE2 00000000 0000000A .Easing:CosInOut )
    Label  5
    Call  UpdateLerp ( )
    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  5
    EndIf
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021F5E0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000002EC 000002EC )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EC 00000000 )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
    ExecWait  8029C12C
    Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
    Wait  4`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  4`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Set   *Var[1]  0000000A
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
            ChildThread
                Wait  2`
                Set   *Var[0]  00000000
                Loop  00000005
                    Add   *Var[0]  0000001E
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
            EndChildThread
            Call  JumpToGoal    ( .Actor:Self 00000016 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
            ChildThread
                Wait  2`
                Set   *Var[0]  000000B4
                Loop  00000006
                    Add   *Var[0]  0000001E
                    If  *Var[0]  ==  00000168
                        Set   *Var[0]  00000000
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndChildThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            ExecWait  8029C12C
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
    ChildThread
        Wait  2`
        Set   *Var[0]  00000000
        Loop  00000005
            Add   *Var[0]  0000001E
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
            Wait  1`
        EndLoop
    EndChildThread
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 80020300 00000002 00000020 )
    Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Sub   *Var[0]  0000000A
            Call  JumpToGoal    ( .Actor:Self 00000004 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            ExecWait  8029C12C
            Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021FFA0
{
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        SetConst  *Var[0]  00000001
        Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
        ExecWait  DoSpinSmashHit
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    Switch  *Var[A]
        Case  ==  00000000
            ExecWait  $Script_802208B0
        Case  ==  00000001
            ExecWait  $Script_802208B0
        Case  ==  00000002
            ExecWait  $Script_802208B0
        Case  ==  00000003
            SetConst  *Var[0]  00000001
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
            ExecWait  DoSpinSmashHit
    EndSwitch
    Return
    End
}

#new:Script $Script_802200CC
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    Switch  *Var[A]
        Case  ==  00000000
            Call  SetActorVar   ( .Actor:Self 00000001 00310005 )
            Call  SetActorVar   ( .Actor:Self 00000002 00310009 )
            Call  SetActorVar   ( .Actor:Self 00000003 0031000D )
            Call  SetActorVar   ( .Actor:Self 00000004 00310012 )
            Call  SetActorVar   ( .Actor:Self 00000005 00310013 )
            Call  SetActorVar   ( .Actor:Self 00000006 0031001A )
            Call  SetActorVar   ( .Actor:Self 00000007 0031001B )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C4C4 )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            Call  SetActorSize  ( .Actor:Self 0000003E F1194D80 )
            Call  SetPartSize   ( .Actor:Self 00000001 0000003E F1194D80 )
            Call  $Function_80218240    ( FFFFFFF1 00000037 0000000A 0000002D )
        Case  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000001 00310006 )
            Call  SetActorVar   ( .Actor:Self 00000002 0031000A )
            Call  SetActorVar   ( .Actor:Self 00000003 0031000E )
            Call  SetActorVar   ( .Actor:Self 00000004 00310014 )
            Call  SetActorVar   ( .Actor:Self 00000005 00310015 )
            Call  SetActorVar   ( .Actor:Self 00000006 0031001C )
            Call  SetActorVar   ( .Actor:Self 00000007 0031001D )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C500 )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .True )
            Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
            Call  SetActorSize  ( .Actor:Self 0000002C F1194D80 )
            Call  SetPartSize   ( .Actor:Self 00000001 0000002C F1194D80 )
            Call  $Function_80218240    ( FFFFFFF1 00000023 0000000A 00000019 )
        Case  ==  00000002
            Call  SetActorVar   ( .Actor:Self 00000001 00310007 )
            Call  SetActorVar   ( .Actor:Self 00000002 0031000B )
            Call  SetActorVar   ( .Actor:Self 00000003 0031000F )
            Call  SetActorVar   ( .Actor:Self 00000006 0031001E )
            Call  SetActorVar   ( .Actor:Self 00000007 0031001F )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C53C )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .True )
            Call  SetPartFlagBits   ( .Actor:Self 00000005 00020000 .False )
            Call  SetPartFlagBits   ( .Actor:Self 00000005 00800000 .True )
            Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
            Call  SetActorSize  ( .Actor:Self 0000001A F1194D80 )
            Call  SetPartSize   ( .Actor:Self 00000001 0000001A F1194D80 )
            Call  $Function_80218240    ( FFFFFFF1 0000000F 0000000A 00000005 )
    EndSwitch
    Return
    End
}

#new:Script $Script_802205C4
{
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000012
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  *Var[1]
    Wait  2`
    Sub   *Var[3]  00000001
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  3`
    Sub   *Var[3]  00000002
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  2`
    Sub   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000005
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000007
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Add   *Var[3]  00000002
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Add   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Add   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000003
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Wait  1`
    Sub   *Var[3]  00000002
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[3] *Var[2] )
    Return
    End
}

#new:Script $Script_802208B0
{
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartPos        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
    EndIf
    ExecWait  $Script_802200CC
    SetConst  *Var[0]  00000001
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    ChildThread
        Wait  4`
        ExecWait  $Script_802205C4
    EndChildThread
    Call  EnemyCreateTargetList ( 00018004 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerID    ( *Var[1] )
    Call  GetOwnerTarget        ( *Var[0] *Var[9] )
    If  *Var[1]  !=  *Var[0]
        Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
        Goto  0
    EndIf
    Label  1
    Add   *Var[F]  00000001
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  ==  FFFFFFFF % FFFFFFFF
        Goto  A
    EndIf
    Call  GetOwnerTarget    ( *Var[0] *Var[9] )
    Call  GetActorFlags     ( *Var[0] *Var[1] )
    If  *Var[1]  &  00004000 % 4000
        Goto  1
    EndIf
    Call  GetOwnerID        ( *Var[0] )
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[7.0] )
    Call  JumpPartTo        ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
    ChildThread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[1.0] )
    EndChildThread
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  DispatchDamageEvent   ( *Var[0] 00000001 .Event:SpinSmashLaunchHit )
    Goto  1
    Label  A
    Call  UseCamPreset      ( 00000003 )
    Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
    Call  JumpPartTo        ( .Actor:Self 00000006 00000128 00000000 00000000 00000000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
    Return
    End
}

#new:Script $Script_80220CFC
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
    EndIf
    ExecWait  $Script_802200CC
    SetConst  *Var[0]  00000001
    Call  GetLastEvent  ( .Actor:Self *Var[1] )
    Switch  *Var[1]
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:BurnDeath % 24
            Call  SetAnimation  ( .Actor:Self 00000006 00310020 )
            Call  GetActorVar   ( .Actor:Self 00000006 *Var[1] )
        EndCaseGroup
        Default
            Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
    EndSwitch
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    ChildThread
        Wait  4`
        ExecWait  $Script_802205C4
    EndChildThread
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  !=  00000003
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetPartPos    ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
        Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001E
        Set   *Var[1]  00000000
        Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000A 00000012 .Easing:Linear )
        Add   *Var[0]  00000014
        Call  FlyPartTo     ( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000008 0000000A .Easing:Linear )
        Loop  00000014
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
            Wait  1`
        EndLoop
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
    Else
        Wait  30`
    EndIf
    Call  GetLastEvent  ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:BurnHit % E
            Call  GetActorVar   ( .Actor:Self 00000007 *Var[1] )
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetActorSize  ( .Actor:Self *Var[3] *Var[4] )
            Div   *Var[3]  00000002
            Add   *Var[1]  *Var[3]
            Add   *Var[2]  00000005
            DivF  *Var[3]  *Fixed[10.0]
            Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Case  ==  .Event:BurnDeath % 24
            Call  GetActorVar   ( .Actor:Self 00000007 *Var[1] )
            Call  SetAnimation  ( .Actor:Self 00000001 *Var[1] )
            Wait  10`
        Default
    EndSwitch
    Return
    End
}

#new:Script $Script_802211D4
{
    SetConst  *Var[0]  00000001
    Call  GetActorVar   ( .Actor:Self 00000003 *Var[1] )
    Call  UseCamPreset  ( 00000002 )
    Call  GetActorFlags ( .Actor:Self *Var[9] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.05] )
    Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Set   *Var[D]  *Var[B]
    Add   *Var[D]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[D] *Var[C] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  SetAnimation  ( .Actor:Self *Var[0] *Var[1] )
    Wait  20`
    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
    Call  FallToGoal    ( .Actor:Self 0000000A )
    Wait  20`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Wait  5`
    Call  SetActorVar   ( .Actor:Self 00000000 *Var[2] )
    Switch  *Var[2]
        Case  ==  00000000
            Set   *Var[2]  00000060
            Set   *Var[6]  00000004
        Case  ==  00000001
            Set   *Var[2]  00000048
            Set   *Var[6]  00000003
        Case  ==  00000002
            Set   *Var[2]  00000030
            Set   *Var[6]  00000002
        Default
            Set   *Var[2]  00000018
            Set   *Var[6]  00000001
    EndSwitch
    ChildThread
        Call  GetActorPos   ( .Actor:Self *Var[A] *Var[B] *Var[C] )
        Loop  *Var[6]
            Call  PlayEffect    ( ~FX:ShockWave:Sand *Var[A] 00000000 *Var[C] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  10`
        EndLoop
    EndChildThread
    Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
    Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[4]  *Var[2]
    Call  SetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
    Wait  8`
    Call  8027D32C      ( FFFFFF81 )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

PADDING: 8022155C to 80221560 (006E731C to 006E7320)
00000000

#new:IdleAnimations $IdleAnimations_80221560
{
    .Status:Normal    00320001
    .Status:Stone     00320000
    .Status:Sleep     00320010
    .Status:Poison    00320001
    .Status:Stop      00320000
    .Status:Static    00320001
    .Status:Paralyze  00320000
    .Status:Dizzy     00320011
    .Status:Fear      00320011
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802215AC
{
    .Status:Normal    00320002
    .Status:Stone     00320004
    .Status:Sleep     00320010
    .Status:Poison    00320002
    .Status:Stop      00320004
    .Status:Static    00320002
    .Status:Paralyze  00320004
    .Status:Dizzy     00320011
    .Status:Fear      00320011
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802215F8
{
    .Status:Normal    00320014
    .Status:End
}

#new:DefenseTable $DefenseTable_80221604
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80221610
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     20`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear       50`
    .Status:Static     30`
    .Status:Paralyze  100`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802216BC
{
    00800000 01000000 FE1C00FF $IdleAnimations_80221560 $DefenseTable_80221604 00000000 00000000 00F40000 00000000
    00020001 02001E00 000000FF $IdleAnimations_802215F8 $DefenseTable_80221604 00000000 00000000 00000000 00000000
}

#new:PartsTable $PartsTable_80221704
{
    00020000 02000000 000000FF $IdleAnimations_802215F8 $DefenseTable_80221604 00000000 00000000 00000000 00000000
}

#new:Actor $BanditA
{
    % stats
    [Index]        13b
    [Level]         9`b
    [MaxHP]         5`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80221610
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_802216BC
    [Script]      $Script_Init_802217A0
    % move effectiveness
    [Escape]       40`b
    [Item]         90`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         26`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  25`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Actor $BanditB
{
    % stats
    [Index]        13b
    [Level]         9`b
    [MaxHP]         5`b
    [Coins]         1`b
    [Flags]       00600000
    [StatusTable] $StatusTable_80221610
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80221704
    [Script]      $Script_Init_80221814
    % move effectiveness
    [Escape]       40`b
    [Item]         90`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         26`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  25`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
}

#new:Vector3D $Vector3D_80221778
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80221784
{
    $BanditB $Vector3D_80221778 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_802217A0
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222950 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80221860 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221FD8 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_80221804
{
    Return
    End
}

#new:Script $Script_Init_80221814
{
    Call  BindTakeTurn      ( .Actor:Self $Script_HandleEvent_80221804 )
    Call  BindIdle  ( .Actor:Self $Script_HandleEvent_80221804 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221804 )
    Return
    End
}

#new:Script $Script_Idle_80221860
{
    Return
    End
}

#new:Script $Script_80221870
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  00000001
            Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221560 )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
            Call  SummonEnemy   ( $SpecialFormation_80221784 00000000 )
            Set   *Var[A]  *Var[0]
            Call  GetPartOffset ( .Actor:Self 00000002 *Var[1] *Var[2] *Var[3] )
            Call  SetActorPos   ( *Var[A] *Var[1] *Var[2] *Var[3] )
            Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
            Call  SetActorVar   ( *Var[A] 00000001 *Var[0] )
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.0] )
            Call  RandInt       ( 00000168 *Var[0] )
            Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
            Add   *Var[2]  0000001E
            Call  SetActorPos   ( *Var[A] *Var[1] *Var[2] *Var[3] )
            Call  SetActorSounds    ( *Var[A] .ActorSound:Jump 00000000 00000000 )
            Call  AddVectorPolar    ( *Var[1] *Var[3] *Fixed[40.0] *Var[0] )
            Call  SetGoalPos    ( *Var[A] *Var[1] 00000000 *Var[3] )
            Call  JumpToGoal    ( *Var[A] 00000014 .False .True .False )
            Call  PlaySoundAtActor  ( *Var[A] 00000212 )
            Call  AddVectorPolar    ( *Var[1] *Var[3] *Fixed[20.0] *Var[0] )
            Call  SetGoalPos    ( *Var[A] *Var[1] 00000000 *Var[3] )
            Call  JumpToGoal    ( *Var[A] 0000000A .False .True .False )
            Call  PlaySoundAtActor  ( *Var[A] 00000212 )
            Call  AddVectorPolar    ( *Var[1] *Var[3] *Fixed[10.0] *Var[0] )
            Call  SetGoalPos    ( *Var[A] *Var[1] 00000000 *Var[3] )
            Call  JumpToGoal    ( *Var[A] 00000005 .False .True .False )
            Call  PlaySoundAtActor  ( *Var[A] 00000212 )
            Loop
                Call  GetBattleFlags    ( *Var[1] )
                If  *Var[1]  &  00080000
                    BreakLoop
                EndIf
                If  *Var[1]  !&  00000100
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Wait  15`
            Call  SetActorJumpGravity   ( *Var[A] *Fixed[1.0] )
            Call  SetActorSpeed ( *Var[A] *Fixed[6.0] )
            Set   *Var[0]  FFFFFFBA
            Set   *Var[1]  00000000
            Set   *Var[2]  0000000A
            Label  5
            Call  GetActorPos   ( *Var[A] *Var[3] *Var[4] *Var[5] )
            If  *Var[3]  ==  *Var[0]
                Goto  A
            EndIf
            If  *Var[3]  <  *Var[0]
                Set   *Var[4]  *Var[0]
                Sub   *Var[4]  *Var[3]
                If  *Var[4]  <  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000005 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                Else
                    Set   *Var[4]  *Var[3]
                    Add   *Var[3]  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[3] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000000 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                EndIf
            Else
                Set   *Var[4]  *Var[3]
                Sub   *Var[4]  *Var[0]
                If  *Var[4]  <  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000005 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                Else
                    Sub   *Var[3]  0000001E
                    Call  SetGoalPos        ( *Var[A] *Var[3] *Var[1] *Var[2] )
                    Call  JumpToGoal        ( *Var[A] 00000000 .False .True .False )
                    Call  PlaySoundAtActor  ( *Var[A] 00000212 )
                EndIf
            EndIf
            Goto  5
            Label  A
            Call  EnableActorBlur   ( *Var[A] 00000001 )
            Call  SetTargetActor    ( *Var[A] .Actor:Player )
            Call  SetGoalToTarget   ( *Var[A] )
            Call  JumpToGoal    ( *Var[A] 0000000F .False .False .False )
            Call  GetGoalPos    ( *Var[A] *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmallGoldSparkle *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  PlaySoundAtActor  ( *Var[A] 00000211 )
            Call  GetActorVar   ( *Var[A] 00000001 *Var[0] )
            Call  AddCoin       ( *Var[0] )
            Call  RemoveActor   ( *Var[A] )
    EndSwitch
    Return
    End
}

#new:Script $Script_HandleEvent_80221FD8
{
    UseArray  $End[0]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoNormalHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:SpinSmashLaunchHit % 11
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoNormalHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0032000A
            SetConst  *Var[2]  0032000B
            ExecWait  DoBurnHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        Case  ==  .Event:BurnDeath % 24
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0032000A
            SetConst  *Var[2]  0032000B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0032000B
            ExecWait  DoDeath
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        Case  ==  .Event:SpinSmashHit % B
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoSpinSmashHit
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        Case  ==  .Event:SpinSmashDeath % 21
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoDeath
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320007
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    SetConst  *Var[1]  00320001
                Case  ==  00000001
                    SetConst  *Var[1]  00320002
            EndSwitch
            SetConst  *Var[0]  00000001
            ExecWait  DoImmune
        EndCaseGroup
        CaseOR  ==  .Event:Death % 20
        CaseOR  ==  00000025 % 25
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoDeath
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        EndCaseGroup
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320007
            SetConst  *Var[2]  00320009
            ExecWait  DoScareAway
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            Return
        Case  ==  .Event:BeginAirLift % 3A
            Exec  $Script_80221870 *Array[0]
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            ExecWait  DoAirLift
            Loop
                DoesScriptExist  *Array[0] *Var[0]
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00320009
            SetConst  *Var[2]  00040000
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00320001 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80222950
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetActorYaw   ( .Actor:Self 000000B4 )
        Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
        Wait  30`
        Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
        Call  SetGoalPos    ( .Actor:Self 0000012C 00000000 00000000 )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetBattleFlagBits ( 00040000 .True )
        Call  8027D32C      ( FFFFFF81 )
        Call  RemoveActor   ( .Actor:Self )
        Return
    EndIf
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000032
        Set   *Var[1]  00000000
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Else
        Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
        Wait  6`
    EndIf
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00320005 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000023 00000000 00000000 )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  PlaySoundAtActor  ( .Actor:Self 000020C2 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetAnimation  ( .Actor:Self 00000001 0032000D )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  5`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 0032000D )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  <=  .HitResult:Hit % 0
                Set   *Var[0]  00000001
                Goto  A
            EndIf
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000
                Set   *Var[0]  00000001
                Goto  A
            EndIf
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00080000
                Set   *Var[0]  00000000
                Goto  A
            EndIf
            Call  GetStatusFlags    ( .Actor:Player *Var[0] )
            If  *Var[0]  &  00100000
                Set   *Var[0]  00000000
                Goto  A
            EndIf
            Call  AddCoin   ( 00000000 )
            Switch  *Var[0]
                Case  ==  00000000
                    Set   *Var[0]  00000001
                Case  <  0000000A
                    Call  SetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Set   *Var[0]  00000002
                Case  >=  0000000A
                    Call  SetActorVar   ( .Actor:Self 00000001 0000000A )
                    Set   *Var[0]  00000002
            EndSwitch
            Label  A
            Switch  *Var[0]
                Case  ==  00000000
                    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Set   *Var[1]  00000000
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
                Case  ==  00000001
                    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Add   *Var[0]  0000001E
                    Set   *Var[1]  00000000
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
                    Wait  20`
                    Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
                    Call  SetAnimation  ( .Actor:Self 00000001 00320010 )
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
                Default
                    Call  SetGoalToTarget   ( .Actor:Self )
                    Call  GetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
                    Add   *Var[A]  0000001E
                    Set   *Var[B]  00000000
                    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                    Mul   *Var[0]  FFFFFFFF
                    Call  AddCoin       ( *Var[0] )
                    Thread
                        Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .True )
                        Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
                        Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
                        Call  SetPartPos        ( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
                        Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
                        Add   *Var[B]  0000001E
                        Call  JumpPartTo        ( .Actor:Self 00000002 *Var[A] *Var[B] *Var[C] 00000016 .True )
                        Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
                    EndThread
                    Thread
                        Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
                        Loop  *Var[0]
                            Call  PlaySoundAtActor  ( .Actor:Self 00000212 )
                            Wait  1`
                        EndLoop
                    EndThread
                    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
                    Call  SetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
                    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
                    Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_802215AC )
                    Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                    Wait  7`
                    Call  SetAnimation  ( .Actor:Self 00000001 0032000F )
                    Wait  20`
                    Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
            EndSwitch
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 80223764 to 80223770 (006E9524 to 006E9530)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80223770
{
    .Element:Normal 00000000
    .Element:Shock  00000000
    .Element:End
}

#new:StatusTable $StatusTable_80223784
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      70`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      90`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80223830
{
    00800000 01000000 001800FF $IdleAnimations_8022387C $DefenseTable_80223770 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy
{
    % stats
    [Index]        1Fb
    [Level]        14`b
    [MaxHP]         7`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80223784
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80223830
    [Script]      $Script_Init_802238C8
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022387C
{
    .Status:Normal    003B0001
    .Status:Stone     003B0000
    .Status:Sleep     003B0012
    .Status:Poison    003B0001
    .Status:Stop      003B0000
    .Status:Static    003B0001
    .Status:Paralyze  003B0000
    .Status:Dizzy     003B0013
    .Status:Fear      003B0013
    .Status:End
}

#new:Script $Script_Init_802238C8
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80225214 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80223914 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223A88 )
    Return
    End
}

#new:Script $Script_Idle_80223914
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00001000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 0000000E )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218310    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 00000000 00000018 )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218310    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80223A24
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  003B0003
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Return
    End
}

#new:Script $Script_HandleEvent_80223A88
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000D
            SetConst  *Var[2]  003B000E
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_80223A24
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0003
            SetConst  *Var[2]  003B0014
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B000C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80223F64
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000032
    Set   *Var[1]  00000000
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000000A
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 0000000F )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
    Wait  8`
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_80223A24
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022468C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 00000014 )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000050
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Sub   *Var[0]  00000028
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000A
            Set   *Var[1]  00000000
            Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal        ( .Actor:Self 00000018 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Sub   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Wait  15`
            Call  UseCamPreset  ( 00000002 )
            Call  MoveBattleCamOver     ( 0000000F )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self 00000012 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 0000000F )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var[3]  00000000
                Loop  00000014
                    Sub   *Var[3]  0000001E
                    If  *Var[3]  <  00000000
                        Add   *Var[3]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[3] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  &  80000000 % 80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var[0] )
            If  *Var[0]  ==  .HitResult:Hit % 0
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var[0] )
            If  *Var[0]  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003B0004
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80225214
{
    Call  RandInt   ( 00000001 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_80223F64
    Else
        ExecWait  $Script_8022468C
    EndIf
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80225270
{
    .Status:Normal    006B0002
    .Status:Stone     006B0000
    .Status:Sleep     006B0000
    .Status:Poison    006B0002
    .Status:Stop      006B0000
    .Status:Static    006B0000
    .Status:Paralyze  006B0000
    .Status:Paralyze  006B0000
    .Status:Dizzy     006B0000
    .Status:Dizzy     006B0000
    .Status:Fear      006B0000
    .Status:End
}

#new:DefenseTable $DefenseTable_802252CC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802252D8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      80`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   80`
    .Status:Shrink     90`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80225384
{
    00802000 01000000 F14B00FF $IdleAnimations_80225270 $DefenseTable_802252CC 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbaBlubba
{
    % stats
    [Index]        A3b
    [Level]        70`b
    [MaxHP]        10`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802252D8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80225384
    [Script]      $Script_Init_802253D0
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]        110`b 100`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -33`b  78`b % dx dy
    [StatusIcon]   10`b  75`b % dx dy
}

#new:Script $Script_Init_802253D0
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802256A0 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_802255D8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802255E8 )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802255C8 )
    Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Exec  $Script_80225488 *Var[0]
    Call  SetActorVar   ( .Actor:Self 00000002 *Var[0] )
    Return
    End
}

#new:Script $Script_80225488
{
    Label  0
    Wait  1`
    Call  ActorExists   ( .Actor:Self *Var[0] )
    If  *Var[0]  ==  .False
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Goto  0
    EndIf
    Call  GetAnimation  ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  006B0006
        Goto  1
    EndIf
    If  *Var[0]  ==  006B0007
        Goto  1
    EndIf
    Goto  0
    Label  1
    Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.5] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_NextTurn_802255C8
{
    Return
    End
}

#new:Script $Script_Idle_802255D8
{
    Return
    End
}

#new:Script $Script_HandleEvent_802255E8
{
    Return
    End
}

#new:Script $Script_802255F8
{
    Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_TakeTurn_802256A0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    If  *Var[0]  ==  .HitResult:Miss % 6
        Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
        Call  SetGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 006B0001 )
        Wait  30`
        Set   *Var[0]  00000000
        Loop  0000000C
            Add   *Var[0]  0000000F
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Wait  10`
        Set   *Var[0]  000000B4
        Loop  0000000C
            Sub   *Var[0]  0000000F
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000050
        Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var[0] *Var[1] *Var[2] 0000001E 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
        Wait  40`
        Call  SetAnimation  ( .Actor:Self 00000001 006B0001 )
        Set   *Var[0]  00000000
        Loop  0000000F
            Add   *Var[0]  0000000C
            Call  SetActorYaw   ( .Actor:Self *Var[0] )
            Wait  1`
        EndLoop
        Call  SetAnimation  ( .Actor:Self 00000001 006B0006 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[0]  000000DC
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  GetActorVar   ( .Actor:Self 00000002 *Var[0] )
        Kill  *Var[0]
        Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
        Call  SetBattleFlagBits ( 00060000 .True )
        Call  8026F60C      ( 0000000A )
        Return
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000001 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  802535B4      ( 00000000 )
        Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
        Call  ActorSpeak    ( 000E0103 .Actor:Self 00000001 006B0009 006B0002 ) % Bah ha ha ha ha! That wimpy little attack doesn't  ...
        Thread
            Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
            Wait  4`
            Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
            Wait  15`
        EndThread
        Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
        Call  SetAnimation      ( .Actor:Self 00000001 006B0001 )
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  802535B4  ( 00000001 )
    EndIf
    ExecWait  $Script_8022614C
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80225BF0
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  SetBattleCamZoom  ( 00000096 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 006B0007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    If  *Var[5]  !&  00080000
        Call  AddGoalPos    ( .Actor:Self 00000032 00000000 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 00000014 00000000 00000000 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
    Wait  20`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
    Wait  3`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00080000
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[15.0] )
        EndThread
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  30`
            Call  SetAnimation      ( .Actor:Self 00000001 006B0002 )
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            If  *Var[A]  ==  00000005
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            ExecWait  $Script_802255F8
            Return
        EndCaseGroup
        Default
    EndSwitch
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  !&  00080000
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    If  *Var[5]  !&  00080000
        Call  80269EAC  ( 00000017 )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Wait  30`
            Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  YieldTurn ( )
            ExecWait  $Script_802255F8
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_8022614C
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset  ( 0000003F )
    Call  SetBattleCamZoom  ( 000000B4 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000046 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 006B000F )
    Wait  8`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0010 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 006B0011 )
            EndThread
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  PlaySound     ( 000003E2 )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000017 .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
            Call  SetAnimation  ( .Actor:Self 00000001 006B0012 )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            EndThread
            Thread
                Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Wait  8`
            Call  SetAnimation      ( .Actor:Self 00000001 006B0013 )
            Wait  4`
            ExecWait  $Script_802255F8
            Return
        EndCaseGroup
        Default
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 006B0011 )
            EndThread
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  PlaySound ( 000003E2 )
            Call  JumpToGoal        ( .Actor:Self 00000010 .False .True .False )
    EndSwitch
    Wait  2`
    Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[5] )
    If  *Var[5]  !&  00080000
        Call  80269EAC  ( 00000018 )
        Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
    EndIf
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000006 00000020 )
    Call  UseCamPreset      ( 00000002 )
    Call  MoveBattleCamOver ( 00000014 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
        CaseOR  ==  0000000A % A
            Call  GetStatusFlags    ( .Actor:Self *Var[5] )
            If  *Var[5]  &  00080000
                Goto  1
            EndIf
            Call  GetBattleFlags    ( *Var[0] )
            If  *Var[0]  !&  80000000 % 80000000
                Call  GetStatusFlags    ( .Actor:Player *Var[0] )
                If  *Var[0]  !&  00100000 % 100000
                    Call  LandJump  ( .Actor:Self )
                Else
                    Goto  1
                EndIf
            Else
                Goto  1
            EndIf
            Label  0
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:ShockWave:White *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            EndThread
            Thread
                Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndThread
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Set   *Var[1]  00000000
            Add   *Var[2]  00000005
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
            Goto  2
            Label  1
            Call  GetStatusFlags        ( .Actor:Self *Var[5] )
            If  *Var[5]  !&  00080000
                Wait  3`
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Thread
                Wait  8`
                Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
            EndThread
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            If  *Var[5]  !&  00080000
                Call  ShakeCam      ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
                Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
                Wait  8`
            EndIf
            Label  2
            If  *Var[F]  ==  0000000A % A
                Return
            EndIf
            Call  YieldTurn ( )
            ExecWait  $Script_802255F8
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:DefenseTable $DefenseTable_80226D50
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80226D5C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     80`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     10`
    .Status:Paralyze  100`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80226E08
{
    00020000 01000000 FE1000FF $IdleAnimations_80226E9C $DefenseTable_80226D50 00000000 00000000 00F90000 00000000
    80800001 020000F1 FE0C00FF $IdleAnimations_80226E9C $DefenseTable_80226D50 00000000 00000000 00F90000 00000000
    00120001 03000000 000000FF $IdleAnimations_80226EE8 $DefenseTable_80226D50 00000000 00000000 00000000 00000000
}

#new:Actor $MontyMole
{
    % stats
    [Index]        12b
    [Level]         8`b
    [MaxHP]         3`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80226D5C
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80226E08
    [Script]      $Script_Init_802270B0
    % move effectiveness
    [Escape]       80`b
    [Item]         85`b
    [AirLift]      70`b
    [Hurricane]    50`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]         34`b  18`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80226E9C
{
    .Status:Normal    002F0001
    .Status:Stone     002F0000
    .Status:Sleep     002F0014
    .Status:Poison    002F0001
    .Status:Stop      002F0000
    .Status:Static    002F0001
    .Status:Paralyze  002F0000
    .Status:Dizzy     002F0014
    .Status:Fear      002F0014
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80226EE8
{
    .Status:Normal    002F000F
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80226EF4
{
    .Status:Normal    002F0012
    .Status:End
}

MISSING: 80226F00 to 80226F0C (006ECCC0 to 006ECCCC)
00000001 002F0006 00000000

#new:PartsTable $PartsTable_80226F0C
{
    00022000 01000000 000000FF $IdleAnimations_80226EF4 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_80226F30
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Return
    End
}

#new:Actor $EmptyMoleHole
{
    % stats
    [Index]        6Bb
    [Level]         9`b
    [MaxHP]         5`b
    [Coins]         2`b
    [Flags]       00640004
    [StatusTable] 00000000
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80226F0C
    [Script]      $Script_Init_80226F30
    % move effectiveness
    [Escape]       80`b
    [Item]         80`b
    [AirLift]       0`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    90`b
    [PowerBounce]  90`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]         32`b  18`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Vector3D $Vector3D_80226FB8
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80226FC4
{
    $EmptyMoleHole $Vector3D_80226FB8 00000000 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_80226FE0
{
    $EmptyMoleHole $Vector3D_80226FB8 00000000 00000001 00000000 00000000 00000000
}

#new:Script $Script_80226FFC
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SummonEnemy   ( $SpecialFormation_80226FE0 00000000 )
    Else
        Call  SummonEnemy   ( $SpecialFormation_80226FC4 00000000 )
    EndIf
    Call  GetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
    Sub   *Var[3]  00000001
    Call  SetActorPos   ( *Var[0] *Var[1] *Var[2] *Var[3] )
    Return
    End
}

#new:Script $Script_Init_802270B0
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802278AC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80227114 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227124 )
    Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
    Return
    End
}

#new:Script $Script_Idle_80227114
{
    Return
    End
}

#new:Script $Script_HandleEvent_80227124
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastElement    ( *Var[E] )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            If  *Var[E]  &  00000040
                ChildThread
                    Wait  8`
                    Call  SetAnimation  ( .Actor:Self 00000001 002F0007 )
                EndChildThread
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002F0006
                ExecWait  DoNormalHit
                Call  SetAnimation  ( .Actor:Self 00000001 002F0008 )
                Wait  10`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002F0005
                ExecWait  DoNormalHit
            EndIf
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002F000A
            SetConst  *Var[2]  002F000B
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002F000A
            SetConst  *Var[2]  002F000B
            ExecWait  DoBurnHit
            ExecWait  $Script_80226FFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002F000C
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetLastElement    ( *Var[0] )
            If  *Var[0]  &  00000040
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
                Call  SetAnimation      ( .Actor:Self 00000001 002F0011 )
                Wait  80`
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  SetAnimation      ( .Actor:Self 00000001 002F0010 )
                Wait  20`
                Call  SetAnimation      ( .Actor:Self 00000001 002F0014 )
                Wait  20`
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002F0001
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002F0005
            ExecWait  DoNormalHit
            Call  SetAnimation  ( .Actor:Self 00000001 002F0006 )
            Wait  10`
            ExecWait  $Script_80226FFC
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002F0009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            Call  SetAnimation  ( .Actor:Self 00000001 002F0006 )
            Wait  8`
            Call  SetAnimation  ( .Actor:Self 00000001 002F0007 )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 002F0008 )
            Wait  8`
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation      ( .Actor:Self 00000001 002F0006 )
            Wait  15`
            Call  SetAnimation      ( .Actor:Self 00000001 002F0007 )
            Wait  15`
            Call  SetAnimation      ( .Actor:Self 00000001 002F0008 )
            Wait  15`
            Call  SetActorFlagBits  ( .Actor:Self 00404000 .True )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80226EF4 )
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002F0005
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            ExecWait  $Script_80226FFC
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  0035D000
                Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFB 00000000 )
                Call  SetAnimation  ( .Actor:Self 00000001 002F0019 )
            Else
                If  *Var[0]  &  00080000
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFF7 00000000 )
                Else
                    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE9 00000000 )
                EndIf
                Call  SetAnimation  ( .Actor:Self 00000001 002F0009 )
            EndIf
            Wait  1000`
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 002F0011 )
            Wait  40`
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetAnimation      ( .Actor:Self 00000001 002F0010 )
            Wait  20`
            Call  SetAnimation      ( .Actor:Self 00000001 002F0014 )
            Wait  20`
        Case  ==  .Event:UpAndAway % 3D
            ExecWait  $Script_80226FFC
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802278AC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    EndIf
    ChildThread
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
    EndChildThread
    Call  SetAnimation      ( .Actor:Self 00000001 002F0004 )
    Wait  37`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000014
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    Else
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  PlaySoundAtPart   ( .Actor:Self 00000003 .Sound:MoleThrow )
    Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetTargetActor    ( .Actor:Self .Actor:Player )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000064
            Set   *Var[1]  FFFFFFFB
            Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
            Call  SetAnimation      ( .Actor:Self 00000003 002F000F )
            Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  YieldTurn ( )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
    Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
    Call  SetAnimation      ( .Actor:Self 00000003 002F000F )
    Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  GetActorPos       ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000037
            Set   *Var[1]  00000000
            Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[6.0] )
            Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
            Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
            Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[4.0] )
            Sub   *Var[0]  00000014
            Call  FlyPartTo ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 80227EF4 to 80227F00 (006EDCB4 to 006EDCC0)
00000000 00000000 00000000

#new:Unknown $???_80227F00
{
    00000001 00920001 0000000C 00920000 00000006 00920001 00000009 00920001
    00000008 00920000 0000000B 00920001 00000005 00920000 00000004 00920001
    00000003 00920001 00000000
}

#new:Unknown $???_80227F4C
{
    00000001 00000000 00000000
}

#new:Unknown $???_80227F58
{
    00000001 00000000 00000002 00000000 00000006 00000000 00000009 00000000
    00000007 00000000 00000004 00000000 00000003 00000000 0000000B 00000000
    00000005 00000000 0000000A 00000000 00000008 00000000 0000001F 00000000
    00000020 00000000 00000025 00000000 00000022 00000000 00000024 00000000
    00000023 00000000 00000021 00000000 00000026 00000000 00000027 00000000
    00000029 00000000 00000000
}

#new:Unknown $???_80228004
{
    00800000 01000000 001E00FF $???_80227F00 $???_80227F4C 00000000 00000000 00FB0000
    00000000 00040004 00D00063 00010000 $???_80228004 $Script_80228050 $???_80227F58 00000000
    00043200 2F200000 EC280A1E
}

% Origin: HEURISTIC
#new:Script $Script_80228050
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802288E4 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022810C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228140 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Call  $Function_802183E0 ( )
    If  *Var[0]  ==  00000000
        Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
        Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    EndIf
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_Idle_8022810C
{
    Label  0
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_HandleEvent_80228140
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920004
            ExecWait  $Script_80228934
            ExecWait  DoNormalHit
            Call  RandInt   ( 00000064 *Var[0] )
            If  *Var[0]  <=  00000064
                ExecWait  $Script_80228A14
                Return
            EndIf
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            SetConst  *Var[2]  00920001
            ExecWait  $Script_80228934
            ExecWait  DoNormalHit
            Call  RandInt   ( 00000064 *Var[0] )
            If  *Var[0]  <=  00000064
                ExecWait  $Script_80228A14
                Return
            EndIf
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            SetConst  *Var[2]  00920001
            ExecWait  $Script_80228934
            ExecWait  DoNormalHit
            If  00000064  >=  00000064
                ExecWait  $Script_80228A14
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00920001
                ExecWait  DoDeath
                Return
            EndIf
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoSpinSmashHit
            Call  RandInt   ( 00000064 *Var[0] )
            If  *Var[0]  <=  00000064
                ExecWait  $Script_80228A14
                Return
            EndIf
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoSpinSmashHit
            If  00000064  >=  00000064
                ExecWait  $Script_80228A14
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00920001
                ExecWait  DoDeath
                Return
            EndIf
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoImmune
        Case  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoImmune
            Call  RandInt   ( 00000064 *Var[0] )
            If  *Var[0]  <=  00000064
                ExecWait  $Script_80228A14
                Return
            EndIf
        Case  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoImmune
            Call  RandInt   ( 00000064 *Var[0] )
            If  *Var[0]  <=  00000064
                ExecWait  $Script_80228A14
                Return
            EndIf
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920004
            ExecWait  $Script_80228934
            ExecWait  DoNormalHit
            Wait  10`
            If  00000064  >=  00000064
                ExecWait  $Script_80228A14
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00920001
                ExecWait  DoDeath
                Return
            EndIf
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            SetConst  *Var[2]  00920001
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00920001
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_TakeTurn_802288E4
{
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <=  00000064
        ExecWait  $Script_80228A14
        Return
    EndIf
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80228934
{
    Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
    Thread
        Wait  15`
        Call  SetAnimation      ( .Actor:Self 00000001 00920001 )
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  00000005
        Add   *Var[1]  00000014
        Add   *Var[2]  0000000A
        Call  MakeItemEntity    ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] .ItemSpawnMode:Fall_SpawnAlways 00000000 )
    EndThread
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80228A14
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
    Call  SetAnimation      ( .Actor:Self 00000001 00920003 )
    Wait  40`
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000000
        Call  SetBattleFlagBits2    ( 10000000 .True )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
    Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
    Call  RemoveActor       ( .Actor:Self )
    Return
    End
}

PADDING: 80228B0C to 80228B10 (006EE8CC to 006EE8D0)
00000000

#new:Script $Script_BeforeBattle_80228B10
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_80228B30
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228B40
{
    ~Model:nok_bt04:ueki2
    ~Model:nok_bt04:ueki1
    ~Model:nok_bt04:kabu2
    ~Model:nok_bt04:kabu1
    ~Model:nok_bt04:kusa3
    00000000
}

#new:Stage $Stage_80228B58
{
    $ASCII_8022AC18  % nok_tex
    $ASCII_8022AC08  % nok_bt04_shape
    $ASCII_8022ABF8  % nok_bt04_hit
    $Script_BeforeBattle_80228B10
    $Script_AfterBattle_80228B30
    $ASCII_8022ABF0  % nok_bg
    $ForegroundModelList_80228B40
    00000000
    00000000
    00000000
}

#new:Script $Script_BeforeBattle_80228B80
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetGroupEnabled   ( ~Model:iwa_bt01:a 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80228BB4
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228BC4
{
    ~Model:iwa_bt01:iwa1
    ~Model:iwa_bt01:o331
    00000000
}

#new:Stage $Stage_80228BD0
{
    $ASCII_8022AC48  % iwa_tex
    $ASCII_8022AC38  % iwa_bt01_shape
    $ASCII_8022AC28  % iwa_bt01_hit
    $Script_BeforeBattle_80228B80
    $Script_AfterBattle_80228BB4
    $ASCII_8022AC20  % iwa_bg
    $ForegroundModelList_80228BC4
    00000000
    00000000
    00000000
}

PADDING: 80228BF8 to 80228C00 (006EE9B8 to 006EE9C0)
00000000 00000000

#new:Script $Script_80228C00
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[1]
    Mul   *Var[7]  0000000A
    Call  $Function_80218580 ( )
    Label  0
    Add   *Var[7]  00000001
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218430    ( *Var[7] *Var[0] *Var[1] *Var[2] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80228CE0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000001
    Set   *Var[1]  00000000
    Exec  $Script_80228C00
    Set   *Var[0]  00000003
    Set   *Var[1]  00000078
    Exec  $Script_80228C00
    Set   *Var[0]  00000005
    Set   *Var[1]  000000F0
    Exec  $Script_80228C00
    Call  PlayEffect        ( ~FX:SunRays:RightCorner 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80228DC8
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228DD8
{
    ~Model:sbk_bt02:o322
    ~Model:sbk_bt02:o321
    ~Model:sbk_bt02:o320
    ~Model:sbk_bt02:o319
    00000000
}

#new:Stage $Stage_80228DEC
{
    $ASCII_8022AC78  % sbk_tex
    $ASCII_8022AC68  % sbk_bt02_shape
    $ASCII_8022AC58  % sbk_bt02_hit
    $Script_BeforeBattle_80228CE0
    $Script_AfterBattle_80228DC8
    $ASCII_8022AC50  % sbk_bg
    $ForegroundModelList_80228DD8
    00000000
    00000000
    00000000
}

PADDING: 80228E14 to 80228E20 (006EEBD4 to 006EEBE0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80228E20
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetTexPanner      ( ~Model:omo_bt04:o409 0000000A )
    Thread
        Set   *Var[E]  00000000
        Loop
            Add   *Var[E]  00008000
            Call  SetTexPanOffset   ( 0000000A 00000000 *Var[E] 00000000 )
            Wait  10`
        EndLoop
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80228EDC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80228EEC
{
    ~Model:omo_bt04:itigo
    ~Model:omo_bt04:kisya
    ~Model:omo_bt04:kusari
    00000000
}

#new:Stage $Stage_80228EFC
{
    $ASCII_8022ACA8  % omo_tex
    $ASCII_8022AC98  % omo_bt04_shape
    $ASCII_8022AC88  % omo_bt04_hit
    $Script_BeforeBattle_80228E20
    $Script_AfterBattle_80228EDC
    $ASCII_8022AC80  % omo_bg
    $ForegroundModelList_80228EEC
    00000004
    $SpecialFormation_80228F54
    00000000
}

#new:Vector3D $Vector3D_80228F24
{
    -49` 56` -68`
}

#new:Vector3D $Vector3D_80228F30
{
    -13` 56` -68`
}

#new:Vector3D $Vector3D_80228F3C
{
    20` 56` -68`
}

#new:Vector3D $Vector3D_80228F48
{
    53` 56` -68`
}

#new:SpecialFormation $SpecialFormation_80228F54
{
    $SlotMachineStart $Vector3D_80228F24 00000000 00000000 00000000 00000000 00000000
    $SlotMachineStop $Vector3D_80228F30 00000000 00000001 00000000 00000000 00000000
    $SlotMachineStop $Vector3D_80228F3C 00000000 00000002 00000000 00000000 00000000
    $SlotMachineStop $Vector3D_80228F48 00000000 00000003 00000000 00000000 00000000
}

#new:IntTable $IntTable_80228FC4
{
    00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:IntTable $IntTable_80228FE4
{
    00000000 00000001 00000000 00000002 00000001 00000002 00000000 00000002
}

#new:IntTable $IntTable_80229004
{
    00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:DefenseTable $DefenseTable_80229024
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80229030
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802290DC
{
    00800000 01000000 000000FF 00000000 $DefenseTable_80229024 00000000 00000000 00000000 00000000
}

#new:Actor $SlotMachineStop
{
    % stats
    [Index]        CFb
    [Level]        99`b
    [MaxHP]        99`b
    [Coins]         0`b
    [Flags]       00244005
    [StatusTable] $StatusTable_80229030
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802290DC
    [Script]      $Script_Init_80229150
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]   0`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         44`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Actor $SlotMachineStart
{
    % stats
    [Index]        CEb
    [Level]        99`b
    [MaxHP]        99`b
    [Coins]         0`b
    [Flags]       00244005
    [StatusTable] $StatusTable_80229030
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802290DC
    [Script]      $Script_Init_80229150
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]   0`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         44`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80229150
{
    UseArray  $End[10]
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022A598 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_802292E8 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80229E44 )
    Set   *Array[1]  00000000
    Set   *Array[2]  00000000
    Set   *Array[3]  00000000
    Set   *Array[4]  00000000
    Call  RandInt   ( 00000008 *Var[0] )
    Mul   *Var[0]  0000002D
    Set   *Array[5]  *Var[0]
    Call  RandInt   ( 00000008 *Var[0] )
    Mul   *Var[0]  0000002D
    Set   *Array[6]  *Var[0]
    Call  RandInt   ( 00000008 *Var[0] )
    Mul   *Var[0]  0000002D
    Set   *Array[7]  *Var[0]
    Call  $Function_802185E0 ( )
    If  *Var[0]  ==  00000001
        Set   *Array[1]  00000001
        Set   *Array[2]  00000001
        Set   *Array[3]  00000001
        Set   *Array[4]  00000001
    EndIf
    Return
    End
}

#new:Script $Script_Idle_802292E8
{
    UseArray  $End[10]
    Call  EnableTexPanning  ( 0000002D .True )
    Set   *Var[E]  00000000
    Set   *Var[F]  00000000
    Label  0
    Call  GetActorVar       ( .Actor:Self 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  00000001
            Switch  *Array[2]
                Case  ==  00000000
                Case  ==  00000001
                    Add   *Array[5]  00000005
                Case  ==  00000002
                    If  *Array[8]  >  00000000
                        Add   *Array[5]  00000005
                        Sub   *Array[8]  00000005
                        BreakCase
                    EndIf
                    Set   *Var[0]  *Array[5]
                    Mod   *Var[0]  0000002D
                    If  *Var[0]  !=  00000000
                        Add   *Array[5]  00000005
                    Else
                        Set   *Array[2]  00000003
                    EndIf
            EndSwitch
            Call  RotateModel   ( 00000020 *Array[5] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000021 *Array[5] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000022 *Array[5] 00000001 00000000 00000000 )
        Case  ==  00000002
            Switch  *Array[3]
                Case  ==  00000000
                Case  ==  00000001
                    Add   *Array[6]  00000005
                Case  ==  00000002
                    If  *Array[9]  >  00000000
                        Add   *Array[6]  00000005
                        Sub   *Array[9]  00000005
                        BreakCase
                    EndIf
                    Set   *Var[0]  *Array[6]
                    Mod   *Var[0]  0000002D
                    If  *Var[0]  !=  00000000
                        Add   *Array[6]  00000005
                    Else
                        Set   *Array[3]  00000003
                    EndIf
            EndSwitch
            Call  RotateModel   ( 00000024 *Array[6] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000025 *Array[6] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000026 *Array[6] 00000001 00000000 00000000 )
        Case  ==  00000003
            Switch  *Array[4]
                Case  ==  00000000
                Case  ==  00000001
                    Add   *Array[7]  00000005
                Case  ==  00000002
                    If  *Array[A]  >  00000000
                        Add   *Array[7]  00000005
                        Sub   *Array[A]  00000005
                        BreakCase
                    EndIf
                    Set   *Var[0]  *Array[7]
                    Mod   *Var[0]  0000002D
                    If  *Var[0]  !=  00000000
                        Add   *Array[7]  00000005
                    Else
                        Set   *Array[4]  00000003
                    EndIf
            EndSwitch
            Call  RotateModel   ( 00000028 *Array[7] 00000001 00000000 00000000 )
            Call  RotateModel   ( 00000029 *Array[7] 00000001 00000000 00000000 )
            Call  RotateModel   ( 0000002A *Array[7] 00000001 00000000 00000000 )
    EndSwitch
    If  *Array[5]  >=  00000168
        Sub   *Array[5]  00000168
    EndIf
    If  *Array[6]  >=  00000168
        Sub   *Array[6]  00000168
    EndIf
    If  *Array[7]  >=  00000168
        Sub   *Array[7]  00000168
    EndIf
    If  *Array[1]  ==  00000000
        Add   *Var[F]  FFFFFEEB
        Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *Var[F] )
    EndIf
    If  *Array[1]  ==  00000001
        Add   *Var[F]  FFFFFBAA
        Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *Var[F] )
    EndIf
    If  *Array[1]  ==  00000002
        Add   *Var[F]  FFFFF2FE
        Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *Var[F] )
    EndIf
    If  *Array[1]  ==  00000002
        Goto  1
    EndIf
    If  *Array[1]  ==  00000000
        Goto  1
    EndIf
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  !=  00000000
        Goto  1
    EndIf
    Set   *Var[0]  *Array[2]
    Add   *Var[0]  *Array[3]
    Add   *Var[0]  *Array[4]
    If  *Var[0]  ==  00000009
        Set   *Var[0]  *Array[5]
        Div   *Var[0]  0000002D
        UseIntBuffer  $IntTable_80228FC4
        GetIntN  *Var[A] *Var[0]
        Set   *Var[0]  *Array[6]
        Div   *Var[0]  0000002D
        UseIntBuffer  $IntTable_80228FE4
        GetIntN  *Var[B] *Var[0]
        Set   *Var[0]  *Array[7]
        Div   *Var[0]  0000002D
        UseIntBuffer  $IntTable_80229004
        GetIntN  *Var[C] *Var[0]
        Loop
            If  *Var[A]  !=  *Var[B]
                BreakLoop
            EndIf
            If  *Var[A]  !=  *Var[C]
                BreakLoop
            EndIf
            If  *Var[B]  !=  *Var[C]
                BreakLoop
            EndIf
            Thread
                Call  8026BF48  ( 00000001 )
                Call  UseCamPreset      ( 00000013 )
                Call  SetBattleCamTarget    ( 00000000 00000064 00000000 )
                Call  SetBattleCamOffsetZ   ( 00000000 )
                Call  SetBattleCamZoom  ( 00000154 )
                Call  MoveBattleCamOver ( 0000000A )
                Switch  *Var[A]
                    Case  ==  00000000
                        Loop  0000000A
                            Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  10`
                        EndLoop
                    Case  ==  00000001
                        Loop  0000000A
                            Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  10`
                        EndLoop
                    Case  ==  00000002
                        Loop  0000000A
                            Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  1`
                            Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
                            Call  $Function_80218608 ( )
                            Wait  10`
                        EndLoop
                EndSwitch
                Set   *Array[1]  00000000
                Set   *Array[2]  00000000
                Set   *Array[3]  00000000
                Set   *Array[4]  00000000
                Call  8026BF48  ( 00000000 )
            EndThread
            Set   *Array[1]  00000002
            BreakLoop
        EndLoop
    EndIf
    Label  1
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_HandleEvent_80229E44
{
    UseArray  $End[10]
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:ShockHit % 2F
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000 % 0
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001C 00000000 00000000 00000000 )
                    Set   *Array[1]  00000001
                    Set   *Array[2]  00000001
                    Set   *Array[3]  00000001
                    Set   *Array[4]  00000001
                Case  ==  00000001 % 1
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
                    If  *Array[2]  ==  00000001
                        Set   *Array[8]  00000064
                        Set   *Array[9]  00000096
                        Set   *Array[A]  000000C8
                        Set   *Array[2]  00000002
                        Set   *Array[3]  00000002
                        Set   *Array[4]  00000002
                    EndIf
                Case  ==  00000002 % 2
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
                    If  *Array[3]  ==  00000001
                        Set   *Array[8]  00000096
                        Set   *Array[9]  00000064
                        Set   *Array[A]  000000C8
                        Set   *Array[2]  00000002
                        Set   *Array[3]  00000002
                        Set   *Array[4]  00000002
                    EndIf
                Case  ==  00000003 % 3
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
                    Wait  4`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
                    Wait  1`
                    Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
                    If  *Array[4]  ==  00000001
                        Set   *Array[8]  000000C8
                        Set   *Array[9]  00000096
                        Set   *Array[A]  00000064
                        Set   *Array[2]  00000002
                        Set   *Array[3]  00000002
                        Set   *Array[4]  00000002
                    EndIf
            EndSwitch
        EndCaseGroup
        CaseOR  ==  .Event:BurnDeath % 24
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:ShockDeath % 26
        CaseOR  ==  .Event:Death % 20
        CaseOR  ==  .Event:SpinSmashDeath % 21
        CaseOR  ==  .Event:SpikeContact % 2A
        CaseOR  ==  .Event:BurnContact % 2C
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        EndCaseGroup
    EndSwitch
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022A598
{
    UseArray  $End[10]
    Return
    End
}

PADDING: 8022A5B4 to 8022A5C0 (006F0374 to 006F0380)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022A5C0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Return
    End
}

#new:Script $Script_AfterBattle_8022A5E0
{
    Return
    End
}

#new:Stage $Stage_8022A5F0
{
    $ASCII_8022ACD0  % dgb_tex
    $ASCII_8022ACC0  % dgb_bt05_shape
    $ASCII_8022ACB0  % dgb_bt05_hit
    $Script_BeforeBattle_8022A5C0
    $Script_AfterBattle_8022A5E0
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022A618 to 8022A620 (006F03D8 to 006F03E0)
00000000 00000000

#new:Formation $Formation_00
{
    $Fuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
    $Fuzzy 00000001 00000009 00000000 00000000 00000000 00000000
    $Fuzzy 00000002 00000008 00000000 00000000 00000000 00000000
    $Fuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000
    $MontyMole 00000002 00000009 00000000 00000000 00000000 00000000
    $MontyMole 00000003 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
    $BanditA 00000002 00000009 00000000 00000000 00000000 00000000
    $Pokey 00000003 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $ShyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
    $ShyGuy 00000001 00000009 00000000 00000000 00000000 00000000
    $ShyGuy 00000002 00000008 00000000 00000000 00000000 00000000
    $ShyGuy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $TubbaBlubba 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8022AD28 00000004 $Formation_00 $Stage_80228B58 $Script_8022A870 % unused
    $SJIS_8022AD14 00000003 $Formation_01 $Stage_80228BD0 $Script_8022A910 % unused
    $SJIS_8022AD00 00000003 $Formation_02 $Stage_80228DEC $Script_8022A9F0 % unused
    $SJIS_8022ACEC 00000004 $Formation_03 $Stage_80228EFC $Script_8022AAA0 % unused
    $SJIS_8022ACD8 00000001 $Formation_04 $Stage_8022A5F0 $Script_8022AB40 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_8022AD5C $Stage_80228B58
    $ASCII_8022AD54 $Stage_80228BD0
    $ASCII_8022AD4C $Stage_80228DEC
    $ASCII_8022AD44 $Stage_80228EFC
    $ASCII_8022AD3C $Stage_8022A5F0
    00000000 00000000
}

PADDING: 8022A86C to 8022A870 (006F062C to 006F0630)
00000000

#new:Script $Script_8022A870
{
    Wait  3`
    Call  SetCamViewport    ( .Cam:Battle 0000001D 00000014 00000106 000000B1 )
    Call  802535B4  ( 00000000 )
    Set   *Var[0]  0000000F
    Call  $Function_80218630 ( )
    Call  8026E198  ( 0000000D )
    Call  $Function_80218644 ( )
    Call  8026E16C  ( 00000012 )
    Wait  00002710
    Return
    End
}

#new:Script $Script_8022A910
{
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000001 )
    Wait  3`
    Call  SetCamViewport    ( .Cam:Battle 0000001D 00000014 00000106 000000B1 )
    Call  802535B4      ( 00000000 )
    Call  8026E198      ( 0000000D )
    Call  $Function_802186E0 ( )
    Call  8026E16C      ( 00000012 )
    Wait  130`
    Loop  0000001E
        Call  8026939C  ( 00000000 )
        Wait  1`
    EndLoop
    Return
    End
}

PADDING: 8022A9E4 to 8022A9F0 (006F07A4 to 006F07B0)
00000000 00000000 00000000

#new:Script $Script_8022A9F0
{
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000001 )
    Wait  3`
    Call  SetCamViewport    ( .Cam:Battle 0000001D 00000014 00000106 000000B1 )
    Call  802535B4      ( 00000000 )
    Call  8026E198      ( 0000000D )
    Call  $Function_80218770 ( )
    Call  8026E16C      ( 00000013 )
    Wait  90`
    Return
    End
}

PADDING: 8022AA94 to 8022AAA0 (006F0854 to 006F0860)
00000000 00000000 00000000

#new:Script $Script_8022AAA0
{
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000001 )
    Wait  3`
    Call  SetCamViewport    ( .Cam:Battle 0000001D 00000014 00000106 000000B1 )
    Call  802535B4      ( 00000000 )
    Call  8026E198      ( 0000000D )
    Call  $Function_802187F0 ( )
    Call  8026E16C      ( 00000012 )
    Return
    End
}

PADDING: 8022AB38 to 8022AB40 (006F08F8 to 006F0900)
00000000 00000000

#new:Script $Script_8022AB40
{
    Call  UseCamPreset  ( 00000002 )
    Call  MoveBattleCamOver ( 00000001 )
    Wait  3`
    Call  SetCamViewport    ( .Cam:Battle 0000001D 00000014 00000106 000000B1 )
    Call  802535B4      ( 00000000 )
    Set   *Var[0]  00000005
    Call  $Function_80218890 ( )
    Call  8026E198      ( 0000000D )
    Call  8026E16C      ( 00000014 )
    Return
    End
}

PADDING: 8022ABE8 to 8022ABF0 (006F09A8 to 006F09B0)
00000000 00000000

#new:ASCII $ASCII_8022ABF0
{
    "nok_bg"
}

#new:ASCII $ASCII_8022ABF8
{
    "nok_bt04_hit"
}

#new:ASCII $ASCII_8022AC08
{
    "nok_bt04_shape"
}

#new:ASCII $ASCII_8022AC18
{
    "nok_tex"
}

#new:ASCII $ASCII_8022AC20
{
    "iwa_bg"
}

#new:ASCII $ASCII_8022AC28
{
    "iwa_bt01_hit"
}

#new:ASCII $ASCII_8022AC38
{
    "iwa_bt01_shape"
}

#new:ASCII $ASCII_8022AC48
{
    "iwa_tex"
}

#new:ASCII $ASCII_8022AC50
{
    "sbk_bg"
}

#new:ASCII $ASCII_8022AC58
{
    "sbk_bt02_hit"
}

#new:ASCII $ASCII_8022AC68
{
    "sbk_bt02_shape"
}

#new:ASCII $ASCII_8022AC78
{
    "sbk_tex"
}

#new:ASCII $ASCII_8022AC80
{
    "omo_bg"
}

#new:ASCII $ASCII_8022AC88
{
    "omo_bt04_hit"
}

#new:ASCII $ASCII_8022AC98
{
    "omo_bt04_shape"
}

#new:ASCII $ASCII_8022ACA8
{
    "omo_tex"
}

#new:ASCII $ASCII_8022ACB0
{
    "dgb_bt05_hit"
}

#new:ASCII $ASCII_8022ACC0
{
    "dgb_bt05_shape"
}

#new:ASCII $ASCII_8022ACD0
{
    "dgb_tex"
}

#new:SJIS $SJIS_8022ACD8
{
    ダイジェスト０５ % daijyesuto05
}

#new:SJIS $SJIS_8022ACEC
{
    ダイジェスト０４ % daijyesuto04
}

#new:SJIS $SJIS_8022AD00
{
    ダイジェスト０３ % daijyesuto03
}

#new:SJIS $SJIS_8022AD14
{
    ダイジェスト０２ % daijyesuto02
}

#new:SJIS $SJIS_8022AD28
{
    ダイジェスト０１ % daijyesuto01
}

#new:ASCII $ASCII_8022AD3C
{
    "dig_05"
}

#new:ASCII $ASCII_8022AD44
{
    "dig_04"
}

#new:ASCII $ASCII_8022AD4C
{
    "dig_03"
}

#new:ASCII $ASCII_8022AD54
{
    "dig_02"
}

#new:ASCII $ASCII_8022AD5C
{
    "dig_01"
}

PADDING: 8022AD64 to 8022AD70 (006F0B24 to 006F0B30)
00000000 00000000 00000000

