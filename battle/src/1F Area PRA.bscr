% Script File: 1F Area PRA.bscr
% Decoded from: 648E10 to 660750 (1F Area PRA)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802180CC
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218180
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	COPY      A3, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218234 to 80218240 (00649044 to 00649050)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80218240
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        V1, C (S2)
	SWC1      F22, 38 (V1)
	LW        V1, C (S2)
	SWC1      F20, 3C (V1)
	LW        V1, C (S2)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 40 (V1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HINT
#new:Function $Function_80218300
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218458
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218484
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218550
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_802185A8
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 8021866C to 80218670 (0064947C to 00649480)
00000000

% Origin: HINT
#new:Function $Function_80218670
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_802187C8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_802187F4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_802188C0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218918
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 802189DC to 802189E0 (006497EC to 006497F0)
00000000

#new:Function $Function_802189E0
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80218B38
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80218B64
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80218C30
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218C88
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80218D4C to 80218D50 (00649B5C to 00649B60)
00000000

% Origin: HINT
#new:Function $Function_80218D50
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218EA8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218ED4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218FA0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218FF8
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 802190BC to 802190C0 (00649ECC to 00649ED0)
00000000

#new:Function $Function_802190C0
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_80219218
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80219244
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80219310
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80219368
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021942C
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        S2, 18 (SP)
	LIA       S2, 8010F290
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LB        A2, 0 (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	LB        A2, 1 (S2)
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8021948C
{
	ADDIU     SP, SP, FFD8
	SW        S3, 1C (SP)
	COPY      S3, A0
	SW        RA, 20 (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S3)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      S1, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S3
	COPY      S2, V0
	ADDIU     V0, R0, FF81
	BNE       S1, V0, .o54
	NOP
	LW        S1, 148 (S3)
	.o54
	JAL       ~Func:get_actor
	COPY      A0, S1
	COPY      A0, V0
	JAL       ~Func:get_actor_part
	COPY      A1, S2
	LW        A0, 78 (V0)
	JAL       ~Func:lookup_defense
	ADDIU     A1, R0, 1
	COPY      A0, S3
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80219530
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021953C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      60`
    .Status:Poison     60`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   80`
    .Status:Shrink     75`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802195E8
{
    00800000 01000000 001D00FF $IdleAnimations_80219634 $DefenseTable_80219530 00000000 00000000 010F0000 00000000
}

#new:Actor $Swoopula
{
    % stats
    [Index]        3Ab
    [Level]        22`b
    [MaxHP]         8`b
    [Coins]         1`b
    [Flags]       00000800
    [StatusTable] $StatusTable_8021953C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802195E8
    [Script]      $Script_Init_802196CC
    % move effectiveness
    [Escape]       30`b
    [Item]         70`b
    [AirLift]      95`b
    [Hurricane]    95`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         31`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b -20`b % dx dy
    [StatusIcon]   10`b -20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219634
{
    .Status:Normal    0034010C
    .Status:Stone     0034010B
    .Status:Sleep     0034010F
    .Status:Poison    0034010C
    .Status:Stop      0034010B
    .Status:Static    0034010C
    .Status:Paralyze  0034010B
    .Status:Dizzy     00340110
    .Status:Fear      00340110
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80219680
{
    .Status:Normal    00340102
    .Status:Stone     00340101
    .Status:Sleep     00340113
    .Status:Poison    00340102
    .Status:Stop      00340101
    .Status:Static    00340102
    .Status:Paralyze  00340101
    .Status:Dizzy     00340114
    .Status:Fear      00340114
    .Status:End
}

#new:Script $Script_Init_802196CC
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C484 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80219730 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A0E4 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80219730
{
    Return
    End
}

#new:Script $Script_80219740
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000000 FFFFFFE8 00000000 )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
            Call  SetActorFlagBits  ( .Actor:Self 00000800 .True )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219634 )
            Call  SetAnimation  ( .Actor:Self 00000001 0034010C )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000018
            Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  00000001
            Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetGoalToHome ( .Actor:Self )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    EndSwitch
    Return
    End
}

#new:Script $Script_80219900
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340117
            SetConst  *Var[2]  00340118
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340117
            SetConst  *Var[2]  00340118
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340118
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoShockHit
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_80219740
        Case  ==  .Event:ShockDeath % 26
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoShockHit
            Thread
                Wait  30`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340102
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340102
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340102
            SetConst  *Var[2]  00340115
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340102
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoBlowAway
            Return
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_80219D84
{
    Call  8027D32C      ( FFFFFF81 )
    Call  GetLastDamage ( .Actor:Self *Var[0] )
    If  *Var[0]  <=  00000000
        Return
    EndIf
    Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  FFFFFFFF
        Call  SetHomePos    ( .Actor:Self *Var[0] 0000002D *Var[2] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalToHome ( .Actor:Self )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
    Else
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] 0000002D *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .False .False )
        Call  GetIndexFromPos       ( .Actor:Self *Var[A] )
        Mod   *Var[A]  00000004
        Add   *Var[A]  00000004
        Call  SetGoalToIndex        ( .Actor:Self *Var[A] )
        Call  GetGoalPos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
        Call  SetHomePos    ( .Actor:Self *Var[A] *Var[B] *Var[C] )
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalToHome ( .Actor:Self )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
    EndIf
    Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
    Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000016 )
    Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219680 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021A0E4
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_80219900
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340115
                ExecWait  DoNormalHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0034010E
                ExecWait  DoNormalHit
            EndIf
        Case  ==  .Event:Hit % A
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340115
                ExecWait  DoNormalHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0034010E
                ExecWait  DoNormalHit
                ExecWait  $Script_80219D84
            EndIf
        Case  ==  .Event:BurnHit % E
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340117
                SetConst  *Var[2]  00340118
                ExecWait  DoBurnHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340111
                SetConst  *Var[2]  00340112
                ExecWait  DoBurnHit
                ExecWait  $Script_80219D84
            EndIf
        Case  ==  .Event:BurnDeath % 24
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340117
                SetConst  *Var[2]  00340118
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340118
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340111
                SetConst  *Var[2]  00340112
                ExecWait  DoBurnHit
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340112
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:ShockHit % 2F
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  8029A76C
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_80219740
        Case  ==  .Event:ShockDeath % 26
            Call  80269470 ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  8029A76C
            Thread
                Wait  30`
                Call  UseCamPreset  ( 00000002 )
            EndThread
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340115
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0034010C
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340115
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00340115
                ExecWait  DoDeath
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0034010E
                ExecWait  DoNormalHit
                Wait  10`
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0034010E
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219680 )
            Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_80219740
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits      ( .Actor:Self 00000200 .True )
            Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE8 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00340102
            SetConst  *Var[2]  00340115
            ExecWait  DoScareAway
            Return
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A864
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Else
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
        Call  SetGoalToTarget       ( .Actor:Self )
        Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
        Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000032
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
            Wait  15`
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80219740
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000
                Set   *Flag[00]  .False
            Else
                Set   *Flag[00]  .True
            EndIf
    EndSwitch
    Wait  10`
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .False .False )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self FFFFFFFC FFFFFFF8 FFFFFFF1 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    If  *Flag[00]  ==  .True
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 % 100000
        Wait  10`
        Loop  00000002
            Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
            Wait  21`
            Loop  00000002
                Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
                Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Wait  1`
            EndLoop
            Wait  5`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Wait  2`
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Wait  10`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
            Wait  30`
        EndLoop
    Else
        Call  ShowMessageBox    ( 00000031 00007FFF )
        Call  802694A4  ( 00000001 )
        Call  LoadActionCommand ( 00000006 )
        Call  802A9000 ( )
        Call  802691C8  ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  SetBattleFlagBits ( 00004000 .False )
        Call  802A9110  ( 00000000 00007FFF 00000003 )
        Set   *Var[D]  00000000
        Loop  00000005
            Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
            Set   *Flag[00]  .False
            Loop  00000015
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
            Loop  00000002
                Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
                Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
                Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Set   *Flag[00]  .False
                Loop  00000001
                    Call  GetActionSuccessCopy  ( *Var[1] )
                    If  *Var[1]  ==  00000001
                        Set   *Flag[00]  .True
                        BreakLoop
                    EndIf
                    Wait  1`
                EndLoop
                If  *Flag[00]  ==  .True
                    Call  UseIdleAnimation  ( .Actor:Player .True )
                    BreakLoop
                EndIf
            EndLoop
            If  *Flag[00]  ==  .True
                BreakLoop
            EndIf
            Set   *Flag[00]  .False
            Loop  00000005
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000002
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  0000000A
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000002
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  UseIdleAnimation  ( .Actor:Player .True )
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
            Call  GetLastDamage     ( .Actor:Player *Var[3] )
            If  *Var[3]  !=  00000000
                Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
                Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000F
                Call  $Function_802180CC    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Thread
                    Wait  15`
                    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                    Call  $Function_80218180    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                EndThread
                Add   *Var[0]  00000014
                Add   *Var[1]  00000014
                Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                Add   *Var[0]  *Var[3]
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            Else
                Add   *Var[D]  00000001
                If  *Var[D]  >  00000001
                    Call  80269470 ( )
                    BreakLoop
                EndIf
            EndIf
            Call  GetPlayerHP   ( *Var[1] )
            If  *Var[1]  ==  00000000
                Call  80269470 ( )
                BreakLoop
            EndIf
            Set   *Flag[00]  .False
            Loop  0000001E
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                BreakLoop
            EndIf
        EndLoop
        Call  80269470 ( )
        Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  UseCamPreset  ( 00000002 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 00000032 0000000A 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    Wait  10`
    Call  YieldTurn ( )
    ExecWait  $Script_80219740
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021C484
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_8021A864
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
    Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[1]  00000018
    Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Wait  10`
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  AddGoalPos    ( .Actor:Self FFFFFFCE 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
            Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
            Wait  15`
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  YieldTurn ( )
            Call  UseCamPreset      ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80219740
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00002000
                Set   *Flag[00]  .False
            Else
                Set   *Flag[00]  .True
            EndIf
    EndSwitch
    Wait  10`
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
    Call  SetGoalToTarget       ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self FFFFFFFC FFFFFFF8 FFFFFFF1 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
    Call  FlyToGoal     ( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
    If  *Flag[00]  ==  .True
        Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
        Return
    EndIf
    Call  GetStatusFlags    ( .Actor:Player *Var[0] )
    If  *Var[0]  &  00100000 % 100000
        Wait  10`
        Loop  00000002
            Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
            Wait  21`
            Loop  00000002
                Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
                Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
                Wait  1`
                Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
                Wait  1`
            EndLoop
            Wait  5`
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Wait  2`
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Wait  10`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  2`
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
            Wait  30`
        EndLoop
    Else
        Call  ShowMessageBox    ( 00000031 00007FFF )
        Call  802694A4  ( 00000001 )
        Call  LoadActionCommand ( 00000006 )
        Call  802A9000 ( )
        Call  802691C8  ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
        Wait  10`
        Call  SetBattleFlagBits ( 00004000 .False )
        Call  802A9110  ( 00000000 00007FFF 00000003 )
        Set   *Var[D]  00000000
        Loop  00000005
            Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
            Set   *Flag[00]  .False
            Loop  00000015
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
            Call  UseIdleAnimation  ( .Actor:Player .False )
            Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
            Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000001
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000002
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  0000000A
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Set   *Flag[00]  .False
            Loop  00000002
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                Call  UseIdleAnimation  ( .Actor:Player .True )
                BreakLoop
            EndIf
            Call  UseIdleAnimation  ( .Actor:Player .True )
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
            Call  GetLastDamage     ( .Actor:Player *Var[3] )
            If  *Var[3]  !=  00000000
                Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
                Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  0000000F
                Call  $Function_802180CC    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                Thread
                    Wait  15`
                    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
                    Call  $Function_80218180    ( *Var[0] *Var[1] *Var[2] *Var[3] )
                EndThread
                Add   *Var[0]  00000014
                Add   *Var[1]  00000014
                Call  PlayEffect    ( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Call  GetActorHP    ( .Actor:Self *Var[0] )
                Add   *Var[0]  *Var[3]
                Call  SetEnemyHP    ( .Actor:Self *Var[0] )
            Else
                Add   *Var[D]  00000001
                If  *Var[D]  >  00000001
                    Call  80269470 ( )
                    BreakLoop
                EndIf
            EndIf
            Call  GetPlayerHP   ( *Var[1] )
            If  *Var[1]  ==  00000000
                Call  80269470 ( )
                BreakLoop
            EndIf
            Set   *Flag[00]  .False
            Loop  00000023
                Call  GetActionSuccessCopy  ( *Var[1] )
                If  *Var[1]  ==  00000001
                    Set   *Flag[00]  .True
                    BreakLoop
                EndIf
                Wait  1`
            EndLoop
            If  *Flag[00]  ==  .True
                BreakLoop
            EndIf
        EndLoop
        Call  80269470 ( )
        Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    EndIf
    Call  UseCamPreset      ( 00000002 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
    Wait  10`
    Call  YieldTurn ( )
    ExecWait  $Script_80219740
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021D804 to 8021D810 (0064E614 to 0064E620)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021D810
{
    .Status:Normal    004F0003
    .Status:Stone     004F0000
    .Status:Sleep     004F0003
    .Status:Poison    004F0003
    .Status:Stop      004F0000
    .Status:Static    004F0003
    .Status:Paralyze  004F0000
    .Status:Dizzy     004F0000
    .Status:Fear      004F0000
    .Status:End
}

#new:DefenseTable $DefenseTable_8021D85C
{
    .Element:Normal 00000004
    .Element:Fire   00000063
    .Element:End
}

#new:StatusTable $StatusTable_8021D870
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink     75`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod     -1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod     -1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021D91C
{
    00800000 01000000 F72E00FF $IdleAnimations_8021D810 $DefenseTable_8021D85C 00000000 00000000 FAEF0000 00000000
}

#new:Actor $AlbinoDino
{
    % stats
    [Index]        44b
    [Level]        23`b
    [MaxHP]         8`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021D870
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021D91C
    [Script]      $Script_Init_8021D968
    % move effectiveness
    [Escape]       40`b
    [Item]         25`b
    [AirLift]      15`b
    [Hurricane]    10`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         64`b  56`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -22`b  24`b % dx dy
    [StatusIcon]   11`b  40`b % dx dy
}

#new:Script $Script_Init_8021D968
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E070 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021D9B4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DA40 )
    Return
    End
}

#new:Script $Script_Idle_8021D9B4
{
    Return
    End
}

#new:Script $Script_8021D9C4
{
    Call  SetAnimation  ( .Actor:Self 00000001 004F0005 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 004F0003 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021DA40
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F000A
            SetConst  *Var[2]  004F000B
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F000A
            SetConst  *Var[2]  004F000B
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F000B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoJumpBack
            ExecWait  $Script_8021D9C4
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0009
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0003
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoNormalHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0009
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0003
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0005
            SetConst  *Var[2]  004F0008
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0005
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  004F0008
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021DF24
{
    Set   *Var[A]  00000000
    Label  0
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetActorYaw   ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  00000000
        Add   *Var[0]  00000014
    Else
        Add   *Var[0]  FFFFFFEC
    EndIf
    Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000019 00000008 0000002D 00000014 00000000 00000000 00000000 00000000 00000000 )
    If  *Var[A]  >  00000003
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.2] )
        Set   *Var[A]  00000000
    EndIf
    Add   *Var[A]  00000001
    Wait  2`
    Goto  0
    Return
    End
}

#new:Script $Script_TakeTurn_8021E070
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Exec  $Script_8021DF24 *Var[9]
    Thread
        Loop  00000003
            Call  PlaySoundAtActor  ( .Actor:Self 0000030B )
            Wait  4`
            Call  PlaySoundAtActor  ( .Actor:Self 000002FD )
            Wait  4`
        EndLoop
    EndThread
    Call  SetAnimation      ( .Actor:Self 00000001 004F0005 )
    Wait  20`
    Call  EnemyTestTarget   ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Thread
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  AddGoalPos    ( .Actor:Self FFFFFF9C 00000000 00000000 )
                Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
                Call  RunToGoal     ( .Actor:Self 00000000 .False )
                Kill  *Var[9]
            EndThread
            Call  UseCamPreset  ( 00000002 )
            Wait  30`
            If  *Var[F]  ==  .HitResult:Lucky % 5
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  40`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021D9C4
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Call  AddGoalPos    ( .Actor:Self 0000000C 00000000 00000000 )
    Else
        Call  AddGoalPos    ( .Actor:Self 0000001E 00000000 00000000 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000004 *Fixed[1.5] )
    EndThread
    Kill  *Var[9]
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[F] ~Flags:DamageType:0 00000000 00000018 00000004 00000020 )
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000002FD )
            Call  SetAnimation  ( .Actor:Self 00000001 004F0003 )
            Call  ShakeCam      ( .Cam:Battle 00000000 00000003 *Fixed[1.0] )
            Wait  10`
            Call  YieldTurn ( )
            ExecWait  $Script_8021D9C4
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021E5E8 to 8021E5F0 (0064F3F8 to 0064F400)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8021E5F0
{
    .Status:Normal    003A0101
    .Status:Stone     003A0100
    .Status:Sleep     003A0103
    .Status:Poison    003A0101
    .Status:Stop      003A0100
    .Status:Static    003A0101
    .Status:Paralyze  003A0100
    .Status:Dizzy     003A0105
    .Status:Fear      003A0105
    .Status:End
}

#new:DefenseTable $DefenseTable_8021E63C
{
    .Element:Normal 00000000
    .Element:Fire   FFFFFFFE
    .Element:Ice    00000063
    .Element:End
}

#new:StatusTable $StatusTable_8021E658
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear      100`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     75`
    .Status:Stop       80`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021E704
{
    00800000 01000000 F42000FF $IdleAnimations_8021E5F0 $DefenseTable_8021E63C 00000008 00000000 08FD0000 00000000
}

#new:Actor $WhiteClubba
{
    % stats
    [Index]        38b
    [Level]        23`b
    [MaxHP]        12`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021E658
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021E704
    [Script]      $Script_Init_8021E750
    % move effectiveness
    [Escape]       50`b
    [Item]         50`b
    [AirLift]      50`b
    [Hurricane]    60`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         42`b  42`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_8021E750
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021ECBC )
    Call  BindIdle  ( .Actor:Self $Script_Idle_8021E79C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E7AC )
    Return
    End
}

#new:Script $Script_Idle_8021E79C
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021E7AC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0106
            SetConst  *Var[2]  003A0107
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0106
            SetConst  *Var[2]  003A0107
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0107
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoJumpBack
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            ExecWait  DoReturnHome
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            SetConst  *Var[2]  003A0104
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021ECBC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B
        Set   *Var[1]  00000000
        Sub   *Var[2]  00000006
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Wait  15`
    Else
        Call  SetAnimation      ( .Actor:Self 00000001 003A0102 )
        Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetStatusFlags    ( .Actor:Self *Var[0] )
        If  *Var[0]  !&  00080000
            Call  AddGoalPos    ( .Actor:Self 0000001B 00000000 FFFFFFFA )
        Else
            Call  AddGoalPos    ( .Actor:Self 0000000A 00000000 FFFFFFFA )
        EndIf
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 003A0101 )
        Wait  10`
    EndIf
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
            Call  SetAnimation      ( .Actor:Self 00000001 003A0108 )
            Wait  20`
            If  *Var[0]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
                Wait  20`
            EndIf
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Goto  28
    EndIf
    Call  GetActorHP    ( .Actor:Self *Var[0] )
    Call  GetEnemyMaxHP ( .Actor:Self *Var[1] )
    MulF  *Var[0]  *Fixed[100.0]
    DivF  *Var[0]  *Var[1]
    If  *Var[0]  <  0000001E
        Goto  32
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000019
        Goto  32
    EndIf
    Label  28
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Goto  64
    Label  32
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000010 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Call  GetActorHP    ( .Actor:Player *Var[0] )
    If  *Var[0]  ==  .HitResult:Hit % 0
        Goto  64
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Call  GetActorHP    ( .Actor:Player *Var[0] )
    If  *Var[0]  ==  .HitResult:Hit % 0
        Goto  64
    EndIf
    Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
    Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
    Wait  2`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.5] )
    EndThread
    Label  64
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  19`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  003A0102
            ExecWait  DoReturnHome
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021F5DC to 8021F5E0 (006503EC to 006503F0)
00000000

#new:DefenseTable $DefenseTable_8021F5E0
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8021F5EC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021F5F8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8021F6A4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021F750
{
    00800000 01000000 022300FF $IdleAnimations_8021F830 $DefenseTable_8021F5E0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8021F774
{
    00020001 01000000 022300FF $IdleAnimations_8021F830 $DefenseTable_8021F5EC 00800000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8021F87C $DefenseTable_8021F5EC 00000000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_8021F8C8 $DefenseTable_8021F5EC 00000000 00000000 00000000 00000000
}

#new:Actor $RMagikoopa
{
    % stats
    [Index]        51b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021F5F8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021F750
    [Script]      $Script_Init_80221A18
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingRMagikoopa
{
    % stats
    [Index]        52b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021F6A4
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8021F774
    [Script]      $Script_Init_80221ABC
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F830
{
    .Status:Normal    00560101
    .Status:Stone     00560100
    .Status:Sleep     00560108
    .Status:Poison    00560101
    .Status:Stop      00560100
    .Status:Static    00560101
    .Status:Paralyze  00560100
    .Status:Dizzy     00560107
    .Status:Fear      00560107
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F87C
{
    .Status:Normal    00570101
    .Status:Stone     00570100
    .Status:Sleep     00570108
    .Status:Poison    00570101
    .Status:Stop      00570100
    .Status:Static    00570101
    .Status:Paralyze  00570100
    .Status:Dizzy     00570107
    .Status:Fear      00570107
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F8C8
{
    .Status:Normal    0057010A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8021F8D4
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021F8E4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560105
            SetConst  *Var[2]  00560106
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560105
            SetConst  *Var[2]  00560106
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
            ExecWait  $Script_RMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560102
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_8021FDFC
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218458    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_8021FF08
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218550    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560101 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F8E4 )
    Call  SetActorType      ( .Actor:Self 00000051 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F5F8 )
    Call  $Function_80218484    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80220504
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8021FDFC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8021FDFC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
            ExecWait  $Script_8021FF08
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8021FDFC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570105
            SetConst  *Var[2]  00570106
            ExecWait  DoBurnHit
            ExecWait  $Script_8021FF08
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570105
            SetConst  *Var[2]  00570106
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570101
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570104 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
            ExecWait  $Script_RMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570102
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570104
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570102 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218300    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218300    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560103 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_80221A18
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F8D4 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221B60 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F8E4 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_80221ABC
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021F8D4 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221B60 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220504 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80221B60
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_802185A8    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetActorAttackBoost   ( *Var[0] *Var[4] )
            If  *Var[4]  <  00000003
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_RMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_RMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DD )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  BoostAttack   ( *Var[8] 00000001 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_802222A0
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_802222AC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_802222B8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80222364
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80222410
{
    00800000 01000000 022300FF $IdleAnimations_802224F0 $DefenseTable_802222A0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_80222434
{
    00020001 01000000 022300FF $IdleAnimations_802224F0 $DefenseTable_802222AC 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8022253C $DefenseTable_802222AC 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80222588 $DefenseTable_802222AC 00000000 00000000 00000000 00000000
}

#new:Actor $GRNMagikoopa
{
    % stats
    [Index]        53b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_802222B8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80222410
    [Script]      $Script_Init_802246D8
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRNMagikoopa
{
    % stats
    [Index]        54b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80222364
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80222434
    [Script]      $Script_Init_8022477C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_802224F0
{
    .Status:Normal    00560401
    .Status:Stone     00560400
    .Status:Sleep     00560408
    .Status:Poison    00560401
    .Status:Stop      00560400
    .Status:Static    00560401
    .Status:Paralyze  00560400
    .Status:Dizzy     00560407
    .Status:Fear      00560407
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022253C
{
    .Status:Normal    00570401
    .Status:Stone     00570400
    .Status:Sleep     00570408
    .Status:Poison    00570401
    .Status:Stop      00570400
    .Status:Static    00570401
    .Status:Paralyze  00570400
    .Status:Dizzy     00570407
    .Status:Fear      00570407
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80222588
{
    .Status:Normal    0057040A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80222594
{
    Return
    End
}

#new:Script $Script_HandleEvent_802225A4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560405
            SetConst  *Var[2]  00560406
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560405
            SetConst  *Var[2]  00560406
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560406
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560401
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560401
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
            ExecWait  $Script_GRNMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560402
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560404
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_80222ABC
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_802187C8    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_80222BC8
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_802188C0    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560401 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802225A4 )
    Call  SetActorType      ( .Actor:Self 00000053 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_802222B8 )
    Call  $Function_802187F4    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_802231C4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_80222ABC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_80222ABC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoNormalHit
            ExecWait  $Script_80222BC8
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_80222ABC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570405
            SetConst  *Var[2]  00570406
            ExecWait  DoBurnHit
            ExecWait  $Script_80222BC8
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570405
            SetConst  *Var[2]  00570406
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570406
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570401
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570401
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570404 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
            ExecWait  $Script_GRNMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570402
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570404
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570402 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218670    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218670    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560403 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_802246D8
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80222594 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224820 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802225A4 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_8022477C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80222594 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224820 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802231C4 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80224820
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218918    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetActorDefenseBoost  ( *Var[0] *Var[4] )
            If  *Var[4]  <  00000003
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_GRNMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_GRNMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_GRNMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DD )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  BoostDefense  ( *Var[8] 00000001 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_80224F60
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_80224F6C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80224F78
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_80225024
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_802250D0
{
    00800000 01000000 022300FF $IdleAnimations_802251B0 $DefenseTable_80224F60 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_802250F4
{
    00020001 01000000 022300FF $IdleAnimations_802251B0 $DefenseTable_80224F6C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_802251FC $DefenseTable_80224F6C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80225248 $DefenseTable_80224F6C 00000000 00000000 00000000 00000000
}

#new:Actor $YMagikoopa
{
    % stats
    [Index]        55b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80224F78
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802250D0
    [Script]      $Script_Init_80227398
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingYMagikoopa
{
    % stats
    [Index]        56b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80225024
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_802250F4
    [Script]      $Script_Init_8022743C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802251B0
{
    .Status:Normal    00560201
    .Status:Stone     00560200
    .Status:Sleep     00560208
    .Status:Poison    00560201
    .Status:Stop      00560200
    .Status:Static    00560201
    .Status:Paralyze  00560200
    .Status:Dizzy     00560207
    .Status:Fear      00560207
    .Status:End
}

#new:IdleAnimations $IdleAnimations_802251FC
{
    .Status:Normal    00570201
    .Status:Stone     00570200
    .Status:Sleep     00570208
    .Status:Poison    00570201
    .Status:Stop      00570200
    .Status:Static    00570201
    .Status:Paralyze  00570200
    .Status:Dizzy     00570207
    .Status:Fear      00570207
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80225248
{
    .Status:Normal    0057020A
    .Status:End
}

#new:Script $Script_Idle_80225254
{
    Return
    End
}

#new:Script $Script_HandleEvent_80225264
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560205
            SetConst  *Var[2]  00560206
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560205
            SetConst  *Var[2]  00560206
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
            ExecWait  $Script_YMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560202
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560204
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022577C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218B38    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_80225888
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218C30    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560201 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225264 )
    Call  SetActorType      ( .Actor:Self 00000055 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80224F78 )
    Call  $Function_80218B64    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_80225E84
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022577C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022577C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoNormalHit
            ExecWait  $Script_80225888
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022577C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570205
            SetConst  *Var[2]  00570206
            ExecWait  DoBurnHit
            ExecWait  $Script_80225888
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570205
            SetConst  *Var[2]  00570206
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570206
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570201
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570201
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570204 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
            ExecWait  $Script_YMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570202
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570204
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_YMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570202 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_802189E0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_802189E0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_YMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560203 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_YMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_80227398
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80225254 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802274E0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225264 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_8022743C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80225254 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802274E0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225E84 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_TakeTurn_802274E0
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218C88    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetStatusFlags    ( *Var[0] *Var[4] )
            If  *Var[4]  !&  04002000
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_YMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_YMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_YMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:SnakingStatic *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Loop  00000004
            Call  PlaySoundAtActor  ( *Var[8] 000003D2 )
            Call  RandInt   ( 00000003 *Var[0] )
            Add   *Var[0]  00000003
            Wait  *Var[0]
        EndLoop
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  ElectrifyActor    ( *Var[8] 00000003 )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 80227C64 to 80227C70 (00658A74 to 00658A80)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80227C70
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80227C7C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80227C88
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80227D34
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_80227DE0
{
    00800000 01000000 022300FF $IdleAnimations_80227EC0 $DefenseTable_80227C70 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_80227E04
{
    00020001 01000000 022300FF $IdleAnimations_80227EC0 $DefenseTable_80227C7C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_80227F0C $DefenseTable_80227C7C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_80227F58 $DefenseTable_80227C7C 00000000 00000000 00000000 00000000
}

#new:Actor $GRYMagikoopa
{
    % stats
    [Index]        57b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80227C88
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80227DE0
    [Script]      $Script_Init_8022A0A8
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRYMagikoopa
{
    % stats
    [Index]        58b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80227D34
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_80227E04
    [Script]      $Script_Init_8022A14C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227EC0
{
    .Status:Normal    00560501
    .Status:Stone     00560500
    .Status:Sleep     00560508
    .Status:Poison    00560501
    .Status:Stop      00560500
    .Status:Static    00560501
    .Status:Paralyze  00560500
    .Status:Dizzy     00560507
    .Status:Fear      00560507
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227F0C
{
    .Status:Normal    00570501
    .Status:Stone     00570500
    .Status:Sleep     00570508
    .Status:Poison    00570501
    .Status:Stop      00570500
    .Status:Static    00570501
    .Status:Paralyze  00570500
    .Status:Dizzy     00570507
    .Status:Fear      00570507
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227F58
{
    .Status:Normal    0057050A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80227F64
{
    Return
    End
}

#new:Script $Script_HandleEvent_80227F74
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560505
            SetConst  *Var[2]  00560506
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560505
            SetConst  *Var[2]  00560506
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560506
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560501
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560501
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
            ExecWait  $Script_GRYMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560502
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560504
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_8022848C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80218EA8    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_80228598
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80218FA0    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560501 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227F74 )
    Call  SetActorType      ( .Actor:Self 00000057 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80227C88 )
    Call  $Function_80218ED4    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80228B94
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022848C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022848C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
            ExecWait  $Script_80228598
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022848C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570505
            SetConst  *Var[2]  00570506
            ExecWait  DoBurnHit
            ExecWait  $Script_80228598
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570505
            SetConst  *Var[2]  00570506
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570506
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570501
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570501
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570504 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
            ExecWait  $Script_GRYMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570502
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570504
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570502 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218D50    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218D50    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560503 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_8022A0A8
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80227F64 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022A1F0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227F74 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_8022A14C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_80227F64 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022A1F0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228B94 )
    Call  GetBattleVar  ( 00000002 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
    EndIf
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_8022A1F0
{
    Set   *Flag[00]  .False
    Label  A
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget    ( *Var[0] *Var[1] )
    Call  GetIndexFromHome  ( *Var[0] *Var[1] )
    Call  GetBattleVar      ( 00000002 *Var[2] )
    If  *Var[1]  >  *Var[2]
        Call  $Function_80218FF8    ( *Var[0] *Var[3] )
        If  *Var[3]  ==  00000000
            Call  GetStatusFlags    ( *Var[0] *Var[4] )
            If  *Var[4]  !&  04002000
                Set   *Var[8]  *Var[0]
                Call  SetBattleVar  ( 00000002 *Var[1] )
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Flag[00]  ==  .False
        Set   *Flag[00]  .True
        Call  SetBattleVar  ( 00000002 FFFFFFFF )
        Goto  A
    EndIf
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_GRYMagikoopa_RunAway
        Return
    EndIf
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00000200
        ExecWait  $Script_GRYMagikoopa_ShapeSpell
    Else
        ExecWait  $Script_GRYMagikoopa_WandStrike
    EndIf
    Return
    Label  64
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
    EndIf
    Wait  5`
    Thread
        Wait  10`
        Call  PlaySoundAtActor  ( *Var[8] 000002DB )
    EndThread
    Thread
        Call  8026BF48      ( 00000001 )
        Call  VanishActor   ( *Var[8] 00000002 )
        Call  8026BF48      ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8022A930
{
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_8022A93C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8022A948
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:StatusTable $StatusTable_8022A9F4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8022AAA0
{
    00800000 01000000 022300FF $IdleAnimations_8022AB80 $DefenseTable_8022A930 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_8022AAC4
{
    00020001 01000000 022300FF $IdleAnimations_8022AB80 $DefenseTable_8022A93C 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8022ABCC $DefenseTable_8022A93C 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_8022AC18 $DefenseTable_8022A93C 00000000 00000000 00000000 00000000
}

#new:Actor $WMagikoopa
{
    % stats
    [Index]        59b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022A948
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8022AAA0
    [Script]      $Script_Init_8022CD68
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingWMagikoopa
{
    % stats
    [Index]        5Ab
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8022A9F4
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8022AAC4
    [Script]      $Script_Init_8022CDCC
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022AB80
{
    .Status:Normal    00560301
    .Status:Stone     00560300
    .Status:Sleep     00560308
    .Status:Poison    00560301
    .Status:Stop      00560300
    .Status:Static    00560301
    .Status:Paralyze  00560300
    .Status:Dizzy     00560307
    .Status:Fear      00560307
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022ABCC
{
    .Status:Normal    00570301
    .Status:Stone     00570300
    .Status:Sleep     00570308
    .Status:Poison    00570301
    .Status:Stop      00570300
    .Status:Static    00570301
    .Status:Paralyze  00570300
    .Status:Dizzy     00570307
    .Status:Fear      00570307
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8022AC18
{
    .Status:Normal    0057030A
    .Status:End
}

#new:Script $Script_Idle_8022AC24
{
    Return
    End
}

#new:Script $Script_HandleEvent_8022AC34
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
            ExecWait  $Script_WMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8022B14C
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_80219218    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_8022B258
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_80219310    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560301 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022AC34 )
    Call  SetActorType      ( .Actor:Self 00000059 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8022A948 )
    Call  $Function_80219244    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

#new:Script $Script_HandleEvent_8022B854
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8022B14C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8022B14C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            ExecWait  $Script_8022B258
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8022B14C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            ExecWait  $Script_8022B258
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
            ExecWait  $Script_WMagikoopa_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_WMagikoopa_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570302 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_802190C0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_802190C0    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_WMagikoopa_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560303 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_WMagikoopa_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_8022CD68
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022AC24 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E2F4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022AC34 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_8022CDCC
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8022AC24 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E2F4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B854 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_HealOne
{
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_8021942C    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_8021948C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[3]
    Call  $Function_80219368    ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000000
        Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
        Call  GetActorHP    ( *Var[0] *Var[B] )
        If  *Var[A]  !=  *Var[B]
            If  *Var[2]  <  *Var[9]
                Set   *Var[8]  *Var[0]
                Set   *Var[9]  *Var[2]
            Else
                If  *Var[2]  ==  *Var[9]
                    If  *Var[0]  <  *Var[8]
                        Set   *Var[8]  *Var[0]
                        Set   *Var[9]  *Var[2]
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_8021942C    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_8021948C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[4]
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                If  *Var[2]  <  *Var[9]
                    Set   *Var[8]  *Var[0]
                    Set   *Var[9]  *Var[2]
                Else
                    If  *Var[2]  ==  *Var[9]
                        If  *Var[0]  <  *Var[8]
                            Set   *Var[8]  *Var[0]
                            Set   *Var[9]  *Var[2]
                        EndIf
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  1
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047 % 47
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001 % 1
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                Set   *Var[8]  *Var[0]
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Call  GetEnemyMaxHP ( .Actor:Self *Var[A] )
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    If  *Var[A]  !=  *Var[B]
        Set   *Var[8]  FFFFFF81
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  3
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  .Actor:Enemy0 % 200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  3
    EndIf
    ExecWait  $Script_WMagikoopa_RunAway
    Return
    Label  64
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[8] 0000206D )
        Call  PlaySoundAtActor  ( *Var[8] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[8] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[8] 00000005 .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HealAll
{
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_WMagikoopa_ShapeSpell
        Else
            ExecWait  $Script_WMagikoopa_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Thread
            Wait  5`
            Call  PlaySoundAtActor  ( *Var[0] 0000206D )
            Call  PlaySoundAtActor  ( *Var[0] 00000214 )
            Wait  30`
            Call  PlaySoundAtActor  ( *Var[0] 0000025C )
        EndThread
        Thread
            Call  8026BF48  ( 00000001 )
            Call  HealActor ( *Var[0] 00000003 .True )
            Call  8026BF48  ( 00000000 )
        EndThread
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  WaitForBuffDone ( )
    Wait  1`
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8022E2F4
{
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_WMagikoopa_RunAway
        Return
    EndIf
    Set   *Var[A]  00000000
    Set   *Var[B]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Call  GetActorHP    ( *Var[0] *Var[2] )
        Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
        If  *Var[2]  !=  *Var[3]
            Add   *Var[A]  00000001
        EndIf
        Add   *Var[B]  00000001
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Mul   *Var[A]  00000064
    Div   *Var[A]  *Var[B]
    Switch  *Var[A]
        Case  >=  0000003C
            ExecWait  $Script_HealAll
        Case  ==  00000000
            Call  GetActorFlags ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00000200
                ExecWait  $Script_WMagikoopa_ShapeSpell
            Else
                ExecWait  $Script_WMagikoopa_WandStrike
            EndIf
        Default
            ExecWait  $Script_HealOne
    EndSwitch
    Return
    End
}

PADDING: 8022E588 to 8022E590 (0065F398 to 0065F3A0)
00000000 00000000

#new:Script $Script_BeforeBattle_8022E590
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  802536A8  ( 00000001 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022E5DC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022E5EC
{
    ~Model:pra_bt01:o383
    ~Model:pra_bt01:o384
    ~Model:pra_bt01:o385
    00000000
}

#new:Stage $Stage_8022E5FC
{
    $ASCII_8022F670  % pra_tex
    $ASCII_8022F660  % pra_bt01_shape
    $ASCII_8022F650  % pra_bt01_hit
    $Script_BeforeBattle_8022E590
    $Script_AfterBattle_8022E5DC
    00000000
    $ForegroundModelList_8022E5EC
    00000000
    00000000
    00000000
}

PADDING: 8022E624 to 8022E630 (0065F434 to 0065F440)
00000000 00000000 00000000

#new:Script $Script_8022E630
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022E700
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022E7EC
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 00000000 *Var[0] )
        Call  SetTexPanOffset   ( *Var[A] 00000001 00000000 *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022E8D8
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  802536A8  ( 00000001 )
    Set   *Var[0]  00000011
    Set   *Var[1]  00000000
    Set   *Var[2]  00000BB8
    Set   *Var[3]  00000000
    Exec  $Script_8022E630
    Set   *Var[0]  00000012
    Set   *Var[1]  00000000
    Set   *Var[2]  00000BB8
    Set   *Var[3]  00000000
    Exec  $Script_8022E630
    Return
    End
}

#new:Script $Script_AfterBattle_8022E9BC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8022E9CC
{
    ~Model:pra_bt02:o383
    ~Model:pra_bt02:o384
    ~Model:pra_bt02:o385
    00000000
}

#new:Stage $Stage_8022E9DC
{
    $ASCII_8022F698  % pra_tex
    $ASCII_8022F688  % pra_bt02_shape
    $ASCII_8022F678  % pra_bt02_hit
    $Script_BeforeBattle_8022E8D8
    $Script_AfterBattle_8022E9BC
    00000000
    $ForegroundModelList_8022E9CC
    00000000
    00000000
    00000000
}

PADDING: 8022EA04 to 8022EA10 (0065F814 to 0065F820)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022EA10
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022EA4C
{
    Return
    End
}

#new:Stage $Stage_8022EA5C
{
    $ASCII_8022F6C0  % pra_tex
    $ASCII_8022F6B0  % pra_bt03_shape
    $ASCII_8022F6A0  % pra_bt03_hit
    $Script_BeforeBattle_8022EA10
    $Script_AfterBattle_8022EA4C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022EA84 to 8022EA90 (0065F894 to 0065F8A0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022EA90
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:pra_bt03:g115 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022EAE0
{
    Return
    End
}

#new:Stage $Stage_8022EAF0
{
    $ASCII_8022F6E8  % pra_tex
    $ASCII_8022F6D8  % pra_bt03_shape
    $ASCII_8022F6C8  % pra_bt03_hit
    $Script_BeforeBattle_8022EA90
    $Script_AfterBattle_8022EAE0
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022EB18 to 8022EB20 (0065F928 to 0065F930)
00000000 00000000

#new:Script $Script_BeforeBattle_8022EB20
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:pra_bt03:g115 00000000 )
    Call  SetGroupEnabled   ( ~Model:pra_bt03:g117 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022EB84
{
    Return
    End
}

#new:Stage $Stage_8022EB94
{
    $ASCII_8022F710  % pra_tex
    $ASCII_8022F700  % pra_bt03_shape
    $ASCII_8022F6F0  % pra_bt03_hit
    $Script_BeforeBattle_8022EB20
    $Script_AfterBattle_8022EB84
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022EBBC to 8022EBC0 (0065F9CC to 0065F9D0)
00000000

#new:Script $Script_8022EBC0
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022EC90
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8022ED7C
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 00000000 *Var[0] )
        Call  SetTexPanOffset   ( *Var[A] 00000001 00000000 *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8022EE68
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  00000001
    Set   *Var[1]  00000000
    Set   *Var[2]  00000BB8
    Set   *Var[3]  00000000
    Exec  $Script_8022EBC0
    Set   *Var[0]  00000000
    Set   *Var[1]  00000001
    Set   *Var[2]  00000BB8
    Set   *Var[3]  00000000
    Exec  $Script_8022EBC0
    Call  802536A8  ( 00000001 )
    Return
    End
}

#new:Script $Script_AfterBattle_8022EF4C
{
    Return
    End
}

#new:Stage $Stage_8022EF5C
{
    $ASCII_8022F738  % pra_tex
    $ASCII_8022F728  % pra_bt04_shape
    $ASCII_8022F718  % pra_bt04_hit
    $Script_BeforeBattle_8022EE68
    $Script_AfterBattle_8022EF4C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 8022EF84 to 8022EF90 (0065FD94 to 0065FDA0)
00000000 00000000 00000000

#new:Vector3D $Vector3D_8022EF90
{
    15` 133` -25`
}

#new:Vector3D $Vector3D_8022EF9C
{
    55` 133` -25`
}

#new:Vector3D $Vector3D_8022EFA8
{
    95` 133` -25`
}

MISSING: 8022EFB4 to 8022EFC0 (0065FDC4 to 0065FDD0)
00000087 00000085 FFFFFFE7

#new:Formation $Formation_00
{
    $Swoopula $Vector3D_8022EF9C 0000000A 00000000 00000000 00000000 00000000
    $Swoopula $Vector3D_8022EFA8 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $Swoopula $Vector3D_8022EF90 0000000A 00000000 00000000 00000000 00000000
    $Swoopula $Vector3D_8022EF9C 00000009 00000000 00000000 00000000 00000000
    $Swoopula $Vector3D_8022EFA8 00000008 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8022F04C
{
    0` 133` -25`
}

#new:Vector3D $Vector3D_8022F058
{
    40` 133` -25`
}

#new:Vector3D $Vector3D_8022F064
{
    80` 133` -25`
}

#new:Vector3D $Vector3D_8022F070
{
    120` 133` -25`
}

#new:Formation $Formation_02
{
    $Swoopula $Vector3D_8022F04C 0000000A 00000000 00000000 00000000 00000000
    $Swoopula $Vector3D_8022F058 00000009 00000000 00000000 00000000 00000000
    $Swoopula $Vector3D_8022F064 00000008 00000000 00000000 00000000 00000000
    $Swoopula $Vector3D_8022F070 00000007 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8022F0EC
{
    0` 133` -25`
}

#new:Vector3D $Vector3D_8022F0F8
{
    40` 133` -25`
}

#new:Vector3D $Vector3D_8022F104
{
    80` 133` -25`
}

#new:Vector3D $Vector3D_8022F110
{
    120` 55` 25`
}

#new:Formation $Formation_03
{
    $Swoopula $Vector3D_8022F0EC 0000000A FFFFFFFF 00000000 00000000 00000000
    $Swoopula $Vector3D_8022F0F8 00000009 FFFFFFFF 00000000 00000000 00000000
    $Swoopula $Vector3D_8022F104 00000008 FFFFFFFF 00000000 00000000 00000000
    $FlyingYMagikoopa $Vector3D_8022F110 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
    $WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
    $Swoopula $Vector3D_8022EFA8 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
    $YMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
    $WMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
    $WMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
    $RMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
    $GRYMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
    $WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
    $GRNMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
    $WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
    $GRNMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
    $FlyingWMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $AlbinoDino 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8022F8F8 00000002 $Formation_00 $Stage_8022E5FC 00000000 % unused
    $SJIS_8022F8E4 00000003 $Formation_01 $Stage_8022E5FC 00000000
    $SJIS_8022F8D0 00000004 $Formation_02 $Stage_8022E5FC 00000000
    $SJIS_8022F8A4 00000004 $Formation_03 $Stage_8022E5FC 00000000
    $SJIS_8022F894 00000001 $Formation_04 $Stage_8022E5FC 00000000 % unused
    $SJIS_8022F880 00000002 $Formation_05 $Stage_8022E5FC 00000000 % unused
    $SJIS_8022F86C 00000003 $Formation_06 $Stage_8022E5FC 00000000 % unused
    $SJIS_8022F848 00000003 $Formation_07 $Stage_8022E5FC 00000000 % unused
    $SJIS_8022F824 00000003 $Formation_08 $Stage_8022E5FC 00000000
    $SJIS_8022F800 00000003 $Formation_09 $Stage_8022E5FC 00000000
    $SJIS_8022F7CC 00000004 $Formation_0A $Stage_8022E5FC 00000000 % unused
    $SJIS_8022F7AC 00000002 $Formation_0B $Stage_8022E5FC 00000000
    $SJIS_8022F788 00000004 $Formation_0C $Stage_8022E5FC 00000000
    $SJIS_8022F74C 00000004 $Formation_0D $Stage_8022E5FC 00000000
    $SJIS_8022F740 00000001 $Formation_0E $Stage_8022E5FC 00000000 % unused
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_8022F934 $Stage_8022E5FC
    $ASCII_8022F92C $Stage_8022E9DC
    $ASCII_8022F924 $Stage_8022EA5C
    $ASCII_8022F91C $Stage_8022EAF0
    $ASCII_8022F914 $Stage_8022EB94
    $ASCII_8022F90C $Stage_8022EF5C
    00000000 00000000
}

PADDING: 8022F64C to 8022F650 (0066045C to 00660460)
00000000

#new:ASCII $ASCII_8022F650
{
    "pra_bt01_hit"
}

#new:ASCII $ASCII_8022F660
{
    "pra_bt01_shape"
}

#new:ASCII $ASCII_8022F670
{
    "pra_tex"
}

#new:ASCII $ASCII_8022F678
{
    "pra_bt02_hit"
}

#new:ASCII $ASCII_8022F688
{
    "pra_bt02_shape"
}

#new:ASCII $ASCII_8022F698
{
    "pra_tex"
}

#new:ASCII $ASCII_8022F6A0
{
    "pra_bt03_hit"
}

#new:ASCII $ASCII_8022F6B0
{
    "pra_bt03_shape"
}

#new:ASCII $ASCII_8022F6C0
{
    "pra_tex"
}

#new:ASCII $ASCII_8022F6C8
{
    "pra_bt03_hit"
}

#new:ASCII $ASCII_8022F6D8
{
    "pra_bt03_shape"
}

#new:ASCII $ASCII_8022F6E8
{
    "pra_tex"
}

#new:ASCII $ASCII_8022F6F0
{
    "pra_bt03_hit"
}

#new:ASCII $ASCII_8022F700
{
    "pra_bt03_shape"
}

#new:ASCII $ASCII_8022F710
{
    "pra_tex"
}

#new:ASCII $ASCII_8022F718
{
    "pra_bt04_hit"
}

#new:ASCII $ASCII_8022F728
{
    "pra_bt04_shape"
}

#new:ASCII $ASCII_8022F738
{
    "pra_tex"
}

#new:SJIS $SJIS_8022F740
{
    セキゾー % sekizo-
}

#new:SJIS $SJIS_8022F74C
{
    ホワイトガボンx２,グリーンカメック,ホワイトカメック（そら） % howaitogabonx2,guri-nkamekku,howaitokamekku（sora）
}

#new:SJIS $SJIS_8022F788
{
    ホワイトガボンx３,グリーンカメック % howaitogabonx3,guri-nkamekku
}

#new:SJIS $SJIS_8022F7AC
{
    ホワイトガボン,グレイカメック % howaitogabon,gureikamekku
}

#new:SJIS $SJIS_8022F7CC
{
    ホワイトガボンx２,ホワイトカメック,レッドカメック % howaitogabonx2,howaitokamekku,reddokamekku
}

#new:SJIS $SJIS_8022F800
{
    ホワイトガボンx２,ホワイトカメック % howaitogabonx2,howaitokamekku
}

#new:SJIS $SJIS_8022F824
{
    ホワイトガボンx２,イエローカメック % howaitogabonx2,iero-kamekku
}

#new:SJIS $SJIS_8022F848
{
    ホワイトガボンx２,バサバサチュルル % howaitogabonx2,basabasachururu
}

#new:SJIS $SJIS_8022F86C
{
    ホワイトガボンx３ % howaitogabonx3
}

#new:SJIS $SJIS_8022F880
{
    ホワイトガボンx２ % howaitogabonx2
}

#new:SJIS $SJIS_8022F894
{
    ホワイトガボン % howaitogabon
}

#new:SJIS $SJIS_8022F8A4
{
    バサバサチュルルx3,イエローカメック（そら） % basabasachururux3,iero-kamekku（sora）
}

#new:SJIS $SJIS_8022F8D0
{
    バサバサチュルルx4 % basabasachururux4
}

#new:SJIS $SJIS_8022F8E4
{
    バサバサチュルルx3 % basabasachururux3
}

#new:SJIS $SJIS_8022F8F8
{
    バサバサチュルルx2 % basabasachururux2
}

#new:ASCII $ASCII_8022F90C
{
    "pra_04"
}

#new:ASCII $ASCII_8022F914
{
    "pra_03c"
}

#new:ASCII $ASCII_8022F91C
{
    "pra_03b"
}

#new:ASCII $ASCII_8022F924
{
    "pra_03"
}

#new:ASCII $ASCII_8022F92C
{
    "pra_02"
}

#new:ASCII $ASCII_8022F934
{
    "pra_01"
}

PADDING: 8022F93C to 8022F940 (0066074C to 00660750)
00000000

