% Script File: 15 Area JAN2.bscr
% Decoded from: 584940 to 58C2F0 (15 Area JAN2)

#new:Function $Function_80218000
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802180CC
{
	ADDIU     SP, SP, FFC0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 34 (SP)
	SW        S6, 30 (SP)
	SW        S5, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F20, 38 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S6, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S5, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S1, V0
	ADDIU     A0, R0, 1
	MTC1      S6, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A1, F2
	MTC1      S5, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A2, F2
	MTC1      S4, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A3, F2
	COPY      S0, V0
	SWC1      F20, 10 (SP)
	JAL       80072230
	SW        S2, 14 (SP)
	LW        V1, C (V0)
	SW        S3, 18 (V1)
	LW        V1, C (V0)
	SW        S1, 1C (V1)
	LW        V1, C (V0)
	SW        S0, 20 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, FF
	SW        A0, 28 (V1)
	LW        V1, C (V0)
	SW        A0, 2C (V1)
	LW        V1, C (V0)
	SW        A0, 30 (V1)
	LW        RA, 34 (SP)
	LW        S6, 30 (SP)
	LW        S5, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

PADDING: 80218248 to 80218250 (00584B88 to 00584B90)
00000000 00000000

% Origin: HINT
#new:Function $Function_80218250
{
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S0, V0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	CLEAR     A0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	COPY      S0, V0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	COPY      A0, V0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_802183A8
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_802183D4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_802184A0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_802184F8
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, V0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       ~Func:get_actor
	NOP
	COPY      A0, V0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	COPY      A0, S1
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	COPY      A0, S1
	.o9C
	LW        A1, 0 (S0)
	CLEAR     A2
	.oA4
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_802185BC
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        S2, 18 (SP)
	LIA       S2, 8010F290
	SW        RA, 1C (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LB        A2, 0 (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	LB        A2, 1 (S2)
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_8021861C
{
	ADDIU     SP, SP, FFD8
	SW        S3, 1C (SP)
	COPY      S3, A0
	SW        RA, 20 (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S3)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      S1, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S3
	COPY      S2, V0
	ADDIU     V0, R0, FF81
	BNE       S1, V0, .o54
	NOP
	LW        S1, 148 (S3)
	.o54
	JAL       ~Func:get_actor
	COPY      A0, S1
	COPY      A0, V0
	JAL       ~Func:get_actor_part
	COPY      A1, S2
	LW        A0, 78 (V0)
	JAL       ~Func:lookup_defense
	ADDIU     A1, R0, 1
	COPY      A0, S3
	LW        A1, 0 (S0)
	JAL       ~Func:set_variable
	COPY      A2, V0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:IdleAnimations $IdleAnimations_802186C0
{
    .Status:Normal    00360001
    .Status:Stone     00360000
    .Status:Sleep     00360000
    .Status:Poison    00360001
    .Status:Stop      00360000
    .Status:Static    00360000
    .Status:Paralyze  00360000
    .Status:Paralyze  00360000
    .Status:Dizzy     0036000F
    .Status:End
}

#new:DefenseTable $DefenseTable_8021870C
{
    .Element:Normal 00000000
    .Element:Fire   00000000
    .Element:End
}

#new:StatusTable $StatusTable_80218720
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      95`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      50`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   90`
    .Status:Shrink     75`
    .Status:Stop       85`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      1`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_802187CC
{
    00800000 01000000 F13200FF $IdleAnimations_802186C0 $DefenseTable_8021870C 00000000 00000000 03F20000 00000000
}

#new:Actor $PutridPiranha
{
    % stats
    [Index]        2Db
    [Level]        17`b
    [MaxHP]        12`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80218720
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802187CC
    [Script]      $Script_Init_80218818
    % move effectiveness
    [Escape]       60`b
    [Item]         30`b
    [AirLift]      20`b
    [Hurricane]    20`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  95`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         60`b  52`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -22`b  32`b % dx dy
    [StatusIcon]    1`b  44`b % dx dy
}

#new:Script $Script_Init_80218818
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80218EC8 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_80218864 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802189F0 )
    Return
    End
}

#new:Script $Script_Idle_80218864
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00040000
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFE5 00000021 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000005 FFFFFFF5 )
        Call  $Function_80218000    ( FFFFFFDB 00000009 FFFFFFF9 0000001F )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFF1 00000032 )
        Call  8027D4C8  ( FFFFFF81 00000001 00000003 FFFFFFF2 )
        Call  $Function_80218000    ( FFFFFFEA 00000020 00000001 0000002C )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80218974
{
    Call  SetAnimation  ( .Actor:Self 00000001 00360003 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360001 )
    Call  SetActorYaw   ( .Actor:Self 00000000 )
    Return
    End
}

#new:Script $Script_HandleEvent_802189F0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360010
            SetConst  *Var[2]  00360011
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360010
            SetConst  *Var[2]  00360011
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360011
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoShockHit
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            ExecWait  $Script_80218974
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0036000E
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360003
            SetConst  *Var[2]  0036000E
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00360003
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80218EC8
{
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_Bite
        Return
    EndIf
    Call  RandInt   ( 00000064 *Var[0] )
    If  *Var[0]  <  00000046
        ExecWait  $Script_Breath
    Else
        ExecWait  $Script_Bite
    EndIf
    Return
    End
}

#new:Script $Script_Bite
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation      ( .Actor:Self 00000001 00360018 )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
        Wait  8`
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000001B
        Set   *Var[1]  00000000
        Set   *Var[3]  *Var[0]
        Set   *Var[4]  *Var[1]
        Set   *Var[5]  *Var[2]
        Call  GetActorPos       ( .Actor:Player *Var[6] *Var[7] *Var[8] )
        Add   *Var[3]  *Var[6]
        Add   *Var[4]  *Var[7]
        Add   *Var[5]  *Var[8]
        Div   *Var[3]  00000002
        Div   *Var[4]  00000002
        Div   *Var[5]  00000002
        Call  UseCamPreset      ( 00000013 )
        Call  SetBattleCamTarget    ( *Var[3] *Var[4] *Var[5] )
        Call  SetBattleCamZoom  ( 0000012C )
        Call  SetBattleCamOffsetZ   ( 00000028 )
        Wait  20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
        Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
        Call  SetAnimation      ( .Actor:Self 00000001 00360017 )
        Wait  8`
    Else
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
        Call  SetAnimation  ( .Actor:Self 00000001 00360003 )
        Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
        Call  SetAnimation  ( .Actor:Self 00000001 00360003 )
        Call  SetGoalToTarget       ( .Actor:Self )
        Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags        ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Add   *Var[0]  0000000A
        Else
            Add   *Var[0]  0000001B
        EndIf
        Set   *Var[1]  00000000
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  RunToGoal     ( .Actor:Self 00000000 .False )
        Call  SetAnimation  ( .Actor:Self 00000001 00360001 )
    EndIf
    Thread
        Wait  8`
        Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
    EndThread
    Call  EnemyTestTarget   ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Call  SetAnimation  ( .Actor:Self 00000001 00360005 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 00360006 )
            Wait  6`
            Call  SetAnimation  ( .Actor:Self 00000001 00360007 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  MoveBattleCamOver ( 00000014 )
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360018 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360017 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
                Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
                Call  SetActorYaw       ( .Actor:Self 000000B4 )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                ExecWait  $Script_80218974
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00360005 )
    Wait  10`
    Call  SetAnimation      ( .Actor:Self 00000001 00360006 )
    Wait  1`
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset      ( 00000002 )
            Wait  10`
            Call  SetAnimation      ( .Actor:Self 00000001 00360007 )
            Wait  20`
            Call  YieldTurn ( )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
                Call  SetAnimation  ( .Actor:Self 00000001 00360018 )
                Wait  10`
                Call  SetGoalToHome ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
                Call  SetAnimation  ( .Actor:Self 00000001 00360017 )
                Wait  10`
                Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
            Else
                Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
                ExecWait  $Script_80218974
            EndIf
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Breath
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00360003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 00360003 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000010
    Else
        Add   *Var[0]  00000028
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 00360001 )
    Call  SetAnimation  ( .Actor:Self 00000001 00360008 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000003AB )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  0000000C
        Set   *Var[1]  00000005
        SetF  *Var[3]  *Fixed[0.4]
    Else
        Add   *Var[0]  00000020
        Set   *Var[1]  0000000D
        SetF  *Var[3]  *Fixed[1.0]
    EndIf
    Call  $Function_802180CC    ( *Var[2] *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000078 00000000 00000078 )
    Wait  1`
    Call  SetAnimation  ( .Actor:Self 00000001 00360009 )
    Wait  5`
    Call  EnemyTestTarget       ( .Actor:Self *Var[A] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[A]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036000A )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            ExecWait  $Script_80218974
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 80020364 00000002 00000020 )
    Set   *Var[F]  *Var[0]
    Switch  *Var[F]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 0036000A )
            Wait  20`
            Call  YieldTurn ( )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            ExecWait  $Script_80218974
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 80219EC8 to 80219ED0 (00586808 to 00586810)
00000000 00000000

#new:DefenseTable $DefenseTable_80219ED0
{
    .Element:Normal 00000000
    .Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80219EDC
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80219EE8
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy      75`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80219F94
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      50`
    .Status:Poison     50`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static     50`
    .Status:Paralyze   75`
    .Status:Shrink     80`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod      -1`
    .Status:End
}

#new:PartsTable $PartsTable_8021A040
{
    00800000 01000000 022300FF $IdleAnimations_8021A120 $DefenseTable_80219ED0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8021A064
{
    00020001 01000000 022300FF $IdleAnimations_8021A120 $DefenseTable_80219EDC 00000000 00000000 FBF40000 00000000
    00800000 02000000 F62300FF $IdleAnimations_8021A16C $DefenseTable_80219EDC 00800000 00000000 00F80000 00000000
    00020001 03000000 000000FF $IdleAnimations_8021A1B8 $DefenseTable_80219EDC 00000000 00000000 00000000 00000000
}

#new:Actor $WMagikoopa
{
    % stats
    [Index]        59b
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80219EE8
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021A040
    [Script]      $Script_Init_8021C308
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      80`b
    [Hurricane]    70`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         36`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingWMagikoopa
{
    % stats
    [Index]        5Ab
    [Level]        21`b
    [MaxHP]        11`b
    [Coins]         2`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80219F94
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8021A064
    [Script]      $Script_Init_8021C36C
    % move effectiveness
    [Escape]       40`b
    [Item]         40`b
    [AirLift]      95`b
    [Hurricane]    75`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         48`b  40`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -25`b  20`b % dx dy
    [StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021A120
{
    .Status:Normal    00560301
    .Status:Stone     00560300
    .Status:Sleep     00560308
    .Status:Poison    00560301
    .Status:Stop      00560300
    .Status:Static    00560301
    .Status:Paralyze  00560300
    .Status:Dizzy     00560307
    .Status:Fear      00560307
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021A16C
{
    .Status:Normal    00570301
    .Status:Stone     00570300
    .Status:Sleep     00570308
    .Status:Poison    00570301
    .Status:Stop      00570300
    .Status:Static    00570301
    .Status:Paralyze  00570300
    .Status:Dizzy     00570307
    .Status:Fear      00570307
    .Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021A1B8
{
    .Status:Normal    0057030A
    .Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8021A1C4
{
    Return
    End
}

#new:Script $Script_HandleEvent_8021A1D4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560305
            SetConst  *Var[2]  00560306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
            ExecWait  $Script_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00560304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_8021A6EC
{
    Call  GetBattleFlags    ( *Var[0] )
    If  *Var[0]  !&  00080000
        If  *Var[0]  &  00000240
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
        EndIf
    Else
        Call  $Function_802183A8    ( *Var[0] )
        Switch  *Var[0]
            CaseOR  ==  00000083
            CaseOR  ==  00000084
            CaseOR  ==  00000085
            CaseOR  ==  00000088
                Call  GetBattleFlags    ( *Var[0] )
                If  *Var[0]  &  00000240
                    Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
                EndIf
            EndCaseGroup
        EndSwitch
    EndIf
    Return
    End
}

% Origin: HINT
#new:Script $Script_8021A7F8
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Call  GetLastElement    ( *Var[0] )
    If  *Var[0]  &  00000400
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Goto  0
    EndIf
    Return
    Label  0
    Call  8027D32C  ( FFFFFF81 )
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  00080000
        Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
    EndIf
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[2]  00000001
    Call  SetPartPos        ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal        ( .Actor:Self 0000000F .False .True .False )
    Call  $Function_802184A0    ( 00000096 0000000A )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.7] )
    EndThread
    Call  GetLastEvent  ( .Actor:Self *Var[3] )
    If  *Var[3]  ==  0000000F % F
        Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
        Call  GetActorPos   ( .Actor:Self *Var[3] *Var[4] *Var[5] )
        Add   *Var[4]  0000000A
        Add   *Var[5]  00000005
        Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndIf
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Loop  00000014
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        Wait  1`
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
        Wait  1`
    EndLoop
    Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Call  SetAnimation      ( .Actor:Self 00000001 00560301 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A1D4 )
    Call  SetActorType      ( .Actor:Self 00000059 )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_80219EE8 )
    Call  $Function_802183D4    ( FFFFFFF6 00000014 0000000A 00000020 )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  GetIndexFromPos   ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  ForceHomePos      ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  HPBarToHome       ( .Actor:Self )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HandleEvent_8021ADF4
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            ExecWait  $Script_8021A6EC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
        CaseOR  ==  .Event:Hit % A
        CaseOR  ==  .Event:FallTrigger % C
            ExecWait  $Script_8021A6EC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            ExecWait  $Script_8021A7F8
        EndCaseGroup
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  0000000F % F
            ExecWait  $Script_8021A6EC
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            ExecWait  $Script_8021A7F8
        EndCaseGroup
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570305
            SetConst  *Var[2]  00570306
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570306
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:Linear )
            Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570301
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetAnimation  ( .Actor:Self 00000002 00570304 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
            Wait  15`
            Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
            ExecWait  $Script_RunAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570302
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetStatusFlags    ( .Actor:Self *Var[0] )
            If  *Var[0]  !&  0035D000
                If  *Var[0]  &  00080000
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
                Else
                    Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
                EndIf
            EndIf
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  00570304
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_ShapeSpell
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 00000001 )
    Else
        Call  UseCamPreset      ( 00000002 )
        Call  MoveBattleCamOver ( 0000000A )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Sub   *Var[0]  0000000C
        Add   *Var[1]  0000000E
    Else
        Sub   *Var[0]  0000001E
        Add   *Var[1]  00000024
    EndIf
    Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570302 )
    Wait  30`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
            Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
            Wait  5`
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetStatusFlags    ( .Actor:Self *Var[9] )
            If  *Var[9]  &  00080000
                Sub   *Var[0]  00000008
                Add   *Var[1]  00000008
            Else
                Sub   *Var[0]  00000014
                Add   *Var[1]  00000014
            EndIf
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[3] *Var[4] *Var[5] )
            Sub   *Var[3]  00000032
            Set   *Var[4]  00000000
            Call  $Function_80218250    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
            Wait  50`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  14`
            Call  YieldTurn ( )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Wait  30`
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
    Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
    Wait  5`
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000 % 80000
        Sub   *Var[0]  00000008
        Add   *Var[1]  00000008
    Else
        Sub   *Var[0]  00000014
        Add   *Var[1]  00000014
    EndIf
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[3] *Var[4] *Var[5] )
    Sub   *Var[3]  0000000A
    Call  $Function_80218250    ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
    Wait  18`
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Wait  19`
            Call  YieldTurn ( )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_WandStrike
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
    Thread
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
        Set   *Var[0]  000000C8
        Loop  00000014
            Sub   *Var[0]  0000000A
            Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
            Wait  1`
        EndLoop
    EndThread
    Wait  10`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  GetStatusFlags    ( .Actor:Self *Var[A] )
    If  *Var[A]  &  00080000
        Add   *Var[0]  00000005
    Else
        Add   *Var[0]  00000019
    EndIf
    Set   *Var[1]  00000000
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
    Set   *Var[0]  00000037
    Loop  00000014
        Add   *Var[0]  0000000A
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
        Wait  1`
    EndLoop
    Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
    Call  SetAnimation      ( .Actor:Self 00000001 00560303 )
    Wait  11`
    Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  UseCamPreset  ( 00000002 )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  15`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Wait  10`
            Set   *Var[0]  000000C8
            Loop  00000014
                Sub   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  YieldTurn ( )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
            Call  FlyToGoal     ( .Actor:Self 00000014 00000000 .Easing:CosInOut )
            Set   *Var[0]  00000037
            Loop  00000014
                Add   *Var[0]  0000000A
                Call  SetPartAlpha  ( .Actor:Self 00000001 *Var[0] )
                Wait  1`
            EndLoop
            Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_RunAway
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  8027D32C  ( FFFFFF81 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    If  *Var[0]  !=  .Event:ScareAway % 39
        Call  UseCamPreset      ( 0000000E )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Call  MoveBattleCamOver ( 0000000F )
        Wait  15`
        Call  UseCamPreset      ( 00000001 )
    EndIf
    Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Wait  10`
    Call  SetActorYaw   ( .Actor:Self 000000B4 )
    Call  EnableActorBlur   ( .Actor:Self 00000001 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  000000C8
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  YieldTurn ( )
    Call  UseCamPreset  ( 00000002 )
    ExecWait  ForceNextTarget
    Call  8027D32C      ( FFFFFF81 )
    Call  RemoveActor   ( .Actor:Self )
    Return
    End
}

#new:Script $Script_Init_8021C308
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A1C4 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D894 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A1D4 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_Init_8021C36C
{
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A1C4 )
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D894 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ADF4 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HealOne
{
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_802185BC    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_8021861C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[3]
    Call  $Function_802184F8    ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000000
        Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
        Call  GetActorHP    ( *Var[0] *Var[B] )
        If  *Var[A]  !=  *Var[B]
            If  *Var[2]  <  *Var[9]
                Set   *Var[8]  *Var[0]
                Set   *Var[9]  *Var[2]
            Else
                If  *Var[2]  ==  *Var[9]
                    If  *Var[0]  <  *Var[8]
                        Set   *Var[8]  *Var[0]
                        Set   *Var[9]  *Var[2]
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  0
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Set   *Var[8]  00000000
    Set   *Var[9]  0000270F
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetActorHP    ( *Var[0] *Var[2] )
    Call  $Function_802185BC    ( *Var[3] *Var[4] )
    If  *Var[3]  >  *Var[4]
        Set   *Var[3]  *Var[4]
    EndIf
    Call  $Function_8021861C    ( *Var[0] *Var[1] *Var[5] )
    Call  GetActorDefenseBoost  ( *Var[0] *Var[6] )
    Add   *Var[5]  *Var[6]
    Sub   *Var[3]  *Var[5]
    Sub   *Var[2]  *Var[4]
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                If  *Var[2]  <  *Var[9]
                    Set   *Var[8]  *Var[0]
                    Set   *Var[9]  *Var[2]
                Else
                    If  *Var[2]  ==  *Var[9]
                        If  *Var[0]  <  *Var[8]
                            Set   *Var[8]  *Var[0]
                            Set   *Var[9]  *Var[2]
                        EndIf
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  1
    EndIf
    If  *Var[8]  !=  00000000
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Set   *Flag[00]  .False
    Call  GetOriginalActorType  ( *Var[0] *Var[A] )
    If  *Var[A]  ==  00000047 % 47
        Call  GetActorVar   ( *Var[0] 00000008 *Var[A] )
        If  *Var[A]  ==  00000001 % 1
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        If  *Flag[00]  ==  .False
            Call  GetEnemyMaxHP ( *Var[0] *Var[A] )
            Call  GetActorHP    ( *Var[0] *Var[B] )
            If  *Var[A]  !=  *Var[B]
                Set   *Var[8]  *Var[0]
                Goto  64
            EndIf
        EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  2
    EndIf
    Call  GetEnemyMaxHP ( .Actor:Self *Var[A] )
    Call  GetActorHP    ( .Actor:Self *Var[B] )
    If  *Var[A]  !=  *Var[B]
        Set   *Var[8]  FFFFFF81
        Goto  64
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  3
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOwnerID    ( *Var[A] )
    If  *Var[A]  !=  *Var[0]
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  .Actor:Enemy0 % 200
            ExecWait  $Script_ShapeSpell
        Else
            ExecWait  $Script_WandStrike
        EndIf
        Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF
        Goto  3
    EndIf
    ExecWait  $Script_RunAway
    Return
    Label  64
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_ShapeSpell
        Else
            ExecWait  $Script_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Thread
        Wait  5`
        Call  PlaySoundAtActor  ( *Var[8] 0000206D )
        Call  PlaySoundAtActor  ( *Var[8] 00000214 )
        Wait  30`
        Call  PlaySoundAtActor  ( *Var[8] 0000025C )
    EndThread
    Thread
        Call  8026BF48  ( 00000001 )
        Call  HealActor ( *Var[8] 00000005 .False )
        Call  8026BF48  ( 00000000 )
    EndThread
    Call  WaitForBuffDone ( )
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_HealAll
{
    Call  RandInt   ( 000003E8 *Var[0] )
    If  *Var[0]  >  000002EE
        Call  GetActorFlags ( .Actor:Self *Var[0] )
        If  *Var[0]  &  00000200
            ExecWait  $Script_ShapeSpell
        Else
            ExecWait  $Script_WandStrike
        EndIf
        Return
    EndIf
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseCamPreset      ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver ( 0000000F )
    Wait  15`
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
    EndIf
    Wait  5`
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
    Call  GetActorFlags     ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  00000006
            Add   *Var[1]  0000000C
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  00000010
            Add   *Var[1]  0000001F
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    Else
        Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  GetStatusFlags    ( .Actor:Self *Var[A] )
        If  *Var[A]  &  00080000
            Sub   *Var[0]  0000000C
            Add   *Var[1]  0000000E
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Else
            Sub   *Var[0]  0000001E
            Add   *Var[1]  00000024
            Sub   *Var[2]  00000002
            Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var[0] *Var[1] *Var[2] *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        EndIf
    EndIf
    Wait  30`
    Call  GetActorFlags ( .Actor:Self *Var[0] )
    If  *Var[0]  !&  00000200
        Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
    Else
        Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
    EndIf
    Wait  5`
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Thread
            Wait  5`
            Call  PlaySoundAtActor  ( *Var[0] 0000206D )
            Call  PlaySoundAtActor  ( *Var[0] 00000214 )
            Wait  30`
            Call  PlaySoundAtActor  ( *Var[0] 0000025C )
        EndThread
        Thread
            Call  8026BF48  ( 00000001 )
            Call  HealActor ( *Var[0] 00000003 .True )
            Call  8026BF48  ( 00000000 )
        EndThread
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Call  WaitForBuffDone ( )
    Wait  1`
    Call  UseCamPreset      ( 00000002 )
    Wait  10`
    Call  YieldTurn ( )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

% Origin: HINT
#new:Script $Script_TakeTurn_8021D894
{
    Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var[0] )
    If  *Var[0]  ==  00000001
        ExecWait  $Script_RunAway
        Return
    EndIf
    Set   *Var[A]  00000000
    Set   *Var[B]  00000000
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Set   *Flag[00]  .False
    Call  GetOwnerTarget        ( *Var[0] *Var[1] )
    Call  GetOriginalActorType  ( *Var[0] *Var[1] )
    If  *Var[1]  ==  00000047
        Call  GetActorVar   ( *Var[0] 00000008 *Var[1] )
        If  *Var[1]  ==  00000001
            Set   *Flag[00]  .True
        EndIf
    EndIf
    If  *Flag[00]  ==  .False
        Call  GetActorHP    ( *Var[0] *Var[2] )
        Call  GetEnemyMaxHP ( *Var[0] *Var[3] )
        If  *Var[2]  !=  *Var[3]
            Add   *Var[A]  00000001
        EndIf
        Add   *Var[B]  00000001
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var[0] )
    If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
        Goto  0
    EndIf
    Mul   *Var[A]  00000064
    Div   *Var[A]  *Var[B]
    Switch  *Var[A]
        Case  >=  0000003C
            ExecWait  $Script_HealAll
        Case  ==  00000000
            Call  GetActorFlags ( .Actor:Self *Var[0] )
            If  *Var[0]  &  00000200
                ExecWait  $Script_ShapeSpell
            Else
                ExecWait  $Script_WandStrike
            EndIf
        Default
            ExecWait  $Script_HealOne
    EndSwitch
    Return
    End
}

PADDING: 8021DB28 to 8021DB30 (0058A468 to 0058A470)
00000000 00000000

#new:Script $Script_8021DB30
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_8021DC48
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8021E1F4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  00000020
    Exec  $Script_8021DB30
    Set   *Var[0]  0000002B
    Exec  $Script_8021DB30
    Set   *Var[0]  00000035
    Exec  $Script_8021DC48
    Call  PlayEffect        ( ~FX:SunRays:RightCorner 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021E2C8
{
    Return
    End
}

#new:Stage $Stage_8021E2D8
{
    $ASCII_8021F7A8  % jan_tex
    $ASCII_8021F798  % jan_bt00_shape
    $ASCII_8021F788  % jan_bt00_hit
    $Script_BeforeBattle_8021E1F4
    $Script_AfterBattle_8021E2C8
    $ASCII_8021F780  % yos_bg
    00000000
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_8021E300
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_8021E418
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8021E9C4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt01:g18 00000000 )
    Thread
        Wait  5`
        Set   *Var[0]  00000009
        Exec  $Script_8021E418
        Wait  5`
        Set   *Var[0]  0000000A
        Exec  $Script_8021E418
        Wait  5`
        Set   *Var[0]  0000000B
        Exec  $Script_8021E418
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8021EA9C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021EAAC
{
    ~Model:jan_bt01:o85
    00000000
}

#new:Stage $Stage_8021EAB4
{
    $ASCII_8021F7D8  % jan_tex
    $ASCII_8021F7C8  % jan_bt01_shape
    $ASCII_8021F7B8  % jan_bt01_hit
    $Script_BeforeBattle_8021E9C4
    $Script_AfterBattle_8021EA9C
    $ASCII_8021F7B0  % yos_bg
    $ForegroundModelList_8021EAAC
    00000000
    00000000
    00000000
}

PADDING: 8021EADC to 8021EAE0 (0058B41C to 0058B420)
00000000

% Origin: HEURISTIC
#new:Script $Script_8021EAE0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_8021EBF8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_8021F1A4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt01:g17 00000000 )
    Thread
        Wait  5`
        Set   *Var[0]  00000009
        Exec  $Script_8021EBF8
        Wait  5`
        Set   *Var[0]  0000000A
        Exec  $Script_8021EBF8
        Wait  5`
        Set   *Var[0]  0000000B
        Exec  $Script_8021EBF8
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_8021F27C
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021F28C
{
    ~Model:jan_bt01:o85
    00000000
}

#new:Stage $Stage_8021F294
{
    $ASCII_8021F808  % jan_tex
    $ASCII_8021F7F8  % jan_bt01_shape
    $ASCII_8021F7E8  % jan_bt01_hit
    $Script_BeforeBattle_8021F1A4
    $Script_AfterBattle_8021F27C
    $ASCII_8021F7E0  % yos_bg
    $ForegroundModelList_8021F28C
    00000000
    00000000
    00000000
}

PADDING: 8021F2BC to 8021F2C0 (0058BBFC to 0058BC00)
00000000

#new:Script $Script_BeforeBattle_8021F2C0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021F2FC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021F30C
{
    ~Model:jan_bt02:o64
    ~Model:jan_bt02:o65
    ~Model:jan_bt02:o66
    00000000
}

#new:Stage $Stage_8021F31C
{
    $ASCII_8021F838  % jan_tex
    $ASCII_8021F828  % jan_bt02_shape
    $ASCII_8021F818  % jan_bt02_hit
    $Script_BeforeBattle_8021F2C0
    $Script_AfterBattle_8021F2FC
    $ASCII_8021F810  % yos_bg
    $ForegroundModelList_8021F30C
    00000000
    00000000
    00000000
}

PADDING: 8021F344 to 8021F350 (0058BC84 to 0058BC90)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8021F350
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt03:g2 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021F3A0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021F3B0
{
    ~Model:jan_bt03:o91
    ~Model:jan_bt03:o90
    ~Model:jan_bt03:o86
    00000000
}

#new:Stage $Stage_8021F3C0
{
    $ASCII_8021F868  % jan_tex
    $ASCII_8021F858  % jan_bt03_shape
    $ASCII_8021F848  % jan_bt03_hit
    $Script_BeforeBattle_8021F350
    $Script_AfterBattle_8021F3A0
    $ASCII_8021F840  % jan_bg
    $ForegroundModelList_8021F3B0
    00000000
    00000000
    00000000
}

PADDING: 8021F3E8 to 8021F3F0 (0058BD28 to 0058BD30)
00000000 00000000

#new:Script $Script_BeforeBattle_8021F3F0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt03:g39 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021F440
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021F450
{
    ~Model:jan_bt03:o91
    ~Model:jan_bt03:o90
    ~Model:jan_bt03:o86
    00000000
}

#new:Stage $Stage_8021F460
{
    $ASCII_8021F898  % jan_tex
    $ASCII_8021F888  % jan_bt03_shape
    $ASCII_8021F878  % jan_bt03_hit
    $Script_BeforeBattle_8021F3F0
    $Script_AfterBattle_8021F440
    $ASCII_8021F870  % jan_bg
    $ForegroundModelList_8021F450
    00000000
    00000000
    00000000
}

PADDING: 8021F488 to 8021F490 (0058BDC8 to 0058BDD0)
00000000 00000000

#new:Script $Script_BeforeBattle_8021F490
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt04:g111 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021F4E0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021F4F0
{
    ~Model:jan_bt04:o31
    00000000
}

#new:Stage $Stage_8021F4F8
{
    $ASCII_8021F8C8  % jan_tex
    $ASCII_8021F8B8  % jan_bt04_shape
    $ASCII_8021F8A8  % jan_bt04_hit
    $Script_BeforeBattle_8021F490
    $Script_AfterBattle_8021F4E0
    $ASCII_8021F8A0  % jan_bg
    $ForegroundModelList_8021F4F0
    00000000
    00000000
    00000000
}

#new:Script $Script_BeforeBattle_8021F520
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  SetGroupEnabled   ( ~Model:jan_bt04:g2 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_8021F570
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_8021F580
{
    ~Model:jan_bt04:o31
    00000000
}

#new:Stage $Stage_8021F588
{
    $ASCII_8021F8F8  % jan_tex
    $ASCII_8021F8E8  % jan_bt04_shape
    $ASCII_8021F8D8  % jan_bt04_hit
    $Script_BeforeBattle_8021F520
    $Script_AfterBattle_8021F570
    $ASCII_8021F8D0  % jan_bg
    $ForegroundModelList_8021F580
    00000000
    00000000
    00000000
}

#new:Formation $Formation_00
{
    $PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
    $PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000
    $PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000
    $WMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_8021F950 00000001 $Formation_00 $Stage_8021EAB4 00000000 % unused
    $SJIS_8021F93C 00000002 $Formation_01 $Stage_8021EAB4 00000000
    $SJIS_8021F928 00000003 $Formation_02 $Stage_8021EAB4 00000000 % unused
    $SJIS_8021F900 00000004 $Formation_03 $Stage_8021EAB4 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_8021F99C $Stage_8021E2D8
    $ASCII_8021F994 $Stage_8021EAB4
    $ASCII_8021F98C $Stage_8021F294
    $ASCII_8021F984 $Stage_8021F31C
    $ASCII_8021F97C $Stage_8021F3C0
    $ASCII_8021F974 $Stage_8021F460
    $ASCII_8021F96C $Stage_8021F4F8
    $ASCII_8021F964 $Stage_8021F588
    00000000 00000000
}

PADDING: 8021F774 to 8021F780 (0058C0B4 to 0058C0C0)
00000000 00000000 00000000

#new:ASCII $ASCII_8021F780
{
    "yos_bg"
}

#new:ASCII $ASCII_8021F788
{
    "jan_bt00_hit"
}

#new:ASCII $ASCII_8021F798
{
    "jan_bt00_shape"
}

#new:ASCII $ASCII_8021F7A8
{
    "jan_tex"
}

#new:ASCII $ASCII_8021F7B0
{
    "yos_bg"
}

#new:ASCII $ASCII_8021F7B8
{
    "jan_bt01_hit"
}

#new:ASCII $ASCII_8021F7C8
{
    "jan_bt01_shape"
}

#new:ASCII $ASCII_8021F7D8
{
    "jan_tex"
}

#new:ASCII $ASCII_8021F7E0
{
    "yos_bg"
}

#new:ASCII $ASCII_8021F7E8
{
    "jan_bt01_hit"
}

#new:ASCII $ASCII_8021F7F8
{
    "jan_bt01_shape"
}

#new:ASCII $ASCII_8021F808
{
    "jan_tex"
}

#new:ASCII $ASCII_8021F810
{
    "yos_bg"
}

#new:ASCII $ASCII_8021F818
{
    "jan_bt02_hit"
}

#new:ASCII $ASCII_8021F828
{
    "jan_bt02_shape"
}

#new:ASCII $ASCII_8021F838
{
    "jan_tex"
}

#new:ASCII $ASCII_8021F840
{
    "jan_bg"
}

#new:ASCII $ASCII_8021F848
{
    "jan_bt03_hit"
}

#new:ASCII $ASCII_8021F858
{
    "jan_bt03_shape"
}

#new:ASCII $ASCII_8021F868
{
    "jan_tex"
}

#new:ASCII $ASCII_8021F870
{
    "jan_bg"
}

#new:ASCII $ASCII_8021F878
{
    "jan_bt03_hit"
}

#new:ASCII $ASCII_8021F888
{
    "jan_bt03_shape"
}

#new:ASCII $ASCII_8021F898
{
    "jan_tex"
}

#new:ASCII $ASCII_8021F8A0
{
    "jan_bg"
}

#new:ASCII $ASCII_8021F8A8
{
    "jan_bt04_hit"
}

#new:ASCII $ASCII_8021F8B8
{
    "jan_bt04_shape"
}

#new:ASCII $ASCII_8021F8C8
{
    "jan_tex"
}

#new:ASCII $ASCII_8021F8D0
{
    "jan_bg"
}

#new:ASCII $ASCII_8021F8D8
{
    "jan_bt04_hit"
}

#new:ASCII $ASCII_8021F8E8
{
    "jan_bt04_shape"
}

#new:ASCII $ASCII_8021F8F8
{
    "jan_tex"
}

#new:SJIS $SJIS_8021F900
{
    ポイズンパックンx３,ホワイトカメック % poizunpakkunx3,howaitokamekku
}

#new:SJIS $SJIS_8021F928
{
    ポイズンパックンx３ % poizunpakkunx3
}

#new:SJIS $SJIS_8021F93C
{
    ポイズンパックンx２ % poizunpakkunx2
}

#new:SJIS $SJIS_8021F950
{
    ポイズンパックン % poizunpakkun
}

#new:ASCII $ASCII_8021F964
{
    "jan_04b"
}

#new:ASCII $ASCII_8021F96C
{
    "jan_04"
}

#new:ASCII $ASCII_8021F974
{
    "jan_03b"
}

#new:ASCII $ASCII_8021F97C
{
    "jan_03"
}

#new:ASCII $ASCII_8021F984
{
    "jan_02"
}

#new:ASCII $ASCII_8021F98C
{
    "jan_01b"
}

#new:ASCII $ASCII_8021F994
{
    "jan_01"
}

#new:ASCII $ASCII_8021F99C
{
    "jan_00"
}

PADDING: 8021F9A4 to 8021F9B0 (0058C2E4 to 0058C2F0)
00000000 00000000 00000000

