% Script File: 06 Area TRD Part 1.bscr
% Decoded from: 4A10A0 to 4B11F0 (06 Area TRD Part 1)

#new:Function $Function_80218000
{
	LIA       V0, $SpecialFormation_8021A4E8
	ADDIU     V1, R0, 1
	SW        V1, C (V0)
	LW        V1, 148 (A0)
	SW        V1, 10 (V0)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80218020
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 802180EC to 802180F0 (004A118C to 004A1190)
00000000

#new:Function $Function_802180F0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S0
	JAL       ~Func:start_rumble
	COPY      A1, V0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80218148
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        A0, 148 (S1)
	JAL       ~Func:get_actor
	COPY      S1, V0
	COPY      V1, V0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80218214 to 80218220 (004A12B4 to 004A12C0)
00000000 00000000 00000000

#new:Function $Function_80218220
{
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	COPY      S4, A0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S4)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        S1, 0 (S0)
	ADDIU     S0, S0, 4
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIO       AT, 40C90FD0
	MTC1      AT, F20
	LW        S3, 0 (S0)
	DIV.D     F0, F0, F2
	CVT.S.D   F30, F0
	MUL.S     F20, F30, F20
	NOP
	ADDIU     S0, S0, 4
	LW        S2, 0 (S0)
	LIF       F0, 360.0
	LW        S0, 4 (S0)
	DIV.S     F20, F20, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	LIF       F12, 8.0
	NOP
	MUL.S     F12, F20, F12
	NOP
	LIF       F28, 150.0
	NOP
	MUL.S     F22, F0, F28
	NOP
	MTC1      R0, F26
	JAL       ~Func:sin_rad
	ADD.S     F22, F22, F26
	LIF       F2, 10.0
	NOP
	MUL.S     F24, F0, F2
	NOP
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F26
	COPY      A0, S4
	MUL.S     F20, F0, F28
	NOP
	COPY      A1, S1
	MFC1      A2, F22
	LIF       F0, 20.0
	LIF       F2, -50.0
	DIV.S     F20, F20, F0
	JAL       ~Func:set_float_variable
	ADD.S     F20, F20, F2
	COPY      A0, S4
	MFC1      A2, F24
	JAL       ~Func:set_float_variable
	COPY      A1, S3
	COPY      A0, S4
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LIF       F0, 90.0
	NOP
	C.LT.S    F0, F30
	NOP
	BC1F      .o190
	CLEAR     A2
	LIF       F0, 270.0
	NOP
	C.LT.S    F30, F0
	NOP
	BC1TL     .o184
	ADDIU     A2, R0, B4
	.o184
	LIF       F0, 90.0
	NOP
	.o190
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o1CC
	NOP
	LIF       F0, 45.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o1CC
	LIF       F0, 270.0
	NOP
	SUB.S     F0, F0, F30
	ABS.S     F0, F0
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SLTI      V0, V0, 2D
	BEQ       V0, R0, .o224
	COPY      A0, S4
	LIF       F0, 225.0
	NOP
	SUB.S     F0, F30, F0
	ADD.S     F0, F0, F0
	LIF       F2, 180.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	MFC1      A2, F4
	.o224
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58
}

PADDING: 80218488 to 80218490 (004A1528 to 004A1530)
00000000 00000000

#new:Formation $Formation_00
{
    $KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
    $KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
    $KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
    $Bobomb 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
    $Bobomb 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
    $Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
    $Paratroopa 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
    $Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $Paratroopa 00000005 00000009 00000000 00000000 00000000 00000000
    $Paratroopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
    $Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
    $Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $Paratroopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
    $Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $Paratroopa 00000006 00000008 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
    $Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
    $Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000003 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
    $Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
    $Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
    $Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
    $Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
    $Bobomb 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
    $Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
    $Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
    $Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
    $KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
    $KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
    $Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
    $Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_80218B90
{
    50` 0` -20`
}

#new:Vector3D $Vector3D_80218B9C
{
    80` 0` 0`
}

#new:Vector3D $Vector3D_80218BA8
{
    110` 0` 20`
}

#new:Formation $Formation_17
{
    $BillBlaster $Vector3D_80218B90 0000000A 00000000 00000000 00000000 00000000
    $BillBlaster $Vector3D_80218B9C 00000009 00000000 00000000 00000000 00000000
    $BillBlaster $Vector3D_80218BA8 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
    $BulletBill 00000001 0000000A 00000000 00000000 00000000 00000000
    $BulletBill 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_19
{
    $BulletBill 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1A
{
    $BulletBill 00000000 0000000A 00000000 00000000 00000000 00000000
    $BulletBill 00000001 00000009 00000000 00000000 00000000 00000000
    $BulletBill 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
    $SJIS_80227E8C 00000001 $Formation_00 $Stage_80222B2C 00000000
    $SJIS_80227E80 00000002 $Formation_01 $Stage_80222B2C 00000000
    $SJIS_80227E74 00000003 $Formation_02 $Stage_80222B2C 00000000 % unused
    $SJIS_80227E60 00000002 $Formation_03 $Stage_80222B2C 00000000
    $SJIS_80227E4C 00000003 $Formation_04 $Stage_80222B2C 00000000
    $SJIS_80227E38 00000004 $Formation_05 $Stage_80222B2C 00000000
    $SJIS_80227E24 00000003 $Formation_06 $Stage_80222B2C 00000000 % unused
    $SJIS_80227E0C 00000004 $Formation_07 $Stage_80222B2C 00000000
    $SJIS_80227E00 00000002 $Formation_08 $Stage_80222B2C 00000000
    $SJIS_80227DF4 00000003 $Formation_09 $Stage_80222B2C 00000000 % unused
    $SJIS_80227DE0 00000002 $Formation_0A $Stage_80222B2C 00000000
    $SJIS_80227DC4 00000003 $Formation_0B $Stage_80222B2C 00000000 % unused
    $SJIS_80227DA0 00000004 $Formation_0C $Stage_80222B2C 00000000 % unused
    $SJIS_80227D88 00000003 $Formation_0D $Stage_80222B2C 00000000
    $SJIS_80227D70 00000004 $Formation_0E $Stage_80222B2C 00000000 % unused
    $SJIS_80227D64 00000001 $Formation_0F $Stage_80222B2C 00000000 % unused
    $SJIS_80227D58 00000002 $Formation_10 $Stage_80222B2C 00000000
    $SJIS_80227D4C 00000003 $Formation_11 $Stage_80222B2C 00000000 % unused
    $SJIS_80227D40 00000004 $Formation_12 $Stage_80222B2C 00000000 % unused
    $SJIS_80227D2C 00000002 $Formation_13 $Stage_80222B2C 00000000 % unused
    $SJIS_80227D18 00000003 $Formation_14 $Stage_80222B2C 00000000 % unused
    $SJIS_80227D04 00000003 $Formation_15 $Stage_80222B2C 00000000 % unused
    $SJIS_80227E4C 00000003 $Formation_16 $Stage_80222B2C 00000000 % unused
    $SJIS_80227CF0 00000003 $Formation_17 $Stage_80222B2C 00000000
    $SJIS_80227CE4 00000002 $Formation_18 $Stage_80222B2C 00000000 % unused
    $SJIS_80227CDC 00000001 $Formation_19 $Stage_80222B2C 00000000 % unused
    $SJIS_80227CD0 00000003 $Formation_1A $Stage_80222B2C 00000000
    00000000 00000000 00000000 00000000 00000000 % unused
}

#new:StageTable $StageTable
{
    $ASCII_80227F00 $Stage_80224BC4
    $ASCII_80227EF8 $Stage_80222B2C
    $ASCII_80227EF0 $Stage_80223330
    $ASCII_80227EE8 $Stage_80223B50
    $ASCII_80227EE0 $Stage_80224C6C
    $ASCII_80227ED8 $Stage_80225430
    $ASCII_80227ED0 $Stage_80223FC0
    $ASCII_80227EC8 $Stage_80224338
    $ASCII_80227EC0 $Stage_80224B40
    $ASCII_80227EB8 $Stage_80225C38
    $ASCII_80227EB0 $Stage_80226480
    $ASCII_80227EA8 $Stage_80226CC8
    $ASCII_80227EA0 $Stage_802274A0
    $ASCII_80227E98 $Stage_80227C9C
    00000000 00000000
}

PADDING: 80218F58 to 80218F60 (004A1FF8 to 004A2000)
00000000 00000000

#new:DefenseTable $DefenseTable_80218F60
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_80218F6C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen    100`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink    100`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80219018
{
    00800000 01000000 001000FF $IdleAnimations_80219064 $DefenseTable_80218F60 00000400 00000000 00FA0000 00000000
}

#new:Actor $BulletBill
{
    % stats
    [Index]         Fb
    [Level]         5`b
    [MaxHP]         2`b
    [Coins]         0`b
    [Flags]       00000200
    [StatusTable] $StatusTable_80218F6C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_80219018
    [Script]      $Script_Init_80219088
    % move effectiveness
    [Escape]       50`b
    [Item]          0`b
    [AirLift]     100`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  85`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  22`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219064
{
    .Status:Normal    002D0001
    .Status:Stone     002D0000
    .Status:Stop      002D0000
    .Status:Paralyze  002D0000
    .Status:End
}

#new:Script $Script_Init_80219088
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802197C0 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80219380 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802193E8 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    If  *Var[0]  ==  00000000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  00000010
        Call  SetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  ForceHomePos  ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  HPBarToHome   ( .Actor:Self )
    Else
        Call  GetActorVar       ( .Actor:Self 00000001 *Var[0] )
        Call  GetActorPos       ( *Var[0] *Var[1] *Var[2] *Var[3] )
        Call  GetStatusFlags    ( *Var[0] *Var[4] )
        If  *Var[4]  &  00080000
            Set   *Var[5]  FFFFFFF3
            Set   *Var[6]  00000004
        Else
            Set   *Var[5]  FFFFFFDF
            Set   *Var[6]  0000000B
        EndIf
        Add   *Var[1]  *Var[5]
        Add   *Var[2]  *Var[6]
        Call  SetActorPos   ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  CopyStatusEffects     ( *Var[0] .Actor:Self )
        Call  CopyBuffs     ( *Var[0] .Actor:Self )
        Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
        Call  GetActorPos   ( *Var[0] *Var[1] *Var[B] *Var[C] )
        Sub   *Var[1]  0000005A
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
        Call  SetAnimation  ( .Actor:Self 00000001 002D0003 )
        Call  SetGoalPos    ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Call  SetAnimation  ( .Actor:Self 00000001 002D0001 )
        Call  ForceHomePos  ( .Actor:Self *Var[1] *Var[2] *Var[3] )
        Call  HPBarToHome   ( .Actor:Self )
    EndIf
    Return
    End
}

#new:Script $Script_Idle_80219380
{
    Return
    End
}

#new:Script $Script_80219390
{
    ExecWait  $Script_80219BE0
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  002D0007
    Set   *Var[2]  FFFFCFC7
    ExecWait  DoDeath
    Return
    End
}

#new:Script $Script_HandleEvent_802193E8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0005
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0005
            ExecWait  DoNormalHit
        Case  ==  .Event:BurnHit % E
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:BurnDeath % 24
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:SpinSmashHit % B
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:SpinSmashDeath % 21
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0005
            ExecWait  DoShockHit
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0005
            ExecWait  DoShockHit
            ExecWait  $Script_80219390
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0005
            ExecWait  DoNormalHit
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:ExplodeTrigger % 22
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0001
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0005
            ExecWait  DoNormalHit
            ExecWait  $Script_80219390
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002D0003
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_802197C0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002D0004 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  15`
    Call  8024E664  ( 00000013 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000002 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Set   *Var[3]  *Var[1]
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Set   *Var[1]  *Var[3]
            Sub   *Var[0]  0000005A
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000012 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  8027D32C      ( FFFFFF81 )
            Call  UseIdleAnimation  ( .Actor:Self .False )
            Call  RemoveActor   ( .Actor:Self )
            Return
        EndCaseGroup
    EndSwitch
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  *Var[1]
    Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
    Set   *Var[1]  *Var[3]
    Add   *Var[0]  0000000A
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 0000000C .False .True .False )
    ExecWait  $Script_80219BE0
    Call  SetGoalToTarget       ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget     ( .Actor:Self *Var[0] ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000020 )
    Call  UseCamPreset  ( 00000002 )
    Call  YieldTurn ( )
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  002D0007
    Set   *Var[2]  FFFFCFC7
    ExecWait  DoDeath
    Return
    End
}

#new:Script $Script_80219BE0
{
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000002
    Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Add   *Var[1]  00000010
    Add   *Var[2]  00000002
    Call  PlayEffect    ( ~FX:FaintDustCloud *Var[0] *Var[1] *Var[2] *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00002078 )
    Call  StartRumble   ( 0000000B )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[1.0] )
    EndThread
    Return
    End
}

PADDING: 80219D14 to 80219D20 (004A2DB4 to 004A2DC0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80219D20
{
    .Element:Normal 00000001
    .Element:End
}

#new:StatusTable $StatusTable_80219D2C
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen    100`
    .Status:Dizzy       0`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze    0`
    .Status:Shrink     50`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_80219DD8
{
    00020000 01000000 FA1D00FF $IdleAnimations_80219E48 $DefenseTable_80219D20 00000000 00000000 00F70000 00000000
    80800001 02640000 961D00FF $IdleAnimations_80219E48 $DefenseTable_80219D20 00000000 00000000 00F70000 00000000
}

#new:Actor $BillBlaster
{
    % stats
    [Index]        10b
    [Level]        10`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80219D2C
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_80219DD8
    [Script]      $Script_Init_80219E6C
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]      20`b
    [Hurricane]    15`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     4`b % weight (0-4)
    % ui positions
    [Size]         55`b  32`b % width height
    [HealthBar]     8`b   0`b % dx dy
    [StatusTurn]  -24`b  20`b % dx dy
    [StatusIcon]    5`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219E48
{
    .Status:Normal    002E0001
    .Status:Stone     002E0000
    .Status:Stop      002E0000
    .Status:Paralyze  002E0000
    .Status:End
}

#new:Script $Script_Init_80219E6C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A200 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80219ED0 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219EE0 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_Idle_80219ED0
{
    Return
    End
}

#new:Script $Script_HandleEvent_80219EE0
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            SetConst  *Var[2]  FFFFFFFF
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0001
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0001
            ExecWait  DoRecover
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002E0003
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021A200
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            ExecWait  $Script_8021A2BC
        Case  ==  00000001
            ExecWait  $Script_8021A470
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_8021A2BC
{
    Call  SetAnimation  ( .Actor:Self 00000001 002E0002 )
    Wait  13`
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[1.0] )
    EndThread
    Call  StartRumble   ( 00000009 )
    Call  PlaySoundAtActor  ( .Actor:Self 000002C8 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000021
    Add   *Var[1]  00000013
    Add   *Var[2]  00000003
    Call  PlayEffect    ( ~FX:BigSteamPuff *Var[0] *Var[1] *Var[2] 00000002 00000005 00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlayEffect    ( ~FX:BigSteamPuff *Var[0] *Var[1] *Var[2] 00000002 00000005 00000002 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  2`
    Call  $Function_80218000 ( )
    Call  SummonEnemy   ( $SpecialFormation_8021A4E8 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
    Return
    End
}

#new:Script $Script_8021A470
{
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
    Call  ActorExists   ( *Var[0] *Var[1] )
    If  *Var[1]  ==  .False
        Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    EndIf
    Return
    End
}

#new:Vector3D $Vector3D_8021A4DC
{
    0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A4E8
{
    $BulletBill $Vector3D_8021A4DC 00000064 00000000 00000000 00000000 00000000
}

PADDING: 8021A504 to 8021A510 (004A35A4 to 004A35B0)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021A510
{
    .Status:Normal    002C0002
    .Status:Stone     002C0000
    .Status:Sleep     002C0018
    .Status:Poison    002C0004
    .Status:Stop      002C0000
    .Status:Static    002C0002
    .Status:Paralyze  002C0000
    .Status:Dizzy     002C001C
    .Status:Fear      002C001C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021A55C
{
    .Status:Normal    002C0005
    .Status:Stone     002C0001
    .Status:Sleep     002C0018
    .Status:Poison    002C0005
    .Status:Stop      002C0001
    .Status:Static    002C0003
    .Status:Paralyze  002C0001
    .Status:Dizzy     002C001D
    .Status:Fear      002C001D
    .Status:End
}

#new:DefenseTable $DefenseTable_8021A5A8
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021A5B4
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      75`
    .Status:Poison      0`
    .Status:Frozen    100`
    .Status:Dizzy      80`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   80`
    .Status:Shrink     90`
    .Status:Stop       90`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021A660
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep       0`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy      40`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze   40`
    .Status:Shrink      0`
    .Status:Stop        0`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021A70C
{
    00800000 01000000 001800FF $IdleAnimations_8021A510 $DefenseTable_8021A5A8 00000200 00000000 00F70000 00000000
}

#new:Actor $Bobomb
{
    % stats
    [Index]         Db
    [Level]         6`b
    [MaxHP]         3`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021A5B4
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021A70C
    [Script]      $Script_Init_8021A758
    % move effectiveness
    [Escape]       70`b
    [Item]         90`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         34`b  35`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021A758
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C89C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021A7D4 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ACE8 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Idle_8021A7D4
{
    Return
    End
}

#new:Script $Script_Ignite
{
    Call  GetStatusFlags    ( .Actor:Self *Var[0] )
    If  *Var[0]  &  0035D000
        Return
    EndIf
    Label  0
    Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A55C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B4A8 )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00008000 .True )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021A660 )
    Call  80253974      ( FFFFFF81 00000000 80000001 )
    Call  SetAnimation  ( .Actor:Self 00000001 002C0005 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] 00000000 *Var[2] )
    Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
    Call  8026ED20      ( FFFFFF81 00000001 00000001 )
    Call  8026EBF8      ( FFFFFF81 00000001 00000000 00000002 00000000 0000000A 00000000 0000000A 00000000 00000000 )
    Call  8026EA7C      ( FFFFFF81 00000001 0000000F )
    Wait  3`
    Call  80253A18      ( FFFFFF81 00000000 )
    Return
    End
}

#new:Script $Script_8021A9C8
{
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ACE8 )
    Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A510 )
    Call  SetPartEventBits  ( .Actor:Self 00000001 00008000 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021A5B4 )
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000002
    Call  PlayEffect        ( ~FX:Steam:FloatingRings *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  80253A18  ( FFFFFF81 00000000 )
    Call  8026ED20  ( FFFFFF81 00000001 00000000 )
    Return
    End
}

#new:Script $Script_8021AAE8
{
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000001
        Call  80253A18  ( FFFFFF81 00000000 )
        Call  8026ED20  ( FFFFFF81 00000001 00000000 )
    EndIf
    Return
    End
}

#new:Script $Script_8021AB54
{
    ExecWait  $Script_8021AAE8
    Call  StartRumble   ( 0000000B )
    Thread
        Call  ShakeCam  ( .Cam:Battle 00000000 00000002 *Fixed[0.75] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
        Call  ShakeCam  ( .Cam:Battle 00000000 0000000A *Fixed[4.5] )
        Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[3.0] )
    EndThread
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[2]  00000002
    Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Add   *Var[1]  00000014
    Add   *Var[2]  00000002
    Call  PlayEffect    ( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self .Sound:BombBlast )
    Return
    End
}

#new:Script $Script_HandleEvent_8021ACE8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  GetLastDamage ( .Actor:Self *Var[0] )
            If  *Var[0]  !=  00000000 % 0
                Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            EndIf
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C000E
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[E] )
            If  *Var[E]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C0010
                SetConst  *Var[2]  002C0011
                ExecWait  DoBurnHit
                ExecWait  $Script_8021AB54
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C0011
                Set   *Var[2]  FFFFCFC7
                ExecWait  DoDeath
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C000E
                ExecWait  DoNormalHit
                Call  GetLastDamage ( .Actor:Self *Var[0] )
                If  *Var[0]  !=  00000000
                    ExecWait  $Script_Ignite
                EndIf
            EndIf
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0010
            SetConst  *Var[2]  002C0011
            ExecWait  DoBurnHit
            ExecWait  $Script_8021AB54
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0011
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        EndCaseGroup
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C000E
            ExecWait  DoSpinSmashHit
            Call  GetLastDamage ( .Actor:Self *Var[0] )
            If  *Var[0]  !=  00000000
                ExecWait  $Script_Ignite
            EndIf
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C000E
            ExecWait  DoSpinSmashHit
            ExecWait  $Script_8021AAE8
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C000E
            ExecWait  DoDeath
            Return
        CaseOR  ==  .Event:ShockHit % 2F
        CaseOR  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0010
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0002
            ExecWait  DoImmune
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0002
            ExecWait  DoImmune
            Call  GetActorVar   ( .Actor:Self 00000000 *Var[0] )
            If  *Var[0]  ==  00000001
                ExecWait  $Script_Ignite
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[E] )
            If  *Var[E]  &  00000020
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C0010
                SetConst  *Var[2]  002C0011
                ExecWait  DoBurnHit
                ExecWait  $Script_8021AB54
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C0011
                Set   *Var[2]  FFFFCFC7
                ExecWait  DoDeath
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C000E
                ExecWait  DoNormalHit
                Wait  10`
                ExecWait  $Script_8021AAE8
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C000E
                ExecWait  DoDeath
            EndIf
            Return
        Case  ==  .Event:ExplodeTrigger % 22
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0010
            SetConst  *Var[2]  002C0011
            ExecWait  DoBurnHit
            ExecWait  $Script_8021AB54
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0011
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0006
            SetConst  *Var[2]  002C000E
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C001C
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C001C
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_HandleEvent_8021B4A8
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  GetLastElement    ( *Var[E] )
            If  *Var[E]  &  00000004
                ExecWait  $Script_8021A9C8
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C000E
                ExecWait  DoNormalHit
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C000F
                ExecWait  DoNormalHit
            EndIf
        Case  ==  .Event:Hit % A
            Call  GetLastElement    ( *Var[E] )
            Switch  *Var[E]
                Case  &  00000004
                    ExecWait  $Script_8021A9C8
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  002C000E
                    ExecWait  DoNormalHit
                Case  &  00000020
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  002C0010
                    ExecWait  DoNormalHit
                    ExecWait  $Script_8021AB54
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  002C0011
                    Set   *Var[2]  FFFFCFC7
                    ExecWait  DoDeath
                    Return
                Default
                    SetConst  *Var[0]  00000001
                    SetConst  *Var[1]  002C000F
                    ExecWait  DoNormalHit
                    Call  GetLastDamage ( .Actor:Self *Var[0] )
                    If  *Var[0]  >  00000000
                        ExecWait  $Script_8021AB54
                        SetConst  *Var[0]  00000001
                        SetConst  *Var[1]  002C0011
                        Set   *Var[2]  FFFFCFC7
                        ExecWait  DoDeath
                        Return
                    EndIf
            EndSwitch
        CaseOR  ==  .Event:BurnHit % E
        CaseOR  ==  .Event:BurnDeath % 24
        CaseOR  ==  .Event:SpinSmashHit % B
        CaseOR  ==  .Event:SpinSmashDeath % 21
        CaseOR  ==  .Event:ExplodeTrigger % 22
            ExecWait  $Script_8021AB54
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0011
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        EndCaseGroup
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0003
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            Call  GetLastElement    ( *Var[E] )
            If  *Var[E]  &  00000004
                ExecWait  $Script_8021A9C8
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C000E
            Else
                ExecWait  $Script_8021AB54
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C0011
                Set   *Var[2]  FFFFCFC7
            EndIf
            ExecWait  DoDeath
            Return
        CaseOR  ==  .Event:ShockHit % 2F
        CaseOR  ==  .Event:ShockDeath % 26
            ExecWait  $Script_8021AB54
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0011
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        EndCaseGroup
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0003
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            ExecWait  $Script_8021AAE8
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C0006
            SetConst  *Var[2]  002C000E
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002C001D
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  80269E80  ( *Var[0] )
            If  *Var[0]  ==  00000014
                ExecWait  $Script_8021A9C8
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C001C
            Else
                ChildThread
                    Wait  100`
                    ExecWait  $Script_8021AB54
                EndChildThread
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  002C001D
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:UpAndAway % 3D
            ExecWait  $Script_8021A9C8
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TackleAttack
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000001 002C0006 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000032 00000000 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  SetAnimation      ( .Actor:Self 00000001 002C0002 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 002C0006 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000005
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 002C001C )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000014
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000000F
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  8`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  YieldTurn ( )
            Call  UseCamPreset  ( 00000002 )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 002C0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 002C0002 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Return
        EndCaseGroup
        Case  ==  .HitResult:HitStatic % 7
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
            Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
            Call  SetAnimation      ( .Actor:Self 00000001 002C0014 )
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  GetActorSize      ( .Actor:Self *Var[3] *Var[4] )
            Call  PlayEffect        ( ~FX:ShockVolume *Var[0] *Var[1] *Var[2] *Var[4] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Call  PlaySoundAtActor  ( .Actor:Self 0000037B )
            Wait  20`
            ExecWait  $Script_8021AB54
            Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:Blast 00000000 00000000 00000002 00000020 )
            Return
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
    Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Call  SetAnimation      ( .Actor:Self 00000001 002C0002 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Wait  4`
            Call  YieldTurn ( )
            Call  SetAnimation  ( .Actor:Self 00000001 002C0006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 002C0002 )
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:Script $Script_BlastAttack
{
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  80253974  ( FFFFFF81 00000000 80000001 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetTargetActor        ( .Actor:Self .Actor:Player )
            Call  SetAnimation  ( .Actor:Self 00000001 002C0007 )
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000050 00000000 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetActorRotationOffset    ( .Actor:Self FFFFFFFF 0000000E 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 0000005A )
            Call  SetAnimation  ( .Actor:Self 00000001 002C0007 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            ExecWait  $Script_8021AB54
            Call  SetAnimation  ( .Actor:Self 00000001 002C0011 )
            Wait  10`
            If  *Var[A]  ==  00000005
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  10`
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  FFFFFFFF
            Set   *Var[2]  FFFFCFC7
            ExecWait  DoDeath
            Return
        EndCaseGroup
    EndSwitch
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation  ( .Actor:Self 00000001 002C0007 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos    ( .Actor:Self 0000000A 00000000 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
    Call  RunToGoal     ( .Actor:Self 00000000 .False )
    Call  SetAnimation  ( .Actor:Self 00000001 002C0014 )
    Wait  15`
    Set   *Var[A]  00000001
    ExecWait  $Script_8021AB54
    Call  SetAnimation  ( .Actor:Self 00000001 002C0011 )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] 10000200 00000000 00000000 00000002 00000020 )
    Call  UseCamPreset  ( 00000002 )
    Wait  15`
    SetConst  *Var[0]  00000001
    SetConst  *Var[1]  002C0011
    Set   *Var[2]  FFFFCFC7
    ExecWait  DoDeath
    Return
    End
}

#new:Script $Script_TakeTurn_8021C89C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
    If  *Var[0]  ==  00000000
        ExecWait  $Script_TackleAttack
    Else
        ExecWait  $Script_BlastAttack
        Return
    EndIf
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

PADDING: 8021C954 to 8021C960 (004A59F4 to 004A5A00)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021C960
{
    .Element:Normal 00000001
    .Element:Hammer 00000001
    .Element:Jump   00000001
    .Element:Water  00000001
    .Element:Blast  00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8021C98C
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021C998
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     60`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   90`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021CA44
{
    00800000 01000000 FE2400FF $IdleAnimations_8021CA90 $DefenseTable_8021C960 00001000 00000000 00F90000 00000000
}

#new:Actor $KoopaTroopa
{
    % stats
    [Index]         Bb
    [Level]         6`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021C998
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021CA44
    [Script]      $Script_Init_8021CB74
    % move effectiveness
    [Escape]       70`b
    [Item]         90`b
    [AirLift]      90`b
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  36`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -15`b  32`b % dx dy
    [StatusIcon]    5`b  32`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021CA90
{
    .Status:Normal    00290101
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290101
    .Status:Stop      00290100
    .Status:Static    00290101
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CADC
{
    .Status:Normal    00290103
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290103
    .Status:Stop      00290100
    .Status:Static    00290103
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021CB28
{
    .Status:Normal    0029010F
    .Status:Stone     00290110
    .Status:Sleep     00290112
    .Status:Poison    0029010F
    .Status:Stop      00290110
    .Status:Static    0029010F
    .Status:Paralyze  00290110
    .Status:Dizzy     00290114
    .Status:Fear      00290114
    .Status:End
}

#new:Script $Script_Init_8021CB74
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DD9C )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021CD30 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D218 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_8021CBD8
{
    Switch  *Var[0]
        Case  ==  00000000
            If  *Var[1]  &  00041000
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Call  $Function_80218020    ( FFFFFFF6 00000014 0000000A 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  $Function_80218020    ( FFFFFFF1 00000020 00000005 00000020 )
            EndIf
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  $Function_80218020    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_8021CD30
{
    Label  0
    Call  RandInt   ( 00000050 *Var[A] )
    Add   *Var[A]  00000050
    Loop  *Var[A]
        Label  1
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021CBD8
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  1
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CADC )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28 )
    EndSwitch
    Loop  00000014
        Label  2
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021CBD8
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  2
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CADC )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28 )
    EndSwitch
    Loop  00000050
        Label  3
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021CBD8
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  3
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  3
        EndIf
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_8021D1C0
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021D218
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C98C )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            ChildThread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndChildThread
            UseIntBuffer  $IntTable_8021D1C0
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290107
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000
                    Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                ExecWait  DoReturnHome
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoRecover
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                SetConst  *Var[2]  0029010B
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021DD9C
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Sub   *Var[0]  00000001
            If  *Var[0]  >  00000000
                Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  30`
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Else
                Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  20`
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
                Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
                Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
                Set   *Var[0]  00000000
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                ChildThread
                    Loop  00000005
                        Add   *Var[0]  0000000F
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                        Wait  1`
                    EndLoop
                EndChildThread
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
                Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C960 )
                Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
                Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndIf
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
        Wait  10`
        ChildThread
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000004
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndChildThread
        Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
        Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
        Wait  10`
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  UseCamPreset      ( 00000005 )
                Call  SetBattleCamZoom  ( 0000012C )
                Call  SetBattleCamOffsetZ   ( 00000014 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Wait  4`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Wait  6`
            Sub   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetPartYaw    ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:DefenseTable $DefenseTable_8021EAD0
{
    .Element:Normal 00000001
    .Element:Hammer 00000001
    .Element:Jump   00000001
    .Element:Water  00000001
    .Element:Blast  00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8021EAFC
{
    .Element:Normal 00000001
    .Element:End
}

#new:DefenseTable $DefenseTable_8021EB08
{
    .Element:Normal 00000000
    .Element:End
}

#new:StatusTable $StatusTable_8021EB14
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     60`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   90`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:StatusTable $StatusTable_8021EBC0
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      90`
    .Status:Poison     60`
    .Status:Frozen    100`
    .Status:Dizzy      90`
    .Status:Fear        0`
    .Status:Static     80`
    .Status:Paralyze   90`
    .Status:Shrink     90`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      1`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   1`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_8021EC6C
{
    00020001 01000000 FE2400FF $IdleAnimations_80220AA0 $DefenseTable_8021EAD0 00001000 00000000 00F90000 00000000
    00800000 02000000 FC2400FF $IdleAnimations_8021ED00 $DefenseTable_8021EAFC 00004000 00000000 02F20000 00000000
    00020001 03000000 002000FF $IdleAnimations_8021ED98 $DefenseTable_8021EAD0 00000000 00000000 00F60000 00000000
}

#new:Actor $Paratroopa
{
    % stats
    [Index]         Cb
    [Level]         6`b
    [MaxHP]         4`b
    [Coins]         1`b
    [Flags]       00000200
    [StatusTable] $StatusTable_8021EBC0
    % ai
    [PartsCount]    3`s
    [PartsTable]  $PartsTable_8021EC6C
    [Script]      $Script_Init_8021EE0C
    % move effectiveness
    [Escape]       60`b
    [Item]         90`b
    [AirLift]      95`b
    [Hurricane]   100`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce]  90`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         50`b  38`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  29`b % dx dy
    [StatusIcon]    8`b  30`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021ED00
{
    .Status:Normal    002A0101
    .Status:Stone     002A0100
    .Status:Sleep     002A0112
    .Status:Poison    002A0100
    .Status:Stop      002A0100
    .Status:Static    002A0101
    .Status:Paralyze  002A0100
    .Status:Dizzy     002A0113
    .Status:Fear      002A0113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021ED4C
{
    .Status:Normal    002A0101
    .Status:Stone     002A0100
    .Status:Sleep     002A0112
    .Status:Poison    002A0100
    .Status:Stop      002A0100
    .Status:Static    002A0101
    .Status:Paralyze  002A0100
    .Status:Dizzy     002A0113
    .Status:Fear      002A0113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_8021ED98
{
    .Status:Normal    002A010F
    .Status:Stone     002A0100
    .Status:Sleep     002A0112
    .Status:Poison    002A0100
    .Status:Stop      002A0100
    .Status:Static    002A010F
    .Status:Paralyze  002A0100
    .Status:Dizzy     002A0113
    .Status:Fear      002A0113
    .Status:End
}

#new:Script $Script_NextTurn_8021EDE4
{
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_Init_8021EE0C
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021FA24 )
    Call  BindIdle      ( .Actor:Self $Script_Idle_8021EF5C )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F2EC )
    Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021EDE4 )
    Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
    Return
    End
}

#new:Script $Script_8021EE84
{
    If  *Var[1]  &  00041000
        Call  SetTargetOffset       ( .Actor:Self 00000002 00000000 00000019 )
        Call  8027D4C8  ( FFFFFF81 00000002 00000003 FFFFFFFA )
        Call  $Function_80218148    ( FFFFFFED 00000019 00000004 0000001C )
    Else
        Call  SetTargetOffset       ( .Actor:Self 00000002 FFFFFFFE 00000024 )
        Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF9 )
        Call  $Function_80218148    ( FFFFFFF6 0000001D 00000008 0000001E )
    EndIf
    Return
    End
}

#new:Script $Script_Idle_8021EF5C
{
    Label  A
    Call  RandInt   ( 00000050 *Var[0] )
    Add   *Var[0]  00000050
    Loop  *Var[0]
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021EE84
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021ED4C )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021ED00 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021EE84
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021ED4C )
    Call  SetIdleGoal       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleFlyToGoal     ( .Actor:Self 00000000 FFFFFFFB .Easing:Linear )
    Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021ED00 )
    Loop  00000028
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_8021EE84
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_8021F26C
{
    Call  SetAnimation  ( .Actor:Self 00000002 002A0103 )
    Call  SetGoalToHome ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
    Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
    Return
    End
}

#new:Script $Script_HandleEvent_8021F2EC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        Case  ==  .Event:HitCombo % 9
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
        Case  ==  .Event:Hit % A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_802204DC
                EndIf
            EndIf
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0108
            SetConst  *Var[2]  002A0109
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0108
            SetConst  *Var[2]  002A0109
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0109
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FallTrigger % C
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
            ExecWait  $Script_802204DC
        Case  ==  0000000F % F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002A0108
            SetConst  *Var[1]  002A0109
            ExecWait  DoBurnHit
            ExecWait  $Script_802204DC
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002A0107
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  002A0106
            ExecWait  DoJumpBack
            ExecWait  $Script_8021F26C
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0106
            ExecWait  DoDeath
            Return
        Case  ==  00000017 % 17
            Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A010B
            ExecWait  DoImmune
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A010B
            ExecWait  DoImmune
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001
                Call  GetEncounterState ( *Var[0] )
                If  *Var[0]  ==  00000004
                    ExecWait  $Script_802204DC
                EndIf
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0106
            ExecWait  DoDeath
            Return
        Case  ==  .Event:BeginFirstStrike % 38
            Call  SetActorPos       ( .Actor:Self 00000014 00000000 00000000 )
            Call  HPBarToCurrent    ( .Actor:Self )
        Case  ==  .Event:EndFirstStrike % 35
            ExecWait  $Script_8021F26C
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0101
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0103
            SetConst  *Var[2]  002A0107
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0103
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var[0]  00000002
            SetConst  *Var[1]  002A0107
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_8021FA24
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  UseCamPreset      ( 00000005 )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  SetAnimation      ( .Actor:Self 00000002 002A0103 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self 00000028 0000001E 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
    Call  FlyToGoal ( .Actor:Self 00000000 FFFFFFF0 .Easing:Linear )
    Call  8024E664  ( 00000001 )
    Wait  5`
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  AddGoalPos    ( .Actor:Self 00000006 00000006 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
            Wait  6`
            Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
            Call  GetActorPos   ( .Actor:Player *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000019
            Set   *Var[1]  00000000
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
            Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Set   *Var[0]  00000000
                Loop  00000008
                    Add   *Var[0]  0000005A
                    If  *Var[0]  >=  00000168
                        Sub   *Var[0]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  0000001E
            Call  SetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Wait  20`
            Call  UseCamPreset      ( 00000002 )
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
            Call  SetActorYaw       ( .Actor:Self 000000B4 )
            ExecWait  $Script_8021F26C
            Call  SetActorYaw       ( .Actor:Self 00000000 )
            Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
            Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  AddGoalPos    ( .Actor:Self 00000006 00000006 00000000 )
    Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
    Wait  6`
    Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
    Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
    Call  FlyToGoal     ( .Actor:Self 00000000 00000000 .Easing:Linear )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos    ( .Actor:Self 00000028 0000001E 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000002 002A010D )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
                Set   *Var[0]  00000000
                Loop  0000000C
                    Sub   *Var[0]  0000005A
                    If  *Var[0]  <  00000000
                        Add   *Var[0]  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
                Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
            EndThread
            Call  FlyToGoal ( .Actor:Self 00000000 0000001E .Easing:Linear )
            Wait  10`
            Call  YieldTurn ( )
            Call  ResetAllActorSounds   ( .Actor:Self )
            ExecWait  $Script_8021F26C
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_802204DC
{
    Call  SetPartDispOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
    Call  8027D32C      ( FFFFFF81 )
    Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
    Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
    Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000008
    Sub   *Var[2]  00000002
    Call  SetPartPos    ( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation  ( .Actor:Self 00000001 0029010B )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000000 *Var[A] )
    If  *Var[A]  ==  00000000
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        Call  $Function_802180F0    ( 00000080 00000007 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
        EndThread
        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Loop  0000000A
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
            Wait  1`
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
            Wait  1`
        EndLoop
        Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
    Else
        Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  00000000
        Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
        Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
        Call  JumpToGoal    ( .Actor:Self 0000000F .False .True .False )
        Thread
            Loop  0000000A
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
                Wait  1`
                Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
                Wait  1`
            EndLoop
            Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
        EndThread
        Call  $Function_802180F0    ( 00000096 00000007 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.3] )
        EndThread
        Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
    EndIf
    Call  GetIndexFromHome  ( .Actor:Self *Var[0] )
    Mod   *Var[0]  00000004
    Call  SetGoalToIndex    ( .Actor:Self *Var[0] )
    Call  GetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetHomePos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
    Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
    Call  SetStatusTable    ( .Actor:Self $StatusTable_8021EB14 )
    Call  BindNextTurn      ( .Actor:Self 00000000 )
    ExecWait  $Script_80220B84
    Call  SetActorType      ( .Actor:Self 0000000B )
    Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
    Call  HPBarToHome       ( .Actor:Self )
    Call  ResetAllActorSounds   ( .Actor:Self )
    If  *Var[A]  !=  00000000
        Call  DispatchEvent ( .Actor:Self .Event:FlipTrigger )
    EndIf
    Return
    End
}

#new:IdleAnimations $IdleAnimations_80220AA0
{
    .Status:Normal    00290101
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290101
    .Status:Stop      00290100
    .Status:Static    00290101
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80220AEC
{
    .Status:Normal    00290103
    .Status:Stone     00290100
    .Status:Sleep     00290111
    .Status:Poison    00290103
    .Status:Stop      00290100
    .Status:Static    00290103
    .Status:Paralyze  00290100
    .Status:Dizzy     00290113
    .Status:Fear      00290113
    .Status:End
}

#new:IdleAnimations $IdleAnimations_80220B38
{
    .Status:Normal    0029010F
    .Status:Stone     00290110
    .Status:Sleep     00290112
    .Status:Poison    0029010F
    .Status:Stop      00290110
    .Status:Static    0029010F
    .Status:Paralyze  00290110
    .Status:Dizzy     00290114
    .Status:Fear      00290114
    .Status:End
}

#new:Script $Script_80220B84
{
    Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221DAC )
    Call  BindIdle      ( .Actor:Self $Script_Idle_80220D40 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221228 )
    Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
    Return
    End
}

#new:Script $Script_80220BE8
{
    Switch  *Var[0]
        Case  ==  00000000
            If  *Var[1]  &  00041000
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
                Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
                Call  $Function_80218148    ( FFFFFFF6 00000014 0000000A 00000014 )
            Else
                Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  $Function_80218148    ( FFFFFFF1 00000020 00000005 00000020 )
            EndIf
        Case  ==  00000001
            Call  SetTargetOffset       ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  $Function_80218148    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_80220D40
{
    Label  0
    Call  RandInt   ( 00000050 *Var[A] )
    Add   *Var[A]  00000050
    Loop  *Var[A]
        Label  1
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80220BE8
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  1
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AEC )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AA0 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220B38 )
    EndSwitch
    Loop  00000014
        Label  2
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80220BE8
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  2
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Sub   *Var[0]  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AEC )
    Call  SetIdleGoal   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Call  IdleRunToGoal ( .Actor:Self 00000000 )
    Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AA0 )
        Case  ==  00000001
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220B38 )
    EndSwitch
    Loop  00000050
        Label  3
        Call  GetActorVar       ( .Actor:Self 00000008 *Var[0] )
        Call  GetStatusFlags    ( .Actor:Self *Var[1] )
        ExecWait  $Script_80220BE8
        If  *Var[0]  ==  00000001
            Wait  1`
            Goto  3
        EndIf
        If  *Var[1]  &  0035D000
            Wait  1`
            Goto  3
        EndIf
        Wait  1`
    EndLoop
    Goto  0
    Return
    End
}

#new:IntTable $IntTable_802211D0
{
    00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
    0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
    00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80221228
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetActorYaw       ( .Actor:Self 00000000 )
    Call  GetLastEvent      ( .Actor:Self *Var[0] )
    Switch  *Var[0]
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010C
            SetConst  *Var[2]  0029010D
            ExecWait  DoBurnHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010D
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoSpinSmashHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:FlipTrigger % D
            Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
            Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
            Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021EB08 )
            Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220B38 )
            Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 0000000F )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
            Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
            Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
            Call  GetStatusFlags    ( .Actor:Self *Var[A] )
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
            ChildThread
                Wait  4`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
                Wait  1`
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
                Wait  1`
            EndChildThread
            UseIntBuffer  $IntTable_802211D0
            Loop  00000016
                Get1Int  *Var[0]
                Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var[0] 00000000 )
                Wait  1`
            EndLoop
            Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoShockHit
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290107
                ExecWait  DoImmune
                Call  GetStatusFlags    ( .Actor:Self *Var[0] )
                If  *Var[0]  !&  0035D000
                    Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
                    Wait  10`
                EndIf
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  0029010B
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                ExecWait  DoReturnHome
            EndIf
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetHomePos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoRecover
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:ScareAway % 39
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290104
                SetConst  *Var[2]  0029010B
                ExecWait  DoScareAway
                Return
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
        Case  ==  .Event:BeginAirLift % 3A
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290117
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
            EndIf
            ExecWait  DoBlowAway
            Return
        Case  ==  .Event:AirLiftFailed % 1F
            Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
            If  *Var[0]  ==  00000000
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  00290101
                ExecWait  DoImmune
            Else
                SetConst  *Var[0]  00000001
                SetConst  *Var[1]  0029010F
                ExecWait  DoImmune
            EndIf
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_80221DAC
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  GetBattlePhase    ( *Var[0] )
    If  *Var[0]  ==  00000001
        Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
    Else
        Call  GetActorVar   ( .Actor:Self 00000008 *Var[0] )
        If  *Var[0]  ==  00000001
            Call  GetActorVar   ( .Actor:Self 00000009 *Var[0] )
            Sub   *Var[0]  00000001
            If  *Var[0]  >  00000000
                Call  SetActorVar   ( .Actor:Self 00000009 *Var[0] )
                Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  30`
                Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Else
                Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
                Wait  20`
                Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
                Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
                Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
                Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
                Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
                Set   *Var[0]  00000000
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
                ChildThread
                    Loop  00000005
                        Add   *Var[0]  0000000F
                        Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var[0] )
                        Wait  1`
                    EndLoop
                EndChildThread
                Call  GetActorPos       ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetGoalPos        ( .Actor:Self *Var[0] *Var[1] *Var[2] )
                Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
                Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
                Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
                Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
                Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AA0 )
                Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021EAD0 )
                Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFC 00000020 )
                Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
                Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
                Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
            EndIf
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndIf
        Call  UseCamPreset  ( 0000003F )
        Call  BattleCamTargetActor  ( .Actor:Self )
        Wait  10`
        Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
        Wait  10`
        ChildThread
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000004
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  3`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
            Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndChildThread
        Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
        Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
        Wait  10`
        Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    EndIf
    Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *Var[A]  *Var[0]
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  AddGoalPos        ( .Actor:Self FFFFFFD8 00000000 00000000 )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
            Call  RunToGoal ( .Actor:Self 00000000 .False )
            Call  GetBattlePhase    ( *Var[0] )
            If  *Var[0]  ==  00000001 % 1
                Call  UseCamPreset      ( 00000005 )
                Call  SetBattleCamZoom  ( 0000012C )
                Call  SetBattleCamOffsetZ   ( 00000014 )
                Call  MoveBattleCamOver ( 0000000A )
                Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  ResetAllActorSounds   ( .Actor:Self )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Wait  4`
            If  *Var[A]  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var[0] ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
            Wait  1`
            Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
            Call  GetActorPos   ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Wait  6`
            Sub   *Var[1]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
            Call  UseCamPreset  ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw   ( .Actor:Self 000000B4 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self 00000000 .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetPartYaw    ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self 00000000 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
    Call  RunToGoal ( .Actor:Self 00000000 .False )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var[0] ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
    Switch  *Var[0]
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  00000002 % 2
            Call  UseCamPreset  ( 00000002 )
            Call  GetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000028
            Set   *Var[1]  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
            Add   *Var[0]  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000008 .False .True .False )
            Add   *Var[0]  00000014
            Call  SetGoalPos    ( .Actor:Self *Var[0] *Var[1] *Var[2] )
            Call  JumpToGoal    ( .Actor:Self 00000006 .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
            Wait  8`
            Call  YieldTurn ( )
            SetConst  *Var[0]  00000001
            SetConst  *Var[1]  00290104
            ExecWait  DoReturnHome
            Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_BeforeBattle_80222AE0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80222B1C
{
    Return
    End
}

#new:Stage $Stage_80222B2C
{
    $ASCII_80227F28  % trd_tex
    $ASCII_80227F18  % trd_bt01_shape
    $ASCII_80227F08  % trd_bt01_hit
    $Script_BeforeBattle_80222AE0
    $Script_AfterBattle_80222B1C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80222B54 to 80222B60 (004ABBF4 to 004ABC00)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80222B60
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80222C78
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80223224
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel       ( ~Model:trd_bt02:kabe2_2 .False )
    Thread
        Set   *Var[0]  00000013
        Exec  $Script_80222C78
        Wait  5`
        Set   *Var[0]  00000011
        Exec  $Script_80222C78
        Wait  5`
        Set   *Var[0]  0000000F
        Exec  $Script_80222C78
        Wait  5`
        Set   *Var[0]  0000000D
        Exec  $Script_80222C78
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80223318
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80223328
{
    ~Model:trd_bt02:saku
    00000000
}

#new:Stage $Stage_80223330
{
    $ASCII_80227F50  % trd_tex
    $ASCII_80227F40  % trd_bt02_shape
    $ASCII_80227F30  % trd_bt02_hit
    $Script_BeforeBattle_80223224
    $Script_AfterBattle_80223318
    00000000
    $ForegroundModelList_80223328
    00000000
    00000000
    00000000
}

PADDING: 80223358 to 80223360 (004AC3F8 to 004AC400)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80223360
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80223478
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80223A24
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt02:saku .False )
    Call  EnableModel   ( ~Model:trd_bt02:kiwa .False )
    Call  EnableModel   ( ~Model:trd_bt02:tyuu .False )
    Thread
        Set   *Var[0]  00000013
        Exec  $Script_80223478
        Wait  5`
        Set   *Var[0]  00000011
        Exec  $Script_80223478
        Wait  5`
        Set   *Var[0]  0000000F
        Exec  $Script_80223478
        Wait  5`
        Set   *Var[0]  0000000D
        Exec  $Script_80223478
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80223B40
{
    Return
    End
}

#new:Stage $Stage_80223B50
{
    $ASCII_80227F78  % trd_tex
    $ASCII_80227F68  % trd_bt02_shape
    $ASCII_80227F58  % trd_bt02_hit
    $Script_BeforeBattle_80223A24
    $Script_AfterBattle_80223B40
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80223B78 to 80223B80 (004ACC18 to 004ACC20)
00000000 00000000

#new:Script $Script_80223B80
{
    Set   *Var[A]  *Var[0]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218220    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80223C78
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218220    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[1]  *Var[B]
    AddF  *Var[2]  *Var[C]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80223DB0
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[3]
    Set   *Var[C]  *Var[4]
    Set   *Var[D]  *Var[5]
    Set   *Var[7]  *Var[2]
    Mul   *Var[7]  0000000A
    Label  0
    Add   *Var[7]  00000004
    If  *Var[7]  >  00000E0F
        Sub   *Var[7]  00000E10
    EndIf
    Call  $Function_80218220    ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
    AddF  *Var[0]  *Var[B]
    AddF  *Var[1]  *Var[C]
    AddF  *Var[2]  *Var[D]
    Call  TranslateModel        ( *Var[A] *Var[0] *Var[1] *Var[2] )
    Call  RotateModel   ( *Var[A] *Var[3] 00000000 00000001 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_BeforeBattle_80223F08
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Set   *Var[0]  00000004
    Set   *Var[2]  00000000
    Exec  $Script_80223B80
    Set   *Var[0]  00000002
    Set   *Var[2]  00000046
    Set   *Var[3]  000000AF
    Set   *Var[4]  FFFFFF56
    Exec  $Script_80223C78
    Return
    End
}

#new:Script $Script_AfterBattle_80223FA0
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80223FB0
{
    ~Model:trd_bt03:saku
    ~Model:trd_bt03:kabe2
    ~Model:trd_bt03:kabe
    00000000
}

#new:Stage $Stage_80223FC0
{
    $ASCII_80227FA8  % trd_tex
    $ASCII_80227F98  % trd_bt03_shape
    $ASCII_80227F88  % trd_bt03_hit
    $Script_BeforeBattle_80223F08
    $Script_AfterBattle_80223FA0
    $ASCII_80227F80  % nok_bg
    $ForegroundModelList_80223FB0
    00000000
    00000000
    00000000
}

PADDING: 80223FE8 to 80223FF0 (004AD088 to 004AD090)
00000000 00000000

#new:Script $Script_80223FF0
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802240C0
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 *Var[0] 00000000 )
        Call  SetTexPanOffset   ( *Var[A] 00000001 *Var[1] 00000000 )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802241AC
{
    Set   *Var[A]  *Var[1]
    Set   *Var[B]  *Var[2]
    Set   *Var[C]  *Var[3]
    Call  SetTexPanner  ( *Var[0] *Var[1] )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        Call  SetTexPanOffset   ( *Var[A] 00000000 00000000 *Var[0] )
        Call  SetTexPanOffset   ( *Var[A] 00000001 00000000 *Var[1] )
        Add   *Var[0]  *Var[B]
        Add   *Var[1]  *Var[C]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80224298
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  0000000D
    Set   *Var[1]  00000000
    Set   *Var[2]  00000028
    Set   *Var[3]  00000000
    Exec  $Script_80223FF0
    Return
    End
}

#new:Script $Script_AfterBattle_80224320
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80224330
{
    ~Model:trd_bt04:hikari1
    00000000
}

#new:Stage $Stage_80224338
{
    $ASCII_80227FD0  % trd_tex
    $ASCII_80227FC0  % trd_bt04_shape
    $ASCII_80227FB0  % trd_bt04_hit
    $Script_BeforeBattle_80224298
    $Script_AfterBattle_80224320
    00000000
    $ForegroundModelList_80224330
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_80224360
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80224478
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80224A24
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Thread
        Set   *Var[0]  0000001B
        Exec  $Script_80224478
        Wait  5`
        Set   *Var[0]  00000019
        Exec  $Script_80224478
    EndThread
    Thread
        Set   *Var[0]  00000006
        Exec  $Script_80224478
        Wait  5`
        Set   *Var[0]  00000004
        Exec  $Script_80224478
        Wait  5`
        Set   *Var[0]  00000002
        Exec  $Script_80224478
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80224B30
{
    Return
    End
}

#new:Stage $Stage_80224B40
{
    $ASCII_80228000  % trd_tex
    $ASCII_80227FF0  % trd_bt05_shape
    $ASCII_80227FE0  % trd_bt05_hit
    $Script_BeforeBattle_80224A24
    $Script_AfterBattle_80224B30
    $ASCII_80227FD8  % nok_bg
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80224B68 to 80224B70 (004ADC08 to 004ADC10)
00000000 00000000

#new:Script $Script_BeforeBattle_80224B70
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor     ( .Cam:Battle 00000000 00000000 00000000 )
    Return
    End
}

#new:Script $Script_AfterBattle_80224BAC
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80224BBC
{
    ~Model:trd_bt00:p1
    00000000
}

#new:Stage $Stage_80224BC4
{
    $ASCII_80228028  % trd_tex
    $ASCII_80228018  % trd_bt00_shape
    $ASCII_80228008  % trd_bt00_hit
    $Script_BeforeBattle_80224B70
    $Script_AfterBattle_80224BAC
    00000000
    $ForegroundModelList_80224BBC
    00000000
    00000000
    00000000
}

PADDING: 80224BEC to 80224BF0 (004ADC8C to 004ADC90)
00000000

#new:Script $Script_BeforeBattle_80224BF0
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt02:dai .False )
    Call  EnableModel   ( ~Model:trd_bt02:kusari1 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80224C54
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80224C64
{
    ~Model:trd_bt02:saku
    00000000
}

#new:Stage $Stage_80224C6C
{
    $ASCII_80228050  % trd_tex
    $ASCII_80228040  % trd_bt02_shape
    $ASCII_80228030  % trd_bt02_hit
    $Script_BeforeBattle_80224BF0
    $Script_AfterBattle_80224C54
    00000000
    $ForegroundModelList_80224C64
    00000000
    00000000
    00000000
}

PADDING: 80224C94 to 80224CA0 (004ADD34 to 004ADD40)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80224CA0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80224DB8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80225364
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt02:mizu .False )
    Call  EnableModel   ( ~Model:trd_bt02:mizu2 .False )
    Call  EnableModel   ( ~Model:trd_bt02:o298 .False )
    Call  EnableModel   ( ~Model:trd_bt02:o297 .False )
    Call  EnableModel   ( ~Model:trd_bt02:kiwa .False )
    Call  EnableModel   ( ~Model:trd_bt02:tyuu .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80225418
{
    Return
    End
}

#new:ForegroundModelList $ForegroundModelList_80225428
{
    ~Model:trd_bt02:saku
    00000000
}

#new:Stage $Stage_80225430
{
    $ASCII_80228078  % trd_tex
    $ASCII_80228068  % trd_bt02_shape
    $ASCII_80228058  % trd_bt02_hit
    $Script_BeforeBattle_80225364
    $Script_AfterBattle_80225418
    00000000
    $ForegroundModelList_80225428
    00000000
    00000000
    00000000
}

PADDING: 80225458 to 80225460 (004AE4F8 to 004AE500)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80225460
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80225578
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80225B24
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:kai .False )
    Call  EnableModel   ( ~Model:trd_bt05:kusari1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80225C28
{
    Return
    End
}

#new:Stage $Stage_80225C38
{
    $ASCII_802280A0  % trd_tex
    $ASCII_80228090  % trd_bt05_shape
    $ASCII_80228080  % trd_bt05_hit
    $Script_BeforeBattle_80225B24
    $Script_AfterBattle_80225C28
    00000000
    00000000
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_80225C60
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_80225D78
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80226324
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:yuka3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hako .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Set   *Var[0]  0000001B
    Exec  $Script_80225D78
    Thread
        Set   *Var[0]  00000006
        Exec  $Script_80225D78
        Wait  5`
        Set   *Var[0]  00000004
        Exec  $Script_80225D78
        Wait  5`
        Set   *Var[0]  00000002
        Exec  $Script_80225D78
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80226470
{
    Return
    End
}

#new:Stage $Stage_80226480
{
    $ASCII_802280C8  % trd_tex
    $ASCII_802280B8  % trd_bt05_shape
    $ASCII_802280A8  % trd_bt05_hit
    $Script_BeforeBattle_80226324
    $Script_AfterBattle_80226470
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802264A8 to 802264B0 (004AF548 to 004AF550)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802264B0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_802265C8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80226B74
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:yuka3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hako .False )
    Call  EnableModel   ( ~Model:trd_bt05:kai .False )
    Call  EnableModel   ( ~Model:trd_bt05:kusari1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hikari2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
    Thread
        Set   *Var[0]  00000006
        Exec  $Script_802265C8
        Wait  5`
        Set   *Var[0]  00000004
        Exec  $Script_802265C8
        Wait  5`
        Set   *Var[0]  00000002
        Exec  $Script_802265C8
    EndThread
    Return
    End
}

#new:Script $Script_AfterBattle_80226CB8
{
    Return
    End
}

#new:Stage $Stage_80226CC8
{
    $ASCII_802280F0  % trd_tex
    $ASCII_802280E0  % trd_bt05_shape
    $ASCII_802280D0  % trd_bt05_hit
    $Script_BeforeBattle_80226B74
    $Script_AfterBattle_80226CB8
    00000000
    00000000
    00000000
    00000000
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_80226CF0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80226E08
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_802273B4
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80227490
{
    Return
    End
}

#new:Stage $Stage_802274A0
{
    $ASCII_80228118  % trd_tex
    $ASCII_80228108  % trd_bt05_shape
    $ASCII_802280F8  % trd_bt05_hit
    $Script_BeforeBattle_802273B4
    $Script_AfterBattle_80227490
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 802274C8 to 802274D0 (004B0568 to 004B0570)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802274D0
{
    Set   *Var[A]  *Var[0]
    Label  0
    Call  RotateGroup   ( *Var[A] 00000002 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
    Wait  5`
    Call  RotateGroup   ( *Var[A] 00000001 00000000 00000000 00000001 )
    Wait  5`
    Call  RandInt       ( 0000001E *Var[0] )
    Add   *Var[0]  0000001E
    Wait  *Var[0]
    Goto  0
    Return
    End
}

#new:Script $Script_802275E8
{
    Set   *Var[A]  *Var[0]
    Loop
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFD 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000003 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFE 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000002 FFFFFFFF 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000001 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000001 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  2`
        Call  TranslateModel    ( *Var[A] FFFFFFFF 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
        Wait  1`
        Call  TranslateModel    ( *Var[A] 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Return
    End
}

#new:Script $Script_BeforeBattle_80227B94
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamBGColor ( .Cam:Battle 00000000 00000000 00000000 )
    Set   *Var[0]  0000001B
    Exec  $Script_802275E8
    Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
    Call  EnableModel   ( ~Model:trd_bt05:ori .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
    Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
    Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
    Call  EnableModel   ( ~Model:trd_bt05:hako .False )
    Return
    End
}

#new:Script $Script_AfterBattle_80227C8C
{
    Return
    End
}

#new:Stage $Stage_80227C9C
{
    $ASCII_80228140  % trd_tex
    $ASCII_80228130  % trd_bt05_shape
    $ASCII_80228120  % trd_bt05_hit
    $Script_BeforeBattle_80227B94
    $Script_AfterBattle_80227C8C
    00000000
    00000000
    00000000
    00000000
    00000000
}

PADDING: 80227CC4 to 80227CD0 (004B0D64 to 004B0D70)
00000000 00000000 00000000

#new:SJIS $SJIS_80227CD0
{
    キラーx３ % kira-x3
}

#new:SJIS $SJIS_80227CDC
{
    キラー % kira-
}

#new:SJIS $SJIS_80227CE4
{
    キラーx２ % kira-x2
}

#new:SJIS $SJIS_80227CF0
{
    キラーたいほうx３ % kira-taihoux3
}

#new:SJIS $SJIS_80227D04
{
    ボムへい,ノコノコx2 % bomuhei,nokonokox2
}

#new:SJIS $SJIS_80227D18
{
    ボムへいx2,ノコノコ % bomuheix2,nokonoko
}

#new:SJIS $SJIS_80227D2C
{
    ボムへい,ノコノコ % bomuhei,nokonoko
}

#new:SJIS $SJIS_80227D40
{
    ボムへいx4 % bomuheix4
}

#new:SJIS $SJIS_80227D4C
{
    ボムへいx3 % bomuheix3
}

#new:SJIS $SJIS_80227D58
{
    ボムへいx2 % bomuheix2
}

#new:SJIS $SJIS_80227D64
{
    ボムへい % bomuhei
}

#new:SJIS $SJIS_80227D70
{
    パタパタ,ボムヘイx３ % patapata,bomuheix3
}

#new:SJIS $SJIS_80227D88
{
    パタパタ,ボムヘイx２ % patapata,bomuheix2
}

#new:SJIS $SJIS_80227DA0
{
    パタパタ,ノコノコ,パタパタ,ノコノコ % patapata,nokonoko,patapata,nokonoko
}

#new:SJIS $SJIS_80227DC4
{
    パタパタ,ノコノコ,パタパタ % patapata,nokonoko,patapata
}

#new:SJIS $SJIS_80227DE0
{
    パタパタ,ノコノコ % patapata,nokonoko
}

#new:SJIS $SJIS_80227DF4
{
    パタパタx３ % patapatax3
}

#new:SJIS $SJIS_80227E00
{
    パタパタx２ % patapatax2
}

#new:SJIS $SJIS_80227E0C
{
    ノコノコx2,ボムへいx2 % nokonokox2,bomuheix2
}

#new:SJIS $SJIS_80227E24
{
    ノコノコx2,ボムへい % nokonokox2,bomuhei
}

#new:SJIS $SJIS_80227E38
{
    ノコノコ,ボムへいx3 % nokonoko,bomuheix3
}

#new:SJIS $SJIS_80227E4C
{
    ノコノコ,ボムへいx2 % nokonoko,bomuheix2
}

#new:SJIS $SJIS_80227E60
{
    ノコノコ,ボムへい % nokonoko,bomuhei
}

#new:SJIS $SJIS_80227E74
{
    ノコノコx3 % nokonokox3
}

#new:SJIS $SJIS_80227E80
{
    ノコノコx2 % nokonokox2
}

#new:SJIS $SJIS_80227E8C
{
    ノコノコ % nokonoko
}

#new:ASCII $ASCII_80227E98
{
    "trd_05f"
}

#new:ASCII $ASCII_80227EA0
{
    "trd_05e"
}

#new:ASCII $ASCII_80227EA8
{
    "trd_05d"
}

#new:ASCII $ASCII_80227EB0
{
    "trd_05c"
}

#new:ASCII $ASCII_80227EB8
{
    "trd_05b"
}

#new:ASCII $ASCII_80227EC0
{
    "trd_05"
}

#new:ASCII $ASCII_80227EC8
{
    "trd_04"
}

#new:ASCII $ASCII_80227ED0
{
    "trd_03"
}

#new:ASCII $ASCII_80227ED8
{
    "trd_02d"
}

#new:ASCII $ASCII_80227EE0
{
    "trd_02c"
}

#new:ASCII $ASCII_80227EE8
{
    "trd_02b"
}

#new:ASCII $ASCII_80227EF0
{
    "trd_02"
}

#new:ASCII $ASCII_80227EF8
{
    "trd_01"
}

#new:ASCII $ASCII_80227F00
{
    "trd_00"
}

#new:ASCII $ASCII_80227F08
{
    "trd_bt01_hit"
}

#new:ASCII $ASCII_80227F18
{
    "trd_bt01_shape"
}

#new:ASCII $ASCII_80227F28
{
    "trd_tex"
}

#new:ASCII $ASCII_80227F30
{
    "trd_bt02_hit"
}

#new:ASCII $ASCII_80227F40
{
    "trd_bt02_shape"
}

#new:ASCII $ASCII_80227F50
{
    "trd_tex"
}

#new:ASCII $ASCII_80227F58
{
    "trd_bt02_hit"
}

#new:ASCII $ASCII_80227F68
{
    "trd_bt02_shape"
}

#new:ASCII $ASCII_80227F78
{
    "trd_tex"
}

#new:ASCII $ASCII_80227F80
{
    "nok_bg"
}

#new:ASCII $ASCII_80227F88
{
    "trd_bt03_hit"
}

#new:ASCII $ASCII_80227F98
{
    "trd_bt03_shape"
}

#new:ASCII $ASCII_80227FA8
{
    "trd_tex"
}

#new:ASCII $ASCII_80227FB0
{
    "trd_bt04_hit"
}

#new:ASCII $ASCII_80227FC0
{
    "trd_bt04_shape"
}

#new:ASCII $ASCII_80227FD0
{
    "trd_tex"
}

#new:ASCII $ASCII_80227FD8
{
    "nok_bg"
}

#new:ASCII $ASCII_80227FE0
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80227FF0
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80228000
{
    "trd_tex"
}

#new:ASCII $ASCII_80228008
{
    "trd_bt00_hit"
}

#new:ASCII $ASCII_80228018
{
    "trd_bt00_shape"
}

#new:ASCII $ASCII_80228028
{
    "trd_tex"
}

#new:ASCII $ASCII_80228030
{
    "trd_bt02_hit"
}

#new:ASCII $ASCII_80228040
{
    "trd_bt02_shape"
}

#new:ASCII $ASCII_80228050
{
    "trd_tex"
}

#new:ASCII $ASCII_80228058
{
    "trd_bt02_hit"
}

#new:ASCII $ASCII_80228068
{
    "trd_bt02_shape"
}

#new:ASCII $ASCII_80228078
{
    "trd_tex"
}

#new:ASCII $ASCII_80228080
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80228090
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_802280A0
{
    "trd_tex"
}

#new:ASCII $ASCII_802280A8
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_802280B8
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_802280C8
{
    "trd_tex"
}

#new:ASCII $ASCII_802280D0
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_802280E0
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_802280F0
{
    "trd_tex"
}

#new:ASCII $ASCII_802280F8
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80228108
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80228118
{
    "trd_tex"
}

#new:ASCII $ASCII_80228120
{
    "trd_bt05_hit"
}

#new:ASCII $ASCII_80228130
{
    "trd_bt05_shape"
}

#new:ASCII $ASCII_80228140
{
    "trd_tex"
}

PADDING: 80228148 to 80228150 (004B11E8 to 004B11F0)
00000000 00000000

