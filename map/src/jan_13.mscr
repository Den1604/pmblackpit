% Script File: jan_13.mscr
% Decoded from: 0 to 38A0 (jan_13)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFB8
	SW        S1, 14 (SP)
	LIA       S1, $???_80240850
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LHU       V0, 0 (S1)
	LAD       F0, $ConstDouble_80243880
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	CVT.D.S   F12, F12
	MUL.D     F12, F12, F0
	NOP
	JAL       ~Func:sin_rad
	CVT.S.D   F12, F12
	LHU       V0, 0 (S1)
	LAD       F22, $ConstDouble_80243888
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	CVT.D.S   F12, F12
	MUL.D     F12, F12, F22
	NOP
	LIF       F26, 1.0
	NOP
	ADD.S     F20, F0, F26
	LAD       F24, $ConstDouble_80243890
	CVT.D.S   F20, F20
	MUL.D     F20, F20, F24
	NOP
	LAD       F0, $ConstDouble_80243898
	ADD.D     F20, F20, F0
	JAL       ~Func:sin_rad
	CVT.S.D   F12, F12
	ADD.S     F0, F0, F26
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F22
	NOP
	ADD.D     F20, F20, F0
	LUI       S3, 1
	CVT.S.D   F20, F20
	CVT.D.S   F0, F20
	MUL.D     F0, F0, F24
	NOP
	ORI       S3, S3, 1630
	LIA       S2, 8009A674
	LIA       S0, 800741F0
	LIF       F3, 1.75
	MTC1      R0, F2
	LHU       A0, 0 (S0)
	LW        V0, 0 (S2)
	SLL       A0, A0, 6
	ADD.D     F0, F0, F2
	ADDU      A0, A0, S3
	ADDU      A0, V0, A0
	CVT.S.D   F0, F0
	MFC1      A1, F0
	MFC1      A2, F20
	JAL       ~Func:guScale
	COPY      A3, A1
	LUI       A1, DA38
	LIA       A0, 8009A66C
	ORI       A1, A1, 1
	LW        V0, 0 (A0)
	LHU       V1, 0 (S0)
	COPY      A2, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (A0)
	ADDIU     V0, V1, 1
	ANDI      V1, V1, FFFF
	SLL       V1, V1, 6
	ADDU      V1, V1, S3
	SW        A1, 0 (A2)
	SH        V0, 0 (S0)
	LW        V0, 0 (S2)
	LHU       A0, 0 (S1)
	ADDU      V0, V0, V1
	ADDIU     A0, A0, 1
	SW        V0, 4 (A2)
	SH        A0, 0 (S1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_802401AC
{
	LWC1      F2, 88 (A0)
	CVT.S.W   F2, F2
	LIF       F4, 100.0
	LIF       F6, 1024.0
	DIV.S     F2, F2, F4
	MUL.S     F2, F2, F6
	NOP
	LWC1      F0, 88 (A0)
	CVT.S.W   F0, F0
	DIV.S     F0, F0, F4
	MUL.S     F0, F0, F6
	NOP
	LIO       AT, CD5B5858
	MTC1      AT, F4
	NOP
	ADD.S     F2, F2, F4
	ADD.S     F0, F0, F4
	TRUNC.W.S F8, F2
	SWC1      F8, 8C (A0)
	TRUNC.W.S F8, F0
	SWC1      F8, 90 (A0)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80240214
{
	ADDIU     SP, SP, FFD8
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S0, 18 (SP)
	LW        S0, C (S1)
	LW        V0, 0 (S0)
	BEQ       V0, R0, .o8C
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	SW        V0, 70 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	SW        V0, 74 (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      A0, S1
	ADDIU     A0, R0, 4E
	CLEAR     A1
	LWC1      F0, 70 (S1)
	CVT.S.W   F0, F0
	LWC1      F2, 74 (S1)
	CVT.S.W   F2, F2
	MFC1      A2, F0
	MFC1      A3, F2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SW        V0, 78 (S1)
	JAL       801499EC
	SWC1      F0, 10 (SP)
	.o8C
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_802402B8
{
	ADDIU     SP, SP, FFD0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S1, 84 (S2)
	LW        V0, 88 (S2)
	LW        S0, 8C (S2)
	SLTI      V0, V0, FF9D
	BNEL      V0, R0, .oAC
	ADDIU     S0, S0, 19
	LIA       V0, 8010EFC8
	LWC1      F20, 80 (V0)
	LIF       F0, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F2
	DIV.S     F20, F20, F0
	MUL.S     F20, F20, F2
	NOP
	LIF       F22, 25.0
	JAL       ~Func:sin_rad
	MOV.S     F12, F20
	MUL.S     F0, F0, F22
	NOP
	MOV.S     F12, F20
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	JAL       ~Func:cos_rad
	SUBU      S1, S1, V0
	NEG.S     F0, F0
	MUL.S     F0, F0, F22
	NOP
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	NOP
	SUBU      S0, S0, V0
	.oAC
	SW        S1, 84 (S2)
	SW        S0, 8C (S2)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80240390
{
	ADDIU     SP, SP, FFD0
	SDC1      F20, 18 (SP)
	MTC1      A1, F20
	SDC1      F22, 20 (SP)
	MTC1      A2, F22
	SW        S0, 10 (SP)
	SDC1      F24, 28 (SP)
	MTC1      A3, F24
	SW        RA, 14 (SP)
	JAL       ~Func:guMtxIdentF
	COPY      S0, A0
	MUL.S     F22, F20, F22
	NOP
	MUL.S     F20, F20, F24
	NOP
	LIF       F0, 1.0
	NOP
	SWC1      F0, 14 (S0)
	SWC1      F22, 10 (S0)
	SWC1      F20, 18 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 28 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80240400
{
	ADDIU     SP, SP, FF78
	SW        S1, 54 (SP)
	COPY      S1, A0
	SW        RA, 5C (SP)
	SW        S2, 58 (SP)
	SW        S0, 50 (SP)
	SDC1      F28, 80 (SP)
	SDC1      F26, 78 (SP)
	SDC1      F24, 70 (SP)
	SDC1      F22, 68 (SP)
	SDC1      F20, 60 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	JAL       ~Func:get_model_list_index_from_tree_index
	COPY      A0, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S2
	JAL       ~Func:get_model_from_list_index
	MOV.S     F24, F0
	COPY      S1, V0
	LHU       V0, 0 (S1)
	ANDI      V0, V0, 400
	BNE       V0, R0, .o124
	ADDIU     S0, S1, 58
	MTC1      R0, F20
	MFC1      A2, F22
	MFC1      A1, F20
	MFC1      A3, F20
	JAL       ~Func:guTranslateF
	COPY      A0, S0
	MFC1      A1, F28
	MFC1      A2, F26
	MFC1      A3, F24
	JAL       $Function_80240390
	ADDIU     A0, SP, 10
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, S0
	ADDIU     A0, SP, 10
	NEG.S     F22, F22
	MFC1      A1, F20
	MFC1      A2, F22
	JAL       ~Func:guTranslateF
	COPY      A3, A1
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, A1
	LHU       V0, 0 (S1)
	ORI       V0, V0, 1400
	BEQ       R0, R0, .o19C
	SH        V0, 0 (S1)
	.o124
	MTC1      R0, F20
	MFC1      A2, F22
	MFC1      A1, F20
	MFC1      A3, F20
	JAL       ~Func:guTranslateF
	ADDIU     A0, SP, 10
	ADDIU     A0, SP, 10
	ADDIU     S0, S1, 58
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, S0
	MFC1      A1, F28
	MFC1      A2, F26
	MFC1      A3, F24
	JAL       $Function_80240390
	ADDIU     A0, SP, 10
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, S0
	ADDIU     A0, SP, 10
	NEG.S     F22, F22
	MFC1      A1, F20
	MFC1      A2, F22
	JAL       ~Func:guTranslateF
	COPY      A3, A1
	ADDIU     A0, SP, 10
	COPY      A1, S0
	JAL       ~Func:guMtxCatF
	COPY      A2, A1
	.o19C
	LW        RA, 5C (SP)
	LW        S2, 58 (SP)
	LW        S1, 54 (SP)
	LW        S0, 50 (SP)
	LDC1      F28, 80 (SP)
	LDC1      F26, 78 (SP)
	LDC1      F24, 70 (SP)
	LDC1      F22, 68 (SP)
	LDC1      F20, 60 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 88
}

PADDING: 802405CC to 802405D0 (000005CC to 000005D0)
00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -300.0    0.0  120.0    0.0
    ~Vec4f:Entry1 %   55.0    0.0 -120.0  180.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main_EnterWalk
    [EntryList]   $EntryList
    [EntryCount]  00000002
    [Background]  80200000
    [MapTattle]   001900FB
}

#new:Script $Script_ExitWalk_80240630
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243870 00000000 ) % jan_14
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_8024068C
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243878 00000001 ) % jan_12
    Wait  100`
    Return
    End
}

#new:Script $Script_802406E8
{
    Bind  $Script_ExitWalk_8024068C .Trigger:FloorAbove ~Collider:deilis 00000001 00000000
    Bind  $Script_ExitWalk_80240630 .Trigger:FloorAbove ~Collider:deilin 00000001 00000000
    Return
    End
}

#new:Script_Main $Script_Main_EnterWalk
{
    Set   *WorldMapLocation  .Location:JadeJungle
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Exec  $Script_MakeEntities
    Exec  $Script_80242438
    Exec  $Script_80243744
    Call  ModifyColliderFlags   ( 00000000 ~Collider:deilits 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:deilitn 7FFFFE00 )
    Set   *Var[0]  $Script_802406E8
    Exec  EnterWalk
    Call  SetMusicTrack     ( 00000000 .Song:DeepJungle 00000000 00000008 )
    Call  PlayAmbientSounds ( .AmbientSounds:Jungle )
    Return
    End
}

PADDING: 8024084C to 80240850 (0000084C to 00000850)
00000000

#new:Unknown $???_80240850
{
    00000000
}

#new:Script $Script_80240854
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[D]  *Var[2]
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Loop
        If  *Var[B]  ==  *MapVar[0]
            Add   *Var[0]  0000000A
        Else
            Add   *Var[0]  FFFFFFF6
        EndIf
        If  *Var[0]  <  FFFFFFF6
            Set   *Var[0]  FFFFFFF6
        EndIf
        If  *Var[0]  >  0000000A
            Set   *Var[0]  0000000A
        EndIf
        Add   *Var[1]  *Var[0]
        If  *Var[1]  <  00000000
            Set   *Var[1]  00000000
        EndIf
        If  *Var[1]  >  00000064
            Set   *Var[1]  00000064
        EndIf
        Call  $Function_802401AC ( )
        If  *Var[1]  ==  00000000
            If  *Var[D]  !=  00000000
            EndIf
            Call  EnableModel   ( *Var[A] .False )
        Else
            If  *Var[D]  !=  00000000
            EndIf
            Call  EnableModel   ( *Var[A] .True )
            Call  ScaleModel    ( *Var[A] *Var[3] *Var[2] *Var[3] )
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80240A64
{
    Call  $Function_802401AC ( )
    If  *Var[3]  <  *Fixed[1.0]
        SetF  *Var[4]  *Var[3]
    Else
        SetF  *Var[4]  *Fixed[1.0]
    EndIf
    Call  ScaleModel    ( *Var[A] *Var[4] *Var[2] *Var[3] )
    Return
    End
}

#new:Script $Script_80240ADC
{
    Set   *Var[A]  *Var[0]
    Set   *Var[B]  *Var[1]
    Set   *Var[D]  *Var[2]
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    If  *Flag_JAN_38  ==  .True
        Goto  A
    EndIf
    Loop
        If  *MapVar[0]  ==  00000005
            If  *AreaByte[2]  ==  00000001
                Add   *Var[0]  0000000A
            Else
                Add   *Var[0]  FFFFFFF6
            EndIf
        Else
            Add   *Var[0]  FFFFFFF6
        EndIf
        If  *Var[0]  <  FFFFFFF6
            Set   *Var[0]  FFFFFFF6
        EndIf
        If  *Var[0]  >  0000000A
            Set   *Var[0]  0000000A
        EndIf
        Add   *Var[1]  *Var[0]
        If  *Var[1]  <  00000032
            Set   *Var[1]  00000032
        EndIf
        If  *Var[1]  >  00000046
            Set   *Var[1]  00000046
        EndIf
        If  *Var[1]  ==  00000000
            Call  EnableModel   ( *Var[A] .False )
            Wait  1`
        Else
            Call  EnableModel   ( *Var[A] .True )
            ExecWait  $Script_80240A64
        EndIf
        If  *AreaByte[2]  ==  00000002
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[0]  0000000A
    Loop
        If  *MapVar[0]  ==  00000005
            Add   *Var[1]  *Var[0]
            If  *Var[1]  >  0000012C
                Set   *Var[1]  0000012C
            EndIf
            ExecWait  $Script_80240A64
        Else
            Wait  1`
        EndIf
        If  *Flag_JAN_38  !=  .False
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[0]  FFFFFFF9
    Loop  0000001C
        Add   *Var[1]  *Var[0]
        ExecWait  $Script_80240A64
    EndLoop
    Label  A
    If  *MapVar[0]  ==  00000005
        Add   *Var[0]  0000000A
    Else
        Add   *Var[0]  FFFFFFF6
    EndIf
    If  *Var[0]  <  FFFFFFF6
        Set   *Var[0]  FFFFFFF6
    EndIf
    If  *Var[0]  >  0000000A
        Set   *Var[0]  0000000A
    EndIf
    Add   *Var[1]  *Var[0]
    If  *Var[1]  <  00000000
        Set   *Var[1]  00000000
    EndIf
    If  *Var[1]  >  00000064
        Set   *Var[1]  00000064
    EndIf
    If  *Var[1]  ==  00000000
        Call  EnableModel   ( *Var[A] .False )
        Wait  1`
    Else
        Call  EnableModel   ( *Var[A] .True )
        ExecWait  $Script_80240A64
    EndIf
    Goto  A
    Return
    End
}

#new:IntTable $IntTable_80240F70
{
    00000138 00000000 0000000C 000000ED 00000000 FFFFFFDA 00000089 00000000
    0000003E FFFFFEE0 00000000 FFFFFFDA FFFFFFDA 00000000 0000000C 00000025
    00000000 FFFFFF76
}

#new:Script $Script_80240FB8
{
    If  *AreaByte[3]  !=  *MapVar[0]
        Set   *AreaByte[3]  *MapVar[0]
        Set   *MapFlag[0A]  .False
        Call  StopSound ( 8000001C )
        Call  StopSound ( 8000001D )
        If  *MapVar[0]  ==  00000005
            If  *Flag_JAN_38  ==  .False
                Return
            EndIf
        Else
            If  *MapVar[0]  ==  00000006
                Return
            EndIf
        EndIf
        Call  PlaySound ( 8000001C )
        Set   *MapFlag[0A]  .True
        Set   *Var[0]  *MapVar[0]
        Add   *Var[0]  00000001
        UseIntBuffer  $IntTable_80240F70
        Loop  *Var[0]
            Get3Int  *Var[1] *Var[2] *Var[3]
        EndLoop
        Call  $Function_80240214    ( *MapFlag[0A] *Var[1] *Var[2] *Var[3] )
    EndIf
    Return
    End
}

#new:Script $Script_80241110
{
    Call  PlaySoundAtCollider   ( ~Collider:o33 00000191 00000000 )
    Call  ShakeCam  ( .Cam:Default 00000000 00000005 *Fixed[1.5] )
    Return
    End
}

#new:Script $Script_80241154
{
    Set   *Flag[00]  .False
    Set   *AreaByte[2]  00000000
    Set   *AreaByte[3]  FFFFFFFF
    Exec  $Script_80240FB8
    Label  0
    If  *Flag_JAN_38  ==  .True
        If  *Flag[00]  ==  .False
            Call  EnableModel   ( ~Model:o33 .False )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o33 7FFFFE00 )
            Call  SetPushBlock  ( 00000000 0000000F 00000000 00000000 )
            Call  SetPushBlock  ( 00000000 00000010 00000000 00000000 )
            Call  SetPushBlock  ( 00000000 00000011 00000000 00000000 )
            Call  SetPushBlock  ( 00000000 00000012 00000000 00000000 )
            Call  SetPushBlock  ( 00000000 00000013 00000000 00000000 )
            Call  SetPushBlock  ( 00000000 0000000F 00000001 00000000 )
            Call  SetPushBlock  ( 00000000 00000010 00000001 00000000 )
            Call  SetPushBlock  ( 00000000 00000011 00000001 00000000 )
            Call  SetPushBlock  ( 00000000 00000012 00000001 00000000 )
            Call  SetPushBlock  ( 00000000 00000013 00000001 00000000 )
            Call  SetPushBlock  ( 00000000 0000000F 00000002 00000000 )
            Call  SetPushBlock  ( 00000000 00000010 00000002 00000000 )
            Call  SetPushBlock  ( 00000000 00000011 00000002 00000000 )
            Call  SetPushBlock  ( 00000000 00000012 00000002 00000000 )
            Call  SetPushBlock  ( 00000000 00000013 00000002 00000000 )
            Set   *Flag[00]  .True
        EndIf
    EndIf
    Call  GetPushBlock  ( 00000000 0000001C 00000006 *Var[0] )
    If  *Var[0]  ==  00000000
        Set   *MapVar[0]  00000000
        Goto  1
    EndIf
    Call  GetPushBlock  ( 00000000 00000019 00000004 *Var[0] )
    If  *Var[0]  ==  00000000
        Set   *MapVar[0]  00000001
        Goto  1
    EndIf
    Call  GetPushBlock  ( 00000000 00000015 00000008 *Var[0] )
    If  *Var[0]  ==  00000000
        Set   *MapVar[0]  00000002
        Goto  1
    EndIf
    Call  GetPushBlock  ( 00000000 00000004 00000004 *Var[0] )
    If  *Var[0]  ==  00000000
        Set   *MapVar[0]  00000003
        Goto  1
    EndIf
    Call  GetPushBlock  ( 00000000 0000000E 00000006 *Var[0] )
    If  *Var[0]  ==  00000000
        Set   *MapVar[0]  00000004
        Goto  1
    EndIf
    If  *Flag_JAN_38  ==  .False
        Call  DisablePlayerInput    ( .True )
        Call  SetPushBlock  ( 00000000 0000000F 00000000 00000000 )
        Call  SetPushBlock  ( 00000000 00000010 00000000 00000000 )
        Call  SetPushBlock  ( 00000000 00000011 00000000 00000000 )
        Call  SetPushBlock  ( 00000000 00000012 00000000 00000000 )
        Call  SetPushBlock  ( 00000000 00000013 00000000 00000000 )
        Call  SetPushBlock  ( 00000000 0000000F 00000001 00000000 )
        Call  SetPushBlock  ( 00000000 00000010 00000001 00000000 )
        Call  SetPushBlock  ( 00000000 00000011 00000001 00000000 )
        Call  SetPushBlock  ( 00000000 00000012 00000001 00000000 )
        Call  SetPushBlock  ( 00000000 00000013 00000001 00000000 )
        Call  SetPushBlock  ( 00000000 0000000F 00000002 00000000 )
        Call  SetPushBlock  ( 00000000 00000010 00000002 00000000 )
        Call  SetPushBlock  ( 00000000 00000011 00000002 00000000 )
        Call  SetPushBlock  ( 00000000 00000012 00000002 00000000 )
        Call  SetPushBlock  ( 00000000 00000013 00000002 00000000 )
        Set   *MapVar[0]  00000005
        Wait  30`
        Loop  00000002
            Exec  $Script_80241110
            Call  RotateModel   ( ~Model:o33 00000003 00000000 *Fixed[0.2] 00000001 )
            Wait  8`
            Call  RotateModel   ( ~Model:o33 FFFFFFFD 00000000 *Fixed[0.2] 00000001 )
            Wait  8`
        EndLoop
        Thread
            Call  PlaySoundAtPlayer ( 00000262 00000000 )
            Call  ShowEmote ( 00000000 .Emote:Exclamation 00000000 00000014 00000000 00000000 00000000 00000000 00000000 )
            Call  GetModelCenter    ( ~Model:o33 )
            Call  802D2884  ( *Var[0] *Var[2] 00000004 )
            Call  GetPlayerPos      ( *Var[3] *Var[1] *Var[2] )
            Set   *Var[4]  *Var[0]
            Set   *Var[5]  *Var[0]
            Sub   *Var[4]  00000078
            Add   *Var[5]  00000078
            Switch  *Var[3]
                Case  *Var[4]  to  *Var[5]
                    Add   *Var[0]  *Var[3]
                    Div   *Var[0]  00000002
            EndSwitch
            Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
            Call  SetPanTarget      ( .Cam:Default *Var[0] *Var[1] *Var[2] )
            Call  SetCamDistance    ( .Cam:Default 00000190 )
            Call  SetCamSpeed       ( .Cam:Default *Fixed[3.0] )
            Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
        EndThread
        Loop  00000003
            Exec  $Script_80241110
            Call  RotateModel   ( ~Model:o33 00000005 00000000 *Fixed[0.2] 00000001 )
            Wait  5`
            Call  RotateModel   ( ~Model:o33 FFFFFFFB 00000000 *Fixed[0.2] 00000001 )
            Wait  5`
        EndLoop
        Loop  00000007
            Exec  $Script_80241110
            Call  RotateModel   ( ~Model:o33 00000007 00000000 *Fixed[0.2] 00000001 )
            Wait  3`
            Call  RotateModel   ( ~Model:o33 FFFFFFF9 00000000 *Fixed[0.2] 00000001 )
            Wait  3`
        EndLoop
        Loop  00000008
            Call  RandInt   ( 00000002 *Var[0] )
            Switch  *Var[0]
                Case  ==  00000000
                    Call  PlayEffect    ( ~FX:Steam:SmallOutward 00000008 00000000 FFFFFFAE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Case  ==  00000001
                    Call  PlayEffect    ( ~FX:Steam:SmallOutward 00000026 00000000 FFFFFFC2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
                Case  ==  00000002
                    Call  PlayEffect    ( ~FX:Steam:SmallOutward 0000004E 00000000 FFFFFFB3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndSwitch
            Exec  $Script_80241110
            Call  RotateModel   ( ~Model:o33 0000000A 00000000 *Fixed[0.2] 00000001 )
            Wait  3`
            Call  RotateModel   ( ~Model:o33 FFFFFFF6 00000000 *Fixed[0.2] 00000001 )
            Wait  3`
        EndLoop
        Thread
            Call  ShakeCam  ( .Cam:Default 00000000 0000000F *Fixed[0.4] )
        EndThread
        Call  PlaySoundAt   ( 8000001D 00000000 00000025 00000000 FFFFFF76 )
        Set   *AreaByte[2]  00000001
        Thread
            Loop  000000C8
                Call  RotateModel   ( ~Model:o33 0000000A 00000000 *Fixed[0.2] 00000001 )
                Wait  3`
                Call  RotateModel   ( ~Model:o33 FFFFFFF6 00000000 *Fixed[0.2] 00000001 )
                Wait  3`
            EndLoop
        EndThread
        Set   *Var[0]  00000000
        Loop  00000012
            Add   *Var[0]  00000003
            Call  TranslateModel    ( ~Model:o33 00000000 *Var[0] 00000000 )
            Wait  1`
        EndLoop
        Loop  0000003C
            Call  TranslateModel    ( ~Model:o33 00000000 *Var[0] 00000000 )
            Wait  1`
        EndLoop
        Set   *AreaByte[2]  00000002
        Loop  00000019
            Add   *Var[0]  00000008
            Call  TranslateModel    ( ~Model:o33 00000000 *Var[0] 00000000 )
            Wait  1`
        EndLoop
        Set   *Var[0]  000000C8
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Loop  0000003C
            Add   *Var[1]  00000001
            Sub   *Var[0]  *Var[1]
            Add   *Var[2]  0000000A
            Add   *Var[2]  FFFFFFF6
            Call  TranslateModel    ( ~Model:o33 FFFFFF38 *Var[0] FFFFFE0C )
            Call  RotateModel       ( ~Model:o33 *Var[2] FFFFFFFF *Fixed[0.1] *Fixed[0.1] )
            Wait  1`
        EndLoop
        Call  EnableModel   ( ~Model:o33 .False )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o33 7FFFFE00 )
        Set   *Flag_JAN_38  .True
        Set   *Flag[00]  .True
        Call  ResetCam  ( .Cam:Default *Fixed[5.0] )
        Call  DisablePlayerInput    ( .False )
    Else
        Call  GetPushBlock  ( 00000000 00000011 00000000 *Var[0] )
        If  *Var[0]  ==  00000000
            Set   *MapVar[0]  00000005
            Goto  1
        EndIf
    EndIf
    Set   *MapVar[0]  00000006
    Label  1
    Exec  $Script_80240FB8
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80241F5C
{
    Loop
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Call  GetGridIndexFromPos   ( 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] )
        Set   *Var[5]  00000000
        If  *MapVar[0]  ==  00000000
            If  *Var[3]  ==  0000001C
                If  *Var[4]  ==  00000006
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000001
            If  *Var[3]  ==  00000019
                If  *Var[4]  ==  00000004
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000002
            If  *Var[3]  ==  00000015
                If  *Var[4]  ==  00000008
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000003
            If  *Var[3]  ==  00000004
                If  *Var[4]  ==  00000004
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000004
            If  *Var[3]  ==  0000000E
                If  *Var[4]  ==  00000006
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000005
            If  *Var[3]  ==  00000011
                If  *Var[4]  ==  00000000
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000005
            If  *Var[3]  ==  00000010
                If  *Var[4]  ==  00000000
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000005
            If  *Var[3]  ==  00000012
                If  *Var[4]  ==  00000000
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *MapVar[0]  ==  00000005
            If  *Var[3]  ==  00000013
                If  *Var[4]  ==  00000000
                    Set   *Var[5]  00000001
                EndIf
            EndIf
        EndIf
        If  *Var[5]  ==  00000001
            Call  DisablePlayerInput    ( .True )
            Call  $Function_802402B8 ( )
            Call  802D2B6C ( )
            Loop  0000000A
                Call  GetPlayerPos  ( *Var[3] *Var[4] *Var[5] )
                If  *Var[4]  <  00000028
                    AddF  *Var[4]  00000006
                EndIf
                MulF  *Var[3]  0000000A
                MulF  *Var[5]  0000000A
                AddF  *Var[3]  *Var[0]
                AddF  *Var[5]  *Var[2]
                DivF  *Var[3]  0000000B
                DivF  *Var[5]  0000000B
                Call  SetPlayerPos  ( *Var[3] *Var[4] *Var[5] )
                Call  SetPlayerAnimation    ( 0001002E )
                Wait  1`
            EndLoop
            Call  SetPlayerAnimation    ( 00010002 )
            Call  DisablePlayerInput    ( .False )
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80242438
{
    Call  CreatePushBlockGrid   ( 00000000 ~PushGrid:Grid_80242438 00000000 )
    Call  SetPushBlock  ( 00000000 00000007 00000005 00000001 )
    Call  SetPushBlock  ( 00000000 0000000D 00000009 00000001 )
    Call  SetPushBlock  ( 00000000 00000010 00000005 00000001 )
    Call  SetPushBlock  ( 00000000 00000015 00000002 00000001 )
    Call  SetPushBlock  ( 00000000 00000016 00000004 00000001 )
    Call  SetPushBlock  ( 00000000 0000001A 00000006 00000001 )
    Call  SetPushBlock  ( 00000000 0000001B 00000007 00000001 )
    Call  SetPushBlock  ( 00000000 0000000F 00000000 00000002 )
    Call  SetPushBlock  ( 00000000 00000010 00000000 00000002 )
    Call  SetPushBlock  ( 00000000 00000011 00000000 00000002 )
    Call  SetPushBlock  ( 00000000 00000012 00000000 00000002 )
    Call  SetPushBlock  ( 00000000 00000013 00000000 00000002 )
    Call  SetPushBlock  ( 00000000 0000000F 00000001 00000002 )
    Call  SetPushBlock  ( 00000000 00000010 00000001 00000002 )
    Call  SetPushBlock  ( 00000000 00000011 00000001 00000002 )
    Call  SetPushBlock  ( 00000000 00000012 00000001 00000002 )
    Call  SetPushBlock  ( 00000000 00000013 00000001 00000002 )
    Call  SetPushBlock  ( 00000000 0000000F 00000002 00000002 )
    Call  SetPushBlock  ( 00000000 00000010 00000002 00000002 )
    Call  SetPushBlock  ( 00000000 00000011 00000002 00000002 )
    Call  SetPushBlock  ( 00000000 00000012 00000002 00000002 )
    Call  SetPushBlock  ( 00000000 00000013 00000002 00000002 )
    Set   *Var[0]  00000000
    Loop  00000020
        Call  SetPushBlock  ( 00000000 *Var[0] 00000000 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[0]  00000000
    Loop  0000000F
        Call  SetPushBlock  ( 00000000 *Var[0] 00000001 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[0]  00000014
    Loop  0000000C
        Call  SetPushBlock  ( 00000000 *Var[0] 00000001 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[0]  00000000
    Loop  00000003
        Call  SetPushBlock  ( 00000000 *Var[0] 00000002 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[0]  0000000A
    Loop  00000004
        Call  SetPushBlock  ( 00000000 *Var[0] 00000002 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[0]  0000001A
    Loop  00000006
        Call  SetPushBlock  ( 00000000 *Var[0] 00000002 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[0]  00000000
    Loop  00000002
        Call  SetPushBlock  ( 00000000 *Var[0] 00000003 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Set   *Var[0]  0000000A
    Loop  00000004
        Call  SetPushBlock  ( 00000000 *Var[0] 00000003 00000002 )
        Add   *Var[0]  00000001
    EndLoop
    Exec  $Script_80241154
    Set   *Var[0]  0000002E
    Set   *Var[1]  00000000
    Set   *Var[2]  00000013
    Call  ModifyColliderFlags   ( 00000000 *Var[2] 7FFFFE00 )
    Exec  $Script_80240854
    Set   *Var[0]  00000030
    Set   *Var[1]  00000001
    Set   *Var[2]  00000014
    Call  ModifyColliderFlags   ( 00000000 *Var[2] 7FFFFE00 )
    Exec  $Script_80240854
    Set   *Var[0]  00000032
    Set   *Var[1]  00000002
    Set   *Var[2]  00000015
    Call  ModifyColliderFlags   ( 00000000 *Var[2] 7FFFFE00 )
    Exec  $Script_80240854
    Set   *Var[0]  00000034
    Set   *Var[1]  00000003
    Set   *Var[2]  00000016
    Call  ModifyColliderFlags   ( 00000000 *Var[2] 7FFFFE00 )
    Exec  $Script_80240854
    Set   *Var[0]  00000036
    Set   *Var[1]  00000004
    Set   *Var[2]  00000017
    Call  ModifyColliderFlags   ( 00000000 *Var[2] 7FFFFE00 )
    Exec  $Script_80240854
    Set   *Var[0]  00000038
    Set   *Var[1]  00000005
    Set   *Var[2]  0000001A
    Call  ModifyColliderFlags   ( 00000000 *Var[2] 7FFFFE00 )
    Exec  $Script_80240ADC
    Exec  $Script_80241F5C
    Call  EnableTexPanning  ( ~Model:o72 .True )
    Call  EnableTexPanning  ( ~Model:o73 .True )
    Call  EnableTexPanning  ( ~Model:o74 .True )
    Call  EnableTexPanning  ( ~Model:o75 .True )
    Call  EnableTexPanning  ( ~Model:o76 .True )
    Call  EnableTexPanning  ( ~Model:o71 .True )
    Call  802C90FC  ( 0000002E 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000030 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000032 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000034 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000036 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000038 00000000 FFFFFFFF )
    Call  802C94A0  ( 00000000 $Function_80240000 00000000 )
    Set   *Var[0]  00000000
    Loop
        Sub   *Var[0]  000007D0
        If  *Var[0]  <  FFFF0000
            Add   *Var[0]  00010000
        EndIf
        Call  SetTexPanOffset   ( 00000001 00000000 00000000 *Var[0] )
        Wait  1`
    EndLoop
    Return
    End
}

PADDING: 80242D0C to 80242D10 (00002D0C to 00002D10)
00000000

% Origin: HEURISTIC
#new:Script $Script_SearchBush_80242D10
{
    UseIntBuffer  *Var[0]
    Get4Int  *Var[1] *Var[2] *Var[3] *Var[4]
    Call  GetPlayerPos  ( *Var[5] *Var[F] *Var[7] )
    Thread
        Set   *Flag[00]  .False
        If  *Var[1]  !=  00000000
            Loop  00000005
                UseIntBuffer  *Var[1]
                Get1Int  *Var[2]
                Loop  *Var[2]
                    Get1Int  *Var[3]
                    Call  $Function_80240400    ( *Var[3] *Fixed[0.1] 00000001 *Var[F] 00000000 )
                    If  *Flag[00]  ==  .False
                        Set   *Flag[00]  .True
                        Call  PlaySoundAtModel  ( *Var[3] .Sound:SearchBush 00000000 )
                    EndIf
                EndLoop
                Wait  1`
                UseIntBuffer  *Var[1]
                Get1Int  *Var[2]
                Loop  *Var[2]
                    Get1Int  *Var[3]
                    Call  $Function_80240400    ( *Var[3] *Fixed[0.1] FFFFFFFF *Var[F] 00000000 )
                EndLoop
                Wait  1`
            EndLoop
            UseIntBuffer  *Var[1]
            Get1Int  *Var[2]
            Loop  *Var[2]
                Get1Int  *Var[3]
                Call  TranslateModel    ( *Var[3] 00000000 00000000 00000000 )
            EndLoop
            Wait  1`
        EndIf
    EndThread
    Thread
        If  *Var[2]  !=  00000000
            UseIntBuffer  *Var[2]
            Get1Int  *Var[3]
            Loop  *Var[3]
                Get1Int  *Var[4]
                Get3Int  *Var[5] *Var[6] *Var[7]
                Get3Int  *Var[8] *Var[9] *Var[A]
                If  *Var[A]  ==  00000000
                    Call  DropItemEntity    ( *Var[4] *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] )
                Else
                    Call  GetValueByRef ( *Var[A] *Var[B] )
                    If  *Var[B]  ==  00000000
                        Call  SetValueByRef     ( *Var[A] 00000001 )
                        Call  DropItemEntity    ( *Var[4] *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] )
                    EndIf
                EndIf
            EndLoop
        EndIf
    EndThread
    Wait  15`
    If  *Var[4]  !=  00000000
        ExecWait  *Var[4]
    EndIf
    Return
    End
}

#new:Script $Script_ShakeTree_80243070
{
    SetTimescale  *Fixed[2.0]
    UseIntBuffer  *Var[0]
    Get4Int  *Var[1] *Var[2] *Var[3] *Var[4]
    Get1Int  *Var[5]
    Call  GetPlayerPos  ( *Var[6] *Var[F] *Var[8] )
    Call  PlaySound     ( 00000165 )
    Call  PlaySound     ( 00000166 )
    Thread
        Set   *Flag[00]  .False
        If  *Var[1]  !=  00000000
            Wait  1`
            Loop  00000005
                UseIntBuffer  *Var[1]
                Get1Int  *Var[2]
                Loop  *Var[2]
                    Get1Int  *Var[3]
                    Call  $Function_80240400    ( *Var[3] *Fixed[0.1] *Fixed[0.2] *Var[F] 00000000 )
                    If  *Flag[00]  ==  .False
                        Set   *Flag[00]  .True
                        Call  PlaySoundAtModel  ( *Var[3] 00000166 00000000 )
                    EndIf
                EndLoop
                Wait  1`
                UseIntBuffer  *Var[1]
                Get1Int  *Var[2]
                Loop  *Var[2]
                    Get1Int  *Var[3]
                    Call  $Function_80240400    ( *Var[3] *Fixed[0.1] *Fixed[-0.2] *Var[F] 00000000 )
                EndLoop
                Wait  1`
            EndLoop
            UseIntBuffer  *Var[1]
            Get1Int  *Var[2]
            Loop  *Var[2]
                Get1Int  *Var[3]
                Call  TranslateModel    ( *Var[3] 00000000 00000000 00000000 )
            EndLoop
            Wait  1`
        EndIf
    EndThread
    Thread
        Set   *Flag[00]  .False
        If  *Var[2]  !=  00000000
            Loop  00000005
                UseIntBuffer  *Var[2]
                Get1Int  *Var[3]
                Loop  *Var[3]
                    Get1Int  *Var[4]
                    Call  $Function_80240400    ( *Var[4] *Fixed[0.1] *Fixed[0.2] *Var[F] 00000000 )
                    If  *Flag[00]  ==  .False
                        Set   *Flag[00]  .True
                        Call  PlaySoundAtModel  ( *Var[4] 00000165 00000000 )
                    EndIf
                EndLoop
                Wait  1`
                UseIntBuffer  *Var[2]
                Get1Int  *Var[3]
                Loop  *Var[3]
                    Get1Int  *Var[4]
                    Call  $Function_80240400    ( *Var[4] *Fixed[0.1] *Fixed[-0.2] *Var[F] 00000000 )
                EndLoop
                Wait  1`
            EndLoop
            UseIntBuffer  *Var[2]
            Get1Int  *Var[3]
            Loop  *Var[3]
                Get1Int  *Var[4]
                Call  TranslateModel    ( *Var[4] 00000000 00000000 00000000 )
            EndLoop
            Wait  1`
        EndIf
    EndThread
    Thread
        If  *Var[3]  !=  00000000
            UseIntBuffer  *Var[3]
            Get1Int  *Var[4]
            Loop  *Var[4]
                Get1Int  *Var[5]
                Get3Int  *Var[6] *Var[7] *Var[8]
                Get3Int  *Var[9] *Var[A] *Var[B]
                If  *Var[B]  ==  00000000
                    Call  DropItemEntity    ( *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] *Var[A] )
                Else
                    Call  GetValueByRef ( *Var[B] *Var[C] )
                    If  *Var[C]  ==  00000000
                        Call  SetValueByRef     ( *Var[B] 00000001 )
                        Call  DropItemEntity    ( *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] *Var[A] )
                    EndIf
                EndIf
            EndLoop
        EndIf
    EndThread
    Thread
        If  *Var[4]  !=  00000000
            UseIntBuffer  *Var[4]
            Get1Int  *Var[5]
            Loop  *Var[5]
                Get3Int  *Var[6] *Var[7] *Var[8]
                Call  PlayEffect    ( ~FX:DropLeaves:Random *Var[6] *Var[7] *Var[8] 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            EndLoop
        EndIf
    EndThread
    If  *Var[5]  !=  00000000
        ExecWait  *Var[5]
    EndIf
    Wait  15`
    Return
    End
}

#new:TreeModelList $TreeModelList_Tree1_Leaves
{
    00000003 ~Model:o54 ~Model:o55 ~Model:o56
}

#new:TreeModelList $TreeModelList_Tree1_Trunk
{
    00000001 ~Model:o53
}

#new:TreeDropList $TreeDropList_Tree1
{
    00000001
    .Item:Coin ~Vec3d:Tree1_Drop1 0000000F *Flag_JAN_2E 00000000
}

#new:TreeEffectVectors $TreeEffectVectors_Tree1
{
    00000002
    ~Vec3f:TreeFX_Tree1_0 %    -388     114     -77
    ~Vec3f:TreeFX_Tree1_1 %    -303     114     -87
}

#new:ShakeTreeEvent $ShakeTreeEvent_Tree1
{
    $TreeModelList_Tree1_Leaves
    $TreeModelList_Tree1_Trunk
    $TreeDropList_Tree1
    $TreeEffectVectors_Tree1
    00000000
}

#new:TriggerCoord $TriggerCoord_802436DC
{
    ~BombPos:Bomb_802436DC % -348.000000 0.000000 -107.000000 0.000000
}

#new:TreeModelList $TreeModelList_Tree2_Leaves
{
    00000003 ~Model:o50 ~Model:o51 ~Model:o52
}

#new:TreeModelList $TreeModelList_Tree2_Trunk
{
    00000001 ~Model:o49
}

#new:TreeEffectVectors $TreeEffectVectors_Tree2
{
    00000002
    ~Vec3f:TreeFX_Tree2_0 %     264     114     -81
    ~Vec3f:TreeFX_Tree2_1 %     349     114     -91
}

#new:ShakeTreeEvent $ShakeTreeEvent_Tree2
{
    $TreeModelList_Tree2_Leaves
    $TreeModelList_Tree2_Trunk
    00000000
    $TreeEffectVectors_Tree2
    00000000
}

#new:TriggerCoord $TriggerCoord_80243734
{
    ~BombPos:Bomb_80243734 % 304.000000 0.000000 -111.000000 0.000000
}

#new:Script $Script_80243744
{
    Set   *Var[0]  $ShakeTreeEvent_Tree1
    Bind  $Script_ShakeTree_80243070 .Trigger:WallHammer ~Collider:o113 00000001 00000000
    Bind  $Script_ShakeTree_80243070 .Trigger:PointBomb $TriggerCoord_802436DC 00000001 00000000
    Set   *Var[0]  $ShakeTreeEvent_Tree2
    Bind  $Script_ShakeTree_80243070 .Trigger:WallHammer ~Collider:o110 00000001 00000000
    Bind  $Script_ShakeTree_80243070 .Trigger:PointBomb $TriggerCoord_80243734 00000001 00000000
    Return
    End
}

PADDING: 802437E4 to 802437F0 (000037E4 to 000037F0)
00000000 00000000 00000000

#new:Script $Script_MakeEntities
{
    Call  MakeEntity    ( .Entity:PinkFlower ~Vec4d:Entity802437F0 80000000 )
    Call  MakeEntity    ( .Entity:HiddenYellowBlock ~Vec4d:Entity80243814 .Item:VoltShroom 80000000 )
    Call  AssignBlockFlag   ( *Flag_JAN_24 )
    Call  80111F2C      ( 00000001 )
    Return
    End
}

PADDING: 8024386C to 80243870 (0000386C to 00003870)
00000000

#new:ASCII $ASCII_80243870
{
    "jan_14"
}

#new:ASCII $ASCII_80243878
{
    "jan_12"
}

#new:ConstDouble $ConstDouble_80243880
{
    0.020000d
}

#new:ConstDouble $ConstDouble_80243888
{
    0.100000d
}

#new:ConstDouble $ConstDouble_80243890
{
    0.300000d
}

#new:ConstDouble $ConstDouble_80243898
{
    0.600000d
}

