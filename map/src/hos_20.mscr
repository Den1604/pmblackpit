% Script File: hos_20.mscr
% Decoded from: 0 to 1630 (hos_20)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o30
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o40
	ADDU      V0, V1, V0
	.o30
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o44
	SUBU      V0, V1, A0
	.o40
	SW        V0, A8 (S0)
	.o44
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o64
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o74
	ADDU      V0, V1, V0
	.o64
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o78
	SUBU      V0, V1, A0
	.o74
	SW        V0, AC (S0)
	.o78
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o98
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA8
	ADDU      V0, V1, V0
	.o98
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oAC
	SUBU      V0, V1, A0
	.oA8
	SW        V0, B0 (S0)
	.oAC
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oCC
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oDC
	ADDU      V0, V1, V0
	.oCC
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE0
	SUBU      V0, V1, A0
	.oDC
	SW        V0, B4 (S0)
	.oE0
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240124
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o24
	SW        RA, 14 (SP)
	SW        R0, 70 (S0)
	SW        R0, 74 (S0)
	SW        R0, 78 (S0)
	SW        R0, 7C (S0)
	.o24
	LW        V0, 70 (S0)
	BNE       V0, R0, .o64
	NOP
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o50
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o60
	ADDU      V0, V1, V0
	.o50
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o64
	SUBU      V0, V1, A0
	.o60
	SW        V0, A8 (S0)
	.o64
	LW        V0, 74 (S0)
	BNE       V0, R0, .oA4
	NOP
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o90
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA0
	ADDU      V0, V1, V0
	.o90
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oA4
	SUBU      V0, V1, A0
	.oA0
	SW        V0, AC (S0)
	.oA4
	LW        V0, 78 (S0)
	BNE       V0, R0, .oE4
	NOP
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oD0
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oE0
	ADDU      V0, V1, V0
	.oD0
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE4
	SUBU      V0, V1, A0
	.oE0
	SW        V0, B0 (S0)
	.oE4
	LW        V0, 7C (S0)
	BNE       V0, R0, .o124
	NOP
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o110
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o120
	ADDU      V0, V1, V0
	.o110
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o124
	SUBU      V0, V1, A0
	.o120
	SW        V0, B4 (S0)
	.o124
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        V0, 70 (S0)
	LW        V1, 78 (S0)
	LW        A0, 98 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 70 (S0)
	LW        V0, 74 (S0)
	ADDIU     V1, V1, 1
	SW        V1, 78 (S0)
	LW        V1, 70 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 74 (S0)
	LW        V0, 7C (S0)
	SLT       V1, V1, A0
	ADDIU     V0, V0, 1
	BNE       V1, R0, .o198
	SW        V0, 7C (S0)
	SW        R0, 70 (S0)
	.o198
	LW        V0, 74 (S0)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1AC
	SW        R0, 74 (S0)
	.o1AC
	LW        V0, 78 (S0)
	LW        V1, A0 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1C0
	SW        R0, 78 (S0)
	.o1C0
	LW        V0, 7C (S0)
	LW        V1, A4 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1D4
	SW        R0, 7C (S0)
	.o1D4
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 8024030C to 80240310 (0000030C to 00000310)
00000000

#new:Function $Function_80240310
{
	LIA       V1, 8007419C
	LW        V0, 0 (V1)
	SW        R0, A4 (A0)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 8000
	BEQ       V0, R0, .o24
	ADDIU     V0, R0, 1
	SW        V0, A4 (A0)
	.o24
	LW        V0, 0 (V1)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 4000
	BEQ       V0, R0, .o3C
	ADDIU     V0, R0, 1
	SW        V0, A4 (A0)
	.o3C
	JR        RA
	ADDIU     V0, R0, 2
}

PADDING: 80240354 to 80240360 (00000354 to 00000360)
00000000 00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -400.0    0.0    0.0  135.0
    ~Vec4f:Entry1 %    0.0    0.0    0.0  135.0
    ~Vec4f:Entry2 %  400.0    0.0    0.0  225.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000003
    [Background]  00000000
    [MapTattle]   00000000
}

#new:Script $Script_UpdateTexturePan_802403D0
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_80240000 ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_80240124 ( )
    Return
    End
}

#new:Script $Script_8024046C
{
    SetGroup  00000000
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry2
        Call  RotateModel   ( ~Model:h1 000000B4 00000000 00000000 00000001 )
        Call  RotateModel   ( ~Model:h2 000000B4 00000000 00000000 00000001 )
        Call  RotateModel   ( ~Model:h3 000000B4 00000000 00000000 00000001 )
        Call  RotateModel   ( ~Model:h4 000000B4 00000000 00000000 00000001 )
    EndIf
    Call  EnableTexPanning  ( ~Model:h1 .True )
    Call  EnableTexPanning  ( ~Model:h2 .True )
    Call  EnableTexPanning  ( ~Model:h3 .True )
    Call  EnableTexPanning  ( ~Model:h4 .True )
    Thread
        Set   *Var[0]  0000000C
        Set   *Var[1]  FFFFF800
        Set   *Var[2]  FFFFF800
        Set   *Var[3]  00000000
        Set   *Var[4]  00000000
        Set   *Var[5]  00000001
        Set   *Var[6]  00000001
        Set   *Var[7]  00000000
        Set   *Var[8]  00000000
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_802403D0
    EndThread
    Thread
        Set   *Var[0]  0000000B
        Set   *Var[1]  FFFFE800
        Set   *Var[2]  00000000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000000
        Set   *Var[5]  00000001
        Set   *Var[6]  00000000
        Set   *Var[7]  00000000
        Set   *Var[8]  00000000
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_802403D0
    EndThread
    Thread
        Set   *Var[0]  0000000D
        Set   *Var[1]  00000000
        Set   *Var[2]  FFFFEC00
        Set   *Var[3]  00000000
        Set   *Var[4]  00000000
        Set   *Var[5]  00000000
        Set   *Var[6]  00000001
        Set   *Var[7]  00000000
        Set   *Var[8]  00000000
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_802403D0
    EndThread
    Thread
        Set   *Var[0]  0000000A
        Set   *Var[1]  00000400
        Set   *Var[2]  FFFFF400
        Set   *Var[3]  00000000
        Set   *Var[4]  00000000
        Set   *Var[5]  00000001
        Set   *Var[6]  00000001
        Set   *Var[7]  00000000
        Set   *Var[8]  00000000
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_802403D0
    EndThread
    Return
    End
}

#new:Script_Main $Script_Main
{
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Exec  $Script_8024046C
    Call  GetEntryID        ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            Exec  $Script_80240D00
        Case  ==  ~Entry:Entry1
            Exec  $Script_802410DC
        Case  ==  ~Entry:Entry2
            Exec  $Script_802412F4
    EndSwitch
    Return
    End
}

PADDING: 80240A18 to 80240A20 (00000A18 to 00000A20)
00000000 00000000

#new:Script $Script_80240A20
{
    Thread
        Set   *Var[4]  000000B9
        Set   *Var[5]  00000032
        Loop
            Set   *Var[3]  *Var[4]
            Set   *Var[4]  *Var[5]
            Set   *Var[5]  *Var[3]
            Call  MakeLerp  ( *Var[3] *Var[4] 0000001E .Easing:CosInOut )
            Loop
                Call  UpdateLerp ( )
                DivF  *Var[0]  0000000A
                Call  SetCamPitch   ( .Cam:Default *Var[0] *Fixed[-3.0] )
                Wait  1`
                If  *Var[1]  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
        EndLoop
    EndThread
    Set   *Var[4]  FFFFFFEC
    Set   *Var[5]  00000050
    Call  GetEntryID    ( *Var[8] )
    Loop
        Set   *Var[3]  *Var[4]
        Set   *Var[4]  *Var[5]
        Set   *Var[5]  *Var[3]
        Call  MakeLerp  ( *Var[3] *Var[4] 0000001E .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            SetF  *Var[2]  *Var[0]
            MulF  *Var[2]  *Fixed[0.1]
            Call  TranslateGroup    ( ~Model:ry *MapVar[A] *Var[2] 00000000 )
            Call  RotateGroup       ( ~Model:ry *MapVar[B] 00000000 00000001 00000000 )
            Call  GetModelCenter    ( ~Model:ry3 )
            Call  SetPlayerPos      ( *Var[0] *Var[1] *Var[2] )
            If  *Var[8]  !=  ~Entry:Entry2
                Add   *Var[0]  FFFFFFF6
            Else
                Add   *Var[0]  0000000A
            EndIf
            Add   *Var[2]  00000005
            Call  SetNpcPos ( .Npc:Partner *Var[0] *Var[1] *Var[2] )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndLoop
    Return
    End
}

#new:Script $Script_80240D00
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  InterpPlayerYaw   ( 00000087 00000000 )
    Call  DisablePartnerAI  ( 00000000 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .False )
    Call  SetNpcYaw ( .Npc:Partner 0000005A )
    Call  UseSettingsFrom   ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetPanTarget      ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamPitch       ( .Cam:Default *Fixed[18.5] *Fixed[-3.0] )
    Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
    Set   *MapVar[A]  FFFFFED4
    Set   *MapVar[B]  00000000
    Exec  $Script_80240A20
    Wait  1`
    Call  PlaySound ( 0000017C )
    If  *StoryProgress  <  0000005D
        Call  MakeLerp  ( FFFFFED4 00000000 00000078 .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Set   *MapVar[A]  *Var[0]
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Wait  100`
        Call  PlaySound ( 0000057C )
        Call  GotoMap   ( $ASCII_80241618 00000003 ) % hos_00
    Else
        Thread
            Call  MakeLerp  ( FFFFFED4 00000000 00000078 .Easing:QuadraticOut )
            Loop
                Call  UpdateLerp ( )
                Set   *MapVar[A]  *Var[0]
                Wait  1`
                If  *Var[1]  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
            Wait  75`
            Call  PlaySound ( 0000057C )
            Call  PlaySound ( 000020A1 )
            Call  MakeLerp  ( 00000000 0000012C 0000003C .Easing:CubicIn )
            Loop
                Call  UpdateLerp ( )
                Set   *MapVar[A]  *Var[0]
                Wait  1`
                If  *Var[1]  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
            Wait  20`
        EndThread
        Wait  60`
        Loop  000000D7
            Wait  1`
            Call  $Function_80240310 ( )
            If  *Var[8]  ==  00000001
                BreakLoop
            EndIf
        EndLoop
        Call  PlaySound ( 0000057C )
        Call  GotoMap   ( $ASCII_80241610 00000004 ) % kpa_60
    EndIf
    Wait  100`
    Return
    End
}

#new:Script $Script_802410DC
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  InterpPlayerYaw       ( 00000087 00000000 )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcFlagBits        ( .Npc:Partner 00000200 .False )
    Call  SetNpcYaw     ( .Npc:Partner 0000005A )
    Call  UseSettingsFrom       ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetPanTarget  ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamPitch   ( .Cam:Default *Fixed[18.5] *Fixed[-3.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  PlaySound     ( 0000017C )
    Set   *MapVar[A]  00000000
    Set   *MapVar[B]  00000000
    Exec  $Script_80240A20
    Wait  100`
    Call  PlaySound     ( 0000057C )
    Call  PlaySound     ( 000020A1 )
    Call  MakeLerp      ( 00000000 0000012C 0000003C .Easing:CubicIn )
    Loop
        Call  UpdateLerp ( )
        Set   *MapVar[A]  *Var[0]
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Wait  20`
    Call  GotoMap   ( $ASCII_80241620 00000003 ) % osr_03
    Wait  100`
    Return
    End
}

#new:Script $Script_802412F4
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  InterpPlayerYaw   ( 000000E1 00000000 )
    Call  DisablePartnerAI  ( 00000000 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .False )
    Call  SetNpcYaw ( .Npc:Partner 0000010E )
    Call  UseSettingsFrom   ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetPanTarget      ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamPitch       ( .Cam:Default *Fixed[18.5] *Fixed[-3.0] )
    Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
    Set   *MapVar[A]  0000012C
    Set   *MapVar[B]  000000B4
    Exec  $Script_80240A20
    Wait  2`
    Call  PlaySound ( 0000017C )
    Thread
        Call  MakeLerp  ( 0000012C 00000000 00000078 .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Set   *MapVar[A]  *Var[0]
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Wait  75`
        Call  PlaySound ( 0000057C )
        Call  PlaySound ( 000020A1 )
        Call  MakeLerp  ( 00000000 FFFFFED4 0000003C .Easing:CubicIn )
        Loop
            Call  UpdateLerp ( )
            Set   *MapVar[A]  *Var[0]
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Wait  20`
    EndThread
    Wait  60`
    Loop  000000D7
        Wait  1`
        Call  $Function_80240310 ( )
        If  *Var[8]  ==  00000001
            BreakLoop
        EndIf
    EndLoop
    Call  PlaySound ( 0000057C )
    Call  GotoMap   ( $ASCII_80241628 00000001 ) % hos_05
    Wait  100`
    Return
    End
}

PADDING: 80241608 to 80241610 (00001608 to 00001610)
00000000 00000000

#new:ASCII $ASCII_80241610
{
    "kpa_60"
}

#new:ASCII $ASCII_80241618
{
    "hos_00"
}

#new:ASCII $ASCII_80241620
{
    "osr_03"
}

#new:ASCII $ASCII_80241628
{
    "hos_05"
}

