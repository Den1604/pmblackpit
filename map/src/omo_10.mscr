% Script File: omo_10.mscr
% Decoded from: 0 to 4E80 (omo_10)

#new:Function $Function_80240000
{
	LIA       V1, 800B1D80
	LHU       V0, 2 (V1)
	ANDI      V0, V0, FFFE
	SH        V0, 2 (V1)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_8024001C
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	MOV.S     F12, F24
	MFC1      A2, F20
	MFC1      A3, F0
	JAL       ~Func:atan2
	MOV.S     F14, F22
	JAL       ~Func:clamp_angle
	MOV.S     F12, F0
	COPY      A0, S1
	MFC1      A2, F0
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_802400E4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	C.LT.S    F0, F20
	NOP
	BC1F      .o58
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .o60
	ADDIU     A2, R0, 1
	.o58
	LW        A1, 0 (S0)
	CLEAR     A2
	.o60
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80240168
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MULT      S0, V0
	ADDIU     V0, R0, 2
	LW        V1, 138 (S2)
	MFLO      A2
	ADDU      S1, S1, A2
	SLLV      S1, S1, V0
	ADDU      V1, V1, S1
	SW        V1, 138 (S2)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802401EC
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LIA       V0, 8010EFC8
	SWC1      F24, 28 (V0)
	SWC1      F22, 2C (V0)
	SWC1      F20, 30 (V0)
	SWC1      F0, 80 (V0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_80240290
{
	ADDIU     SP, SP, FFC0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F26, 38 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	COPY      A0, S2
	JAL       ~Func:get_npc_safe
	MOV.S     F22, F0
	COPY      A0, V0
	SWC1      F26, 38 (A0)
	MOV.S     F0, F26
	SWC1      F24, 3C (A0)
	MOV.S     F2, F24
	SWC1      F20, 40 (A0)
	MOV.S     F4, F20
	LW        V1, 0 (A0)
	LUI       A1, 1
	SWC1      F22, C (A0)
	SWC1      F0, 6C (A0)
	SWC1      F2, 70 (A0)
	SWC1      F4, 74 (A0)
	OR        V1, V1, A1
	SW        V1, 0 (A0)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 38 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80240388
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80240518
{
	LIA       V1, 8007419C
	LW        V0, 0 (V1)
	SW        R0, 84 (A0)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 8000
	BEQ       V0, R0, .o24
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o24
	LW        V0, 0 (V1)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 4000
	BEQ       V0, R0, .o3C
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o3C
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_8024055C
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o30
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o40
	ADDU      V0, V1, V0
	.o30
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o44
	SUBU      V0, V1, A0
	.o40
	SW        V0, A8 (S0)
	.o44
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o64
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o74
	ADDU      V0, V1, V0
	.o64
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o78
	SUBU      V0, V1, A0
	.o74
	SW        V0, AC (S0)
	.o78
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o98
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA8
	ADDU      V0, V1, V0
	.o98
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oAC
	SUBU      V0, V1, A0
	.oA8
	SW        V0, B0 (S0)
	.oAC
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oCC
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oDC
	ADDU      V0, V1, V0
	.oCC
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE0
	SUBU      V0, V1, A0
	.oDC
	SW        V0, B4 (S0)
	.oE0
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240680
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o24
	SW        RA, 14 (SP)
	SW        R0, 70 (S0)
	SW        R0, 74 (S0)
	SW        R0, 78 (S0)
	SW        R0, 7C (S0)
	.o24
	LW        V0, 70 (S0)
	BNE       V0, R0, .o64
	NOP
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o50
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o60
	ADDU      V0, V1, V0
	.o50
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o64
	SUBU      V0, V1, A0
	.o60
	SW        V0, A8 (S0)
	.o64
	LW        V0, 74 (S0)
	BNE       V0, R0, .oA4
	NOP
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o90
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA0
	ADDU      V0, V1, V0
	.o90
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oA4
	SUBU      V0, V1, A0
	.oA0
	SW        V0, AC (S0)
	.oA4
	LW        V0, 78 (S0)
	BNE       V0, R0, .oE4
	NOP
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oD0
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oE0
	ADDU      V0, V1, V0
	.oD0
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE4
	SUBU      V0, V1, A0
	.oE0
	SW        V0, B0 (S0)
	.oE4
	LW        V0, 7C (S0)
	BNE       V0, R0, .o124
	NOP
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o110
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o120
	ADDU      V0, V1, V0
	.o110
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o124
	SUBU      V0, V1, A0
	.o120
	SW        V0, B4 (S0)
	.o124
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        V0, 70 (S0)
	LW        V1, 78 (S0)
	LW        A0, 98 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 70 (S0)
	LW        V0, 74 (S0)
	ADDIU     V1, V1, 1
	SW        V1, 78 (S0)
	LW        V1, 70 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 74 (S0)
	LW        V0, 7C (S0)
	SLT       V1, V1, A0
	ADDIU     V0, V0, 1
	BNE       V1, R0, .o198
	SW        V0, 7C (S0)
	SW        R0, 70 (S0)
	.o198
	LW        V0, 74 (S0)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1AC
	SW        R0, 74 (S0)
	.o1AC
	LW        V0, 78 (S0)
	LW        V1, A0 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1C0
	SW        R0, 78 (S0)
	.o1C0
	LW        V0, 7C (S0)
	LW        V1, A4 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1D4
	SW        R0, 7C (S0)
	.o1D4
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240868 to 80240870 (00000868 to 00000870)
00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -330.0    0.0  330.0   45.0
    ~Vec4f:Entry1 %  330.0    0.0  330.0  315.0
    ~Vec4f:Entry2 % -330.0   10.0 -330.0  135.0
    ~Vec4f:Entry3 %  330.0   10.0 -330.0  225.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000004
    [Background]  80200000
    [MapTattle]   001900E2
}

#new:Script $Script_802408F0
{
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
    Else
        Call  GetEntryID    ( *Var[0] )
        Switch  *Var[0]
            Case  ~Entry:Entry0  to  ~Entry:Entry1
                Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
            Default
                Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_ExitWalk_802409C0
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80244E40 00000001 ) % omo_11
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80240A1C
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80244E48 00000000 ) % omo_02
    Wait  100`
    Return
    End
}

#new:Script $Script_80240A78
{
    Bind  $Script_ExitWalk_802409C0 .Trigger:FloorAbove ~Collider:deili4 00000001 00000000
    Bind  $Script_ExitWalk_80240A1C .Trigger:FloorAbove ~Collider:deili1 00000001 00000000
    Return
    End
}

#new:Script $Script_EnterWalk_80240AC0
{
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Exec  EnterSavePoint
        Exec  $Script_80240A78
        Return
    EndIf
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ~Entry:Entry0  to  ~Entry:Entry1
            Set   *Var[0]  $Script_80240A78
            Exec  EnterWalk
            Wait  1`
        Default
            Exec  $Script_80240A78
            Wait  3`
    EndSwitch
    Return
    End
}

#new:Script_Main $Script_Main
{
    Set   *WorldMapLocation  .Location:ShyGuysToybox
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Call  MakeNpcs  ( 00000001 $NpcGroupList_80244D54 )
    ExecWait  $Script_MakeEntities
    ExecWait  $Script_80241078
    ExecWait  $Script_802408F0
    ExecWait  $Script_802446D0
    Exec  $Script_EnterWalk_80240AC0
    Wait  1`
    Return
    End
}

PADDING: 80240C84 to 80240C90 (00000C84 to 00000C90)
00000000 00000000 00000000

#new:Script $Script_80240C90
{
    Label  0
    Call  MakeLerp      ( 00000000 FFFFFE98 00000064 .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:ha1 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:ha2 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:ha3 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:ha4 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:ha5 *Var[0] 00000000 00000000 00000001 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_80240DBC
{
    Label  0
    Call  MakeLerp      ( 00000000 000000A0 0000003C .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:m1_1 *Var[0] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:m1_2 *Var[0] 00000000 00000001 00000000 )
    Call  RotateModel   ( ~Model:m2_1 *Var[0] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:m2_2 *Var[0] 00000000 00000001 00000000 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Call  MakeLerp      ( 000000A0 00000000 0000003C .Easing:CosInOut )
    Label  2
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:m1_1 *Var[0] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:m1_2 *Var[0] 00000000 00000001 00000000 )
    Call  RotateModel   ( ~Model:m2_1 *Var[0] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:m2_2 *Var[0] 00000000 00000001 00000000 )
    Wait  2`
    If  *Var[1]  ==  00000001
        Goto  2
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_80240FAC
{
    Label  0
    Call  MakeLerp      ( 00000000 FFFFFE98 00000064 .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:hari1 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:hari2 *Var[0] 00000000 00000000 00000001 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_80241078
{
    Exec  $Script_80240C90
    Exec  $Script_80240DBC
    Exec  $Script_80240FAC
    Return
    End
}

PADDING: 802410AC to 802410B0 (000010AC to 000010B0)
00000000

#new:Script $Script_802410B0
{
    NewArray  00000014 *Var[0]
    UseArray  *Var[0]
    SetF  *Array[2]  *Fixed[0.0]
    SetF  *Array[3]  *Fixed[0.0]
    SetF  *Array[7]  *Fixed[0.0]
    SetF  *Array[8]  *Fixed[0.0]
    SetF  *Array[E]  *Fixed[0.0]
    SetF  *Array[F]  *Fixed[0.0]
    SetF  *Array[10]  *Fixed[0.0]
    Set   *AreaFlag[003]  .False
    Label  0
    Switch  *MapVar[0]
        Case  ==  00000000
            UseIntBuffer  *MapVar[1]
            Get3Int  *Var[0] *Var[1] *Var[2]
            SetF  *Array[0]  *Var[0]
            SetF  *Array[1]  *Var[1]
            Call  AddVectorPolar    ( *Array[0] *Array[1] *Fixed[40.0] *Var[2] )
            SetF  *Array[5]  *Var[0]
            SetF  *Array[6]  *Var[1]
            SetF  *Var[3]  *Var[2]
            AddF  *Var[3]  *Fixed[180.0]
            Call  AddVectorPolar    ( *Array[5] *Array[6] *Fixed[40.0] *Var[3] )
            SetF  *Array[B]  *Var[0]
            SetF  *Array[C]  *Var[1]
            SetF  *MapVar[B]  *Array[B]
            SetF  *MapVar[C]  *Array[C]
            SetF  *MapVar[D]  *Var[2]
            SetF  *Array[11]  *Fixed[0.0]
            Label  B
            Get2Int  *Var[2] *Var[3]
            If  *Var[2]  ==  FFFFFFFF
                Goto  C
            EndIf
            Call  GetDist2D ( *Var[4] *Var[0] *Var[1] *Var[2] *Var[3] )
            AddF  *Array[11]  *Var[4]
            SetF  *Var[0]  *Var[2]
            SetF  *Var[1]  *Var[3]
            Goto  B
            Label  C
            SubF  *Array[11]  *Fixed[40.0]
            SetF  *Array[A]  *Fixed[0.0]
            SetF  *Array[D]  *Fixed[0.0]
            Set   *Array[12]  00000000
            If  *MapFlag[00]  ==  .True
                Set   *MapVar[0]  00000001
            EndIf
        Case  ==  00000001
            UseIntBuffer  *MapVar[1]
            Call  $Function_80240168    ( 00000003 00000000 00000000 )
            Get2Int  *Var[0] *Var[1]
            If  *Var[0]  ==  FFFFFFFF
                Set   *MapVar[0]  00000064
                Set   *MapFlag[00]  .False
            Else
                SetF  *Array[2]  *Var[0]
                SetF  *Array[3]  *Var[1]
                Set   *Array[4]  00000001
                SetF  *Array[7]  *Var[0]
                SetF  *Array[8]  *Var[1]
                Set   *Array[9]  00000001
                Set   *MapVar[0]  0000000A
            EndIf
        Case  ==  0000000A
            Switch  *MapVar[2]
                Case  ==  00000000
                    SetF  *Array[A]  *Fixed[10.0]
                Case  ==  00000001
                    Call  $Function_80240388    ( *Array[12] *Array[A] *Fixed[0.0] *Fixed[10.0] 00000064 00000001 *Fixed[0.0] )
                    Add   *Array[12]  00000001
                Case  ==  00000002
                    Set   *Var[0]  *Array[D]
                    Set   *Var[1]  *Array[11]
                    Call  $Function_80240388    ( *Var[0] *Array[A] *Fixed[10.0] *Fixed[2.0] *Var[1] 00000000 *Fixed[0.0] )
                Case  ==  00000003
                    Set   *Var[0]  *Array[D]
                    Set   *Var[1]  *Array[11]
                    Div   *Var[1]  00000002
                    Call  $Function_80240388    ( *Var[0] *Array[A] *Fixed[1.0] *Fixed[10.0] *Var[1] 00000000 *Fixed[0.0] )
            EndSwitch
            Call  GetDist2D ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
            Call  $Function_802400E4    ( *Var[0] *Array[A] *Var[2] )
            If  *Var[2]  ==  00000001
                Call  $Function_8024001C    ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
                Call  AddVectorPolar        ( *Array[0] *Array[1] *Array[A] *Var[0] )
            Else
                SetF  *Var[1]  *Array[A]
                SubF  *Var[1]  *Var[0]
                SetF  *Array[0]  *Array[2]
                SetF  *Array[1]  *Array[3]
                UseIntBuffer  *MapVar[1]
                Call  $Function_80240168    ( 00000003 00000002 *Array[4] )
                Get2Int  *Array[2] *Array[3]
                Add   *Array[4]  00000001
                If  *Array[2]  ==  FFFFFFFF
                    Set   *MapVar[0]  00000064
                    Set   *MapFlag[00]  .False
                    Set   *Flag[01]  .True
                Else
                    Call  $Function_8024001C    ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
                    Call  AddVectorPolar        ( *Array[0] *Array[1] *Var[1] *Var[0] )
                EndIf
            EndIf
            Call  GetDist2D ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
            Call  $Function_802400E4    ( *Var[0] *Array[A] *Var[2] )
            If  *Var[2]  ==  00000001
                Call  $Function_8024001C    ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
                Call  AddVectorPolar        ( *Array[5] *Array[6] *Array[A] *Var[0] )
            Else
                SetF  *Var[1]  *Array[A]
                SubF  *Var[1]  *Var[0]
                SetF  *Array[5]  *Array[7]
                SetF  *Array[6]  *Array[8]
                UseIntBuffer  *MapVar[1]
                Call  $Function_80240168    ( 00000003 00000002 *Array[9] )
                Get2Int  *Array[7] *Array[8]
                Add   *Array[9]  00000001
                If  *Array[7]  ==  FFFFFFFF
                    Set   *MapVar[0]  00000064
                    Set   *MapFlag[00]  .False
                    Set   *Flag[01]  .False
                Else
                    Call  $Function_8024001C    ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
                    Call  AddVectorPolar        ( *Array[5] *Array[6] *Var[1] *Var[0] )
                EndIf
            EndIf
            If  *MapVar[0]  ==  00000064
                If  *Flag[01]  ==  .True
                    Call  $Function_8024001C    ( *Var[0] *Array[0] *Array[1] *Array[5] *Array[6] )
                    SetF  *Array[5]  *Array[0]
                    SetF  *Array[6]  *Array[1]
                    Call  AddVectorPolar        ( *Array[5] *Array[6] *Fixed[80.0] *Var[0] )
                Else
                    Call  $Function_8024001C    ( *Var[0] *Array[5] *Array[6] *Array[0] *Array[1] )
                    SetF  *Array[0]  *Array[5]
                    SetF  *Array[1]  *Array[6]
                    Call  AddVectorPolar        ( *Array[0] *Array[1] *Fixed[80.0] *Var[0] )
                EndIf
            EndIf
            SetF  *Var[0]  *Array[0]
            SetF  *Var[1]  *Array[1]
            AddF  *Var[0]  *Array[5]
            AddF  *Var[1]  *Array[6]
            DivF  *Var[0]  *Fixed[2.0]
            DivF  *Var[1]  *Fixed[2.0]
            Call  $Function_8024001C    ( *Var[2] *Array[5] *Array[6] *Array[0] *Array[1] )
            SetF  *MapVar[B]  *Var[0]
            SetF  *MapVar[C]  *Var[1]
            SetF  *MapVar[D]  *Var[2]
            Call  GetDist2D ( *Var[3] *Var[0] *Var[1] *Array[B] *Array[C] )
            AddF  *Array[D]  *Var[3]
            SetF  *Array[E]  *Array[D]
            MulF  *Array[E]  *Fixed[1.4326172]
            If  *Flag[00]  ==  .False
                SetF  *Var[0]  *Array[A]
                If  *Var[0]  <  00000001
                    SetF  *Var[0]  *Fixed[1.0]
                EndIf
                DivF  *Var[0]  *Fixed[3.0]
                SubF  *Array[F]  *Var[0]
                If  *Array[F]  <  FFFFFFF6
                    SetF  *Array[F]  *Fixed[-10.0]
                    Set   *Flag[00]  .True
                    If  *AreaFlag[003]  ==  .False
                        Call  PlaySound ( 000001FF )
                    Else
                        Call  PlaySound ( 00000084 )
                    EndIf
                EndIf
            Else
                SetF  *Var[0]  *Array[A]
                If  *Var[0]  <  00000001
                    SetF  *Var[0]  *Fixed[1.0]
                EndIf
                DivF  *Var[0]  *Fixed[3.0]
                AddF  *Array[F]  *Var[0]
                If  *Array[F]  >  0000000A
                    SetF  *Array[F]  *Fixed[10.0]
                    Set   *Flag[00]  .False
                    If  *AreaFlag[003]  ==  .False
                        Call  PlaySound ( 000001FE )
                        Set   *AreaFlag[003]  .True
                    Else
                        Call  PlaySound ( 000001FE )
                        Set   *AreaFlag[003]  .False
                    EndIf
                EndIf
            EndIf
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
            Call  $Function_802401EC    ( *Var[0] 00000032 *Var[1] *MapVar[D] )
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            AddF  *Var[2]  *Fixed[180.0]
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
            Call  $Function_80240290    ( FFFFFFFC *Var[0] 00000032 *Var[1] *MapVar[D] )
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            If  *Var[2]  <  000000B4
                AddF  *Var[2]  *Fixed[90.0]
            Else
                SubF  *Var[2]  *Fixed[90.0]
            EndIf
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
            Call  $Function_80240290    ( 00000000 *Var[0] 00000032 *Var[1] *MapVar[D] )
        Case  ==  00000064
    EndSwitch
    Call  TranslateGroup    ( ~Model:p2 *Fixed[79.1] *Fixed[-27.93] *Fixed[-29.53] )
    Call  TranslateGroup    ( ~Model:p3 *Fixed[-35.1] *Fixed[-27.93] *Fixed[-29.53] )
    Call  RotateGroup       ( ~Model:p2 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  RotateGroup       ( ~Model:p3 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  TranslateGroup    ( ~Model:p5 *Fixed[40.5] *Fixed[-20.0] *Fixed[-0.4] )
    Call  TranslateGroup    ( ~Model:p6 *Fixed[-39.5] *Fixed[-20.0] *Fixed[-0.4] )
    Call  TranslateGroup    ( ~Model:popo *MapVar[B] *Fixed[10.0] *MapVar[C] )
    If  *MapVar[D]  <  000000B4
        SetF  *Var[1]  *MapVar[D]
        SubF  *Var[1]  *Fixed[90.0]
        Call  RotateGroup   ( ~Model:popo *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
    Else
        SetF  *Var[1]  *MapVar[D]
        SubF  *Var[1]  *Fixed[180.0]
        SubF  *Var[1]  *Fixed[90.0]
        Call  RotateGroup   ( ~Model:popo *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
    EndIf
    Call  RotateGroup       ( ~Model:p2 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  RotateGroup       ( ~Model:p3 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  TranslateGroup    ( ~Model:p2 *Fixed[-79.1] *Fixed[27.93] *Fixed[29.53] )
    Call  TranslateGroup    ( ~Model:p3 *Fixed[35.1] *Fixed[27.93] *Fixed[29.53] )
    Call  TranslateGroup    ( ~Model:p5 *Fixed[-40.5] *Fixed[20.0] *Fixed[0.4] )
    Call  TranslateGroup    ( ~Model:p6 *Fixed[39.5] *Fixed[20.0] *Fixed[0.4] )
    If  *MapVar[D]  <  000000B4
        Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
        Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
    Else
        Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
        Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    EndIf
    Call  TranslateGroup    ( ~Model:p2 *Fixed[0.0] *Array[F] *Fixed[0.0] )
    SetF  *Var[0]  *Array[F]
    MulF  *Var[0]  *Fixed[-1.0]
    Call  TranslateGroup    ( ~Model:p3 *Fixed[0.0] *Var[0] *Fixed[0.0] )
    SetF  *Var[0]  *Array[A]
    If  *Var[0]  <  00000001
        SetF  *Var[0]  *Fixed[1.0]
    EndIf
    AddF  *Array[10]  *Var[0]
    If  *Array[10]  >  00000168
        SubF  *Array[10]  *Fixed[360.0]
    EndIf
    Call  RotateGroup   ( ~Model:p4 *Array[10] *Fixed[0.0] *Fixed[1.0] *Fixed[0.0] )
    SetF  *Array[B]  *MapVar[B]
    SetF  *Array[C]  *MapVar[C]
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80242278
{
    Label  0
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  SetCamTarget  ( .Cam:Default *Var[0] 00000000 *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_802422E0
{
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  MakeLerp      ( 00000000 *Var[1] 0000002D .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  GetPlayerPos  ( *Var[2] *Var[3] *Var[4] )
        Call  SetCamTarget  ( .Cam:Default *Var[2] *Var[0] *Var[4] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Return
    End
}

#new:Script $Script_802423A4
{
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  MakeLerp      ( *Var[1] 00000000 00000028 .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  GetPlayerPos  ( *Var[2] *Var[3] *Var[4] )
        Call  SetCamTarget  ( .Cam:Default *Var[2] *Var[0] *Var[4] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Loop
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Call  SetCamTarget  ( .Cam:Default *Var[0] 00000000 *Var[2] )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_802424BC
{
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    Thread
        UseIntBuffer  *Var[0]
        Get3Int  *Var[1] *Var[2] *Var[3]
        Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed    ( *Fixed[4.0] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerSpeed    ( *Fixed[0.7] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerPos      ( *Var[1] 00000032 *Var[2] )
        Call  SetPlayerAnimation    ( 00010002 )
        Call  InterpPlayerYaw   ( *Var[3] 00000000 )
    EndThread
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    AddF  *Var[3]  *Fixed[180.0]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
    Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[0.7] )
    Call  NpcJump0  ( .Npc:Partner *Var[1] 00000032 *Var[2] 0000000A )
    Call  SetNpcSpeed       ( .Npc:Partner *Fixed[0.5] )
    Call  NpcMoveTo ( .Npc:Partner *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  InterpNpcYaw      ( .Npc:Partner *Var[A] 00000000 )
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    If  *Var[3]  <  000000B4
        AddF  *Var[3]  *Fixed[90.0]
    Else
        SubF  *Var[3]  *Fixed[90.0]
    EndIf
    SetF  *Var[4]  *Var[1]
    SetF  *Var[5]  *Var[2]
    SetF  *Var[6]  *Var[3]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[100.0] *Var[3] )
    Call  SetNpcSpeed   ( 00000000 *Fixed[3.0] )
    Call  SetNpcAnimation   ( 00000000 008C0003 )
    Call  NpcMoveTo     ( 00000000 *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( 00000000 008C0001 )
    Call  AddVectorPolar    ( *Var[4] *Var[5] *Fixed[20.0] *Var[6] )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[0.7] )
    Call  NpcJump0      ( 00000000 *Var[4] 00000032 *Var[5] 0000000A )
    Call  InterpNpcYaw  ( 00000000 *Var[A] 00000000 )
    Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000005 000F0009 ) % We're leaving! All aboard!
    Call  PlaySound     ( 00000083 )
    Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
    Wait  10`
    Return
    End
}

#new:Script $Script_802428BC
{
    Call  StopSound ( 00000083 )
    Call  SetMusicTrack     ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    SetF  *Var[0]  *MapVar[B]
    SetF  *Var[1]  *MapVar[C]
    SetF  *Var[2]  *MapVar[D]
    If  *Var[2]  <  000000B4
        AddF  *Var[2]  *Fixed[90.0]
    Else
        SubF  *Var[2]  *Fixed[90.0]
    EndIf
    Call  AddVectorPolar    ( *Var[0] *Var[1] *Fixed[100.0] *Var[2] )
    Thread
        Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
        Call  NpcJump0  ( 00000000 *Var[0] 00000032 *Var[1] 0000000A )
        Call  SetNpcAnimation   ( 00000000 008C0003 )
        Call  SetNpcSpeed       ( 00000000 *Fixed[2.0] )
        UseIntBuffer  *Var[9]
        Get2Int  *Var[3] *Var[4]
        Call  NpcMoveTo ( 00000000 *Var[3] *Var[4] 00000000 )
        Call  SetNpcAnimation   ( 00000000 008C0001 )
        Call  InterpNpcYaw      ( 00000000 0000010E 0000000F )
        Call  SetNpcFlagBits    ( 00000000 00000140 .False )
    EndThread
    Wait  10`
    Thread
        AddF  *Var[2]  *Fixed[60.0]
        Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed        ( *Fixed[3.0] )
        Call  PlayerMoveTo  ( *Var[0] *Var[1] 00000000 )
        Call  SetPlayerAnimation    ( 00010002 )
    EndThread
    Wait  10`
    Sub   *Var[1]  0000001E
    Call  SetNpcAnimation   ( .Npc:Partner 00000102 )
    Call  SetNpcSpeed       ( .Npc:Partner *Fixed[2.5] )
    Call  NpcMoveTo ( .Npc:Partner *Var[0] *Var[1] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .False )
    Return
    End
}

#new:Script $Script_80242BB8
{
    Switch  *AreaByte[6]
        Case  ==  00000000
            Call  GotoMapSpecial    ( $ASCII_80244E68 00000003 00000001 ) % omo_03
        Case  ==  00000001
            Call  GotoMapSpecial    ( $ASCII_80244E60 00000003 00000001 ) % omo_06
        Case  ==  00000002
            Call  GotoMapSpecial    ( $ASCII_80244E58 00000002 00000001 ) % omo_08
        Case  ==  00000003
            Call  GotoMapSpecial    ( $ASCII_80244E50 00000003 00000001 ) % omo_10
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script $Script_80242C78
{
    Switch  *AreaByte[5]
        Case  00000000  to  00000001
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    Call  GotoMapSpecial    ( $ASCII_80244E60 00000002 00000001 ) % omo_06
                Case  ==  00000002
                    Call  GotoMapSpecial    ( $ASCII_80244E58 00000001 00000001 ) % omo_08
                Case  ==  00000003
                    Call  GotoMapSpecial    ( $ASCII_80244E50 00000002 00000001 ) % omo_10
            EndSwitch
        Case  ==  00000002
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80244E60 00000002 00000001 ) % omo_06
                    Else
                        Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
                    EndIf
                Case  ==  00000003
                    Call  GotoMapSpecial    ( $ASCII_80244E50 00000002 00000001 ) % omo_10
            EndSwitch
        Case  ==  00000003
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80244E60 00000002 00000001 ) % omo_06
                    Else
                        Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
                    EndIf
                Case  ==  00000002
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80244E58 00000001 00000001 ) % omo_08
                    Else
                        Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
                    EndIf
            EndSwitch
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script $Script_80242F1C
{
    Label  A
    Wait  1`
    Call  $Function_80240518 ( )
    If  *Var[0]  !=  00000001
        Goto  A
    EndIf
    If  *AreaFlag[002]  ==  .False
        ExecWait  $Script_80242BB8
    Else
        ExecWait  $Script_80242C78
    EndIf
    Return
    End
}

#new:Script $Script_80242FAC
{
    Call  SetTexPanner      ( ~Model:y_a 00000002 )
    Call  EnableTexPanning  ( ~Model:y_a .True )
    Set   *MapVar[9]  00008000
    Thread
        Loop
            Call  SetTexPanOffset   ( 00000002 00000000 *MapVar[9] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Set   *Var[5]  00000000
    Label  0
    Add   *Var[5]  00000002
    If  *Var[5]  >  00000168
        Sub   *Var[5]  00000168
    EndIf
    Call  RotateModel   ( ~Model:y_a *Var[5] 00000000 00000000 FFFFFFFF )
    Wait  1`
    If  *MapFlag[01]  ==  .True
        Goto  A
    EndIf
    Goto  0
    Label  A
    If  *AreaFlag[002]  ==  .False
        Set   *Var[2]  0000010E
        Call  EnableTexPanning  ( ~Model:y_c2 .False )
        Call  EnableTexPanning  ( ~Model:y_b2 .True )
    Else
        Set   *Var[2]  0000005A
        Call  EnableTexPanning  ( ~Model:y_b2 .False )
        Call  EnableTexPanning  ( ~Model:y_c2 .True )
    EndIf
    If  *Var[2]  <  *Var[5]
        Add   *Var[2]  00000168
    EndIf
    Set   *Var[6]  *AreaFlag[002]
    Call  MakeLerp  ( *Var[5] *Var[2] 0000003C .Easing:CosFastOvershoot )
    Call  UpdateLerp ( )
    Set   *Var[4]  FFFFFFFF
    Label  B
    Call  UpdateLerp ( )
    If  *Var[2]  <  *Var[0]
        Set   *Var[3]  00000000
    Else
        Set   *Var[3]  00000001
    EndIf
    If  *Var[4]  !=  FFFFFFFF
        If  *Var[3]  !=  *Var[4]
            Call  PlaySound ( 000001F9 )
        EndIf
    EndIf
    Set   *Var[4]  *Var[3]
    Call  RotateModel   ( ~Model:y_a *Var[0] 00000000 00000000 FFFFFFFF )
    Wait  1`
    If  *AreaFlag[002]  !=  *Var[6]
        Goto  15
    EndIf
    If  *Var[1]  ==  00000001
        Goto  B
    EndIf
    Call  PlaySound ( 000001FA )
    If  *AreaFlag[002]  ==  .False
        Set   *MapVar[9]  00004000
    Else
        Set   *MapVar[9]  0000C000
    EndIf
    Label  14
    Wait  1`
    If  *AreaFlag[002]  ==  *Var[6]
        Goto  14
    EndIf
    Label  15
    Set   *Var[5]  *Var[0]
    Goto  A
    Return
    End
}

#new:Script $Script_802433CC
{
    Call  GetCurrentPartner ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  GetCurrentPartnerID   ( *Var[0] )
        If  *Var[0]  ==  .Partner:Parakarry % 4
            Return
        EndIf
    EndIf
    If  *MapFlag[01]  ==  .True
        If  *AreaFlag[002]  ==  .False
            Return
        EndIf
    EndIf
    Set   *MapFlag[01]  .True
    Set   *AreaFlag[002]  .False
    Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_b1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_b2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o920 )
    Call  UpdateColliderTransform   ( ~Collider:o921 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_b1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_b2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o920 )
    Call  UpdateColliderTransform   ( ~Collider:o921 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_80243604
{
    Call  GetCurrentPartner ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  GetCurrentPartnerID   ( *Var[0] )
        If  *Var[0]  ==  .Partner:Parakarry % 4
            Return
        EndIf
    EndIf
    If  *MapFlag[01]  ==  .True
        If  *AreaFlag[002]  ==  .True
            Return
        EndIf
    EndIf
    Set   *MapFlag[01]  .True
    Set   *AreaFlag[002]  .True
    Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_c1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_c2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o923 )
    Call  UpdateColliderTransform   ( ~Collider:o924 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_c1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_c2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o923 )
    Call  UpdateColliderTransform   ( ~Collider:o924 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_UpdateTexturePan_8024383C
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_8024055C ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_80240680 ( )
    Return
    End
}

#new:Script $Script_802438D8
{
    Set   *MapFlag[01]  .False
    Set   *MapFlag[0A]  .False
    Exec  $Script_80242FAC
    Call  ParentColliderToModel ( ~Collider:o920 ~Model:y_b1 )
    Call  ParentColliderToModel ( ~Collider:o921 ~Model:y_b2 )
    Call  ParentColliderToModel ( ~Collider:o923 ~Model:y_c1 )
    Call  ParentColliderToModel ( ~Collider:o924 ~Model:y_c2 )
    Bind  $Script_802433CC .Trigger:FloorTouch ~Collider:o920 00000001 00000000
    Bind  $Script_802433CC .Trigger:WallHammer ~Collider:o921 00000001 00000000
    Bind  $Script_80243604 .Trigger:FloorTouch ~Collider:o923 00000001 00000000
    Bind  $Script_80243604 .Trigger:WallHammer ~Collider:o924 00000001 00000000
    Thread
        Set   *Var[0]  00000001
        Set   *Var[1]  FFFFFBB4
        Set   *Var[2]  00000000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000000
        Set   *Var[5]  00000001
        Set   *Var[6]  00000001
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_8024383C
    EndThread
    Return
    End
}

#new:Unknown $???_80243AC0
{
    0000000A FFFFFF97
}

#new:Unknown $???_80243AC8
{
    F24A7170 F2473487 F24BE280 F24C6B4F F2473487 F24E9480 F246A528 F251F729
    F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80243AF8
{
    Call  FadeOutMusic  ( 00000000 00000BB8 )
    Call  DisablePlayerInput    ( .True )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
    Wait  10`
    Call  DisablePlayerPhysics  ( .True )
    Exec  $Script_802423A4
    Set   *AreaByte[5]  00000003
    Set   *Var[0]  $???_80243AC8
    ExecWait  $Script_802424BC
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
    Set   *MapVar[0]  00000000
    Set   *MapVar[1]  $???_80243AC8
    Set   *MapVar[2]  00000001
    Set   *MapFlag[00]  .True
    Label  A
    If  *MapVar[B]  <  0000015E
        Wait  1`
        Goto  A
    EndIf
    Call  GotoMap   ( $ASCII_80244E70 00000000 ) % omo_16
    Set   *ToyTrain_Destination  00000003
    Wait  100`
    Return
    End
}

#new:Unknown $???_80243C68
{
    F24A7170 F2473487 F24EB280 F2487792 F2473487 F2466080 F246A528 F244F4D4
    F244F3C0 F242FDD8 F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80243CA0
{
    Call  FadeOutMusic  ( 00000000 00000BB8 )
    Call  DisablePlayerInput    ( .True )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
    Wait  10`
    Call  DisablePlayerPhysics  ( .True )
    Exec  $Script_802423A4
    Set   *AreaByte[5]  00000003
    Set   *Var[0]  $???_80243C68
    ExecWait  $Script_802424BC
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
    Set   *MapVar[0]  00000000
    Set   *MapVar[1]  $???_80243C68
    Set   *MapVar[2]  00000001
    Set   *MapFlag[00]  .True
    Label  A
    If  *MapVar[B]  >  FFFFFEA2
        Wait  1`
        Goto  A
    EndIf
    Call  GotoMap   ( $ASCII_80244E70 00000001 ) % omo_16
    Set   *ToyTrain_Destination  00000002
    Wait  100`
    Return
    End
}

#new:Unknown $???_80243E10
{
    F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24C6B4F
    F2473487 F249D16C F247348B FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80243E48
{
    F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24C6B4F
    F2473487 F2487792 F2473487 F2466080 F246A528 F244F4D4 F244F3C0 F242FDD8
    F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80243E98
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  DisablePartnerAI      ( 00000000 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
    If  *AreaByte[6]  ==  00000003
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80243E10
        Set   *MapVar[2]  00000002
        Exec  $Script_802410B0
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80242278 *Var[B]
        Label  A
        If  *MapFlag[00]  ==  .True
            Wait  1`
            Goto  A
        EndIf
        Wait  20`
        Kill  *Var[B]
        Exec  $Script_802422E0
        Call  $Function_80240000 ( )
        Set   *Var[9]  $???_80243AC0
        ExecWait  $Script_802428BC
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0011 ) % Station stop: Red Station! Welcome to Red Station, ...
        Call  ModifyColliderFlags   ( 00000001 ~Collider:o961 7FFFFE00 )
        Call  DisablePlayerPhysics  ( .False )
        Call  EnablePartnerAI ( )
        Call  DisablePlayerInput    ( .False )
    Else
        Exec  $Script_80242278
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80243E48
        Set   *MapVar[2]  00000000
        Exec  $Script_802410B0
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80242F1C
        Label  14
        If  *MapVar[B]  >  FFFFFEA2
            Wait  1`
            Goto  14
        EndIf
        Call  GotoMap   ( $ASCII_80244E70 00000001 ) % omo_16
        Set   *ToyTrain_Destination  00000002
        Wait  100`
    EndIf
    Return
    End
}

#new:Unknown $???_80244150
{
    F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F2487792
    F2473487 F24B116C F247348B FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80244188
{
    F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F2487792
    F2473487 F24C6B4F F2473487 F24E9480 F246A528 F251F729 F2429C51 FFFFFFFF
    FFFFFFFF FFFFFFFF
}

#new:Script $Script_802441D0
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  DisablePartnerAI      ( 00000000 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
    If  *AreaByte[6]  ==  00000003
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80244150
        Set   *MapVar[2]  00000002
        Exec  $Script_802410B0
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80242278 *Var[B]
        Label  A
        If  *MapFlag[00]  ==  .True
            Wait  1`
            Goto  A
        EndIf
        Wait  20`
        Kill  *Var[B]
        Exec  $Script_802422E0
        Call  $Function_80240000 ( )
        Set   *Var[9]  $???_80243AC0
        ExecWait  $Script_802428BC
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0011 ) % Station stop: Red Station! Welcome to Red Station, ...
        Call  ModifyColliderFlags   ( 00000001 ~Collider:o961 7FFFFE00 )
        Call  DisablePlayerPhysics  ( .False )
        Call  EnablePartnerAI ( )
        Call  DisablePlayerInput    ( .False )
    Else
        Exec  $Script_80242278
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80244188
        Set   *MapVar[2]  00000000
        Exec  $Script_802410B0
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80242F1C
        Label  14
        If  *MapVar[B]  <  0000015E
            Wait  1`
            Goto  14
        EndIf
        Call  GotoMap   ( $ASCII_80244E70 00000000 ) % omo_16
        Set   *ToyTrain_Destination  00000003
        Wait  100`
    EndIf
    Return
    End
}

#new:IntTable $IntTable_80244488
{
    00000002 00000001 00000000
}

#new:IntTable $IntTable_80244494
{
    00000000 00000001 00000002
}

#new:Script $Script_802444A0
{
    If  *MapFlag[01]  ==  .False
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0006 ) % Which way are you heading? Press one of those swit ...
    Else
        If  *AreaFlag[002]  ==  .False
            Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
            Call  ShowChoice    ( 001E0043 ) % Green Station Pink Station Blue Station Don't get  ...
            If  *Var[0]  !=  00000003
                Call  CloseMessage ( )
                UseIntBuffer  $IntTable_80244488
                Add   *Var[0]  00000001
                Loop  *Var[0]
                    Get1Int  *Var[1]
                EndLoop
                Set   *AreaByte[6]  *Var[1]
                ExecWait  $Script_80243CA0
            Else
                Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
            EndIf
        Else
            Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
            Call  ShowChoice    ( 001E0042 ) % Blue Station Pink Station Green Station Don't get  ...
            If  *Var[0]  !=  00000003
                Call  CloseMessage ( )
                UseIntBuffer  $IntTable_80244494
                Add   *Var[0]  00000001
                Loop  *Var[0]
                    Get1Int  *Var[1]
                EndLoop
                Set   *AreaByte[6]  *Var[1]
                ExecWait  $Script_80243AF8
            Else
                Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
            EndIf
        EndIf
    EndIf
    Return
    End
}

#new:Unknown $???_802446B8
{
    F24A7170 F2473487 F24BE280 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_802446D0
{
    ExecWait  $Script_802438D8
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_802446B8
        Set   *MapVar[2]  00000000
        Exec  $Script_802410B0
        Set   *MapFlag[00]  .True
    Else
        Call  GetEntryID    ( *Var[0] )
        Switch  *Var[0]
            Case  ==  ~Entry:Entry2
                Exec  $Script_802441D0
            Case  ==  ~Entry:Entry3
                Exec  $Script_80243E98
            Default
                Set   *MapVar[0]  00000000
                Set   *MapVar[1]  $???_802446B8
                Set   *MapVar[2]  00000000
                Exec  $Script_802410B0
                Set   *MapFlag[00]  .True
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_80244810
{
    Return
    End
}

#new:NpcSettings $NpcSettings_80244820
{
    00000000 00200018 $Script_80244810 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

#new:Script $Script_Interact_8024484C
{
    Call  DisablePlayerInput    ( .True )
    ExecWait  $Script_802444A0
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_Init_80244888
{
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_8024484C )
    Return
    End
}

#new:Script $Script_Interact_802448AC
{
    Switch  *StoryProgress
        Case  <  00000002
            Call  SpeakToPlayer ( .Npc:Self 008C0404 008C0401 00000000 000F0031 ) % The other day, I saw a gang of Shy Guys carrying a ...
        Case  <  00000004
            Call  SpeakToPlayer ( .Npc:Self 008C0404 008C0401 00000000 000F0032 ) % You beat that weird, giggling ghost that likes the ...
        Default
            Call  SpeakToPlayer ( .Npc:Self 008C0404 008C0401 00000000 000F0033 ) % Oh. I see. The Shy Guys were holding a Star Spirit ...
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_80244950
{
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_802448AC )
    Return
    End
}

#new:NpcGroup $NpcGroup_80244974
{
    00000000 $NpcSettings_80244820 ~Vec3f:NPC_80244974 % 10 50 -105
    00400D05 $Script_Init_80244888 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80244974
    ~AnimationTable:NPC_80244974 % .Sprite:TrainStationToad
    00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
    %
    % $NpcGroup_80244974[1F0]
    00000001 $NpcSettings_80244820 ~Vec3f:NPC_80244B64 % -50 0 80
    00400D05 $Script_Init_80244950 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_80244B64
    ~AnimationTable:NPC_80244B64 % .Sprite:TrainStationToad
    00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
}

#new:NpcGroupList $NpcGroupList_80244D54
{
    00000002 $NpcGroup_80244974 00000000
    00000000 00000000 00000000
}

PADDING: 80244D6C to 80244D70 (00004D6C to 00004D70)
00000000

#new:Script $Script_MakeEntities
{
    Call  MakeEntity    ( .Entity:HiddenYellowBlock ~Vec4d:Entity80244D70 .Item:SuperShroom 80000000 )
    Call  AssignBlockFlag   ( *Flag_OMO_4E )
    Call  MakeEntity    ( .Entity:HealingBlock ~Vec4d:Entity80244DA8 80000000 )
    Call  MakeEntity    ( .Entity:SavePoint ~Vec4d:Entity80244DCC 80000000 )
    Call  MakeEntity    ( .Entity:HiddenPanel ~Vec4d:Entity80244DF0 ~Model:soto 80000000 )
    Call  AssignPanelFlag   ( *Flag_OMO_5F )
    Return
    End
}

PADDING: 80244E38 to 80244E40 (00004E38 to 00004E40)
00000000 00000000

#new:ASCII $ASCII_80244E40
{
    "omo_11"
}

#new:ASCII $ASCII_80244E48
{
    "omo_02"
}

#new:ASCII $ASCII_80244E50
{
    "omo_10"
}

#new:ASCII $ASCII_80244E58
{
    "omo_08"
}

#new:ASCII $ASCII_80244E60
{
    "omo_06"
}

#new:ASCII $ASCII_80244E68
{
    "omo_03"
}

#new:ASCII $ASCII_80244E70
{
    "omo_16"
}

PADDING: 80244E78 to 80244E80 (00004E78 to 00004E80)
00000000 00000000

