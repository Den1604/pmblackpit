% Script File: end_00.mscr
% Decoded from: 0 to E960 (end_00)

#new:Function_Init $Function_Init
{
	LAW       V1, 8007419C
	ADDIU     V0, R0, 3
	SB        V0, 84 (V1)
	JR        RA
	CLEAR     V0
}

PADDING: 80240018 to 80240020 (00000018 to 00000020)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80240020
{
	ADDIU     SP, SP, FF38
	SW        S0, 88 (SP)
	COPY      S0, A1
	SW        RA, A0 (SP)
	SW        S5, 9C (SP)
	SW        S4, 98 (SP)
	SW        S3, 94 (SP)
	SW        S2, 90 (SP)
	SW        S1, 8C (SP)
	SDC1      F26, C0 (SP)
	SDC1      F24, B8 (SP)
	SDC1      F22, B0 (SP)
	SDC1      F20, A8 (SP)
	LWC1      F22, 10 (S0)
	CVT.S.W   F22, F22
	MTC1      R0, F26
	LIF       F20, 255.0
	LW        V0, 1C (A0)
	MFC1      A1, F26
	MFC1      A2, F20
	LWC1      F24, 14 (S0)
	CVT.S.W   F24, F24
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	CLEAR     A0
	C.LT.S    F20, F0
	NOP
	BC1F      .o80
	ADDIU     S1, SP, 38
	MOV.S     F0, F20
	.o80
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	COPY      A3, A2
	COPY      S5, A2
	SW        S5, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	SW        S1, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	JAL       8012E8E0
	LUI       S4, 1
	LBU       V0, 42 (SP)
	LIF       F21, 1.75
	MTC1      R0, F20
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F20
	NOP
	ORI       S4, S4, 1630
	CVT.D.S   F2, F22
	ADDIU     S0, SP, 48
	NEG.S     F24, F24
	ADD.D     F2, F2, F0
	MFC1      A2, F24
	MFC1      A3, F26
	CVT.S.D   F2, F2
	MFC1      A1, F2
	JAL       ~Func:guTranslateF
	COPY      A0, S0
	COPY      A0, S0
	LIA       S2, 800741F0
	LIA       S3, 8009A674
	LHU       A1, 0 (S2)
	LW        V0, 0 (S3)
	SLL       A1, A1, 6
	ADDU      A1, A1, S4
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V1, DA380002
	CLEAR     A0
	ADDIU     A1, SP, 20
	LIO       A2, 00050040
	LIA       S1, 8009A66C
	COPY      A3, S0
	LW        V0, 0 (S1)
	LHU       T0, 0 (S2)
	COPY      T1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S1)
	ANDI      V0, T0, FFFF
	SLL       V0, V0, 6
	ADDU      V0, V0, S4
	SW        V1, 0 (T1)
	LW        V1, 0 (S3)
	ADDIU     T0, T0, 1
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (T1)
	LBU       V0, 42 (SP)
	LW        V1, 3C (SP)
	LBU       T1, 40 (SP)
	LBU       T2, 41 (SP)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        V0, 38 (SP)
	MUL.D     F0, F0, F20
	NOP
	SH        T0, 0 (S2)
	SH        R0, 2E (SP)
	SB        S5, 30 (SP)
	SW        V1, 24 (SP)
	SH        T1, 28 (SP)
	SH        T2, 2A (SP)
	SW        V0, 20 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S1)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S1)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, A0 (SP)
	LW        S5, 9C (SP)
	LW        S4, 98 (SP)
	LW        S3, 94 (SP)
	LW        S2, 90 (SP)
	LW        S1, 8C (SP)
	LW        S0, 88 (SP)
	LDC1      F26, C0 (SP)
	LDC1      F24, B8 (SP)
	LDC1      F22, B0 (SP)
	LDC1      F20, A8 (SP)
	JR        RA
	ADDIU     SP, SP, C8
}

% Origin: HEURISTIC
#new:Function $Function_80240270
{
	ADDIU     SP, SP, FF40
	SW        S1, 8C (SP)
	COPY      S1, A0
	SW        S0, 88 (SP)
	COPY      S0, A1
	CLEAR     A0
	SW        RA, A0 (SP)
	SW        S5, 9C (SP)
	SW        S4, 98 (SP)
	SW        S3, 94 (SP)
	SW        S2, 90 (SP)
	SDC1      F24, B8 (SP)
	SDC1      F22, B0 (SP)
	SDC1      F20, A8 (SP)
	LWC1      F22, 10 (S0)
	CVT.S.W   F22, F22
	LIF       F20, 255.0
	LW        V0, 1C (S1)
	MFC1      A2, F20
	LWC1      F24, 14 (S0)
	CVT.S.W   F24, F24
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	CLEAR     A1
	C.LT.S    F20, F0
	NOP
	BC1F      .o7C
	ADDIU     S5, SP, 38
	MOV.S     F0, F20
	.o7C
	LW        A0, 1C (S1)
	LW        V1, 18 (S0)
	ADDIU     V0, A0, FFFC
	BNE       V1, V0, .oA8
	ADDIU     V0, A0, FFFD
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, A
	BEQ       R0, R0, .o114
	ADDIU     A2, R0, 40
	.oA8
	BNE       V1, V0, .oC8
	ADDIU     V0, A0, FFFE
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, A
	BEQ       R0, R0, .o114
	ADDIU     A2, R0, 60
	.oC8
	BNE       V1, V0, .oE8
	ADDIU     V0, A0, FFFF
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, A
	BEQ       R0, R0, .o114
	ADDIU     A2, R0, 7F
	.oE8
	BNE       V1, V0, .o104
	CLEAR     A0
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	ADDIU     A1, R0, A
	BEQ       R0, R0, .o114
	ADDIU     A2, R0, 50
	.o104
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	.o114
	COPY      A3, A2
	COPY      V0, A2
	SW        V0, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	SW        S5, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	JAL       8012E8E0
	LUI       S4, 1
	LBU       V0, A (S5)
	LIF       F21, 1.75
	MTC1      R0, F20
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F20
	NOP
	ORI       S4, S4, 1630
	CVT.D.S   F2, F22
	ADD.D     F2, F2, F0
	ADDIU     S3, SP, 48
	COPY      A0, S3
	NEG.S     F24, F24
	MFC1      A2, F24
	CVT.S.D   F2, F2
	MFC1      A1, F2
	JAL       ~Func:guTranslateF
	CLEAR     A3
	COPY      A0, S3
	LIA       S0, 800741F0
	LIA       S2, 8009A674
	LHU       A1, 0 (S0)
	LW        V0, 0 (S2)
	SLL       A1, A1, 6
	ADDU      A1, A1, S4
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V0, DA380002
	LIA       S1, 8009A66C
	LW        A0, 0 (S1)
	LHU       A1, 0 (S0)
	COPY      A2, A0
	SW        V0, 0 (A2)
	ANDI      V0, A1, FFFF
	SLL       V0, V0, 6
	LW        V1, 0 (S2)
	ADDU      V0, V0, S4
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (A2)
	LW        V0, 0 (S5)
	ADDIU     A0, A0, 8
	SW        A0, 0 (S1)
	SW        V0, 20 (SP)
	LW        V0, 4 (S5)
	ADDIU     A1, A1, 1
	SH        A1, 0 (S0)
	SW        V0, 24 (SP)
	LBU       V0, 8 (S5)
	SH        V0, 28 (SP)
	LBU       V0, 9 (S5)
	SH        V0, 2A (SP)
	LBU       V0, A (S5)
	COPY      A3, S3
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F20
	NOP
	CLEAR     A0
	LIO       A2, 00050040
	ADDIU     A1, SP, 20
	SH        R0, 2E (SP)
	ADDIU     V0, R0, FF
	SB        V0, 30 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S1)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S1)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, A0 (SP)
	LW        S5, 9C (SP)
	LW        S4, 98 (SP)
	LW        S3, 94 (SP)
	LW        S2, 90 (SP)
	LW        S1, 8C (SP)
	LW        S0, 88 (SP)
	LDC1      F24, B8 (SP)
	LDC1      F22, B0 (SP)
	LDC1      F20, A8 (SP)
	JR        RA
	ADDIU     SP, SP, C0
}

% Origin: HEURISTIC
#new:Function $Function_80240540
{
	ADDIU     SP, SP, FEF0
	SW        S2, D0 (SP)
	COPY      S2, A0
	SW        S0, C8 (SP)
	COPY      S0, A1
	SW        RA, E0 (SP)
	SW        S5, DC (SP)
	SW        S4, D8 (SP)
	SW        S3, D4 (SP)
	SW        S1, CC (SP)
	SDC1      F28, 108 (SP)
	SDC1      F26, 100 (SP)
	SDC1      F24, F8 (SP)
	SDC1      F22, F0 (SP)
	SDC1      F20, E8 (SP)
	LWC1      F22, 10 (S0)
	CVT.S.W   F22, F22
	LUI       A1, 4180
	LUI       A2, 4396
	LW        V0, 1C (S2)
	LWC1      F28, 14 (S0)
	CVT.S.W   F28, F28
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	ADDIU     A0, R0, C
	LIF       F2, 255.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o88
	ADDIU     S1, SP, 38
	MOV.S     F0, F2
	.o88
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	COPY      A3, A2
	COPY      S5, A2
	SW        S5, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	LW        V0, 1C (S2)
	LIO       A1, 3E4CCCCD
	LUI       A2, 4000
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	CLEAR     A0
	MOV.S     F20, F0
	LIF       F25, 1.875
	MTC1      R0, F24
	CVT.D.S   F0, F20
	C.LT.D    F24, F0
	NOP
	BC1F      .oFC
	SW        S1, 10 (SP)
	LIF       F20, 1.0
	.oFC
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	JAL       8012E8E0
	LW        A3, C (S0)
	LBU       V0, 42 (SP)
	LIF       F27, 1.75
	MTC1      R0, F26
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F26
	NOP
	CVT.D.S   F2, F22
	ADD.D     F2, F2, F0
	ADDIU     S4, SP, 48
	COPY      A0, S4
	NEG.S     F28, F28
	MFC1      A2, F28
	CVT.S.D   F2, F2
	MFC1      A1, F2
	JAL       ~Func:guTranslateF
	CLEAR     A3
	CVT.D.S   F0, F20
	C.EQ.D    F0, F24
	NOP
	BC1T      .o19C
	LUI       S3, 1
	ADDIU     S0, SP, 88
	COPY      A0, S0
	MFC1      A1, F20
	LUI       A3, 3F80
	JAL       ~Func:guScaleF
	COPY      A2, A1
	COPY      A0, S0
	COPY      A1, S4
	JAL       ~Func:guMtxCatF
	COPY      A2, S4
	LIO       S3, 00011630
	COPY      A0, S4
	LIA       S1, 800741F0
	LIA       S2, 8009A674
	LHU       A1, 0 (S1)
	LW        V0, 0 (S2)
	SLL       A1, A1, 6
	ADDU      A1, A1, S3
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V1, DA380002
	CLEAR     A0
	ADDIU     A1, SP, 20
	ADDIU     A2, R0, 40
	LIA       S0, 8009A66C
	COPY      A3, S4
	LW        V0, 0 (S0)
	LHU       T0, 0 (S1)
	COPY      T1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ANDI      V0, T0, FFFF
	SLL       V0, V0, 6
	ADDU      V0, V0, S3
	SW        V1, 0 (T1)
	LW        V1, 0 (S2)
	ADDIU     T0, T0, 1
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (T1)
	LBU       V0, 42 (SP)
	LW        V1, 3C (SP)
	LBU       T1, 40 (SP)
	LBU       T2, 41 (SP)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        V0, 38 (SP)
	MUL.D     F0, F0, F26
	NOP
	SH        T0, 0 (S1)
	SH        R0, 2E (SP)
	SB        S5, 30 (SP)
	SW        V1, 24 (SP)
	SH        T1, 28 (SP)
	SH        T2, 2A (SP)
	SW        V0, 20 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S0)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, E0 (SP)
	LW        S5, DC (SP)
	LW        S4, D8 (SP)
	LW        S3, D4 (SP)
	LW        S2, D0 (SP)
	LW        S1, CC (SP)
	LW        S0, C8 (SP)
	LDC1      F28, 108 (SP)
	LDC1      F26, 100 (SP)
	LDC1      F24, F8 (SP)
	LDC1      F22, F0 (SP)
	LDC1      F20, E8 (SP)
	JR        RA
	ADDIU     SP, SP, 110
}

% Origin: HEURISTIC
#new:Function $Function_8024081C
{
	ADDIU     SP, SP, FEF0
	SW        S2, D0 (SP)
	COPY      S2, A0
	SW        S0, C8 (SP)
	COPY      S0, A1
	SW        RA, E0 (SP)
	SW        S5, DC (SP)
	SW        S4, D8 (SP)
	SW        S3, D4 (SP)
	SW        S1, CC (SP)
	SDC1      F28, 108 (SP)
	SDC1      F26, 100 (SP)
	SDC1      F24, F8 (SP)
	SDC1      F22, F0 (SP)
	SDC1      F20, E8 (SP)
	LWC1      F24, 10 (S0)
	CVT.S.W   F24, F24
	LUI       A1, 4200
	LUI       A2, 4396
	LW        V0, 1C (S2)
	LWC1      F28, 14 (S0)
	CVT.S.W   F28, F28
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	ADDIU     A0, R0, C
	LIF       F2, 255.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o88
	ADDIU     S1, SP, 38
	MOV.S     F0, F2
	.o88
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	COPY      A3, A2
	COPY      S5, A2
	SW        S5, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	LW        V0, 1C (S2)
	LUI       A1, C296
	LUI       A2, 41F0
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	CLEAR     A0
	MTC1      R0, F22
	MOV.S     F20, F0
	C.LE.S    F22, F20
	NOP
	BC1TL     .oE4
	MOV.S     F20, F22
	.oE4
	SW        S1, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	JAL       8012E8E0
	LW        A3, C (S0)
	LBU       V0, 42 (SP)
	LIF       F27, 1.75
	MTC1      R0, F26
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F26
	NOP
	CVT.D.S   F2, F24
	ADDIU     S4, SP, 48
	NEG.S     F28, F28
	ADD.D     F2, F2, F0
	MFC1      A2, F28
	MFC1      A3, F22
	CVT.S.D   F2, F2
	MFC1      A1, F2
	JAL       ~Func:guTranslateF
	COPY      A0, S4
	C.EQ.S    F20, F22
	NOP
	BC1T      .o188
	LUI       S3, 1
	ADDIU     S0, SP, 88
	MFC1      A1, F20
	MFC1      A2, F22
	LUI       A3, 3F80
	COPY      A0, S0
	JAL       ~Func:guRotateF
	SW        A2, 10 (SP)
	COPY      A0, S0
	COPY      A1, S4
	JAL       ~Func:guMtxCatF
	COPY      A2, S4
	LIO       S3, 00011630
	COPY      A0, S4
	LIA       S1, 800741F0
	LIA       S2, 8009A674
	LHU       A1, 0 (S1)
	LW        V0, 0 (S2)
	SLL       A1, A1, 6
	ADDU      A1, A1, S3
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V1, DA380002
	CLEAR     A0
	ADDIU     A1, SP, 20
	LIO       A2, 00010040
	LIA       S0, 8009A66C
	COPY      A3, S4
	LW        V0, 0 (S0)
	LHU       T0, 0 (S1)
	COPY      T1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ANDI      V0, T0, FFFF
	SLL       V0, V0, 6
	ADDU      V0, V0, S3
	SW        V1, 0 (T1)
	LW        V1, 0 (S2)
	ADDIU     T0, T0, 1
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (T1)
	LBU       V0, 42 (SP)
	LW        V1, 3C (SP)
	LBU       T1, 40 (SP)
	LBU       T2, 41 (SP)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        V0, 38 (SP)
	MUL.D     F0, F0, F26
	NOP
	SH        T0, 0 (S1)
	SH        R0, 2E (SP)
	SB        S5, 30 (SP)
	SW        V1, 24 (SP)
	SH        T1, 28 (SP)
	SH        T2, 2A (SP)
	SW        V0, 20 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S0)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, E0 (SP)
	LW        S5, DC (SP)
	LW        S4, D8 (SP)
	LW        S3, D4 (SP)
	LW        S2, D0 (SP)
	LW        S1, CC (SP)
	LW        S0, C8 (SP)
	LDC1      F28, 108 (SP)
	LDC1      F26, 100 (SP)
	LDC1      F24, F8 (SP)
	LDC1      F22, F0 (SP)
	LDC1      F20, E8 (SP)
	JR        RA
	ADDIU     SP, SP, 110
}

% Origin: HEURISTIC
#new:Function $Function_80240AE8
{
	ADDIU     SP, SP, FEF0
	SW        S0, C8 (SP)
	COPY      S0, A0
	SW        S1, CC (SP)
	COPY      S1, A1
	SW        S6, E0 (SP)
	ADDIU     S6, R0, 40
	SW        RA, E4 (SP)
	SW        S5, DC (SP)
	SW        S4, D8 (SP)
	SW        S3, D4 (SP)
	SW        S2, D0 (SP)
	SDC1      F28, 108 (SP)
	SDC1      F26, 100 (SP)
	SDC1      F24, F8 (SP)
	SDC1      F22, F0 (SP)
	SDC1      F20, E8 (SP)
	LWC1      F0, 10 (S1)
	CVT.S.W   F0, F0
	LW        V0, 68 (S0)
	LW        V1, 14 (S0)
	MFC1      A2, F0
	LW        A3, 1C (S0)
	ADDU      V0, V0, V1
	ADDIU     V0, V0, FFF0
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	LW        V1, 6C (S0)
	MFC1      A1, F4
	SW        A3, 10 (SP)
	LW        A3, 18 (S1)
	ADDIU     V1, V1, 3C
	MTC1      V1, F20
	NOP
	CVT.S.W   F20, F20
	JAL       ~Func:update_lerp
	ADDIU     A0, R0, A
	LWC1      F2, 14 (S1)
	CVT.S.W   F2, F2
	MFC1      A1, F20
	MFC1      A2, F2
	LW        V0, 1C (S0)
	ADDIU     A0, R0, 5
	SW        V0, 10 (SP)
	LW        A3, 18 (S1)
	JAL       ~Func:update_lerp
	MOV.S     F20, F0
	ADDIU     S5, SP, 38
	LW        V0, 18 (S1)
	LW        V1, 1C (S0)
	BNE       V0, V1, .oE0
	MOV.S     F28, F0
	MTC1      R0, F22
	BEQ       R0, R0, .oFC
	NOP
	.oE0
	SUBU      V1, V1, V0
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 1
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	.oFC
	LW        V0, 1C (S0)
	LUI       A1, 4000
	LUI       A2, 3F80
	SW        V0, 10 (SP)
	LW        A3, 18 (S1)
	JAL       ~Func:update_lerp
	ADDIU     A0, R0, 4
	LW        V0, 18 (S1)
	LW        A0, 1C (S0)
	BNE       V0, A0, .o154
	MOV.S     F26, F0
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	COPY      A3, A0
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	LUI       V0, 1
	BEQ       R0, R0, .o1B0
	OR        S6, S6, V0
	.o154
	LUI       A1, 4180
	LUI       A2, 4396
	SW        A0, 10 (SP)
	LW        A3, 18 (S1)
	JAL       ~Func:update_lerp
	CLEAR     A0
	LIF       F2, 255.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1TL     .o188
	MOV.S     F0, F2
	.o188
	TRUNC.W.S F4, F0
	SWC1      F4, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	COPY      A3, A2
	COPY      V0, A2
	SW        V0, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	.o1B0
	SW        S5, 10 (SP)
	LW        A0, 4 (S1)
	LW        A1, 8 (S1)
	LW        A2, 0 (S1)
	LW        A3, C (S1)
	JAL       8012E8E0
	LUI       S4, 1
	LBU       V0, A (S5)
	LIF       F25, 1.75
	MTC1      R0, F24
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F24
	NOP
	ORI       S4, S4, 1630
	CVT.D.S   F2, F20
	ADDIU     S1, SP, 48
	NEG.S     F28, F28
	MTC1      R0, F20
	ADD.D     F2, F2, F0
	MFC1      A2, F28
	MFC1      A3, F20
	CVT.S.D   F2, F2
	MFC1      A1, F2
	JAL       ~Func:guTranslateF
	COPY      A0, S1
	ADDIU     S0, SP, 88
	MFC1      A1, F22
	LIF       F22, 1.0
	MFC1      A2, F20
	LIO       AT, 3E4CCCCD
	MTC1      AT, F0
	MFC1      A3, F22
	COPY      A0, S0
	JAL       ~Func:guRotateF
	SWC1      F0, 10 (SP)
	COPY      A0, S0
	COPY      A1, S1
	JAL       ~Func:guMtxCatF
	COPY      A2, S1
	COPY      A0, S0
	MFC1      A1, F26
	MFC1      A3, F22
	JAL       ~Func:guScaleF
	COPY      A2, A1
	COPY      A0, S0
	COPY      A1, S1
	JAL       ~Func:guMtxCatF
	COPY      A2, S1
	COPY      A0, S1
	LIA       S0, 800741F0
	LIA       S3, 8009A674
	LHU       A1, 0 (S0)
	LW        V0, 0 (S3)
	SLL       A1, A1, 6
	ADDU      A1, A1, S4
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V0, DA380002
	LIA       S2, 8009A66C
	LW        A0, 0 (S2)
	LHU       A1, 0 (S0)
	COPY      A2, A0
	SW        V0, 0 (A2)
	ANDI      V0, A1, FFFF
	SLL       V0, V0, 6
	LW        V1, 0 (S3)
	ADDU      V0, V0, S4
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (A2)
	LW        V0, 0 (S5)
	ADDIU     A0, A0, 8
	SW        A0, 0 (S2)
	SW        V0, 20 (SP)
	LW        V0, 4 (S5)
	ADDIU     A1, A1, 1
	SH        A1, 0 (S0)
	SW        V0, 24 (SP)
	LBU       V0, 8 (S5)
	SH        V0, 28 (SP)
	LBU       V0, 9 (S5)
	SH        V0, 2A (SP)
	LBU       V0, A (S5)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F24
	NOP
	COPY      A3, S1
	CLEAR     A0
	COPY      A2, S6
	ADDIU     A1, SP, 20
	SH        R0, 2E (SP)
	ADDIU     V0, R0, FF
	SB        V0, 30 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S2)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S2)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, E4 (SP)
	LW        S6, E0 (SP)
	LW        S5, DC (SP)
	LW        S4, D8 (SP)
	LW        S3, D4 (SP)
	LW        S2, D0 (SP)
	LW        S1, CC (SP)
	LW        S0, C8 (SP)
	LDC1      F28, 108 (SP)
	LDC1      F26, 100 (SP)
	LDC1      F24, F8 (SP)
	LDC1      F22, F0 (SP)
	LDC1      F20, E8 (SP)
	JR        RA
	ADDIU     SP, SP, 110
}

% Origin: HEURISTIC
#new:Function $Function_80240EB0
{
	ADDIU     SP, SP, FF90
	SW        S0, 48 (SP)
	COPY      S0, A1
	SW        RA, 50 (SP)
	SW        S1, 4C (SP)
	SDC1      F24, 68 (SP)
	SDC1      F22, 60 (SP)
	SDC1      F20, 58 (SP)
	LW        V0, 1C (A0)
	CLEAR     A0
	CLEAR     A1
	LWC1      F20, 10 (S0)
	CVT.S.W   F20, F20
	LUI       A2, 437F
	LWC1      F22, 14 (S0)
	CVT.S.W   F22, F22
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	ADDIU     S1, SP, 38
	SW        S1, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	JAL       8012E8E0
	MOV.S     F24, F0
	TRUNC.W.S F2, F20
	MFC1      V0, F2
	LBU       A1, 40 (SP)
	LBU       A2, 41 (SP)
	SLL       V0, V0, 10
	SW        R0, 10 (SP)
	LW        V1, 3C (SP)
	SRA       V0, V0, 10
	SW        V0, 18 (SP)
	TRUNC.W.S F2, F22
	MFC1      V0, F2
	NOP
	SLL       V0, V0, 10
	LIF       F0, 2.14748365E9
	SRA       V0, V0, 10
	SW        V0, 1C (SP)
	ADDIU     V0, R0, A
	SW        V0, 20 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 24 (SP)
	ADDIU     V0, R0, 12C
	SW        V0, 28 (SP)
	ADDIU     V0, R0, C8
	SW        V0, 2C (SP)
	C.LE.S    F0, F24
	NOP
	BC1T      .oF0
	SW        V1, 14 (SP)
	TRUNC.W.S F2, F24
	MFC1      V1, F2
	BEQ       R0, R0, .o10C
	ANDI      V0, V1, FF
	.oF0
	SUB.S     F0, F24, F0
	LUI       V0, 8000
	TRUNC.W.S F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, V0
	ANDI      V0, V1, FF
	.o10C
	SW        V0, 30 (SP)
	LW        A0, 0 (S1)
	JAL       8012E9A0
	ADDIU     A3, R0, 2
	LW        RA, 50 (SP)
	LW        S1, 4C (SP)
	LW        S0, 48 (SP)
	LDC1      F24, 68 (SP)
	LDC1      F22, 60 (SP)
	LDC1      F20, 58 (SP)
	JR        RA
	ADDIU     SP, SP, 70
}

% Origin: HEURISTIC
#new:Function $Function_80240FEC
{
	ADDIU     SP, SP, FF48
	SW        S0, 88 (SP)
	COPY      S0, A1
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	COPY      A3, A0
	SW        RA, A0 (SP)
	SW        S5, 9C (SP)
	SW        S4, 98 (SP)
	SW        S3, 94 (SP)
	SW        S2, 90 (SP)
	SW        S1, 8C (SP)
	SDC1      F22, B0 (SP)
	SDC1      F20, A8 (SP)
	LWC1      F20, 10 (S0)
	CVT.S.W   F20, F20
	LWC1      F22, 14 (S0)
	CVT.S.W   F22, F22
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	ADDIU     S4, SP, 48
	COPY      A0, S4
	CLEAR     A3
	LUI       S5, 1
	NEG.S     F22, F22
	MFC1      A1, F20
	MFC1      A2, F22
	JAL       ~Func:guTranslateF
	ORI       S5, S5, 1630
	COPY      A0, S4
	LIA       S1, 800741F0
	LIA       S2, 8009A674
	LHU       A1, 0 (S1)
	LW        V0, 0 (S2)
	SLL       A1, A1, 6
	ADDU      A1, A1, S5
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V0, DA380002
	LIA       S3, 8009A66C
	LW        T0, 0 (S3)
	LHU       T1, 0 (S1)
	COPY      A0, T0
	SW        V0, 0 (A0)
	ANDI      V0, T1, FFFF
	SLL       V0, V0, 6
	ADDU      V0, V0, S5
	LW        V1, 0 (S2)
	ADDIU     T0, T0, 8
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	ADDIU     V0, SP, 38
	SW        V1, 4 (A0)
	SW        V0, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	ADDIU     T1, T1, 1
	SW        T0, 0 (S3)
	JAL       8012E8E0
	SH        T1, 0 (S1)
	CLEAR     A0
	ADDIU     A1, SP, 20
	LIO       A2, 00050040
	COPY      A3, S4
	LBU       V0, 42 (SP)
	LIF       F1, 1.75
	MTC1      R0, F0
	LW        V1, 38 (SP)
	LW        T0, 3C (SP)
	LBU       T1, 40 (SP)
	LBU       T2, 41 (SP)
	MTC1      V0, F2
	NOP
	CVT.D.W   F2, F2
	MUL.D     F2, F2, F0
	NOP
	SH        R0, 2E (SP)
	ADDIU     V0, R0, FF
	SB        V0, 30 (SP)
	SW        V1, 20 (SP)
	SW        T0, 24 (SP)
	SH        T1, 28 (SP)
	SH        T2, 2A (SP)
	NEG.D     F2, F2
	TRUNC.W.D F4, F2
	MFC1      V0, F4
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S3)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S3)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, A0 (SP)
	LW        S5, 9C (SP)
	LW        S4, 98 (SP)
	LW        S3, 94 (SP)
	LW        S2, 90 (SP)
	LW        S1, 8C (SP)
	LW        S0, 88 (SP)
	LDC1      F22, B0 (SP)
	LDC1      F20, A8 (SP)
	JR        RA
	ADDIU     SP, SP, B8
}

% Origin: HEURISTIC
#new:Function $Function_802411CC
{
	ADDIU     SP, SP, FFA0
	COPY      V0, A1
	ADDIU     V1, SP, 38
	SW        RA, 48 (SP)
	SDC1      F22, 58 (SP)
	SDC1      F20, 50 (SP)
	LWC1      F20, 10 (V0)
	CVT.S.W   F20, F20
	LWC1      F22, 14 (V0)
	CVT.S.W   F22, F22
	SW        V1, 10 (SP)
	LW        A0, 4 (V0)
	LW        A1, 8 (V0)
	LW        A2, 0 (V0)
	JAL       8012E8E0
	LW        A3, C (V0)
	TRUNC.W.S F0, F20
	MFC1      V0, F0
	LBU       A1, 40 (SP)
	LBU       A2, 41 (SP)
	SLL       V0, V0, 10
	SW        R0, 10 (SP)
	LW        V1, 3C (SP)
	SRA       V0, V0, 10
	SW        V0, 18 (SP)
	TRUNC.W.S F0, F22
	MFC1      V0, F0
	NOP
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	SW        V0, 1C (SP)
	ADDIU     V0, R0, A
	SW        V0, 20 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 24 (SP)
	ADDIU     V0, R0, 12C
	SW        V0, 28 (SP)
	ADDIU     V0, R0, C8
	SW        V0, 2C (SP)
	ADDIU     V0, R0, FF
	SW        V0, 30 (SP)
	SW        V1, 14 (SP)
	LW        A0, 38 (SP)
	JAL       8012E9A0
	ADDIU     A3, R0, 2
	LW        RA, 48 (SP)
	LDC1      F22, 58 (SP)
	LDC1      F20, 50 (SP)
	JR        RA
	ADDIU     SP, SP, 60
}

% Origin: HEURISTIC
#new:Function $Function_80241294
{
	ADDIU     SP, SP, FF38
	SW        S0, 88 (SP)
	COPY      S0, A1
	SW        RA, A0 (SP)
	SW        S5, 9C (SP)
	SW        S4, 98 (SP)
	SW        S3, 94 (SP)
	SW        S2, 90 (SP)
	SW        S1, 8C (SP)
	SDC1      F26, C0 (SP)
	SDC1      F24, B8 (SP)
	SDC1      F22, B0 (SP)
	SDC1      F20, A8 (SP)
	LWC1      F20, 10 (S0)
	CVT.S.W   F20, F20
	MTC1      R0, F24
	LUI       A1, 437F
	LW        V0, 50 (A0)
	MFC1      A2, F24
	LWC1      F26, 14 (S0)
	CVT.S.W   F26, F26
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	ADDIU     A0, R0, B
	TRUNC.W.S F2, F0
	SWC1      F2, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	COPY      A3, A2
	COPY      S5, A2
	SW        S5, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	ADDIU     V0, SP, 38
	SW        V0, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	JAL       8012E8E0
	LUI       S4, 1
	LBU       V0, 42 (SP)
	LIF       F23, 1.75
	MTC1      R0, F22
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F22
	NOP
	ORI       S4, S4, 1630
	CVT.D.S   F20, F20
	ADDIU     S0, SP, 48
	NEG.S     F26, F26
	ADD.D     F20, F20, F0
	MFC1      A2, F26
	MFC1      A3, F24
	CVT.S.D   F20, F20
	MFC1      A1, F20
	JAL       ~Func:guTranslateF
	COPY      A0, S0
	COPY      A0, S0
	LIA       S2, 800741F0
	LIA       S3, 8009A674
	LHU       A1, 0 (S2)
	LW        V0, 0 (S3)
	SLL       A1, A1, 6
	ADDU      A1, A1, S4
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V1, DA380002
	CLEAR     A0
	ADDIU     A1, SP, 20
	LIO       A2, 00010040
	LIA       S1, 8009A66C
	COPY      A3, S0
	LW        V0, 0 (S1)
	LHU       T0, 0 (S2)
	COPY      T1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S1)
	ANDI      V0, T0, FFFF
	SLL       V0, V0, 6
	ADDU      V0, V0, S4
	SW        V1, 0 (T1)
	LW        V1, 0 (S3)
	ADDIU     T0, T0, 1
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (T1)
	LBU       V0, 42 (SP)
	LW        V1, 3C (SP)
	LBU       T1, 40 (SP)
	LBU       T2, 41 (SP)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        V0, 38 (SP)
	MUL.D     F0, F0, F22
	NOP
	SH        T0, 0 (S2)
	SH        R0, 2E (SP)
	SB        S5, 30 (SP)
	SW        V1, 24 (SP)
	SH        T1, 28 (SP)
	SH        T2, 2A (SP)
	SW        V0, 20 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F2, F0
	MFC1      V0, F2
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S1)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S1)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, A0 (SP)
	LW        S5, 9C (SP)
	LW        S4, 98 (SP)
	LW        S3, 94 (SP)
	LW        S2, 90 (SP)
	LW        S1, 8C (SP)
	LW        S0, 88 (SP)
	LDC1      F26, C0 (SP)
	LDC1      F24, B8 (SP)
	LDC1      F22, B0 (SP)
	LDC1      F20, A8 (SP)
	JR        RA
	ADDIU     SP, SP, C8
}

% Origin: HEURISTIC
#new:Function $Function_802414CC
{
	ADDIU     SP, SP, FEE8
	SW        S1, CC (SP)
	COPY      S1, A0
	SW        S0, C8 (SP)
	COPY      S0, A1
	SW        RA, E0 (SP)
	SW        S5, DC (SP)
	SW        S4, D8 (SP)
	SW        S3, D4 (SP)
	SW        S2, D0 (SP)
	SDC1      F30, 110 (SP)
	SDC1      F28, 108 (SP)
	SDC1      F26, 100 (SP)
	SDC1      F24, F8 (SP)
	SDC1      F22, F0 (SP)
	SDC1      F20, E8 (SP)
	LWC1      F20, 10 (S0)
	CVT.S.W   F20, F20
	MTC1      R0, F28
	LUI       A1, 437F
	LW        V0, 50 (S1)
	MFC1      A2, F28
	LWC1      F30, 14 (S0)
	CVT.S.W   F30, F30
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	ADDIU     A0, R0, B
	TRUNC.W.S F2, F0
	SWC1      F2, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	COPY      A3, A2
	COPY      S5, A2
	SW        S5, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	LIF       F26, 1.0
	LW        V0, 50 (S1)
	LIO       A2, 3E4CCCCD
	MFC1      A1, F26
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	CLEAR     A0
	ADDIU     V0, SP, 38
	SW        V0, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	JAL       8012E8E0
	MOV.S     F22, F0
	LBU       V0, 42 (SP)
	LIF       F25, 1.75
	MTC1      R0, F24
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F24
	NOP
	LIO       S4, 00011630
	CVT.D.S   F20, F20
	ADDIU     S1, SP, 48
	NEG.S     F30, F30
	ADD.D     F20, F20, F0
	MFC1      A2, F30
	MFC1      A3, F28
	CVT.S.D   F20, F20
	MFC1      A1, F20
	JAL       ~Func:guTranslateF
	COPY      A0, S1
	ADDIU     S0, SP, 88
	COPY      A0, S0
	MFC1      A1, F22
	MFC1      A3, F26
	JAL       ~Func:guScaleF
	COPY      A2, A1
	COPY      A0, S0
	COPY      A1, S1
	JAL       ~Func:guMtxCatF
	COPY      A2, S1
	COPY      A0, S1
	LIA       S2, 800741F0
	LIA       S3, 8009A674
	LHU       A1, 0 (S2)
	LW        V0, 0 (S3)
	SLL       A1, A1, 6
	ADDU      A1, A1, S4
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V1, DA380002
	CLEAR     A0
	ADDIU     A1, SP, 20
	ADDIU     A2, R0, 40
	LIA       S0, 8009A66C
	COPY      A3, S1
	LW        V0, 0 (S0)
	LHU       T0, 0 (S2)
	COPY      T1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ANDI      V0, T0, FFFF
	SLL       V0, V0, 6
	ADDU      V0, V0, S4
	SW        V1, 0 (T1)
	LW        V1, 0 (S3)
	ADDIU     T0, T0, 1
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (T1)
	LBU       V0, 42 (SP)
	LW        V1, 3C (SP)
	LBU       T1, 40 (SP)
	LBU       T2, 41 (SP)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        V0, 38 (SP)
	MUL.D     F0, F0, F24
	NOP
	SH        T0, 0 (S2)
	SH        R0, 2E (SP)
	SB        S5, 30 (SP)
	SW        V1, 24 (SP)
	SH        T1, 28 (SP)
	SH        T2, 2A (SP)
	SW        V0, 20 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F2, F0
	MFC1      V0, F2
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S0)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, E0 (SP)
	LW        S5, DC (SP)
	LW        S4, D8 (SP)
	LW        S3, D4 (SP)
	LW        S2, D0 (SP)
	LW        S1, CC (SP)
	LW        S0, C8 (SP)
	LDC1      F30, 110 (SP)
	LDC1      F28, 108 (SP)
	LDC1      F26, 100 (SP)
	LDC1      F24, F8 (SP)
	LDC1      F22, F0 (SP)
	LDC1      F20, E8 (SP)
	JR        RA
	ADDIU     SP, SP, 118
}

% Origin: HEURISTIC
#new:Function $Function_80241768
{
	ADDIU     SP, SP, FEF0
	SW        S1, CC (SP)
	COPY      S1, A0
	SW        S0, C8 (SP)
	COPY      S0, A1
	SW        RA, E0 (SP)
	SW        S5, DC (SP)
	SW        S4, D8 (SP)
	SW        S3, D4 (SP)
	SW        S2, D0 (SP)
	SDC1      F28, 108 (SP)
	SDC1      F26, 100 (SP)
	SDC1      F24, F8 (SP)
	SDC1      F22, F0 (SP)
	SDC1      F20, E8 (SP)
	LWC1      F20, 10 (S0)
	CVT.S.W   F20, F20
	MTC1      R0, F22
	LUI       A1, 437F
	LW        V0, 50 (S1)
	MFC1      A2, F22
	LWC1      F28, 14 (S0)
	CVT.S.W   F28, F28
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	ADDIU     A0, R0, B
	TRUNC.W.S F2, F0
	SWC1      F2, 14 (SP)
	CLEAR     A0
	ADDIU     A1, R0, 7
	ADDIU     A2, R0, FF
	COPY      A3, A2
	COPY      S5, A2
	SW        S5, 10 (SP)
	JAL       8013AA9C
	SW        R0, 18 (SP)
	LW        V0, 50 (S1)
	MFC1      A1, F22
	LUI       A2, 4270
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	CLEAR     A0
	ADDIU     V0, SP, 38
	SW        V0, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	JAL       8012E8E0
	MOV.S     F24, F0
	LBU       V0, 42 (SP)
	LIF       F27, 1.75
	MTC1      R0, F26
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	MUL.D     F0, F0, F26
	NOP
	LIO       S4, 00011630
	CVT.D.S   F20, F20
	ADDIU     S1, SP, 48
	NEG.S     F28, F28
	ADD.D     F20, F20, F0
	MFC1      A2, F28
	MFC1      A3, F22
	CVT.S.D   F20, F20
	MFC1      A1, F20
	JAL       ~Func:guTranslateF
	COPY      A0, S1
	ADDIU     S0, SP, 88
	MFC1      A1, F24
	MFC1      A2, F22
	LUI       A3, 3F80
	COPY      A0, S0
	JAL       ~Func:guRotateF
	SW        A2, 10 (SP)
	COPY      A0, S0
	COPY      A1, S1
	JAL       ~Func:guMtxCatF
	COPY      A2, S1
	COPY      A0, S1
	LIA       S2, 800741F0
	LIA       S3, 8009A674
	LHU       A1, 0 (S2)
	LW        V0, 0 (S3)
	SLL       A1, A1, 6
	ADDU      A1, A1, S4
	JAL       ~Func:guMtxF2L
	ADDU      A1, V0, A1
	LIO       V1, DA380002
	CLEAR     A0
	ADDIU     A1, SP, 20
	LIO       A2, 00010040
	LIA       S0, 8009A66C
	COPY      A3, S1
	LW        V0, 0 (S0)
	LHU       T0, 0 (S2)
	COPY      T1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ANDI      V0, T0, FFFF
	SLL       V0, V0, 6
	ADDU      V0, V0, S4
	SW        V1, 0 (T1)
	LW        V1, 0 (S3)
	ADDIU     T0, T0, 1
	ADDU      V1, V1, V0
	LUI       V0, 8000
	ADDU      V1, V1, V0
	SW        V1, 4 (T1)
	LBU       V0, 42 (SP)
	LW        V1, 3C (SP)
	LBU       T1, 40 (SP)
	LBU       T2, 41 (SP)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LW        V0, 38 (SP)
	MUL.D     F0, F0, F26
	NOP
	SH        T0, 0 (S2)
	SH        R0, 2E (SP)
	SB        S5, 30 (SP)
	SW        V1, 24 (SP)
	SH        T1, 28 (SP)
	SH        T2, 2A (SP)
	SW        V0, 20 (SP)
	NEG.D     F0, F0
	TRUNC.W.D F2, F0
	MFC1      V0, F2
	JAL       8013AF70
	SH        V0, 2C (SP)
	LUI       A0, D838
	LW        V0, 0 (S0)
	ORI       A0, A0, 2
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	ADDIU     V0, R0, 40
	SW        A0, 0 (V1)
	SW        V0, 4 (V1)
	LW        RA, E0 (SP)
	LW        S5, DC (SP)
	LW        S4, D8 (SP)
	LW        S3, D4 (SP)
	LW        S2, D0 (SP)
	LW        S1, CC (SP)
	LW        S0, C8 (SP)
	LDC1      F28, 108 (SP)
	LDC1      F26, 100 (SP)
	LDC1      F24, F8 (SP)
	LDC1      F22, F0 (SP)
	LDC1      F20, E8 (SP)
	JR        RA
	ADDIU     SP, SP, 110
}

% Origin: HEURISTIC
#new:Function $Function_802419F8
{
	ADDIU     SP, SP, FF90
	SW        S0, 48 (SP)
	COPY      S0, A1
	SW        RA, 50 (SP)
	SW        S1, 4C (SP)
	SDC1      F24, 68 (SP)
	SDC1      F22, 60 (SP)
	SDC1      F20, 58 (SP)
	LW        V0, 50 (A0)
	ADDIU     A0, R0, B
	CLEAR     A2
	LWC1      F20, 10 (S0)
	CVT.S.W   F20, F20
	LUI       A1, 437F
	LWC1      F22, 14 (S0)
	CVT.S.W   F22, F22
	SW        V0, 10 (SP)
	LW        A3, 18 (S0)
	JAL       ~Func:update_lerp
	ADDIU     S1, SP, 38
	SW        S1, 10 (SP)
	LW        A0, 4 (S0)
	LW        A1, 8 (S0)
	LW        A2, 0 (S0)
	LW        A3, C (S0)
	JAL       8012E8E0
	MOV.S     F24, F0
	TRUNC.W.S F2, F20
	MFC1      V0, F2
	LBU       A1, 40 (SP)
	LBU       A2, 41 (SP)
	SLL       V0, V0, 10
	SW        R0, 10 (SP)
	LW        V1, 3C (SP)
	SRA       V0, V0, 10
	SW        V0, 18 (SP)
	TRUNC.W.S F2, F22
	MFC1      V0, F2
	NOP
	SLL       V0, V0, 10
	LIF       F0, 2.14748365E9
	SRA       V0, V0, 10
	SW        V0, 1C (SP)
	ADDIU     V0, R0, A
	SW        V0, 20 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 24 (SP)
	ADDIU     V0, R0, 12C
	SW        V0, 28 (SP)
	ADDIU     V0, R0, C8
	SW        V0, 2C (SP)
	C.LE.S    F0, F24
	NOP
	BC1T      .oF0
	SW        V1, 14 (SP)
	TRUNC.W.S F2, F24
	MFC1      V1, F2
	BEQ       R0, R0, .o10C
	ANDI      V0, V1, FF
	.oF0
	SUB.S     F0, F24, F0
	LUI       V0, 8000
	TRUNC.W.S F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, V0
	ANDI      V0, V1, FF
	.o10C
	SW        V0, 30 (SP)
	LW        A0, 0 (S1)
	JAL       8012E9A0
	ADDIU     A3, R0, 2
	LW        RA, 50 (SP)
	LW        S1, 4C (SP)
	LW        S0, 48 (SP)
	LDC1      F24, 68 (SP)
	LDC1      F22, 60 (SP)
	LDC1      F20, 58 (SP)
	JR        RA
	ADDIU     SP, SP, 70
}

% Origin: HEURISTIC
#new:Function $Function_80241B34
{
	ADDIU     SP, SP, FF80
	SW        S3, 64 (SP)
	COPY      S3, A0
	SW        S8, 78 (SP)
	CLEAR     S8
	SW        RA, 7C (SP)
	SW        S7, 74 (SP)
	SW        S6, 70 (SP)
	SW        S5, 6C (SP)
	SW        S4, 68 (SP)
	SW        S2, 60 (SP)
	SW        S1, 5C (SP)
	SW        S0, 58 (SP)
	LHU       V1, 70 (S3)
	ANDI      V0, V1, 2
	BEQ       V0, R0, .o54
	ADDIU     S0, SP, 20
	ANDI      V0, V1, FFFD
	SH        V0, 70 (S3)
	SW        R0, 8 (S3)
	SW        R0, C (S3)
	.o54
	ADDIU     A1, SP, 40
	ADDIU     A2, SP, 44
	ADDIU     A3, SP, 48
	CLEAR     S1
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        R0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 0 (S3)
	JAL       ~Func:get_string_properties
	ADDIU     S7, R0, 8
	ADDIU     V0, R0, 1
	SW        R0, 24 (SP)
	SW        R0, 28 (SP)
	SW        V0, 44 (SP)
	.o90
	LW        V0, 0 (S3)
	ADDU      V1, V0, S1
	ADDIU     S1, S1, 1
	ADDU      V0, V0, S1
	LBU       S4, 0 (V1)
	LBU       S5, 0 (V0)
	ADDIU     A0, S4, FF10
	SLTIU     V1, A0, 10
	BEQ       V1, R0, .o110
	CLEAR     S6
	SLL       V0, A0, 2
	LIA       T1, $???_8024E8C0
	ADDU      V0, V0, T1
	LW        V0, 0 (V0)
	JR        V0
	NOP
	ADDIU     V0, S4, FF0D
	BEQ       R0, R0, .o1D8
	SW        V0, 8 (S0)
	BEQ       R0, R0, .o1D8
	ADDIU     S6, R0, 1
	LW        V1, 0 (S3)
	ADDU      V0, V1, S1
	LBU       V0, 0 (V0)
	BNE       V0, R0, .o1D8
	ADDIU     S1, S1, 1
	ADDU      V0, V1, S1
	LBU       V0, 0 (V0)
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o1D8
	SW        V0, 4 (S0)
	.o110
	ADDIU     V0, R0, 1
	ANDI      S2, S4, FF
	SW        R0, 10 (SP)
	SW        V0, 14 (SP)
	LW        A1, 4 (S0)
	LW        A2, 8 (S0)
	LUI       A3, 3F80
	JAL       80125C84
	COPY      A0, S2
	LW        V1, 44 (SP)
	LW        A0, 4 (S0)
	ADDIU     V1, V1, FFFF
	ADDU      V1, V1, V0
	ADDIU     V0, A0, FFFD
	SLTIU     V0, V0, 2
	BEQ       V0, R0, .o1D8
	SW        V1, 44 (SP)
	LIA       A1, $???_80242CD8
	ADDIU     T1, R0, 4
	BNE       A0, T1, .o170
	NOP
	LIA       A1, $???_80242C70
	.o170
	BNE       A0, T1, .o190
	CLEAR     A2
	BEQ       S2, S7, .o18C
	ADDIU     V0, V1, 1
	BNE       S5, S7, .o194
	ANDI      T0, S4, FF
	ADDIU     V0, V1, 1
	.o18C
	SW        V0, 44 (SP)
	.o190
	ANDI      T0, S4, FF
	.o194
	ANDI      A3, S5, FFFF
	SLL       V0, A2, 2
	ADDU      A0, V0, A1
	.o1A0
	LBU       V0, 0 (A0)
	BNEL      T0, V0, .o1CC
	ADDIU     A0, A0, 4
	LBU       V0, 1 (A0)
	BNEL      A3, V0, .o1CC
	ADDIU     A0, A0, 4
	LH        V1, 2 (A0)
	LW        V0, 44 (SP)
	ADDU      V0, V0, V1
	SW        V0, 44 (SP)
	ADDIU     A0, A0, 4
	.o1CC
	LH        V0, 2 (A0)
	BNE       V0, R0, .o1A0
	NOP
	.o1D8
	ANDI      V0, S6, FFFF
	BEQ       V0, R0, .o90
	NOP
	LHU       V0, 70 (S3)
	LW        V1, 44 (SP)
	ANDI      V0, V0, 1
	BEQ       V0, R0, .o248
	SW        V1, 14 (S3)
	MTC1      V1, F2
	NOP
	CVT.S.W   F2, F2
	LIF       F1, 1.75
	MTC1      R0, F0
	CVT.D.S   F2, F2
	MUL.D     F2, F2, F0
	NOP
	MTC1      R0, F0
	MTC1      R0, F1
	NOP
	ADD.D     F2, F2, F0
	LWC1      F0, 68 (S3)
	CVT.D.W   F0, F0
	SUB.D     F0, F0, F2
	TRUNC.W.D F4, F0
	MFC1      S5, F4
	BEQ       R0, R0, .o250
	CLEAR     S7
	.o248
	LW        S5, 68 (S3)
	CLEAR     S7
	.o250
	SW        R0, 4 (S0)
	SW        R0, 8 (S0)
	LW        V0, 10 (S3)
	COPY      S1, S7
	SW        V0, C (S0)
	.o264
	LW        V0, 0 (S3)
	SH        R0, 50 (SP)
	ADDU      V1, V0, S1
	ADDIU     S1, S1, 1
	ADDU      V0, V0, S1
	LBU       S4, 0 (V1)
	LBU       S6, 0 (V0)
	ADDIU     A0, S4, FF10
	SLTIU     V1, A0, 10
	BEQ       V1, R0, .o2E4
	SLL       V0, A0, 2
	LTW       V0, V0 ($JumpTable_8024E900)
	JR        V0
	NOP
    % LBL: from $JumpTable_8024E900 , entry 5`
	ADDIU     V0, S4, FF0D
	BEQ       R0, R0, .o5B8
	SW        V0, 8 (S0)
    % LBL: from $JumpTable_8024E900 , entry 13`
	ADDIU     T1, R0, 1
	BEQ       R0, R0, .o5B8
	SH        T1, 50 (SP)
    % LBL: from $JumpTable_8024E900 , entry 15`
	LW        V1, 0 (S3)
	ADDU      V0, V1, S1
	LBU       V0, 0 (V0)
	BNE       V0, R0, .o5B8
	ADDIU     S1, S1, 1
	ADDU      V0, V1, S1
	LBU       V0, 0 (V0)
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o5B8
	SW        V0, 4 (S0)
    % LBL: from $JumpTable_8024E900 , entry 14`
	.o2E4
	ANDI      V1, S4, FF
	SLTIU     V0, V1, F0
	BEQ       V0, R0, .o4FC
	ADDIU     T1, R0, 1
	SW        V1, 0 (S0)
	SW        S5, 10 (S0)
	LW        V0, 6C (S3)
	SW        V0, 14 (S0)
	LW        V1, C (S3)
	BEQ       V1, T1, .o408
	SLTI      V0, V1, 2
	BEQL      V0, R0, .o328
	ADDIU     T1, R0, 2
	BEQ       V1, R0, .o338
	NOP
	BEQ       R0, R0, .o500
	ADDIU     S7, S7, 1
	.o328
	BEQ       V1, T1, .o438
	NOP
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
	.o338
	LW        V0, 20 (S3)
	MULT      V0, S7
	LW        V0, 8 (S3)
	MFLO      T1
	SUBU      V0, V0, T1
	BLTZ      V0, .o4F8
	SW        V0, 18 (S0)
	LW        V1, 1C (S3)
	SLT       V0, V1, V0
	BNEL      V0, R0, .o364
	SW        V1, 18 (S0)
	.o364
	ADDIU     T1, R0, FD
	BNE       S6, T1, .o380
	NOP
	LW        V1, 18 (S0)
	LW        V0, 1C (S3)
	BEQL      V1, V0, .o380
	ADDIU     S8, R0, 1
	.o380
	LW        V1, 18 (S3)
	SLTIU     V0, V1, 6
	BEQ       V0, R0, .o4F8
	SLL       V0, V1, 2
	LTW       V0, V0 ($JumpTable_8024E940)
	JR        V0
	NOP
    % LBL: from $JumpTable_8024E940 , entry 1`
	COPY      A0, S3
	JAL       $Function_80240270
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
    % LBL: from $JumpTable_8024E940 , entry 2`
	COPY      A0, S3
	JAL       $Function_80240540
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
    % LBL: from $JumpTable_8024E940 , entry 3`
	COPY      A0, S3
	JAL       $Function_8024081C
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
    % LBL: from $JumpTable_8024E940 , entry 4`
	COPY      A0, S3
	JAL       $Function_80240AE8
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
    % LBL: from $JumpTable_8024E940 , entry 5`
	COPY      A0, S3
	JAL       $Function_80240EB0
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
	.o408
	ADDIU     T1, R0, FD
	BNE       S6, T1, .o428
	COPY      A0, S3
	LW        V1, 8 (S3)
	LW        V0, 38 (S3)
	BEQL      V1, V0, .o428
	ADDIU     S8, R0, 1
	COPY      A0, S3
	.o428
	JAL       $Function_802411CC
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
	.o438
	LW        V0, 54 (S3)
	MULT      V0, S7
	LW        V0, 8 (S3)
	MFLO      T1
	SUBU      V0, V0, T1
	BGEZ      V0, .o458
	SW        V0, 18 (S0)
	SW        R0, 18 (S0)
	.o458
	LW        V0, 18 (S0)
	LW        V1, 50 (S3)
	SLT       V0, V1, V0
	BNEL      V0, R0, .o46C
	SW        V1, 18 (S0)
	.o46C
	ADDIU     T1, R0, FD
	BNE       S6, T1, .o488
	NOP
	LW        V1, 18 (S0)
	LW        V0, 50 (S3)
	BEQL      V1, V0, .o488
	ADDIU     S8, R0, 1
	.o488
	LW        V1, 4C (S3)
	ADDIU     T1, R0, 1
	BEQ       V1, T1, .o4C8
	SLTI      V0, V1, 2
	BEQL      V0, R0, .o4B0
	ADDIU     T1, R0, 2
	BEQ       V1, R0, .o4F0
	COPY      A0, S3
	BEQ       R0, R0, .o500
	ADDIU     S7, S7, 1
	.o4B0
	BEQ       V1, T1, .o4DC
	ADDIU     V0, R0, 3
	BEQ       V1, V0, .o4F0
	COPY      A0, S3
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
	.o4C8
	COPY      A0, S3
	JAL       $Function_802414CC
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
	.o4DC
	COPY      A0, S3
	JAL       $Function_80241768
	COPY      A1, S0
	BEQ       R0, R0, .o4FC
	ADDIU     S7, S7, 1
	.o4F0
	JAL       $Function_802419F8
	COPY      A1, S0
	.o4F8
	ADDIU     S7, S7, 1
	.o4FC
	ADDIU     T1, R0, 1
	.o500
	ANDI      S2, S4, FF
	SW        R0, 10 (SP)
	SW        T1, 14 (SP)
	LW        A1, 4 (S0)
	LW        A2, 8 (S0)
	LUI       A3, 3F80
	JAL       80125C84
	COPY      A0, S2
	ADDIU     V1, S5, FFFF
	LW        A0, 4 (S0)
	ADDU      S5, V1, V0
	ADDIU     V0, A0, FFFD
	SLTIU     V0, V0, 2
	BEQ       V0, R0, .o5B8
	NOP
	LIA       A1, $???_80242CD8
	ADDIU     T1, R0, 4
	BNE       A0, T1, .o558
	NOP
	LIA       A1, $???_80242C70
	.o558
	BNE       A0, T1, .o578
	CLEAR     A2
	ADDIU     V0, R0, 8
	BEQL      S2, V0, .o578
	ADDIU     S5, S5, 1
	BNE       S6, V0, .o57C
	ANDI      V1, S4, FF
	ADDIU     S5, S5, 1
	.o578
	ANDI      V1, S4, FF
	.o57C
	ANDI      A3, S6, FFFF
	SLL       V0, A2, 2
	ADDU      A0, V0, A1
	.o588
	LBU       V0, 0 (A0)
	BNEL      V1, V0, .o5AC
	ADDIU     A0, A0, 4
	LBU       V0, 1 (A0)
	BNEL      A3, V0, .o5AC
	ADDIU     A0, A0, 4
	LH        V0, 2 (A0)
	ADDU      S5, S5, V0
	ADDIU     A0, A0, 4
	.o5AC
	LH        V0, 2 (A0)
	BNE       V0, R0, .o588
	NOP
	.o5B8
	LHU       V0, 50 (SP)
	BEQ       V0, R0, .o264
	NOP
	LW        V0, C (S3)
	BNE       V0, R0, .o620
	NOP
	BEQ       S8, R0, .o620
	CLEAR     A1
	COPY      A2, A1
	SW        R0, 4C (SP)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        R0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 0 (S3)
	JAL       ~Func:get_string_properties
	ADDIU     A3, SP, 4C
	LW        A0, C (S3)
	LW        V1, 38 (S3)
	SW        R0, 8 (S3)
	ADDIU     V0, A0, 1
	BGTZ      V1, .o668
	SW        V0, C (S3)
	ADDIU     V0, A0, 2
	BEQ       R0, R0, .o668
	SW        V0, C (S3)
	.o620
	LW        V1, C (S3)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o64C
	ADDIU     V0, R0, 2
	BEQ       S8, R0, .o648
	COPY      V0, V1
	ADDIU     V0, V0, 1
	SW        R0, 8 (S3)
	BEQ       R0, R0, .o668
	SW        V0, C (S3)
	.o648
	ADDIU     V0, R0, 2
	.o64C
	BNE       V1, V0, .o668
	NOP
	BEQ       S8, R0, .o668
	NOP
	LHU       V0, 70 (S3)
	ANDI      V0, V0, FFFE
	SH        V0, 70 (S3)
	.o668
	LW        V0, 8 (S3)
	ADDIU     V0, V0, 1
	SW        V0, 8 (S3)
	LW        RA, 7C (SP)
	LW        S8, 78 (SP)
	LW        S7, 74 (SP)
	LW        S6, 70 (SP)
	LW        S5, 6C (SP)
	LW        S4, 68 (SP)
	LW        S3, 64 (SP)
	LW        S2, 60 (SP)
	LW        S1, 5C (SP)
	LW        S0, 58 (SP)
	JR        RA
	ADDIU     SP, SP, 80
}

% Origin: HEURISTIC
#new:Function $Function_802421D8
{
	ADDIU     SP, SP, FFC0
	LIO       A1, DC080008
	SW        S4, 30 (SP)
	CLEAR     S4
	SW        S1, 24 (SP)
	LIA       S1, 8009A66C
	SW        S3, 2C (SP)
	ADDIU     S3, R0, 4
	LIA       V0, $End[2590]
	SW        RA, 38 (SP)
	SW        S5, 34 (SP)
	SW        S2, 28 (SP)
	SW        S0, 20 (SP)
	LW        V1, 0 (S1)
	LAW       S0, 800741F4
	LAW       S5, $End[E84]
	MTC1      R0, F0
	LIF       F2, -100.0
	LIF       F4, 100.0
	LIF       F6, 1.0
	LUI       A2, 43A0
	LUI       A3, C370
	COPY      T0, V1
	ADDIU     V1, V1, 8
	SLL       S0, S0, 6
	ADDU      S0, S0, V0
	COPY      A0, S0
	COPY      S2, S5
	SW        V1, 0 (S1)
	SW        A1, 0 (T0)
	MFC1      A1, F0
	LIA       V0, $???_80242D60
	SW        V0, 4 (T0)
	SWC1      F2, 14 (SP)
	SWC1      F4, 18 (SP)
	SWC1      F6, 1C (SP)
	JAL       ~Func:guOrtho
	SW        A1, 10 (SP)
	LIO       V1, DA380007
	LIO       A1, D9C0F9FB
	LIO       A3, D9FFFFFF
	LUI       A2, 20
	LW        V0, 0 (S1)
	OR        A2, A2, S3
	COPY      A0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S1)
	SW        V1, 0 (A0)
	LUI       V1, 8000
	ADDU      S0, S0, V1
	ADDIU     V1, V0, 8
	SW        S0, 4 (A0)
	SW        V1, 0 (S1)
	LUI       V1, E700
	SW        V1, 0 (V0)
	ADDIU     V1, V0, 10
	SW        R0, 4 (V0)
	SW        V1, 0 (S1)
	ADDIU     V1, V0, 18
	SW        A1, 8 (V0)
	SW        R0, C (V0)
	SW        V1, 0 (S1)
	SW        A3, 10 (V0)
	SW        A2, 14 (V0)
	.o130
	LHU       V0, 74 (S2)
	ANDI      V0, V0, 1
	BEQL      V0, R0, .o14C
	ADDIU     S3, S3, 74
	JAL       $Function_80241B34
	ADDU      A0, S5, S3
	ADDIU     S3, S3, 74
	.o14C
	ADDIU     S4, S4, 1
	SLTI      V0, S4, 20
	BNE       V0, R0, .o130
	ADDIU     S2, S2, 74
	LW        RA, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80242358
{
	ADDIU     SP, SP, FFC0
	SW        S2, 30 (SP)
	COPY      S2, A0
	CLEAR     V1
	LAW       A2, $End[E84]
	ADDIU     A0, R0, 20
	SW        RA, 38 (SP)
	SW        S3, 34 (SP)
	SW        S1, 2C (SP)
	SW        S0, 28 (SP)
	COPY      A1, A2
	.o30
	LHU       V0, 74 (A1)
	ANDI      V0, V0, 1
	BEQ       V0, R0, .o54
	SLL       V0, V1, 3
	ADDIU     V1, V1, 1
	BEQ       V1, A0, .o18C
	ADDIU     A1, A1, 74
	BEQ       R0, R0, .o30
	NOP
	.o54
	SUBU      V0, V0, V1
	SLL       V0, V0, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	ADDIU     V0, V0, 4
	LW        A0, 0 (S2)
	BEQ       A0, R0, .o18C
	ADDU      S1, A2, V0
	BLTZL     A0, .oC8
	SW        A0, 0 (S1)
	LIA       S3, $???_80242D70
	LW        A1, 0 (S3)
	LIA       S0, $End[E90]
	SLL       A1, A1, 8
	JAL       ~Func:dma_load_string
	ADDU      A1, A1, S0
	LW        V1, 0 (S3)
	SLL       V0, V1, 8
	ADDU      V0, V0, S0
	ADDIU     V1, V1, 1
	SW        V0, 0 (S1)
	SW        V1, 0 (S3)
	SLTI      V1, V1, 17
	BEQL      V1, R0, .oC8
	SW        R0, 0 (S3)
	BEQ       R0, R0, .oCC
	CLEAR     A1
	.oC8
	CLEAR     A1
	.oCC
	ADDIU     V0, SP, 24
	COPY      A2, A1
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        V0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 0 (S1)
	JAL       ~Func:get_string_properties
	ADDIU     A3, SP, 20
	LW        V0, 4 (S2)
	SW        V0, 68 (S1)
	LW        V0, 8 (S2)
	SW        V0, 6C (S1)
	LW        V0, C (S2)
	SW        V0, 10 (S1)
	LW        V0, 10 (S2)
	SW        V0, 18 (S1)
	LW        V0, 14 (S2)
	SW        V0, 1C (S1)
	LW        V0, 1C (S2)
	SW        V0, 34 (S1)
	LW        V0, 20 (S2)
	SW        V0, 38 (S1)
	LW        A0, 18 (S2)
	BEQ       A0, R0, .o160
	NOP
	LW        V0, 24 (SP)
	LW        V1, 20 (SP)
	ADDIU     V0, V0, 1
	SUBU      V1, V1, V0
	MULT      V1, A0
	LW        V0, 20 (S2)
	MFLO      T0
	SUBU      V0, V0, T0
	BGEZ      V0, .o160
	SW        V0, 38 (S1)
	SW        R0, 38 (S1)
	.o160
	LW        V0, 24 (S2)
	SW        V0, 4C (S1)
	LW        V0, 28 (S2)
	SW        V0, 50 (S1)
	LW        V0, 18 (S2)
	SW        V0, 20 (S1)
	LW        V0, 2C (S2)
	SW        V0, 54 (S1)
	LHU       V0, 34 (S2)
	ORI       V0, V0, 3
	SH        V0, 70 (S1)
	.o18C
	LW        RA, 38 (SP)
	LW        S3, 34 (SP)
	LW        S2, 30 (SP)
	LW        S1, 2C (SP)
	LW        S0, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80242500
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	LIA       S0, $End[0]
	LIA       A1, $Function_802421D8
	SW        RA, 14 (SP)
	SAW       S0, $End[E84]
	JAL       8012323C
	CLEAR     A0
	ADDIU     A0, R0, 1F
	ADDIU     V1, S0, E0C
	SW        V0, 0 (S0)
	.o38
	SH        R0, 74 (V1)
	ADDIU     A0, A0, FFFF
	BGEZ      A0, .o38
	ADDIU     V1, V1, FF8C
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80242558
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       $Function_80242500
	NOP
	JAL       ~Func:load_font
	ADDIU     A0, R0, 1
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_ShowCreditList
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        V0, C (S1)
	COPY      S0, A1
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	BEQ       S0, R0, .o40
	COPY      S2, V0
	ADDIU     V0, R0, FFFF
	SW        R0, 84 (S1)
	SW        V0, 88 (S1)
	SW        R0, 8C (S1)
	.o40
	LW        V1, 84 (S1)
	BEQ       V1, R0, .o5C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .oD0
	CLEAR     V0
	BEQ       R0, R0, .oE8
	NOP
	.o5C
	ADDIU     S0, R0, FFFF
	.o60
	LW        V0, 8C (S1)
	SLL       V1, V0, 3
	SUBU      V1, V1, V0
	SLL       V1, V1, 3
	ADDU      A0, V1, S2
	LW        V0, 0 (A0)
	BEQ       V0, R0, .o88
	NOP
	JAL       $Function_80242358
	NOP
	.o88
	LW        V1, 8C (S1)
	SLL       V0, V1, 3
	SUBU      V0, V0, V1
	SLL       V0, V0, 3
	ADDU      V0, V0, S2
	LW        V0, 30 (V0)
	SW        V0, 88 (S1)
	COPY      V0, V1
	LW        V1, 88 (S1)
	ADDIU     V0, V0, 1
	BGTZ      V1, .oC8
	SW        V0, 8C (S1)
	BNE       V1, S0, .o60
	ADDIU     V0, R0, 2
	BEQ       R0, R0, .oE8
	NOP
	.oC8
	ADDIU     V0, R0, 1
	SW        V0, 84 (S1)
	.oD0
	LW        V0, 88 (S1)
	ADDIU     V0, V0, FFFF
	BGTZ      V0, .oE4
	SW        V0, 88 (S1)
	SW        R0, 84 (S1)
	.oE4
	CLEAR     V0
	.oE8
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80242680
{
	ADDIU     SP, SP, FFD0
	SW        RA, 28 (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	ADDIU     V1, R0, 100
	COPY      S1, V0
	LIA       V0, $???_80244D74
	SLL       S0, S1, 1
	ADDU      S0, S0, S1
	SLL       S0, S0, 3
	ADDU      S0, S0, V0
	SW        V1, 10 (SP)
	LW        V0, 0 (S0)
	SW        R0, 18 (SP)
	SW        R0, 1C (SP)
	SW        V0, 14 (SP)
	LW        A1, 4 (S0)
	ADDIU     V0, R0, 1
	SAW       V0, 802DF524
	JAL       80038864
	ADDIU     A0, SP, 10
	JAL       ~Func:get_npc_by_index
	COPY      A0, V0
	LUI       A0, FBFF
	LW        V1, 0 (V0)
	ORI       A0, A0, FFFF
	SB        S1, A4 (V0)
	AND       V1, V1, A0
	SW        V1, 0 (V0)
	LWC1      F0, 8 (S0)
	SWC1      F0, 38 (V0)
	LWC1      F0, C (S0)
	SWC1      F0, 3C (V0)
	LWC1      F0, 10 (S0)
	SWC1      F0, 40 (V0)
	LW        A1, 14 (S0)
	JAL       ~Func:set_npc_yaw
	COPY      A0, V0
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80242744
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LIA       A0, 8034F800
	LW        S0, 0 (S0)
	JAL       ~Func:_heap_malloc
	COPY      A1, V0
	COPY      A0, S1
	COPY      A2, V0
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802427A4
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LIA       A0, 8034F800
	JAL       ~Func:_heap_free
	COPY      A1, V0
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802427D8
{
	LIA       A0, 800B1D80
	LAW       V1, 80077410
	LIO       AT, 3F2AAAAB
	MTC1      AT, F0
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	SUBU      V0, V0, V1
	SLL       V1, V0, 3
	ADDU      V0, V0, V1
	SLL       V0, V0, 3
	ADDU      V0, V0, A0
	LWC1      F2, 4B0 (V0)
	ADD.S     F2, F2, F0
	ADDIU     V1, R0, 1
	SH        V1, 506 (V0)
	SWC1      F2, 4B0 (V0)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80242830
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	COPY      A0, S1
	COPY      A1, S0
	JAL       802CDAC0
	MOV.S     F20, F0
	SWC1      F20, 7C (V0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80242898
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	BEQ       A1, R0, .o2C
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	JAL       ~Func:get_npc_unsafe
	COPY      A0, V0
	SW        V0, 74 (S0)
	.o2C
	LW        V1, 74 (S0)
	LIO       AT, 3F2AAAAB
	MTC1      AT, F2
	LWC1      F0, 38 (V1)
	ADD.S     F0, F0, F2
	SWC1      F0, 38 (V1)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802428F4 to 80242900 (000028F4 to 00002900)
00000000 00000000 00000000

#new:Function $Function_80242900
{
	ADDIU     SP, SP, FF90
	SW        S1, 34 (SP)
	COPY      S1, A0
	SW        RA, 3C (SP)
	SW        S2, 38 (SP)
	SW        S0, 30 (SP)
	SDC1      F30, 68 (SP)
	SDC1      F28, 60 (SP)
	SDC1      F26, 58 (SP)
	SDC1      F24, 50 (SP)
	SDC1      F22, 48 (SP)
	SDC1      F20, 40 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	MFC1      A1, F28
	MFC1      A2, F30
	MFC1      A3, F26
	COPY      A0, S2
	SW        V0, 1C (SP)
	ADDIU     V0, SP, 28
	SWC1      F24, 10 (SP)
	SWC1      F22, 14 (SP)
	SWC1      F20, 18 (SP)
	JAL       80070F70
	SW        V0, 20 (SP)
	LW        V1, 28 (SP)
	SW        V1, 84 (S1)
	LW        RA, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 68 (SP)
	LDC1      F28, 60 (SP)
	LDC1      F26, 58 (SP)
	LDC1      F24, 50 (SP)
	LDC1      F22, 48 (SP)
	LDC1      F20, 40 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 70
}

#new:Function $Function_80242A30
{
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LW        V0, C (S2)
	SWC1      F22, 8 (V0)
	LW        V0, C (S2)
	SWC1      F20, C (V0)
	LW        V1, C (S2)
	SWC1      F0, 10 (V1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80242AD4
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        A0, C (V0)
	ADDIU     V1, R0, 1
	SW        V1, 4 (A0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80242B04 to 80242B10 (00002B04 to 00002B10)
00000000 00000000 00000000

#new:Function $Function_80242B10
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	SAW       V0, $???_80249D60
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80242B3C to 80242B40 (00002B3C to 00002B40)
00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 %    0.0    0.0    0.0    0.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000001
    [Background]  00000000
    [MapTattle]   00000000
}

#new:Script_Main $Script_Main
{
    Call  SetCamPerspective ( .Cam:Default 00000003 00000023 00000010 00001000 )
    Call  SetCamViewport    ( .Cam:Default 0000000F 0000001C 00000122 00000080 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Call  FadeOutMusic      ( 00000000 000001F4 )
    Call  ClearAmbientSounds    ( 000000FA )
    Call  EnableStatusMenu  ( .False )
    Wait  30`
    Exec  $Script_80246B28
    Return
    End
}

% Origin: HEURISTIC
#new:Unknown $???_80242C70
{
    02070001 020A0001 03040001 070D0001 09040001 0C040001 0C0C0001 0C140001
    0D030001 0D040001 0D0A0001 0D140001 0E0D0001 0E110001 11040001 110F0001
    14020001 140D0001 140F0001 14120001 12020001 12070001 120F0001 15040001
    16110001 00000000
}

% Origin: HEURISTIC
#new:Unknown $???_80242CD8
{
    00020001 00060001 000E0001 00030001 00080001 000A0001 000D0001 00130001
    00140001 07000001 07060001 07080001 08020001 08040001 08060001 080A0001
    080D0001 080E0001 08130001 08180001 09080001 0C0E0001 0C080001 0D060001
    0D080001 0D0E0001 0D130001 12040001 12080001 13040001 14020001 14080001
    140A0001 00000000
}

% Origin: HEURISTIC
#new:Unknown $???_80242D60
{
    028001E0 01FF0000 028001E0 01FF0000
}

#new:Unknown $???_80242D70
{
    00000000
}

#new:IntTable $CreditList_Start
{
    002E0000 000000A0 000000AD 00000001 00000000 00000028 00000000
    00000000 00000078 00000000 00000028 00000000 00000028 00010000
    002E0001 000000A0 000000BF 00000000 00000000 00000028 00000000
    00000000 00000050 00000000 00000028 00000000 FFFFFFFF 00010000
}

#new:IntTable $CreditList_Titles
{
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 000000EB 00000000
    002E0009 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 00000000 00010000
    002E000A 000000A0 000000AF 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E000B 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 0000024C 00000000 0000001E 00000000 00000292 00010000
    002E000C 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    002E000D 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 00000000 00010000
    002E000E 000000A0 000000AF 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E000F 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 00000584 00000000 0000001E 00000000 000005CA 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    002E0010 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E0011 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E0023 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 000000BE 00000000 0000001E 00000001 000000F6 00010000
    002E0012 000000A0 000000A6 00000000 00000000 00000028 00000001
    00000000 000002F2 00000000 0000001E 00000000 00000338 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    002E0013 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E0014 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 00000000 00010000
    002E0015 000000A0 000000AF 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E0016 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E0017 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 00000000 00010000
    002E0018 000000A0 000000AF 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    002E001F 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E0029 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E002A 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E002B 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 0000017E 00000000 0000001E 00000000 000001C4 00010000
    002E002C 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 0000017E 00000000 0000001E 00000000 000001C4 00010000
    002E0024 000000A0 000000AA 00000000 00000004 00000028 00000002
    00000000 000000B0 00000000 0000001E 00000000 000000F6 00010000
    002E0022 000000A0 000000A6 00000000 00000004 00000028 00000002
    00000000 0000017E 00000000 0000001E 00000000 000001C4 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 FFFFFFFF 00000000
}

#new:IntTable $CreditList_Names
{
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 000000EB 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E002D 000000A0 000000C3 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E002E 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000094 00000000 0000001E 00000001 000000CE 00010000
    002E002F 0000009F 000000BF 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0030 000000A0 000000BF 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0031 000000A0 000000BA 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E0032 000000A0 000000CB 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0033 000000A0 000000C3 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0034 000000A0 000000BA 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0035 000000A0 000000CB 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0036 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0037 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0038 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0039 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E003A 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E003B 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E003C 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E003E 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E003D 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E003F 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0040 000000A0 000000B6 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E0041 000000A0 000000C3 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E0042 000000A0 000000D0 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0043 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0044 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0045 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0046 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0047 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0048 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0049 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E004A 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E004B 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E004C 000000A0 000000BA 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E004D 000000A0 000000CB 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E004E 000000A0 000000C3 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0050 000000A0 000000C3 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E004F 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E006F 000000A0 000000C3 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 0000003C 00000000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0069 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0079 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E007A 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E007B 000000A0 000000B6 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E007C 000000A0 000000C3 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E007D 000000A0 000000D0 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E007E 000000A0 000000B6 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E007F 000000A0 000000C3 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E0080 000000A0 000000D0 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0081 000000A0 000000B6 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0082 000000A0 000000C3 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0083 000000A0 000000D0 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0084 000000A0 000000BF 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0077 000000A0 000000BF 00000001 00000000 00000028 00000000
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 00000028 00000000
    002E0067 000000A0 000000BA 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 00000000 00010000
    002E0074 000000A0 000000CB 00000001 00000000 00000028 00000000
    00000000 00000096 00000000 0000001E 00000001 000000CE 00010000
    002E0056 000000A0 000000B6 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E0057 000000A0 000000C3 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 00000000 00010000
    002E0058 000000A0 000000D0 00000001 00000000 00000028 00000001
    00000000 00000088 00000000 0000001E 00000000 000000CE 00010000
    00000000 00000000 00000000 00000000 00000004 00000000 00000000
    00000000 00000000 00000000 00000000 00000000 FFFFFFFF 00000000
}

#new:Script $Script_8024462C
{
    Call  $Function_80242558 ( )
    Return
    End
}

#new:Script $Script_ShowTitles
{
    Call  $Function_ShowCreditList  ( $CreditList_Titles )
    Return
    End
}

#new:Script $Script_ShowNames
{
    Call  $Function_ShowCreditList  ( $CreditList_Names )
    Return
    End
}

#new:Script $Script_ShowStart
{
    Call  $Function_ShowCreditList  ( $CreditList_Start )
    Return
    End
}

PADDING: 802446A8 to 802446B0 (000046A8 to 000046B0)
00000000 00000000

#new:Script $Script_802446B0
{
    Call  UseSettingsFrom   ( .Cam:Default FFFFF3F8 00000000 00000000 )
    Call  SetPanTarget  ( .Cam:Default FFFFF3F8 00000000 00000000 )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Return
    End
}

#new:Script $Script_80244724
{
    Call  SetPanTarget  ( .Cam:Default *Fixed[-3080.0] 00000000 00000000 )
    SetF  *Var[1]  *Fixed[0.0]
    Loop
        Call  $Function_802427D8 ( )
        Call  TranslateGroup    ( ~Model:bg *Var[1] 00000000 00000000 )
        AddF  *Var[1]  *Fixed[0.6669922]
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_802447B8
{
    Call  $Function_80242830    ( *Var[0] *Var[2] )
    Call  SetNpcFlagBits        ( *Var[0] 00010000 .True )
    Return
    End
}

#new:Script $Script_802447F4
{
    Call  $Function_80242898    ( *Var[0] )
    Return
    End
}

#new:Script $Script_80244814
{
    Call  EnableTexPanning  ( ~Model:j1 .True )
    Call  EnableTexPanning  ( ~Model:j2 .True )
    Call  EnableTexPanning  ( ~Model:j3 .True )
    Call  EnableTexPanning  ( ~Model:j4 .True )
    Call  EnableTexPanning  ( ~Model:j5 .True )
    Call  EnableTexPanning  ( ~Model:j6 .True )
    Call  EnableTexPanning  ( ~Model:j7 .True )
    Call  EnableTexPanning  ( ~Model:j8 .True )
    Call  EnableTexPanning  ( ~Model:j9 .True )
    Call  EnableTexPanning  ( ~Model:j10 .True )
    Call  EnableTexPanning  ( ~Model:j11 .True )
    Call  EnableTexPanning  ( ~Model:j12 .True )
    Call  EnableTexPanning  ( ~Model:j13 .True )
    Call  EnableTexPanning  ( ~Model:j14 .True )
    Call  EnableTexPanning  ( ~Model:j15 .True )
    Call  EnableTexPanning  ( ~Model:j16 .True )
    Call  EnableTexPanning  ( ~Model:j17 .True )
    Call  EnableTexPanning  ( ~Model:j18 .True )
    Call  EnableTexPanning  ( ~Model:j19 .True )
    Call  EnableTexPanning  ( ~Model:j20 .True )
    Call  EnableTexPanning  ( ~Model:j21 .True )
    Call  EnableTexPanning  ( ~Model:j22 .True )
    Call  EnableTexPanning  ( ~Model:j23 .True )
    Call  EnableTexPanning  ( ~Model:j24 .True )
    Call  EnableTexPanning  ( ~Model:j25 .True )
    Call  EnableTexPanning  ( ~Model:j26 .True )
    Call  EnableTexPanning  ( ~Model:j27 .True )
    Thread
        Set   *Var[0]  00000000
        Set   *Var[1]  00000000
        Loop
            Add   *Var[0]  0000012C
            If  *Var[0]  >  00020000
                Add   *Var[0]  FFFE0000
            EndIf
            Call  SetTexPanOffset   ( 00000001 00000000 *Var[0] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Return
    End
}

#new:Script $Script_80244AE4
{
    Call  EnableTexPanning  ( ~Model:cloud .True )
    Set   *Var[0]  00000000
    Loop
        Add   *Var[0]  00008000
        Call  SetTexPanOffset   ( 00000002 00000000 00000000 *Var[0] )
        Wait  16`
    EndLoop
    Return
    End
}

#new:Script $Script_80244B64
{
    Call  EnableTexPanning  ( ~Model:umi .True )
    Set   *Var[0]  00000000
    Set   *Var[1]  00000000
    Set   *Var[2]  00000000
    Set   *Var[3]  00000000
    Loop
        Add   *Var[0]  00000032
        Add   *Var[1]  00000032
        Call  SetTexPanOffset   ( 00000003 00000000 *Var[0] *Var[1] )
        Add   *Var[2]  FFFFFFCE
        Add   *Var[3]  FFFFFFCE
        Call  SetTexPanOffset   ( 00000003 00000001 *Var[2] *Var[3] )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Unknown $???_80244C60
{
    00680002 00680006 00680009 00680001 00680004 FFFFFFFF
}

#new:Unknown $???_80244C78
{
    00A70008 00A70009 00A7000A 00A7000B 00A7000C 00A7000D FFFFFFFF
}

#new:Unknown $???_80244C94
{
    00BD0004 00BD0005 00BD0006 00BD0007 00BD0001 FFFFFFFF
}

#new:Unknown $???_80244CAC
{
    00940004 00940003 00940006 FFFFFFFF
}

#new:Unknown $???_80244CBC
{
    00670005 00670003 FFFFFFFF
}

#new:Unknown $???_80244CC8
{
    00630000 00630006 00630009 FFFFFFFF
}

#new:Unknown $???_80244CD8
{
    00C40003 FFFFFFFF
}

#new:Unknown $???_80244CE0
{
    00790004 FFFFFFFF
}

#new:Unknown $???_80244CE8
{
    007C0001 007C0002 007C0003 007C0007 007C0008 007C0009 007C0026 007C0027
    007C0028 FFFFFFFF
}

#new:Unknown $???_80244D10
{
    007D0001 007D0006 007D000A FFFFFFFF
}

#new:Unknown $???_80244D20
{
    00C10002 00C1000B 00C10008 00C10000 00C10001 00C1000C 00C10003 FFFFFFFF
}

#new:Unknown $???_80244D40
{
    00240002 00240005 00240006 00240007 0024000B FFFFFFFF
}

#new:Unknown $???_80244D58
{
    00600014 0060000C 0060000E 0060000F 00600012 00600007 FFFFFFFF
}

#new:Unknown $???_80244D74
{
    00D90002 00000000 C5340000 00000000 00000000 43870000 00DF0002 00000000
    C5340000 00000000 C1A00000 43870000 00DF0002 00000000 C5340000 00000000
    41A00000 43870000 00DF0003 00000000 C530E000 00000000 C1A00000 43870000
    00DF0003 00000000 C530E000 00000000 41A00000 43870000 00DF0004 00000000
    C52DC000 00000000 C1A00000 43870000 00DF0004 00000000 C52DC000 00000000
    41A00000 43870000 00DA0000 00000000 C5219000 428C0000 41700000 43870000
    00DA0001 00000000 C51D5000 42200000 40E00000 42B40000 00DA0002 00000000
    C51E8000 42480000 42180000 43870000 00DA0003 00000000 C51D3000 42A00000
    40A00000 43870000 00DA0004 00000000 C51AB000 42600000 00000000 43870000
    00DA0005 00000000 C520F000 41A00000 42400000 43870000 00DA0006 00000000
    C520A000 42740000 40E00000 42B40000 00DA0007 00000000 C524B000 42200000
    00000000 43870000 00DF0005 00000000 C512E000 00000000 00000000 43870000
    00DF0005 00000000 C50FC000 00000000 00000000 43870000 00DF0005 00000000
    C50CA000 00000000 00000000 43870000 00DF0009 00000000 00000000 C3FA0000
    00000000 43870000 00DF0009 00000000 00000000 C3FA0000 00000000 43870000
    00DF0009 00000000 00000000 C3FA0000 00000000 43870000 00AF0002 00000000
    C5048000 00000000 00000000 43870000 00850001 00000000 C5016000 00000000
    00000000 43870000 0066011A 00000000 C4E88000 42820000 41200000 43870000
    0066001A 00000000 C4E60000 42820000 41200000 42B40000 0066021A 00000000
    C4E9C000 41400000 42140000 43870000 0066031A 00000000 C4E4C000 41400000
    42140000 42B40000 002C0005 00000000 C4DAC000 00000000 422C0000 43870000
    002C0005 00000000 C4D70000 00000000 422C0000 43870000 002C0005 00000000
    C4D34000 00000000 422C0000 43870000 002C0005 00000000 C4CF8000 00000000
    422C0000 43870000 00DC0001 00000000 C4C26000 42340000 C33E0000 43870000
    00DC0004 00000000 C4C4E000 42340000 C3520000 43870000 00A7000A $???_80244C78
    C4DDE000 00000000 40000000 42B40000 00A7000A $???_80244C78 C4D98000 00000000
    40000000 42B40000 00BD0004 $???_80244C94 C49B0000 00000000 C0000000 43870000
    00940004 $???_80244CAC C4974000 00000000 C0000000 43870000 00940004 $???_80244CAC
    C4938000 00000000 C0000000 43870000 00680002 $???_80244C60 C4820000 00000000
    41F00000 43870000 00690003 00000000 C47A0000 00000000 41F00000 43870000
    00670005 $???_80244CBC C455C000 428C0000 C30C0000 43870000 00DD0002 00000000
    C45AC000 428C0000 C3250000 43870000 00DD0002 00000000 C455C000 428C0000
    C3200000 42B40000 00DD0002 00000000 C450C000 428C0000 C3250000 42B40000
    00BF0001 00000000 C4228000 41A00000 00000000 43870000 00680002 $???_80244C60
    00000000 C3FA0000 00000000 42B40000 00690003 00000000 00000000 C3FA0000
    00000000 42B40000 00690003 00000000 00000000 C3FA0000 00000000 42B40000
    00690003 00000000 00000000 C3FA0000 00000000 42B40000 00E40000 00000000
    C39B0000 420C0000 00000000 43870000 0095000D 00000000 00000000 C3FA0000
    00000000 42B40000 0095000D 00000000 00000000 C3FA0000 00000000 42B40000
    0095000D 00000000 00000000 C3FA0000 00000000 42B40000 006C0001 00000000
    00000000 C3FA0000 00000000 43870000 00630000 $???_80244CC8 C28C0000 43020000
    C2700000 43870000 00620004 00000000 C2DC0000 00000000 C1E00000 42B40000
    00620104 00000000 C1F00000 00000000 C2000000 43870000 00DB0005 00000000
    43540000 42200000 420C0000 43870000 00DB0006 00000000 43770000 42200000
    420C0000 43870000 00DB0007 00000000 438D0000 42200000 420C0000 42B40000
    00DB0008 00000000 43880000 42480000 41C80000 42B40000 00DB0009 00000000
    43680000 42480000 41C80000 43870000 00C40003 $???_80244CD8 43B28000 C2F00000
    C1F00000 42B40000 00790004 $???_80244CE0 43FD8000 42480000 C0A00000 42B40000
    00970002 00000000 440E8000 42480000 00000000 42B40000 00970103 00000000
    00000000 C3FA0000 00000000 42B40000 00970203 00000000 00000000 C3FA0000
    00000000 42B40000 00970303 00000000 00000000 C3FA0000 00000000 42B40000
    00970403 00000000 00000000 C3FA0000 00000000 42B40000 007C0001 $???_80244CE8
    44848000 42A00000 00000000 43870000 007C0002 $???_80244CE8 44848000 42A00000
    00000000 43870000 007C0003 $???_80244CE8 44848000 42A00000 00000000 43870000
    007D0001 $???_80244D10 44750000 42700000 00000000 43870000 007D0001 $???_80244D10
    448E8000 42700000 00000000 43870000 00C10002 $???_80244D20 449EC000 00000000
    C1A00000 43870000 004E000A 00000000 00000000 C3FA0000 00000000 42B40000
    004E000A 00000000 00000000 C3FA0000 00000000 42B40000 007F000E 00000000
    44B40000 00000000 00000000 43870000 007F000E 00000000 44C80000 00000000
    00000000 43870000 007F000A 00000000 44FA0000 42C80000 00000000 43870000
    007F000B 00000000 45002000 42C80000 00000000 43870000 007F000C 00000000
    45034000 42C80000 00000000 43870000 00600014 $???_80244D58 45070000 42700000
    00000000 43870000 00240006 $???_80244D40 4500C000 00000000 00000000 42B40000
    00D70000 00000000 45156000 41200000 00000000 43870000 00D70001 00000000
    45156000 41200000 00000000 43870000 00D70002 00000000 450FC000 00000000
    00000000 43870000 00D70002 00000000 450D4000 00000000 00000000 43870000
    00D70003 00000000 451B0000 00000000 00000000 43870000 00D70003 00000000
    451D8000 00000000 00000000 43870000 00D80000 00000000 00000000 C3FA0000
    00000000 43870000 00D80002 00000000 00000000 C3FA0000 00000000 43870000
}

#new:Script $Script_80245614
{
    Call  $Function_80242680    ( 00000000 )
    Call  $Function_80242744    ( 00025000 *Var[0] )
    Call  $Function_80242680    ( 00000001 )
    Call  $Function_80242680    ( 00000002 )
    Call  $Function_80242680    ( 00000003 )
    Call  $Function_80242680    ( 00000004 )
    Call  $Function_80242680    ( 00000005 )
    Call  $Function_80242680    ( 00000006 )
    Call  $Function_802427A4    ( *Var[0] )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF4E3
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000000 )
    Call  $Function_80242680    ( 00000007 )
    Call  $Function_80242680    ( 00000008 )
    Call  $Function_80242680    ( 00000009 )
    Call  $Function_80242680    ( 0000000A )
    Call  $Function_80242680    ( 0000000B )
    Call  $Function_80242680    ( 0000000C )
    Call  $Function_80242680    ( 0000000D )
    Call  $Function_80242680    ( 0000000E )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF60A
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000001 )
    Call  DeleteNpc ( 00000002 )
    Call  DeleteNpc ( 00000003 )
    Call  DeleteNpc ( 00000004 )
    Call  DeleteNpc ( 00000005 )
    Call  DeleteNpc ( 00000006 )
    Wait  1`
    Call  $Function_80242744    ( 00025000 *Var[0] )
    Call  $Function_80242680    ( 0000000F )
    Call  $Function_80242680    ( 00000010 )
    Call  $Function_80242680    ( 00000011 )
    Call  $Function_80242680    ( 00000012 )
    Call  $Function_80242680    ( 00000013 )
    Call  $Function_80242680    ( 00000014 )
    Call  $Function_802427A4    ( *Var[0] )
    Wait  60`
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF704
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000007 )
    Call  DeleteNpc ( 00000008 )
    Call  DeleteNpc ( 00000009 )
    Call  DeleteNpc ( 0000000A )
    Call  DeleteNpc ( 0000000B )
    Call  DeleteNpc ( 0000000C )
    Call  DeleteNpc ( 0000000D )
    Call  DeleteNpc ( 0000000E )
    Wait  1`
    Call  $Function_80242680    ( 00000015 )
    Call  $Function_80242680    ( 00000016 )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF7EA
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 0000000F )
    Call  DeleteNpc ( 00000010 )
    Call  DeleteNpc ( 00000011 )
    Call  DeleteNpc ( 00000012 )
    Call  DeleteNpc ( 00000013 )
    Call  DeleteNpc ( 00000014 )
    Wait  1`
    Call  $Function_80242744    ( 0000B000 *Var[0] )
    Call  $Function_80242680    ( 00000017 )
    Call  $Function_80242680    ( 00000018 )
    Call  $Function_80242680    ( 00000019 )
    Call  $Function_80242680    ( 0000001A )
    Call  $Function_80242680    ( 0000001B )
    Call  $Function_80242680    ( 0000001C )
    Call  $Function_80242680    ( 0000001D )
    Call  $Function_80242680    ( 0000001E )
    Call  $Function_802427A4    ( *Var[0] )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF89E
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000015 )
    Call  DeleteNpc ( 00000016 )
    Wait  1`
    Call  $Function_80242680    ( 0000001F )
    Call  $Function_80242680    ( 00000020 )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFA24
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000017 )
    Call  DeleteNpc ( 00000018 )
    Call  DeleteNpc ( 00000019 )
    Call  DeleteNpc ( 0000001A )
    Call  DeleteNpc ( 0000001B )
    Call  DeleteNpc ( 0000001C )
    Call  DeleteNpc ( 0000001D )
    Call  DeleteNpc ( 0000001E )
    Wait  1`
    Call  $Function_80242744    ( 00019F00 *Var[0] )
    Call  $Function_80242680    ( 00000026 )
    Call  $Function_80242680    ( 00000021 )
    Call  $Function_80242680    ( 00000022 )
    Call  $Function_80242680    ( 00000023 )
    Call  $Function_80242680    ( 00000024 )
    Call  $Function_80242680    ( 00000025 )
    Call  $Function_80242680    ( 00000027 )
    Call  $Function_80242744    ( 00007000 *Var[F] )
    Call  $Function_802427A4    ( *Var[0] )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFB64
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 0000001F )
    Call  DeleteNpc ( 00000020 )
    Wait  1`
    Call  $Function_80242680    ( 00000028 )
    Call  $Function_80242680    ( 00000029 )
    Call  $Function_80242680    ( 0000002A )
    Call  $Function_80242680    ( 0000002B )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFC40
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000026 )
    Call  DeleteNpc ( 00000021 )
    Call  DeleteNpc ( 00000022 )
    Call  DeleteNpc ( 00000023 )
    Call  DeleteNpc ( 00000024 )
    Call  DeleteNpc ( 00000025 )
    Call  DeleteNpc ( 00000027 )
    Call  $Function_802427A4    ( *Var[F] )
    Wait  1`
    Call  $Function_80242744    ( 00011F00 *Var[0] )
    Call  $Function_80242680    ( 0000002D )
    Call  $Function_80242680    ( 0000002E )
    Call  $Function_80242680    ( 0000002F )
    Call  $Function_80242680    ( 00000030 )
    Call  $Function_80242680    ( 0000002C )
    Call  $Function_80242744    ( 0000A000 *Var[F] )
    Call  $Function_802427A4    ( *Var[0] )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFDE4
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000028 )
    Call  DeleteNpc ( 00000029 )
    Call  DeleteNpc ( 0000002A )
    Call  DeleteNpc ( 0000002B )
    Wait  1`
    Call  $Function_80242680    ( 00000035 )
    Call  $Function_80242680    ( 00000032 )
    Call  $Function_80242680    ( 00000033 )
    Call  $Function_80242680    ( 00000034 )
    Call  $Function_80242680    ( 00000031 )
    Call  $Function_80242830    ( 00000031 *Fixed[4.0] )
    Call  SetNpcFlagBits        ( 00000031 00010000 .True )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFECA
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 0000002C )
    Call  DeleteNpc ( 0000002D )
    Call  DeleteNpc ( 0000002E )
    Call  DeleteNpc ( 0000002F )
    Call  DeleteNpc ( 00000030 )
    Call  $Function_802427A4    ( *Var[F] )
    Wait  1`
    Call  $Function_80242744    ( 0000F000 *Var[0] )
    Call  $Function_80242680    ( 00000036 )
    Call  $Function_80242680    ( 00000037 )
    Call  $Function_80242680    ( 00000038 )
    Call  $Function_802427A4    ( *Var[0] )
    Call  $Function_80242830    ( 00000036 *Fixed[3.0] )
    Call  SetNpcFlagBits        ( 00000036 00010000 .True )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFFCB
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000031 )
    Call  DeleteNpc ( 00000032 )
    Call  DeleteNpc ( 00000033 )
    Call  DeleteNpc ( 00000034 )
    Call  DeleteNpc ( 00000035 )
    Wait  1`
    Call  $Function_80242680    ( 0000003E )
    Call  $Function_80242680    ( 0000003F )
    Call  $Function_80242680    ( 00000039 )
    Call  $Function_80242680    ( 0000003A )
    Call  $Function_80242680    ( 0000003B )
    Call  $Function_80242680    ( 0000003C )
    Call  $Function_80242680    ( 0000003D )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  000002EE
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000036 )
    Call  DeleteNpc ( 00000037 )
    Call  DeleteNpc ( 00000038 )
    Wait  1`
    Call  $Function_80242744    ( 00020000 *Var[0] )
    Call  $Function_80242680    ( 00000040 )
    Call  $Function_80242680    ( 00000041 )
    Call  $Function_80242680    ( 00000042 )
    Call  $Function_80242680    ( 00000043 )
    Call  $Function_80242680    ( 00000044 )
    Call  $Function_802427A4    ( *Var[0] )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000320
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000039 )
    Call  DeleteNpc ( 0000003A )
    Call  DeleteNpc ( 0000003B )
    Call  DeleteNpc ( 0000003C )
    Call  DeleteNpc ( 0000003D )
    Call  DeleteNpc ( 0000003E )
    Call  DeleteNpc ( 0000003F )
    Wait  1`
    Call  $Function_80242680    ( 00000045 )
    Call  $Function_80242680    ( 00000046 )
    Call  $Function_80242680    ( 00000047 )
    Call  $Function_80242680    ( 0000004A )
    Call  $Function_80242680    ( 00000048 )
    Call  $Function_80242680    ( 00000049 )
    Call  $Function_80242830    ( 00000045 *Fixed[6.0] )
    Call  SetNpcFlagBits        ( 00000045 00010000 .True )
    Call  $Function_80242830    ( 0000004A *Fixed[3.0] )
    Call  SetNpcFlagBits        ( 0000004A 00010000 .True )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  000004B0
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000040 )
    Call  DeleteNpc ( 00000041 )
    Call  DeleteNpc ( 00000042 )
    Call  DeleteNpc ( 00000043 )
    Call  DeleteNpc ( 00000044 )
    Wait  1`
    Call  $Function_80242744    ( 00002000 *Var[0] )
    Call  $Function_80242680    ( 0000004D )
    Call  $Function_80242680    ( 0000004E )
    Call  $Function_80242680    ( 0000004F )
    Call  $Function_80242680    ( 00000050 )
    Call  $Function_80242680    ( 00000051 )
    Call  $Function_802427A4    ( *Var[0] )
    Call  $Function_80242830    ( 0000004D *Fixed[2.0] )
    Call  SetNpcFlagBits        ( 0000004D 00010000 .True )
    Call  $Function_80242830    ( 0000004E *Fixed[2.0] )
    Call  SetNpcFlagBits        ( 0000004E 00010000 .True )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000546
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 00000045 )
    Call  DeleteNpc ( 00000046 )
    Call  DeleteNpc ( 00000047 )
    Call  DeleteNpc ( 0000004A )
    Call  DeleteNpc ( 00000048 )
    Call  DeleteNpc ( 00000049 )
    Wait  1`
    Call  $Function_80242680    ( 0000004B )
    Call  $Function_80242680    ( 0000004C )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000744
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 0000004D )
    Call  DeleteNpc ( 0000004E )
    Call  DeleteNpc ( 0000004F )
    Call  DeleteNpc ( 00000050 )
    Call  DeleteNpc ( 00000051 )
    Wait  1`
    Call  $Function_80242680    ( 00000053 )
    Call  $Function_80242680    ( 00000052 )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  000007A8
            BreakLoop
        EndIf
    EndLoop
    Call  DeleteNpc ( 0000004B )
    Call  DeleteNpc ( 0000004C )
    Wait  1`
    Call  $Function_80242680    ( 00000054 )
    Call  $Function_80242680    ( 00000055 )
    Call  $Function_80242680    ( 00000056 )
    Call  $Function_80242680    ( 00000057 )
    Call  $Function_80242680    ( 00000058 )
    Call  $Function_80242680    ( 00000059 )
    Call  $Function_80242680    ( 0000005A )
    Call  $Function_80242680    ( 0000005B )
    Call  $Function_80242830    ( 00000054 *Fixed[3.0] )
    Call  SetNpcFlagBits        ( 00000054 00010000 .True )
    Call  $Function_80242830    ( 0000005A *Fixed[3.0] )
    Call  SetNpcFlagBits        ( 0000005A 00010000 .True )
    Call  EnableNpcShadow       ( 00000055 .False )
    Call  EnableNpcShadow       ( 0000005B .False )
    Return
    End
}

#new:Script $Script_ShowCredits
{
    Wait  240`
    Exec  $Script_8024462C
    Exec  $Script_ShowStart
    Exec  $Script_ShowTitles
    Exec  $Script_ShowNames
    Return
    End
}

#new:Script $Script_80246B28
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Thread
        Label  0
        Call  SetPlayerPos  ( 00000000 FFFFFC18 00000000 )
        Wait  1`
        Goto  0
    EndThread
    Exec  $Script_80244AE4
    Exec  $Script_80244B64
    Exec  $Script_802446B0
    Exec  $Script_80245614
    Exec  $Script_80247230 *Var[A]
    Loop
        Wait  1`
        DoesScriptExist  *Var[A] *Var[0]
        If  *Var[0]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_ShowCredits
    Exec  $Script_80244724
    Exec  $Script_80244814
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF4E3
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_80247418
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF60A
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_802479C4
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF79A
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_80248928
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF7D6
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_80248BAC
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFA24
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_80249040
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFAB5
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_80249A38
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFD08
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_80249EA4
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFC40
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_8024A044
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFECA
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_8024A804
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFFCB
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_8024AD30
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  000002EE
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_8024C38C
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  000004B0
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_8024CC78
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000744
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_8024D834
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000A14
            BreakLoop
        EndIf
    EndLoop
    Call  GotoMap       ( $ASCII_8024E958 00000000 ) % end_01
    Call  FadeOutMusic  ( 00000000 000001F4 )
    Wait  100`
    Return
    End
}

#new:Script $Script_80247230
{
    Call  PlaySound ( 00000089 )
    Wait  80`
    Thread
        Loop  00000009
            Call  PlaySoundAtNpc    ( 00000000 00000011 00000000 )
            Wait  15`
        EndLoop
    EndThread
    Call  NpcMoveTo     ( 00000000 FFFFF3F8 00000000 00000078 )
    Call  SetNpcAnimation   ( 00000000 00D90001 )
    Wait  10`
    Call  InterpNpcYaw  ( 00000000 0000005A 00000000 )
    Wait  25`
    Call  StopSound     ( 00000089 )
    Wait  15`
    Thread
        Wait  10`
        Loop  00000004
            Call  PlaySoundAtNpc    ( 00000000 00000014 00000000 )
            Wait  15`
        EndLoop
    EndThread
    Call  SetNpcAnimation   ( 00000000 00D90004 )
    Wait  30`
    Wait  30`
    Call  SetNpcAnimation   ( 00000000 00D90003 )
    Wait  7`
    Call  SetMusicTrack     ( 00000000 .Song:ParadeDay 00000000 00000008 )
    Wait  120`
    Wait  100`
    Call  InterpNpcYaw      ( 00000000 0000010E 00000000 )
    Wait  30`
    Return
    End
}

#new:Script $Script_80247418
{
    Call  PlayEffect        ( ~FX:Confetti:Rain FFFFF60F 000000C8 00000000 00000001 00000320 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  EnableNpcShadow   ( 00000007 .False )
    Call  EnableNpcShadow   ( 00000009 .False )
    ChildThread
        Loop
            Wait  25`
            Call  PlayEffect    ( ~FX:Confetti:Burst2 FFFFF61E 0000005F 00000005 00000001 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  20`
        EndLoop
    EndChildThread
    ChildThread
        Call  SetNpcJumpscale   ( 0000000D *Fixed[1.0] )
        Loop
            Call  NpcJump0  ( 0000000D FFFFF60A 00000023 00000007 0000000F )
            Wait  10`
            Call  NpcJump0  ( 0000000D FFFFF5F6 0000003D 00000007 0000000F )
            Wait  10`
        EndLoop
    EndChildThread
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF704
            BreakLoop
        EndIf
    EndLoop
    Return
    End
}

#new:Script $Script_80247600
{
    Call  EnableNpcShadow   ( *Var[1] .False )
    Call  SetNpcJumpscale   ( *Var[1] *Fixed[0.5] )
    Loop
        Call  SetNpcAnimation   ( *Var[0] 00DF0005 )
        Wait  30`
        ChildThread
            Call  GetNpcPos ( *Var[0] *Var[2] *Var[3] *Var[4] )
            Add   *Var[2]  FFFFFFF9
            Call  SetNpcPos ( *Var[1] *Var[2] *Var[3] *Var[4] )
            Call  NpcJump0  ( *Var[1] *Var[2] *Var[3] *Var[4] 00000028 )
            Call  SetNpcPos ( *Var[1] 00000000 FFFFFE0C 00000000 )
        EndChildThread
        Call  SetNpcAnimation   ( *Var[0] 00DF0006 )
        Wait  5`
        Call  SetNpcAnimation   ( *Var[0] 00DF0007 )
        Wait  5`
        Call  SetNpcAnimation   ( *Var[0] 00DF0008 )
        Wait  20`
        Call  SetNpcAnimation   ( *Var[0] 00DF0006 )
        Wait  5`
        Call  SetNpcAnimation   ( *Var[0] 00DF0007 )
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_802477A0
{
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF7AE
            BreakLoop
        EndIf
    EndLoop
    Call  SetNpcAnimation   ( 00000015 00AF0005 )
    Wait  10`
    Call  GetNpcPos ( 00000015 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000050
    Call  PlayEffect        ( ~FX:Explosion1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetNpcAnimation   ( 00000016 00850003 )
    Wait  60`
    Call  SetNpcAnimation   ( 00000015 00AF0006 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000015 00AF0002 )
    Call  SetNpcAnimation   ( 00000016 00850001 )
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF862
            BreakLoop
        EndIf
    EndLoop
    Call  InterpNpcYaw      ( 00000016 0000005A 00000005 )
    Call  SetNpcAnimation   ( 00000016 00850005 )
    Wait  30`
    Call  InterpNpcYaw      ( 00000016 0000010E 00000005 )
    Call  SetNpcAnimation   ( 00000016 00850001 )
    Return
    End
}

#new:Script $Script_802479C4
{
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF60A
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[0]  0000000F
    Set   *Var[1]  00000012
    Exec  $Script_80247600 *Var[A]
    Set   *Var[0]  00000010
    Set   *Var[1]  00000013
    Exec  $Script_80247600 *Var[B]
    Set   *Var[0]  00000011
    Set   *Var[1]  00000014
    Exec  $Script_80247600 *Var[C]
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF704
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_802477A0
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF7EA
            BreakLoop
        EndIf
    EndLoop
    Kill  *Var[A]
    Kill  *Var[B]
    Kill  *Var[C]
    Return
    End
}

PADDING: 80247BA8 to 80247BB0 (00007BA8 to 00007BB0)
00000000 00000000

#new:Script $Script_80247BB0
{
    Call  EnableModel   ( ~Model:o81 .False )
    Loop
        Call  MakeLerp  ( 0000000F FFFFFFF1 0000001E .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:g13 *Var[0] 00000000 00000000 00000001 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  MakeLerp  ( FFFFFFF1 0000000F 0000001E .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:g13 *Var[0] 00000000 00000000 00000001 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndLoop
    Return
    End
}

#new:Script $Script_80247CF8
{
    Call  EnableNpcShadow   ( 00000017 .False )
    Wait  150`
    Call  GetNpcPos ( 00000017 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Add   *Var[1]  0000001E
    Call  PlayEffect        ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  100`
    Call  SetNpcAnimation   ( 00000017 00660120 )
    Wait  60`
    Call  SetNpcAnimation   ( 00000017 0066010E )
    Call  SetNpcJumpscale   ( 00000017 *Fixed[1.0] )
    Call  GetNpcPos ( 00000017 *Var[0] *Var[1] *Var[2] )
    Call  NpcJump0  ( 00000017 *Var[0] *Var[1] *Var[2] 00000014 )
    Call  SetNpcAnimation   ( 00000017 0066010F )
    Return
    End
}

#new:Script $Script_80247E4C
{
    Call  EnableNpcShadow   ( 00000018 .False )
    Wait  155`
    Call  GetNpcPos ( 00000018 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFFB
    Add   *Var[1]  0000001E
    Call  PlayEffect        ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  95`
    Call  SetNpcAnimation   ( 00000018 00660020 )
    Wait  60`
    Call  SetNpcAnimation   ( 00000018 0066000E )
    Call  SetNpcJumpscale   ( 00000018 *Fixed[1.0] )
    Call  GetNpcPos ( 00000018 *Var[0] *Var[1] *Var[2] )
    Call  NpcJump0  ( 00000018 *Var[0] *Var[1] *Var[2] 00000014 )
    Call  SetNpcAnimation   ( 00000018 0066000F )
    Return
    End
}

#new:Script $Script_80247FA0
{
    Call  EnableNpcShadow   ( 00000019 .False )
    Wait  160`
    Call  GetNpcPos ( 00000019 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000005
    Add   *Var[1]  0000001E
    Call  PlayEffect        ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  90`
    Call  SetNpcAnimation   ( 00000019 00660220 )
    Wait  60`
    Call  SetNpcAnimation   ( 00000019 0066020E )
    Call  SetNpcJumpscale   ( 00000019 *Fixed[1.0] )
    Call  GetNpcPos ( 00000019 *Var[0] *Var[1] *Var[2] )
    Call  NpcJump0  ( 00000019 *Var[0] *Var[1] *Var[2] 00000014 )
    Call  SetNpcAnimation   ( 00000019 0066020F )
    Return
    End
}

#new:Script $Script_802480F4
{
    Call  EnableNpcShadow   ( 0000001A .False )
    Wait  165`
    Call  GetNpcPos ( 0000001A *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFFB
    Add   *Var[1]  0000001E
    Call  PlayEffect        ( ~FX:LensFlare:Rotating *Var[0] *Var[1] *Var[2] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  85`
    Call  SetNpcAnimation   ( 0000001A 00660320 )
    Wait  60`
    Call  SetNpcAnimation   ( 0000001A 0066030E )
    Call  SetNpcJumpscale   ( 0000001A *Fixed[1.0] )
    Call  GetNpcPos ( 0000001A *Var[0] *Var[1] *Var[2] )
    Call  NpcJump0  ( 0000001A *Var[0] *Var[1] *Var[2] 00000014 )
    Call  SetNpcAnimation   ( 0000001A 0066030F )
    Return
    End
}

#new:Script $Script_80248248
{
    Call  SetNpcFlagBits    ( 0000001B 00008048 .True )
    Wait  180`
    Call  NpcMoveTo ( 0000001B FFFFF894 0000002B 00000046 )
    Call  SetNpcAnimation   ( 0000001B 002C000B )
    Wait  40`
    Call  SetNpcAnimation   ( 0000001B 002C0014 )
    Wait  20`
    Call  SetNpcAnimation   ( 0000001B 002C0016 )
    Call  GetNpcPos ( 0000001B *Var[0] *Var[1] *Var[2] )
    Call  PlayEffect        ( ~FX:BigSteamPuff *Var[0] *Var[1] *Var[2] 00000001 00000014 00000003 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  EnableNpcShadow   ( 0000001B .False )
    Call  NpcFlyTo  ( 0000001B *Var[0] 000000C8 *Var[2] 0000000A 00000000 .Easing:Linear )
    Call  SetNpcPos ( 0000001B FFFFF8B2 000000C8 00000028 )
    Call  NpcFlyTo  ( 0000001B FFFFF8B2 0000000C 00000028 00000014 00000000 .Easing:Linear )
    Call  SetNpcYaw ( 0000001B 0000010E )
    Wait  10`
    Call  SetNpcAnimation   ( 0000001B 002C0017 )
    Return
    End
}

#new:Script $Script_80248400
{
    Call  SetNpcFlagBits    ( 0000001C 00008048 .True )
    Wait  180`
    Call  NpcMoveTo ( 0000001C FFFFF8B2 0000002B 00000046 )
    Call  SetNpcAnimation   ( 0000001C 002C000B )
    Wait  40`
    Call  SetNpcAnimation   ( 0000001C 002C0014 )
    Wait  20`
    Call  SetNpcAnimation   ( 0000001C 002C0016 )
    Call  GetNpcPos ( 0000001C *Var[0] *Var[1] *Var[2] )
    Call  PlayEffect        ( ~FX:BigSteamPuff *Var[0] *Var[1] *Var[2] 00000001 00000014 00000003 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  EnableNpcShadow   ( 0000001C .False )
    Call  NpcFlyTo  ( 0000001C *Var[0] 000000C8 *Var[2] 0000000A 00000000 .Easing:Linear )
    Call  SetNpcPos ( 0000001C FFFFF8BC 000000C8 0000000D )
    Call  NpcFlyTo  ( 0000001C FFFFF8BC 00000041 0000000D 00000014 00000000 .Easing:Linear )
    Call  SetNpcYaw ( 0000001C 0000010E )
    Wait  10`
    Call  SetNpcAnimation   ( 0000001C 002C0017 )
    Return
    End
}

#new:Script $Script_802485B8
{
    Call  SetNpcFlagBits    ( 0000001D 00008048 .True )
    Wait  180`
    Call  NpcMoveTo ( 0000001D FFFFF8D0 0000002B 00000046 )
    Call  SetNpcAnimation   ( 0000001D 002C000B )
    Wait  40`
    Call  SetNpcAnimation   ( 0000001D 002C0014 )
    Wait  20`
    Call  SetNpcAnimation   ( 0000001D 002C0016 )
    Call  GetNpcPos ( 0000001D *Var[0] *Var[1] *Var[2] )
    Call  PlayEffect        ( ~FX:BigSteamPuff *Var[0] *Var[1] *Var[2] 00000001 00000014 00000003 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  EnableNpcShadow   ( 0000001D .False )
    Call  NpcFlyTo  ( 0000001D *Var[0] 000000C8 *Var[2] 0000000A 00000000 .Easing:Linear )
    Call  SetNpcPos ( 0000001D FFFFF8D0 000000C8 0000000D )
    Call  NpcFlyTo  ( 0000001D FFFFF8D0 00000041 0000000D 00000014 00000000 .Easing:Linear )
    Call  SetNpcYaw ( 0000001D 0000005A )
    Wait  10`
    Call  SetNpcAnimation   ( 0000001D 002C0017 )
    Return
    End
}

#new:Script $Script_80248770
{
    Call  SetNpcFlagBits    ( 0000001E 00008048 .True )
    Wait  180`
    Call  NpcMoveTo ( 0000001E FFFFF8EE 0000002B 00000046 )
    Call  SetNpcAnimation   ( 0000001E 002C000B )
    Wait  40`
    Call  SetNpcAnimation   ( 0000001E 002C0014 )
    Wait  20`
    Call  SetNpcAnimation   ( 0000001E 002C0016 )
    Call  GetNpcPos ( 0000001E *Var[0] *Var[1] *Var[2] )
    Call  PlayEffect        ( ~FX:BigSteamPuff *Var[0] *Var[1] *Var[2] 00000001 00000014 00000003 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  EnableNpcShadow   ( 0000001E .False )
    Call  NpcFlyTo  ( 0000001E *Var[0] 000000C8 *Var[2] 0000000A 00000000 .Easing:Linear )
    Call  SetNpcPos ( 0000001E FFFFF8DA 000000C8 00000028 )
    Call  NpcFlyTo  ( 0000001E FFFFF8DA 0000000C 00000028 00000014 00000000 .Easing:Linear )
    Call  SetNpcYaw ( 0000001E 0000005A )
    Wait  10`
    Call  SetNpcAnimation   ( 0000001E 002C0017 )
    Return
    End
}

#new:Script $Script_80248928
{
    Exec  $Script_80247BB0 *Var[A]
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF7EA
            BreakLoop
        EndIf
    EndLoop
    Wait  1`
    Exec  $Script_80247CF8
    Exec  $Script_80247E4C
    Exec  $Script_80247FA0
    Exec  $Script_802480F4
    Exec  $Script_80248248
    Exec  $Script_80248400
    Exec  $Script_802485B8
    Exec  $Script_80248770
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF9C0
            BreakLoop
        EndIf
    EndLoop
    Kill  *Var[A]
    Return
    End
}

#new:Script $Script_80248A78
{
    Loop
        Call  MakeLerp  ( 00000014 FFFFFFEC 00000028 .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:o88 *Var[0] 00000000 00000000 00000001 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  MakeLerp  ( FFFFFFEC 00000014 00000028 .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:o88 *Var[0] 00000000 00000000 00000001 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndLoop
    Return
    End
}

#new:Script $Script_80248BAC
{
    Exec  $Script_80248A78 *Var[A]
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFF9CA
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[1]  0000000F
    Call  $Function_80242900    ( 00000000 FFFFF9E3 *Var[1] FFFFFF38 00000000 FFFFFFFF 00000000 0000001E )
    Call  GetNpcPos ( 0000001F *Var[2] *Var[3] *Var[4] )
    Call  GetNpcPos ( 00000020 *Var[5] *Var[6] *Var[7] )
    Loop  00000005
        Add   *Var[3]  00000008
        Call  SetNpcPos ( 0000001F *Var[2] *Var[3] *Var[4] )
        Add   *Var[6]  00000008
        Call  SetNpcPos ( 00000020 *Var[5] *Var[6] *Var[7] )
        Wait  1`
    EndLoop
    Call  SetNpcAnimation   ( 0000001F 00DC0002 )
    Call  SetNpcAnimation   ( 00000020 00DC0005 )
    ChildThread
        Loop
            Loop  00000014
                Sub   *Var[1]  00000001
                Call  $Function_80242A30    ( *Var[0] FFFFF9E3 *Var[1] FFFFFF38 )
                Sub   *Var[3]  00000001
                Call  SetNpcPos ( 0000001F *Var[2] *Var[3] *Var[4] )
                Sub   *Var[6]  00000001
                Call  SetNpcPos ( 00000020 *Var[5] *Var[6] *Var[7] )
                Wait  1`
            EndLoop
            Loop  00000014
                Add   *Var[1]  00000001
                Call  $Function_80242A30    ( *Var[0] FFFFF9E3 *Var[1] FFFFFF38 )
                Add   *Var[3]  00000001
                Call  SetNpcPos ( 0000001F *Var[2] *Var[3] *Var[4] )
                Add   *Var[6]  00000001
                Call  SetNpcPos ( 00000020 *Var[5] *Var[6] *Var[7] )
                Wait  1`
            EndLoop
        EndLoop
    EndChildThread
    Set   *Var[3]  *Var[0]
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFB5A
            BreakLoop
        EndIf
    EndLoop
    Call  $Function_80242AD4    ( *Var[3] )
    Kill  *Var[A]
    Return
    End
}

#new:Script $Script_80248F30
{
    Call  GetNpcPos ( *Var[0] *Var[1] *Var[2] *Var[3] )
    SetF  *Var[1]  *Var[1]
    Loop
        AddF  *Var[1]  *Fixed[0.87]
        Call  SetNpcPos ( *Var[0] *Var[1] *Var[2] *Var[3] )
        Wait  1`
    EndLoop
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80248FB8
{
    Call  GetNpcPos ( 00000023 *Var[0] *Var[1] *Var[2] )
    SetF  *Var[0]  *Var[0]
    Loop
        AddF  *Var[0]  *Fixed[0.87]
        Call  SetNpcPos ( 00000023 *Var[0] 00000000 00000000 )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80249040
{
    Call  SetNpcScale   ( 00000022 *Fixed[0.75] *Fixed[0.75] *Fixed[0.75] )
    Thread
        Call  NpcMoveTo ( 00000021 FFFFFA59 FFFFFFFE 000000C8 )
        Set   *Var[0]  00000021
        Exec  $Script_80248F30 *Var[A]
        Call  SetNpcAnimation   ( 00000021 00A70009 )
        Wait  10`
        Call  SetNpcAnimation   ( 00000021 00A7000C )
        Wait  30`
        Call  SetNpcAnimation   ( 00000021 00A7000D )
        Wait  30`
        Call  SetNpcAnimation   ( 00000021 00A70009 )
        Wait  60`
        Call  SetNpcAnimation   ( 00000021 00A7000C )
        Wait  30`
        Call  SetNpcAnimation   ( 00000021 00A7000D )
        Wait  30`
        Call  SetNpcAnimation   ( 00000021 00A70009 )
        Wait  30`
        Call  SetNpcAnimation   ( 00000021 00A7000A )
        Kill  *Var[A]
        Call  NpcMoveTo ( 00000021 FFFFFCEF FFFFFFFE 0000012C )
        Call  SetNpcPos ( 00000021 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  NpcMoveTo ( 00000022 FFFFFA7C FFFFFFFE 000000C8 )
        Set   *Var[0]  00000022
        Exec  $Script_80248F30 *Var[A]
        Call  SetNpcAnimation   ( 00000022 00A70009 )
        Wait  220`
        Call  SetNpcAnimation   ( 00000022 00A7000A )
        Kill  *Var[A]
        Call  NpcMoveTo ( 00000022 FFFFFD12 FFFFFFFE 0000012C )
        Call  SetNpcPos ( 00000022 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  NpcMoveTo ( 00000023 FFFFFA9C 00000002 000000B4 )
        Set   *Var[0]  00000023
        Exec  $Script_80248F30 *Var[A]
        Call  SetNpcAnimation   ( 00000023 00BD0001 )
        Wait  10`
        Call  SetNpcAnimation   ( 00000023 00BD0007 )
        Wait  20`
        Call  SetNpcAnimation   ( 00000023 00BD0005 )
        Wait  30`
        Call  SetNpcAnimation   ( 00000023 00BD0006 )
        Wait  30`
        Call  InterpNpcYaw      ( 00000023 0000005A 00000000 )
        Call  SetNpcAnimation   ( 00000023 00BD0005 )
        Wait  30`
        Call  SetNpcAnimation   ( 00000023 00BD0006 )
        Wait  30`
        Call  InterpNpcYaw      ( 00000023 0000010E 00000000 )
        Call  SetNpcAnimation   ( 00000023 00BD0005 )
        Wait  30`
        Call  SetNpcAnimation   ( 00000023 00BD0006 )
        Wait  30`
        Call  SetNpcAnimation   ( 00000023 00BD0007 )
        Wait  20`
        Call  SetNpcAnimation   ( 00000023 00BD0001 )
        Wait  10`
        Call  SetNpcAnimation   ( 00000023 00BD0004 )
        Kill  *Var[A]
        Call  NpcMoveTo ( 00000023 FFFFFAB0 00000002 000000B4 )
    EndThread
    Thread
        Wait  10`
        Call  NpcMoveTo ( 00000024 FFFFFAC2 00000002 000000B4 )
        Set   *Var[0]  00000024
        Exec  $Script_80248F30 *Var[A]
        Call  SetNpcAnimation   ( 00000024 00940003 )
        Wait  110`
        Call  SetNpcAnimation   ( 00000024 00940006 )
        Wait  30`
        Call  SetNpcAnimation   ( 00000024 00940003 )
        Wait  90`
        Call  SetNpcAnimation   ( 00000024 00940004 )
        Kill  *Var[A]
        Call  NpcMoveTo ( 00000024 FFFFFACE 00000002 000000B4 )
    EndThread
    Thread
        Wait  10`
        Call  NpcMoveTo ( 00000025 FFFFFAE0 00000002 000000B4 )
        Set   *Var[0]  00000025
        Exec  $Script_80248F30 *Var[A]
        Call  SetNpcAnimation   ( 00000025 00940003 )
        Wait  230`
        Call  SetNpcAnimation   ( 00000025 00940004 )
        Kill  *Var[A]
        Call  NpcMoveTo ( 00000025 FFFFFAEC 00000002 000000B4 )
    EndThread
    Thread
        Wait  240`
        Call  NpcMoveTo ( 00000026 FFFFF9FC 0000001E 0000003C )
        Wait  210`
        Call  SetNpcPos ( 00000026 FFFFFABA 00000000 0000001E )
        Call  SetNpcYaw ( 00000026 0000005A )
        Call  NpcMoveTo ( 00000026 FFFFFBAA 0000001E 0000001E )
        Call  SetNpcAnimation   ( 00000026 00680009 )
        Call  MakeLerp  ( 00000000 0000005A 00000005 .Easing:Linear )
        Loop  00000005
            Call  UpdateLerp ( )
            Call  SetNpcRotation    ( 00000026 00000000 *Var[0] 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Wait  20`
        Call  ShowEmote ( 00000026 .Emote:Ellipsis 00000000 0000003C 00000001 00000000 00000000 00000000 00000000 )
        Wait  60`
        Call  MakeLerp  ( 0000005A 00000000 00000005 .Easing:Linear )
        Loop  00000005
            Call  UpdateLerp ( )
            Call  SetNpcRotation    ( 00000026 00000000 *Var[0] 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  SetNpcAnimation   ( 00000026 00680001 )
        Call  InterpNpcYaw  ( 00000026 0000010E 00000007 )
        Wait  15`
        Call  InterpNpcYaw  ( 00000026 0000005A 00000007 )
        Wait  15`
        Call  InterpNpcYaw  ( 00000026 0000010E 00000007 )
        Wait  15`
        Call  SetNpcAnimation   ( 00000026 00680004 )
        Call  SetNpcJumpscale   ( 00000026 *Fixed[1.0] )
        Call  NpcJump0      ( 00000026 FFFFFB8C 00000000 0000001E 0000000F )
        Call  NpcJump0      ( 00000026 FFFFFB6E 00000000 0000001E 0000000F )
        Call  NpcJump0      ( 00000026 FFFFFB50 00000000 0000001E 0000000F )
    EndThread
    Thread
        Wait  240`
        Call  NpcMoveTo ( 00000027 FFFFFA38 0000001E 0000003C )
        Wait  210`
        Call  SetNpcPos ( 00000027 FFFFFA7E 00000000 0000001E )
        Call  SetNpcYaw ( 00000027 0000005A )
        Call  NpcMoveTo ( 00000027 FFFFFD4E 0000001E 0000005A )
        Call  SetNpcPos ( 00000027 00000000 FFFFFE0C 00000000 )
    EndThread
    Return
    End
}

#new:VectorList $VectorList_802499FC
{
    % ~Path3f:Path_802499FC
    -805.000000 100.000000 -80.000000
    -675.000000 100.000000 -230.000000
    -805.000000 100.000000 -280.000000
    -935.000000 100.000000 -230.000000
    -805.000000 100.000000 -80.000000
}

#new:Script $Script_80249A38
{
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFB64
            BreakLoop
        EndIf
    EndLoop
    Wait  200`
    Call  ShowEmote ( 00000028 .Emote:Shock 0000002D 0000001E 00000001 00000000 00000000 00000000 00000000 )
    Wait  40`
    Call  SetNpcAnimation   ( 00000028 00670003 )
    Call  NpcFlyTo  ( 00000028 FFFFFCA9 00000064 FFFFFF4C 0000003C 00000000 .Easing:Linear )
    Call  SetNpcAnimation   ( 00000029 00DD0007 )
    Call  SetNpcAnimation   ( 0000002A 00DD0007 )
    Call  SetNpcAnimation   ( 0000002B 00DD0007 )
    Wait  30`
    Call  SetNpcAnimation   ( 00000029 00DD0005 )
    Call  SetNpcAnimation   ( 0000002A 00DD0006 )
    Call  SetNpcAnimation   ( 0000002B 00DD0005 )
    Wait  30`
    Call  SetNpcAnimation   ( 00000029 00DD0003 )
    Call  SetNpcAnimation   ( 0000002A 00DD0004 )
    Call  SetNpcAnimation   ( 0000002B 00DD0003 )
    Wait  30`
    Call  InterpNpcYaw      ( 00000028 0000005A 00000000 )
    Call  NpcFlyTo  ( 00000028 FFFFFCDB 00000064 FFFFFFB0 0000001E 00000000 .Easing:Linear )
    Thread
        Loop  00000006
            Wait  20`
            Call  InterpNpcYaw  ( 00000028 0000010E 00000000 )
            Wait  40`
            Call  InterpNpcYaw  ( 00000028 0000005A 00000000 )
            Wait  20`
        EndLoop
    EndThread
    Thread
        Loop  00000006
            Call  LoadPath  ( 00000050 $VectorList_802499FC 00000005 .Easing:Linear )
            Loop
                Call  GetNextPathPos ( )
                Call  SetNpcPos ( 00000028 *Var[1] *Var[2] *Var[3] )
                Wait  1`
                If  *Var[0]  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
        EndLoop
    EndThread
    Return
    End
}

#new:Unknown $???_80249D60
{
    000000FF
}

#new:Script $Script_80249D64
{
    Call  GetNpcPos ( 00000031 *Var[0] *Var[1] *Var[2] )
    SetF  *Var[0]  *Var[0]
    SetF  *Var[3]  *Var[0]
    SetF  *Var[4]  *Var[0]
    SubF  *Var[3]  *Fixed[25.0]
    AddF  *Var[4]  *Fixed[25.0]
    Call  SetNpcPos ( 00000032 *Var[0] 00000014 00000002 )
    Call  SetNpcPos ( 00000033 *Var[3] 00000014 FFFFFFFE )
    Call  SetNpcPos ( 00000034 *Var[4] 00000014 00000002 )
    ChildThread
        Call  $Function_80242898    ( 00000032 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000033 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000034 )
    EndChildThread
    Call  $Function_80242898    ( 00000031 )
    Return
    End
}

#new:Script $Script_80249EA4
{
    Thread
        Call  SetNpcPos ( 0000002D FFFFFC40 00000000 0000001E )
        Call  NpcMoveTo ( 0000002D FFFFFF10 0000001E 0000005A )
        Call  SetNpcPos ( 0000002D 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcPos ( 0000002E FFFFFC04 00000000 0000001E )
        Call  NpcMoveTo ( 0000002E FFFFFED4 0000001E 0000005A )
        Call  SetNpcPos ( 0000002E 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcPos ( 0000002F FFFFFBE6 00000000 0000001E )
        Call  NpcMoveTo ( 0000002F FFFFFEB6 0000001E 0000005A )
        Call  SetNpcPos ( 0000002F 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcPos ( 00000030 FFFFFBC8 00000000 0000001E )
        Call  NpcMoveTo ( 00000030 FFFFFE98 0000001E 0000005A )
        Call  SetNpcPos ( 00000030 00000000 FFFFFE0C 00000000 )
    EndThread
    Return
    End
}

#new:Script $Script_8024A044
{
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFDBC
            BreakLoop
        EndIf
    EndLoop
    Call  InterpNpcYaw  ( 0000002C 0000005A 00000000 )
    Set   *Var[0]  0000002C
    Exec  $Script_802447F4 *Var[A]
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  FFFFFDE4
            BreakLoop
        EndIf
    EndLoop
    Wait  10`
    Call  $Function_80242B10    ( 000000FF )
    Call  802CFD30      ( 00000032 00000007 00000000 00000000 00000000 00000000 )
    Call  802CFD30      ( 00000033 00000007 00000000 00000000 00000000 00000000 )
    Call  802CFD30      ( 00000034 00000007 00000000 00000000 00000000 00000000 )
    Call  EnableNpcShadow   ( 00000032 .False )
    Call  EnableNpcShadow   ( 00000033 .False )
    Call  EnableNpcShadow   ( 00000034 .False )
    Call  NpcMoveTo     ( 00000031 FFFFFE34 00000000 00000064 )
    Exec  $Script_80249D64 *Var[B]
    Wait  20`
    Call  SetNpcPos     ( 00000035 FFFFFEFC 00000000 00000000 )
    Call  SetNpcJumpscale   ( 00000035 *Fixed[1.0] )
    Call  NpcJump0      ( 00000035 FFFFFEDE 00000000 00000000 0000000A )
    Call  NpcJump0      ( 00000035 FFFFFEC0 00000000 00000000 0000000A )
    Set   *Var[0]  00000035
    Exec  $Script_802447F4 *Var[C]
    Call  InterpNpcYaw  ( 00000031 0000005A 00000000 )
    Thread
        Call  MakeLerp  ( 00000000 000000FF 0000001E .Easing:Linear )
        Loop  0000001E
            Call  UpdateLerp ( )
            Call  802CFD30  ( 00000032 00000007 *Var[0] 00000000 00000000 00000000 )
            Call  802CFD30  ( 00000033 00000007 *Var[0] 00000000 00000000 00000000 )
            Call  802CFD30  ( 00000034 00000007 *Var[0] 00000000 00000000 00000000 )
            Wait  1`
        EndLoop
        Call  EnableNpcShadow   ( 00000032 .True )
        Call  EnableNpcShadow   ( 00000033 .True )
        Call  EnableNpcShadow   ( 00000034 .True )
    EndThread
    Wait  30`
    Call  SetNpcAnimation   ( 00000035 006C000B )
    Wait  20`
    Call  SetNpcAnimation   ( 0000002C 00BF0009 )
    Call  SetNpcAnimation   ( 00000032 0095000E )
    Call  SetNpcAnimation   ( 00000033 0095000E )
    Call  SetNpcAnimation   ( 00000034 0095000E )
    Wait  10`
    Thread
        Loop  00000006
            Call  SetNpcAnimation   ( 00000035 006C0016 )
            Wait  5`
            Call  SetNpcAnimation   ( 00000035 006C000B )
            Wait  10`
        EndLoop
    EndThread
    Wait  60`
    Kill  *Var[A]
    Thread
        Call  InterpNpcYaw  ( 0000002C 0000010E 00000000 )
        Call  SetNpcAnimation   ( 0000002C 00BF0004 )
        Call  GetNpcPos     ( 0000002C *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  000000B4
        Call  NpcMoveTo     ( 0000002C *Var[0] *Var[2] 0000003C )
    EndThread
    Kill  *Var[B]
    Thread
        Call  InterpNpcYaw  ( 00000031 0000010E 00000000 )
        Call  GetNpcPos     ( 00000031 *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  000000B4
        Call  NpcMoveTo     ( 00000031 *Var[0] *Var[2] 0000003C )
    EndThread
    Thread
        Call  InterpNpcYaw  ( 00000032 0000010E 00000000 )
        Call  SetNpcAnimation   ( 00000032 00950005 )
        Call  GetNpcPos     ( 00000032 *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  000000B4
        Call  NpcMoveTo     ( 00000032 *Var[0] *Var[2] 0000003C )
    EndThread
    Thread
        Call  InterpNpcYaw  ( 00000033 0000010E 00000000 )
        Call  SetNpcAnimation   ( 00000033 00950005 )
        Call  GetNpcPos     ( 00000033 *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  000000B4
        Call  NpcMoveTo     ( 00000033 *Var[0] *Var[2] 0000003C )
    EndThread
    Thread
        Call  InterpNpcYaw  ( 00000034 0000010E 00000000 )
        Call  SetNpcAnimation   ( 00000034 00950005 )
        Call  GetNpcPos     ( 00000034 *Var[0] *Var[1] *Var[2] )
        Sub   *Var[0]  000000B4
        Call  NpcMoveTo     ( 00000034 *Var[0] *Var[2] 0000003C )
    EndThread
    Wait  30`
    Kill  *Var[C]
    Call  SetNpcAnimation   ( 00000035 006C000B )
    Call  GetNpcPos ( 00000035 *Var[0] *Var[1] *Var[2] )
    Loop  00000006
        Sub   *Var[0]  0000002D
        Call  NpcJump0  ( 00000035 *Var[0] *Var[1] *Var[2] 0000000F )
    EndLoop
    Return
    End
}

#new:Script $Script_8024A804
{
    Wait  1`
    Call  SetNpcRotation    ( 00000036 00000000 00000000 000000B4 )
    Thread
        Loop  00000008
            Call  NpcMoveTo ( 00000037 FFFFFFE2 FFFFFFE4 00000014 )
            Call  NpcMoveTo ( 00000037 FFFFFF92 FFFFFFE4 00000014 )
        EndLoop
        Call  NpcMoveTo ( 00000037 FFFFFFE2 FFFFFFE4 00000014 )
        Call  GetNpcPos ( 00000037 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000037 *Var[0] *Var[1] *Var[2] 00000014 )
    EndThread
    Thread
        Loop  00000008
            Call  NpcMoveTo ( 00000038 FFFFFF92 FFFFFFE0 00000014 )
            Call  NpcMoveTo ( 00000038 FFFFFFE2 FFFFFFE0 00000014 )
        EndLoop
        Call  NpcMoveTo ( 00000038 FFFFFF92 FFFFFFE0 00000014 )
        Call  GetNpcPos ( 00000038 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000038 *Var[0] *Var[1] *Var[2] 00000014 )
    EndThread
    Loop  00000010
        Call  802D7E08  ( 00000037 00000000 0000002D 00000001 00000000 00000000 00000000 00000000 00000014 )
        Call  802D7E08  ( 00000038 00000000 FFFFFFD3 00000001 00000000 00000000 00000000 00000000 00000014 )
        Wait  10`
        Call  802D7E08  ( 00000037 00000000 FFFFFFD3 00000001 00000000 00000000 00000000 00000000 00000014 )
        Call  802D7E08  ( 00000038 00000000 0000002D 00000001 00000000 00000000 00000000 00000000 00000014 )
        Wait  10`
    EndLoop
    Call  SetNpcFlagBits    ( 00000036 00000200 .True )
    Call  SetNpcAnimation   ( 00000036 00630006 )
    Loop
        Call  GetNpcPos ( 00000036 *Var[0] *Var[1] *Var[2] )
        If  *Var[1]  <  00000050
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  PlayEffect        ( ~FX:Steam:LargeOutward *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetNpcFlagBits    ( 00000036 00000200 .False )
    Wait  60`
    Thread
        Call  SetNpcAnimation   ( 00000036 00630009 )
        Call  MakeLerp  ( 000000B4 00000168 0000000A .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            Call  SetNpcRotation    ( 00000036 00000000 00000000 *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Call  GetNpcPos ( 00000036 *Var[0] *Var[1] *Var[2] )
    Call  SetNpcJumpscale   ( 00000036 *Fixed[0.5] )
    Call  NpcJump0  ( 00000036 *Var[0] 00000000 00000000 00000014 )
    Wait  30`
    Thread
        Call  NpcMoveTo ( 00000037 FFFFFFE2 00000000 0000000F )
        Call  NpcMoveTo ( 00000037 FFFFFF2E 00000000 000000B4 )
    EndThread
    Thread
        Call  NpcMoveTo ( 00000038 FFFFFFE2 00000000 00000037 )
        Call  NpcMoveTo ( 00000038 FFFFFF56 00000000 0000008C )
    EndThread
    Call  NpcMoveTo ( 00000036 FFFFFF06 00000000 000000B4 )
    Return
    End
}

#new:Script $Script_8024AD30
{
    ChildThread
        Call  EnableTexPanning  ( ~Model:o119 .True )
        Set   *Var[0]  00000000
        Loop
            Add   *Var[0]  00000200
            Call  SetTexPanOffset   ( 00000004 00000001 *Var[0] 00000000 )
            Wait  1`
        EndLoop
    EndChildThread
    ChildThread
        Call  SetNpcScale   ( 0000003E *Fixed[2.0] *Fixed[2.0] 00000001 )
        Loop
            Call  NpcFlyTo  ( 0000003E 00000165 00000000 FFFFFFE2 0000000A 00000000 .Easing:Linear )
            Wait  60`
            Call  NpcFlyTo  ( 0000003E 00000165 FFFFFF88 FFFFFFE2 0000000A 00000000 .Easing:Linear )
            Wait  60`
        EndLoop
    EndChildThread
    ChildThread
        Call  GetNpcPos ( 0000003F *Var[0] *Var[1] *Var[2] )
        Loop
            Wait  60`
            Loop  0000000A
                Add   *Var[0]  00000005
                Add   *Var[1]  00000005
                Call  SetNpcPos ( 0000003F *Var[0] *Var[1] *Var[2] )
                Wait  1`
            EndLoop
            Wait  60`
            Loop  0000000A
                Sub   *Var[0]  00000005
                Sub   *Var[1]  00000005
                Call  SetNpcPos ( 0000003F *Var[0] *Var[1] *Var[2] )
                Wait  1`
            EndLoop
        EndLoop
    EndChildThread
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000320
            BreakLoop
        EndIf
    EndLoop
    Return
    End
}

PADDING: 8024AFD4 to 8024AFE0 (0000AFD4 to 0000AFE0)
00000000 00000000 00000000

#new:Script $Script_8024AFE0
{
    Call  GetNpcPos ( 00000040 *Var[0] *Var[1] *Var[2] )
    SetF  *Var[0]  *Var[0]
    SetF  *Var[3]  *Var[0]
    SubF  *Var[3]  00000028
    SetF  *Var[4]  *Var[0]
    SubF  *Var[4]  00000050
    SetF  *Var[5]  *Var[0]
    SubF  *Var[5]  00000078
    SetF  *Var[6]  *Var[0]
    SubF  *Var[6]  000000A0
    Call  SetNpcPos ( 00000040 *Var[0] *Var[1] *Var[2] )
    Call  SetNpcPos ( 00000041 *Var[3] *Var[1] *Var[2] )
    Call  SetNpcPos ( 00000042 *Var[4] *Var[1] *Var[2] )
    Call  SetNpcPos ( 00000043 *Var[5] *Var[1] *Var[2] )
    Call  SetNpcPos ( 00000044 *Var[6] *Var[1] *Var[2] )
    ChildThread
        Call  $Function_80242898    ( 00000041 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000042 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000043 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000044 )
    EndChildThread
    Call  $Function_80242898    ( 00000040 )
    Return
    End
}

#new:Script $Script_8024B1B8
{
    Call  GetNpcPos ( 00000045 *Var[0] *Var[1] *Var[2] )
    SetF  *Var[0]  *Var[0]
    SetF  *Var[3]  *Var[0]
    AddF  *Var[3]  00000050
    SetF  *Var[4]  *Var[0]
    SubF  *Var[4]  00000050
    Call  SetNpcPos ( 00000045 *Var[0] *Var[1] *Var[2] )
    Call  SetNpcPos ( 00000046 *Var[0] *Var[1] *Var[2] )
    Call  SetNpcPos ( 00000047 *Var[0] *Var[1] *Var[2] )
    Call  SetNpcPos ( 00000048 *Var[3] 0000003C 00000000 )
    Call  SetNpcPos ( 00000049 *Var[4] 0000003C 00000000 )
    ChildThread
        Call  $Function_80242898    ( 00000046 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000047 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000048 )
    EndChildThread
    ChildThread
        Call  $Function_80242898    ( 00000049 )
    EndChildThread
    Call  $Function_80242898    ( 00000045 )
    Return
    End
}

#new:Script $Script_8024B350
{
    Call  SetNpcAnimation   ( 00000045 007C0026 )
    Call  SetNpcAnimation   ( 00000046 007C0027 )
    Call  SetNpcAnimation   ( 00000047 007C0028 )
    Call  SetNpcAnimation   ( 00000048 007D000A )
    Call  SetNpcAnimation   ( 00000049 007D000A )
    Return
    End
}

#new:Script $Script_8024B3C4
{
    Call  SetNpcAnimation   ( 00000045 007C0007 )
    Call  SetNpcAnimation   ( 00000046 007C0008 )
    Call  SetNpcAnimation   ( 00000047 007C0009 )
    Call  SetNpcAnimation   ( 00000048 007D0006 )
    Call  SetNpcAnimation   ( 00000049 007D0006 )
    Return
    End
}

#new:Script $Script_8024B438
{
    Call  GetNpcPos ( 00000045 *Var[0] *Var[1] *Var[2] )
    Set   *Var[3]  *Var[0]
    Add   *Var[3]  00000050
    Set   *Var[4]  *Var[0]
    Add   *Var[4]  FFFFFFB0
    Loop  0000000A
        Add   *Var[0]  FFFFFFFE
        Call  SetNpcPos ( 00000045 *Var[0] *Var[1] *Var[2] )
        Call  SetNpcPos ( 00000046 *Var[0] *Var[1] *Var[2] )
        Call  SetNpcPos ( 00000047 *Var[0] *Var[1] *Var[2] )
        Add   *Var[3]  FFFFFFFE
        Call  SetNpcPos ( 00000048 *Var[3] 0000003C 00000000 )
        Add   *Var[4]  FFFFFFFE
        Call  SetNpcPos ( 00000049 *Var[4] 0000003C 00000000 )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8024B580
{
    Loop
        Wait  1`
        Call  GetNpcPos ( 00000040 *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000424
            BreakLoop
        EndIf
    EndLoop
    Call  GetNpcPos ( 00000049 *Var[0] *Var[1] *Var[2] )
    Call  SetNpcSpeed       ( 0000004A *Fixed[1.0] )
    Call  NpcMoveTo ( 0000004A *Var[0] FFFFFFEC 00000000 )
    Call  SetNpcAnimation   ( 0000004A 00C10001 )
    Call  $Function_80242898    ( 0000004A )
    Return
    End
}

#new:Script $Script_8024B65C
{
    Call  $Function_80242898    ( 0000004A )
    Return
    End
}

#new:Script $Script_8024B67C
{
    Wait  20`
    Call  SetNpcJumpscale   ( 00000040 *Fixed[1.0] )
    Call  NpcJump0  ( 00000040 000002A8 00000000 00000000 00000014 )
    Call  NpcJump0  ( 00000040 000002E4 00000000 00000000 0000000A )
    Call  SetNpcAnimation   ( 00000040 00970001 )
    Loop  00000002
        Call  InterpNpcYaw  ( 00000040 0000010E 00000007 )
        Wait  10`
        Call  InterpNpcYaw  ( 00000040 0000005A 00000007 )
        Wait  10`
    EndLoop
    Call  InterpNpcYaw  ( 00000040 0000010E 00000007 )
    Wait  10`
    Thread
        Call  GetNpcPos ( 00000040 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000040 *Var[0] *Var[1] *Var[2] 00000007 )
        Call  SetNpcAnimation   ( 00000040 00970003 )
        Call  NpcMoveTo ( 00000040 000003D4 00000000 0000003C )
        Call  SetNpcAnimation   ( 00000040 0097000C )
    EndThread
    Thread
        Call  SetNpcPos ( 00000041 00000294 00000000 00000000 )
        Call  NpcMoveTo ( 00000041 000003AC 00000000 00000046 )
        Call  SetNpcAnimation   ( 00000041 0097010C )
    EndThread
    Thread
        Wait  10`
        Call  SetNpcPos ( 00000042 00000294 00000000 00000000 )
        Call  NpcMoveTo ( 00000042 00000384 00000000 0000003C )
        Call  SetNpcAnimation   ( 00000042 0097020C )
    EndThread
    Thread
        Wait  20`
        Call  SetNpcPos ( 00000043 00000294 00000000 00000000 )
        Call  NpcMoveTo ( 00000043 0000035C 00000000 00000032 )
        Call  SetNpcAnimation   ( 00000043 0097030C )
    EndThread
    Thread
        Wait  30`
        Call  SetNpcPos ( 00000044 00000294 00000000 00000000 )
        Call  NpcMoveTo ( 00000044 00000334 00000000 00000028 )
        Call  SetNpcAnimation   ( 00000044 0097040C )
    EndThread
    Wait  70`
    Exec  $Script_8024AFE0 *Var[A]
    Loop
        Wait  1`
        Call  GetNpcPos ( 00000040 *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000424
            BreakLoop
        EndIf
    EndLoop
    Call  SetNpcAnimation   ( 00000040 00970001 )
    Call  SetNpcAnimation   ( 00000041 00970101 )
    Call  SetNpcAnimation   ( 00000042 00970201 )
    Call  SetNpcAnimation   ( 00000043 00970301 )
    Call  SetNpcAnimation   ( 00000044 00970401 )
    Call  InterpNpcYaw      ( 00000040 0000010E 00000000 )
    Wait  5`
    Loop  00000003
        Call  InterpNpcYaw  ( 00000042 0000010E 00000000 )
        Wait  5`
        Call  InterpNpcYaw  ( 00000041 0000010E 00000000 )
        Wait  5`
        Call  InterpNpcYaw  ( 00000043 0000010E 00000000 )
        Wait  5`
        Call  InterpNpcYaw  ( 00000042 0000005A 00000000 )
        Wait  5`
        Call  InterpNpcYaw  ( 00000041 0000005A 00000000 )
        Wait  5`
        Call  InterpNpcYaw  ( 00000043 0000005A 00000000 )
        Wait  5`
    EndLoop
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000424
            BreakLoop
        EndIf
    EndLoop
    Call  SetNpcYaw ( 00000040 0000010E )
    Call  SetNpcAnimation   ( 00000040 0097000D )
    Call  SetNpcYaw ( 00000041 0000010E )
    Call  SetNpcAnimation   ( 00000041 0097010D )
    Call  SetNpcYaw ( 00000042 0000005A )
    Call  SetNpcAnimation   ( 00000042 0097020D )
    Call  SetNpcYaw ( 00000043 0000005A )
    Call  SetNpcAnimation   ( 00000043 0097030D )
    Call  SetNpcYaw ( 00000044 0000005A )
    Call  SetNpcAnimation   ( 00000044 0097040D )
    Wait  10`
    Exec  $Script_8024B3C4
    Thread
        Call  GetNpcPos     ( 00000045 *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetNpcPos     ( 00000048 *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  GetNpcPos     ( 00000049 *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  MakeLerp      ( 000002EE 00000177 00000005 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            SetF  *Var[2]  *Var[0]
            DivF  *Var[2]  000003E8
            Call  SetNpcScale   ( 00000045 *Var[2] *Var[2] 00000001 )
            Call  SetNpcScale   ( 00000046 *Var[2] *Var[2] 00000001 )
            Call  SetNpcScale   ( 00000047 *Var[2] *Var[2] 00000001 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Thread
        Call  MakeLerp  ( 00000064 00000032 00000005 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            SetF  *Var[2]  *Var[0]
            DivF  *Var[2]  00000064
            Call  SetNpcScale   ( 00000048 *Var[2] *Var[2] 00000001 )
            Call  SetNpcScale   ( 00000049 *Var[2] *Var[2] 00000001 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Thread
        Call  MakeLerp  ( 00000258 0000012C 00000005 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            SetF  *Var[2]  *Var[0]
            DivF  *Var[2]  00000064
            Set   *Var[0]  00000045
            Exec  $Script_802447B8
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Wait  40`
    Call  SetNpcAnimation   ( 00000040 00970011 )
    Call  SetNpcAnimation   ( 00000041 00970111 )
    Call  SetNpcAnimation   ( 00000042 00970211 )
    Call  SetNpcAnimation   ( 00000043 00970311 )
    Call  SetNpcAnimation   ( 00000044 00970411 )
    Wait  50`
    Kill  *Var[A]
    Thread
        Call  SetNpcAnimation   ( 00000040 00970003 )
        Call  GetNpcPos ( 00000040 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000012C
        Call  NpcMoveTo ( 00000040 *Var[0] *Var[2] 0000004B )
        Call  SetNpcPos ( 00000040 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000041 00970103 )
        Call  GetNpcPos ( 00000041 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000012C
        Call  NpcMoveTo ( 00000041 *Var[0] *Var[2] 0000004B )
        Call  SetNpcPos ( 00000041 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000042 00970203 )
        Call  GetNpcPos ( 00000042 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000012C
        Call  NpcMoveTo ( 00000042 *Var[0] *Var[2] 0000004B )
        Call  SetNpcPos ( 00000042 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000043 00970303 )
        Call  GetNpcPos ( 00000043 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000012C
        Call  NpcMoveTo ( 00000043 *Var[0] *Var[2] 0000004B )
        Call  SetNpcPos ( 00000043 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000044 00970403 )
        Call  GetNpcPos ( 00000044 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  0000012C
        Call  NpcMoveTo ( 00000044 *Var[0] *Var[2] 0000004B )
        Call  SetNpcPos ( 00000044 00000000 FFFFFE0C 00000000 )
    EndThread
    Return
    End
}

#new:Script $Script_8024C38C
{
    Thread
        Loop
            Wait  1`
            Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
            If  *Var[0]  >  00000320
                BreakLoop
            EndIf
        EndLoop
        Wait  10`
        Call  SetNpcFlagBits    ( 00000045 00400000 .False )
        Call  SetNpcFlagBits    ( 00000046 00400000 .False )
        Call  SetNpcFlagBits    ( 00000047 00400000 .False )
        Call  SetNpcFlagBits    ( 00000048 00400000 .False )
        Call  SetNpcFlagBits    ( 00000049 00400000 .False )
        Call  SetNpcScale       ( 00000045 *Fixed[0.75] *Fixed[0.75] 00000001 )
        Call  SetNpcScale       ( 00000046 *Fixed[0.75] *Fixed[0.75] 00000001 )
        Call  SetNpcScale       ( 00000047 *Fixed[0.75] *Fixed[0.75] 00000001 )
        Call  EnableNpcShadow   ( 00000046 .False )
        Call  EnableNpcShadow   ( 00000047 .False )
    EndThread
    Exec  $Script_8024B67C
    Exec  $Script_8024B580 *Var[B]
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000424
            BreakLoop
        EndIf
    EndLoop
    Exec  $Script_8024B1B8 *Var[A]
    Wait  10`
    Kill  *Var[B]
    Call  SetNpcAnimation   ( 0000004A 00C1000B )
    Call  GetNpcPos     ( 0000004A *Var[0] *Var[1] *Var[2] )
    Call  NpcJump0      ( 0000004A *Var[0] *Var[1] *Var[2] 0000000A )
    Call  SetNpcAnimation   ( 0000004A 00C10008 )
    Exec  $Script_8024B65C *Var[B]
    Wait  130`
    Exec  $Script_8024B350
    Wait  30`
    Call  InterpNpcYaw  ( 00000045 0000005A 00000000 )
    Call  InterpNpcYaw  ( 00000046 0000005A 00000000 )
    Call  InterpNpcYaw  ( 00000047 0000005A 00000000 )
    Call  InterpNpcYaw  ( 00000048 0000005A 00000000 )
    Call  InterpNpcYaw  ( 00000049 0000005A 00000000 )
    Wait  30`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 00000003 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            Call  SetNpcRotation    ( 0000004A 00000000 *Var[0] 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  SetNpcAnimation   ( 0000004A 00C10000 )
        Call  MakeLerp  ( 0000010E 00000168 00000003 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            Call  SetNpcRotation    ( 0000004A 00000000 *Var[0] 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  SetNpcAnimation   ( 0000004A 00C10001 )
    EndThread
    Wait  6`
    Loop  00000002
        Exec  $Script_8024B3C4
        Kill  *Var[A]
        ExecWait  $Script_8024B438
        Exec  $Script_8024B350
        Exec  $Script_8024B1B8 *Var[A]
        Wait  10`
        Kill  *Var[B]
        Call  SetNpcAnimation   ( 0000004A 00C10002 )
        Call  GetNpcPos ( 0000004A *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFFEC
        Call  NpcMoveTo ( 0000004A *Var[0] *Var[2] 0000000A )
        Call  SetNpcAnimation   ( 0000004A 00C10001 )
        Exec  $Script_8024B65C *Var[B]
        Wait  10`
    EndLoop
    Kill  *Var[A]
    Thread
        Call  GetNpcPos ( 00000045 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000045 *Var[0] *Var[1] *Var[2] 0000000A )
        Add   *Var[0]  FFFFFF38
        Call  NpcMoveTo ( 00000045 *Var[0] *Var[2] 00000032 )
    EndThread
    Thread
        Call  GetNpcPos ( 00000046 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000046 *Var[0] *Var[1] *Var[2] 0000000A )
        Add   *Var[0]  FFFFFF38
        Call  NpcMoveTo ( 00000046 *Var[0] *Var[2] 00000032 )
    EndThread
    Thread
        Call  GetNpcPos ( 00000047 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000047 *Var[0] *Var[1] *Var[2] 0000000A )
        Add   *Var[0]  FFFFFF38
        Call  NpcMoveTo ( 00000047 *Var[0] *Var[2] 00000032 )
    EndThread
    Thread
        Call  GetNpcPos ( 00000048 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000048 *Var[0] *Var[1] *Var[2] 0000000A )
        Add   *Var[0]  FFFFFF38
        Call  NpcMoveTo ( 00000048 *Var[0] *Var[2] 00000032 )
    EndThread
    Thread
        Call  GetNpcPos ( 00000049 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000049 *Var[0] *Var[1] *Var[2] 0000000A )
        Add   *Var[0]  FFFFFF38
        Call  NpcMoveTo ( 00000049 *Var[0] *Var[2] 00000032 )
    EndThread
    Wait  30`
    Call  SetNpcAnimation   ( 0000004A 00C1000C )
    Wait  10`
    Call  SetNpcAnimation   ( 0000004A 00C10002 )
    Kill  *Var[B]
    Call  GetNpcPos ( 0000004A *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFED4
    Call  NpcMoveTo ( 0000004A *Var[0] *Var[2] 00000032 )
    Return
    End
}

#new:VectorList $VectorList_8024CC00
{
    % ~Path3f:Path_8024CC00
    2050.000000 100.000000 0.000000
    1900.000000 80.000000 0.000000
    1820.000000 70.000000 0.000000
    1800.000000 60.000000 0.000000
    1840.000000 50.000000 0.000000
}

#new:VectorList $VectorList_8024CC3C
{
    % ~Path3f:Path_8024CC3C
    1840.000000 50.000000 0.000000
    1880.000000 60.000000 0.000000
    1860.000000 70.000000 0.000000
    1760.000000 100.000000 0.000000
    1660.000000 170.000000 0.000000
}

#new:Script $Script_8024CC78
{
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  000005DC
            BreakLoop
        EndIf
    EndLoop
    Call  SetNpcAnimation   ( 0000004D 007F0009 )
    Set   *Var[0]  0000004D
    Exec  $Script_802447F4 *Var[A]
    Wait  10`
    Call  InterpNpcYaw      ( 0000004D 0000005A 00000007 )
    Wait  10`
    Call  SetNpcAnimation   ( 0000004D 007F0010 )
    Call  SetNpcAnimation   ( 0000004E 007F0010 )
    Set   *Var[0]  0000004E
    Exec  $Script_802447F4 *Var[B]
    Wait  30`
    Call  SetNpcAnimation   ( 0000004E 007F001C )
    Wait  10`
    Call  SetNpcAnimation   ( 0000004D 007F0019 )
    Wait  10`
    Kill  *Var[A]
    Call  GetNpcPos ( 0000004D *Var[0] *Var[1] *Var[2] )
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000001 00000001 00000001 00000001 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetNpcPos ( 0000004D 00000708 00000000 00000000 )
    Call  SetNpcYaw ( 0000004D 0000010E )
    Call  SetNpcAnimation   ( 0000004D 007F000E )
    Call  SetNpcPos ( 0000004B *Var[0] *Var[1] *Var[2] )
    Call  SetNpcJumpscale   ( 0000004B *Fixed[0.5] )
    Add   *Var[0]  FFFFFFD8
    Call  NpcJump1  ( 0000004B *Var[0] *Var[1] *Var[2] 00000014 )
    Call  SetNpcAnimation   ( 0000004B 004E0002 )
    Set   *Var[0]  0000004B
    Exec  $Script_802447F4 *Var[A]
    Kill  *Var[B]
    Call  SetNpcAnimation   ( 0000004E 007F000F )
    Call  GetNpcPos ( 0000004E *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFB0
    Call  NpcMoveTo ( 0000004E *Var[0] *Var[2] 00000028 )
    Set   *Var[0]  0000004E
    Exec  $Script_802447F4 *Var[B]
    Thread
        Call  SetNpcAnimation   ( 0000004E 007F0010 )
        Wait  60`
        Call  SetNpcAnimation   ( 0000004E 007F0009 )
    EndThread
    Thread
        Wait  10`
        Loop  00000004
            Call  SetNpcAnimation   ( 0000004B 004E0000 )
            Wait  10`
            Call  SetNpcAnimation   ( 0000004B 004E0007 )
            Wait  10`
        EndLoop
        Call  SetNpcAnimation   ( 0000004B 004E0002 )
    EndThread
    Wait  100`
    Call  InterpNpcYaw      ( 0000004E 0000005A 00000007 )
    Wait  10`
    Call  SetNpcAnimation   ( 0000004E 007F0010 )
    Call  SetNpcAnimation   ( 0000004D 007F0010 )
    Set   *Var[0]  0000004D
    Exec  $Script_802447F4 *Var[C]
    Wait  30`
    Call  SetNpcAnimation   ( 0000004D 007F001C )
    Wait  10`
    Call  SetNpcAnimation   ( 0000004E 007F0019 )
    Wait  10`
    Kill  *Var[B]
    Call  GetNpcPos ( 0000004E *Var[0] *Var[1] *Var[2] )
    Call  PlayEffect        ( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000001 00000001 00000001 00000001 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  SetNpcPos ( 0000004E 00000000 FFFFFE0C 00000000 )
    Call  SetNpcPos ( 0000004C *Var[0] *Var[1] *Var[2] )
    Call  SetNpcJumpscale   ( 0000004C *Fixed[0.5] )
    Add   *Var[0]  FFFFFFD8
    Call  NpcJump1  ( 0000004C *Var[0] *Var[1] *Var[2] 00000014 )
    Call  SetNpcAnimation   ( 0000004C 004E0002 )
    Set   *Var[0]  0000004C
    Exec  $Script_802447F4 *Var[B]
    Kill  *Var[C]
    Call  SetNpcAnimation   ( 0000004D 007F000F )
    Call  GetNpcPos ( 0000004D *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFB0
    Call  NpcMoveTo ( 0000004D *Var[0] *Var[2] 00000028 )
    Set   *Var[0]  0000004D
    Exec  $Script_802447F4 *Var[C]
    Thread
        Loop  00000006
            Call  SetNpcAnimation   ( 0000004D 007F0010 )
            Wait  10`
            Call  SetNpcAnimation   ( 0000004D 007F0011 )
            Wait  10`
        EndLoop
    EndThread
    Thread
        Wait  10`
        Loop  00000004
            Call  SetNpcAnimation   ( 0000004B 004E0000 )
            Call  SetNpcAnimation   ( 0000004C 004E0000 )
            Wait  10`
            Call  SetNpcAnimation   ( 0000004B 004E0007 )
            Call  SetNpcAnimation   ( 0000004C 004E0007 )
            Wait  10`
        EndLoop
        Call  SetNpcAnimation   ( 0000004B 004E0002 )
        Call  SetNpcAnimation   ( 0000004C 004E0002 )
    EndThread
    Wait  60`
    Thread
        Call  LoadPath  ( 00000032 $VectorList_8024CC00 00000005 .Easing:Linear )
        Loop
            Call  GetNextPathPos ( )
            Set   *Var[4]  *Var[1]
            Add   *Var[4]  FFFFFFE2
            Set   *Var[5]  *Var[1]
            Add   *Var[5]  0000001E
            Set   *Var[6]  *Var[2]
            Add   *Var[6]  FFFFFFE7
            Call  SetNpcPos ( 0000004F *Var[5] *Var[6] *Var[3] )
            Call  SetNpcPos ( 00000050 *Var[1] *Var[2] *Var[3] )
            Call  SetNpcPos ( 00000051 *Var[4] *Var[6] *Var[3] )
            Wait  1`
            If  *Var[0]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Wait  50`
    Kill  *Var[C]
    Thread
        Call  SetNpcAnimation   ( 0000004D 007F0019 )
        Call  LoadPath  ( 00000032 $VectorList_8024CC3C 00000005 .Easing:Linear )
        Loop
            Call  GetNextPathPos ( )
            Set   *Var[4]  *Var[1]
            Add   *Var[4]  FFFFFFE2
            Set   *Var[5]  *Var[1]
            Add   *Var[5]  0000001E
            Set   *Var[6]  *Var[2]
            Add   *Var[6]  FFFFFFE7
            Call  SetNpcPos ( 0000004F *Var[5] *Var[6] *Var[3] )
            Call  SetNpcPos ( 00000050 *Var[1] *Var[2] *Var[3] )
            Call  SetNpcPos ( 00000051 *Var[4] *Var[6] *Var[3] )
            Add   *Var[2]  FFFFFFCE
            Call  SetNpcPos ( 0000004D *Var[1] *Var[2] *Var[3] )
            Wait  1`
            If  *Var[0]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Call  SetNpcAnimation   ( 0000004B 004E0002 )
    Call  SetNpcAnimation   ( 0000004C 004E0002 )
    Loop  00000032
        Call  NpcFaceNpc    ( 0000004B 0000004D 00000000 )
        Call  NpcFaceNpc    ( 0000004C 0000004D 00000000 )
        Wait  1`
    EndLoop
    Wait  30`
    Call  SetNpcAnimation   ( 0000004B 004E0003 )
    Call  SetNpcAnimation   ( 0000004C 004E0003 )
    Kill  *Var[A]
    Kill  *Var[B]
    Return
    End
}

PADDING: 8024D77C to 8024D780 (0000D77C to 0000D780)
00000000

#new:Script $Script_8024D780
{
    Call  SetNpcAnimation   ( 00000053 00240006 )
    Wait  5`
    Call  MakeLerp  ( 00000000 00000168 0000000A .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  SetNpcRotation    ( 00000053 00000000 *Var[0] 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Return
    End
}

#new:Script $Script_8024D834
{
    Wait  10`
    Call  SetNpcJumpscale   ( 00000053 *Fixed[0.5] )
    Call  NpcJump1      ( 00000053 000007DA 00000000 00000000 00000014 )
    Call  SetNpcAnimation   ( 00000053 00240005 )
    Call  NpcMoveTo     ( 00000053 0000078A 00000000 00000014 )
    Call  SetNpcAnimation   ( 00000053 00240002 )
    Call  InterpNpcYaw  ( 00000053 0000005A 00000000 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000053 00240006 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000053 00240007 )
    Call  PlayEffect    ( ~FX:ShapeSpell:Projectile 0000078A 00000000 00000000 00000870 00000064 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Call  PlayEffect    ( ~FX:ShapeSpell:Projectile 00000870 00000064 00000000 0000078A 00000000 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    Exec  $Script_8024D780
    Call  NpcJump1      ( 00000053 00000762 00000000 00000000 00000014 )
    Call  SetNpcAnimation   ( 00000053 00240002 )
    Call  NpcFlyTo      ( 00000052 0000080C 0000003C 00000000 0000000A FFFFFFF6 .Easing:Linear )
    Call  SetNpcAnimation   ( 00000052 0060000E )
    Wait  10`
    Call  SetNpcAnimation   ( 00000052 0060000F )
    Call  PlayEffect    ( ~FX:ShapeSpell:Projectile 0000080C 0000003C 00000000 00000762 00000000 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    Exec  $Script_8024D780
    Call  NpcJump1      ( 00000053 000007F8 00000000 00000000 00000014 )
    Call  SetNpcAnimation   ( 00000053 00240002 )
    Call  SetNpcAnimation   ( 00000052 00600014 )
    Call  NpcFlyTo      ( 00000052 00000794 0000003C 00000000 00000014 FFFFFFF6 .Easing:Linear )
    Call  InterpNpcYaw  ( 00000052 0000005A 00000000 )
    Call  InterpNpcYaw  ( 00000053 0000010E 00000000 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000052 0060000E )
    Wait  10`
    Call  SetNpcAnimation   ( 00000052 0060000F )
    Call  PlayEffect    ( ~FX:ShapeSpell:Projectile 00000794 0000003C 00000000 000007F8 00000000 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    Exec  $Script_8024D780
    Call  NpcJump1      ( 00000053 00000870 00000000 00000000 00000014 )
    Call  SetNpcAnimation   ( 00000053 00240002 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000053 00240006 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000053 00240007 )
    Call  PlayEffect    ( ~FX:ShapeSpell:Projectile 00000870 00000000 00000000 00000794 0000003C 00000000 00000014 00000000 00000000 00000000 00000000 00000000 )
    Call  SetNpcAnimation   ( 00000052 00600014 )
    Call  PlayEffect    ( ~FX:GatherEnergyPink 00000794 0000003C 00000000 *Fixed[0.5] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  10`
    Call  SetNpcPos     ( 00000052 00000000 FFFFFE0C 00000000 )
    Call  PlayEffect    ( ~FX:GatherEnergyPink 00000834 0000003C 00000000 *Fixed[0.5] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  10`
    Call  SetNpcPos     ( 00000052 00000834 0000003C 00000000 )
    Wait  30`
    Call  SetNpcAnimation   ( 00000052 0060000E )
    Wait  10`
    Call  SetNpcAnimation   ( 00000052 0060000F )
    Call  PlayEffect    ( ~FX:ShapeSpell:Projectile 00000834 0000003C 00000000 00000870 00000000 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    Exec  $Script_8024D780
    Call  NpcJump1      ( 00000053 00000834 00000000 00000000 00000014 )
    Thread
        Call  SetNpcAnimation   ( 00000053 00240005 )
        Call  NpcMoveTo ( 00000053 0000076C 00000000 00000032 )
    EndThread
    Wait  20`
    Call  SetNpcAnimation   ( 00000052 00600014 )
    Call  InterpNpcYaw      ( 00000052 0000010E 00000000 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000052 00600012 )
    Wait  30`
    Call  SetNpcAnimation   ( 00000052 00600014 )
    Call  InterpNpcYaw      ( 00000052 0000005A 00000000 )
    Wait  20`
    Call  NpcFlyTo  ( 00000052 0000076C 00000028 00000000 00000019 FFFFFFF6 .Easing:Linear )
    Wait  150`
    Thread
        Wait  35`
        Call  PlayEffect    ( ~FX:ShapeSpell:Projectile 000007F8 0000003C FFFFFFEC 00000884 00000000 00000014 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  35`
        Call  SetNpcPos     ( 00000052 00000956 00000078 FFFFFFEC )
        Call  NpcFlyTo      ( 00000052 00000988 0000003C FFFFFFEC 0000000A FFFFFFF6 .Easing:Linear )
        Call  InterpNpcYaw  ( 00000052 0000010E 00000000 )
    EndThread
    Call  SetNpcPos ( 00000053 000007F8 00000000 00000014 )
    Call  SetNpcYaw ( 00000053 0000005A )
    Call  NpcMoveTo ( 00000053 00000960 00000014 0000005A )
    Call  SetNpcAnimation   ( 00000053 00240002 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000053 00240006 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000053 00240007 )
    Call  PlayEffect        ( ~FX:ShapeSpell:Projectile 00000960 00000000 00000014 00000988 0000003C FFFFFFEC 0000000A 00000000 00000000 00000000 00000000 00000000 )
    Thread
        Call  NpcFlyTo  ( 00000052 000008FC 0000003C FFFFFFEC 00000014 FFFFFFF6 .Easing:Linear )
        Call  InterpNpcYaw      ( 00000052 0000005A 00000000 )
        Wait  20`
        Call  SetNpcAnimation   ( 00000052 0060000E )
        Wait  10`
        Call  SetNpcAnimation   ( 00000052 0060000F )
        Call  PlayEffect        ( ~FX:ShapeSpell:Projectile 000008FC 0000003C FFFFFFEC 00000956 00000028 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Thread
        Wait  10`
        Call  SetNpcAnimation   ( 00000053 00240005 )
        Call  NpcMoveTo ( 00000053 000009B0 00000014 00000014 )
        Call  SetNpcAnimation   ( 00000053 00240002 )
        Call  InterpNpcYaw      ( 00000053 0000010E 00000000 )
        Wait  10`
        Call  SetNpcAnimation   ( 00000053 00240006 )
        Wait  10`
        Call  SetNpcAnimation   ( 00000053 00240007 )
        Call  PlayEffect        ( ~FX:ShapeSpell:Projectile 000009B0 00000000 00000014 00000956 00000028 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Wait  60`
    Call  PlayEffect    ( ~FX:RingBlast:Red 00000956 00000028 00000005 *Fixed[5.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Thread
        Call  SetNpcAnimation   ( 00000056 00D70004 )
        Call  NpcMoveTo ( 00000056 00000884 00000000 0000001E )
        Call  SetNpcPos ( 00000056 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000057 00D70004 )
        Call  NpcMoveTo ( 00000057 0000085C 00000000 0000001E )
        Call  SetNpcPos ( 00000057 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000058 00D70005 )
        Call  NpcMoveTo ( 00000058 00000A78 00000000 00000032 )
        Call  SetNpcPos ( 00000058 00000000 FFFFFE0C 00000000 )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000059 00D70005 )
        Call  NpcMoveTo ( 00000059 00000AA0 00000000 00000032 )
        Call  SetNpcPos ( 00000059 00000000 FFFFFE0C 00000000 )
    EndThread
    Wait  10`
    Call  SetNpcPos ( 00000054 00000000 FFFFFE0C 00000000 )
    Call  SetNpcPos ( 00000055 00000000 FFFFFE0C 00000000 )
    Call  SetNpcPos ( 0000005A 00000956 0000000A 00000000 )
    Call  SetNpcPos ( 0000005B 00000956 0000000A 00000000 )
    Wait  60`
    Call  SetNpcAnimation   ( 0000005A 00D80001 )
    Wait  10`
    Thread
        Call  SetNpcAnimation   ( 00000052 0060000C )
        Call  NpcFlyTo  ( 00000052 00000884 0000003C FFFFFFEC 0000001E FFFFFFF6 .Easing:Linear )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000053 00240005 )
        Call  NpcMoveTo ( 00000053 00000870 00000014 00000028 )
    EndThread
    Wait  40`
    Thread
        Call  NpcMoveTo ( 0000005B 000008DE 00000000 0000003C )
    EndThread
    Call  NpcMoveTo     ( 0000005A 000008DE 00000000 0000003C )
    Call  PlayEffect    ( ~FX:FireBreath:Large 000008DE 00000028 FFFFFFFB 000008E8 00000028 FFFFFFFB 00000005 00000002 0000001E 00000000 00000000 00000000 )
    Wait  20`
    Thread
        Call  SetNpcAnimation   ( 00000052 00600007 )
        Call  SetNpcYaw ( 00000052 0000005A )
        Call  SetNpcPos ( 00000052 000008E8 00000000 00000000 )
        Call  SetNpcJumpscale   ( 00000052 *Fixed[0.5] )
        Call  NpcJump1  ( 00000052 0000094C 00000000 00000000 00000014 )
        Call  NpcJump1  ( 00000052 0000097E 00000000 00000000 0000000A )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000053 0024000B )
        Call  SetNpcYaw ( 00000053 0000005A )
        Call  SetNpcPos ( 00000053 00000910 00000000 00000000 )
        Call  SetNpcJumpscale   ( 00000053 *Fixed[0.5] )
        Call  NpcJump1  ( 00000053 00000974 00000000 00000000 00000014 )
        Call  NpcJump1  ( 00000053 000009A6 00000000 00000000 0000000A )
    EndThread
    Wait  30`
    SetF  *Var[0]  0000097E
    SetF  *Var[1]  000009A6
    ChildThread
        Loop
            AddF  *Var[0]  *Fixed[0.87]
            Call  SetNpcPos ( 00000052 *Var[0] 00000000 00000000 )
            AddF  *Var[1]  *Fixed[0.87]
            Call  SetNpcPos ( 00000053 *Var[1] 00000000 00000000 )
            Wait  1`
        EndLoop
    EndChildThread
    Loop
        Wait  1`
        Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  >  00000A14
            BreakLoop
        EndIf
    EndLoop
    Wait  100`
    Return
    End
}

PADDING: 8024E8B4 to 8024E8C0 (0000E8B4 to 0000E8C0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_8024E8C0
{
    $Function_80241B34[E0] $Function_80241B34[110] $Function_80241B34[110] $Function_80241B34[D4] $Function_80241B34[D4] $Function_80241B34[D4] $Function_80241B34[110] $Function_80241B34[110]
    $Function_80241B34[110] $Function_80241B34[110] $Function_80241B34[110] $Function_80241B34[110] $Function_80241B34[110] $Function_80241B34[E0] $Function_80241B34[110] $Function_80241B34[E8]
}

% Origin: HEURISTIC
#new:JumpTable $JumpTable_8024E900
{
    $Function_80241B34[2B0] $Function_80241B34[2E4] $Function_80241B34[2E4] $Function_80241B34[2A4]
    $Function_80241B34[2A4] $Function_80241B34[2A4] $Function_80241B34[2E4] $Function_80241B34[2E4]
    $Function_80241B34[2E4] $Function_80241B34[2E4] $Function_80241B34[2E4] $Function_80241B34[2E4]
    $Function_80241B34[2E4] $Function_80241B34[2B0] $Function_80241B34[2E4] $Function_80241B34[2BC]
}

% Origin: HEURISTIC
#new:JumpTable $JumpTable_8024E940
{
    $Function_80241B34[3F4] $Function_80241B34[3A4] $Function_80241B34[3B8] $Function_80241B34[3CC]
    $Function_80241B34[3E0] $Function_80241B34[3F4]
}

#new:ASCII $ASCII_8024E958
{
    "end_01"
}

