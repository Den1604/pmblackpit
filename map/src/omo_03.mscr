% Script File: omo_03.mscr
% Decoded from: 0 to 81C0 (omo_03)

#new:Function $Function_80240000
{
	LIA       V1, 800B1D80
	LHU       V0, 2 (V1)
	ANDI      V0, V0, FFFE
	SH        V0, 2 (V1)
	JR        RA
	ADDIU     V0, R0, 2
}

PADDING: 8024001C to 80240020 (0000001C to 00000020)
00000000

#new:Function $Function_80240020
{
	LIA       V1, 800B1D80
	LHU       V0, 2 (V1)
	ANDI      V0, V0, FFFE
	SH        V0, 2 (V1)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_8024003C
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	MOV.S     F12, F24
	MFC1      A2, F20
	MFC1      A3, F0
	JAL       ~Func:atan2
	MOV.S     F14, F22
	JAL       ~Func:clamp_angle
	MOV.S     F12, F0
	COPY      A0, S1
	MFC1      A2, F0
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_80240104
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	C.LT.S    F0, F20
	NOP
	BC1F      .o58
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .o60
	ADDIU     A2, R0, 1
	.o58
	LW        A1, 0 (S0)
	CLEAR     A2
	.o60
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80240188
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MULT      S0, V0
	ADDIU     V0, R0, 2
	LW        V1, 138 (S2)
	MFLO      A2
	ADDU      S1, S1, A2
	SLLV      S1, S1, V0
	ADDU      V1, V1, S1
	SW        V1, 138 (S2)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8024020C
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LIA       V0, 8010EFC8
	SWC1      F24, 28 (V0)
	SWC1      F22, 2C (V0)
	SWC1      F20, 30 (V0)
	SWC1      F0, 80 (V0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_802402B0
{
	ADDIU     SP, SP, FFC0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F26, 38 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	COPY      A0, S2
	JAL       ~Func:get_npc_safe
	MOV.S     F22, F0
	COPY      A0, V0
	SWC1      F26, 38 (A0)
	MOV.S     F0, F26
	SWC1      F24, 3C (A0)
	MOV.S     F2, F24
	SWC1      F20, 40 (A0)
	MOV.S     F4, F20
	LW        V1, 0 (A0)
	LUI       A1, 1
	SWC1      F22, C (A0)
	SWC1      F0, 6C (A0)
	SWC1      F2, 70 (A0)
	SWC1      F4, 74 (A0)
	OR        V1, V1, A1
	SW        V1, 0 (A0)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 38 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_802403A8
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80240538
{
	LIA       V1, 8007419C
	LW        V0, 0 (V1)
	SW        R0, 84 (A0)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 8000
	BEQ       V0, R0, .o24
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o24
	LW        V0, 0 (V1)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 4000
	BEQ       V0, R0, .o3C
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o3C
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_8024057C
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o30
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o40
	ADDU      V0, V1, V0
	.o30
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o44
	SUBU      V0, V1, A0
	.o40
	SW        V0, A8 (S0)
	.o44
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o64
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o74
	ADDU      V0, V1, V0
	.o64
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o78
	SUBU      V0, V1, A0
	.o74
	SW        V0, AC (S0)
	.o78
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o98
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA8
	ADDU      V0, V1, V0
	.o98
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oAC
	SUBU      V0, V1, A0
	.oA8
	SW        V0, B0 (S0)
	.oAC
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oCC
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oDC
	ADDU      V0, V1, V0
	.oCC
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE0
	SUBU      V0, V1, A0
	.oDC
	SW        V0, B4 (S0)
	.oE0
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802406A0
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o24
	SW        RA, 14 (SP)
	SW        R0, 70 (S0)
	SW        R0, 74 (S0)
	SW        R0, 78 (S0)
	SW        R0, 7C (S0)
	.o24
	LW        V0, 70 (S0)
	BNE       V0, R0, .o64
	NOP
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o50
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o60
	ADDU      V0, V1, V0
	.o50
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o64
	SUBU      V0, V1, A0
	.o60
	SW        V0, A8 (S0)
	.o64
	LW        V0, 74 (S0)
	BNE       V0, R0, .oA4
	NOP
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o90
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA0
	ADDU      V0, V1, V0
	.o90
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oA4
	SUBU      V0, V1, A0
	.oA0
	SW        V0, AC (S0)
	.oA4
	LW        V0, 78 (S0)
	BNE       V0, R0, .oE4
	NOP
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oD0
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oE0
	ADDU      V0, V1, V0
	.oD0
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE4
	SUBU      V0, V1, A0
	.oE0
	SW        V0, B0 (S0)
	.oE4
	LW        V0, 7C (S0)
	BNE       V0, R0, .o124
	NOP
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o110
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o120
	ADDU      V0, V1, V0
	.o110
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o124
	SUBU      V0, V1, A0
	.o120
	SW        V0, B4 (S0)
	.o124
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        V0, 70 (S0)
	LW        V1, 78 (S0)
	LW        A0, 98 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 70 (S0)
	LW        V0, 74 (S0)
	ADDIU     V1, V1, 1
	SW        V1, 78 (S0)
	LW        V1, 70 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 74 (S0)
	LW        V0, 7C (S0)
	SLT       V1, V1, A0
	ADDIU     V0, V0, 1
	BNE       V1, R0, .o198
	SW        V0, 7C (S0)
	SW        R0, 70 (S0)
	.o198
	LW        V0, 74 (S0)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1AC
	SW        R0, 74 (S0)
	.o1AC
	LW        V0, 78 (S0)
	LW        V1, A0 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1C0
	SW        R0, 78 (S0)
	.o1C0
	LW        V0, 7C (S0)
	LW        V1, A4 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1D4
	SW        R0, 7C (S0)
	.o1D4
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240888 to 80240890 (00000888 to 00000890)
00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -320.0    0.0  320.0   45.0
    ~Vec4f:Entry1 %  340.0    0.0  330.0  315.0
    ~Vec4f:Entry2 % -320.0   10.0 -320.0  135.0
    ~Vec4f:Entry3 %  320.0   10.0 -320.0  225.0
    ~Vec4f:Entry4 % -245.0  270.0  250.0   90.0
    ~Vec4f:Entry5 %    0.0 -100.0    0.0   90.0
    ~Vec4f:Entry6 % -320.0    0.0  320.0   45.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000007
    [Background]  80200000
    [MapTattle]   001900DB
}

#new:Script $Script_80240940
{
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
    Else
        Call  GetEntryID    ( *Var[0] )
        Switch  *Var[0]
            Case  ~Entry:Entry2  to  ~Entry:Entry3
                Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
            Case  ==  ~Entry:Entry5
                Call  FadeInMusic   ( 00000000 .Song:ShyGuyToybox 00000000 00000BB8 00000000 0000007F )
            Default
                Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_ExitWalk_80240A40
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80248170 00000001 ) % omo_13
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80240A9C
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80248178 00000000 ) % omo_04
    Wait  100`
    Return
    End
}

#new:Script $Script_80240AF8
{
    Bind  $Script_ExitWalk_80240A40 .Trigger:FloorAbove ~Collider:deili1 00000001 00000000
    Bind  $Script_ExitWalk_80240A9C .Trigger:FloorAbove ~Collider:deili2 00000001 00000000
    Return
    End
}

#new:Script $Script_EnterWalk_80240B40
{
    Set   *AreaFlag[004]  .False
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Exec  EnterSavePoint
        Exec  $Script_80240AF8
        Return
    EndIf
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ~Entry:Entry0  to  ~Entry:Entry1
            Set   *Var[0]  $Script_80240AF8
            Exec  EnterWalk
            Wait  1`
        Case  ==  ~Entry:Entry4
            Set   *AreaFlag[004]  .True
            Exec  $Script_80240AF8
            Exec  $Script_802417B0
        Case  ==  ~Entry:Entry5
            Exec  $Script_80247E60
        Case  ==  ~Entry:Entry6
            Exec  $Script_802476AC
        Default
            Exec  $Script_80240AF8
            Wait  3`
    EndSwitch
    Return
    End
}

#new:Script_Main $Script_Main
{
    If  *StoryProgress  <  FFFFFFF7
        Set   *StoryProgress  FFFFFFF7
    EndIf
    Set   *WorldMapLocation  .Location:ShyGuysToybox
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Set   *AreaFlag[005]  .False
    Set   *Flag_MAP_12  .True
    Call  GetEntryID        ( *Var[0] )
    If  *Var[0]  !=  ~Entry:Entry5
        Call  MakeNpcs  ( 00000001 $NpcGroupList_80242F0C )
    Else
        Call  MakeNpcs  ( 00000001 $NpcGroupList_80242F24 )
    EndIf
    ExecWait  $Script_MakeEntities
    ExecWait  $Script_802414B4
    ExecWait  $Script_80240940
    ExecWait  $Script_8024746C
    Exec  $Script_EnterWalk_80240B40
    Wait  1`
    Return
    End
}

PADDING: 80240E04 to 80240E10 (00000E04 to 00000E10)
00000000 00000000 00000000

#new:Script $Script_80240E10
{
    Label  0
    Call  MakeLerp      ( 00000000 FFFFFE98 00000064 .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:ha1 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:ha2 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:ha3 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel   ( ~Model:ha4 *Var[0] 00000000 00000000 00000001 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_80240F1C
{
    Label  0
    Call  MakeLerp      ( 00000000 000000A0 0000003C .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:m1_1 *Var[0] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:m1_2 *Var[0] 00000000 00000001 00000000 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Call  MakeLerp      ( 000000A0 00000000 0000003C .Easing:CosInOut )
    Label  2
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:m1_1 *Var[0] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:m1_2 *Var[0] 00000000 00000001 00000000 )
    Wait  2`
    If  *Var[1]  ==  00000001
        Goto  2
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_8024108C
{
    Label  0
    Call  MakeLerp      ( 00000000 FFFFFE98 00000064 .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:hari1 *Var[0] 00000000 00000000 00000001 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Goto  0
    Return
    End
}

#new:Script $Script_80241138
{
    Call  DisablePlayerInput    ( .True )
    Call  MakeLerp  ( 00000000 00000046 0000001E .Easing:CosInOut )
    Label  0
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:bou1 *Var[0] 00000000 00000000 00000001 )
    Call  UpdateColliderTransform   ( ~Collider:bou1 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  PlaySoundAt   ( 000001F1 00000000 FFFFFE48 0000000A 00000028 )
    Call  ModifyColliderFlags   ( 00000001 ~Collider:o978 7FFFFE00 )
    Wait  20`
    Call  UseSettingsFrom       ( .Cam:Default FFFFFF48 0000000A FFFFFF1B )
    Call  SetPanTarget  ( .Cam:Default FFFFFF48 0000000A FFFFFF1B )
    Call  SetCamDistance        ( .Cam:Default *Fixed[517.4] )
    Call  SetCamPosA    ( .Cam:Default *Fixed[-180.0] *Fixed[-322.0] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[25.0] *Fixed[-6.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Wait  20`
    Call  PlaySoundAt   ( 000001F2 00000000 FFFFFF7E 00000000 FFFFFF29 )
    Call  MakeLerp      ( 00000000 000000B4 0000001E .Easing:CosInOut )
    Label  1
    Call  UpdateLerp ( )
    Call  RotateModel   ( ~Model:o933 *Var[0] 00000001 00000000 00000000 )
    Call  RotateModel   ( ~Model:o818 *Var[0] 00000001 00000000 00000000 )
    Call  RotateModel   ( ~Model:o817 *Var[0] 00000001 00000000 00000000 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Call  PlaySoundAt       ( 00000051 00000000 FFFFFF7E 00000000 FFFFFF29 )
    Call  ShakeCam  ( .Cam:Default 00000000 0000000A *Fixed[1.0] )
    Call  GetModelCenter    ( ~Model:o932 )
    Call  PlayEffect        ( ~FX:Steam:FloatingRings *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  30`
    Set   *Flag_OMO_03  .True
    Call  SetNpcAnimation   ( 00000000 008C0001 )
    Call  ResetCam  ( .Cam:Default *Fixed[90.0] )
    Call  DisablePlayerInput    ( .False )
    Unbind
    Return
    End
}

#new:Script $Script_802414B4
{
    Exec  $Script_80240E10
    Exec  $Script_80240F1C
    Exec  $Script_8024108C
    Call  ParentColliderToModel ( ~Collider:bou1 ~Model:bou1 )
    If  *Flag_OMO_03  ==  .False
        Bind  $Script_80241138 .Trigger:WallPressA ~Collider:o801 00000001 00000000
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o978 7FFFFE00 )
    Else
        Call  RotateModel   ( ~Model:bou1 00000046 00000000 00000000 00000001 )
        Call  UpdateColliderTransform   ( ~Collider:bou1 )
        Call  RotateModel   ( ~Model:o933 000000B4 00000001 00000000 00000000 )
        Call  RotateModel   ( ~Model:o818 000000B4 00000001 00000000 00000000 )
        Call  RotateModel   ( ~Model:o817 000000B4 00000001 00000000 00000000 )
    EndIf
    Return
    End
}

#new:Script $Script_802415E0
{
    Label  0
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  SetCamTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80241648
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Jump )
    Wait  1`
    Exec  $Script_802415E0 *Var[A]
    If  *AreaFlag[004]  ==  .False
        Call  $Function_80240000 ( )
        Thread
            Wait  6`
            Call  GotoMap   ( $ASCII_80248180 00000002 ) % mac_04
            Wait  100`
        EndThread
        Call  SetPlayerJumpscale    ( *Fixed[0.7] )
        Call  PlayerJump    ( ~Vec3d:JumpDest_802416FC 00000014 )
    Else
        Call  SetPlayerJumpscale    ( *Fixed[1.0] )
        Call  PlayerJump    ( ~Vec3d:JumpDest_80241730 00000019 )
        Set   *AreaFlag[004]  .False
    EndIf
    Kill  *Var[A]
    Call  DisablePlayerPhysics  ( .False )
    Call  DisablePlayerInput    ( .False )
    Call  SetPlayerActionState  ( .ActionState:Idle )
    Return
    End
}

#new:Script $Script_802417B0
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Jump )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcFlagBits        ( .Npc:Partner 00000200 .False )
    Call  GetNpcPos ( .Npc:Partner *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000064
    Call  SetNpcPos ( .Npc:Partner *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Exec  $Script_802415E0 *Var[A]
    Thread
        Call  GetCurrentPartnerID   ( *Var[0] )
        Switch  *Var[0]
            Case  ==  .Partner:Parakarry % 4
            Case  ==  .Partner:Lakilester % 8
            Case  ==  .Partner:Bow % 9
            Case  ==  .Partner:Watt % 6
            Default
                Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[0.7] )
                Call  NpcJump0  ( .Npc:Partner FFFFFF6A 00000019 000000FA 00000025 )
                Call  NpcJump0  ( .Npc:Partner FFFFFF92 00000000 000000BE 00000014 )
        EndSwitch
        Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .True )
        Call  EnablePartnerAI ( )
    EndThread
    Call  SetPlayerJumpscale    ( *Fixed[0.7] )
    Call  PlayerJump    ( ~Vec3d:JumpDest_80241960 00000019 )
    Kill  *Var[A]
    Call  DisablePlayerPhysics  ( .False )
    Call  DisablePlayerInput    ( .False )
    Call  SetPlayerActionState  ( .ActionState:Idle )
    Return
    End
}

#new:Script $Script_MakeEntities
{
    Call  MakeEntity    ( .Entity:SavePoint ~Vec4d:Entity802419C8 80000000 )
    Call  MakeEntity    ( .Entity:ScriptSpring ~Vec4d:Entity802419EC 80000000 )
    Call  AssignScript  ( $Script_80241648 )
    Call  MakeEntity    ( .Entity:HiddenPanel ~Vec4d:Entity80241A20 ~Model:o930 80000000 )
    Call  AssignPanelFlag   ( *Flag_OMO_5C )
    Call  MakeEntity    ( .Entity:HiddenYellowBlock ~Vec4d:Entity80241A58 .Item:StoneCap 80000000 )
    Call  AssignBlockFlag   ( *Flag_OMO_13 )
    Return
    End
}

#new:Script $Script_80241AA0
{
    Return
    End
}

#new:NpcSettings $NpcSettings_80241AB0
{
    00000000 00200018 $Script_80241AA0 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

#new:NpcSettings $NpcSettings_80241ADC
{
    00000000 00230018 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630010
}

#new:NpcSettings $NpcSettings_80241B08
{
    00000000 00170016 00000000 00000000 00000000 80077F70 00000000 8007809C
    00000000 00000000 000E0001
}

#new:Script $Script_80241B34
{
    Call  DisablePlayerInput    ( .True )
    If  *StoryProgress  <  FFFFFFFB
        Call  802D6420 ( )
        Call  802D6954 ( )
        If  *Var[0]  ==  00000021
            Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0002 ) % Look, we can't very well ride on a tiny little Toy ...
        Else
            If  *AreaFlag[005]  ==  .False
                Call  SpeakToPlayer ( 00000000 008C0006 008C0002 00000000 000F0000 ) % Welcome to Blue Station! Umm... Unfortunately, I c ...
                Set   *AreaFlag[005]  .True
            Else
                Call  SpeakToPlayer ( 00000000 008C0006 008C0002 00000000 000F0001 ) % Welcome to Blue Station! Umm... Unfortunately, I c ...
                Set   *AreaFlag[005]  .False
            EndIf
        EndIf
    Else
        If  *Flag_OMO_02  ==  .False
            If  *AreaFlag[005]  ==  .False
                Thread
                    Call  SetNpcFlagBits    ( 00000000 00000100 .True )
                    Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
                    Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
                    Loop  00000002
                        Call  NpcJump1  ( 00000000 *Var[0] *Var[1] *Var[2] 0000000F )
                    EndLoop
                    Call  SetNpcFlagBits    ( 00000000 00000100 .False )
                EndThread
                Wait  10`
                If  *MapFlag[01]  ==  .False
                    Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0003 ) % Yaaaahoo!  We're back in business! This train just ...
                    Call  EndSpeech     ( 00000000 FFFFFFFF FFFFFFFF 00000000 )
                Else
                    Call  SpeakToPlayer     ( 00000000 008C0004 008C0001 00000000 000F0003 ) % Yaaaahoo!  We're back in business! This train just ...
                    Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0005 ) % You can use the switches in front of the station t ...
                    Set   *Flag_OMO_02  .True
                EndIf
                Set   *AreaFlag[005]  .True
            Else
                Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0004 ) % You can use the switches in front of the station t ...
                Set   *Flag_OMO_02  .True
            EndIf
        Else
            If  *AreaFlag[006]  ==  .False
                ExecWait  $Script_8024705C
            Else
                ExecWait  $Script_80246108
            EndIf
        EndIf
    EndIf
    Call  DisablePlayerInput    ( .False )
    Unbind
    Return
    End
}

#new:ItemList $ItemList_80241E78
{
    .Item:ToyTrain
    00000000
}

#new:Script $Script_Interact_80241E80
{
    BindLock  $Script_80241B34 00000010 00000000 $ItemList_80241E78 00000000 00000001
    Return
    End
}

#new:Script $Script_Init_80241EB0
{
    If  *StoryProgress  <  FFFFFFFB
        Call  SetNpcAnimation   ( .Npc:Self 008C0002 )
    EndIf
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_80241E80 )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_Interact_80241F00
{
    Switch  *StoryProgress
        Case  <  FFFFFFF8
            Call  SpeakToPlayer ( .Npc:Self 008C0206 008C0202 00000000 000F0017 ) % Usually I work here at Blue Station. But since the ...
        Case  <  FFFFFFF9
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F0018 ) % The Storeroom Key you have in your hand... I'm pos ...
        Case  <  FFFFFFFB
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F0019 ) % You gave the Storeroom Key back to the storekeeper ...
        Case  <  FFFFFFFC
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F001A ) % The train's running again! We can leave anytime!!
        Case  <  FFFFFFFD
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F001B ) % That Frying Pan you have in your hand... I'm posit ...
        Case  <  FFFFFFFE
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F001C ) % Did you know that Shy Guys really like sweets? Cak ...
        Case  <  FFFFFFFF
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F001D ) % You can repair all of the broken rails along our r ...
        Case  <  00000000
            Call  FindKeyItem   ( .Item:MysteryNote *Var[0] )
            If  *Var[0]  ==  FFFFFFFF
                Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F001E ) % You can repair all of the broken rails along our r ...
            Else
                Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F001F ) % That Memo you have is written in Shy Guy language. ...
            EndIf
        Case  <  00000002
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F0020 ) % Oh, thanks a lot for figuring out the secret of th ...
        Case  <  00000004
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F0021 ) % Rumor is that there's a vehicle very similar to th ...
        Default
            Call  SpeakToPlayer ( .Npc:Self 008C0204 008C0201 00000000 000F0022 ) % It seems as though those Shy Guys have learned a l ...
    EndSwitch
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80242158
{
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_80241F00 )
    Return
    End
}

#new:NpcGroup $NpcGroup_8024217C
{
    00000000 $NpcSettings_80241AB0 ~Vec3f:NPC_8024217C % 170 50 -115
    00400D05 $Script_Init_80241EB0 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_8024217C
    ~AnimationTable:NPC_8024217C % .Sprite:TrainStationToad
    00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
}

MISSING: 8024236C to 8024255C (0000236C to 0000255C)
00000001 80241AB0 431E0000 00000000 42AA0000 00400D05 80242158 00000000
00000000 0000005A 80000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00007FFF 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00007FFF 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
008C0201 008C0201 008C0201 008C0201 008C0201 008C0201 008C0201 008C0201
008C0201 008C0201 008C0201 008C0201 008C0201 008C0201 008C0201 008C0201
00000000 00000000 00000000 001A00B8

#new:NpcGroup $NpcGroup_8024255C
{
    00000002 $NpcSettings_80241ADC ~Vec3f:NPC_8024255C % 0 -1000 0
    00000005 00000000 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_8024255C
    ~AnimationTable:NPC_8024255C % .Sprite:WorldParakarry
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_8024255C[1F0]
    00000003 $NpcSettings_80241B08 ~Vec3f:NPC_8024274C % 50 15 160
    00000005 00000000 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_8024274C
    ~AnimationTable:NPC_8024274C % .Sprite:WorldWatt
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_8024255C[3E0]
    00000004 $NpcSettings_80241B08 ~Vec3f:NPC_8024293C % 100 0 160
    00000005 00000000 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_8024293C
    ~AnimationTable:NPC_8024293C % .Sprite:ShyGuy
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_8024255C[5D0]
    00000005 $NpcSettings_80241B08 ~Vec3f:NPC_80242B2C % 115 0 200
    00000005 00000000 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80242B2C
    ~AnimationTable:NPC_80242B2C % .Sprite:ShyGuy
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_8024255C[7C0]
    00000006 $NpcSettings_80241B08 ~Vec3f:NPC_80242D1C % 145 0 150
    00000005 00000000 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80242D1C
    ~AnimationTable:NPC_80242D1C % .Sprite:ShyGuy
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_80242F0C
{
    00000002 $NpcGroup_8024217C 00000000
    00000000 00000000 00000000
}

#new:NpcGroupList $NpcGroupList_80242F24
{
    00000001 $NpcGroup_8024217C 00000000
    00000005 $NpcGroup_8024255C 00000000
    00000000 00000000 00000000
}

PADDING: 80242F48 to 80242F50 (00002F48 to 00002F50)
00000000 00000000

#new:Script $Script_80242F50
{
    NewArray  00000014 *Var[0]
    UseArray  *Var[0]
    SetF  *Array[2]  *Fixed[0.0]
    SetF  *Array[3]  *Fixed[0.0]
    SetF  *Array[7]  *Fixed[0.0]
    SetF  *Array[8]  *Fixed[0.0]
    SetF  *Array[E]  *Fixed[0.0]
    SetF  *Array[F]  *Fixed[0.0]
    SetF  *Array[10]  *Fixed[0.0]
    Set   *AreaFlag[003]  .False
    Label  0
    Switch  *MapVar[0]
        Case  ==  00000000
            UseIntBuffer  *MapVar[1]
            Get3Int  *Var[0] *Var[1] *Var[2]
            SetF  *Array[0]  *Var[0]
            SetF  *Array[1]  *Var[1]
            Call  AddVectorPolar    ( *Array[0] *Array[1] *Fixed[40.0] *Var[2] )
            SetF  *Array[5]  *Var[0]
            SetF  *Array[6]  *Var[1]
            SetF  *Var[3]  *Var[2]
            AddF  *Var[3]  *Fixed[180.0]
            Call  AddVectorPolar    ( *Array[5] *Array[6] *Fixed[40.0] *Var[3] )
            SetF  *Array[B]  *Var[0]
            SetF  *Array[C]  *Var[1]
            SetF  *MapVar[B]  *Array[B]
            SetF  *MapVar[C]  *Array[C]
            SetF  *MapVar[D]  *Var[2]
            SetF  *Array[11]  *Fixed[0.0]
            Label  B
            Get2Int  *Var[2] *Var[3]
            If  *Var[2]  ==  FFFFFFFF
                Goto  C
            EndIf
            Call  GetDist2D ( *Var[4] *Var[0] *Var[1] *Var[2] *Var[3] )
            AddF  *Array[11]  *Var[4]
            SetF  *Var[0]  *Var[2]
            SetF  *Var[1]  *Var[3]
            Goto  B
            Label  C
            SubF  *Array[11]  *Fixed[40.0]
            SetF  *Array[A]  *Fixed[0.0]
            SetF  *Array[D]  *Fixed[0.0]
            Set   *Array[12]  00000000
            If  *MapFlag[00]  ==  .True
                Set   *MapVar[0]  00000001
            EndIf
        Case  ==  00000001
            UseIntBuffer  *MapVar[1]
            Call  $Function_80240188    ( 00000003 00000000 00000000 )
            Get2Int  *Var[0] *Var[1]
            If  *Var[0]  ==  FFFFFFFF
                Set   *MapVar[0]  00000064
                Set   *MapFlag[00]  .False
            Else
                SetF  *Array[2]  *Var[0]
                SetF  *Array[3]  *Var[1]
                Set   *Array[4]  00000001
                SetF  *Array[7]  *Var[0]
                SetF  *Array[8]  *Var[1]
                Set   *Array[9]  00000001
                Set   *MapVar[0]  0000000A
            EndIf
        Case  ==  0000000A
            Switch  *MapVar[2]
                Case  ==  00000000
                    SetF  *Array[A]  *Fixed[10.0]
                Case  ==  00000001
                    Call  $Function_802403A8    ( *Array[12] *Array[A] *Fixed[0.0] *Fixed[10.0] 00000064 00000001 *Fixed[0.0] )
                    Add   *Array[12]  00000001
                Case  ==  00000002
                    Set   *Var[0]  *Array[D]
                    Set   *Var[1]  *Array[11]
                    Call  $Function_802403A8    ( *Var[0] *Array[A] *Fixed[10.0] *Fixed[2.0] *Var[1] 00000000 *Fixed[0.0] )
                Case  ==  00000003
                    Set   *Var[0]  *Array[D]
                    Set   *Var[1]  *Array[11]
                    Div   *Var[1]  00000002
                    Call  $Function_802403A8    ( *Var[0] *Array[A] *Fixed[1.0] *Fixed[10.0] *Var[1] 00000000 *Fixed[0.0] )
            EndSwitch
            Call  GetDist2D ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
            Call  $Function_80240104    ( *Var[0] *Array[A] *Var[2] )
            If  *Var[2]  ==  00000001
                Call  $Function_8024003C    ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
                Call  AddVectorPolar        ( *Array[0] *Array[1] *Array[A] *Var[0] )
            Else
                SetF  *Var[1]  *Array[A]
                SubF  *Var[1]  *Var[0]
                SetF  *Array[0]  *Array[2]
                SetF  *Array[1]  *Array[3]
                UseIntBuffer  *MapVar[1]
                Call  $Function_80240188    ( 00000003 00000002 *Array[4] )
                Get2Int  *Array[2] *Array[3]
                Add   *Array[4]  00000001
                If  *Array[2]  ==  FFFFFFFF
                    Set   *MapVar[0]  00000064
                    Set   *MapFlag[00]  .False
                    Set   *Flag[01]  .True
                Else
                    Call  $Function_8024003C    ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
                    Call  AddVectorPolar        ( *Array[0] *Array[1] *Var[1] *Var[0] )
                EndIf
            EndIf
            Call  GetDist2D ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
            Call  $Function_80240104    ( *Var[0] *Array[A] *Var[2] )
            If  *Var[2]  ==  00000001
                Call  $Function_8024003C    ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
                Call  AddVectorPolar        ( *Array[5] *Array[6] *Array[A] *Var[0] )
            Else
                SetF  *Var[1]  *Array[A]
                SubF  *Var[1]  *Var[0]
                SetF  *Array[5]  *Array[7]
                SetF  *Array[6]  *Array[8]
                UseIntBuffer  *MapVar[1]
                Call  $Function_80240188    ( 00000003 00000002 *Array[9] )
                Get2Int  *Array[7] *Array[8]
                Add   *Array[9]  00000001
                If  *Array[7]  ==  FFFFFFFF
                    Set   *MapVar[0]  00000064
                    Set   *MapFlag[00]  .False
                    Set   *Flag[01]  .False
                Else
                    Call  $Function_8024003C    ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
                    Call  AddVectorPolar        ( *Array[5] *Array[6] *Var[1] *Var[0] )
                EndIf
            EndIf
            If  *MapVar[0]  ==  00000064
                If  *Flag[01]  ==  .True
                    Call  $Function_8024003C    ( *Var[0] *Array[0] *Array[1] *Array[5] *Array[6] )
                    SetF  *Array[5]  *Array[0]
                    SetF  *Array[6]  *Array[1]
                    Call  AddVectorPolar        ( *Array[5] *Array[6] *Fixed[80.0] *Var[0] )
                Else
                    Call  $Function_8024003C    ( *Var[0] *Array[5] *Array[6] *Array[0] *Array[1] )
                    SetF  *Array[0]  *Array[5]
                    SetF  *Array[1]  *Array[6]
                    Call  AddVectorPolar        ( *Array[0] *Array[1] *Fixed[80.0] *Var[0] )
                EndIf
            EndIf
            SetF  *Var[0]  *Array[0]
            SetF  *Var[1]  *Array[1]
            AddF  *Var[0]  *Array[5]
            AddF  *Var[1]  *Array[6]
            DivF  *Var[0]  *Fixed[2.0]
            DivF  *Var[1]  *Fixed[2.0]
            Call  $Function_8024003C    ( *Var[2] *Array[5] *Array[6] *Array[0] *Array[1] )
            SetF  *MapVar[B]  *Var[0]
            SetF  *MapVar[C]  *Var[1]
            SetF  *MapVar[D]  *Var[2]
            Call  GetDist2D ( *Var[3] *Var[0] *Var[1] *Array[B] *Array[C] )
            AddF  *Array[D]  *Var[3]
            SetF  *Array[E]  *Array[D]
            MulF  *Array[E]  *Fixed[1.4326172]
            If  *Flag[00]  ==  .False
                SetF  *Var[0]  *Array[A]
                If  *Var[0]  <  00000001
                    SetF  *Var[0]  *Fixed[1.0]
                EndIf
                DivF  *Var[0]  *Fixed[3.0]
                SubF  *Array[F]  *Var[0]
                If  *Array[F]  <  FFFFFFF6
                    SetF  *Array[F]  *Fixed[-10.0]
                    Set   *Flag[00]  .True
                    If  *AreaFlag[003]  ==  .False
                        Call  PlaySound ( 000001FF )
                    Else
                        Call  PlaySound ( 00000084 )
                    EndIf
                EndIf
            Else
                SetF  *Var[0]  *Array[A]
                If  *Var[0]  <  00000001
                    SetF  *Var[0]  *Fixed[1.0]
                EndIf
                DivF  *Var[0]  *Fixed[3.0]
                AddF  *Array[F]  *Var[0]
                If  *Array[F]  >  0000000A
                    SetF  *Array[F]  *Fixed[10.0]
                    Set   *Flag[00]  .False
                    If  *AreaFlag[003]  ==  .False
                        Call  PlaySound ( 000001FE )
                        Set   *AreaFlag[003]  .True
                    Else
                        Call  PlaySound ( 000001FE )
                        Set   *AreaFlag[003]  .False
                    EndIf
                EndIf
            EndIf
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
            Call  $Function_8024020C    ( *Var[0] 00000032 *Var[1] *MapVar[D] )
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            AddF  *Var[2]  *Fixed[180.0]
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
            Call  $Function_802402B0    ( FFFFFFFC *Var[0] 00000032 *Var[1] *MapVar[D] )
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            If  *Var[2]  <  000000B4
                AddF  *Var[2]  *Fixed[90.0]
            Else
                SubF  *Var[2]  *Fixed[90.0]
            EndIf
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
            Call  $Function_802402B0    ( 00000000 *Var[0] 00000032 *Var[1] *MapVar[D] )
        Case  ==  00000064
    EndSwitch
    Call  TranslateGroup    ( ~Model:p2 *Fixed[79.1] *Fixed[-27.93] *Fixed[-29.53] )
    Call  TranslateGroup    ( ~Model:p3 *Fixed[-35.1] *Fixed[-27.93] *Fixed[-29.53] )
    Call  RotateGroup       ( ~Model:p2 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  RotateGroup       ( ~Model:p3 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  TranslateGroup    ( ~Model:p5 *Fixed[40.5] *Fixed[-20.0] *Fixed[-0.4] )
    Call  TranslateGroup    ( ~Model:p6 *Fixed[-39.5] *Fixed[-20.0] *Fixed[-0.4] )
    Call  TranslateGroup    ( ~Model:popo *MapVar[B] *Fixed[10.0] *MapVar[C] )
    If  *MapVar[D]  <  000000B4
        SetF  *Var[1]  *MapVar[D]
        SubF  *Var[1]  *Fixed[90.0]
        Call  RotateGroup   ( ~Model:popo *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
    Else
        SetF  *Var[1]  *MapVar[D]
        SubF  *Var[1]  *Fixed[180.0]
        SubF  *Var[1]  *Fixed[90.0]
        Call  RotateGroup   ( ~Model:popo *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
    EndIf
    Call  RotateGroup       ( ~Model:p2 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  RotateGroup       ( ~Model:p3 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  TranslateGroup    ( ~Model:p2 *Fixed[-79.1] *Fixed[27.93] *Fixed[29.53] )
    Call  TranslateGroup    ( ~Model:p3 *Fixed[35.1] *Fixed[27.93] *Fixed[29.53] )
    Call  TranslateGroup    ( ~Model:p5 *Fixed[-40.5] *Fixed[20.0] *Fixed[0.4] )
    Call  TranslateGroup    ( ~Model:p6 *Fixed[39.5] *Fixed[20.0] *Fixed[0.4] )
    If  *MapVar[D]  <  000000B4
        Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
        Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
    Else
        Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
        Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    EndIf
    Call  TranslateGroup    ( ~Model:p2 *Fixed[0.0] *Array[F] *Fixed[0.0] )
    SetF  *Var[0]  *Array[F]
    MulF  *Var[0]  *Fixed[-1.0]
    Call  TranslateGroup    ( ~Model:p3 *Fixed[0.0] *Var[0] *Fixed[0.0] )
    SetF  *Var[0]  *Array[A]
    If  *Var[0]  <  00000001
        SetF  *Var[0]  *Fixed[1.0]
    EndIf
    AddF  *Array[10]  *Var[0]
    If  *Array[10]  >  00000168
        SubF  *Array[10]  *Fixed[360.0]
    EndIf
    Call  RotateGroup   ( ~Model:p4 *Array[10] *Fixed[0.0] *Fixed[1.0] *Fixed[0.0] )
    SetF  *Array[B]  *MapVar[B]
    SetF  *Array[C]  *MapVar[C]
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80244118
{
    Label  0
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  SetCamTarget  ( .Cam:Default *Var[0] 00000000 *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80244180
{
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  MakeLerp      ( 00000000 *Var[1] 0000002D .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  GetPlayerPos  ( *Var[2] *Var[3] *Var[4] )
        Call  SetCamTarget  ( .Cam:Default *Var[2] *Var[0] *Var[4] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Return
    End
}

#new:Script $Script_80244244
{
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  MakeLerp      ( *Var[1] 00000000 00000028 .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  GetPlayerPos  ( *Var[2] *Var[3] *Var[4] )
        Call  SetCamTarget  ( .Cam:Default *Var[2] *Var[0] *Var[4] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Loop
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Call  SetCamTarget  ( .Cam:Default *Var[0] 00000000 *Var[2] )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8024435C
{
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    Thread
        UseIntBuffer  *Var[0]
        Get3Int  *Var[1] *Var[2] *Var[3]
        Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed    ( *Fixed[4.0] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerSpeed    ( *Fixed[0.7] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerPos      ( *Var[1] 00000032 *Var[2] )
        Call  SetPlayerAnimation    ( 00010002 )
        Call  InterpPlayerYaw   ( *Var[3] 00000000 )
    EndThread
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    AddF  *Var[3]  *Fixed[180.0]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
    Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[0.7] )
    Call  NpcJump0  ( .Npc:Partner *Var[1] 00000032 *Var[2] 0000000A )
    Call  SetNpcSpeed       ( .Npc:Partner *Fixed[0.5] )
    Call  NpcMoveTo ( .Npc:Partner *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  InterpNpcYaw      ( .Npc:Partner *Var[A] 00000000 )
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    If  *Var[3]  <  000000B4
        AddF  *Var[3]  *Fixed[90.0]
    Else
        SubF  *Var[3]  *Fixed[90.0]
    EndIf
    SetF  *Var[4]  *Var[1]
    SetF  *Var[5]  *Var[2]
    SetF  *Var[6]  *Var[3]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[100.0] *Var[3] )
    Call  SetNpcSpeed   ( 00000000 *Fixed[3.0] )
    Call  SetNpcAnimation   ( 00000000 008C0003 )
    Call  NpcMoveTo     ( 00000000 *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( 00000000 008C0001 )
    Call  AddVectorPolar    ( *Var[4] *Var[5] *Fixed[20.0] *Var[6] )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[0.7] )
    Call  NpcJump0      ( 00000000 *Var[4] 00000032 *Var[5] 0000000A )
    Call  InterpNpcYaw  ( 00000000 *Var[A] 00000000 )
    Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000005 000F0009 ) % We're leaving! All aboard!
    Call  PlaySound     ( 00000083 )
    Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
    Wait  10`
    Return
    End
}

#new:Script $Script_8024475C
{
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    Set   *AreaFlag[006]  .False
    Call  GetPlayerPos      ( *Var[1] *Var[2] *Var[3] )
    If  *Var[2]  <  00000032
        UseIntBuffer  *Var[9]
        Get4Int  *Var[3] *Var[4] *Var[5] *Var[6]
        Call  SetPlayerSpeed    ( *Fixed[2.5] )
        Call  PlayerMoveTo      ( *Var[3] *Var[4] 00000000 )
        Call  SetPlayerJumpscale    ( *Fixed[1.0] )
        Call  PlayerJump        ( *Var[5] 00000032 *Var[6] 0000000F )
    EndIf
    Thread
        UseIntBuffer  *Var[0]
        Get3Int  *Var[1] *Var[2] *Var[3]
        Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed    ( *Fixed[4.0] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerSpeed    ( *Fixed[0.7] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerPos      ( *Var[1] 00000032 *Var[2] )
        Call  SetPlayerAnimation    ( 00010002 )
        Call  InterpPlayerYaw   ( *Var[3] 00000000 )
    EndThread
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    AddF  *Var[3]  *Fixed[180.0]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
    Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[0.7] )
    Call  NpcJump0      ( .Npc:Partner *Var[1] 00000032 *Var[2] 0000000A )
    Call  SetNpcSpeed   ( .Npc:Partner *Fixed[0.1] )
    Call  NpcMoveTo     ( .Npc:Partner *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  InterpNpcYaw  ( .Npc:Partner *Var[A] 00000000 )
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    AddF  *Var[3]  *Fixed[90.0]
    SetF  *Var[4]  *Var[1]
    SetF  *Var[5]  *Var[2]
    SetF  *Var[6]  *Var[3]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[60.0] *Var[3] )
    Call  SetNpcSpeed   ( 00000000 *Fixed[3.0] )
    Call  SetNpcAnimation   ( 00000000 008C0003 )
    Call  NpcMoveTo     ( 00000000 *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( 00000000 008C0001 )
    Call  AddVectorPolar    ( *Var[4] *Var[5] *Fixed[20.0] *Var[6] )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[0.7] )
    Call  NpcJump0      ( 00000000 *Var[4] 00000032 *Var[5] 0000000A )
    Call  InterpNpcYaw  ( 00000000 *Var[A] 00000000 )
    Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000005 000F0009 ) % We're leaving! All aboard!
    Call  PlaySound     ( 00000083 )
    Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
    Wait  10`
    Return
    End
}

#new:Script $Script_80244BE4
{
    Call  StopSound ( 00000083 )
    Call  SetMusicTrack     ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    SetF  *Var[0]  *MapVar[B]
    SetF  *Var[1]  *MapVar[C]
    SetF  *Var[2]  *MapVar[D]
    If  *Var[2]  <  000000B4
        AddF  *Var[2]  *Fixed[90.0]
    Else
        SubF  *Var[2]  *Fixed[90.0]
    EndIf
    Call  AddVectorPolar    ( *Var[0] *Var[1] *Fixed[100.0] *Var[2] )
    Thread
        Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
        Call  NpcJump0  ( 00000000 *Var[0] 00000032 *Var[1] 0000000A )
        Call  SetNpcAnimation   ( 00000000 008C0003 )
        Call  SetNpcSpeed       ( 00000000 *Fixed[2.0] )
        UseIntBuffer  *Var[9]
        Get2Int  *Var[3] *Var[4]
        Call  NpcMoveTo ( 00000000 *Var[3] *Var[4] 00000000 )
        Call  SetNpcAnimation   ( 00000000 008C0001 )
        Call  InterpNpcYaw      ( 00000000 0000010E 0000000F )
        Call  SetNpcFlagBits    ( 00000000 00000140 .False )
    EndThread
    Wait  10`
    Thread
        AddF  *Var[2]  *Fixed[60.0]
        Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed        ( *Fixed[3.0] )
        Call  PlayerMoveTo  ( *Var[0] *Var[1] 00000000 )
        Call  SetPlayerAnimation    ( 00010002 )
    EndThread
    Wait  10`
    Sub   *Var[1]  0000001E
    Call  SetNpcAnimation   ( .Npc:Partner 00000102 )
    Call  SetNpcSpeed       ( .Npc:Partner *Fixed[2.5] )
    Call  NpcMoveTo ( .Npc:Partner *Var[0] *Var[1] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .False )
    Return
    End
}

#new:Script $Script_80244EE0
{
    Call  StopSound ( 00000083 )
    Call  SetMusicTrack     ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    Set   *AreaFlag[006]  .True
    SetF  *Var[0]  *MapVar[B]
    SetF  *Var[1]  *MapVar[C]
    SetF  *Var[2]  *MapVar[D]
    Thread
        Call  SetNpcAnimation   ( 00000000 008C0003 )
        Call  SetNpcSpeed       ( 00000000 *Fixed[3.5] )
        UseIntBuffer  *Var[9]
        Get2Int  *Var[3] *Var[4]
        Call  NpcMoveTo ( 00000000 *Var[3] *Var[4] 00000000 )
        Call  SetNpcAnimation   ( 00000000 008C0002 )
        Call  InterpNpcYaw      ( 00000000 0000005A 00000000 )
        Call  SetNpcFlagBits    ( 00000000 00000140 .False )
    EndThread
    Wait  10`
    Thread
        AddF  *Var[2]  *Fixed[85.0]
        Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[80.0] *Var[2] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed        ( *Fixed[3.0] )
        Call  PlayerMoveTo  ( *Var[0] *Var[1] 00000000 )
        Call  SetPlayerAnimation    ( 00010002 )
    EndThread
    Wait  10`
    AddF  *Var[2]  *Fixed[50.0]
    Call  AddVectorPolar    ( *Var[0] *Var[1] *Fixed[85.0] *Var[2] )
    Call  SetNpcAnimation   ( .Npc:Partner 00000102 )
    Call  SetNpcSpeed       ( .Npc:Partner *Fixed[2.5] )
    Call  NpcMoveTo ( .Npc:Partner *Var[0] *Var[1] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .False )
    Return
    End
}

#new:Script $Script_80245178
{
    Switch  *AreaByte[6]
        Case  ==  00000000
            Call  GotoMapSpecial    ( $ASCII_802481A0 00000003 00000001 ) % omo_03
        Case  ==  00000001
            Call  GotoMapSpecial    ( $ASCII_80248198 00000003 00000001 ) % omo_06
        Case  ==  00000002
            Call  GotoMapSpecial    ( $ASCII_80248190 00000002 00000001 ) % omo_08
        Case  ==  00000003
            Call  GotoMapSpecial    ( $ASCII_80248188 00000003 00000001 ) % omo_10
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script $Script_80245238
{
    Switch  *AreaByte[5]
        Case  00000000  to  00000001
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_802481A0 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    Call  GotoMapSpecial    ( $ASCII_80248198 00000002 00000001 ) % omo_06
                Case  ==  00000002
                    Call  GotoMapSpecial    ( $ASCII_80248190 00000001 00000001 ) % omo_08
                Case  ==  00000003
                    Call  GotoMapSpecial    ( $ASCII_80248188 00000002 00000001 ) % omo_10
            EndSwitch
        Case  ==  00000002
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_802481A0 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80248198 00000002 00000001 ) % omo_06
                    Else
                        Call  GotoMapSpecial    ( $ASCII_802481A0 00000002 00000001 ) % omo_03
                    EndIf
                Case  ==  00000003
                    Call  GotoMapSpecial    ( $ASCII_80248188 00000002 00000001 ) % omo_10
            EndSwitch
        Case  ==  00000003
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_802481A0 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80248198 00000002 00000001 ) % omo_06
                    Else
                        Call  GotoMapSpecial    ( $ASCII_802481A0 00000002 00000001 ) % omo_03
                    EndIf
                Case  ==  00000002
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80248190 00000001 00000001 ) % omo_08
                    Else
                        Call  GotoMapSpecial    ( $ASCII_802481A0 00000002 00000001 ) % omo_03
                    EndIf
            EndSwitch
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script $Script_802454DC
{
    Label  A
    Wait  1`
    Call  $Function_80240538 ( )
    If  *Var[0]  !=  00000001
        Goto  A
    EndIf
    If  *AreaFlag[002]  ==  .False
        ExecWait  $Script_80245178
    Else
        ExecWait  $Script_80245238
    EndIf
    Return
    End
}

#new:Script $Script_8024556C
{
    Call  SetTexPanner      ( ~Model:y_a 00000002 )
    Call  EnableTexPanning  ( ~Model:y_a .True )
    Set   *MapVar[9]  00008000
    Thread
        Loop
            Call  SetTexPanOffset   ( 00000002 00000000 *MapVar[9] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Set   *Var[5]  00000000
    Label  0
    Add   *Var[5]  00000002
    If  *Var[5]  >  00000168
        Sub   *Var[5]  00000168
    EndIf
    Call  RotateModel   ( ~Model:y_a *Var[5] 00000000 00000000 FFFFFFFF )
    Wait  1`
    If  *MapFlag[01]  ==  .True
        Goto  A
    EndIf
    Goto  0
    Label  A
    If  *AreaFlag[002]  ==  .False
        Set   *Var[2]  0000010E
        Call  EnableTexPanning  ( ~Model:y_c2 .False )
        Call  EnableTexPanning  ( ~Model:y_b2 .True )
    Else
        Set   *Var[2]  0000005A
        Call  EnableTexPanning  ( ~Model:y_b2 .False )
        Call  EnableTexPanning  ( ~Model:y_c2 .True )
    EndIf
    If  *Var[2]  <  *Var[5]
        Add   *Var[2]  00000168
    EndIf
    Set   *Var[6]  *AreaFlag[002]
    Call  MakeLerp  ( *Var[5] *Var[2] 0000003C .Easing:CosFastOvershoot )
    Call  UpdateLerp ( )
    Set   *Var[4]  FFFFFFFF
    Label  B
    Call  UpdateLerp ( )
    If  *Var[2]  <  *Var[0]
        Set   *Var[3]  00000000
    Else
        Set   *Var[3]  00000001
    EndIf
    If  *Var[4]  !=  FFFFFFFF
        If  *Var[3]  !=  *Var[4]
            Call  PlaySound ( 000001F9 )
        EndIf
    EndIf
    Set   *Var[4]  *Var[3]
    Call  RotateModel   ( ~Model:y_a *Var[0] 00000000 00000000 FFFFFFFF )
    Wait  1`
    If  *AreaFlag[002]  !=  *Var[6]
        Goto  15
    EndIf
    If  *Var[1]  ==  00000001
        Goto  B
    EndIf
    Call  PlaySound ( 000001FA )
    If  *AreaFlag[002]  ==  .False
        Set   *MapVar[9]  00004000
    Else
        Set   *MapVar[9]  0000C000
    EndIf
    Label  14
    Wait  1`
    If  *AreaFlag[002]  ==  *Var[6]
        Goto  14
    EndIf
    Label  15
    Set   *Var[5]  *Var[0]
    Goto  A
    Return
    End
}

#new:Script $Script_8024598C
{
    Call  GetCurrentPartner ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  GetCurrentPartnerID   ( *Var[0] )
        If  *Var[0]  ==  .Partner:Parakarry % 4
            Return
        EndIf
    EndIf
    If  *MapFlag[01]  ==  .True
        If  *AreaFlag[002]  ==  .False
            Return
        EndIf
    EndIf
    Set   *MapFlag[01]  .True
    Set   *AreaFlag[002]  .False
    Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_b1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_b2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o920 )
    Call  UpdateColliderTransform   ( ~Collider:o921 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_b1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_b2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o920 )
    Call  UpdateColliderTransform   ( ~Collider:o921 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_80245BC4
{
    Call  GetCurrentPartner ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  GetCurrentPartnerID   ( *Var[0] )
        If  *Var[0]  ==  .Partner:Parakarry % 4
            Return
        EndIf
    EndIf
    If  *MapFlag[01]  ==  .True
        If  *AreaFlag[002]  ==  .True
            Return
        EndIf
    EndIf
    Set   *MapFlag[01]  .True
    Set   *AreaFlag[002]  .True
    Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_c1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_c2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o923 )
    Call  UpdateColliderTransform   ( ~Collider:o924 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_c1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_c2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o923 )
    Call  UpdateColliderTransform   ( ~Collider:o924 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_UpdateTexturePan_80245DFC
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_8024057C ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_802406A0 ( )
    Return
    End
}

#new:Script $Script_80245E98
{
    Set   *MapFlag[01]  .False
    Set   *MapFlag[0A]  .False
    Exec  $Script_8024556C
    Call  ParentColliderToModel ( ~Collider:o920 ~Model:y_b1 )
    Call  ParentColliderToModel ( ~Collider:o921 ~Model:y_b2 )
    Call  ParentColliderToModel ( ~Collider:o923 ~Model:y_c1 )
    Call  ParentColliderToModel ( ~Collider:o924 ~Model:y_c2 )
    Bind  $Script_8024598C .Trigger:FloorTouch ~Collider:o920 00000001 00000000
    Bind  $Script_8024598C .Trigger:WallHammer ~Collider:o921 00000001 00000000
    Bind  $Script_80245BC4 .Trigger:FloorTouch ~Collider:o923 00000001 00000000
    Bind  $Script_80245BC4 .Trigger:WallHammer ~Collider:o924 00000001 00000000
    Thread
        Set   *Var[0]  00000001
        Set   *Var[1]  FFFFFBB4
        Set   *Var[2]  00000000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000000
        Set   *Var[5]  00000001
        Set   *Var[6]  00000001
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_80245DFC
    EndThread
    Return
    End
}

#new:Unknown $???_80246080
{
    000000AA FFFFFF8D
}

#new:Unknown $???_80246088
{
    FFFFFE81 FFFFFF10
}

#new:Unknown $???_80246090
{
    FFFFFE98 FFFFFF3D FFFFFEB1 FFFFFF29
}

#new:Unknown $???_802460A0
{
    F245CEC8 F245F806 F24CAA80 F2466080 F246A528 F24A7A80 F247BE80 F24D2210
    F247088B FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_802460D0
{
    F245CEC8 F245F806 F24CAA80 F2466080 F246A528 F24A7A80 F247BE80 F24E9480
    F246A528 F251F729 F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80246108
{
    If  *Flag_OMO_03  ==  .False
        Call  DisablePlayerInput    ( .True )
        Call  SpeakToPlayer ( 00000000 008C0006 008C0002 00000000 000F0014 ) % Do you think pulling that lever will fix the track ...
        Call  DisablePlayerInput    ( .False )
        Return
    Else
        Call  DisablePlayerInput    ( .True )
        Call  DisablePlayerPhysics  ( .True )
        Call  DisablePartnerAI      ( 00000000 )
        Thread
            Call  SetNpcFlagBits    ( 00000000 00000100 .True )
            Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
            Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
            Loop  00000002
                Call  NpcJump1  ( 00000000 *Var[0] *Var[1] *Var[2] 0000000F )
            EndLoop
            Call  SetNpcFlagBits    ( 00000000 00000100 .False )
        EndThread
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0015 ) % Well, I'll be! Just as I suspected! We should have ...
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o939 7FFFFE00 )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o941 7FFFFE00 )
        Exec  $Script_80244244 *Var[B]
        Set   *Var[0]  $???_802460A0
        Set   *Var[9]  $???_80246090
        ExecWait  $Script_8024475C
        If  *AreaByte[6]  ==  00000000
            Set   *MapVar[0]  00000000
            Set   *MapVar[1]  $???_802460A0
            Set   *MapVar[2]  00000003
            Set   *MapFlag[00]  .True
            Label  14
            If  *MapFlag[00]  ==  .True
                Wait  1`
                Goto  14
            EndIf
            Wait  20`
            Kill  *Var[B]
            Exec  $Script_80244180
            Call  $Function_80240020 ( )
            Set   *Var[9]  $???_80246080
            ExecWait  $Script_80244BE4
            Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F000E ) % Station stop: Blue Station! Welcome to Blue Statio ...
            Call  ModifyColliderFlags   ( 00000001 ~Collider:o939 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000001 ~Collider:o941 7FFFFE00 )
            Call  DisablePlayerPhysics  ( .False )
            Call  EnablePartnerAI ( )
            Call  DisablePlayerInput    ( .False )
        Else
            Set   *MapVar[0]  00000000
            Set   *MapVar[1]  $???_802460D0
            Set   *MapVar[2]  00000001
            Set   *MapFlag[00]  .True
            Wait  1`
            Exec  $Script_802454DC
            Label  1E
            If  *MapVar[B]  <  0000015E
                Wait  1`
                Goto  1E
            EndIf
            Call  GotoMap   ( $ASCII_802481A8 00000000 ) % omo_16
            Set   *ToyTrain_Destination  00000000
            Wait  100`
        EndIf
    EndIf
    Unbind
    Return
    End
}

#new:Unknown $???_80246510
{
    F24C8781 F24731D4 F24BA67D F24E9480 F246A528 F251F729 F2429C51 FFFFFFFF
    FFFFFFFF FFFFFFFF
}

#new:Script $Script_80246538
{
    Call  FadeOutMusic  ( 00000000 00000BB8 )
    Call  DisablePlayerInput    ( .True )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
    Wait  10`
    Call  DisablePlayerPhysics  ( .True )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o939 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o941 7FFFFE00 )
    Exec  $Script_80244244
    Set   *AreaByte[5]  00000000
    Set   *Var[0]  $???_80246510
    ExecWait  $Script_8024435C
    Set   *MapVar[0]  00000000
    Set   *MapVar[1]  $???_80246510
    Set   *MapVar[2]  00000001
    Set   *MapFlag[00]  .True
    Label  A
    If  *MapVar[B]  <  0000015E
        Wait  1`
        Goto  A
    EndIf
    Call  GotoMap   ( $ASCII_802481A8 00000000 ) % omo_16
    Set   *ToyTrain_Destination  00000000
    Wait  100`
    Return
    End
}

#new:Unknown $???_802466C0
{
    F24C8781 F24731D4 F24E767D F24A7A80 F247BE80 F2466080 F246A528 F244F4D4
    F244F3C0 F242FDD8 F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_802466F8
{
    Call  FadeOutMusic  ( 00000000 00000BB8 )
    Call  DisablePlayerInput    ( .True )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
    Wait  10`
    Call  DisablePlayerPhysics  ( .True )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o939 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o941 7FFFFE00 )
    Exec  $Script_80244244
    Set   *AreaByte[5]  00000000
    Set   *Var[0]  $???_802466C0
    ExecWait  $Script_8024435C
    Set   *MapVar[0]  00000000
    Set   *MapVar[1]  $???_802466C0
    Set   *MapVar[2]  00000001
    Set   *MapFlag[00]  .True
    Label  A
    If  *MapVar[B]  >  FFFFFEA2
        Wait  1`
        Goto  A
    EndIf
    Call  GotoMap   ( $ASCII_802481A8 00000001 ) % omo_16
    Set   *ToyTrain_Destination  00000003
    Wait  100`
    Return
    End
}

#new:Unknown $???_80246880
{
    F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24BECF1
    F2475C8B FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_802468B0
{
    F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24A7A80
    F247BE80 F2466080 F246A528 F244F4D4 F244F3C0 F242FDD8 F2429C51 FFFFFFFF
    FFFFFFFF FFFFFFFF
}

#new:Script $Script_802468F8
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  DisablePartnerAI      ( 00000000 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o939 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o941 7FFFFE00 )
    If  *AreaByte[6]  ==  00000000
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80246880
        Set   *MapVar[2]  00000002
        Exec  $Script_80242F50
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80244118 *Var[B]
        Label  A
        If  *MapFlag[00]  ==  .True
            Wait  1`
            Goto  A
        EndIf
        Wait  20`
        Kill  *Var[B]
        Exec  $Script_80244180
        Call  $Function_80240020 ( )
        Set   *Var[9]  $???_80246080
        ExecWait  $Script_80244BE4
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F000E ) % Station stop: Blue Station! Welcome to Blue Statio ...
        Call  ModifyColliderFlags   ( 00000001 ~Collider:o939 7FFFFE00 )
        Call  ModifyColliderFlags   ( 00000001 ~Collider:o941 7FFFFE00 )
        Call  DisablePlayerPhysics  ( .False )
        Call  EnablePartnerAI ( )
        Call  DisablePlayerInput    ( .False )
    Else
        Exec  $Script_80244118
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_802468B0
        Set   *MapVar[2]  00000000
        Exec  $Script_80242F50
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_802454DC
        Label  14
        If  *MapVar[B]  >  FFFFFEA2
            Wait  1`
            Goto  14
        EndIf
        Call  GotoMap   ( $ASCII_802481A8 00000001 ) % omo_16
        Set   *ToyTrain_Destination  00000003
        Wait  100`
    EndIf
    Return
    End
}

#new:Unknown $???_80246BE0
{
    F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F24A7A80
    F247BE80 F24D2210 F247088B FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80246C18
{
    F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2463580 F24672B4 FFFFFFFF
    FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80246C40
{
    F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F24A7A80
    F247BE80 F24E9480 F246A528 F251F729 F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80246C80
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcFlagBits        ( .Npc:Partner 00000200 .False )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o939 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o941 7FFFFE00 )
    If  *Flag_OMO_03  ==  .False
        Set   *MapVar[1]  $???_80246C18
    Else
        If  *AreaByte[6]  ==  00000000
            Set   *MapVar[1]  $???_80246BE0
        Else
            Goto  F
        EndIf
    EndIf
    Set   *MapVar[0]  00000000
    Set   *MapVar[2]  00000002
    Exec  $Script_80242F50
    Set   *MapFlag[00]  .True
    Wait  1`
    Exec  $Script_80244118 *Var[B]
    Label  A
    If  *MapFlag[00]  ==  .True
        Wait  1`
        Goto  A
    EndIf
    Wait  20`
    Kill  *Var[B]
    Exec  $Script_80244180
    Call  $Function_80240020 ( )
    If  *Flag_OMO_03  ==  .True
        Set   *Var[9]  $???_80246080
        ExecWait  $Script_80244BE4
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F000E ) % Station stop: Blue Station! Welcome to Blue Statio ...
    Else
        Set   *Var[9]  $???_80246088
        ExecWait  $Script_80244EE0
        Call  SpeakToPlayer ( 00000000 008C0006 008C0002 00000000 000F0013 ) % I think our little track problem will be fixed if  ...
    EndIf
    Call  ModifyColliderFlags   ( 00000001 ~Collider:o939 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000001 ~Collider:o941 7FFFFE00 )
    Call  SetNpcFlagBits        ( .Npc:Partner 00000200 .True )
    Call  DisablePlayerPhysics  ( .False )
    Call  EnablePartnerAI ( )
    Call  DisablePlayerInput    ( .False )
    Return
    Label  F
    Exec  $Script_80244118
    Set   *MapVar[0]  00000000
    Set   *MapVar[1]  $???_80246C40
    Set   *MapVar[2]  00000000
    Exec  $Script_80242F50
    Set   *MapFlag[00]  .True
    Wait  1`
    Exec  $Script_802454DC
    Label  14
    If  *MapVar[B]  <  0000015E
        Wait  1`
        Goto  14
    EndIf
    Call  GotoMap   ( $ASCII_802481A8 00000000 ) % omo_16
    Set   *ToyTrain_Destination  00000000
    Wait  100`
    Return
    End
}

#new:IntTable $IntTable_80247044
{
    00000003 00000002 00000001
}

#new:IntTable $IntTable_80247050
{
    00000001 00000002 00000003
}

#new:Script $Script_8024705C
{
    If  *MapFlag[01]  ==  .False
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0006 ) % Which way are you heading? Press one of those swit ...
    Else
        If  *AreaFlag[002]  ==  .False
            If  *Flag_OMO_03  ==  .False
                Call  SpeakToPlayer ( 00000000 008C0006 008C0002 00000005 000F0012 ) % Oh, there's a track problem! We can't go that dire ...
            Else
                Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
                Call  ShowChoice    ( 001E003A ) % Red Station Green Station Pink Station Don't get o ...
                If  *Var[0]  !=  00000003
                    Call  CloseMessage ( )
                    UseIntBuffer  $IntTable_80247044
                    Add   *Var[0]  00000001
                    Loop  *Var[0]
                        Get1Int  *Var[1]
                    EndLoop
                    Set   *AreaByte[6]  *Var[1]
                    ExecWait  $Script_802466F8
                Else
                    Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
                EndIf
            EndIf
        Else
            Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
            Switch  *StoryProgress
                Case  <  FFFFFFFF
                    Call  ShowChoice    ( 001E0037 ) % Pink Station Don't get on
                    If  *Var[0]  !=  00000001
                        Call  CloseMessage ( )
                        UseIntBuffer  $IntTable_80247050
                        Add   *Var[0]  00000001
                        Loop  *Var[0]
                            Get1Int  *Var[1]
                        EndLoop
                        Set   *AreaByte[6]  *Var[1]
                        ExecWait  $Script_80246538
                    Else
                        Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
                    EndIf
                Case  <  00000000
                    Call  ShowChoice    ( 001E0038 ) % Pink Station Green Station Don't get on
                    If  *Var[0]  !=  00000002
                        Call  CloseMessage ( )
                        UseIntBuffer  $IntTable_80247050
                        Add   *Var[0]  00000001
                        Loop  *Var[0]
                            Get1Int  *Var[1]
                        EndLoop
                        Set   *AreaByte[6]  *Var[1]
                        ExecWait  $Script_80246538
                    Else
                        Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
                    EndIf
                Case  >=  00000000
                    Call  ShowChoice    ( 001E0039 ) % Pink Station Green Station Red Station Don't get o ...
                    If  *Var[0]  !=  00000003
                        Call  CloseMessage ( )
                        UseIntBuffer  $IntTable_80247050
                        Add   *Var[0]  00000001
                        Loop  *Var[0]
                            Get1Int  *Var[1]
                        EndLoop
                        Set   *AreaByte[6]  *Var[1]
                        ExecWait  $Script_80246538
                    Else
                        Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
                    EndIf
            EndSwitch
        EndIf
    EndIf
    Return
    End
}

#new:Unknown $???_80247454
{
    F24C8781 F24731D4 F24BA67D FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_8024746C
{
    ExecWait  $Script_80245E98
    Call  EnableGroup   ( ~Model:po .False )
    If  *StoryProgress  <  FFFFFFFB
        Call  EnableGroup   ( ~Model:popo .False )
    Else
        Call  ModifyColliderFlags   ( 00000000 ~Collider:eki1 7FFFFE00 )
    EndIf
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80247454
        Set   *MapVar[2]  00000000
        Exec  $Script_80242F50
        Set   *MapFlag[00]  .True
    Else
        Call  GetEntryID    ( *Var[0] )
        Switch  *Var[0]
            Case  ==  ~Entry:Entry2
                Exec  $Script_80246C80
            Case  ==  ~Entry:Entry3
                Exec  $Script_802468F8
            Case  ==  ~Entry:Entry6
                Call  EnableGroup   ( ~Model:popo .False )
                Call  EnableGroup   ( ~Model:po .True )
            Default
                Set   *MapVar[0]  00000000
                Set   *MapVar[1]  $???_80247454
                Set   *MapVar[2]  00000000
                Exec  $Script_80242F50
                Set   *MapFlag[00]  .True
        EndSwitch
    EndIf
    Return
    End
}

#new:VectorList $VectorList_80247640
{
    % ~Path3f:Path_80247640
    -170.000000 400.000000 -196.000000
    -100.000000 225.000000 -196.000000
    -70.000000 45.000000 -193.000000
}

#new:VectorList $VectorList_80247664
{
    % ~Path3f:Path_80247664
    -70.000000 0.000000 -193.000000
    -7.000000 100.000000 -191.000000
    54.000000 20.000000 -189.000000
}

#new:VectorList $VectorList_80247688
{
    % ~Path3f:Path_80247688
    54.000000 0.000000 -189.000000
    92.000000 55.000000 -199.000000
    131.000000 0.000000 -210.000000
}

#new:Script $Script_802476AC
{
    Call  DisablePlayerInput    ( .True )
    Call  SetCamProperties      ( .Cam:Default *Fixed[90.0] 00000052 00000018 0000000C 00000244 *Fixed[16.5] *Fixed[-8.5] )
    Call  TranslateGroup        ( ~Model:po FFFFFF56 00000190 FFFFFF3C )
    Set   *MapVar[A]  0000001E
    Wait  45`
    Thread
        Call  MakeLerp  ( *MapVar[A] 00000028 0000001D .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            Set   *MapVar[A]  *Var[0]
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Call  LoadPath  ( 0000001E $VectorList_80247640 00000003 .Easing:Linear )
    Loop
        Call  GetNextPathPos ( )
        Call  TranslateGroup    ( ~Model:po *Var[1] *Var[2] *Var[3] )
        Call  RotateGroup       ( ~Model:po *MapVar[A] 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[0]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Call  PlaySoundAtModel  ( ~Model:p_8 000000A1 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Default 00000000 00000005 *Fixed[3.0] )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000000 008C0001 )
        Call  SetNpcJumpscale   ( 00000000 *Fixed[3.0] )
        Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000000 *Var[0] *Var[1] *Var[2] 0000000C )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000001 008C0201 )
        Call  SetNpcJumpscale   ( 00000001 *Fixed[3.0] )
        Call  GetNpcPos ( 00000001 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000001 *Var[0] *Var[1] *Var[2] 0000000F )
    EndThread
    Thread
        Call  MakeLerp  ( *MapVar[A] 00000012 00000013 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            Set   *MapVar[A]  *Var[0]
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Call  LoadPath  ( 00000014 $VectorList_80247664 00000003 .Easing:Linear )
    Loop
        Call  GetNextPathPos ( )
        Call  TranslateGroup    ( ~Model:po *Var[1] *Var[2] *Var[3] )
        Call  RotateGroup       ( ~Model:po *MapVar[A] 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[0]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Call  PlaySoundAtModel  ( ~Model:p_8 000000A1 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Default 00000000 00000008 *Fixed[2.0] )
    EndThread
    Thread
        Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000000 *Var[0] *Var[1] *Var[2] 0000000A )
    EndThread
    Thread
        Call  GetNpcPos ( 00000001 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000001 *Var[0] *Var[1] *Var[2] 0000000A )
    EndThread
    Thread
        Call  MakeLerp  ( *MapVar[A] 00000000 0000000E .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            Set   *MapVar[A]  *Var[0]
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Call  LoadPath  ( 0000000F $VectorList_80247688 00000003 .Easing:Linear )
    Loop
        Call  GetNextPathPos ( )
        Call  TranslateGroup    ( ~Model:po *Var[1] *Var[2] *Var[3] )
        Call  RotateGroup       ( ~Model:po *MapVar[A] 00000000 00000000 00000001 )
        Wait  1`
        If  *Var[0]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Call  PlaySoundAtModel  ( ~Model:p_8 000000A1 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Default 00000000 0000000A *Fixed[1.0] )
    EndThread
    Thread
        Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000000 *Var[0] *Var[1] *Var[2] 00000008 )
    EndThread
    Thread
        Call  GetNpcPos ( 00000001 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000001 *Var[0] *Var[1] *Var[2] 00000005 )
        Loop
            Call  InterpNpcYaw  ( 00000001 0000010E 00000000 )
            Wait  25`
            Call  InterpNpcYaw  ( 00000001 0000005A 00000000 )
            Wait  25`
        EndLoop
    EndThread
    Set   *StoryProgress  FFFFFFFB
    Wait  75`
    Call  GotoMap   ( $ASCII_802481B0 00000003 ) % mac_04
    Wait  100`
    Return
    End
}

#new:VectorList $VectorList_80247E30
{
    % ~Path3f:Path_80247E30
    -100.000000 200.000000 130.000000
    -70.000000 60.000000 140.000000
    -40.000000 25.000000 150.000000
    -10.000000 15.000000 160.000000
}

#new:Script $Script_80247E60
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  GetNpcPos ( 00000003 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000D
    Call  PlayEffect        ( ~FX:ThunderBoltIcons *Var[0] *Var[1] *Var[2] *Fixed[0.9] 00000005 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  UseSettingsFrom   ( .Cam:Default 00000032 00000000 000000A0 )
    Call  SetPanTarget      ( .Cam:Default 00000032 00000000 000000A0 )
    Call  SetCamDistance    ( .Cam:Default 0000015E )
    Call  SetCamPitch       ( .Cam:Default *Fixed[16.0] *Fixed[-7.5] )
    Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
    Call  SetNpcAnimation   ( 00000004 003B0011 )
    Call  SetNpcAnimation   ( 00000005 003B0011 )
    Call  SetNpcAnimation   ( 00000006 003B0011 )
    Wait  60`
    Call  SetNpcAnimation   ( 00000003 00060004 )
    Call  SetNpcAnimation   ( 00000005 003B0001 )
    Call  SetNpcAnimation   ( 00000006 003B0001 )
    Call  SetNpcAnimation   ( 00000002 00040002 )
    Call  LoadPath  ( 0000003C $VectorList_80247E30 00000004 .Easing:Linear )
    Label  0
    Call  GetNextPathPos ( )
    Call  SetNpcPos ( 00000002 *Var[1] *Var[2] *Var[3] )
    Wait  1`
    If  *Var[0]  ==  00000001
        Goto  0
    EndIf
    Call  SetNpcAnimation   ( 00000002 00040001 )
    Call  SetNpcAnimation   ( 00000004 003B0001 )
    Call  SetNpcAnimation   ( 00000003 00060001 )
    Call  NpcFaceNpc        ( 00000003 00000002 00000000 )
    Wait  10`
    Call  SetNpcAnimation   ( 00000002 00040006 )
    Wait  60`
    Call  FadeOutMusic      ( 00000000 000003E8 )
    Call  GotoMap   ( $ASCII_802481B8 00000003 ) % jan_04
    Wait  100`
    Return
    End
}

PADDING: 8024816C to 80248170 (0000816C to 00008170)
00000000

#new:ASCII $ASCII_80248170
{
    "omo_13"
}

#new:ASCII $ASCII_80248178
{
    "omo_04"
}

#new:ASCII $ASCII_80248180
{
    "mac_04"
}

#new:ASCII $ASCII_80248188
{
    "omo_10"
}

#new:ASCII $ASCII_80248190
{
    "omo_08"
}

#new:ASCII $ASCII_80248198
{
    "omo_06"
}

#new:ASCII $ASCII_802481A0
{
    "omo_03"
}

#new:ASCII $ASCII_802481A8
{
    "omo_16"
}

#new:ASCII $ASCII_802481B0
{
    "mac_04"
}

#new:ASCII $ASCII_802481B8
{
    "jan_04"
}

