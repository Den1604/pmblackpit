% Script File: kgr_02.mscr
% Decoded from: 0 to 1B40 (kgr_02)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFD8
	SW        S0, 18 (SP)
	COPY      S0, A0
	LIA       V1, 8010EFC8
	SW        S1, 1C (SP)
	LIA       S1, 8010F290
	SW        S2, 20 (SP)
	COPY      S2, S1
	BEQ       A1, R0, .o3C
	SW        RA, 24 (SP)
	ADDIU     V0, R0, FF
	SW        V0, 70 (S0)
	SW        R0, 74 (S0)
	.o3C
	ADDIU     A0, R0, 1
	LWC1      F0, 2C (V1)
	LIF       F2, 8.0
	NOP
	ADD.S     F0, F0, F2
	LWC1      F2, 30 (V1)
	LWC1      F4, 28 (V1)
	TRUNC.W.S F6, F2
	SWC1      F6, 10 (SP)
	TRUNC.W.S F6, F4
	MFC1      A2, F6
	TRUNC.W.S F6, F0
	MFC1      A3, F6
	JAL       80137EC0
	COPY      A1, A0
	LAB       V0, 8010EBB0
	BEQ       V0, R0, .oD0
	ADDIU     V0, R0, 6
	LB        V1, 12 (S1)
	BNE       V1, V0, .o11C
	NOP
	LW        V0, 74 (S0)
	BNE       V0, R0, .oB0
	ADDIU     V0, R0, 1
	SW        V0, 74 (S0)
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 2011
	.oB0
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFF8
	SW        V0, 70 (S0)
	SLTI      V0, V0, 5A
	BEQ       V0, R0, .o11C
	ADDIU     V0, R0, 5A
	BEQ       R0, R0, .o11C
	SW        V0, 70 (S0)
	.oD0
	LB        V1, 12 (S2)
	BNE       V1, V0, .o118
	ADDIU     V0, R0, FF
	LW        V0, 74 (S0)
	BEQ       V0, R0, .o100
	NOP
	LW        V0, 70 (S0)
	SLTI      V0, V0, FF
	BEQ       V0, R0, .o100
	SW        R0, 74 (S0)
	JAL       ~Func:play_sound
	ADDIU     A0, R0, 2012
	.o100
	LW        V0, 70 (S0)
	ADDIU     V0, V0, 8
	SW        V0, 70 (S0)
	SLTI      V0, V0, FF
	BNE       V0, R0, .o11C
	ADDIU     V0, R0, FF
	.o118
	SW        V0, 70 (S0)
	.o11C
	LWC1      F6, 70 (S0)
	CVT.S.W   F6, F6
	MFC1      A1, F6
	JAL       801380D4
	ADDIU     A0, R0, 1
	LUI       A1, 437F
	JAL       80137DA4
	ADDIU     A0, R0, B
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 28
}

PADDING: 80240158 to 80240160 (00000158 to 00000160)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80240160
{
	ADDIU     SP, SP, FFB0
	SW        S7, 44 (SP)
	COPY      S7, A0
	LIA       V0, $???_80240970
	SW        RA, 4C (SP)
	SW        S8, 48 (SP)
	SW        S6, 40 (SP)
	SW        S5, 3C (SP)
	SW        S4, 38 (SP)
	SW        S3, 34 (SP)
	SW        S2, 30 (SP)
	SW        S1, 2C (SP)
	SW        S0, 28 (SP)
	SW        A1, 54 (SP)
	LW        V1, 0 (V0)
	COPY      S6, A2
	ADDIU     V1, V1, 5
	SW        V1, 0 (V0)
	SLT       V0, S7, S6
	BEQ       V0, R0, .o59C
	NOP
	LW        T4, 54 (SP)
	SLT       V0, T4, A3
	BEQ       V0, R0, .o59C
	NOP
	BLTZL     S7, .o70
	CLEAR     S7
	.o70
	LW        T5, 54 (SP)
	BLTZL     T5, .o7C
	SW        R0, 54 (SP)
	.o7C
	BLTZL     S6, .o84
	CLEAR     S6
	.o84
	BLTZL     A3, .o8C
	CLEAR     A3
	.o8C
	SLTI      V0, S7, 140
	BEQL      V0, R0, .o98
	ADDIU     S7, R0, 13F
	.o98
	LW        T4, 54 (SP)
	SLTI      V0, T4, F0
	BNE       V0, R0, .oB0
	SLTI      V0, S6, 140
	ADDIU     T5, R0, EF
	SW        T5, 54 (SP)
	.oB0
	BEQL      V0, R0, .oB8
	ADDIU     S6, R0, 13F
	.oB8
	SLTI      V0, A3, F0
	BEQL      V0, R0, .oC4
	ADDIU     A3, R0, EF
	.oC4
	BEQ       S7, S6, .o59C
	NOP
	LW        T4, 54 (SP)
	BEQ       T4, A3, .o59C
	NOP
	BGEZ      S7, .oE4
	COPY      V0, S7
	ADDIU     V0, S7, 3
	.oE4
	SRA       V0, V0, 2
	SLL       S7, V0, 2
	BGEZ      S6, .oF8
	COPY      V0, S6
	ADDIU     V0, S6, 3
	.oF8
	SRA       V0, V0, 2
	SLL       V0, V0, 2
	ADDIU     S6, V0, 4
	LIO       A1, 2AAAAAAB
	LIA       A2, 8009A66C
	LW        V0, 0 (A2)
	CLEAR     S8
	COPY      A0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (A2)
	LW        T5, 54 (SP)
	LUI       V0, FA00
	SUBU      V1, A3, T5
	MULT      V1, A1
	SW        V0, 0 (A0)
	ADDIU     V0, R0, FFFF
	SW        V0, 4 (A0)
	SRA       V0, V1, 1F
	MFHI      T4
	SUBU      T4, T4, V0
	SW        T4, 14 (SP)
	COPY      T5, T4
	SLL       V0, T5, 1
	ADDU      V0, V0, T5
	SLL       V0, V0, 1
	LAW       T4, 8009A64C
	SUBU      V1, V1, V0
	SW        T5, 10 (SP)
	SW        V1, 14 (SP)
	BLEZ      T5, .o3E0
	SW        T4, 18 (SP)
	COPY      S4, A2
	SUBU      V0, S6, S7
	SLL       V0, V0, 1
	ADDIU     V0, V0, 7
	SRA       V0, V0, 3
	ANDI      V0, V0, 1FF
	SLL       V0, V0, 9
	LUI       V1, F510
	OR        V0, V0, V1
	SW        V0, 1C (SP)
	ADDIU     V0, S7, 200
	LW        S5, 54 (SP)
	SLL       V0, V0, 2
	SW        V0, 20 (SP)
	SW        R0, 24 (SP)
	LIO       V1, FD10013F
	LW        V0, 0 (S4)
	LW        A0, 18 (SP)
	COPY      S0, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S4)
	JAL       ~Func:osVirtualToPhysical
	SW        V1, 0 (S0)
	LUI       A0, 700
	LW        V1, 0 (S4)
	ORI       A0, A0, 90
	SW        V0, 4 (S0)
	SLL       S0, S7, 2
	ANDI      S0, S0, FFF
	SLL       S0, S0, C
	SLL       S2, S5, 2
	ANDI      S3, S2, FFF
	ADDIU     A1, S5, 5
	SLL       A1, A1, 2
	ANDI      A1, A1, FFF
	LUI       S1, F200
	COPY      V0, V1
	ADDIU     V1, V1, 8
	SW        V1, 0 (S4)
	LW        T5, 1C (SP)
	OR        S1, S3, S1
	SW        A0, 4 (V0)
	ADDIU     A0, S6, FFFF
	SLL       A0, A0, 2
	ANDI      A0, A0, FFF
	SLL       A0, A0, C
	SW        T5, 0 (V0)
	ADDIU     V0, V1, 8
	SW        V0, 0 (S4)
	LUI       V0, E600
	SW        V0, 0 (V1)
	ADDIU     V0, V1, 10
	SW        R0, 4 (V1)
	SW        V0, 0 (S4)
	LUI       V0, F400
	OR        V0, S3, V0
	OR        V0, S0, V0
	SW        V0, 8 (V1)
	LUI       V0, 700
	OR        V0, A1, V0
	OR        V0, A0, V0
	SW        V0, C (V1)
	ADDIU     V0, V1, 18
	SW        V0, 0 (S4)
	LUI       V0, E700
	SW        V0, 10 (V1)
	ADDIU     V0, V1, 20
	SW        R0, 14 (V1)
	SW        V0, 0 (S4)
	ADDIU     V0, R0, 90
	SW        V0, 1C (V1)
	ADDIU     V0, V1, 28
	SW        T5, 18 (V1)
	SW        V0, 0 (S4)
	OR        V0, S0, S1
	SW        V0, 20 (V1)
	LAW       V0, $???_80240970
	OR        A0, A0, A1
	SW        A0, 24 (V1)
	LW        T4, 24 (SP)
	ADDU      V0, V0, T4
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	JAL       ~Func:sin_deg
	ADDIU     S2, S2, 14
	LIO       A3, 04000400
	ADDIU     V0, S5, 6
	SLL       A2, S5, 5
	COPY      S5, V0
	ANDI      S2, S2, FFF
	OR        S0, S0, S3
	LW        T5, 24 (SP)
	LIF       F2, 4.0
	ADDIU     T5, T5, 1E
	SW        T5, 24 (SP)
	LW        A1, 0 (S4)
	MUL.S     F0, F0, F2
	NOP
	COPY      A0, A1
	ADDIU     A1, A1, 8
	ADDIU     V0, A1, 8
	SW        A1, 0 (S4)
	SW        V0, 0 (S4)
	TRUNC.W.S F4, F0
	MFC1      V0, F4
	LW        T4, 60 (SP)
	ANDI      A2, A2, FFFF
	MULT      T4, V0
	ADDIU     V0, A1, 10
	SW        V0, 0 (S4)
	ADDIU     V0, A1, 18
	SW        V0, 0 (S4)
	LW        T5, 20 (SP)
	MFLO      T4
	ADDU      V1, T5, T4
	ANDI      V0, V1, FFF
	SLL       V0, V0, C
	OR        V0, V0, S1
	ADDIU     V1, V1, 800
	ANDI      V1, V1, FFF
	SLL       V1, V1, C
	OR        V1, V1, S2
	SW        V1, 4 (A0)
	SLL       V1, S6, 2
	ANDI      V1, V1, FFF
	SLL       V1, V1, C
	SW        V0, 0 (A0)
	SLL       V0, S5, 2
	ANDI      V0, V0, FFF
	LUI       A0, E400
	OR        V0, V0, A0
	OR        V1, V1, V0
	LUI       V0, E100
	SW        V0, 8 (A1)
	SLL       V0, S7, 15
	OR        V0, V0, A2
	SW        V0, C (A1)
	LUI       V0, F100
	SW        V1, 0 (A1)
	SW        S0, 4 (A1)
	SW        V0, 10 (A1)
	SW        A3, 14 (A1)
	LW        T5, 10 (SP)
	ADDIU     S8, S8, 1
	SLT       V0, S8, T5
	BNE       V0, R0, .o1C0
	LUI       V1, FD10
	LW        T4, 14 (SP)
	BEQ       T4, R0, .o59C
	LUI       V1, FD10
	ORI       V1, V1, 13F
	LIA       S0, 8009A66C
	LW        V0, 0 (S0)
	LW        A0, 18 (SP)
	COPY      S1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (S0)
	JAL       ~Func:osVirtualToPhysical
	SW        V1, 0 (S1)
	LIO       A2, 07000090
	LIO       T3, 04000400
	SUBU      A1, S6, S7
	SLL       A1, A1, 1
	ADDIU     A1, A1, 7
	SRA       A1, A1, 3
	ANDI      A1, A1, 1FF
	LW        A0, 0 (S0)
	SLL       A1, A1, 9
	SW        V0, 4 (S1)
	LUI       V0, F510
	OR        A1, A1, V0
	SLL       T1, S7, 2
	ANDI      T1, T1, FFF
	SLL       T1, T1, C
	SLL       A3, S8, 1
	ADDU      A3, A3, S8
	SLL       A3, A3, 1
	COPY      V1, A0
	ADDIU     A0, A0, 8
	ADDIU     V0, A0, 8
	SW        A0, 0 (S0)
	SW        A1, 0 (V1)
	SW        A2, 4 (V1)
	SW        V0, 0 (S0)
	LUI       V0, E600
	SW        V0, 0 (A0)
	ADDIU     V0, A0, 10
	SW        R0, 4 (A0)
	SW        V0, 0 (S0)
	LUI       V0, F400
	ADDIU     V1, S6, FFFF
	SLL       V1, V1, 2
	ANDI      V1, V1, FFF
	LW        T5, 54 (SP)
	SLL       V1, V1, C
	ADDU      A3, T5, A3
	SLL       T2, A3, 2
	ANDI      T2, T2, FFF
	OR        V0, T2, V0
	OR        V0, T1, V0
	SW        V0, 8 (A0)
	LW        T4, 14 (SP)
	LUI       V0, 700
	ADDU      A2, A3, T4
	ADDIU     T0, A2, FFFF
	SLL       T0, T0, 2
	ANDI      T0, T0, FFF
	OR        V0, T0, V0
	OR        V0, V1, V0
	SW        V0, C (A0)
	ADDIU     V0, A0, 18
	SW        V0, 0 (S0)
	LUI       V0, E700
	SW        V0, 10 (A0)
	ADDIU     V0, A0, 20
	SW        R0, 14 (A0)
	SW        V0, 0 (S0)
	ADDIU     V0, R0, 90
	SW        V0, 1C (A0)
	ADDIU     V0, A0, 28
	SW        A1, 18 (A0)
	SW        V0, 0 (S0)
	LUI       V0, F200
	OR        V0, T2, V0
	OR        V0, T1, V0
	OR        V1, V1, T0
	SW        V0, 20 (A0)
	ADDIU     V0, A0, 30
	SW        V1, 24 (A0)
	SW        V0, 0 (S0)
	SLL       V0, S6, 2
	ANDI      V0, V0, FFF
	SLL       V0, V0, C
	SLL       A2, A2, 2
	ANDI      A2, A2, FFF
	LUI       V1, E400
	OR        A2, A2, V1
	OR        V0, V0, A2
	OR        T1, T1, T2
	SW        V0, 28 (A0)
	ADDIU     V0, A0, 38
	SW        T1, 2C (A0)
	SW        V0, 0 (S0)
	LUI       V0, E100
	SW        V0, 30 (A0)
	SLL       V0, S7, 15
	SLL       A3, A3, 5
	ANDI      A3, A3, FFFF
	OR        V0, V0, A3
	SW        V0, 34 (A0)
	ADDIU     V0, A0, 40
	SW        V0, 0 (S0)
	LUI       V0, F100
	SW        V0, 38 (A0)
	SW        T3, 3C (A0)
	LW        RA, 4C (SP)
	LW        S8, 48 (SP)
	LW        S7, 44 (SP)
	LW        S6, 40 (SP)
	LW        S5, 3C (SP)
	LW        S4, 38 (SP)
	LW        S3, 34 (SP)
	LW        S2, 30 (SP)
	LW        S1, 2C (SP)
	LW        S0, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 50
}

PADDING: 8024072C to 80240730 (0000072C to 00000730)
00000000

#new:Function $Function_80240730
{
	LAB       V0, 8010EBB3
	XORI      V0, V0, 6
	SLTIU     V0, V0, 1
	JR        RA
	SLL       V0, V0, 1
}

#new:Function $Function_80240748
{
	LAB       V0, 8010EBB3
	XORI      V0, V0, 6
	SLTU      V0, R0, V0
	JR        RA
	SLL       V0, V0, 1
}

#new:Function $Function_80240760
{
	LAH       V0, 8015A568
	BLTZ      V0, .o14
	ADDIU     V0, R0, 1
	SW        V0, 88 (A0)
	.o14
	JR        RA
	ADDIU     V0, R0, 2
}

PADDING: 8024077C to 80240780 (0000077C to 00000780)
00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -175.0   10.0    0.0   90.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main_EnterWalk
    [EntryList]   $EntryList
    [EntryCount]  00000001
    [Background]  00000000
    [MapTattle]   001900EA
}

#new:Script $Script_802407D0
{
    Thread
        Call  $Function_80240000 ( )
    EndThread
    Return
    End
}

#new:Script $Script_ExitWalk_802407FC
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80241B30 00000001 ) % kgr_01
    Wait  100`
    Return
    End
}

#new:Script $Script_80240858
{
    Bind  $Script_ExitWalk_802407FC .Trigger:FloorAbove ~Collider:deiliw 00000001 00000000
    Return
    End
}

#new:Script_Main $Script_Main_EnterWalk
{
    Set   *WorldMapLocation  .Location:ToadTown
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Call  MakeNpcs  ( 00000000 $NpcGroupList_802419F4 )
    Set   *Var[0]  $Script_80240858
    Exec  EnterWalk
    Exec  $Script_80240974
    Exec  $Script_802407D0
    Exec  $Script_80241A10
    Return
    End
}

PADDING: 8024096C to 80240970 (0000096C to 00000970)
00000000

% Origin: HEURISTIC
#new:Unknown $???_80240970
{
    00000000
}

#new:Script $Script_80240974
{
    Wait  1`
    Return
    End
}

#new:Script $Script_80240990
{
    Loop
        Call  MakeLerp  ( 00000000 FFFFFFF6 00000019 .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Call  TranslateModel    ( *Var[2] 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( *Var[3] 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( *Var[4] 00000000 *Var[0] 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  MakeLerp  ( FFFFFFF6 00000000 0000001E .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Call  TranslateModel    ( *Var[2] 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( *Var[3] 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( *Var[4] 00000000 *Var[0] 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndLoop
    Return
    End
}

#new:Script $Script_80240B2C
{
    Set   *Var[2]  0000000E
    Set   *Var[3]  00000015
    Set   *Var[4]  00000011
    Exec  $Script_80240990 *Var[A]
    Wait  5`
    Set   *Var[2]  00000014
    Set   *Var[3]  00000013
    Set   *Var[4]  00000012
    Exec  $Script_80240990 *Var[B]
    Wait  5`
    Set   *Var[2]  0000000F
    Set   *Var[3]  00000010
    Set   *Var[4]  00000017
    Exec  $Script_80240990 *Var[C]
    Wait  5`
    Set   *Var[2]  0000000B
    Set   *Var[3]  0000000C
    Set   *Var[4]  00000016
    Exec  $Script_80240990 *Var[D]
    Call  SetNpcVar ( 00000000 00000002 00000000 )
    Loop
        Call  GetNpcVar ( 00000000 00000002 *Var[0] )
        If  *Var[0]  ==  00000001
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Kill  *Var[A]
    Kill  *Var[B]
    Kill  *Var[C]
    Kill  *Var[D]
    Return
    End
}

#new:Script $Script_80240D00
{
    Set   *Var[A]  00000000
    Set   *Var[B]  00000000
    Call  802D2508 ( )
    Loop
        If  *Var[A]  ==  00000000
            Call  $Function_80240730 ( )
            If  *Var[B]  ==  00000000
                Call  DisablePlayerInput    ( .True )
                Call  SetNpcJumpscale       ( .Npc:Self *Fixed[1.0] )
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                If  *Var[0]  <  00000000
                    Add   *Var[0]  00000050
                Else
                    Add   *Var[0]  FFFFFFB0
                EndIf
                Call  NpcJump0      ( .Npc:Self *Var[0] 00000000 00000000 00000014 )
                Call  GetNpcPos     ( .Npc:Self *Var[0] *Var[1] *Var[2] )
                Call  NpcJump0      ( .Npc:Self *Var[0] *Var[1] *Var[2] 0000000A )
                Call  SpeakToPlayer ( .Npc:Self 00410024 00410004 00000000 0007009B ) % Waaaah! Who dat!! What d'you think you're doin' wi ...
                Call  SetSelfVar    ( 00000000 00000001 )
                Set   *Var[B]  00000001
                Call  DisablePlayerInput    ( .False )
            EndIf
            Call  SetSelfEnemyFlagBits  ( 03000000 00000000 )
            Set   *Var[A]  00000001
        Else
            Call  $Function_80240748 ( )
            Call  SetSelfEnemyFlagBits  ( 03000000 00000001 )
            Set   *Var[A]  00000000
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80240F20
{
    Loop
        Call  PlaySoundAtNpc    ( .Npc:Self 000020D9 00000000 )
        Call  NpcJump0  ( .Npc:Self FFFFFF9C 00000050 FFFFFFB0 00000014 )
        Wait  10`
        Call  PlaySoundAtNpc    ( .Npc:Self 000020D9 00000000 )
        Call  NpcJump0  ( .Npc:Self 00000064 00000050 FFFFFFB0 00000014 )
        Wait  10`
        Call  PlaySoundAtNpc    ( .Npc:Self 000020D9 00000000 )
        Call  NpcJump0  ( .Npc:Self 0000001E 00000028 FFFFFFB0 00000014 )
        Wait  10`
        Call  PlaySoundAtNpc    ( .Npc:Self 000020D9 00000000 )
        Call  NpcJump0  ( .Npc:Self 00000087 0000000F FFFFFF9C 00000014 )
        Wait  10`
        Call  PlaySoundAtNpc    ( .Npc:Self 000020D9 00000000 )
        Call  NpcJump0  ( .Npc:Self 0000001E 00000000 00000000 00000014 )
        Wait  10`
    EndLoop
    Return
    End
}

#new:Script $Script_NpcAI_80241098
{
    Exec  $Script_80240B2C
    Loop
        Call  GetSelfVar    ( 00000000 *Var[0] )
        If  *Var[0]  ==  00000001
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Exec  $Script_80240F20 *Var[A]
    Call  SetSelfVar    ( 00000003 *Var[A] )
    Loop
        Call  GetSelfVar    ( 00000001 *Var[0] )
        If  *Var[0]  ==  00000001
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  SetSelfEnemyFlagBits  ( 00100000 00000000 )
    Call  StartBossBattle       ( .Song:SpecialBattle )
    Return
    End
}

#new:Script $Script_802411A4
{
    Call  DisablePlayerInput    ( .True )
    Call  GetSelfVar    ( 00000003 *Var[0] )
    Kill  *Var[0]
    Call  SetSelfVar    ( 00000001 00000001 )
    Return
    End
}

#new:Script $Script_802411F8
{
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  SetPlayerPos  ( FFFFFFD8 00000000 00000000 )
    Call  SetPlayerFlagBits     ( 00200000 .True )
    Call  InterpPlayerYaw       ( 0000005A 00000000 )
    Call  SetPlayerFlagBits     ( 00200000 .False )
    Call  SetNpcPos     ( .Npc:Self 0000001E 00000000 00000000 )
    Call  SetNpcYaw     ( .Npc:Self 0000010E )
    Call  UseSettingsFrom       ( .Cam:Default FFFFFFFB 00000000 00000000 )
    Call  SetPanTarget  ( .Cam:Default FFFFFFFB 00000000 00000000 )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  1`
    Call  SpeakToPlayer ( .Npc:Self 00410024 00410004 00000000 0007009D ) % Awwwww... Shucks! First I think I get away from th ...
    Wait  10`
    Call  ShowMessageAtScreenPos    ( 0007009E FFFFFED4 00000064 ) % Mario, it's me! You know, the whale? Can you hear  ...
    Wait  10`
    Call  FadeOutMusic  ( 00000000 000003E8 )
    Call  SetSelfVar    ( 00000002 00000001 )
    Thread
        Call  PlaySound ( 00000042 )
        Set   *Var[0]  00000000
        Loop  00000096
            Add   *Var[0]  00000001
            Call  TranslateGroup    ( ~Model:mizu 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:hako1 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:hako2 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:hako3 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:hako6 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:bin1 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:bin2 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:bin3 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:bin4 00000000 *Var[0] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Thread
        Set   *Var[0]  00000000
        Loop  0000004B
            Add   *Var[0]  00000001
            Call  TranslateGroup    ( ~Model:fune 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:hako4 00000000 *Var[0] 00000000 )
            Call  TranslateModel    ( ~Model:hako5 00000000 *Var[0] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Thread
        Wait  20`
        Call  HidePlayerShadow  ( .True )
        Call  EnableNpcShadow   ( .Npc:Partner .False )
        Call  SetPlayerAnimation    ( 00080017 )
        Call  GetPlayerPos      ( *Var[1] *Var[0] *Var[3] )
        Loop  00000096
            Add   *Var[0]  00000001
            Call  SetPlayerPos  ( *Var[1] *Var[0] *Var[3] )
            Wait  1`
        EndLoop
    EndThread
    Thread
        Wait  20`
        Call  EnableNpcShadow   ( .Npc:Self .False )
        Call  GetNpcPos ( 00000000 *Var[1] *Var[0] *Var[3] )
        Loop  00000096
            Add   *Var[0]  00000001
            Call  SetNpcPos ( .Npc:Self *Var[1] *Var[0] *Var[3] )
            Wait  1`
        EndLoop
    EndThread
    ChildThread
        Loop
            Call  InterpNpcYaw  ( 00000000 0000005A 00000007 )
            Wait  10`
            Call  InterpNpcYaw  ( 00000000 0000010E 00000007 )
            Wait  10`
        EndLoop
    EndChildThread
    Wait  120`
    Call  GotoMap   ( $ASCII_80241B38 00000002 ) % mac_05
    Wait  100`
    Call  802D2B6C ( )
    Call  DisablePlayerPhysics  ( .False )
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_802417A0
{
    Call  SetNpcPos ( .Npc:Self 00000064 00000050 FFFFFFB0 )
    Exec  $Script_80240D00
    Return
    End
}

#new:NpcSettings $NpcSettings_802417D8
{
    00410004 00180018 $Script_802417A0 00000000 $Script_NpcAI_80241098 $Script_802411A4 00000000 $Script_802411F8
    00000000 00000064 00000000
}

#new:NpcGroup $NpcGroup_80241804
{
    00000000 $NpcSettings_802417D8 ~Vec3f:NPC_80241804 % 333 -10 -130
    17148904 00000000 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_80241804
    ~AnimationTable:NPC_80241804 % .Sprite:Fuzzipede
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_802419F4
{
    00000001 $NpcGroup_80241804 13000001
    00000000 00000000 00000000
}

PADDING: 80241A0C to 80241A10 (00001A0C to 00001A10)
00000000

#new:Script $Script_80241A10
{
    Set   *Var[1]  00000000
    Loop
        Call  GetPlayerActionState  ( *Var[0] )
        Switch  *Var[0]
            Case  ==  .ActionState:Hammer % 12
                Wait  10`
                Set   *Var[1]  00000001
            Case  ==  .ActionState:GroundPound % E
                Set   *Var[1]  00000001
        EndSwitch
        Call  $Function_80240760 ( )
        If  *Var[1]  !=  00000000
            Call  DisablePlayerInput        ( .True )
            Call  ShowMessageAtScreenPos    ( 0007009A 000000A0 00000028 ) % Ouch! That hurt! What are you doing!?
            Set   *Var[1]  00000000
            Call  DisablePlayerInput        ( .False )
        EndIf
        Wait  1`
    EndLoop
    Return
    End
}

PADDING: 80241B24 to 80241B30 (00001B24 to 00001B30)
00000000 00000000 00000000

#new:ASCII $ASCII_80241B30
{
    "kgr_01"
}

#new:ASCII $ASCII_80241B38
{
    "mac_05"
}

