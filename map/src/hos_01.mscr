% Script File: hos_01.mscr
% Decoded from: 0 to 59A0 (hos_01)

% Origin: HEURISTIC
#new:Function $Function_80240000
{
	ADDIU     SP, SP, FF98
	SW        S1, 2C (SP)
	COPY      S1, A0
	SW        RA, 30 (SP)
	SW        S0, 28 (SP)
	SDC1      F30, 60 (SP)
	SDC1      F28, 58 (SP)
	SDC1      F26, 50 (SP)
	SDC1      F24, 48 (SP)
	SDC1      F22, 40 (SP)
	SDC1      F20, 38 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	SWC1      F0, 20 (SP)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	MFC1      A1, F30
	MFC1      A2, F28
	MFC1      A3, F26
	LWC1      F2, 20 (SP)
	SWC1      F24, 10 (SP)
	SWC1      F22, 14 (SP)
	SWC1      F20, 18 (SP)
	TRUNC.W.S F2, F2
	MFC1      A0, F2
	JAL       8006FE30
	SWC1      F0, 1C (SP)
	LW        RA, 30 (SP)
	LW        S1, 2C (SP)
	LW        S0, 28 (SP)
	LDC1      F30, 60 (SP)
	LDC1      F28, 58 (SP)
	LDC1      F26, 50 (SP)
	LDC1      F24, 48 (SP)
	LDC1      F22, 40 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 68
}

#new:Function $Function_80240120
{
	ADDIU     SP, SP, FF98
	SDC1      F26, 50 (SP)
	LAF       F26, 800B1DEC
	LIF       F0, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F2
	ADDIU     A0, R0, 1F4
	SW        RA, 34 (SP)
	DIV.S     F26, F26, F0
	MUL.S     F26, F26, F2
	NOP
	SW        S0, 30 (SP)
	SDC1      F22, 40 (SP)
	SDC1      F20, 38 (SP)
	LAD       F0, $ConstDouble_80245970
	CVT.D.S   F20, F26
	ADD.D     F22, F20, F0
	SDC1      F30, 60 (SP)
	SDC1      F28, 58 (SP)
	SUB.D     F20, F20, F0
	SDC1      F24, 48 (SP)
	CVT.S.D   F22, F22
	JAL       ~Func:rand_int
	CVT.S.D   F20, F20
	ADDIU     V0, V0, FF06
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 1F4
	ADDIU     A0, R0, 64
	ADDIU     V0, V0, FF06
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	JAL       ~Func:rand_int
	SWC1      F4, 28 (SP)
	ADDIU     V0, V0, 258
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	JAL       ~Func:sin_rad
	MOV.S     F12, F26
	MUL.S     F0, F28, F0
	NOP
	LIA       S0, 8010EFC8
	LWC1      F2, 28 (S0)
	ADD.S     F30, F2, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F22
	MUL.S     F0, F24, F0
	NOP
	LWC1      F2, 2C (S0)
	ADD.S     F30, F30, F0
	LIF       F0, 200.0
	NOP
	ADD.S     F2, F2, F0
	MOV.S     F12, F26
	SWC1      F30, 20 (SP)
	JAL       ~Func:cos_rad
	SWC1      F2, 24 (SP)
	MUL.S     F0, F28, F0
	NOP
	LWC1      F30, 30 (S0)
	SUB.S     F30, F30, F0
	JAL       ~Func:cos_rad
	MOV.S     F12, F22
	MUL.S     F24, F24, F0
	NOP
	SUB.S     F30, F30, F24
	JAL       ~Func:sin_rad
	MOV.S     F12, F26
	MUL.S     F0, F28, F0
	NOP
	LWC1      F24, 28 (S0)
	MOV.S     F12, F20
	JAL       ~Func:sin_rad
	ADD.S     F24, F24, F0
	LWC1      F4, 28 (SP)
	MUL.S     F0, F4, F0
	NOP
	MOV.S     F12, F26
	LWC1      F26, 2C (S0)
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F0
	MUL.S     F28, F28, F0
	NOP
	LWC1      F22, 30 (S0)
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	SUB.S     F22, F22, F28
	LWC1      F4, 28 (SP)
	MUL.S     F0, F4, F0
	NOP
	ADDIU     A0, R0, A
	JAL       ~Func:rand_int
	SUB.S     F22, F22, F0
	CLEAR     A0
	ADDIU     V0, V0, A
	LW        A1, 20 (SP)
	LW        A2, 24 (SP)
	MFC1      A3, F30
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F24, 10 (SP)
	SWC1      F26, 14 (SP)
	SWC1      F0, 1C (SP)
	JAL       8006FE30
	SWC1      F22, 18 (SP)
	LW        RA, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 60 (SP)
	LDC1      F28, 58 (SP)
	LDC1      F26, 50 (SP)
	LDC1      F24, 48 (SP)
	LDC1      F22, 40 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 68
}

#new:Function $Function_8024031C
{
	ADDIU     SP, SP, FF98
	LAF       F0, 800B1DEC
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	ADDIU     A0, R0, 12C
	SW        RA, 34 (SP)
	SDC1      F30, 60 (SP)
	DIV.S     F0, F0, F2
	MUL.S     F30, F0, F4
	NOP
	SW        S0, 30 (SP)
	SDC1      F28, 58 (SP)
	SDC1      F26, 50 (SP)
	LAD       F2, $ConstDouble_80245978
	CVT.D.S   F0, F30
	ADD.D     F4, F0, F2
	SDC1      F24, 48 (SP)
	SDC1      F22, 40 (SP)
	SUB.D     F0, F0, F2
	SDC1      F20, 38 (SP)
	CVT.S.D   F4, F4
	CVT.S.D   F0, F0
	SWC1      F4, 20 (SP)
	JAL       ~Func:rand_int
	SWC1      F0, 24 (SP)
	ADDIU     V0, V0, FF6A
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 12C
	ADDIU     A0, R0, 64
	ADDIU     V0, V0, FF6A
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	JAL       ~Func:rand_int
	SWC1      F6, 28 (SP)
	LIA       S0, 8010EFC8
	ADDIU     V0, V0, 32
	LWC1      F2, 2C (S0)
	LIF       F0, 250.0
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	C.LE.S    F0, F2
	NOP
	BC1T      .o1F0
	ADDIU     V0, R0, 2
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F26, 28 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F26, F26, F0
	MUL.S     F0, F22, F0
	NOP
	LWC1      F28, 2C (S0)
	ADD.S     F26, F26, F0
	LIF       F0, 200.0
	NOP
	ADD.S     F28, F28, F0
	JAL       ~Func:cos_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F24, 30 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F0
	MUL.S     F0, F22, F0
	NOP
	SUB.S     F24, F24, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F22, 28 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F22, F22, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	MOV.S     F12, F30
	LWC1      F30, 2C (S0)
	JAL       ~Func:cos_rad
	ADD.S     F22, F22, F0
	MUL.S     F0, F20, F0
	NOP
	LWC1      F20, 30 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F20, F20, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	ADDIU     A0, R0, A
	JAL       ~Func:rand_int
	SUB.S     F20, F20, F0
	ADDIU     A0, R0, 1
	ADDIU     V0, V0, A
	MFC1      A1, F26
	MFC1      A2, F28
	MFC1      A3, F24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F22, 10 (SP)
	SWC1      F30, 14 (SP)
	SWC1      F0, 1C (SP)
	JAL       8006FE30
	SWC1      F20, 18 (SP)
	ADDIU     V0, R0, 2
	.o1F0
	LW        RA, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 60 (SP)
	LDC1      F28, 58 (SP)
	LDC1      F26, 50 (SP)
	LDC1      F24, 48 (SP)
	LDC1      F22, 40 (SP)
	LDC1      F20, 38 (SP)
	JR        RA
	ADDIU     SP, SP, 68
}

#new:Function $Function_80240534
{
	ADDIU     SP, SP, FF90
	SW        S1, 34 (SP)
	COPY      S1, A0
	LAF       F0, 800B1DEC
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	ADDIU     A0, R0, 96
	SW        RA, 38 (SP)
	SDC1      F30, 68 (SP)
	DIV.S     F0, F0, F2
	MUL.S     F30, F0, F4
	NOP
	SW        S0, 30 (SP)
	SDC1      F28, 60 (SP)
	SDC1      F26, 58 (SP)
	LAD       F2, $ConstDouble_80245980
	CVT.D.S   F0, F30
	ADD.D     F4, F0, F2
	SDC1      F24, 50 (SP)
	SDC1      F22, 48 (SP)
	SUB.D     F0, F0, F2
	SDC1      F20, 40 (SP)
	CVT.S.D   F4, F4
	CVT.S.D   F0, F0
	SWC1      F4, 20 (SP)
	JAL       ~Func:rand_int
	SWC1      F0, 24 (SP)
	ADDIU     A0, R0, 96
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	JAL       ~Func:rand_int
	SWC1      F6, 28 (SP)
	ADDIU     A0, R0, 64
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	JAL       ~Func:rand_int
	SWC1      F6, 2C (SP)
	LIA       S0, 8010EFC8
	ADDIU     V0, V0, FFCE
	LWC1      F0, 30 (S0)
	LIF       F22, 200.0
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	C.LT.S    F0, F22
	NOP
	BC1T      .o208
	ADDIU     V0, R0, 2
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F26, 28 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F26, F26, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	LWC1      F28, 2C (S0)
	ADD.S     F28, F28, F22
	ADD.S     F26, F26, F0
	JAL       ~Func:cos_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F24, 30 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	SUB.S     F24, F24, F0
	TRUNC.W.S F6, F26
	SWC1      F6, 88 (S1)
	TRUNC.W.S F6, F28
	SWC1      F6, 8C (S1)
	TRUNC.W.S F6, F24
	SWC1      F6, 90 (S1)
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F22, 28 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F22, F22, F0
	LWC1      F6, 2C (SP)
	MUL.S     F0, F6, F0
	NOP
	MOV.S     F12, F30
	LWC1      F30, 2C (S0)
	JAL       ~Func:cos_rad
	ADD.S     F22, F22, F0
	MUL.S     F0, F20, F0
	NOP
	LWC1      F20, 30 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F20, F20, F0
	LWC1      F6, 2C (SP)
	MUL.S     F0, F6, F0
	NOP
	ADDIU     A0, R0, 4
	JAL       ~Func:rand_int
	SUB.S     F20, F20, F0
	ADDIU     A0, R0, 2
	ADDIU     V0, V0, A
	MFC1      A1, F26
	MFC1      A2, F28
	MFC1      A3, F24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F22, 10 (SP)
	SWC1      F30, 14 (SP)
	SWC1      F0, 1C (SP)
	JAL       8006FE30
	SWC1      F20, 18 (SP)
	ADDIU     V0, R0, 2
	.o208
	LW        RA, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 68 (SP)
	LDC1      F28, 60 (SP)
	LDC1      F26, 58 (SP)
	LDC1      F24, 50 (SP)
	LDC1      F22, 48 (SP)
	LDC1      F20, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 70
}

#new:Function $Function_80240768
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 8015A552
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240794 to 802407A0 (00000794 to 000007A0)
00000000 00000000 00000000

#new:Function $Function_802407A0
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o30
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o40
	ADDU      V0, V1, V0
	.o30
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o44
	SUBU      V0, V1, A0
	.o40
	SW        V0, A8 (S0)
	.o44
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o64
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o74
	ADDU      V0, V1, V0
	.o64
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o78
	SUBU      V0, V1, A0
	.o74
	SW        V0, AC (S0)
	.o78
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o98
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA8
	ADDU      V0, V1, V0
	.o98
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oAC
	SUBU      V0, V1, A0
	.oA8
	SW        V0, B0 (S0)
	.oAC
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oCC
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oDC
	ADDU      V0, V1, V0
	.oCC
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE0
	SUBU      V0, V1, A0
	.oDC
	SW        V0, B4 (S0)
	.oE0
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802408C4
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o24
	SW        RA, 14 (SP)
	SW        R0, 70 (S0)
	SW        R0, 74 (S0)
	SW        R0, 78 (S0)
	SW        R0, 7C (S0)
	.o24
	LW        V0, 70 (S0)
	BNE       V0, R0, .o64
	NOP
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o50
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o60
	ADDU      V0, V1, V0
	.o50
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o64
	SUBU      V0, V1, A0
	.o60
	SW        V0, A8 (S0)
	.o64
	LW        V0, 74 (S0)
	BNE       V0, R0, .oA4
	NOP
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o90
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA0
	ADDU      V0, V1, V0
	.o90
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oA4
	SUBU      V0, V1, A0
	.oA0
	SW        V0, AC (S0)
	.oA4
	LW        V0, 78 (S0)
	BNE       V0, R0, .oE4
	NOP
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oD0
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oE0
	ADDU      V0, V1, V0
	.oD0
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE4
	SUBU      V0, V1, A0
	.oE0
	SW        V0, B0 (S0)
	.oE4
	LW        V0, 7C (S0)
	BNE       V0, R0, .o124
	NOP
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o110
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o120
	ADDU      V0, V1, V0
	.o110
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o124
	SUBU      V0, V1, A0
	.o120
	SW        V0, B4 (S0)
	.o124
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        V0, 70 (S0)
	LW        V1, 78 (S0)
	LW        A0, 98 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 70 (S0)
	LW        V0, 74 (S0)
	ADDIU     V1, V1, 1
	SW        V1, 78 (S0)
	LW        V1, 70 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 74 (S0)
	LW        V0, 7C (S0)
	SLT       V1, V1, A0
	ADDIU     V0, V0, 1
	BNE       V1, R0, .o198
	SW        V0, 7C (S0)
	SW        R0, 70 (S0)
	.o198
	LW        V0, 74 (S0)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1AC
	SW        R0, 74 (S0)
	.o1AC
	LW        V0, 78 (S0)
	LW        V1, A0 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1C0
	SW        R0, 78 (S0)
	.o1C0
	LW        V0, 7C (S0)
	LW        V1, A4 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1D4
	SW        R0, 7C (S0)
	.o1D4
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240AAC
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        V1, C (V0)
	LIF       F0, 190.0
	NOP
	SWC1      F0, 78 (V1)
	LW        V1, C (V0)
	LIF       F0, 220.0
	NOP
	SWC1      F0, 7C (V1)
	LW        V1, C (V0)
	LIO       AT, 3F333333
	MTC1      AT, F0
	NOP
	SWC1      F0, 68 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240B10
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        V1, C (V0)
	LIF       F0, 170.0
	NOP
	SWC1      F0, 78 (V1)
	LW        V1, C (V0)
	SWC1      F0, 7C (V1)
	LW        V1, C (V0)
	LIF       F0, 2.0
	NOP
	SWC1      F0, 68 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240B64
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	LW        V1, C (S0)
	SW        V0, 38 (V1)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80240BB8
{
	LIO       A2, FC121624
	LUI       A1, FF2F
	LIA       A0, 8009A66C
	LW        V0, 0 (A0)
	ORI       A1, A1, FFFF
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (A0)
	SW        A2, 0 (V1)
	SW        A1, 4 (V1)
	ADDIU     V1, V0, 8
	SW        V1, 0 (A0)
	LABU      A0, $???_80241C2C[3]
	LUI       V1, FA00
	SW        V1, 0 (V0)
	JR        RA
	SW        A0, 4 (V0)
}

#new:Function $Function_80240C08
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	SAW       V0, $???_80241C2C
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240C34
{
	LIO       A2, FC121624
	LUI       A1, FF2F
	LIA       A0, 8009A66C
	LW        V0, 0 (A0)
	ORI       A1, A1, FFFF
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (A0)
	SW        A2, 0 (V1)
	SW        A1, 4 (V1)
	ADDIU     V1, V0, 8
	SW        V1, 0 (A0)
	LABU      A0, $???_80241C30[3]
	LUI       V1, FA00
	SW        V1, 0 (V0)
	JR        RA
	SW        A0, 4 (V0)
}

#new:Function $Function_80240C84
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	SAW       V0, $???_80241C30
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240CB0
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	JAL       800EB168
	COPY      A0, V0
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240CDC
{
	ADDIU     SP, SP, FFD0
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S4, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S3, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	COPY      A0, S4
	MTC1      S3, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A1, F2
	MTC1      S2, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A2, F2
	MTC1      S0, F2
	NOP
	CVT.S.W   F2, F2
	MFC1      A3, F2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	JAL       8006FEF0
	SWC1      F0, 10 (SP)
	LW        RA, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

PADDING: 80240DC4 to 80240DD0 (00000DC4 to 00000DD0)
00000000 00000000 00000000

#new:Function $Function_80240DD0
{
	LIA       V1, 800B1D80
	LHU       V0, 2 (V1)
	ANDI      V0, V0, FFFE
	SH        V0, 2 (V1)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80240DEC
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 8015A552
	JAL       ~Func:set_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240E18 to 80240E20 (00000E18 to 00000E20)
00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -400.0    0.0  410.0   45.0
    ~Vec4f:Entry1 %   22.0  285.0 -190.0    0.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main_EnterWalk
    [EntryList]   $EntryList
    [EntryCount]  00000002
    [Background]  80200000
    [MapTattle]   0019001D
}

#new:Script $Script_80240E80
{
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry0
        Call  SetMusicTrack ( 00000000 .Song:ShootingStarSummit 00000000 00000008 )
    EndIf
    Return
    End
}

PADDING: 80240ED4 to 80240EE0 (00000ED4 to 00000EE0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80240EE0
{
    SetGroup  0000000B
    Set   *Var[D]  00000000
    Set   *Var[E]  00000000
    Label  0
    Call  GetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
    If  *Var[1]  <  FFFFFFCE
        Wait  1`
        Goto  0
    EndIf
    Set   *Var[8]  000003E8
    Sub   *Var[8]  *Var[1]
    Div   *Var[8]  0000000A
    If  *Var[8]  <  00000014
        Set   *Var[8]  00000014
    EndIf
    Call  GetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
    Call  RandInt   ( 00000190 *Var[A] )
    Set   *Var[B]  000000C8
    Call  RandInt   ( 00000190 *Var[C] )
    Sub   *Var[C]  000000C8
    Add   *Var[1]  *Var[A]
    Add   *Var[2]  *Var[B]
    Add   *Var[3]  *Var[C]
    Set   *Var[4]  *Var[1]
    Call  RandInt   ( 00000064 *Var[A] )
    Add   *Var[A]  00000032
    Sub   *Var[4]  *Var[A]
    Set   *Var[5]  00000000
    Set   *Var[6]  *Var[3]
    Call  RandInt   ( 00000004 *Var[7] )
    Add   *Var[7]  0000000A
    Switch  *Var[3]
        Case  <  FFFFFEDE
            Set   *Var[0]  00000000
        Case  <  00000028
            Set   *Var[0]  00000002
        Case  >=  00000028
            Set   *Var[0]  00000001
    EndSwitch
    If  *Var[E]  <  00000002
        Call  PlaySoundAt   ( B0000015 00000000 *Var[1] *Var[2] *Var[3] )
        Add   *Var[E]  00000001
    EndIf
    Add   *Var[D]  *Var[8]
    If  *Var[D]  >  0000001E
        Set   *Var[D]  00000000
        Set   *Var[E]  00000000
    EndIf
    Call  $Function_80240000    ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Var[6] *Var[7] )
    Wait  *Var[8]
    Goto  0
    Return
    End
}

#new:Script $Script_8024121C
{
    SetGroup  0000000B
    Thread
        Label  0
        Call  RandInt   ( 00000032 *Var[0] )
        Add   *Var[0]  0000000A
        Call  $Function_80240120 ( )
        Wait  *Var[0]
        Goto  0
    EndThread
    Thread
        Label  1
        Call  RandInt   ( 00000032 *Var[0] )
        Add   *Var[0]  00000014
        Call  $Function_8024031C ( )
        Wait  *Var[0]
        Goto  1
    EndThread
    Thread
        Label  2
        Call  RandInt       ( 00000032 *Var[0] )
        Add   *Var[0]  00000014
        Call  $Function_80240534 ( )
        Call  PlaySoundAt   ( B0000015 00000000 *Var[1] *Var[2] *Var[3] )
        Wait  *Var[0]
        Goto  2
    EndThread
    Return
    End
}

#new:Script $Script_ExitWalk_80241384
{
    Call  FadeOutMusic      ( 00000000 000005DC )
    Call  GotoMapSpecial    ( $ASCII_80245988 00000000 0000000B ) % kmr_24
    Wait  100`
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80245990 00000001 ) % hos_00
    Wait  100`
    Return
    End
}

#new:Script $Script_80241418
{
    SetGroup  0000001B
    If  *StoryProgress  <  0000005A
        Return
    EndIf
    Call  DisablePlayerInput    ( .True )
    Call  GetCurrentPartner     ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  802D2B6C ( )
        Wait  20`
        Loop
            Wait  1`
            Call  802D249C  ( *Var[0] )
            If  *Var[0]  ==  00000001
                BreakLoop
            EndIf
        EndLoop
    EndIf
    Call  DisablePlayerPhysics  ( .True )
    Call  DisablePartnerAI      ( 00000000 )
    ExecWait  $Script_80245580
    Call  GotoMap   ( $ASCII_80245998 00000000 ) % hos_02
    Wait  100`
    Return
    End
}

#new:Script $Script_80241540
{
    Bind  $Script_ExitWalk_80241384[38] .Trigger:FloorAbove ~Collider:deilisw 00000001 00000000
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  !=  ~Entry:Entry1
        Bind  $Script_80241418 .Trigger:FloorTouch ~Collider:deilin 00000001 00000000
    EndIf
    Return
    End
}

#new:Script $Script_802415B0
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  DisablePartnerAI  ( 00000000 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .False )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000100 .True )
    Call  UseSettingsFrom   ( .Cam:Default FFFFFFE2 000000FA FFFFFF60 )
    Call  SetPanTarget      ( .Cam:Default FFFFFFE2 000000FA FFFFFF60 )
    Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam        ( .Cam:Default *Fixed[1.0] )
    Set   *Var[2]  00000168
    Call  MakeLerp  ( 000001F4 000000FA 0000003C .Easing:QuadraticOut )
    Loop
        Call  UpdateLerp ( )
        Call  SetPlayerPos      ( FFFFFFE2 *Var[0] FFFFFF60 )
        Call  SetNpcPos ( .Npc:Partner FFFFFFE2 *Var[0] FFFFFF56 )
        Add   *Var[2]  00000028
        Call  InterpPlayerYaw   ( *Var[2] 00000000 )
        Call  SetNpcRotation    ( .Npc:Partner 00000000 *Var[2] 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *Var[0]  *Var[2]
    Sub   *Var[0]  00000168
    Sub   *Var[2]  *Var[0]
    Set   *Var[0]  00000028
    Label  A
    If  *Var[2]  <  0000021C
        Call  InterpPlayerYaw   ( *Var[2] 00000000 )
        Call  SetNpcRotation    ( .Npc:Partner 00000000 *Var[2] 00000000 )
        Add   *Var[2]  *Var[0]
        Wait  1`
        Goto  A
    EndIf
    Set   *Var[2]  000000B4
    Sub   *Var[0]  00000005
    If  *Var[0]  >  00000014
        Goto  A
    EndIf
    Call  SetNpcRotation        ( .Npc:Partner 00000000 00000000 00000000 )
    Call  $Function_80240AAC    ( *MapVar[A] )
    Call  SetNpcFlagBits        ( .Npc:Partner 00000200 .True )
    Call  EnablePartnerAI ( )
    Call  DisablePlayerPhysics  ( .False )
    Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
    Call  SetMusicTrack ( 00000000 .Song:ShootingStarSummit 00000000 00000008 )
    Call  DisablePlayerInput    ( .False )
    Label  14
    Call  $Function_80240768    ( *Var[0] )
    If  *Var[0]  !=  00000010
        Wait  1`
        Goto  14
    EndIf
    Bind  $Script_80241418 .Trigger:FloorTouch ~Collider:deilin 00000001 00000000
    Return
    End
}

#new:Script_Main $Script_Main_EnterWalk
{
    Set   *WorldMapLocation  .Location:ShootingStarSummit
    Call  SetSpriteShading  ( 00030000 )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Thread
        Label  1
        If  *StoryProgress  !=  FFFFFF96
            Wait  1`
            Goto  1
        EndIf
        Call  DisablePlayerInput    ( .True )
        ExecWait  $Script_ExitWalk_80241384
    EndThread
    Call  MakeNpcs      ( 00000000 $NpcGroupList_80244FC0 )
    ExecWait  $Script_MakeEntities
    Exec  $Script_80241D48
    Exec  $Script_8024121C
    Exec  $Script_80240E80
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            Set   *Var[0]  $Script_80241540
            Exec  EnterWalk
            Wait  1`
        Case  ==  ~Entry:Entry1
            Thread
                ExecWait  $Script_802415B0
                Exec  $Script_80241540
            EndThread
    EndSwitch
    If  *StoryProgress  ==  00000059
        Exec  $Script_80245050
    EndIf
    Return
    End
}

#new:Script $Script_UpdateTexturePan_80241B90
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_802407A0 ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_802408C4 ( )
    Return
    End
}

#new:Unknown $???_80241C2C
{
    000000FF
}

#new:Unknown $???_80241C30
{
    000000FF
}

#new:Script $Script_80241C34
{
    Loop
        Call  MakeLerp  ( 000000B4 00000050 0000002D .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  $Function_80240C84    ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  MakeLerp  ( 00000050 000000B4 00000023 .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  $Function_80240C84    ( *Var[0] )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndLoop
    Return
    End
}

#new:Script $Script_80241D48
{
    Thread
        Set   *Var[0]  00000004
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Set   *Var[3]  FFFFFF56
        Set   *Var[4]  FFFFFFBA
        Set   *Var[5]  00000000
        Set   *Var[6]  00000000
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_80241B90
    EndThread
    Thread
        Set   *Var[0]  00000005
        Set   *Var[1]  00000000
        Set   *Var[2]  00000000
        Set   *Var[3]  000000C8
        Set   *Var[4]  FFFFFF9C
        Set   *Var[5]  00000000
        Set   *Var[6]  00000000
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_80241B90
    EndThread
    Call  SetTexPanner  ( ~Model:o178 00000004 )
    Call  SetTexPanner  ( ~Model:o179 00000004 )
    Call  SetTexPanner  ( ~Model:o208 00000005 )
    Call  SetTexPanner  ( ~Model:o211 00000005 )
    If  *StoryProgress  <  00000059
        Call  EnableModel   ( ~Model:7 .False )
        If  *StoryProgress  <  00000039
            Call  EnableModel   ( ~Model:6 .False )
            If  *StoryProgress  <  00000027
                Call  EnableModel   ( ~Model:5 .False )
                If  *StoryProgress  <  00000007
                    Call  EnableModel   ( ~Model:4 .False )
                    If  *StoryProgress  <  FFFFFFF1
                        Call  EnableModel   ( ~Model:3 .False )
                        If  *StoryProgress  <  FFFFFFCB
                            Call  EnableModel   ( ~Model:2 .False )
                            If  *StoryProgress  <  FFFFFFB5
                                Call  EnableModel   ( ~Model:1 .False )
                            EndIf
                        EndIf
                    EndIf
                EndIf
            EndIf
        EndIf
    EndIf
    If  *StoryProgress  <  0000005A
        Call  EnableModel   ( ~Model:power .False )
    Else
        Call  PlayEffect    ( 00000075 00000000 FFFFFFE2 000000FA FFFFFF60 00000001 FFFFFFFF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Set   *MapVar[A]  *Var[F]
        Set   *Var[0]  000000FF
        Call  $Function_80240B64    ( *MapVar[A] *Var[0] )
        Call  GetEntryID    ( *Var[0] )
        If  *Var[0]  ==  ~Entry:Entry1
            Call  $Function_80240B10    ( *MapVar[A] )
        Else
            Call  $Function_80240AAC    ( *MapVar[A] )
        EndIf
    EndIf
    Call  SetRenderMode ( ~Model:1 00000016 )
    Call  SetRenderMode ( ~Model:2 00000016 )
    Call  SetRenderMode ( ~Model:3 00000016 )
    Call  SetRenderMode ( ~Model:4 00000016 )
    Call  SetRenderMode ( ~Model:5 00000016 )
    Call  SetRenderMode ( ~Model:6 00000016 )
    Call  SetRenderMode ( ~Model:7 00000016 )
    Call  802C90FC  ( 00000054 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000055 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000056 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000057 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000058 00000000 FFFFFFFF )
    Call  802C90FC  ( 00000059 00000000 FFFFFFFF )
    Call  802C90FC  ( 0000005A 00000000 FFFFFFFF )
    Call  802C94A0  ( 00000000 $Function_80240BB8 00000000 )
    Call  TranslateModel    ( ~Model:power 00000000 00000002 00000000 )
    Call  802C90FC  ( 00000053 00000001 FFFFFFFF )
    Call  802C94A0  ( 00000001 $Function_80240C34 00000000 )
    Thread
        Loop
            Call  MakeLerp  ( 000000FF 00000064 0000003C .Easing:CosInOut )
            Loop
                Call  UpdateLerp ( )
                Call  $Function_80240C08    ( *Var[0] )
                Wait  1`
                If  *Var[1]  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
            Call  MakeLerp  ( 00000064 000000FF 00000023 .Easing:CosInOut )
            Loop
                Call  UpdateLerp ( )
                Call  $Function_80240C08    ( *Var[0] )
                Wait  1`
                If  *Var[1]  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
        EndLoop
    EndThread
    Thread
        If  *StoryProgress  >=  0000005A
            ExecWait  $Script_80241C34
        Else
            Call  $Function_80240C84    ( 00000000 )
            Label  A
            If  *MapVar[B]  !=  00000001
                Wait  1`
                Goto  A
            EndIf
            Call  MakeLerp  ( 00000000 000000B4 00000037 .Easing:CosInOut )
            Loop
                Call  UpdateLerp ( )
                Call  $Function_80240C84    ( *Var[0] )
                Wait  1`
                If  *Var[1]  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
            Set   *MapVar[B]  00000002
            ExecWait  $Script_80241C34
        EndIf
    EndThread
    Return
    End
}

PADDING: 80242578 to 80242580 (00002578 to 00002580)
00000000 00000000

#new:NpcSettings $NpcSettings_80242580
{
    00000000 001A0018 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

MISSING: 802425AC to 80242604 (000025AC to 00002604)
00000000 00140014 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00630000 00000000 00160018 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00630000

#new:Script $Script_80242604
{
    Set   *Var[A]  00000000
    Label  0
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    If  *Var[1]  >=  000000F5
        Call  IsPlayerWithin    ( FFFFFFE2 FFFFFF5B 000000B4 *Var[3] )
        If  *Var[3]  ==  00000001
            Goto  A
        EndIf
    EndIf
    Wait  1`
    Goto  0
    Label  A
    Set   *Var[A]  00000001
    Call  FadeOutMusic  ( 00000000 000007D0 )
    Wait  60`
    Label  14
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    If  *Var[1]  <  000000F5
        Call  IsPlayerWithin    ( FFFFFFE2 FFFFFF5B 000000B4 *Var[3] )
        If  *Var[3]  ==  00000000
            Goto  1E
        EndIf
    EndIf
    Wait  1`
    Goto  14
    Label  1E
    Call  SetMusicTrack ( 00000000 .Song:ShootingStarSummit 00000000 00000008 )
    Wait  30`
    Goto  0
    Return
    End
}

#new:Script $Script_802427C8
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePartnerAI  ( 00000000 )
    Call  UseSettingsFrom   ( .Cam:Default FFFFFFDD 000000FA FFFFFF6F )
    Call  SetPanTarget      ( .Cam:Default FFFFFFDD 000000FA FFFFFF6F )
    Call  SetCamDistance    ( .Cam:Default 000001C2 )
    Call  SetCamPitch       ( .Cam:Default *Fixed[20.0] *Fixed[-5.5] )
    Call  SetCamSpeed       ( .Cam:Default *Fixed[0.5] )
    Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
    Call  802D2C14  ( 00000002 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000100 .True )
    Thread
        Call  GetPlayerPos      ( *Var[0] *Var[1] *Var[2] )
        Add   *Var[2]  0000001E
        Call  SetNpcJumpscale   ( .Npc:Partner 00000000 )
        Call  NpcJump0  ( .Npc:Partner *Var[0] *Var[1] *Var[2] 0000000F )
        Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    EndThread
    Call  SetMusicTrack ( 00000000 .Song:StarSpiritTheme 00000001 00000008 )
    Call  SpeakToPlayer ( 00000000 00120002 00120001 00000000 000A0000 ) % Welcome Mario... We've been waiting for you.
    Wait  10`
    Wait  1`
    Call  PlayerFaceNpc ( 00000000 00000001 )
    Call  SetNpcFlagBits        ( 00000000 00000100 .True )
    Call  SetNpcJumpscale       ( 00000000 00000000 )
    Call  NpcJump0      ( 00000000 00000015 00000104 FFFFFEEB 0000001E )
    Call  EnableModel   ( ~Model:1 .True )
    Call  PlaySound     ( 00000064 )
    Call  GetNpcPos     ( 00000001 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  $Function_80240CDC    ( 00000000 *Var[0] *Var[1] *Var[2] 0000000A )
    Call  GetNpcPos     ( 00000002 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  $Function_80240CDC    ( 00000000 *Var[0] *Var[1] *Var[2] 0000000A )
    Call  GetNpcPos     ( 00000003 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  $Function_80240CDC    ( 00000000 *Var[0] *Var[1] *Var[2] 0000000A )
    Call  GetNpcPos     ( 00000004 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  $Function_80240CDC    ( 00000000 *Var[0] *Var[1] *Var[2] 0000000A )
    Call  GetNpcPos     ( 00000005 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  $Function_80240CDC    ( 00000000 *Var[0] *Var[1] *Var[2] 0000000A )
    Call  GetNpcPos     ( 00000006 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  $Function_80240CDC    ( 00000000 *Var[0] *Var[1] *Var[2] 0000000A )
    Call  EnableModel   ( ~Model:2 .True )
    Call  EnableModel   ( ~Model:3 .True )
    Call  EnableModel   ( ~Model:4 .True )
    Call  EnableModel   ( ~Model:5 .True )
    Call  EnableModel   ( ~Model:6 .True )
    Call  EnableModel   ( ~Model:7 .True )
    SetF  *MapVar[1]  *Fixed[-80.0]
    Loop  00000014
        AddF  *MapVar[1]  *Fixed[6.0]
        Wait  1`
    EndLoop
    Call  EnableNpcShadow   ( 00000001 .True )
    Call  EnableNpcShadow   ( 00000002 .True )
    Call  EnableNpcShadow   ( 00000003 .True )
    Call  EnableNpcShadow   ( 00000004 .True )
    Call  EnableNpcShadow   ( 00000005 .True )
    Call  EnableNpcShadow   ( 00000006 .True )
    Wait  10`
    Call  SpeakToPlayer ( 00000000 00120002 00120001 00000000 000A0001 ) % We're the 7 Star Spirits. Our job is to grant the  ...
    Call  SetCamDistance    ( .Cam:Default 0000010E )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[2.8] )
    Call  GetNpcPos     ( 00000000 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-6.5] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000000 00120002 00120001 00000000 000A0002 ) % The other day, Bowser and his followers invaded ou ...
    Call  GetNpcPos     ( 00000001 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-6.9] )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000001 00130002 00120001 00000000 000A0003 ) % The Star Rod... ...is powerful beyond belief. It c ...
    Call  GetNpcPos     ( 00000002 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-7.3] )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000002 00140002 00130001 00000000 000A0004 ) % Bowser...that fiend... When he found out that we w ...
    Call  GetNpcPos     ( 00000003 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-7.7] )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000003 00150002 00150001 00000000 000A0005 ) % It is the responsibility of the 7 Star Spirits to  ...
    Call  GetNpcPos     ( 00000004 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-7.7] )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000004 00160002 00160001 00000000 000A0006 ) % Sadly... ...right now you are not strong enough to ...
    Call  GetNpcPos     ( 00000005 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-7.3] )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000005 00170003 00170001 00000000 000A0007 ) % Once we 7 Star Spirits are reunited in Star Haven, ...
    Call  GetNpcPos     ( 00000006 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-6.9] )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000006 00180002 00180001 00000000 000A0008 ) % Mario...we are...
    Set   *AreaByte[6]  000000C8
    Wait  30`
    Set   *AreaByte[6]  00000000
    Wait  20`
    Call  SpeakToPlayer ( 00000006 00180002 00180001 00000000 000A0009 ) % Alas... We've nearly exhausted our power to talk t ...
    Call  GetNpcPos     ( 00000000 *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default FFFFFED4 )
    Call  SetCamPitch   ( .Cam:Default *Fixed[16.0] *Fixed[-6.0] )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000000 00120002 00120001 00000000 000A000A ) % In order to take the Star Rod back from Bowser...  ...
    Set   *AreaByte[0]  000000C8
    Set   *AreaByte[1]  000000C8
    Set   *AreaByte[2]  000000C8
    Set   *AreaByte[3]  000000C8
    Set   *AreaByte[4]  000000C8
    Set   *AreaByte[5]  000000C8
    Set   *AreaByte[6]  000000C8
    Wait  30`
    Set   *AreaByte[0]  00000000
    Set   *AreaByte[1]  00000000
    Set   *AreaByte[2]  00000000
    Set   *AreaByte[3]  00000000
    Set   *AreaByte[4]  00000000
    Set   *AreaByte[5]  00000000
    Set   *AreaByte[6]  00000000
    Call  SpeakToPlayer ( 00000000 00120002 00120001 00000000 000A000B ) % Please, Mario... you are our last hope... and we w ...
    Call  EnableNpcShadow   ( 00000000 .False )
    Call  EnableNpcShadow   ( 00000001 .False )
    Call  EnableNpcShadow   ( 00000002 .False )
    Call  EnableNpcShadow   ( 00000003 .False )
    Call  EnableNpcShadow   ( 00000004 .False )
    Call  EnableNpcShadow   ( 00000005 .False )
    Call  EnableNpcShadow   ( 00000006 .False )
    Call  FullyRestoreHPandFP ( )
    Set   *AreaByte[0]  00000064
    Set   *AreaByte[1]  00000064
    Set   *AreaByte[2]  00000064
    Set   *AreaByte[3]  00000064
    Set   *AreaByte[4]  00000064
    Set   *AreaByte[5]  00000064
    Set   *AreaByte[6]  00000064
    SetF  *MapVar[0]  *Fixed[40.0]
    SetF  *MapVar[1]  *Fixed[40.0]
    Loop  00000014
        AddF  *MapVar[0]  *Fixed[-6.0]
        AddF  *MapVar[1]  *Fixed[-6.0]
        Wait  1`
    EndLoop
    Set   *MapFlag[00]  .True
    Set   *AreaByte[0]  00000000
    Set   *AreaByte[1]  00000000
    Set   *AreaByte[2]  00000000
    Set   *AreaByte[3]  00000000
    Set   *AreaByte[4]  00000000
    Set   *AreaByte[5]  00000000
    Set   *AreaByte[6]  00000000
    Call  EnableModel   ( ~Model:1 .False )
    Call  EnableModel   ( ~Model:2 .False )
    Call  EnableModel   ( ~Model:3 .False )
    Call  EnableModel   ( ~Model:4 .False )
    Call  EnableModel   ( ~Model:5 .False )
    Call  EnableModel   ( ~Model:6 .False )
    Call  EnableModel   ( ~Model:7 .False )
    Call  DisablePartnerAI      ( 00000000 )
    Wait  10`
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000014
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance        ( .Cam:Default 0000012C )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[2.0] )
    Call  $Function_80240CB0    ( 00000001 )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  0000001E
    Add   *Var[2]  0000001E
    Call  SetNpcSpeed   ( .Npc:Partner *Fixed[2.0] )
    Call  NpcMoveTo     ( .Npc:Partner *Var[0] *Var[2] 00000000 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Wait  10`
    Call  PlayerFaceNpc ( .Npc:Partner 00000000 )
    Call  SpeakToPlayer ( .Npc:Partner 00010008 00010001 00000000 000A000C ) % Mario... It looks like things are a lot more serio ...
    Call  EnablePartnerAI ( )
    Thread
        Set   *StoryProgress  FFFFFF96
        Call  ResetCam  ( .Cam:Default *Fixed[1.5] )
    EndThread
    Call  FadeOutMusic  ( 00000000 00000BB8 )
    Wait  10`
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_Interact_8024373C
{
    Exec  $Script_802427C8
    Return
    End
}

#new:Script $Script_Aux_80243758
{
    Set   *AreaByte[0]  00000000
    Set   *AreaByte[1]  00000000
    Set   *AreaByte[2]  00000000
    Set   *AreaByte[3]  00000000
    Set   *AreaByte[4]  00000000
    Set   *AreaByte[5]  00000000
    Set   *AreaByte[6]  00000000
    Thread
        Loop
            If  *AreaByte[0]  ==  00000000
                Call  RandInt   ( 0000002D *Var[1] )
                Add   *Var[1]  00000069
                Set   *AreaByte[0]  000000C8
                Wait  10`
                Set   *AreaByte[0]  00000000
                Wait  *Var[1]
            Else
                Wait  1`
            EndIf
        EndLoop
    EndThread
    Thread
        Loop
            If  *AreaByte[1]  ==  00000000
                Call  RandInt   ( 0000002D *Var[1] )
                Add   *Var[1]  00000069
                Set   *AreaByte[1]  000000C8
                Wait  10`
                Set   *AreaByte[1]  00000000
                Wait  *Var[1]
            Else
                Wait  1`
            EndIf
        EndLoop
    EndThread
    Thread
        Loop
            If  *AreaByte[2]  ==  00000000
                Call  RandInt   ( 0000002D *Var[1] )
                Add   *Var[1]  00000069
                Set   *AreaByte[2]  000000C8
                Wait  10`
                Set   *AreaByte[2]  00000000
                Wait  *Var[1]
            Else
                Wait  1`
            EndIf
        EndLoop
    EndThread
    Thread
        Loop
            If  *AreaByte[3]  ==  00000000
                Call  RandInt   ( 0000002D *Var[1] )
                Add   *Var[1]  00000069
                Set   *AreaByte[3]  000000C8
                Wait  10`
                Set   *AreaByte[3]  00000000
                Wait  *Var[1]
            Else
                Wait  1`
            EndIf
        EndLoop
    EndThread
    Thread
        Loop
            If  *AreaByte[4]  ==  00000000
                Call  RandInt   ( 0000002D *Var[1] )
                Add   *Var[1]  00000069
                Set   *AreaByte[4]  000000C8
                Wait  10`
                Set   *AreaByte[4]  00000000
                Wait  *Var[1]
            Else
                Wait  1`
            EndIf
        EndLoop
    EndThread
    Thread
        Loop
            If  *AreaByte[5]  ==  00000000
                Call  RandInt   ( 0000002D *Var[1] )
                Add   *Var[1]  00000069
                Set   *AreaByte[5]  000000C8
                Wait  10`
                Set   *AreaByte[5]  00000000
                Wait  *Var[1]
            Else
                Wait  1`
            EndIf
        EndLoop
    EndThread
    Thread
        Loop
            If  *AreaByte[6]  ==  00000000
                Call  RandInt   ( 0000002D *Var[1] )
                Add   *Var[1]  00000069
                Set   *AreaByte[6]  000000C8
                Wait  10`
                Set   *AreaByte[6]  00000000
                Wait  *Var[1]
            Else
                Wait  1`
            EndIf
        EndLoop
    EndThread
    Loop
        SetF  *Var[0]  00000000
        SetF  *Var[1]  00000000
        Loop  00000014
            AddF  *Var[0]  *Fixed[4.0]
            AddF  *Var[1]  *Fixed[4.0]
            SetF  *Var[2]  *Var[0]
            AddF  *Var[2]  *MapVar[0]
            SetF  *Var[3]  *Var[1]
            AddF  *Var[3]  *MapVar[1]
            If  *Var[2]  <  00000000
                SetF  *Var[2]  *Fixed[0.0]
            EndIf
            If  *Var[3]  <  00000000
                SetF  *Var[3]  *Fixed[0.0]
            EndIf
            Call  802CFD30  ( 00000000 0000000D 00000000 *AreaByte[0] 00000001 *Var[2] )
            Call  802CFD30  ( 00000001 0000000D 00000000 *AreaByte[1] 00000001 *Var[3] )
            Call  802CFD30  ( 00000002 0000000D 00000000 *AreaByte[2] 00000001 *Var[3] )
            Call  802CFD30  ( 00000003 0000000D 00000000 *AreaByte[3] 00000001 *Var[3] )
            Call  802CFD30  ( 00000004 0000000D 00000000 *AreaByte[4] 00000001 *Var[3] )
            Call  802CFD30  ( 00000005 0000000D 00000000 *AreaByte[5] 00000001 *Var[3] )
            Call  802CFD30  ( 00000006 0000000D 00000000 *AreaByte[6] 00000001 *Var[3] )
            Wait  1`
        EndLoop
        Loop  00000014
            AddF  *Var[0]  *Fixed[-4.0]
            AddF  *Var[1]  *Fixed[-4.0]
            SetF  *Var[2]  *Var[0]
            AddF  *Var[2]  *MapVar[0]
            SetF  *Var[3]  *Var[1]
            AddF  *Var[3]  *MapVar[1]
            If  *Var[2]  <  00000000
                SetF  *Var[2]  *Fixed[0.0]
            EndIf
            If  *Var[3]  <  00000000
                SetF  *Var[3]  *Fixed[0.0]
            EndIf
            Call  802CFD30  ( 00000000 0000000D 00000000 *AreaByte[0] 00000001 *Var[2] )
            Call  802CFD30  ( 00000001 0000000D 00000000 *AreaByte[1] 00000001 *Var[3] )
            Call  802CFD30  ( 00000002 0000000D 00000000 *AreaByte[2] 00000001 *Var[3] )
            Call  802CFD30  ( 00000003 0000000D 00000000 *AreaByte[3] 00000001 *Var[3] )
            Call  802CFD30  ( 00000004 0000000D 00000000 *AreaByte[4] 00000001 *Var[3] )
            Call  802CFD30  ( 00000005 0000000D 00000000 *AreaByte[5] 00000001 *Var[3] )
            Call  802CFD30  ( 00000006 0000000D 00000000 *AreaByte[6] 00000001 *Var[3] )
            Wait  1`
        EndLoop
    EndLoop
    Return
    End
}

#new:Script $Script_Init_80244058
{
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_8024373C )
    Call  BindNpcAux        ( .Npc:Self $Script_Aux_80243758 )
    If  *StoryProgress  <  FFFFFF96
        Exec  $Script_80242604
    EndIf
    If  *StoryProgress  >=  FFFFFF96
        Call  SetNpcPos ( 00000000 00000000 FFFFFC18 00000000 )
        Call  SetNpcPos ( 00000001 00000000 FFFFFC18 00000000 )
        Call  SetNpcPos ( 00000002 00000000 FFFFFC18 00000000 )
        Call  SetNpcPos ( 00000003 00000000 FFFFFC18 00000000 )
        Call  SetNpcPos ( 00000004 00000000 FFFFFC18 00000000 )
        Call  SetNpcPos ( 00000005 00000000 FFFFFC18 00000000 )
        Call  SetNpcPos ( 00000006 00000000 FFFFFC18 00000000 )
        Return
    EndIf
    Call  EnableNpcShadow   ( 00000001 .False )
    Call  EnableNpcShadow   ( 00000002 .False )
    Call  EnableNpcShadow   ( 00000003 .False )
    Call  EnableNpcShadow   ( 00000004 .False )
    Call  EnableNpcShadow   ( 00000005 .False )
    Call  EnableNpcShadow   ( 00000006 .False )
    Set   *MapVar[0]  00000028
    Set   *MapVar[1]  FFFFFFB0
    Return
    End
}

#new:NpcGroup $NpcGroup_80244230
{
    00000000 $NpcSettings_80242580 ~Vec3f:NPC_80244230 % -30 260 -170
    00000D09 $Script_Init_80244058 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80244230
    ~AnimationTable:NPC_80244230 % .Sprite:WorldEldstar
    00000000 00000000 00000000 001A000A % He's an old Star Spirit. His name is Eldstar. He r ...
    %
    % $NpcGroup_80244230[1F0]
    00000001 $NpcSettings_80242580 ~Vec3f:NPC_80244420 % 100 260 -215
    00000F09 00000000 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80244420
    ~AnimationTable:NPC_80244420 % .Sprite:WorldMamar
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_80244230[3E0]
    00000002 $NpcSettings_80242580 ~Vec3f:NPC_80244610 % -145 260 -225
    00000F09 00000000 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_80244610
    ~AnimationTable:NPC_80244610 % .Sprite:WorldSkolar
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_80244230[5D0]
    00000003 $NpcSettings_80242580 ~Vec3f:NPC_80244800 % 20 260 -45
    00000F09 00000000 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80244800
    ~AnimationTable:NPC_80244800 % .Sprite:WorldMuskular
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_80244230[7C0]
    00000004 $NpcSettings_80242580 ~Vec3f:NPC_802449F0 % -155 260 -125
    00000F09 00000000 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_802449F0
    ~AnimationTable:NPC_802449F0 % .Sprite:WorldMisstar
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_80244230[9B0]
    00000005 $NpcSettings_80242580 ~Vec3f:NPC_80244BE0 % 90 260 -110
    00000F09 00000000 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80244BE0
    ~AnimationTable:NPC_80244BE0 % .Sprite:WorldKlevar
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_80244230[BA0]
    00000006 $NpcSettings_80242580 ~Vec3f:NPC_80244DD0 % -75 260 -290
    00000F09 00000000 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_80244DD0
    ~AnimationTable:NPC_80244DD0 % .Sprite:WorldKalmar
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_80244FC0
{
    00000007 $NpcGroup_80244230 00000000
    00000000 00000000 00000000
}

PADDING: 80244FD8 to 80244FE0 (00004FD8 to 00004FE0)
00000000 00000000

#new:Script $Script_MakeEntities
{
    Call  MakeEntity        ( .Entity:HiddenPanel ~Vec4d:Entity80244FE0 ~Model:o210 80000000 )
    Call  AssignPanelFlag   ( *Flag_HOS_08 )
    Call  MakeItemEntity    ( .Item:StarPiece ~Vec3d:Item80245018 .ItemSpawnMode:Fixed_NeverVanish *Flag_HOS_0D )
    Return
    End
}

PADDING: 8024504C to 80245050 (0000504C to 00005050)
00000000

#new:Script $Script_80245050
{
    Label  0
    Call  $Function_80240DEC    ( *Var[0] )
    If  *Var[0]  !=  00000010
        Wait  1`
        Goto  0
    EndIf
    Call  DisablePlayerInput        ( .True )
    Call  802D5830      ( 00000001 )
    Call  802D2884      ( FFFFFFE2 FFFFFF60 00000000 )
    Wait  15`
    Call  ShowMessageAtScreenPos    ( 000A005C 000000A0 00000028 ) % Mario, can you hear me...?
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFF9C
    Div   *Var[0]  00000002
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default 0000012C )
    Call  SetCamPitch   ( .Cam:Default *Fixed[17.0] *Fixed[-9.0] )
    Call  SetCamSpeed   ( .Cam:Default 00000003 )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Wait  10`
    Call  ShowMessageAtScreenPos    ( 000A005D 000000A0 00000028 ) % I'm going to open the entrance to Star Way. Enter  ...
    Call  SetMusicTrack ( 00000000 .Song:StarWayOpens 00000000 00000008 )
    Wait  10`
    Call  EnableModel   ( ~Model:power .True )
    Set   *MapVar[B]  00000001
    Label  A
    If  *MapVar[B]  !=  00000002
        Wait  1`
        Goto  A
    EndIf
    Call  UseSettingsFrom       ( .Cam:Default FFFFFF9C 000000F5 00000000 )
    Call  SetPanTarget  ( .Cam:Default FFFFFF9C 000000F5 00000000 )
    Call  SetCamDistance        ( .Cam:Default 00000258 )
    Call  SetCamPitch   ( .Cam:Default *Fixed[17.0] *Fixed[-11.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[1.5] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  PlayEffect    ( 00000075 00000000 FFFFFFE2 000000FA FFFFFF60 00000001 FFFFFFFF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Set   *MapVar[A]  *Var[F]
    Call  $Function_80240AAC    ( *MapVar[A] )
    Call  MakeLerp      ( 00000001 000000FF 00000037 .Easing:QuadraticIn )
    Loop
        Call  UpdateLerp ( )
        Call  $Function_80240B64    ( *MapVar[A] *Var[0] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Wait  45`
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFF9C
    Div   *Var[0]  00000002
    Call  UseSettingsFrom       ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance        ( .Cam:Default 0000012C )
    Call  SetCamPitch   ( .Cam:Default *Fixed[17.0] *Fixed[-9.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Wait  10`
    Call  ShowMessageAtScreenPos    ( 000A005E 000000A0 00000028 ) % We anxiously await you... Mario, make haste to Sta ...
    Call  ResetCam      ( .Cam:Default *Fixed[5.0] )
    Set   *StoryProgress  0000005A
    Call  SetMusicTrack ( 00000000 .Song:ShootingStarSummit 00000000 00000008 )
    Call  802D5830      ( 00000000 )
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80245580
{
    Call  $Function_80240B10    ( *MapVar[A] )
    Call  UseSettingsFrom   ( .Cam:Default FFFFFFE2 000000FA FFFFFF60 )
    Call  SetPanTarget      ( .Cam:Default FFFFFFE2 000000FA FFFFFF60 )
    Call  SetCamSpeed       ( .Cam:Default *Fixed[1.0] )
    Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
    Call  SetPlayerSpeed    ( *Fixed[3.0] )
    Call  PlayerMoveTo      ( FFFFFFE2 FFFFFF60 00000000 )
    Call  InterpPlayerYaw   ( 0000005A 00000000 )
    Call  SetMusicTrack     ( 00000000 .Song:StarWayOpens 00000001 00000008 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .False )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[1.0] )
    Call  NpcJump0  ( .Npc:Partner FFFFFFE2 000000FA FFFFFF56 0000000F )
    Thread
        Set   *Var[2]  0000005A
        Call  MakeLerp  ( 00000001 0000005A 0000003C .Easing:QuadraticIn )
        Loop
            Call  UpdateLerp ( )
            Add   *Var[2]  *Var[0]
            Call  InterpPlayerYaw   ( *Var[2] 00000000 )
            Call  SetNpcRotation    ( .Npc:Partner 00000000 *Var[2] 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Loop
            Add   *Var[2]  *Var[0]
            Call  InterpPlayerYaw   ( *Var[2] 00000000 )
            Call  SetNpcRotation    ( .Npc:Partner 00000000 *Var[2] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Wait  30`
    Call  $Function_80240DD0 ( )
    Thread
        Label  A
        Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        If  *Var[1]  <  000001AE
            Wait  1`
            Goto  A
        EndIf
    EndThread
    Call  GetPlayerPos  ( *Var[2] *Var[3] *Var[4] )
    Set   *Var[5]  *Var[4]
    Add   *Var[5]  FFFFFFF6
    Call  MakeLerp      ( *Var[3] 000002BC 0000005A .Easing:QuadraticIn )
    Loop
        Call  UpdateLerp ( )
        Call  SetPlayerPos  ( *Var[2] *Var[0] *Var[4] )
        Call  SetNpcPos     ( .Npc:Partner *Var[2] *Var[0] *Var[5] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Return
    End
}

PADDING: 80245968 to 80245970 (00005968 to 00005970)
00000000 00000000

#new:ConstDouble $ConstDouble_80245970
{
    1.570796d
}

#new:ConstDouble $ConstDouble_80245978
{
    1.570796d
}

#new:ConstDouble $ConstDouble_80245980
{
    1.570796d
}

#new:ASCII $ASCII_80245988
{
    "kmr_24"
}

#new:ASCII $ASCII_80245990
{
    "hos_00"
}

#new:ASCII $ASCII_80245998
{
    "hos_02"
}

