% Script File: kpa_04.mscr
% Decoded from: 0 to AC0 (kpa_04)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	COPY      A2, V0
	LAH       A1, 8015A550
	LIA       A0, 8010EFC8
	BEQ       A1, A2, .o44
	ADDIU     V0, R0, 14
	LB        V1, B4 (A0)
	BEQ       V1, V0, .o58
	NOP
	.o44
	LW        V0, 14 (A0)
	LUI       V1, FFFF
	AND       V0, V0, V1
	BEQ       V0, R0, .o68
	NOP
	.o58
	JAL       ~Func:set_action_state
	CLEAR     A0
	BEQ       R0, R0, .oA8
	SW        R0, 84 (S0)
	.o68
	BNEL      A1, A2, .oA8
	SW        R0, 84 (S0)
	LB        V1, B4 (A0)
	ADDIU     V0, R0, 14
	BEQ       V1, V0, .o90
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o90
	ADDIU     V0, R0, 2
	BNEL      V1, V0, .oAC
	SW        R0, 84 (S0)
	.o90
	LW        V0, 4 (A0)
	ANDI      V0, V0, 1
	BNEL      V0, R0, .oA8
	SW        R0, 84 (S0)
	ADDIU     V0, R0, 1
	SW        V0, 84 (S0)
	.oA8
	ADDIU     V0, R0, 2
	.oAC
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802400BC
{
	ADDIU     SP, SP, FFD0
	SW        RA, 2C (SP)
	SW        S0, 28 (SP)
	LW        V0, 98 (A0)
	LIA       S0, 8010EFC8
	BNE       V0, R0, .o30
	NOP
	LWC1      F0, 84 (A0)
	CVT.S.W   F0, F0
	BEQ       R0, R0, .o3C
	SWC1      F0, 28 (S0)
	.o30
	LWC1      F0, 84 (A0)
	CVT.S.W   F0, F0
	SWC1      F0, 30 (S0)
	.o3C
	ADDIU     V0, SP, 24
	CLEAR     A0
	ADDIU     A1, SP, 18
	ADDIU     A2, SP, 1C
	LWC1      F0, 28 (S0)
	LIF       F2, 10.0
	LIF       F6, 40.0
	ADDIU     A3, SP, 20
	SWC1      F0, 18 (SP)
	LWC1      F0, 2C (S0)
	LWC1      F4, 30 (S0)
	ADD.S     F0, F0, F2
	SWC1      F6, 24 (SP)
	SWC1      F4, 20 (SP)
	SWC1      F0, 1C (SP)
	JAL       800DCB7C
	SW        V0, 10 (SP)
	LWC1      F0, 18 (SP)
	LWC1      F2, 1C (SP)
	LWC1      F4, 20 (SP)
	SWC1      F0, 28 (S0)
	SWC1      F2, 2C (S0)
	SWC1      F4, 30 (S0)
	LW        RA, 2C (SP)
	LW        S0, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 %  212.0    0.0  150.0  270.0
    ~Vec4f:Entry1 %    0.0    0.0  287.0    0.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000002
    [Background]  00000000
    [MapTattle]   0019016A
}

#new:Script $Script_802401D0
{
    Call  SetMusicTrack ( 00000000 .Song:BowsersCastle 00000000 00000008 )
    Call  UseDoorSounds ( .DoorSounds:Metal )
    Thread
        Wait  30`
        Call  802D5FA4  ( 00000005 )
    EndThread
    Return
    End
}

PADDING: 80240238 to 80240240 (00000238 to 00000240)
00000000 00000000

#new:Script $Script_ExitWalk_80240240
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80240AB0 00000001 ) % kpa_03
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_8024029C
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80240AB8 00000003 ) % kpa_81
    Wait  100`
    Return
    End
}

#new:Script $Script_802402F8
{
    Bind  $Script_ExitWalk_80240240 .Trigger:FloorAbove ~Collider:deiliw 00000001 00000000
    Bind  $Script_ExitWalk_8024029C .Trigger:FloorAbove ~Collider:deilis 00000001 00000000
    Return
    End
}

#new:Script $Script_EnterWalk_80240340
{
    Set   *Var[0]  $Script_802402F8
    Exec  EnterWalk
    Return
    End
}

#new:Script_Main $Script_Main
{
    Set   *WorldMapLocation  .Location:BowsersCastle
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Exec  $Script_80240990
    Exec  $Script_EnterWalk_80240340
    Wait  1`
    Exec  $Script_802401D0
    Return
    End
}

#new:Script $Script_80240430
{
    Loop  00000014
        Call  GetCurrentPartner ( *Var[A] )
        If  *Var[A]  !=  00000000
            Set   *Var[9]  00000000
            Return
        EndIf
        Call  $Function_80240000    ( 00000019 )
        If  *Var[0]  ==  00000000
            Set   *Var[9]  00000000
            Return
        Else
            Call  SetPlayerActionState  ( 00000014 )
        EndIf
        Wait  1`
    EndLoop
    Call  GetCurrentPartner ( *Var[A] )
    If  *Var[A]  !=  00000000
        Set   *Var[9]  00000000
        Return
    EndIf
    Call  DisablePlayerInput    ( .True )
    Call  PlaySoundAtCollider   ( ~Collider:o160 80000010 00000000 )
    Thread
        Call  ShakeCam  ( .Cam:Default 00000000 00000064 *Fixed[0.6] )
    EndThread
    Thread
        Call  EnableGroup   ( ~Model:g22 .True )
        Call  MakeLerp      ( 00000006 00000064 00000064 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            SetF  *Var[A]  *Var[0]
            MulF  *Var[A]  *Fixed[0.01]
            Call  ScaleGroup    ( ~Model:g22 *Var[A] 00000001 00000001 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Thread
        Call  InterpPlayerYaw   ( 0000010E 00000000 )
        Call  SetPlayerActionState  ( 00000014 )
        Call  GetPlayerPos      ( *Var[0] *Var[1] *Var[2] )
        Set   *Var[1]  *Var[0]
        Add   *Var[1]  *Var[B]
        Call  MakeLerp  ( *Var[0] *Var[1] 00000064 .Easing:Linear )
        Loop
            Call  SetPlayerActionState  ( 00000014 )
            Call  UpdateLerp ( )
            Call  $Function_802400BC ( )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  SetPlayerActionState  ( .ActionState:Idle )
        Call  DisablePlayerInput    ( .False )
    EndThread
    Call  MakeLerp  ( 00000000 *Var[B] 00000064 .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  TranslateGroup    ( ~Model:g20 *Var[0] 00000000 00000000 )
        Call  UpdateColliderTransform   ( ~Collider:o160 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Call  StopSound ( 80000010 )
    Return
    End
}

#new:Script $Script_80240808
{
    If  *Byte_KPA_07  !=  00000000
        Return
    EndIf
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    If  *Var[0]  <=  0000001E
        Return
    EndIf
    If  *Var[2]  <=  00000082
        Return
    EndIf
    If  *Var[2]  >=  000000AA
        Return
    EndIf
    If  *Var[0]  >=  00000000
        Set   *Var[9]  00000001
        Set   *Var[B]  FFFFFFCE
        ExecWait  $Script_80240430
    Else
        Set   *Var[9]  00000002
        Set   *Var[B]  00000032
        ExecWait  $Script_80240430
    EndIf
    Set   *Byte_KPA_07  *Var[9]
    If  *Byte_KPA_07  !=  00000000
        Call  EnableModel   ( ~Model:o187 .True )
        Call  EnableModel   ( ~Model:o180 .True )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:deilitts 7FFFFE00 )
    EndIf
    Return
    End
}

#new:Script $Script_80240990
{
    Call  ParentColliderToModel ( ~Collider:o160 ~Model:o103 )
    Switch  *Byte_KPA_07
        Case  ==  00000000
            Bind  $Script_80240808 .Trigger:WallPush ~Collider:o160 00000001 00000000
            Call  EnableGroup   ( ~Model:g22 .False )
        Case  ==  00000001
            Call  TranslateGroup        ( ~Model:g20 FFFFFFCE 00000000 00000000 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:deilitts 7FFFFE00 )
        Case  ==  00000002
            Call  TranslateGroup        ( ~Model:g20 00000032 00000000 00000000 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:deilitts 7FFFFE00 )
    EndSwitch
    Call  UpdateColliderTransform   ( ~Collider:o160 )
    Call  ModifyColliderFlags       ( 00000000 ~Collider:deiliwtt 7FFFFE00 )
    Return
    End
}

PADDING: 80240AAC to 80240AB0 (00000AAC to 00000AB0)
00000000

#new:ASCII $ASCII_80240AB0
{
    "kpa_03"
}

#new:ASCII $ASCII_80240AB8
{
    "kpa_81"
}

