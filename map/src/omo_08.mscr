% Script File: omo_08.mscr
% Decoded from: 0 to 8900 (omo_08)

#new:Function $Function_80240000
{
	LIA       V1, 800B1D80
	LHU       V0, 2 (V1)
	ANDI      V0, V0, FFFE
	SH        V0, 2 (V1)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_8024001C
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	MOV.S     F12, F24
	MFC1      A2, F20
	MFC1      A3, F0
	JAL       ~Func:atan2
	MOV.S     F14, F22
	JAL       ~Func:clamp_angle
	MOV.S     F12, F0
	COPY      A0, S1
	MFC1      A2, F0
	JAL       ~Func:set_float_variable
	COPY      A1, S2
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_802400E4
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	C.LT.S    F0, F20
	NOP
	BC1F      .o58
	COPY      A0, S1
	LW        A1, 0 (S0)
	BEQ       R0, R0, .o60
	ADDIU     A2, R0, 1
	.o58
	LW        A1, 0 (S0)
	CLEAR     A2
	.o60
	JAL       ~Func:set_variable
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80240168
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S0, V0
	MULT      S0, V0
	ADDIU     V0, R0, 2
	LW        V1, 138 (S2)
	MFLO      A2
	ADDU      S1, S1, A2
	SLLV      S1, S1, V0
	ADDU      V1, V1, S1
	SW        V1, 138 (S2)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802401EC
{
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	LIA       V0, 8010EFC8
	SWC1      F24, 28 (V0)
	SWC1      F22, 2C (V0)
	SWC1      F20, 30 (V0)
	SWC1      F0, 80 (V0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38
}

#new:Function $Function_80240290
{
	ADDIU     SP, SP, FFC0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F26, 38 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	COPY      S2, V0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	COPY      A0, S2
	JAL       ~Func:get_npc_safe
	MOV.S     F22, F0
	COPY      A0, V0
	SWC1      F26, 38 (A0)
	MOV.S     F0, F26
	SWC1      F24, 3C (A0)
	MOV.S     F2, F24
	SWC1      F20, 40 (A0)
	MOV.S     F4, F20
	LW        V1, 0 (A0)
	LUI       A1, 1
	SWC1      F22, C (A0)
	SWC1      F0, 6C (A0)
	SWC1      F2, 70 (A0)
	SWC1      F4, 74 (A0)
	OR        V1, V1, A1
	SW        V1, 0 (A0)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 38 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80240388
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80240518
{
	LIA       V1, 8007419C
	LW        V0, 0 (V1)
	SW        R0, 84 (A0)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 8000
	BEQ       V0, R0, .o24
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o24
	LW        V0, 0 (V1)
	LW        V0, 10 (V0)
	ANDI      V0, V0, 4000
	BEQ       V0, R0, .o3C
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o3C
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_8024055C
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o30
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o40
	ADDU      V0, V1, V0
	.o30
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o44
	SUBU      V0, V1, A0
	.o40
	SW        V0, A8 (S0)
	.o44
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o64
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o74
	ADDU      V0, V1, V0
	.o64
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o78
	SUBU      V0, V1, A0
	.o74
	SW        V0, AC (S0)
	.o78
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o98
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA8
	ADDU      V0, V1, V0
	.o98
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oAC
	SUBU      V0, V1, A0
	.oA8
	SW        V0, B0 (S0)
	.oAC
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oCC
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oDC
	ADDU      V0, V1, V0
	.oCC
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE0
	SUBU      V0, V1, A0
	.oDC
	SW        V0, B4 (S0)
	.oE0
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240680
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o24
	SW        RA, 14 (SP)
	SW        R0, 70 (S0)
	SW        R0, 74 (S0)
	SW        R0, 78 (S0)
	SW        R0, 7C (S0)
	.o24
	LW        V0, 70 (S0)
	BNE       V0, R0, .o64
	NOP
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o50
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o60
	ADDU      V0, V1, V0
	.o50
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o64
	SUBU      V0, V1, A0
	.o60
	SW        V0, A8 (S0)
	.o64
	LW        V0, 74 (S0)
	BNE       V0, R0, .oA4
	NOP
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o90
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA0
	ADDU      V0, V1, V0
	.o90
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oA4
	SUBU      V0, V1, A0
	.oA0
	SW        V0, AC (S0)
	.oA4
	LW        V0, 78 (S0)
	BNE       V0, R0, .oE4
	NOP
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oD0
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oE0
	ADDU      V0, V1, V0
	.oD0
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE4
	SUBU      V0, V1, A0
	.oE0
	SW        V0, B0 (S0)
	.oE4
	LW        V0, 7C (S0)
	BNE       V0, R0, .o124
	NOP
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o110
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o120
	ADDU      V0, V1, V0
	.o110
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o124
	SUBU      V0, V1, A0
	.o120
	SW        V0, B4 (S0)
	.o124
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        V0, 70 (S0)
	LW        V1, 78 (S0)
	LW        A0, 98 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 70 (S0)
	LW        V0, 74 (S0)
	ADDIU     V1, V1, 1
	SW        V1, 78 (S0)
	LW        V1, 70 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 74 (S0)
	LW        V0, 7C (S0)
	SLT       V1, V1, A0
	ADDIU     V0, V0, 1
	BNE       V1, R0, .o198
	SW        V0, 7C (S0)
	SW        R0, 70 (S0)
	.o198
	LW        V0, 74 (S0)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1AC
	SW        R0, 74 (S0)
	.o1AC
	LW        V0, 78 (S0)
	LW        V1, A0 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1C0
	SW        R0, 78 (S0)
	.o1C0
	LW        V0, 7C (S0)
	LW        V1, A4 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1D4
	SW        R0, 7C (S0)
	.o1D4
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240868 to 80240870 (00000868 to 00000870)
00000000 00000000

#new:Function $Function_80240870
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	LWC1      F0, 18 (V0)
	LAD       F2, $ConstDouble_80248760
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 18 (V0)
	LW        V1, CC (S0)
	LW        A0, 30 (V1)
	ADDIU     V1, R0, 5
	SH        V1, 8E (V0)
	SW        A0, 28 (V0)
	ADDIU     V0, R0, F
	SW        V0, 70 (S1)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802408E0
{
	ADDIU     SP, SP, FFD0
	SW        S2, 28 (SP)
	COPY      S2, A0
	SW        RA, 2C (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	LW        S1, 148 (S2)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S1)
	COPY      S0, V0
	COPY      A0, S0
	LWC1      F0, C (S0)
	ADDIU     A2, SP, 18
	SWC1      F0, 18 (SP)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	LW        A1, 18 (S0)
	JAL       8004A784
	CLEAR     A3
	BNE       V0, R0, .o64
	NOP
	LW        A1, 18 (S0)
	LW        A2, C (S0)
	JAL       ~Func:npc_move_heading
	COPY      A0, S0
	.o64
	LHU       V0, 8E (S0)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (S0)
	SLL       V0, V0, 10
	BNE       V0, R0, .oB8
	NOP
	LWC1      F0, 18 (S0)
	LAD       F2, $ConstDouble_80248768
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F2
	NOP
	CVT.S.D   F0, F0
	SWC1      F0, 18 (S0)
	LW        V0, CC (S1)
	LW        V1, 2C (V0)
	ADDIU     V0, R0, A
	SH        V0, 8E (S0)
	ADDIU     V0, R0, 10
	SW        V1, 28 (S0)
	SW        V0, 70 (S2)
	.oB8
	LW        RA, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_802409B0
{
	ADDIU     SP, SP, FFD0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	LW        V0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (V0)
	COPY      S0, V0
	COPY      A0, S0
	LWC1      F0, C (S0)
	ADDIU     A2, SP, 18
	SWC1      F0, 18 (SP)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	LW        A1, 18 (S0)
	JAL       8004A784
	CLEAR     A3
	BNE       V0, R0, .o60
	NOP
	LW        A1, 18 (S0)
	LW        A2, C (S0)
	JAL       ~Func:npc_move_heading
	COPY      A0, S0
	.o60
	LHU       V0, 8E (S0)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (S0)
	SLL       V0, V0, 10
	BNE       V0, R0, .o84
	ADDIU     V0, R0, 1E
	SH        V0, 8E (S0)
	ADDIU     V0, R0, 11
	SW        V0, 70 (S1)
	.o84
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80240A48
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	COPY      V1, V0
	LHU       V0, 8E (V1)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (V1)
	SLL       V0, V0, 10
	BNE       V0, R0, .o4C
	NOP
	LW        V0, CC (S0)
	LW        V0, 0 (V0)
	SW        V0, 28 (V1)
	SW        R0, 70 (S1)
	.o4C
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80240AA8
{
	ADDIU     SP, SP, FF98
	SW        S3, 54 (SP)
	COPY      S3, A0
	SW        RA, 60 (SP)
	SW        S5, 5C (SP)
	SW        S4, 58 (SP)
	SW        S2, 50 (SP)
	SW        S1, 4C (SP)
	SW        S0, 48 (SP)
	LW        S1, 148 (S3)
	LH        A0, 8 (S1)
	JAL       ~Func:get_npc_unsafe
	COPY      S0, A1
	LW        V1, C (S3)
	COPY      A0, S3
	LW        A1, 0 (V1)
	JAL       ~Func:get_variable
	COPY      S2, V0
	SW        R0, 18 (SP)
	LW        V1, D0 (S1)
	LW        V1, 30 (V1)
	SW        V1, 1C (SP)
	LW        V1, D0 (S1)
	LW        V1, 1C (V1)
	SW        V1, 20 (SP)
	LW        V1, D0 (S1)
	LW        V1, 24 (V1)
	SW        V1, 24 (SP)
	LW        V1, D0 (S1)
	LW        V1, 28 (V1)
	ADDIU     S5, SP, 18
	SW        V1, 28 (SP)
	LW        V1, D0 (S1)
	LIF       F0, 65.0
	LW        V1, 2C (V1)
	COPY      S4, V0
	SWC1      F0, 30 (SP)
	SH        R0, 34 (SP)
	BNE       S0, R0, .oB4
	SW        V1, 2C (SP)
	LW        V0, B0 (S1)
	ANDI      V0, V0, 4
	BEQ       V0, R0, .o1C0
	NOP
	.oB4
	ADDIU     A0, R0, F7FF
	SW        R0, 70 (S3)
	SH        R0, 8E (S2)
	LW        V0, CC (S1)
	LW        V1, 0 (S2)
	LW        V0, 0 (V0)
	AND       V1, V1, A0
	SW        V1, 0 (S2)
	SW        V0, 28 (S2)
	LW        V0, D0 (S1)
	LW        V0, 34 (V0)
	BNEL      V0, R0, .oF8
	ADDIU     V0, R0, FDFF
	ORI       V0, V1, 200
	ADDIU     V1, R0, FFF7
	BEQ       R0, R0, .o100
	AND       V0, V0, V1
	.oF8
	AND       V0, V1, V0
	ORI       V0, V0, 8
	.o100
	SW        V0, 0 (S2)
	LW        V0, B0 (S1)
	ANDI      V0, V0, 4
	BEQ       V0, R0, .o120
	ADDIU     V0, R0, 63
	SW        V0, 70 (S3)
	BEQ       R0, R0, .o138
	SW        R0, 74 (S3)
	.o120
	LW        V0, 0 (S1)
	LUI       V1, 4000
	AND       V0, V0, V1
	BEQ       V0, R0, .o138
	ADDIU     V0, R0, C
	SW        V0, 70 (S3)
	.o138
	LIO       A2, BFFFFFFF
	ADDIU     A1, SP, 38
	ADDIU     A0, R0, FFFB
	LW        V0, B0 (S1)
	LW        V1, 0 (S1)
	LIF       F0, 100.0
	AND       V0, V0, A0
	AND       V1, V1, A2
	SW        V0, B0 (S1)
	SW        V1, 0 (S1)
	LH        V0, A8 (S2)
	ADDIU     A3, SP, 40
	SWC1      F0, 44 (SP)
	LWC1      F6, 38 (S2)
	LWC1      F0, 3C (S2)
	LWC1      F2, 40 (S2)
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	ADDIU     V0, SP, 44
	ADD.S     F0, F0, F4
	SWC1      F6, 38 (SP)
	SWC1      F2, 40 (SP)
	SWC1      F0, 3C (SP)
	SW        V0, 10 (SP)
	LW        A0, 80 (S2)
	JAL       800DCB7C
	ADDIU     A2, SP, 3C
	BEQ       V0, R0, .o1C0
	NOP
	LWC1      F0, 3C (SP)
	SWC1      F0, 3C (S2)
	.o1C0
	LW        V1, 70 (S3)
	SLTIU     V0, V1, 64
	BEQ       V0, R0, .o30C
	SLL       V0, V1, 2
	LTW       V0, V0 ($JumpTable_80248770)
	JR        V0
	NOP
    % LBL: from $JumpTable_80248770 , entry 0`
	COPY      A0, S3
	COPY      A1, S4
	JAL       800495A0
	COPY      A2, S5
    % LBL: from $JumpTable_80248770 , entry 1`
	COPY      A0, S3
	COPY      A1, S4
	JAL       800496B8
	COPY      A2, S5
	BEQ       R0, R0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 2`
	COPY      A0, S3
	COPY      A1, S4
	JAL       80049B44
	COPY      A2, S5
    % LBL: from $JumpTable_80248770 , entry 3`
	COPY      A0, S3
	COPY      A1, S4
	JAL       80049C04
	COPY      A2, S5
	BEQ       R0, R0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 10`
	COPY      A0, S3
	COPY      A1, S4
	JAL       80049E3C
	COPY      A2, S5
    % LBL: from $JumpTable_80248770 , entry 11`
	COPY      A0, S3
	COPY      A1, S4
	JAL       80049ECC
	COPY      A2, S5
	BEQ       R0, R0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 12`
	COPY      A0, S3
	COPY      A1, S4
	JAL       80049F7C
	COPY      A2, S5
    % LBL: from $JumpTable_80248770 , entry 13`
	COPY      A0, S3
	COPY      A1, S4
	JAL       8004A124
	COPY      A2, S5
	LW        V1, 70 (S3)
	ADDIU     V0, R0, E
	BNE       V1, V0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 14`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240870
	COPY      A2, S5
	LW        V1, 70 (S3)
	ADDIU     V0, R0, F
	BNE       V1, V0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 15`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_802408E0
	COPY      A2, S5
	LW        V1, 70 (S3)
	ADDIU     V0, R0, 10
	BNE       V1, V0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 16`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_802409B0
	COPY      A2, S5
	LW        V1, 70 (S3)
	ADDIU     V0, R0, 11
	BNE       V1, V0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 17`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240A48
	COPY      A2, S5
	BEQ       R0, R0, .o30C
	NOP
    % LBL: from $JumpTable_80248770 , entry 99`
	JAL       8004A73C
	COPY      A0, S3
    % LBL: from $JumpTable_80248770 , entry 98`
	.o30C
	LW        RA, 60 (SP)
	LW        S5, 5C (SP)
	LW        S4, 58 (SP)
	LW        S3, 54 (SP)
	LW        S2, 50 (SP)
	LW        S1, 4C (SP)
	LW        S0, 48 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 68
}

PADDING: 80240DDC to 80240DE0 (00000DDC to 00000DE0)
00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 %  333.0    0.0  333.0  315.0
    ~Vec4f:Entry1 % -335.0   10.0 -335.0  135.0
    ~Vec4f:Entry2 %  340.0   10.0 -340.0  225.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000003
    [Background]  80200000
    [MapTattle]   001900E0
}

#new:Script $Script_80240E50
{
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
    Else
        Call  GetEntryID    ( *Var[0] )
        If  *Var[0]  ==  ~Entry:Entry0
            Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
        Else
            Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
        EndIf
    EndIf
    Return
    End
}

PADDING: 80240F14 to 80240F20 (00000F14 to 00000F20)
00000000 00000000 00000000

#new:Script $Script_ExitWalk_80240F20
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80248730 00000000 ) % omo_09
    Wait  100`
    Return
    End
}

#new:Script $Script_80240F7C
{
    Bind  $Script_ExitWalk_80240F20 .Trigger:FloorAbove ~Collider:deili3 00000001 00000000
    Return
    End
}

#new:Script $Script_EnterWalk_80240FA8
{
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Exec  EnterSavePoint
        Exec  $Script_80240F7C
        Return
    EndIf
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry0
        Set   *Var[0]  $Script_80240F7C
        Exec  EnterWalk
        Wait  1`
    Else
        Exec  $Script_80240F7C
        Wait  3`
    EndIf
    Return
    End
}

#new:Script_Main $Script_Main
{
    Set   *WorldMapLocation  .Location:ShyGuysToybox
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Call  MakeNpcs  ( 00000001 $NpcGroupList_802486DC )
    ExecWait  $Script_MakeEntities
    ExecWait  $Script_80240E50
    ExecWait  $Script_80247450
    ExecWait  $Script_80243A68
    Exec  $Script_EnterWalk_80240FA8
    Wait  1`
    Return
    End
}

#new:Unknown $???_80241160
{
    00000000 0000005D 0000005A 0000005C 00000059
}

#new:Unknown $???_80241174
{
    00000001 00000064 00000061 00000063 00000060
}

#new:Unknown $???_80241188
{
    00000002 0000006B 00000068 0000006A 00000067
}

#new:Unknown $???_8024119C
{
    00000003 00000072 0000006F 00000071 0000006E
}

#new:Script $Script_802411B0
{
    Call  EnableModel   ( ~Model:bm1_1 .True )
    Call  EnableModel   ( ~Model:b1_1 .True )
    Call  EnableModel   ( ~Model:bm1_2 .False )
    Call  EnableModel   ( ~Model:b1_2 .False )
    Return
    End
}

#new:Script $Script_80241210
{
    Call  EnableModel   ( ~Model:bm2_1 .True )
    Call  EnableModel   ( ~Model:b2_1 .True )
    Call  EnableModel   ( ~Model:bm2_2 .False )
    Call  EnableModel   ( ~Model:b2_2 .False )
    Return
    End
}

#new:Script $Script_80241270
{
    Call  EnableModel   ( ~Model:bm3_1 .True )
    Call  EnableModel   ( ~Model:b3_1 .True )
    Call  EnableModel   ( ~Model:bm3_2 .False )
    Call  EnableModel   ( ~Model:b3_2 .False )
    Return
    End
}

#new:Script $Script_802412D0
{
    Call  EnableModel   ( ~Model:bm4_1 .True )
    Call  EnableModel   ( ~Model:b4_1 .True )
    Call  EnableModel   ( ~Model:bm4_2 .False )
    Call  EnableModel   ( ~Model:b4_2 .False )
    Return
    End
}

#new:Script $Script_80241330
{
    Call  EnableModel   ( ~Model:bm1_1 .False )
    Call  EnableModel   ( ~Model:b1_1 .False )
    Call  EnableModel   ( ~Model:bm1_2 .True )
    Call  EnableModel   ( ~Model:b1_2 .True )
    Return
    End
}

#new:Script $Script_80241390
{
    Call  EnableModel   ( ~Model:bm2_1 .False )
    Call  EnableModel   ( ~Model:b2_1 .False )
    Call  EnableModel   ( ~Model:bm2_2 .True )
    Call  EnableModel   ( ~Model:b2_2 .True )
    Return
    End
}

#new:Script $Script_802413F0
{
    Call  EnableModel   ( ~Model:bm3_1 .False )
    Call  EnableModel   ( ~Model:b3_1 .False )
    Call  EnableModel   ( ~Model:bm3_2 .True )
    Call  EnableModel   ( ~Model:b3_2 .True )
    Return
    End
}

#new:Script $Script_80241450
{
    Call  EnableModel   ( ~Model:bm4_1 .False )
    Call  EnableModel   ( ~Model:b4_1 .False )
    Call  EnableModel   ( ~Model:bm4_2 .True )
    Call  EnableModel   ( ~Model:b4_2 .True )
    Return
    End
}

#new:Script $Script_802414B0
{
    Label  0
    Call  GetNpcPos ( 00000002 *Var[0] *Var[1] *Var[2] )
    Call  GetNpcPos ( 00000003 *Var[0] *Var[2] *Var[3] )
    Call  GetNpcPos ( 00000004 *Var[0] *Var[3] *Var[4] )
    Call  GetNpcPos ( 00000005 *Var[0] *Var[4] *Var[5] )
    Add   *Var[1]  *Var[2]
    Add   *Var[1]  *Var[3]
    Add   *Var[1]  *Var[4]
    If  *Var[1]  !=  FFFFF060
        Wait  1`
        Goto  0
    EndIf
    Thread
        Exec  $Script_802411B0
        Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm1_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm1_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Wait  2`
    Thread
        Exec  $Script_80241210
        Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm2_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm2_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Wait  3`
    Thread
        Exec  $Script_80241270
        Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm3_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm3_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Wait  3`
    Exec  $Script_802412D0
    Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:CosInOut )
    Loop
        Call  UpdateLerp ( )
        Call  RotateModel   ( ~Model:bm4_2 *Var[0] FFFFFFFF 00000000 00000000 )
        Call  RotateModel   ( ~Model:bm4_1 *Var[0] FFFFFFFF 00000000 00000000 )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *MapVar[F]  00000000
    Set   *MapVar[E]  00000000
    Call  EnableModel   ( ~Model:bm1_2 .False )
    Call  EnableModel   ( ~Model:b1_2 .False )
    Set   *Var[0]  $???_80241160
    Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o907 00000001 00000000
    Call  EnableModel   ( ~Model:bm2_2 .False )
    Call  EnableModel   ( ~Model:b2_2 .False )
    Set   *Var[0]  $???_80241174
    Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o911 00000001 00000000
    Call  EnableModel   ( ~Model:bm3_2 .False )
    Call  EnableModel   ( ~Model:b3_2 .False )
    Set   *Var[0]  $???_80241188
    Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o915 00000001 00000000
    Call  EnableModel   ( ~Model:bm4_2 .False )
    Call  EnableModel   ( ~Model:b4_2 .False )
    Set   *Var[0]  $???_8024119C
    Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o918 00000001 00000000
    Return
    End
}

#new:Script $Script_80241A30
{
    Set   *Var[0]  00000004
    Loop  00000003
        Exec  $Script_802411B0
        Wait  *Var[0]
        Exec  $Script_80241210
        Wait  *Var[0]
        Exec  $Script_80241270
        Wait  *Var[0]
        Exec  $Script_802412D0
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o907 000001A6 00000000 )
        Exec  $Script_80241330
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o911 000001A5 00000000 )
        Exec  $Script_80241390
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o915 000001A7 00000000 )
        Exec  $Script_802413F0
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o918 000001A8 00000000 )
        Exec  $Script_80241450
        Wait  *Var[0]
        Sub   *Var[0]  00000001
    EndLoop
    Wait  4`
    Set   *Var[0]  00000004
    Loop  00000003
        Exec  $Script_802411B0
        Exec  $Script_80241210
        Exec  $Script_80241270
        Exec  $Script_802412D0
        Wait  *Var[0]
        Call  PlaySound ( 000001A9 )
        Exec  $Script_80241330
        Exec  $Script_80241390
        Exec  $Script_802413F0
        Exec  $Script_80241450
        Wait  *Var[0]
        Sub   *Var[0]  00000001
    EndLoop
    Wait  2`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm1_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm1_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:b1_1 )
        Call  MakeItemEntity    ( .Item:Coin *Var[0] 00000028 *Var[2] .ItemSpawnMode:BattleReward 00000000 )
    EndThread
    Wait  3`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm2_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm2_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:b2_1 )
        Call  MakeItemEntity    ( .Item:Coin *Var[0] 00000028 *Var[2] .ItemSpawnMode:BattleReward 00000000 )
    EndThread
    Wait  3`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm3_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm3_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:b3_1 )
        Call  MakeItemEntity    ( .Item:Coin *Var[0] 00000028 *Var[2] .ItemSpawnMode:BattleReward 00000000 )
    EndThread
    Wait  3`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm4_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm4_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:b4_1 )
        Call  MakeItemEntity    ( .Item:Coin *Var[0] 00000028 *Var[2] .ItemSpawnMode:BattleReward 00000000 )
        Wait  20`
        Call  ResetCam  ( .Cam:Default 00000002 )
    EndThread
    Return
    End
}

#new:Script $Script_8024205C
{
    Call  DisablePlayerInput    ( .True )
    Loop  00000004
        Exec  $Script_802411B0
        Wait  3`
        Exec  $Script_80241210
        Wait  3`
        Exec  $Script_80241270
        Wait  3`
        Exec  $Script_802412D0
        Wait  3`
        Call  PlaySoundAtCollider   ( ~Collider:o907 000001A6 00000000 )
        Exec  $Script_80241330
        Wait  3`
        Call  PlaySoundAtCollider   ( ~Collider:o911 000001A5 00000000 )
        Exec  $Script_80241390
        Wait  3`
        Call  PlaySoundAtCollider   ( ~Collider:o915 000001A7 00000000 )
        Exec  $Script_802413F0
        Wait  3`
        Call  PlaySoundAtCollider   ( ~Collider:o918 000001A8 00000000 )
        Exec  $Script_80241450
        Wait  3`
    EndLoop
    Call  UseSettingsFrom   ( .Cam:Default 000000A0 0000000A FFFFFF38 )
    Call  SetPanTarget  ( .Cam:Default 000000A0 0000000A FFFFFF38 )
    Call  SetCamDistance    ( .Cam:Default 000002BC )
    Call  SetCamPitch   ( .Cam:Default 00000028 *Fixed[-4.5] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[2.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  30`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 00000028 .Easing:CubicIn )
        Loop
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:t1 *Var[0] 00000001 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:o875 )
        Call  PlaySoundAt   ( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  ShakeCam      ( .Cam:Default 00000000 00000003 *Fixed[0.8] )
    EndThread
    Wait  10`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 00000028 .Easing:CubicIn )
        Loop
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:t2 *Var[0] 00000001 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:o877 )
        Call  PlaySoundAt   ( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  ShakeCam      ( .Cam:Default 00000000 00000003 *Fixed[0.8] )
    EndThread
    Wait  10`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 00000028 .Easing:CubicIn )
        Loop
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:t3 *Var[0] 00000001 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:o879 )
        Call  PlaySoundAt   ( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  ShakeCam      ( .Cam:Default 00000000 00000003 *Fixed[0.8] )
    EndThread
    Wait  10`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 00000028 .Easing:CubicIn )
        Loop
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:t4 *Var[0] 00000001 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetModelCenter    ( ~Model:o881 )
        Call  PlaySoundAt   ( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
        Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  ShakeCam      ( .Cam:Default 00000000 00000003 *Fixed[0.8] )
    EndThread
    Wait  100`
    Call  UseSettingsFrom   ( .Cam:Default 00000064 00000000 00000172 )
    Call  SetPanTarget  ( .Cam:Default 00000064 00000000 00000172 )
    Call  SetCamDistance    ( .Cam:Default FFFFFE3E )
    Call  SetCamPitch   ( .Cam:Default 00000010 *Fixed[-6.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  10`
    Thread
        Call  GetModelCenter        ( ~Model:b1_1 )
        Call  SetGroupEnabled       ( ~Model:b1 00000000 )
        Call  PlaySoundAtCollider   ( ~Collider:o907 00002098 00000000 )
        Loop  00000004
            Set   *Var[3]  00000014
            Call  RandInt   ( 00000028 *Var[6] )
            Sub   *Var[3]  *Var[6]
            Add   *Var[3]  *Var[0]
            Set   *Var[4]  00000014
            Call  RandInt   ( 00000028 *Var[7] )
            Sub   *Var[4]  *Var[7]
            Add   *Var[4]  *Var[1]
            Set   *Var[5]  00000014
            Call  RandInt   ( 00000028 *Var[8] )
            Sub   *Var[5]  *Var[8]
            Add   *Var[5]  *Var[2]
            Call  PlayEffect    ( ~FX:Explosion1 *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Wait  30`
    Thread
        Call  GetModelCenter        ( ~Model:b2_1 )
        Call  SetGroupEnabled       ( ~Model:b2 00000000 )
        Call  PlaySoundAtCollider   ( ~Collider:o911 00002098 00000000 )
        Loop  00000004
            Set   *Var[3]  00000014
            Call  RandInt   ( 00000028 *Var[6] )
            Sub   *Var[3]  *Var[6]
            Add   *Var[3]  *Var[0]
            Set   *Var[4]  00000014
            Call  RandInt   ( 00000028 *Var[7] )
            Sub   *Var[4]  *Var[7]
            Add   *Var[4]  *Var[1]
            Set   *Var[5]  00000014
            Call  RandInt   ( 00000028 *Var[8] )
            Sub   *Var[5]  *Var[8]
            Add   *Var[5]  *Var[2]
            Call  PlayEffect    ( ~FX:Explosion1 *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Wait  30`
    Thread
        Call  GetModelCenter        ( ~Model:b3_1 )
        Call  SetGroupEnabled       ( ~Model:b3 00000000 )
        Call  PlaySoundAtCollider   ( ~Collider:o915 00002098 00000000 )
        Loop  00000004
            Set   *Var[3]  00000014
            Call  RandInt   ( 00000028 *Var[6] )
            Sub   *Var[3]  *Var[6]
            Add   *Var[3]  *Var[0]
            Set   *Var[4]  00000014
            Call  RandInt   ( 00000028 *Var[7] )
            Sub   *Var[4]  *Var[7]
            Add   *Var[4]  *Var[1]
            Set   *Var[5]  00000014
            Call  RandInt   ( 00000028 *Var[8] )
            Sub   *Var[5]  *Var[8]
            Add   *Var[5]  *Var[2]
            Call  PlayEffect    ( ~FX:Explosion1 *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Wait  30`
    Thread
        Call  GetModelCenter        ( ~Model:b4_1 )
        Call  SetGroupEnabled       ( ~Model:b4 00000000 )
        Call  PlaySoundAtCollider   ( ~Collider:o918 00002098 00000000 )
        Loop  00000004
            Set   *Var[3]  00000014
            Call  RandInt   ( 00000028 *Var[6] )
            Sub   *Var[3]  *Var[6]
            Add   *Var[3]  *Var[0]
            Set   *Var[4]  00000014
            Call  RandInt   ( 00000028 *Var[7] )
            Sub   *Var[4]  *Var[7]
            Add   *Var[4]  *Var[1]
            Set   *Var[5]  00000014
            Call  RandInt   ( 00000028 *Var[8] )
            Sub   *Var[5]  *Var[8]
            Add   *Var[5]  *Var[2]
            Call  PlayEffect    ( ~FX:Explosion1 *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
            Wait  2`
        EndLoop
    EndThread
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o907 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o911 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o915 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o918 7FFFFE00 )
    Wait  20`
    Call  ResetCam  ( .Cam:Default 00000002 )
    Set   *StoryProgress  00000000
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80242E6C
{
    Set   *Var[0]  00000004
    Loop  00000003
        Exec  $Script_802411B0
        Wait  *Var[0]
        Exec  $Script_80241210
        Wait  *Var[0]
        Exec  $Script_80241270
        Wait  *Var[0]
        Exec  $Script_802412D0
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o907 000001A6 00000000 )
        Exec  $Script_80241450
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o911 000001A5 00000000 )
        Exec  $Script_802413F0
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o915 000001A7 00000000 )
        Exec  $Script_80241390
        Wait  *Var[0]
        Call  PlaySoundAtCollider   ( ~Collider:o918 000001A8 00000000 )
        Exec  $Script_80241330
        Wait  *Var[0]
        Sub   *Var[0]  00000001
    EndLoop
    Wait  4`
    Set   *Var[0]  00000004
    Loop  00000003
        Exec  $Script_802411B0
        Exec  $Script_80241210
        Exec  $Script_80241270
        Exec  $Script_802412D0
        Wait  *Var[0]
        Call  PlaySound ( 000001A9 )
        Exec  $Script_80241330
        Exec  $Script_80241390
        Exec  $Script_802413F0
        Exec  $Script_80241450
        Wait  *Var[0]
        Sub   *Var[0]  00000001
    EndLoop
    Wait  2`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm1_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm1_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  PlaySoundAtCollider   ( ~Collider:o907 0000032C 00000000 )
        Call  GetModelCenter    ( ~Model:b1_1 )
        Call  SetNpcPos ( 00000002 *Var[0] *Var[1] *Var[2] )
        Call  SetNpcJumpscale   ( 00000002 *Fixed[1.0] )
        Add   *Var[2]  0000003C
        Call  NpcJump0  ( 00000002 *Var[0] 00000000 *Var[2] 00000014 )
        Call  SetNpcFlagBits    ( 00000002 00000040 .False )
    EndThread
    Wait  3`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm2_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm2_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  PlaySoundAtCollider   ( ~Collider:o911 0000032C 00000000 )
        Call  GetModelCenter    ( ~Model:b2_1 )
        Call  SetNpcPos ( 00000003 *Var[0] *Var[1] *Var[2] )
        Call  SetNpcJumpscale   ( 00000003 *Fixed[1.0] )
        Add   *Var[2]  0000003C
        Call  NpcJump0  ( 00000003 *Var[0] 00000000 *Var[2] 00000014 )
        Call  SetNpcFlagBits    ( 00000003 00000040 .False )
    EndThread
    Wait  3`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm3_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm3_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  PlaySoundAtCollider   ( ~Collider:o915 0000032C 00000000 )
        Call  GetModelCenter    ( ~Model:b3_1 )
        Call  SetNpcPos ( 00000004 *Var[0] *Var[1] *Var[2] )
        Call  SetNpcJumpscale   ( 00000004 *Fixed[1.0] )
        Add   *Var[2]  0000003C
        Call  NpcJump0  ( 00000004 *Var[0] 00000000 *Var[2] 00000014 )
        Call  SetNpcFlagBits    ( 00000004 00000040 .False )
    EndThread
    Wait  3`
    Thread
        Call  MakeLerp  ( 00000000 0000005A 0000000A .Easing:CosInOut )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:bm4_2 *Var[0] FFFFFFFF 00000000 00000000 )
            Call  RotateModel   ( ~Model:bm4_1 *Var[0] FFFFFFFF 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  PlaySoundAtCollider   ( ~Collider:o918 0000032C 00000000 )
        Call  GetModelCenter    ( ~Model:b4_1 )
        Call  SetNpcPos ( 00000005 *Var[0] *Var[1] *Var[2] )
        Call  SetNpcJumpscale   ( 00000005 *Fixed[1.0] )
        Add   *Var[2]  0000003C
        Call  NpcJump0  ( 00000005 *Var[0] 00000000 *Var[2] 00000014 )
        Call  SetNpcFlagBits    ( 00000005 00000040 .False )
        Call  ResetCam  ( .Cam:Default 00000001 )
        Exec  $Script_802414B0
    EndThread
    Return
    End
}

#new:Script $Script_80243648
{
    Switch  *Var[0]
        Case  ==  $???_80241160
            Call  PlaySoundAtCollider   ( ~Collider:o907 000001A2 00000000 )
        Case  ==  $???_80241174
            Call  PlaySoundAtCollider   ( ~Collider:o911 000001A1 00000000 )
        Case  ==  $???_80241188
            Call  PlaySoundAtCollider   ( ~Collider:o915 000001A3 00000000 )
        Case  ==  $???_8024119C
            Call  PlaySoundAtCollider   ( ~Collider:o918 000001A4 00000000 )
    EndSwitch
    UseIntBuffer  *Var[0]
    Get1Int  *Var[1]
    Get4Int  *Var[2] *Var[3] *Var[4] *Var[5]
    Loop  00000005
        Call  EnableModel   ( *Var[2] .False )
        Call  EnableModel   ( *Var[3] .False )
        Call  EnableModel   ( *Var[4] .True )
        Call  EnableModel   ( *Var[5] .True )
        Wait  1`
        Call  EnableModel   ( *Var[2] .True )
        Call  EnableModel   ( *Var[3] .True )
        Call  EnableModel   ( *Var[4] .False )
        Call  EnableModel   ( *Var[5] .False )
        Wait  1`
    EndLoop
    Mul   *MapVar[F]  00000004
    OR    *MapVar[F] *Var[1]
    Add   *MapVar[E]  00000001
    If  *MapVar[E]  ==  00000004
        Call  DisablePlayerInput    ( .True )
        Wait  5`
        Call  UseSettingsFrom   ( .Cam:Default 00000064 00000000 00000172 )
        Call  SetPanTarget      ( .Cam:Default 00000064 00000000 00000172 )
        Call  SetCamDistance    ( .Cam:Default FFFFFE3E )
        Call  SetCamPitch       ( .Cam:Default 00000010 *Fixed[-6.0] )
        Call  SetCamSpeed       ( .Cam:Default 00000001 )
        Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
        Wait  30`
        Switch  *MapVar[F]
            Case  ==  0000001B
                ExecWait  $Script_80241A30
            Case  ==  0000004B
                ExecWait  $Script_8024205C
            Default
                ExecWait  $Script_80242E6C
        EndSwitch
        Call  DisablePlayerInput    ( .False )
    Else
        Thread
            Label  A
            Call  EnableModel   ( *Var[2] .False )
            Call  EnableModel   ( *Var[3] .False )
            Call  EnableModel   ( *Var[4] .True )
            Call  EnableModel   ( *Var[5] .True )
            Wait  5`
            Call  EnableModel   ( *Var[2] .True )
            Call  EnableModel   ( *Var[3] .True )
            Call  EnableModel   ( *Var[4] .False )
            Call  EnableModel   ( *Var[5] .False )
            Wait  10`
            If  *MapVar[E]  !=  00000004
                Goto  A
            EndIf
        EndThread
    EndIf
    Unbind
    Return
    End
}

#new:Script $Script_80243A68
{
    If  *StoryProgress  <  00000000
        Set   *MapVar[F]  00000000
        Set   *MapVar[E]  00000000
        Call  EnableModel   ( ~Model:bm1_2 .False )
        Call  EnableModel   ( ~Model:b1_2 .False )
        Set   *Var[0]  $???_80241160
        Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o907 00000001 00000000
        Call  EnableModel   ( ~Model:bm2_2 .False )
        Call  EnableModel   ( ~Model:b2_2 .False )
        Set   *Var[0]  $???_80241174
        Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o911 00000001 00000000
        Call  EnableModel   ( ~Model:bm3_2 .False )
        Call  EnableModel   ( ~Model:b3_2 .False )
        Set   *Var[0]  $???_80241188
        Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o915 00000001 00000000
        Call  EnableModel   ( ~Model:bm4_2 .False )
        Call  EnableModel   ( ~Model:b4_2 .False )
        Set   *Var[0]  $???_8024119C
        Bind  $Script_80243648 .Trigger:WallHammer ~Collider:o918 00000001 00000000
    Else
        Call  SetGroupEnabled       ( ~Model:box 00000000 )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o907 7FFFFE00 )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o911 7FFFFE00 )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o915 7FFFFE00 )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:o918 7FFFFE00 )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:sen1 7FFFFE00 )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:sen2 7FFFFE00 )
        Call  RotateGroup   ( ~Model:t1 0000005A 00000001 00000000 00000000 )
        Call  RotateGroup   ( ~Model:t2 0000005A 00000001 00000000 00000000 )
        Call  RotateGroup   ( ~Model:t3 0000005A 00000001 00000000 00000000 )
        Call  RotateGroup   ( ~Model:t4 0000005A 00000001 00000000 00000000 )
    EndIf
    Return
    End
}

PADDING: 80243D2C to 80243D30 (00003D2C to 00003D30)
00000000

#new:Script $Script_80243D30
{
    NewArray  00000014 *Var[0]
    UseArray  *Var[0]
    SetF  *Array[2]  *Fixed[0.0]
    SetF  *Array[3]  *Fixed[0.0]
    SetF  *Array[7]  *Fixed[0.0]
    SetF  *Array[8]  *Fixed[0.0]
    SetF  *Array[E]  *Fixed[0.0]
    SetF  *Array[F]  *Fixed[0.0]
    SetF  *Array[10]  *Fixed[0.0]
    Set   *AreaFlag[003]  .False
    Label  0
    Switch  *MapVar[0]
        Case  ==  00000000
            UseIntBuffer  *MapVar[1]
            Get3Int  *Var[0] *Var[1] *Var[2]
            SetF  *Array[0]  *Var[0]
            SetF  *Array[1]  *Var[1]
            Call  AddVectorPolar    ( *Array[0] *Array[1] *Fixed[40.0] *Var[2] )
            SetF  *Array[5]  *Var[0]
            SetF  *Array[6]  *Var[1]
            SetF  *Var[3]  *Var[2]
            AddF  *Var[3]  *Fixed[180.0]
            Call  AddVectorPolar    ( *Array[5] *Array[6] *Fixed[40.0] *Var[3] )
            SetF  *Array[B]  *Var[0]
            SetF  *Array[C]  *Var[1]
            SetF  *MapVar[B]  *Array[B]
            SetF  *MapVar[C]  *Array[C]
            SetF  *MapVar[D]  *Var[2]
            SetF  *Array[11]  *Fixed[0.0]
            Label  B
            Get2Int  *Var[2] *Var[3]
            If  *Var[2]  ==  FFFFFFFF
                Goto  C
            EndIf
            Call  GetDist2D ( *Var[4] *Var[0] *Var[1] *Var[2] *Var[3] )
            AddF  *Array[11]  *Var[4]
            SetF  *Var[0]  *Var[2]
            SetF  *Var[1]  *Var[3]
            Goto  B
            Label  C
            SubF  *Array[11]  *Fixed[40.0]
            SetF  *Array[A]  *Fixed[0.0]
            SetF  *Array[D]  *Fixed[0.0]
            Set   *Array[12]  00000000
            If  *MapFlag[00]  ==  .True
                Set   *MapVar[0]  00000001
            EndIf
        Case  ==  00000001
            UseIntBuffer  *MapVar[1]
            Call  $Function_80240168    ( 00000003 00000000 00000000 )
            Get2Int  *Var[0] *Var[1]
            If  *Var[0]  ==  FFFFFFFF
                Set   *MapVar[0]  00000064
                Set   *MapFlag[00]  .False
            Else
                SetF  *Array[2]  *Var[0]
                SetF  *Array[3]  *Var[1]
                Set   *Array[4]  00000001
                SetF  *Array[7]  *Var[0]
                SetF  *Array[8]  *Var[1]
                Set   *Array[9]  00000001
                Set   *MapVar[0]  0000000A
            EndIf
        Case  ==  0000000A
            Switch  *MapVar[2]
                Case  ==  00000000
                    SetF  *Array[A]  *Fixed[10.0]
                Case  ==  00000001
                    Call  $Function_80240388    ( *Array[12] *Array[A] *Fixed[0.0] *Fixed[10.0] 00000064 00000001 *Fixed[0.0] )
                    Add   *Array[12]  00000001
                Case  ==  00000002
                    Set   *Var[0]  *Array[D]
                    Set   *Var[1]  *Array[11]
                    Call  $Function_80240388    ( *Var[0] *Array[A] *Fixed[10.0] *Fixed[2.0] *Var[1] 00000000 *Fixed[0.0] )
                Case  ==  00000003
                    Set   *Var[0]  *Array[D]
                    Set   *Var[1]  *Array[11]
                    Div   *Var[1]  00000002
                    Call  $Function_80240388    ( *Var[0] *Array[A] *Fixed[1.0] *Fixed[10.0] *Var[1] 00000000 *Fixed[0.0] )
            EndSwitch
            Call  GetDist2D ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
            Call  $Function_802400E4    ( *Var[0] *Array[A] *Var[2] )
            If  *Var[2]  ==  00000001
                Call  $Function_8024001C    ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
                Call  AddVectorPolar        ( *Array[0] *Array[1] *Array[A] *Var[0] )
            Else
                SetF  *Var[1]  *Array[A]
                SubF  *Var[1]  *Var[0]
                SetF  *Array[0]  *Array[2]
                SetF  *Array[1]  *Array[3]
                UseIntBuffer  *MapVar[1]
                Call  $Function_80240168    ( 00000003 00000002 *Array[4] )
                Get2Int  *Array[2] *Array[3]
                Add   *Array[4]  00000001
                If  *Array[2]  ==  FFFFFFFF
                    Set   *MapVar[0]  00000064
                    Set   *MapFlag[00]  .False
                    Set   *Flag[01]  .True
                Else
                    Call  $Function_8024001C    ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
                    Call  AddVectorPolar        ( *Array[0] *Array[1] *Var[1] *Var[0] )
                EndIf
            EndIf
            Call  GetDist2D ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
            Call  $Function_802400E4    ( *Var[0] *Array[A] *Var[2] )
            If  *Var[2]  ==  00000001
                Call  $Function_8024001C    ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
                Call  AddVectorPolar        ( *Array[5] *Array[6] *Array[A] *Var[0] )
            Else
                SetF  *Var[1]  *Array[A]
                SubF  *Var[1]  *Var[0]
                SetF  *Array[5]  *Array[7]
                SetF  *Array[6]  *Array[8]
                UseIntBuffer  *MapVar[1]
                Call  $Function_80240168    ( 00000003 00000002 *Array[9] )
                Get2Int  *Array[7] *Array[8]
                Add   *Array[9]  00000001
                If  *Array[7]  ==  FFFFFFFF
                    Set   *MapVar[0]  00000064
                    Set   *MapFlag[00]  .False
                    Set   *Flag[01]  .False
                Else
                    Call  $Function_8024001C    ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
                    Call  AddVectorPolar        ( *Array[5] *Array[6] *Var[1] *Var[0] )
                EndIf
            EndIf
            If  *MapVar[0]  ==  00000064
                If  *Flag[01]  ==  .True
                    Call  $Function_8024001C    ( *Var[0] *Array[0] *Array[1] *Array[5] *Array[6] )
                    SetF  *Array[5]  *Array[0]
                    SetF  *Array[6]  *Array[1]
                    Call  AddVectorPolar        ( *Array[5] *Array[6] *Fixed[80.0] *Var[0] )
                Else
                    Call  $Function_8024001C    ( *Var[0] *Array[5] *Array[6] *Array[0] *Array[1] )
                    SetF  *Array[0]  *Array[5]
                    SetF  *Array[1]  *Array[6]
                    Call  AddVectorPolar        ( *Array[0] *Array[1] *Fixed[80.0] *Var[0] )
                EndIf
            EndIf
            SetF  *Var[0]  *Array[0]
            SetF  *Var[1]  *Array[1]
            AddF  *Var[0]  *Array[5]
            AddF  *Var[1]  *Array[6]
            DivF  *Var[0]  *Fixed[2.0]
            DivF  *Var[1]  *Fixed[2.0]
            Call  $Function_8024001C    ( *Var[2] *Array[5] *Array[6] *Array[0] *Array[1] )
            SetF  *MapVar[B]  *Var[0]
            SetF  *MapVar[C]  *Var[1]
            SetF  *MapVar[D]  *Var[2]
            Call  GetDist2D ( *Var[3] *Var[0] *Var[1] *Array[B] *Array[C] )
            AddF  *Array[D]  *Var[3]
            SetF  *Array[E]  *Array[D]
            MulF  *Array[E]  *Fixed[1.4326172]
            If  *Flag[00]  ==  .False
                SetF  *Var[0]  *Array[A]
                If  *Var[0]  <  00000001
                    SetF  *Var[0]  *Fixed[1.0]
                EndIf
                DivF  *Var[0]  *Fixed[3.0]
                SubF  *Array[F]  *Var[0]
                If  *Array[F]  <  FFFFFFF6
                    SetF  *Array[F]  *Fixed[-10.0]
                    Set   *Flag[00]  .True
                    If  *AreaFlag[003]  ==  .False
                        Call  PlaySound ( 000001FF )
                    Else
                        Call  PlaySound ( 00000084 )
                    EndIf
                EndIf
            Else
                SetF  *Var[0]  *Array[A]
                If  *Var[0]  <  00000001
                    SetF  *Var[0]  *Fixed[1.0]
                EndIf
                DivF  *Var[0]  *Fixed[3.0]
                AddF  *Array[F]  *Var[0]
                If  *Array[F]  >  0000000A
                    SetF  *Array[F]  *Fixed[10.0]
                    Set   *Flag[00]  .False
                    If  *AreaFlag[003]  ==  .False
                        Call  PlaySound ( 000001FE )
                        Set   *AreaFlag[003]  .True
                    Else
                        Call  PlaySound ( 000001FE )
                        Set   *AreaFlag[003]  .False
                    EndIf
                EndIf
            EndIf
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
            Call  $Function_802401EC    ( *Var[0] 00000032 *Var[1] *MapVar[D] )
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            AddF  *Var[2]  *Fixed[180.0]
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
            Call  $Function_80240290    ( FFFFFFFC *Var[0] 00000032 *Var[1] *MapVar[D] )
            SetF  *Var[0]  *MapVar[B]
            SetF  *Var[1]  *MapVar[C]
            SetF  *Var[2]  *MapVar[D]
            If  *Var[2]  <  000000B4
                AddF  *Var[2]  *Fixed[90.0]
            Else
                SubF  *Var[2]  *Fixed[90.0]
            EndIf
            Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
            Call  $Function_80240290    ( 00000000 *Var[0] 00000032 *Var[1] *MapVar[D] )
        Case  ==  00000064
    EndSwitch
    Call  TranslateGroup    ( ~Model:p2 *Fixed[79.1] *Fixed[-27.93] *Fixed[-29.53] )
    Call  TranslateGroup    ( ~Model:p3 *Fixed[-35.1] *Fixed[-27.93] *Fixed[-29.53] )
    Call  RotateGroup       ( ~Model:p2 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  RotateGroup       ( ~Model:p3 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  TranslateGroup    ( ~Model:p5 *Fixed[40.5] *Fixed[-20.0] *Fixed[-0.4] )
    Call  TranslateGroup    ( ~Model:p6 *Fixed[-39.5] *Fixed[-20.0] *Fixed[-0.4] )
    Call  TranslateGroup    ( ~Model:popo *MapVar[B] *Fixed[10.0] *MapVar[C] )
    If  *MapVar[D]  <  000000B4
        SetF  *Var[1]  *MapVar[D]
        SubF  *Var[1]  *Fixed[90.0]
        Call  RotateGroup   ( ~Model:popo *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
    Else
        SetF  *Var[1]  *MapVar[D]
        SubF  *Var[1]  *Fixed[180.0]
        SubF  *Var[1]  *Fixed[90.0]
        Call  RotateGroup   ( ~Model:popo *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
    EndIf
    Call  RotateGroup       ( ~Model:p2 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  RotateGroup       ( ~Model:p3 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    Call  TranslateGroup    ( ~Model:p2 *Fixed[-79.1] *Fixed[27.93] *Fixed[29.53] )
    Call  TranslateGroup    ( ~Model:p3 *Fixed[35.1] *Fixed[27.93] *Fixed[29.53] )
    Call  TranslateGroup    ( ~Model:p5 *Fixed[-40.5] *Fixed[20.0] *Fixed[0.4] )
    Call  TranslateGroup    ( ~Model:p6 *Fixed[39.5] *Fixed[20.0] *Fixed[0.4] )
    If  *MapVar[D]  <  000000B4
        Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
        Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
    Else
        Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
        Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
    EndIf
    Call  TranslateGroup    ( ~Model:p2 *Fixed[0.0] *Array[F] *Fixed[0.0] )
    SetF  *Var[0]  *Array[F]
    MulF  *Var[0]  *Fixed[-1.0]
    Call  TranslateGroup    ( ~Model:p3 *Fixed[0.0] *Var[0] *Fixed[0.0] )
    SetF  *Var[0]  *Array[A]
    If  *Var[0]  <  00000001
        SetF  *Var[0]  *Fixed[1.0]
    EndIf
    AddF  *Array[10]  *Var[0]
    If  *Array[10]  >  00000168
        SubF  *Array[10]  *Fixed[360.0]
    EndIf
    Call  RotateGroup   ( ~Model:p4 *Array[10] *Fixed[0.0] *Fixed[1.0] *Fixed[0.0] )
    SetF  *Array[B]  *MapVar[B]
    SetF  *Array[C]  *MapVar[C]
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80244EF8
{
    Label  0
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  SetCamTarget  ( .Cam:Default *Var[0] 00000000 *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80244F60
{
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  MakeLerp      ( 00000000 *Var[1] 0000002D .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  GetPlayerPos  ( *Var[2] *Var[3] *Var[4] )
        Call  SetCamTarget  ( .Cam:Default *Var[2] *Var[0] *Var[4] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Return
    End
}

#new:Script $Script_80245024
{
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  MakeLerp      ( *Var[1] 00000000 00000028 .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Call  GetPlayerPos  ( *Var[2] *Var[3] *Var[4] )
        Call  SetCamTarget  ( .Cam:Default *Var[2] *Var[0] *Var[4] )
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Loop
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Call  SetCamTarget  ( .Cam:Default *Var[0] 00000000 *Var[2] )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_8024513C
{
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    Thread
        UseIntBuffer  *Var[0]
        Get3Int  *Var[1] *Var[2] *Var[3]
        Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed    ( *Fixed[4.0] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerSpeed    ( *Fixed[0.7] )
        Call  PlayerMoveTo      ( *Var[1] *Var[2] 00000000 )
        Call  SetPlayerPos      ( *Var[1] 00000032 *Var[2] )
        Call  SetPlayerAnimation    ( 00010002 )
        Call  InterpPlayerYaw   ( *Var[3] 00000000 )
    EndThread
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    AddF  *Var[3]  *Fixed[180.0]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
    Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[0.7] )
    Call  NpcJump0  ( .Npc:Partner *Var[1] 00000032 *Var[2] 0000000A )
    Call  SetNpcSpeed       ( .Npc:Partner *Fixed[0.5] )
    Call  NpcMoveTo ( .Npc:Partner *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  InterpNpcYaw      ( .Npc:Partner *Var[A] 00000000 )
    Wait  5`
    UseIntBuffer  *Var[0]
    Get3Int  *Var[1] *Var[2] *Var[3]
    SetF  *Var[A]  *Var[3]
    If  *Var[3]  <  000000B4
        AddF  *Var[3]  *Fixed[90.0]
    Else
        SubF  *Var[3]  *Fixed[90.0]
    EndIf
    SetF  *Var[4]  *Var[1]
    SetF  *Var[5]  *Var[2]
    SetF  *Var[6]  *Var[3]
    Call  AddVectorPolar    ( *Var[1] *Var[2] *Fixed[100.0] *Var[3] )
    Call  SetNpcSpeed   ( 00000000 *Fixed[3.0] )
    Call  SetNpcAnimation   ( 00000000 008C0003 )
    Call  NpcMoveTo     ( 00000000 *Var[1] *Var[2] 00000000 )
    Call  SetNpcAnimation   ( 00000000 008C0001 )
    Call  AddVectorPolar    ( *Var[4] *Var[5] *Fixed[20.0] *Var[6] )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[0.7] )
    Call  NpcJump0      ( 00000000 *Var[4] 00000032 *Var[5] 0000000A )
    Call  InterpNpcYaw  ( 00000000 *Var[A] 00000000 )
    Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000005 000F0009 ) % We're leaving! All aboard!
    Call  PlaySound     ( 00000083 )
    Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
    Wait  10`
    Return
    End
}

#new:Script $Script_8024553C
{
    Call  StopSound ( 00000083 )
    Call  SetMusicTrack     ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
    Call  SetNpcFlagBits    ( 00000000 00000140 .True )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
    SetF  *Var[0]  *MapVar[B]
    SetF  *Var[1]  *MapVar[C]
    SetF  *Var[2]  *MapVar[D]
    If  *Var[2]  <  000000B4
        AddF  *Var[2]  *Fixed[90.0]
    Else
        SubF  *Var[2]  *Fixed[90.0]
    EndIf
    Call  AddVectorPolar    ( *Var[0] *Var[1] *Fixed[100.0] *Var[2] )
    Thread
        Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
        Call  NpcJump0  ( 00000000 *Var[0] 00000032 *Var[1] 0000000A )
        Call  SetNpcAnimation   ( 00000000 008C0003 )
        Call  SetNpcSpeed       ( 00000000 *Fixed[2.0] )
        UseIntBuffer  *Var[9]
        Get2Int  *Var[3] *Var[4]
        Call  NpcMoveTo ( 00000000 *Var[3] *Var[4] 00000000 )
        Call  SetNpcAnimation   ( 00000000 008C0001 )
        Call  InterpNpcYaw      ( 00000000 0000010E 0000000F )
        Call  SetNpcFlagBits    ( 00000000 00000140 .False )
    EndThread
    Wait  10`
    Thread
        AddF  *Var[2]  *Fixed[60.0]
        Call  AddVectorPolar        ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
        Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
        Call  SetPlayerSpeed        ( *Fixed[3.0] )
        Call  PlayerMoveTo  ( *Var[0] *Var[1] 00000000 )
        Call  SetPlayerAnimation    ( 00010002 )
    EndThread
    Wait  10`
    Sub   *Var[1]  0000001E
    Call  SetNpcAnimation   ( .Npc:Partner 00000102 )
    Call  SetNpcSpeed       ( .Npc:Partner *Fixed[2.5] )
    Call  NpcMoveTo ( .Npc:Partner *Var[0] *Var[1] 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .False )
    Return
    End
}

#new:Script $Script_80245838
{
    Switch  *AreaByte[6]
        Case  ==  00000000
            Call  GotoMapSpecial    ( $ASCII_80248750 00000003 00000001 ) % omo_03
        Case  ==  00000001
            Call  GotoMapSpecial    ( $ASCII_80248748 00000003 00000001 ) % omo_06
        Case  ==  00000002
            Call  GotoMapSpecial    ( $ASCII_80248740 00000002 00000001 ) % omo_08
        Case  ==  00000003
            Call  GotoMapSpecial    ( $ASCII_80248738 00000003 00000001 ) % omo_10
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script $Script_802458F8
{
    Switch  *AreaByte[5]
        Case  00000000  to  00000001
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_80248750 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    Call  GotoMapSpecial    ( $ASCII_80248748 00000002 00000001 ) % omo_06
                Case  ==  00000002
                    Call  GotoMapSpecial    ( $ASCII_80248740 00000001 00000001 ) % omo_08
                Case  ==  00000003
                    Call  GotoMapSpecial    ( $ASCII_80248738 00000002 00000001 ) % omo_10
            EndSwitch
        Case  ==  00000002
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_80248750 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80248748 00000002 00000001 ) % omo_06
                    Else
                        Call  GotoMapSpecial    ( $ASCII_80248750 00000002 00000001 ) % omo_03
                    EndIf
                Case  ==  00000003
                    Call  GotoMapSpecial    ( $ASCII_80248738 00000002 00000001 ) % omo_10
            EndSwitch
        Case  ==  00000003
            Switch  *AreaByte[6]
                Case  ==  00000000
                    Call  GotoMapSpecial    ( $ASCII_80248750 00000002 00000001 ) % omo_03
                Case  ==  00000001
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80248748 00000002 00000001 ) % omo_06
                    Else
                        Call  GotoMapSpecial    ( $ASCII_80248750 00000002 00000001 ) % omo_03
                    EndIf
                Case  ==  00000002
                    If  *Flag_OMO_03  ==  .True
                        Call  GotoMapSpecial    ( $ASCII_80248740 00000001 00000001 ) % omo_08
                    Else
                        Call  GotoMapSpecial    ( $ASCII_80248750 00000002 00000001 ) % omo_03
                    EndIf
            EndSwitch
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script $Script_80245B9C
{
    Label  A
    Wait  1`
    Call  $Function_80240518 ( )
    If  *Var[0]  !=  00000001
        Goto  A
    EndIf
    If  *AreaFlag[002]  ==  .False
        ExecWait  $Script_80245838
    Else
        ExecWait  $Script_802458F8
    EndIf
    Return
    End
}

#new:Script $Script_80245C2C
{
    Call  SetTexPanner      ( ~Model:y_a 00000002 )
    Call  EnableTexPanning  ( ~Model:y_a .True )
    Set   *MapVar[9]  00008000
    Thread
        Loop
            Call  SetTexPanOffset   ( 00000002 00000000 *MapVar[9] 00000000 )
            Wait  1`
        EndLoop
    EndThread
    Set   *Var[5]  00000000
    Label  0
    Add   *Var[5]  00000002
    If  *Var[5]  >  00000168
        Sub   *Var[5]  00000168
    EndIf
    Call  RotateModel   ( ~Model:y_a *Var[5] 00000000 00000000 FFFFFFFF )
    Wait  1`
    If  *MapFlag[01]  ==  .True
        Goto  A
    EndIf
    Goto  0
    Label  A
    If  *AreaFlag[002]  ==  .False
        Set   *Var[2]  0000010E
        Call  EnableTexPanning  ( ~Model:y_c2 .False )
        Call  EnableTexPanning  ( ~Model:y_b2 .True )
    Else
        Set   *Var[2]  0000005A
        Call  EnableTexPanning  ( ~Model:y_b2 .False )
        Call  EnableTexPanning  ( ~Model:y_c2 .True )
    EndIf
    If  *Var[2]  <  *Var[5]
        Add   *Var[2]  00000168
    EndIf
    Set   *Var[6]  *AreaFlag[002]
    Call  MakeLerp  ( *Var[5] *Var[2] 0000003C .Easing:CosFastOvershoot )
    Call  UpdateLerp ( )
    Set   *Var[4]  FFFFFFFF
    Label  B
    Call  UpdateLerp ( )
    If  *Var[2]  <  *Var[0]
        Set   *Var[3]  00000000
    Else
        Set   *Var[3]  00000001
    EndIf
    If  *Var[4]  !=  FFFFFFFF
        If  *Var[3]  !=  *Var[4]
            Call  PlaySound ( 000001F9 )
        EndIf
    EndIf
    Set   *Var[4]  *Var[3]
    Call  RotateModel   ( ~Model:y_a *Var[0] 00000000 00000000 FFFFFFFF )
    Wait  1`
    If  *AreaFlag[002]  !=  *Var[6]
        Goto  15
    EndIf
    If  *Var[1]  ==  00000001
        Goto  B
    EndIf
    Call  PlaySound ( 000001FA )
    If  *AreaFlag[002]  ==  .False
        Set   *MapVar[9]  00004000
    Else
        Set   *MapVar[9]  0000C000
    EndIf
    Label  14
    Wait  1`
    If  *AreaFlag[002]  ==  *Var[6]
        Goto  14
    EndIf
    Label  15
    Set   *Var[5]  *Var[0]
    Goto  A
    Return
    End
}

#new:Script $Script_8024604C
{
    Call  GetCurrentPartner ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  GetCurrentPartnerID   ( *Var[0] )
        If  *Var[0]  ==  .Partner:Parakarry % 4
            Return
        EndIf
    EndIf
    If  *MapFlag[01]  ==  .True
        If  *AreaFlag[002]  ==  .False
            Return
        EndIf
    EndIf
    Set   *MapFlag[01]  .True
    Set   *AreaFlag[002]  .False
    Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_b1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_b2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o920 )
    Call  UpdateColliderTransform   ( ~Collider:o921 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_b1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_b2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o920 )
    Call  UpdateColliderTransform   ( ~Collider:o921 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_80246284
{
    Call  GetCurrentPartner ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  GetCurrentPartnerID   ( *Var[0] )
        If  *Var[0]  ==  .Partner:Parakarry % 4
            Return
        EndIf
    EndIf
    If  *MapFlag[01]  ==  .True
        If  *AreaFlag[002]  ==  .True
            Return
        EndIf
    EndIf
    Set   *MapFlag[01]  .True
    Set   *AreaFlag[002]  .True
    Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
    Label  0
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_c1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_c2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o923 )
    Call  UpdateColliderTransform   ( ~Collider:o924 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  0
    EndIf
    Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
    Label  1
    Call  UpdateLerp ( )
    Call  TranslateModel    ( ~Model:y_c1 00000000 *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:y_c2 00000000 *Var[0] 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:o923 )
    Call  UpdateColliderTransform   ( ~Collider:o924 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1
    EndIf
    Return
    End
}

#new:Script $Script_UpdateTexturePan_802464BC
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_8024055C ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_80240680 ( )
    Return
    End
}

#new:Script $Script_80246558
{
    Set   *MapFlag[01]  .False
    Set   *MapFlag[0A]  .False
    Exec  $Script_80245C2C
    Call  ParentColliderToModel ( ~Collider:o920 ~Model:y_b1 )
    Call  ParentColliderToModel ( ~Collider:o921 ~Model:y_b2 )
    Call  ParentColliderToModel ( ~Collider:o923 ~Model:y_c1 )
    Call  ParentColliderToModel ( ~Collider:o924 ~Model:y_c2 )
    Bind  $Script_8024604C .Trigger:FloorTouch ~Collider:o920 00000001 00000000
    Bind  $Script_8024604C .Trigger:WallHammer ~Collider:o921 00000001 00000000
    Bind  $Script_80246284 .Trigger:FloorTouch ~Collider:o923 00000001 00000000
    Bind  $Script_80246284 .Trigger:WallHammer ~Collider:o924 00000001 00000000
    Thread
        Set   *Var[0]  00000001
        Set   *Var[1]  FFFFFBB4
        Set   *Var[2]  00000000
        Set   *Var[3]  00000000
        Set   *Var[4]  00000000
        Set   *Var[5]  00000001
        Set   *Var[6]  00000001
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_802464BC
    EndThread
    Return
    End
}

#new:Unknown $???_80246740
{
    FFFFFF6F FFFFFF92
}

#new:Unknown $???_80246748
{
    F2486D98 F247316B F24C1E84 F24A7A80 F247BE80 F24E9480 F246A528 F251F729
    F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80246778
{
    Call  FadeOutMusic  ( 00000000 00000BB8 )
    Call  DisablePlayerInput    ( .True )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
    Wait  10`
    Call  DisablePlayerPhysics  ( .True )
    Exec  $Script_80245024
    Set   *AreaByte[5]  00000002
    Set   *Var[0]  $???_80246748
    ExecWait  $Script_8024513C
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o1074 7FFFFE00 )
    Set   *MapVar[0]  00000000
    Set   *MapVar[1]  $???_80246748
    Set   *MapVar[2]  00000001
    Set   *MapFlag[00]  .True
    Label  A
    If  *MapVar[B]  <  0000015E
        Wait  1`
        Goto  A
    EndIf
    Call  GotoMap   ( $ASCII_80248758 00000000 ) % omo_16
    Set   *ToyTrain_Destination  00000002
    Wait  100`
    Return
    End
}

#new:Unknown $???_802468E8
{
    F2486D98 F247316B F24EEE84 F2466080 F246A528 F244F4D4 F244F3C0 F242FDD8
    F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80246918
{
    Call  FadeOutMusic  ( 00000000 00000BB8 )
    Call  DisablePlayerInput    ( .True )
    Call  DisablePartnerAI      ( 00000000 )
    Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
    Wait  10`
    Call  DisablePlayerPhysics  ( .True )
    Exec  $Script_80245024
    Set   *AreaByte[5]  00000002
    Set   *Var[0]  $???_802468E8
    ExecWait  $Script_8024513C
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o1074 7FFFFE00 )
    Set   *MapVar[0]  00000000
    Set   *MapVar[1]  $???_802468E8
    Set   *MapVar[2]  00000001
    Set   *MapFlag[00]  .True
    Label  A
    If  *MapVar[B]  >  FFFFFEA2
        Wait  1`
        Goto  A
    EndIf
    Call  GotoMap   ( $ASCII_80248758 00000001 ) % omo_16
    Set   *ToyTrain_Destination  00000001
    Wait  100`
    Return
    End
}

#new:Unknown $???_80246A88
{
    F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24A7A80
    F247BE80 F247D306 F2470824 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80246AC0
{
    F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24A7A80
    F247BE80 F2466080 F246A528 F244F4D4 F244F3C0 F242FDD8 F2429C51 FFFFFFFF
    FFFFFFFF FFFFFFFF
}

#new:Script $Script_80246B08
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  DisablePartnerAI      ( 00000000 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o1074 7FFFFE00 )
    If  *AreaByte[6]  ==  00000002
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80246A88
        Set   *MapVar[2]  00000002
        Exec  $Script_80243D30
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80244EF8 *Var[B]
        Label  A
        If  *MapFlag[00]  ==  .True
            Wait  1`
            Goto  A
        EndIf
        Wait  20`
        Kill  *Var[B]
        Exec  $Script_80244F60
        Call  $Function_80240000 ( )
        Set   *Var[9]  $???_80246740
        ExecWait  $Script_8024553C
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0010 ) % Station stop: Green Station! Welcome to Green Stat ...
        Call  ModifyColliderFlags   ( 00000001 ~Collider:o1074 7FFFFE00 )
        Call  DisablePlayerPhysics  ( .False )
        Call  EnablePartnerAI ( )
        Call  DisablePlayerInput    ( .False )
    Else
        Exec  $Script_80244EF8
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80246AC0
        Set   *MapVar[2]  00000000
        Exec  $Script_80243D30
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80245B9C
        Label  14
        If  *MapVar[B]  >  FFFFFEA2
            Wait  1`
            Goto  14
        EndIf
        Call  GotoMap   ( $ASCII_80248758 00000001 ) % omo_16
        Set   *ToyTrain_Destination  00000001
        Wait  100`
    EndIf
    Return
    End
}

#new:Unknown $???_80246DC0
{
    F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F249082F
    F2475AB4 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80246DF0
{
    F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F24A7A80
    F247BE80 F24E9480 F246A528 F251F729 F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80246E30
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  SetPlayerActionState  ( .ActionState:Land )
    Call  DisablePartnerAI      ( 00000000 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:o1074 7FFFFE00 )
    If  *AreaByte[6]  ==  00000002
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80246DC0
        Set   *MapVar[2]  00000002
        Exec  $Script_80243D30
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80244EF8 *Var[B]
        Label  A
        If  *MapFlag[00]  ==  .True
            Wait  1`
            Goto  A
        EndIf
        Wait  20`
        Kill  *Var[B]
        Exec  $Script_80244F60
        Call  $Function_80240000 ( )
        Set   *Var[9]  $???_80246740
        ExecWait  $Script_8024553C
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0010 ) % Station stop: Green Station! Welcome to Green Stat ...
        Call  ModifyColliderFlags   ( 00000001 ~Collider:o1074 7FFFFE00 )
        Call  DisablePlayerPhysics  ( .False )
        Call  EnablePartnerAI ( )
        Call  DisablePlayerInput    ( .False )
    Else
        Exec  $Script_80244EF8
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80246DF0
        Set   *MapVar[2]  00000000
        Exec  $Script_80243D30
        Set   *MapFlag[00]  .True
        Wait  1`
        Exec  $Script_80245B9C
        Label  14
        If  *MapVar[B]  <  0000015E
            Wait  1`
            Goto  14
        EndIf
        Call  GotoMap   ( $ASCII_80248758 00000000 ) % omo_16
        Set   *ToyTrain_Destination  00000002
        Wait  100`
    EndIf
    Return
    End
}

#new:IntTable $IntTable_802470E8
{
    00000001 00000000 00000003
}

#new:IntTable $IntTable_802470F4
{
    00000003 00000000 00000001
}

#new:Script $Script_80247100
{
    If  *MapFlag[01]  ==  .False
        Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0006 ) % Which way are you heading? Press one of those swit ...
    Else
        If  *AreaFlag[002]  ==  .False
            Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
            If  *Flag_OMO_03  ==  .False
                Call  ShowChoice    ( 001E0040 ) % Pink Station Blue Station Don't get on
                If  *Var[0]  !=  00000002
                    Call  CloseMessage ( )
                    UseIntBuffer  $IntTable_802470E8
                    Add   *Var[0]  00000001
                    Loop  *Var[0]
                        Get1Int  *Var[1]
                    EndLoop
                    Set   *AreaByte[6]  *Var[1]
                    ExecWait  $Script_80246918
                Else
                    Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
                EndIf
            Else
                Call  ShowChoice    ( 001E0041 ) % Pink Station Blue Station Red Station Don't get on ...
                If  *Var[0]  !=  00000003
                    Call  CloseMessage ( )
                    UseIntBuffer  $IntTable_802470E8
                    Add   *Var[0]  00000001
                    Loop  *Var[0]
                        Get1Int  *Var[1]
                    EndLoop
                    Set   *AreaByte[6]  *Var[1]
                    ExecWait  $Script_80246918
                Else
                    Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
                EndIf
            EndIf
        Else
            Switch  *StoryProgress
                Case  <  00000000
                    Call  SpeakToPlayer ( 00000000 008C0006 008C0002 00000000 000F0016 ) % We can't go to Red Station.  The tracks are broken ...
                Case  >=  00000000
                    Call  SpeakToPlayer ( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
                    Call  ShowChoice    ( 001E003F ) % Red Station Blue Station Pink Station Don't get on ...
                    If  *Var[0]  !=  00000003
                        Call  CloseMessage ( )
                        UseIntBuffer  $IntTable_802470F4
                        Add   *Var[0]  00000001
                        Loop  *Var[0]
                            Get1Int  *Var[1]
                        EndLoop
                        Set   *AreaByte[6]  *Var[1]
                        ExecWait  $Script_80246778
                    Else
                        Call  ContinueSpeech    ( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
                    EndIf
            EndSwitch
        EndIf
    EndIf
    Return
    End
}

#new:Unknown $???_80247438
{
    F2486D98 F247316B F24C1E84 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80247450
{
    ExecWait  $Script_80246558
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Set   *MapVar[0]  00000000
        Set   *MapVar[1]  $???_80247438
        Set   *MapVar[2]  00000000
        Exec  $Script_80243D30
        Set   *MapFlag[00]  .True
    Else
        Call  GetEntryID    ( *Var[0] )
        Switch  *Var[0]
            Case  ==  ~Entry:Entry1
                Exec  $Script_80246E30
            Case  ==  ~Entry:Entry2
                Exec  $Script_80246B08
            Default
                Set   *MapVar[0]  00000000
                Set   *MapVar[1]  $???_80247438
                Set   *MapVar[2]  00000000
                Exec  $Script_80243D30
                Set   *MapFlag[00]  .True
        EndSwitch
    EndIf
    Return
    End
}

#new:Script $Script_MakeEntities
{
    Call  MakeEntity        ( .Entity:SavePoint ~Vec4d:Entity80247590 80000000 )
    Call  MakeEntity        ( .Entity:HiddenYellowBlock ~Vec4d:Entity802475B4 .Item:FireFlower 80000000 )
    Call  AssignBlockFlag   ( *Flag_OMO_2F )
    Call  MakeEntity        ( .Entity:HiddenPanel ~Vec4d:Entity802475EC ~Model:soto 80000000 )
    Call  AssignPanelFlag   ( *Flag_OMO_5E )
    Return
    End
}

PADDING: 80247634 to 80247640 (00007634 to 00007640)
00000000 00000000 00000000

#new:Script $Script_80247640
{
    Return
    End
}

#new:NpcSettings $NpcSettings_80247650
{
    00000000 00200018 $Script_80247640 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

#new:AISettings $AISettings_8024767C
{
    2.0 % move speed
    60` % move time
    15` % wait time
  100.0 % alert radius
   30.0
    4`
    4.0 % chase speed
    6`
    1`
  140.0 % chase radius
   30.0
    1`
}

#new:Script $Script_NpcAI_802476AC
{
    Call  $Function_80240AA8    ( $AISettings_8024767C )
    Return
    End
}

#new:NpcSettings $NpcSettings_802476CC
{
    00000000 00170016 00000000 00000000 $Script_NpcAI_802476AC 80077F70 00000000 8007809C
    00000000 00000000 000E0001
}

#new:Script $Script_Interact_802476F8
{
    Call  DisablePlayerInput    ( .True )
    ExecWait  $Script_80247100
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_Init_80247734
{
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_802476F8 )
    Return
    End
}

#new:Script $Script_Interact_80247758
{
    Switch  *StoryProgress
        Case  <  00000000
            Call  FindKeyItem   ( .Item:MysteryNote *Var[0] )
            If  *Var[0]  ==  FFFFFFFF
                If  *Flag_OMO_30  ==  .False
                    Call  SpeakToPlayer ( .Npc:Self 008C0304 008C0301 00000000 000F002B ) % This is Green Station. I'm certainly feeling green ...
                Else
                    If  *Flag_OMO_31  ==  .False
                        Call  SpeakToPlayer ( .Npc:Self 008C0304 008C0301 00000000 000F002C ) % I witnessed a Shy Guy with a book running to the r ...
                    Else
                        Call  SpeakToPlayer ( .Npc:Self 008C0304 008C0301 00000000 000F002F ) % It looks like the Shy Guys are really robbing Toad ...
                    EndIf
                EndIf
            Else
                Call  SpeakToPlayer ( .Npc:Self 008C0304 008C0301 00000000 000F002D ) % That Memo you have is written in Shy Guy language. ...
            EndIf
        Case  <  00000002
            Call  SpeakToPlayer ( .Npc:Self 008C0304 008C0301 00000000 000F002E ) % We can go to Red Station now! Great! Feel free to  ...
        Case  <  00000004
            Call  SpeakToPlayer ( .Npc:Self 008C0304 008C0301 00000000 000F002F ) % It looks like the Shy Guys are really robbing Toad ...
        Default
            Call  SpeakToPlayer ( .Npc:Self 008C0304 008C0301 00000000 000F0030 ) % I'm sure the Shy Guys are going to knock it off fo ...
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_802478FC
{
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_80247758 )
    Return
    End
}

#new:Script $Script_NpcAI_80247920
{
    Loop
        Call  GetSelfVar    ( 00000000 *Var[0] )
        Switch  *Var[0]
            Case  ==  00000000
                Call  GetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
                If  *Var[1]  ==  00000000
                    Call  SetSelfVar    ( 00000000 00000001 )
                    Call  BindNpcAI     ( .Npc:Self $Script_NpcAI_802476AC )
                EndIf
            Case  ==  00000002
                Call  DisablePlayerInput    ( .True )
                Wait  25`
                Call  SetNpcPos ( .Npc:Self 00000000 FFFFFC18 00000000 )
                Call  SetNpcFlagBits    ( .Npc:Self 00000002 .False )
                Call  SetNpcFlagBits    ( .Npc:Self 00000040 .True )
                Call  SetSelfVar        ( 00000000 00000000 )
                Call  DisablePlayerInput    ( .False )
        EndSwitch
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_Defeat_80247A78
{
    Call  GetBattleOutcome  ( *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  SetSelfVar    ( 00000000 00000002 )
            Call  BindNpcAI     ( .Npc:Self $Script_NpcAI_80247920 )
            Call  DoNpcDefeat ( )
        Case  ==  00000001
        Case  ==  00000002
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_80247B04
{
    Call  BindNpcIdle   ( .Npc:Self $Script_NpcAI_80247920 )
    Call  BindNpcDefeat ( .Npc:Self $Script_Defeat_80247A78 )
    Return
    End
}

#new:NpcGroup $NpcGroup_80247B3C
{
    00000000 $NpcSettings_80247650 ~Vec3f:NPC_80247B3C % -145 50 -110
    00400D05 $Script_Init_80247734 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80247B3C
    ~AnimationTable:NPC_80247B3C % .Sprite:TrainStationToad
    00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
    %
    % $NpcGroup_80247B3C[1F0]
    00000001 $NpcSettings_80247650 ~Vec3f:NPC_80247D2C % -250 0 50
    00400D05 $Script_Init_802478FC 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_80247D2C
    ~AnimationTable:NPC_80247D2C % .Sprite:TrainStationToad
    00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
}

#new:NpcGroup $NpcGroup_80247F1C
{
    00000002 $NpcSettings_802476CC ~Vec3f:NPC_80247F1C % 0 -1000 0
    00200F04 $Script_Init_80247B04 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80247F1C
    ~AnimationTable:NPC_80247F1C % .Sprite:ShyGuy
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_8024810C
{
    00000003 $NpcSettings_802476CC ~Vec3f:NPC_8024810C % 0 -1000 0
    00200F04 $Script_Init_80247B04 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_8024810C
    ~AnimationTable:NPC_8024810C % .Sprite:ShyGuy
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_802482FC
{
    00000004 $NpcSettings_802476CC ~Vec3f:NPC_802482FC % 0 -1000 0
    00200F04 $Script_Init_80247B04 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_802482FC
    ~AnimationTable:NPC_802482FC % .Sprite:ShyGuy
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_802484EC
{
    00000005 $NpcSettings_802476CC ~Vec3f:NPC_802484EC % 0 -1000 0
    00200F04 $Script_Init_80247B04 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_802484EC
    ~AnimationTable:NPC_802484EC % .Sprite:ShyGuy
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_802486DC
{
    00000002 $NpcGroup_80247B3C 00000000
    00000001 $NpcGroup_80247F1C 120A0007
    00000001 $NpcGroup_8024810C 120A0007
    00000001 $NpcGroup_802482FC 120A0007
    00000001 $NpcGroup_802484EC 120A0007
    00000000 00000000 00000000
}

PADDING: 80248724 to 80248730 (00008724 to 00008730)
00000000 00000000 00000000

#new:ASCII $ASCII_80248730
{
    "omo_09"
}

#new:ASCII $ASCII_80248738
{
    "omo_10"
}

#new:ASCII $ASCII_80248740
{
    "omo_08"
}

#new:ASCII $ASCII_80248748
{
    "omo_06"
}

#new:ASCII $ASCII_80248750
{
    "omo_03"
}

#new:ASCII $ASCII_80248758
{
    "omo_16"
}

#new:ConstDouble $ConstDouble_80248760
{
    0.600000d
}

#new:ConstDouble $ConstDouble_80248768
{
    0.600000d
}

#new:JumpTable $JumpTable_80248770
{
    $Function_80240AA8[1E4] $Function_80240AA8[1F4] $Function_80240AA8[20C] $Function_80240AA8[21C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[234] $Function_80240AA8[244]
    $Function_80240AA8[25C] $Function_80240AA8[26C] $Function_80240AA8[28C] $Function_80240AA8[2AC]
    $Function_80240AA8[2CC] $Function_80240AA8[2EC] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C]
    $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[304]
}

