% Script File: hos_00.mscr
% Decoded from: 0 to 4B90 (hos_00)

#new:Function_Init $Function_Init
{
	LAW       V0, 8007419C
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LH        V1, 8E (V0)
	ADDIU     V0, R0, 3
	BNE       V1, V0, .o34
	NOP
	LIA       A0, 800D9668
	LIA       A1, $ASCII_80244B30
	JAL       ~Func:sprintf
	RESERVED
	.o34
	LW        RA, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240044 to 80240050 (00000044 to 00000050)
00000000 00000000 00000000

#new:Function $Function_80240050
{
	ADDIU     SP, SP, FF98
	SW        S1, 2C (SP)
	COPY      S1, A0
	SW        RA, 30 (SP)
	SW        S0, 28 (SP)
	SDC1      F30, 60 (SP)
	SDC1      F28, 58 (SP)
	SDC1      F26, 50 (SP)
	SDC1      F24, 48 (SP)
	SDC1      F22, 40 (SP)
	SDC1      F20, 38 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	SWC1      F0, 20 (SP)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_float_variable
	MOV.S     F22, F0
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	MFC1      A1, F30
	MFC1      A2, F28
	MFC1      A3, F26
	LWC1      F2, 20 (SP)
	SWC1      F24, 10 (SP)
	SWC1      F22, 14 (SP)
	SWC1      F20, 18 (SP)
	TRUNC.W.S F2, F2
	MFC1      A0, F2
	JAL       8006FE30
	SWC1      F0, 1C (SP)
	LW        RA, 30 (SP)
	LW        S1, 2C (SP)
	LW        S0, 28 (SP)
	LDC1      F30, 60 (SP)
	LDC1      F28, 58 (SP)
	LDC1      F26, 50 (SP)
	LDC1      F24, 48 (SP)
	LDC1      F22, 40 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 68
}

% Origin: HEURISTIC
#new:Function $Function_80240170
{
	ADDIU     SP, SP, FF98
	SDC1      F26, 50 (SP)
	LAF       F26, 800B1DEC
	LIF       F0, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F2
	ADDIU     A0, R0, 1F4
	SW        RA, 34 (SP)
	DIV.S     F26, F26, F0
	MUL.S     F26, F26, F2
	NOP
	SW        S0, 30 (SP)
	SDC1      F22, 40 (SP)
	SDC1      F20, 38 (SP)
	LAD       F0, $ConstDouble_80244B40
	CVT.D.S   F20, F26
	ADD.D     F22, F20, F0
	SDC1      F30, 60 (SP)
	SDC1      F28, 58 (SP)
	SUB.D     F20, F20, F0
	SDC1      F24, 48 (SP)
	CVT.S.D   F22, F22
	JAL       ~Func:rand_int
	CVT.S.D   F20, F20
	ADDIU     V0, V0, FF06
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 1F4
	ADDIU     A0, R0, 64
	ADDIU     V0, V0, FF06
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	JAL       ~Func:rand_int
	SWC1      F4, 28 (SP)
	ADDIU     V0, V0, 258
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	JAL       ~Func:sin_rad
	MOV.S     F12, F26
	MUL.S     F0, F28, F0
	NOP
	LIA       S0, 8010EFC8
	LWC1      F2, 28 (S0)
	ADD.S     F30, F2, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F22
	MUL.S     F0, F24, F0
	NOP
	LWC1      F2, 2C (S0)
	ADD.S     F30, F30, F0
	LIF       F0, 200.0
	NOP
	ADD.S     F2, F2, F0
	MOV.S     F12, F26
	SWC1      F30, 20 (SP)
	JAL       ~Func:cos_rad
	SWC1      F2, 24 (SP)
	MUL.S     F0, F28, F0
	NOP
	LWC1      F30, 30 (S0)
	SUB.S     F30, F30, F0
	JAL       ~Func:cos_rad
	MOV.S     F12, F22
	MUL.S     F24, F24, F0
	NOP
	SUB.S     F30, F30, F24
	JAL       ~Func:sin_rad
	MOV.S     F12, F26
	MUL.S     F0, F28, F0
	NOP
	LWC1      F24, 28 (S0)
	MOV.S     F12, F20
	JAL       ~Func:sin_rad
	ADD.S     F24, F24, F0
	LWC1      F4, 28 (SP)
	MUL.S     F0, F4, F0
	NOP
	MOV.S     F12, F26
	LWC1      F26, 2C (S0)
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F0
	MUL.S     F28, F28, F0
	NOP
	LWC1      F22, 30 (S0)
	MOV.S     F12, F20
	JAL       ~Func:cos_rad
	SUB.S     F22, F22, F28
	LWC1      F4, 28 (SP)
	MUL.S     F0, F4, F0
	NOP
	ADDIU     A0, R0, A
	JAL       ~Func:rand_int
	SUB.S     F22, F22, F0
	CLEAR     A0
	ADDIU     V0, V0, A
	LW        A1, 20 (SP)
	LW        A2, 24 (SP)
	MFC1      A3, F30
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F24, 10 (SP)
	SWC1      F26, 14 (SP)
	SWC1      F0, 1C (SP)
	JAL       8006FE30
	SWC1      F22, 18 (SP)
	LW        RA, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 60 (SP)
	LDC1      F28, 58 (SP)
	LDC1      F26, 50 (SP)
	LDC1      F24, 48 (SP)
	LDC1      F22, 40 (SP)
	LDC1      F20, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 68
}

% Origin: HEURISTIC
#new:Function $Function_8024036C
{
	ADDIU     SP, SP, FF98
	LAF       F0, 800B1DEC
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	ADDIU     A0, R0, 12C
	SW        RA, 34 (SP)
	SDC1      F30, 60 (SP)
	DIV.S     F0, F0, F2
	MUL.S     F30, F0, F4
	NOP
	SW        S0, 30 (SP)
	SDC1      F28, 58 (SP)
	SDC1      F26, 50 (SP)
	LAD       F2, $ConstDouble_80244B48
	CVT.D.S   F0, F30
	ADD.D     F4, F0, F2
	SDC1      F24, 48 (SP)
	SDC1      F22, 40 (SP)
	SUB.D     F0, F0, F2
	SDC1      F20, 38 (SP)
	CVT.S.D   F4, F4
	CVT.S.D   F0, F0
	SWC1      F4, 20 (SP)
	JAL       ~Func:rand_int
	SWC1      F0, 24 (SP)
	ADDIU     V0, V0, FF6A
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 12C
	ADDIU     A0, R0, 64
	ADDIU     V0, V0, FF6A
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	JAL       ~Func:rand_int
	SWC1      F6, 28 (SP)
	LIA       S0, 8010EFC8
	ADDIU     V0, V0, 32
	LWC1      F2, 2C (S0)
	LIF       F0, 250.0
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	C.LE.S    F0, F2
	NOP
	BC1T      .o1F0
	ADDIU     V0, R0, 2
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F26, 28 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F26, F26, F0
	MUL.S     F0, F22, F0
	NOP
	LWC1      F28, 2C (S0)
	ADD.S     F26, F26, F0
	LIF       F0, 200.0
	NOP
	ADD.S     F28, F28, F0
	JAL       ~Func:cos_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F24, 30 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F0
	MUL.S     F0, F22, F0
	NOP
	SUB.S     F24, F24, F0
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F22, 28 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F22, F22, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	MOV.S     F12, F30
	LWC1      F30, 2C (S0)
	JAL       ~Func:cos_rad
	ADD.S     F22, F22, F0
	MUL.S     F0, F20, F0
	NOP
	LWC1      F20, 30 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F20, F20, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	ADDIU     A0, R0, A
	JAL       ~Func:rand_int
	SUB.S     F20, F20, F0
	ADDIU     A0, R0, 1
	ADDIU     V0, V0, A
	MFC1      A1, F26
	MFC1      A2, F28
	MFC1      A3, F24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F22, 10 (SP)
	SWC1      F30, 14 (SP)
	SWC1      F0, 1C (SP)
	JAL       8006FE30
	SWC1      F20, 18 (SP)
	ADDIU     V0, R0, 2
	.o1F0
	LW        RA, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 60 (SP)
	LDC1      F28, 58 (SP)
	LDC1      F26, 50 (SP)
	LDC1      F24, 48 (SP)
	LDC1      F22, 40 (SP)
	LDC1      F20, 38 (SP)
	JR        RA
	ADDIU     SP, SP, 68
}

% Origin: HEURISTIC
#new:Function $Function_80240584
{
	ADDIU     SP, SP, FF90
	SW        S1, 34 (SP)
	COPY      S1, A0
	LAF       F0, 800B1DEC
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	ADDIU     A0, R0, 96
	SW        RA, 38 (SP)
	SDC1      F30, 68 (SP)
	DIV.S     F0, F0, F2
	MUL.S     F30, F0, F4
	NOP
	SW        S0, 30 (SP)
	SDC1      F28, 60 (SP)
	SDC1      F26, 58 (SP)
	LAD       F2, $ConstDouble_80244B50
	CVT.D.S   F0, F30
	ADD.D     F4, F0, F2
	SDC1      F24, 50 (SP)
	SDC1      F22, 48 (SP)
	SUB.D     F0, F0, F2
	SDC1      F20, 40 (SP)
	CVT.S.D   F4, F4
	CVT.S.D   F0, F0
	SWC1      F4, 20 (SP)
	JAL       ~Func:rand_int
	SWC1      F0, 24 (SP)
	ADDIU     A0, R0, 96
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	JAL       ~Func:rand_int
	SWC1      F6, 28 (SP)
	ADDIU     A0, R0, 64
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	JAL       ~Func:rand_int
	SWC1      F6, 2C (SP)
	LIA       S0, 8010EFC8
	ADDIU     V0, V0, FFCE
	LWC1      F0, 30 (S0)
	LIF       F22, 200.0
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	C.LT.S    F0, F22
	NOP
	BC1T      .o208
	ADDIU     V0, R0, 2
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F26, 28 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F26, F26, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	LWC1      F28, 2C (S0)
	ADD.S     F28, F28, F22
	ADD.S     F26, F26, F0
	JAL       ~Func:cos_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F24, 30 (S0)
	LWC1      F12, 20 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F24, F24, F0
	LWC1      F6, 28 (SP)
	MUL.S     F0, F6, F0
	NOP
	SUB.S     F24, F24, F0
	TRUNC.W.S F6, F26
	SWC1      F6, 88 (S1)
	TRUNC.W.S F6, F28
	SWC1      F6, 8C (S1)
	TRUNC.W.S F6, F24
	SWC1      F6, 90 (S1)
	JAL       ~Func:sin_rad
	MOV.S     F12, F30
	MUL.S     F0, F20, F0
	NOP
	LWC1      F22, 28 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:sin_rad
	SUB.S     F22, F22, F0
	LWC1      F6, 2C (SP)
	MUL.S     F0, F6, F0
	NOP
	MOV.S     F12, F30
	LWC1      F30, 2C (S0)
	JAL       ~Func:cos_rad
	ADD.S     F22, F22, F0
	MUL.S     F0, F20, F0
	NOP
	LWC1      F20, 30 (S0)
	LWC1      F12, 24 (SP)
	JAL       ~Func:cos_rad
	ADD.S     F20, F20, F0
	LWC1      F6, 2C (SP)
	MUL.S     F0, F6, F0
	NOP
	ADDIU     A0, R0, 4
	JAL       ~Func:rand_int
	SUB.S     F20, F20, F0
	ADDIU     A0, R0, 2
	ADDIU     V0, V0, A
	MFC1      A1, F26
	MFC1      A2, F28
	MFC1      A3, F24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F22, 10 (SP)
	SWC1      F30, 14 (SP)
	SWC1      F0, 1C (SP)
	JAL       8006FE30
	SWC1      F20, 18 (SP)
	ADDIU     V0, R0, 2
	.o208
	LW        RA, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 68 (SP)
	LDC1      F28, 60 (SP)
	LDC1      F26, 58 (SP)
	LDC1      F24, 50 (SP)
	LDC1      F22, 48 (SP)
	LDC1      F20, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 70
}

PADDING: 802407B8 to 802407C0 (000007B8 to 000007C0)
00000000 00000000

#new:Function $Function_802407C0
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	SAB       V0, 8010F2A2
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802407EC to 802407F0 (000007EC to 000007F0)
00000000

% Origin: HEURISTIC
#new:Function $Function_802407F0
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	LIA       S0, $???_80242970
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        V0, 0 (S0)
	BNE       V0, R0, .o60
	COPY      S1, A0
	JAL       ~Func:heap_malloc
	ADDIU     A0, R0, 40
	SW        V0, 0 (S0)
	CLEAR     V1
	COPY      A1, V0
	COPY      A0, S1
	.o3C
	LW        V0, 84 (A0)
	ADDIU     A0, A0, 4
	ADDIU     V1, V1, 1
	SW        V0, 0 (A1)
	SLTI      V0, V1, 10
	BNE       V0, R0, .o3C
	ADDIU     A1, A1, 4
	BEQ       R0, R0, .o9C
	NOP
	.o60
	CLEAR     V1
	COPY      A1, V0
	COPY      A0, S1
	.o6C
	LW        V0, 0 (A1)
	ADDIU     A1, A1, 4
	ADDIU     V1, V1, 1
	SW        V0, 84 (A0)
	SLTI      V0, V1, 10
	BNE       V0, R0, .o6C
	ADDIU     A0, A0, 4
	LIA       S0, $???_80242970
	JAL       ~Func:heap_free
	LW        A0, 0 (S0)
	SW        R0, 0 (S0)
	.o9C
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HEURISTIC
#new:Function $Function_802408A4
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 18 (SP)
	SW        S1, 14 (SP)
	LW        V0, C (S0)
	LW        S1, 0 (V0)
	JAL       ~Func:get_variable
	COPY      A1, S1
	LIO       V1, FFF0FFFF
	COPY      A0, S0
	AND       V0, V0, V1
	SLL       V0, V0, 5
	LTW       A2, V0 (800878E0)
	JAL       ~Func:set_variable
	COPY      A1, S1
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80240908
{
	ADDIU     V0, R0, 1
	SAB       V0, 8010F29A
	JR        RA
	ADDIU     V0, R0, 2
}

% Origin: HEURISTIC
#new:Function $Function_8024091C
{
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	ADDIU     S0, S0, 4
	COPY      A0, S1
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	MOV.S     F20, F0
	JAL       ~Func:sin_deg
	MOV.S     F12, F0
	MUL.S     F20, F20, F0
	NOP
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	COPY      A0, S1
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80240994
{
	ADDIU     SP, SP, FFD8
	ADDIU     A0, R0, FFFC
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	JAL       ~Func:get_npc_unsafe
	SW        S0, 10 (SP)
	CLEAR     A0
	JAL       ~Func:get_npc_unsafe
	COPY      S1, V0
	COPY      S0, V0
	LWC1      F12, 38 (S1)
	LWC1      F14, 40 (S1)
	LW        A2, 38 (S0)
	JAL       ~Func:atan2
	LW        A3, 40 (S0)
	SWC1      F0, C (S1)
	LIA       S1, 8010EFC8
	LWC1      F12, 28 (S1)
	LWC1      F14, 30 (S1)
	LW        A2, 38 (S0)
	JAL       ~Func:atan2
	LW        A3, 40 (S0)
	LIA       S3, $???_80242B9C
	LIA       S2, $???_80242BA0
	LWC1      F12, 0 (S3)
	LWC1      F14, 0 (S2)
	SWC1      F0, 80 (S1)
	LW        A2, 38 (S0)
	JAL       ~Func:atan2
	LW        A3, 40 (S0)
	LWC1      F2, 38 (S0)
	LWC1      F4, 40 (S0)
	SWC1      F0, C (S0)
	SWC1      F2, 0 (S3)
	SWC1      F4, 0 (S2)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80240A54
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	ADDIU     A0, R0, 1
	SW        RA, 18 (SP)
	JAL       ~Func:get_npc_unsafe
	SW        S0, 10 (SP)
	COPY      S0, V0
	LWC1      F2, C (S0)
	LIF       F0, 180.0
	NOP
	C.LT.S    F2, F0
	NOP
	BC1F      .o54
	NOP
	LWC1      F0, 38 (S0)
	LIF       F2, 40.0
	BEQ       R0, R0, .o68
	SUB.S     F0, F0, F2
	.o54
	LWC1      F0, 38 (S0)
	LIF       F2, 40.0
	NOP
	ADD.S     F0, F0, F2
	.o68
	LIF       F2, 10.0
	TRUNC.W.S F4, F0
	SWC1      F4, 84 (S1)
	LWC1      F0, 3C (S0)
	ADD.S     F0, F0, F2
	TRUNC.W.S F4, F0
	SWC1      F4, 88 (S1)
	LWC1      F0, 40 (S0)
	TRUNC.W.S F4, F0
	SWC1      F4, 8C (S1)
	LWC1      F12, 9C (S1)
	CVT.S.W   F12, F12
	LW        A2, 38 (S0)
	LW        A3, 40 (S0)
	LWC1      F14, A4 (S1)
	JAL       ~Func:atan2
	CVT.S.W   F14, F14
	SWC1      F0, C (S0)
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80240B20
{
	LIA       V1, 800B1D80
	LHU       V0, 0 (V1)
	ORI       V0, V0, 1000
	SH        V0, 0 (V1)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_80240B3C
{
	ADDIU     SP, SP, FFC0
	SDC1      F20, 20 (SP)
	LIF       F20, 310.0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SDC1      F26, 38 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	LW        S1, 84 (S0)
	LW        S2, 8C (S0)
	LIF       F24, 100.0
	JAL       ~Func:sin_deg
	MOV.S     F12, F20
	MUL.S     F0, F0, F24
	NOP
	MTC1      S1, F22
	NOP
	CVT.S.W   F22, F22
	ADD.S     F0, F22, F0
	TRUNC.W.S F2, F0
	SWC1      F2, 84 (S0)
	JAL       ~Func:cos_deg
	MOV.S     F12, F20
	MUL.S     F0, F0, F24
	NOP
	MTC1      S2, F20
	NOP
	CVT.S.W   F20, F20
	LIF       F26, 130.0
	SUB.S     F0, F20, F0
	TRUNC.W.S F2, F0
	SWC1      F2, 88 (S0)
	JAL       ~Func:sin_deg
	MOV.S     F12, F26
	MUL.S     F0, F0, F24
	NOP
	ADD.S     F22, F22, F0
	TRUNC.W.S F2, F22
	SWC1      F2, 8C (S0)
	JAL       ~Func:cos_deg
	MOV.S     F12, F26
	MUL.S     F0, F0, F24
	NOP
	SUB.S     F20, F20, F0
	TRUNC.W.S F2, F20
	SWC1      F2, 90 (S0)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F26, 38 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

PADDING: 80240C38 to 80240C40 (00000C38 to 00000C40)
00000000 00000000

#new:Function $Function_80240C40
{
	ADDIU     SP, SP, FFE0
	ADDIU     V0, R0, 1F4
	CLEAR     A0
	CLEAR     A1
	LAF       F0, 8010EFF0
	LIF       F2, 200.0
	LUI       A2, 4358
	SUB.S     F0, F0, F2
	SW        RA, 18 (SP)
	TRUNC.W.S F4, F0
	MFC1      A3, F4
	JAL       ~Func:update_lerp
	SW        V0, 10 (SP)
	TRUNC.W.S F4, F0
	MFC1      T0, F4
	NOP
	BLTZL     T0, .o50
	CLEAR     T0
	.o50
	SLTI      V0, T0, D9
	BEQL      V0, R0, .o5C
	ADDIU     T0, R0, D8
	.o5C
	LIO       A1, E3000A01
	LIO       A3, FCFFC7FF
	LUI       A2, FF8E
	LIA       A0, 8009A66C
	LW        V0, 0 (A0)
	ORI       A2, A2, 7F3F
	COPY      V1, V0
	ADDIU     V0, V0, 8
	SW        V0, 0 (A0)
	SW        A1, 0 (V1)
	SW        R0, 4 (V1)
	ADDIU     V1, V0, 8
	SW        V1, 0 (A0)
	ADDIU     V1, V0, 10
	SW        A3, 0 (V0)
	SW        A2, 4 (V0)
	SW        V1, 0 (A0)
	LUI       V1, FA00
	SW        V1, 8 (V0)
	ANDI      V1, T0, FF
	SW        V1, C (V0)
	LW        RA, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

PADDING: 80240D08 to 80240D10 (00000D08 to 00000D10)
00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -610.0    0.0  -45.0   90.0
    ~Vec4f:Entry1 %  870.0   60.0 -130.0  270.0
    ~Vec4f:Entry2 %  870.0  -10.0   30.0  270.0
    ~Vec4f:Entry3 %  870.0  -10.0   30.0  270.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000004
    [Background]  80200000
    [MapTattle]   0019001C
}

#new:Script $Script_80240D90
{
    Switch  *StoryProgress
        Case  FFFFFFF3  to  00000005
            Call  SetMusicTrack ( 00000000 .Song:ShyGuyInvasion 00000000 00000006 )
        Default
            Call  SetMusicTrack ( 00000000 .Song:ToadTown 00000000 00000006 )
    EndSwitch
    Return
    End
}

#new:Script $Script_80240E04
{
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            Exec  $Script_80240D90
        EndCaseGroup
        CaseOR  ==  ~Entry:Entry1
        CaseOR  ==  ~Entry:Entry2
            Call  SetMusicTrack ( 00000000 .Song:ShootingStarSummit 00000000 00000008 )
        EndCaseGroup
    EndSwitch
    If  *Var[0]  !=  00000000
        Goto  14
    EndIf
    Label  A
    Wait  1`
    Call  GetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
    If  *Var[1]  >  000000D2
        Call  FadeOutMusic  ( 00000000 00000341 )
        Wait  25`
        Call  SetMusicTrack ( 00000000 .Song:ShootingStarSummit 00000000 00000008 )
        Wait  30`
        Goto  14
    EndIf
    Goto  A
    Label  14
    Wait  1`
    If  *StoryProgress  ==  FFFFFF97
        Goto  14
    EndIf
    Call  GetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
    If  *Var[1]  <  FFFFFFC9
        Call  FadeOutMusic  ( 00000000 00000341 )
        Wait  25`
        Exec  $Script_80240D90
        Wait  30`
        Goto  A
    EndIf
    Goto  14
    Return
    End
}

#new:Script $Script_8024101C
{
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry3
        Call  SetMusicTrack ( 00000000 .Song:StarshipTheme 00000000 00000008 )
    Else
        Exec  $Script_80240E04
    EndIf
    Return
    End
}

#new:Script $Script_80241084
{
    Call  SetMusicTrack ( 00000000 .Song:KammyKoopaTheme 00000000 00000008 )
    Return
    End
}

#new:Script $Script_802410B0
{
    SetGroup  0000000B
    Set   *Var[D]  00000000
    Set   *Var[E]  00000000
    Label  0
    Call  GetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
    If  *Var[1]  <  FFFFFFCE
        Wait  1`
        Goto  0
    EndIf
    Set   *Var[8]  000003E8
    Sub   *Var[8]  *Var[1]
    Div   *Var[8]  0000000A
    If  *Var[8]  <  00000014
        Set   *Var[8]  00000014
    EndIf
    Call  GetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
    Call  RandInt   ( 00000190 *Var[A] )
    Set   *Var[B]  000000C8
    Call  RandInt   ( 00000190 *Var[C] )
    Sub   *Var[C]  000000C8
    Add   *Var[1]  *Var[A]
    Add   *Var[2]  *Var[B]
    Add   *Var[3]  *Var[C]
    Set   *Var[4]  *Var[1]
    Call  RandInt   ( 00000064 *Var[A] )
    Add   *Var[A]  00000032
    Sub   *Var[4]  *Var[A]
    Set   *Var[5]  00000000
    Set   *Var[6]  *Var[3]
    Call  RandInt   ( 00000004 *Var[7] )
    Add   *Var[7]  0000000A
    Switch  *Var[3]
        Case  <  FFFFFEDE
            Set   *Var[0]  00000000
        Case  <  00000028
            Set   *Var[0]  00000002
        Case  >=  00000028
            Set   *Var[0]  00000001
    EndSwitch
    If  *Var[E]  <  00000002
        Call  PlaySoundAt   ( B0000015 00000000 *Var[1] *Var[2] *Var[3] )
        Add   *Var[E]  00000001
    EndIf
    Add   *Var[D]  *Var[8]
    If  *Var[D]  >  0000001E
        Set   *Var[D]  00000000
        Set   *Var[E]  00000000
    EndIf
    Call  $Function_80240050    ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Var[6] *Var[7] )
    Wait  *Var[8]
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802413EC
{
    SetGroup  0000000B
    Thread
        Label  0
        Call  RandInt   ( 00000032 *Var[0] )
        Add   *Var[0]  0000000A
        Call  $Function_80240170 ( )
        Wait  *Var[0]
        Goto  0
    EndThread
    Thread
        Label  1
        Call  RandInt   ( 00000032 *Var[0] )
        Add   *Var[0]  00000014
        Call  $Function_8024036C ( )
        Wait  *Var[0]
        Goto  1
    EndThread
    Thread
        Label  2
        Call  RandInt       ( 00000032 *Var[0] )
        Add   *Var[0]  00000014
        Call  $Function_80240584 ( )
        Call  PlaySoundAt   ( B0000015 00000000 *Var[1] *Var[2] *Var[3] )
        Wait  *Var[0]
        Goto  2
    EndThread
    Return
    End
}

#new:Script $Script_ExitWalk_80241554
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Switch  *StoryProgress
        Case  FFFFFF81  to  0000005F
            Call  GotoMap   ( $ASCII_80244B60 00000001 ) % osr_01
        Default
            Call  GotoMap   ( $ASCII_80244B58 00000001 ) % osr_00
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_802415F0
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80244B68 00000000 ) % hos_01
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_8024164C
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry2 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80244B70 00000000 ) % hos_06
    Wait  100`
    Return
    End
}

#new:Script $Script_802416A8
{
    Bind  $Script_ExitWalk_80241554 .Trigger:FloorAbove ~Collider:deiliw 00000001 00000000
    Bind  $Script_ExitWalk_802415F0 .Trigger:FloorAbove ~Collider:deiline 00000001 00000000
    Bind  $Script_ExitWalk_8024164C .Trigger:FloorAbove ~Collider:deilise 00000001 00000000
    Return
    End
}

#new:Script $Script_8024170C
{
    SetGroup  00000000
    Set   *Var[0]  00000000
    Loop
        Call  SetTexPanOffset   ( 0000000D 00000000 *Var[0] 00000000 )
        Add   *Var[0]  00004000
        Wait  15`
    EndLoop
    Return
    End
}

#new:Script $Script_EnterWalk_80241784
{
    Call  GetLoadType   ( *Var[1] )
    If  *Var[1]  ==  00000001
        Exec  $Script_80244AF0
        Exec  EnterSavePoint
        Exec  $Script_802416A8
        Return
    EndIf
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry3
        Call  SetGroupEnabled   ( ~Model:g107 00000000 )
        Exec  $Script_80241B60
        Return
    Else
        Exec  $Script_80244AF0
        Set   *Var[0]  $Script_802416A8
        Exec  EnterWalk
        Wait  1`
    EndIf
    Return
    End
}

#new:Script_Main $Script_Main
{
    Set   *WorldMapLocation  .Location:ShootingStarSummit
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Set   *Flag_MAP_02  .True
    Set   *Flag_Rowf_Badges_Chosen  .False
    Call  GetEntryID        ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry3
        Call  MakeNpcs  ( 00000000 $NpcGroupList_80242810 )
    Else
        Call  MakeNpcs  ( 00000000 $NpcGroupList_802427EC )
    EndIf
    ExecWait  $Script_MakeEntities
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  !=  ~Entry:Entry3
        Exec  $Script_802410B0
    EndIf
    ExecWait  $Script_8024101C
    If  *StoryProgress  ==  FFFFFF97
        If  *AreaFlag[0B4]  ==  .False
            Wait  50`
            Set   *AreaFlag[0B4]  .True
        EndIf
        Exec  $Script_80242F20
    EndIf
    Exec  $Script_EnterWalk_80241784
    Exec  $Script_8024170C
    Return
    End
}

PADDING: 80241A28 to 80241A30 (00001A28 to 00001A30)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80241A30
{
    Label  0
    Call  SetTexPanOffset   ( 0000000D 00000000 00000000 00000000 )
    Wait  10`
    Call  SetTexPanOffset   ( 0000000D 00000000 00004000 00000000 )
    Wait  10`
    Goto  0
    Return
    End
}

PADDING: 80241AA8 to 80241AB0 (00001AA8 to 00001AB0)
00000000 00000000

#new:NpcSettings $NpcSettings_80241AB0
{
    00000000 00140014 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

#new:NpcSettings $NpcSettings_80241ADC
{
    00000000 001E0018 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

MISSING: 80241B08 to 80241B34 (00001B08 to 00001B34)
00000000 00170013 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00630000

#new:NpcSettings $NpcSettings_80241B34
{
    00000000 00220018 00000000 00000000 00000000 80077F70 00000000 8007809C
    00000000 00000000 001A0000
}

#new:Script $Script_80241B60
{
    Call  DisablePlayerInput    ( .True )
    Call  UseSettingsFrom   ( .Cam:Default 00000131 FFFFFFF6 FFFFFFCE )
    Call  SetPanTarget  ( .Cam:Default 00000131 FFFFFFF6 FFFFFFCE )
    Call  SetCamDistance    ( .Cam:Default *Fixed[400.0] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[9.0] *Fixed[-10.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Wait  30`
    Call  SpeakToPlayer ( 00000003 00860004 00860006 00000000 000A006C ) % Look... ...a shooting star! Princess... come back. ...
    Wait  10`
    Call  SetNpcAnimation   ( 00000003 00860001 )
    Call  SpeakToPlayer ( 00000002 00840104 00840101 00000000 000A006D ) % Did you wish for something? I hope your dreams com ...
    Wait  10`
    Call  SpeakToPlayer ( 00000003 00860004 00860001 00000000 000A006E ) % Me too!
    Wait  50`
    Call  GotoMap       ( $ASCII_80244B80 00000003 ) % osr_01
    Wait  100`
    Return
    End
}

#new:Script $Script_Defeat_80241CE8
{
    Call  GetBattleOutcome  ( *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  GetPlayerPos  ( *Var[3] *Var[1] *Var[2] )
            Call  SetPlayerPos  ( *Var[3] *Var[1] FFFFFFD3 )
            Add   *Var[3]  00000028
            Call  SetNpcPos     ( .Npc:Partner *Var[3] *Var[1] FFFFFFD3 )
            Call  GetNpcPos     ( 00000000 *Var[3] *Var[1] *Var[2] )
            Add   *Var[3]  FFFFFFE7
            Call  SetNpcPos     ( 00000000 *Var[3] *Var[1] FFFFFFD3 )
            Exec  $Script_80244210
            Call  DoNpcDefeat ( )
        Case  ==  00000001
        Case  ==  00000002
    EndSwitch
    Return
    End
}

#new:Script $Script_Idle_80241DFC
{
    Label  0
    Call  GetSelfVar    ( 00000000 *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  00000001
            Call  StartBossBattle   ( .Song:SpecialBattle )
    EndSwitch
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_Init_80241E80
{
    If  *StoryProgress  <  FFFFFF98
        Call  BindNpcIdle   ( .Npc:Self $Script_Idle_80241DFC )
        Call  BindNpcDefeat ( .Npc:Self $Script_Defeat_80241CE8 )
    Else
        Call  RemoveNpc ( .Npc:Self )
    EndIf
    Return
    End
}

#new:Script $Script_Idle_80241EE8
{
    Call  SetSelfVar    ( 00000000 00000000 )
    Loop
        Call  GetSelfVar    ( 00000000 *Var[0] )
        If  *Var[0]  ==  00000001
            BreakLoop
        EndIf
        Wait  1`
    EndLoop
    Call  EnablePartner ( 0000000B )
    Call  $Function_802407C0    ( 0000000B )
    Call  StartBattle ( )
    Return
    End
}

#new:Script $Script_Interact_80241F8C
{
    Return
    End
}

#new:Script $Script_Defeat_80241F9C
{
    Call  SetSelfVar    ( 00000000 00000002 )
    Call  DisablePartner        ( .Partner:Twink )
    Call  $Function_802407C0    ( 00000001 )
    Return
    End
}

#new:Script $Script_Init_80241FE0
{
    Call  BindNpcIdle       ( .Npc:Self $Script_Idle_80241EE8 )
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_80241F8C )
    Call  BindNpcDefeat     ( .Npc:Self $Script_Defeat_80241F9C )
    Return
    End
}

#new:NpcGroup $NpcGroup_8024202C
{
    00000000 $NpcSettings_80241AB0 ~Vec3f:NPC_8024202C % 0 -1000 0
    00000F05 $Script_Init_80241FE0 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_8024202C
    ~AnimationTable:NPC_8024202C % .Sprite:Twink
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_8024221C
{
    00000001 $NpcSettings_80241B34 ~Vec3f:NPC_8024221C % 0 -1000 0
    00840701 $Script_Init_80241E80 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_8024221C
    ~AnimationTable:NPC_8024221C % .Sprite:FlyingMagikoopa
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_8024240C
{
    00000002 $NpcSettings_80241ADC ~Vec3f:NPC_8024240C % 280 -10 -50
    00000001 00000000 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_8024240C
    ~AnimationTable:NPC_8024240C % .Sprite:ThreeSisters
    00000000 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_8024240C[1F0]
    00000003 $NpcSettings_80241ADC ~Vec3f:NPC_802425FC % 330 -10 -40
    00000001 00000000 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_802425FC
    ~AnimationTable:NPC_802425FC % .Sprite:ToadKid
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_802427EC
{
    00000001 $NpcGroup_8024202C 04000000
    00000001 $NpcGroup_8024221C 04030000
    00000000 00000000 00000000
}

#new:NpcGroupList $NpcGroupList_80242810
{
    00000002 $NpcGroup_8024240C 00000000
    00000000 00000000 00000000
}

PADDING: 80242828 to 80242830 (00002828 to 00002830)
00000000 00000000

#new:Script $Script_80242830
{
    Call  DisablePlayerInput        ( .True )
    Call  ShowMessageAtScreenPos    ( 001D016E 000000A0 00000028 ) %  Shooting Star Summit
    Call  DisablePlayerInput        ( .False )
    Return
    End
}

#new:Script $Script_80242878
{
    Call  DisablePlayerInput        ( .True )
    Call  ShowMessageAtScreenPos    ( 001D016D 000000A0 00000028 ) % Looking for something? Drop by Merluvlee's Place!  ...
    Call  DisablePlayerInput        ( .False )
    Return
    End
}

#new:Script $Script_MakeEntities
{
    Call  MakeEntity    ( .Entity:Signpost ~Vec4d:Entity802428C0 80000000 )
    Call  AssignScript  ( $Script_80242830 )
    Call  MakeEntity    ( .Entity:Signpost ~Vec4d:Entity802428F4 80000000 )
    Call  AssignScript  ( $Script_80242878 )
    Call  MakeEntity    ( .Entity:HiddenPanel ~Vec4d:Entity80242928 ~Model:o239 80000000 )
    Call  AssignPanelFlag   ( *Flag_HOS_07 )
    Return
    End
}

% Origin: HEURISTIC
#new:Unknown $???_80242970
{
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_80242974
{
    Call  ShowGotItem   ( *Var[0] .True 00000000 )
    Return
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802429A4
{
    Call  ShowGotItem   ( *Var[0] .True 00000010 )
    Return
    Return
    End
}

#new:VectorList $VectorList_802429D4
{
    % ~Path3f:Path_802429D4
    0.000000 0.000000 2.000000
    73.000000 -6.000000 2.000000
    106.000000 32.000000 2.000000
    70.000000 43.000000 2.000000
    30.000000 12.000000 2.000000
    -17.000000 -19.000000 2.000000
    -35.000000 29.000000 2.000000
    -20.000000 43.000000 2.000000
    -11.000000 39.000000 2.000000
    0.000000 -1.000000 0.000000
}

#new:VectorList $VectorList_80242A4C
{
    % ~Path3f:Path_80242A4C
    15.000000 174.000000 -45.000000
    -157.000000 92.000000 -44.000000
    -371.000000 103.000000 -45.000000
    -350.000000 75.000000 -45.000000
    -250.000000 40.000000 -45.000000
}

#new:VectorList $VectorList_80242A88
{
    % ~Path3f:Path_80242A88
    0.000000 0.000000 0.000000
    -60.000000 3.000000 -11.000000
    -55.000000 13.000000 0.000000
    4.000000 40.000000 -5.000000
    23.000000 35.000000 -10.000000
    63.000000 25.000000 -20.000000
    94.000000 30.000000 -40.000000
    134.000000 250.000000 -80.000000
}

#new:VectorList $VectorList_80242AE8
{
    % ~Path3f:Path_80242AE8
    -72.000000 318.000000 -80.000000
    -127.000000 153.000000 -60.000000
    -174.000000 114.000000 -44.000000
    -243.000000 90.000000 -45.000000
    -268.000000 50.000000 -46.000000
    -174.000000 10.000000 -43.000000
}

#new:VectorList $VectorList_80242B30
{
    % ~Path3f:Path_80242B30
    0.000000 0.000000 0.000000
    -30.000000 3.000000 -11.000000
    -55.000000 13.000000 0.000000
    -73.000000 20.000000 -5.000000
    -103.000000 40.000000 0.000000
    -143.000000 60.000000 0.000000
    -173.000000 50.000000 26.000000
    -126.000000 35.000000 16.000000
    1111.000000 570.000000 -527.000000
}

#new:Unknown $???_80242B9C
{
    00000000
}

#new:Unknown $???_80242BA0
{
    00000000
}

#new:Script $Script_80242BA4
{
    Call  GetNpcPos     ( 00000001 *Var[6] *Var[7] *Var[8] )
    Label  0
    Call  GetNpcPos     ( 00000001 *Var[3] *Var[4] *Var[5] )
    Set   *Var[9]  *Var[3]
    Set   *Var[A]  *Var[4]
    Set   *Var[B]  *Var[5]
    Sub   *Var[3]  *Var[6]
    Sub   *Var[4]  *Var[7]
    Sub   *Var[5]  *Var[8]
    Call  $Function_80240A54 ( )
    Set   *Var[6]  *Var[9]
    Set   *Var[7]  *Var[A]
    Set   *Var[8]  *Var[B]
    Call  PlayerFaceNpc ( 00000001 00000000 )
    Call  GetAngleBetweenNPCs   ( 00000000 00000001 *Var[0] )
    Call  InterpNpcYaw  ( 00000000 *Var[0] 00000000 )
    Call  GetAngleBetweenNPCs   ( .Npc:Partner 00000001 *Var[0] )
    Call  InterpNpcYaw  ( .Npc:Partner *Var[0] 00000000 )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80242D20
{
    Loop
        Call  InterpNpcYaw  ( 00000000 0000010E 00000000 )
        Wait  10`
        Call  InterpNpcYaw  ( 00000000 0000005A 00000000 )
        Wait  10`
    EndLoop
    Return
    End
}

#new:Script $Script_80242D8C
{
    Loop
        Loop  00000005
            Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  00000001
            Call  SetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
            Wait  3`
        EndLoop
        Wait  3`
        Loop  00000005
            Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
            Add   *Var[1]  FFFFFFFF
            Call  SetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
            Wait  3`
        EndLoop
        Wait  3`
    EndLoop
    Return
    End
}

#new:Script $Script_80242E98
{
    Loop
        Call  GetNpcPos     ( 00000000 *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000F
        Add   *Var[2]  00000002
        Call  SetItemPos    ( *MapVar[A] *Var[0] *Var[1] *Var[2] )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80242F20
{
    Loop
        Wait  1`
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        If  *Var[0]  <  FFFFFF9C
            BreakLoop
        EndIf
    EndLoop
    Call  DisablePlayerInput    ( .True )
    Call  802CF56C  ( 00000002 )
    Thread
        Add   *Var[0]  FFFFFFEC
        Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000A )
    EndThread
    Call  SetNpcPos ( 00000000 00000032 000000B4 00000000 )
    Call  SetNpcJumpscale   ( 00000000 00000000 )
    Add   *Var[0]  FFFFFFF6
    Call  NpcJump0  ( 00000000 *Var[0] 00000014 *Var[2] 0000000F )
    Call  PlaySoundAtPlayer ( 000000E1 00000000 )
    Call  SetPlayerAnimation    ( .PlayerAnim:ShockStill )
    Call  SetNpcAnimation   ( 00000000 0020000E )
    Thread
        Call  SetNpcAnimation   ( 00000000 00200016 )
        Call  SetNpcJumpscale   ( 00000000 *Fixed[0.6] )
        Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFF9C
        Call  NpcJump0  ( 00000000 *Var[0] 0000000A *Var[2] 00000014 )
        Call  SetPlayerAnimation    ( 00010002 )
    EndThread
    Thread
        Call  ShakeCam  ( .Cam:Default 00000000 00000005 *Fixed[2.0] )
    EndThread
    Thread
        Set   *Var[3]  00000168
        Loop  00000003
            Label  16
            Wait  1`
            Sub   *Var[3]  0000002D
            If  *Var[3]  >  00000000
                Call  SetNpcRotation    ( 00000000 00000000 *Var[3] 00000000 )
                If  *Var[3]  ==  0000010E
                    Call  SetNpcAnimation   ( 00000000 0020001A )
                EndIf
                If  *Var[3]  ==  0000005A
                    Call  SetNpcAnimation   ( 00000000 00200016 )
                EndIf
                Goto  16
            EndIf
        EndLoop
        Call  SetNpcRotation    ( 00000000 00000000 00000000 00000000 )
    EndThread
    Call  ShowMessageAtScreenPos    ( 000A000D 000000A0 00000028 ) % Ouch!!
    Call  SetMusicTrack ( 00000000 .Song:TwinkTheme 00000000 00000008 )
    Call  SetPlayerAnimation        ( 00010002 )
    Call  SetNpcAnimation   ( 00000000 00200001 )
    Call  NpcFacePlayer ( 00000000 00000000 )
    Call  SpeakToPlayer ( 00000000 0020000C 00200001 00000000 000A000E ) % Oh, sorry, sorry, so sorry! I'm in a huge hurry!!
    Call  $Function_80240B20 ( )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFFEC
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default 00000113 )
    Call  SetCamPitch   ( .Cam:Default *Fixed[16.0] *Fixed[-8.5] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  SetNpcSpeed   ( 00000000 *Fixed[3.0] )
    Call  GetNpcPos     ( 00000000 *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000028
    Call  NpcMoveTo     ( 00000000 *Var[0] *Var[2] 00000000 )
    Call  ShowEmote     ( 00000000 .Emote:Shock 0000002D 00000014 00000001 00000000 00000000 00000000 00000000 )
    Wait  20`
    Call  SetNpcAnimation   ( 00000000 0020000F )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
    Loop  00000002
        Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
        Call  NpcJump0  ( 00000000 *Var[0] *Var[1] *Var[2] 0000000F )
    EndLoop
    Call  DisablePartnerAI  ( 00000000 )
    Call  SetNpcJumpscale   ( .Npc:Partner 00000000 )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  00000019
    Call  NpcJump0      ( .Npc:Partner *Var[0] *Var[1] *Var[2] 0000000A )
    Call  SpeakToPlayer ( 00000000 00200009 00200001 00000000 000A000F ) % Oh...it's...!? You're Mario, aren't you!? Thank th ...
    Wait  5`
    Call  GetNpcPos     ( 00000000 *Var[4] *Var[5] *Var[6] )
    Call  LoadPath      ( 00000046 $VectorList_802429D4 0000000A .Easing:Linear )
    Label  1
    Call  GetNextPathPos ( )
    AddF  *Var[1]  *Var[4]
    AddF  *Var[2]  *Var[5]
    AddF  *Var[3]  *Var[6]
    Call  SetNpcPos     ( 00000000 *Var[1] *Var[2] *Var[3] )
    Call  $Function_80240994 ( )
    Wait  1`
    If  *Var[0]  ==  00000001
        Goto  1
    EndIf
    Call  SetNpcAnimation   ( 00000000 00200001 )
    Wait  10`
    Call  SpeakToPlayer     ( 00000000 00200009 00200001 00000000 000A0010 ) % How do you do? I'm Twink. Princess Peach asked me  ...
    Call  SetNpcYaw ( 00000000 0000010E )
    Call  SetNpcAnimation   ( 00000000 0020001A )
    Call  SpeakToPlayer     ( 00000000 FFFFFFFF FFFFFFFF 00000005 000A0011 ) % Ahhh... Yes, here it is!
    Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  0000000F
    Call  MakeItemEntity    ( .Item:LuckyStar *Var[0] *Var[1] *Var[2] .ItemSpawnMode:Decoration 00000000 )
    Set   *MapVar[A]  *Var[0]
    Exec  $Script_80242D8C *Var[8]
    Exec  $Script_80242E98 *Var[9]
    Call  SetNpcAnimation   ( 00000000 00200017 )
    Call  ContinueSpeech    ( 00000000 FFFFFFFF FFFFFFFF 00000200 000A0012 ) % Here, this is it! Take it!
    Call  GetPlayerPos      ( *Var[5] *Var[3] *Var[4] )
    Add   *Var[5]  FFFFFFE2
    Call  NpcMoveTo ( 00000000 *Var[5] *Var[4] 0000000F )
    Kill  *Var[9]
    Kill  *Var[8]
    Thread
        Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
        Add   *Var[1]  0000000F
        Set   *Var[4]  *Var[1]
        Add   *Var[4]  0000001E
        Set   *Var[3]  *Var[0]
        Call  MakeLerp  ( *Var[1] *Var[4] 00000007 .Easing:QuadraticOut )
        Loop
            Call  UpdateLerp ( )
            Call  SetItemPos    ( *MapVar[A] *Var[3] *Var[0] *Var[2] )
            Wait  1`
            Add   *Var[3]  00000002
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  GetPlayerPos  ( *Var[5] *Var[6] *Var[7] )
        Add   *Var[6]  00000026
        Call  MakeLerp      ( *Var[0] *Var[6] 00000007 .Easing:QuadraticIn )
        Loop
            Call  UpdateLerp ( )
            Call  SetItemPos    ( *MapVar[A] *Var[3] *Var[0] *Var[2] )
            Wait  1`
            Add   *Var[3]  00000002
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  RemoveItemEntity  ( *MapVar[A] )
    EndThread
    Call  SetNpcAnimation   ( 00000000 00200014 )
    Wait  11`
    Call  SetNpcAnimation   ( 00000000 00200015 )
    Set   *Var[0]  00000007
    Set   *Var[1]  00000004
    Call  ShowGotItem       ( *Var[0] .True 00000000 )
    Call  AddKeyItem        ( *Var[0] )
    Call  $Function_80240908 ( )
    Call  SetNpcAnimation   ( 00000000 00200001 )
    Wait  20`
    Call  SpeakToPlayer     ( 00000000 00200009 00200001 00000000 000A0013 ) % That's the "Lucky Star" from Princess Peach. Now t ...
    Call  ShowChoice        ( 001E0013 ) % Yes No
    If  *Var[0]  ==  00000001
        Call  ContinueSpeech    ( 00000000 00200009 00200001 00000000 000A0014 ) % This is important, Mario. I think you'll want to k ...
        Call  ShowChoice        ( 001E0013 ) % Yes No
        If  *Var[0]  !=  00000000
            Call  ContinueSpeech    ( 00000000 00200009 00200001 00000000 000A0015 ) % Oh! OK! Great! I don't even have to explain.
        Else
            Goto  F
        EndIf
    Else
        Label  F
        Call  ContinueSpeech    ( 00000000 00200009 00200001 00000000 000A0016 ) % OK. Let me explain. Let me see... Hang on. You! Be ...
        Call  SpeakToPlayer     ( .Npc:Partner 00010008 00010001 00000000 000A0017 ) % Me? The name's Goombario. Of course I'll help!
        Call  SpeakToPlayer     ( 00000000 00200009 00200001 00000000 000A0018 ) % Well, Mario and Goombario. Let's begin!
        Call  SetPlayerAnimation    ( 00080007 )
        Call  SetNpcVar ( 00000000 00000000 00000001 )
        Loop
            Call  GetNpcVar ( 00000000 00000000 *Var[0] )
            If  *Var[0]  ==  00000002
                BreakLoop
            EndIf
            Wait  1`
        EndLoop
    EndIf
    Call  DisablePartnerAI  ( 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  SpeakToPlayer ( 00000000 00200009 00200001 00000000 000A002F ) % Once you understand how to use the action command  ...
    Call  SpeakToPlayer ( .Npc:Partner 00010008 00010001 00000000 000A0030 ) % Terrific! You'll be much tougher in battle now.
    Wait  20`
    Exec  $Script_80241084
    Call  ShowMessageAtScreenPos    ( 000A0031 00000140 00000000 ) % Here you are!
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Thread
        Wait  20`
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  FFFFFF06
        Div   *Var[0]  00000002
        Call  SetPanTarget  ( .Cam:Default FFFFFF06 00000035 00000000 )
        Call  SetCamSpeed   ( .Cam:Default *Fixed[1.4] )
        Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
        Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
        Wait  10`
        Call  SetPanTarget  ( .Cam:Default *Var[0] 00000000 00000000 )
        Call  SetCamSpeed   ( .Cam:Default *Fixed[2.0] )
        Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
        Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    EndThread
    Exec  $Script_80242BA4 *Var[A]
    Call  LoadPath  ( 00000043 $VectorList_80242A4C 00000005 .Easing:Linear )
    Label  2
    Call  GetNextPathPos ( )
    Call  SetNpcPos ( 00000001 *Var[1] *Var[2] *Var[3] )
    Wait  1`
    If  *Var[0]  ==  00000001
        Goto  2
    EndIf
    Kill  *Var[A]
    ChildThread
        Loop
            Loop  0000000A
                Call  GetNpcPos ( 00000001 *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  00000001
                Call  SetNpcPos ( 00000001 *Var[0] *Var[1] *Var[2] )
                Wait  2`
            EndLoop
            Wait  3`
            Loop  0000000A
                Call  GetNpcPos ( 00000001 *Var[0] *Var[1] *Var[2] )
                Add   *Var[1]  FFFFFFFF
                Call  SetNpcPos ( 00000001 *Var[0] *Var[1] *Var[2] )
                Wait  2`
            EndLoop
            Wait  3`
        EndLoop
    EndChildThread
    Call  SetNpcAnimation   ( 00000001 00570000 )
    Loop  00000003
        Call  SetNpcRotation    ( 00000001 00000000 00000000 0000000A )
        Wait  1`
        Call  SetNpcRotation    ( 00000001 00000000 00000000 00000000 )
        Wait  1`
    EndLoop
    Wait  20`
    Exec  $Script_80242D20 *Var[A]
    Call  SpeakToPlayer ( 00000000 00200009 00200000 00000005 000A0032 ) % What!? It can't be... Were you following me!?
    Kill  *Var[A]
    Wait  10`
    Call  GetNpcPos     ( 00000001 *Var[0] *Var[1] *Var[2] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] 00000000 *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default *Fixed[260.0] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[13.0] *Fixed[-8.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  1`
    Call  SpeakToPlayer ( 00000001 00570009 00570000 00000200 000A0033 ) % What a foolish Star Kid!! I knew that if I followe ...
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  FFFFFF06
    Div   *Var[0]  00000002
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] 00000000 00000000 )
    Call  SetPanTarget  ( .Cam:Default *Var[0] 00000000 00000000 )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[4.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  SetNpcVar     ( 00000001 00000000 00000001 )
    Call  EnablePartnerAI ( )
    Unbind
    Return
    End
}

#new:Script $Script_80244210
{
    Call  802D5830      ( 00000001 )
    Call  SetMusicTrack ( 00000000 .Song:TwinkTheme 00000000 00000008 )
    Wait  60`
    Call  SetCamLeadPlayer  ( .Cam:Default .True )
    Call  GetNpcPos     ( 00000000 *Var[3] *Var[1] *Var[2] )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[3]
    Div   *Var[0]  00000002
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default *Fixed[275.0] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[16.0] *Fixed[-9.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  1`
    Call  InterpNpcYaw  ( 00000000 0000005A 00000000 )
    Call  SpeakToPlayer ( 00000000 00200009 00200001 00000000 000A0034 ) % Well done, Mario! You're as strong as they say. I  ...
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  SetPlayerJumpscale    ( *Fixed[0.5] )
    Call  PlayerJump    ( *Var[0] *Var[1] *Var[2] 0000000F )
    Wait  10`
    Call  SpeakToPlayer ( 00000000 00200009 00200001 00000000 000A0035 ) % I'm going to return to Princess Peach's side. I'm  ...
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default *Fixed[700.0] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[1.3] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  GetNpcPos     ( 00000000 *Var[4] *Var[5] *Var[6] )
    Call  LoadPath      ( 00000055 $VectorList_80242A88 00000008 .Easing:Linear )
    Label  0
    Call  GetNextPathPos ( )
    AddF  *Var[1]  *Var[4]
    AddF  *Var[2]  *Var[5]
    AddF  *Var[3]  *Var[6]
    Call  SetNpcPos     ( 00000000 *Var[1] *Var[2] *Var[3] )
    Call  $Function_80240994 ( )
    Wait  1`
    If  *Var[0]  ==  00000001
        Goto  0
    EndIf
    Wait  45`
    Thread
        Call  LoadPath  ( 0000003C $VectorList_80242AE8 00000006 .Easing:Linear )
        Label  1
        Call  GetNextPathPos ( )
        Call  SetNpcPos ( 00000000 *Var[1] *Var[2] *Var[3] )
        Call  $Function_80240994 ( )
        Wait  1`
        If  *Var[0]  ==  00000001
            Goto  1
        EndIf
    EndThread
    Wait  30`
    Call  GetNpcPos     ( 00000000 *Var[3] *Var[1] *Var[2] )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Add   *Var[0]  *Var[3]
    Div   *Var[0]  00000002
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default *Fixed[275.0] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[16.0] *Fixed[-8.5] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[2.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    Call  SpeakToPlayer ( 00000000 00200009 00200001 00000000 000A0036 ) % Oh dear! I almost forgot to tell you the message f ...
    Thread
        Call  GetNpcPos ( 00000000 *Var[4] *Var[5] *Var[6] )
        Call  LoadPath  ( 00000078 $VectorList_80242B30 00000009 .Easing:QuadraticIn )
        Label  2
        Call  GetNextPathPos ( )
        AddF  *Var[1]  *Var[4]
        AddF  *Var[2]  *Var[5]
        AddF  *Var[3]  *Var[6]
        Call  SetNpcPos ( 00000000 *Var[1] *Var[2] *Var[3] )
        Call  $Function_80240994 ( )
        Wait  1`
        If  *Var[0]  ==  00000001
            Goto  2
        EndIf
    EndThread
    Call  SetCamDistance    ( .Cam:Default *Fixed[300.0] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[12.5] *Fixed[-10.0] )
    Call  $Function_80240B3C ( )
    Call  SetCamPosA    ( .Cam:Default *Var[0] *Var[1] )
    Call  SetCamPosB    ( .Cam:Default *Var[2] *Var[3] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[0.5] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  30`
    Call  SetNpcFlagBits    ( 00000000 00040000 .True )
    SetF  *Var[0]  *Fixed[0.0]
    Loop  0000000A
        AddF  *Var[0]  *Fixed[36.0]
        Call  SetNpcRotation    ( 00000000 00000000 *Var[0] 00000000 )
        Wait  1`
    EndLoop
    Call  SetNpcFlagBits    ( 00000000 00040000 .False )
    Wait  120`
    Call  InterpNpcYaw  ( .Npc:Partner 0000010E 00000000 )
    Call  PlayerFaceNpc ( .Npc:Partner 00000000 )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetCamDistance    ( .Cam:Default *Fixed[275.0] )
    Call  SetCamPitch   ( .Cam:Default *Fixed[13.0] *Fixed[-7.5] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  10`
    Call  DisablePartnerAI  ( 00000000 )
    Call  SpeakToPlayer ( .Npc:Partner 00010008 00010001 00000000 000A0037 ) % There he goes... back to Bowser's Castle. What a b ...
    Call  EnablePartnerAI ( )
    Call  SetPlayerAnimation    ( .PlayerAnim:NodYes )
    Wait  30`
    Call  SetPlayerAnimation    ( 00010002 )
    Thread
        Set   *StoryProgress  FFFFFF98
        Call  802D5830  ( 00000000 )
        Call  ResetCam  ( .Cam:Default *Fixed[4.0] )
    EndThread
    Wait  10`
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

PADDING: 80244AE4 to 80244AF0 (00004AE4 to 00004AF0)
00000000 00000000 00000000

#new:Script $Script_80244AF0
{
    Call  802C90FC  ( 00000001 00000001 FFFFFFFF )
    Call  802C94A0  ( 00000001 $Function_80240C40 00000000 )
    Return
    End
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80244B30
{
    "hos_bg"
}

PADDING: 80244B38 to 80244B40 (00004B38 to 00004B40)
00000000 00000000

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80244B40
{
    1.570796d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80244B48
{
    1.570796d
}

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80244B50
{
    1.570796d
}

#new:ASCII $ASCII_80244B58
{
    "osr_00"
}

#new:ASCII $ASCII_80244B60
{
    "osr_01"
}

#new:ASCII $ASCII_80244B68
{
    "hos_01"
}

#new:ASCII $ASCII_80244B70
{
    "hos_06"
}

PADDING: 80244B78 to 80244B80 (00004B78 to 00004B80)
00000000 00000000

#new:ASCII $ASCII_80244B80
{
    "osr_01"
}

PADDING: 80244B88 to 80244B90 (00004B88 to 00004B90)
00000000 00000000

