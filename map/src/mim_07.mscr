% Script File: mim_07.mscr
% Decoded from: 0 to 3800 (mim_07)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:enable_world_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	JAL       ~Func:enable_entity_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_entity_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_entity_fog_color
	ADDIU     A3, R0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240068 to 80240070 (00000068 to 00000070)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80240070
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:enable_world_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	JAL       ~Func:enable_entity_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_entity_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_entity_fog_color
	ADDIU     A3, R0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802400D8
{
	LIA       A1, $???_80241680
	LW        V1, 0 (A1)
	ADDIU     A0, R0, 2
	BEQ       V1, A0, .o5C
	SLTI      V0, V1, 3
	BEQ       V0, R0, .o30
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o4C
	LUI       V0, E300
	BEQ       R0, R0, .oEC
	ORI       V0, V0, A01
	.o30
	ADDIU     V0, R0, 3
	BEQ       V1, V0, .o9C
	ADDIU     V0, R0, 4
	BEQ       V1, V0, .oC4
	LUI       V0, E300
	BEQ       R0, R0, .oEC
	ORI       V0, V0, A01
	.o4C
	SAW       R0, $???_80241688
	BEQ       R0, R0, .oE4
	SW        A0, 0 (A1)
	.o5C
	LIA       V1, $???_80241688
	LW        V0, 0 (V1)
	ADDIU     V0, V0, A
	SW        V0, 0 (V1)
	SLTI      V0, V0, 100
	BNE       V0, R0, .oE8
	LUI       V0, E300
	ADDIU     V0, R0, FF
	SW        V0, 0 (V1)
	ADDIU     V0, R0, 32
	SAW       V0, $???_80241684
	ADDIU     V0, R0, 3
	BEQ       R0, R0, .oE4
	SW        V0, 0 (A1)
	.o9C
	LIA       V1, $???_80241684
	LW        V0, 0 (V1)
	ADDIU     V0, V0, FFFF
	BGEZ      V0, .oE4
	SW        V0, 0 (V1)
	ADDIU     V0, R0, 4
	SW        R0, 0 (V1)
	BEQ       R0, R0, .oE4
	SW        V0, 0 (A1)
	.oC4
	LIA       V1, $???_80241688
	LW        V0, 0 (V1)
	ADDIU     V0, V0, FFF9
	BGEZ      V0, .oE4
	SW        V0, 0 (V1)
	SW        R0, 0 (V1)
	SW        R0, 0 (A1)
	.oE4
	LIO       V0, E3000A01
	LIO       A2, FC12160A
	LIO       T0, E200001C
	LUI       A3, C810
	LIA       A1, 8009A66C
	LW        V1, 0 (A1)
	ORI       A3, A3, 4DD8
	COPY      A0, V1
	ADDIU     V1, V1, 8
	SW        V1, 0 (A1)
	SW        V0, 0 (A0)
	LUI       V0, 10
	SW        V0, 4 (A0)
	ADDIU     V0, V1, 8
	SW        V0, 0 (A1)
	LABU      A0, $???_80241688[3]
	LUI       V0, FA00
	SW        V0, 0 (V1)
	ADDIU     V0, V1, 10
	SW        A0, 4 (V1)
	SW        V0, 0 (A1)
	ADDIU     V0, R0, FFF8
	SW        V0, C (V1)
	ADDIU     V0, V1, 18
	SW        A2, 8 (V1)
	SW        V0, 0 (A1)
	SW        T0, 10 (V1)
	JR        RA
	SW        A3, 14 (V1)
}

#new:Function $Function_80240244
{
	LIA       V1, $???_80241680
	LW        V0, 0 (V1)
	BNE       V0, R0, .o1C
	ADDIU     V0, R0, 1
	SW        V0, 0 (V1)
	SW        V0, 84 (A0)
	.o1C
	JR        RA
	ADDIU     V0, R0, 2
}

PADDING: 80240268 to 80240270 (00000268 to 00000270)
00000000 00000000

#new:Function $Function_80240270
{
	ADDIU     SP, SP, FFA8
	SW        S0, 30 (SP)
	COPY      S0, A0
	SW        RA, 40 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SDC1      F22, 50 (SP)
	SDC1      F20, 48 (SP)
	LW        S3, 148 (S0)
	COPY      S1, A1
	LH        A0, 8 (S3)
	JAL       ~Func:get_npc_unsafe
	COPY      S2, A2
	COPY      A0, S0
	COPY      A1, S1
	COPY      A2, S2
	JAL       800495A0
	COPY      S0, V0
	LW        V0, 0 (S0)
	ADDIU     A0, R0, 2D
	ORI       V0, V0, 800
	JAL       ~Func:rand_int
	SW        V0, 0 (S0)
	COPY      A0, S0
	LIO       A1, B0000017
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIF       F5, 2.5
	MTC1      R0, F4
	DIV.D     F0, F0, F2
	ADD.D     F0, F0, F4
	LIF       F2, 1.5
	CLEAR     A2
	SWC1      F2, 14 (S0)
	CVT.S.D   F0, F0
	JAL       800494C0
	SWC1      F0, 1C (S0)
	LW        V1, D0 (S3)
	LWC1      F0, 40 (S0)
	LWC1      F2, 0 (V1)
	CVT.S.W   F2, F2
	LWC1      F4, 8 (V1)
	CVT.S.W   F4, F4
	SWC1      F0, 10 (SP)
	LW        V0, D0 (S3)
	MFC1      A1, F2
	LWC1      F0, C (V0)
	CVT.S.W   F0, F0
	SWC1      F0, 14 (SP)
	LW        V0, D0 (S3)
	MFC1      A2, F4
	LWC1      F0, 10 (V0)
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LW        A0, 18 (V1)
	JAL       ~Func:is_point_within_region
	LW        A3, 38 (S0)
	BEQ       V0, R0, .o1DC
	NOP
	LWC1      F12, 38 (S0)
	LIF       F22, 25.0
	LW        V0, D0 (S3)
	LWC1      F14, 40 (S0)
	LWC1      F8, 0 (V0)
	CVT.S.W   F8, F8
	MFC1      A2, F8
	LWC1      F8, 8 (V0)
	CVT.S.W   F8, F8
	MFC1      A3, F8
	LIF       F21, 2.96875
	MTC1      R0, F20
	JAL       ~Func:atan2
	CLEAR     S1
	LWC1      F2, 38 (S0)
	LWC1      F4, 3C (S0)
	LWC1      F6, 40 (S0)
	SWC1      F0, C (S0)
	SWC1      F2, 20 (SP)
	SWC1      F4, 24 (SP)
	SWC1      F6, 28 (SP)
	.o168
	SWC1      F22, 10 (SP)
	LWC1      F0, C (S0)
	SWC1      F0, 14 (SP)
	LH        V0, A8 (S0)
	ADDIU     A1, SP, 20
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S0)
	ADDIU     A2, SP, 24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S0)
	JAL       800DDC44
	ADDIU     A3, SP, 28
	BEQ       V0, R0, .o20C
	ADDIU     S1, S1, 1
	LWC1      F0, C (S0)
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F20
	SLTI      V0, S1, 6
	CVT.S.D   F0, F0
	BNE       V0, R0, .o168
	SWC1      F0, C (S0)
	BEQ       R0, R0, .o20C
	NOP
	.o1DC
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 3C
	LWC1      F12, C (S0)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	ADD.S     F12, F12, F0
	LIF       F0, 30.0
	JAL       ~Func:clamp_angle
	SUB.S     F12, F12, F0
	SWC1      F0, C (S0)
	.o20C
	LW        RA, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F22, 50 (SP)
	LDC1      F20, 48 (SP)
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_802404A0
{
	ADDIU     SP, SP, FFA0
	SW        S3, 4C (SP)
	COPY      S3, A0
	SW        RA, 54 (SP)
	SW        S4, 50 (SP)
	SW        S2, 48 (SP)
	SW        S1, 44 (SP)
	SW        S0, 40 (SP)
	SDC1      F20, 58 (SP)
	LW        S1, 148 (S3)
	COPY      S4, A1
	LH        A0, 8 (S1)
	JAL       ~Func:get_npc_unsafe
	COPY      S2, A2
	LW        V1, 14 (S4)
	BLTZ      V1, .o110
	COPY      S0, V0
	LW        V0, 74 (S3)
	BGTZ      V0, .o10C
	ADDIU     V0, V0, FFFF
	COPY      A0, S2
	SW        V1, 74 (S3)
	SW        R0, 10 (SP)
	LW        A2, C (S4)
	LW        A3, 10 (S4)
	JAL       800490B4
	COPY      A1, S1
	BEQ       V0, R0, .o104
	CLEAR     A0
	COPY      A1, S0
	CLEAR     A2
	LH        V1, A8 (S0)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	ADDIU     V0, R0, F
	SW        V0, 1C (SP)
	MTC1      V1, F10
	NOP
	CVT.S.W   F10, F10
	MFC1      A3, F10
	ADDIU     V0, SP, 28
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	COPY      A0, S0
	ADDIU     A1, R0, 2F4
	JAL       800494C0
	LUI       A2, 20
	LAW       V0, 800F7B30
	LWC1      F12, 38 (S0)
	LWC1      F14, 40 (S0)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	ADDIU     V0, R0, C
	SWC1      F0, C (S0)
	BEQ       R0, R0, .o314
	SW        V0, 70 (S3)
	.o104
	LW        V0, 74 (S3)
	ADDIU     V0, V0, FFFF
	.o10C
	SW        V0, 74 (S3)
	.o110
	LWC1      F0, 18 (S0)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F2, F0
	NOP
	BC1F      .o1C0
	ADDIU     A1, SP, 2C
	LWC1      F0, 38 (S0)
	LH        V0, A6 (S0)
	LAD       F2, $ConstDouble_802437B0
	ADDIU     A2, SP, 30
	SWC1      F0, 2C (SP)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	CVT.D.S   F0, F0
	LWC1      F4, 3C (S0)
	LWC1      F6, 40 (S0)
	LWC1      F8, 18 (S0)
	LH        V0, A8 (S0)
	MUL.D     F0, F0, F2
	NOP
	SWC1      F4, 30 (SP)
	SWC1      F6, 34 (SP)
	SWC1      F8, 10 (SP)
	LWC1      F4, C (S0)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 18 (SP)
	SWC1      F4, 14 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S0)
	JAL       800DDC44
	ADDIU     A3, SP, 34
	BNEL      V0, R0, .o1C0
	SW        R0, 18 (S0)
	LW        A1, 18 (S0)
	LW        A2, C (S0)
	JAL       ~Func:npc_move_heading
	COPY      A0, S0
	.o1C0
	LWC1      F0, 1C (S0)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1F      .o2F8
	ADDIU     A1, SP, 2C
	ADDIU     A2, SP, 30
	ADDIU     V0, SP, 38
	LWC1      F2, 3C (S0)
	LWC1      F6, 38 (S0)
	LIF       F21, 2.65625
	MTC1      R0, F20
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F20
	LWC1      F0, 1C (S0)
	LWC1      F4, 40 (S0)
	ABS.S     F0, F0
	SWC1      F4, 34 (SP)
	LIF       F5, 2.75
	MTC1      R0, F4
	CVT.D.S   F0, F0
	SWC1      F6, 2C (SP)
	ADD.D     F0, F0, F4
	CVT.S.D   F2, F2
	SWC1      F2, 30 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 38 (SP)
	SW        V0, 10 (SP)
	LW        A0, 80 (S0)
	JAL       800DCB7C
	ADDIU     A3, SP, 34
	BEQ       V0, R0, .o2F8
	NOP
	LWC1      F0, 1C (S0)
	LWC1      F2, 38 (SP)
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F20
	CVT.D.S   F2, F2
	C.LE.D    F2, F0
	NOP
	BC1F      .o2F8
	ADDIU     A0, R0, 3E8
	LWC1      F0, 30 (SP)
	LW        V0, 0 (S0)
	ADDIU     V1, R0, F7FF
	SW        R0, 1C (S0)
	AND       V0, V0, V1
	SW        V0, 0 (S0)
	ADDIU     V0, R0, 2
	SWC1      F0, 3C (S0)
	JAL       ~Func:rand_int
	SW        V0, 70 (S3)
	LIO       V1, 55555556
	MULT      V0, V1
	SRA       A0, V0, 1F
	MFHI      T0
	SUBU      A0, T0, A0
	SLL       V1, A0, 1
	ADDU      V1, V1, A0
	SUBU      V0, V0, V1
	ADDIU     V1, V0, 2
	SW        V1, 74 (S3)
	LW        V0, 2C (S4)
	BLEZL     V0, .o314
	SW        R0, 70 (S3)
	LW        V0, 4 (S4)
	BLEZL     V0, .o314
	SW        R0, 70 (S3)
	BNE       V1, R0, .o314
	NOP
	BEQ       R0, R0, .o314
	SW        R0, 70 (S3)
	.o2F8
	LWC1      F4, 3C (S0)
	LWC1      F0, 1C (S0)
	ADD.S     F4, F4, F0
	LWC1      F2, 14 (S0)
	SUB.S     F0, F0, F2
	SWC1      F4, 3C (S0)
	SWC1      F0, 1C (S0)
	.o314
	LW        RA, 54 (SP)
	LW        S4, 50 (SP)
	LW        S3, 4C (SP)
	LW        S2, 48 (SP)
	LW        S1, 44 (SP)
	LW        S0, 40 (SP)
	LDC1      F20, 58 (SP)
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_802407D8
{
	ADDIU     SP, SP, FFD8
	SW        S3, 1C (SP)
	COPY      S3, A0
	SW        RA, 20 (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, 148 (S3)
	LH        A0, 8 (S2)
	JAL       ~Func:get_npc_unsafe
	COPY      S1, A1
	LW        A0, 8 (S1)
	COPY      S0, V0
	SRL       V1, A0, 1F
	ADDU      A0, A0, V1
	SRA       A0, A0, 1
	JAL       ~Func:rand_int
	ADDIU     A0, A0, 1
	LW        V1, 8 (S1)
	ADDIU     A0, R0, B4
	SRL       A1, V1, 1F
	ADDU      V1, V1, A1
	SRA       V1, V1, 1
	ADDU      V1, V1, V0
	JAL       ~Func:rand_int
	SH        V1, 8E (S0)
	LWC1      F12, C (S0)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	ADD.S     F12, F12, F0
	LIF       F0, 90.0
	JAL       ~Func:clamp_angle
	SUB.S     F12, F12, F0
	SWC1      F0, C (S0)
	LW        V0, CC (S2)
	LW        V0, 0 (V0)
	SW        V0, 28 (S0)
	ADDIU     V0, R0, 3
	SW        V0, 70 (S3)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80240898
{
	ADDIU     SP, SP, FFB8
	SW        S4, 40 (SP)
	COPY      S4, A0
	SW        RA, 44 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S2, 148 (S4)
	COPY      S1, A1
	LH        A0, 8 (S2)
	JAL       ~Func:get_npc_unsafe
	COPY      S3, A2
	LW        V1, 14 (S1)
	BLTZ      V1, .oF0
	COPY      S0, V0
	COPY      A0, S3
	SW        R0, 10 (SP)
	LW        A2, 24 (S1)
	LW        A3, 28 (S1)
	JAL       800490B4
	COPY      A1, S2
	BEQ       V0, R0, .oF0
	CLEAR     A0
	COPY      A1, S0
	CLEAR     A2
	LH        V1, A8 (S0)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	ADDIU     V0, R0, F
	SW        V0, 1C (SP)
	MTC1      V1, F6
	NOP
	CVT.S.W   F6, F6
	MFC1      A3, F6
	ADDIU     V0, SP, 28
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	COPY      A0, S0
	ADDIU     A1, R0, 2F4
	JAL       800494C0
	LUI       A2, 20
	LAW       V0, 800F7B30
	LWC1      F12, 38 (S0)
	LWC1      F14, 40 (S0)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	ADDIU     V0, R0, C
	SWC1      F0, C (S0)
	BEQ       R0, R0, .o184
	SW        V0, 70 (S4)
	.oF0
	LH        V0, 8C (S0)
	BNE       V0, R0, .o184
	NOP
	LHU       V0, 8E (S0)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (S0)
	SLL       V0, V0, 10
	BGTZ      V0, .o184
	NOP
	LW        V0, 74 (S4)
	ADDIU     V0, V0, FFFF
	BLEZ      V0, .o180
	SW        V0, 74 (S4)
	LWC1      F0, C (S0)
	LIF       F12, 180.0
	JAL       ~Func:clamp_angle
	ADD.S     F12, F0, F12
	ADDIU     A0, R0, 3E8
	JAL       ~Func:rand_int
	SWC1      F0, C (S0)
	LIO       V1, 2E8BA2E9
	MULT      V0, V1
	SRA       V1, V0, 1F
	MFHI      T0
	SRA       A0, T0, 1
	SUBU      A0, A0, V1
	SLL       V1, A0, 1
	ADDU      V1, V1, A0
	SLL       V1, V1, 2
	SUBU      V1, V1, A0
	SUBU      V0, V0, V1
	ADDIU     V0, V0, 5
	BEQ       R0, R0, .o184
	SH        V0, 8E (S0)
	.o180
	SW        R0, 70 (S4)
	.o184
	LW        RA, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80240A3C
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        V0, 148 (S1)
	COPY      S2, A1
	LH        A0, 8 (V0)
	JAL       ~Func:get_npc_unsafe
	COPY      S0, A2
	COPY      A0, S1
	COPY      A1, S2
	COPY      A2, S0
	JAL       80049F7C
	COPY      S0, V0
	LW        V0, 0 (S0)
	ADDIU     A0, R0, 5
	ORI       V0, V0, 800
	JAL       ~Func:rand_int
	SW        V0, 0 (S0)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIF       F4, 1.5
	LAW       V0, 800F7B30
	LWC1      F12, 38 (S0)
	LWC1      F14, 40 (S0)
	ADD.D     F0, F0, F2
	SWC1      F4, 14 (S0)
	CVT.S.D   F0, F0
	SWC1      F0, 1C (S0)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	COPY      A0, S0
	LIO       A1, B0000017
	CLEAR     A2
	SWC1      F0, C (A0)
	LWC1      F0, 18 (S2)
	ADDIU     V0, R0, D
	SWC1      F0, 18 (A0)
	JAL       800494C0
	SW        V0, 70 (S1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80240B1C
{
	ADDIU     SP, SP, FF90
	SW        S4, 50 (SP)
	COPY      S4, A0
	SW        RA, 60 (SP)
	SW        S7, 5C (SP)
	SW        S6, 58 (SP)
	SW        S5, 54 (SP)
	SW        S3, 4C (SP)
	SW        S2, 48 (SP)
	SW        S1, 44 (SP)
	SW        S0, 40 (SP)
	SDC1      F20, 68 (SP)
	LW        S5, 148 (S4)
	COPY      S6, A1
	LH        A0, 8 (S5)
	JAL       ~Func:get_npc_unsafe
	COPY      S7, A2
	COPY      S3, V0
	LWC1      F0, 18 (S3)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F2, F0
	NOP
	BC1F      .oE8
	ADDIU     A1, SP, 28
	LWC1      F0, 38 (S3)
	LWC1      F2, 3C (S3)
	LWC1      F4, 40 (S3)
	LWC1      F6, 18 (S3)
	SWC1      F0, 28 (SP)
	SWC1      F2, 2C (SP)
	SWC1      F4, 30 (SP)
	SWC1      F6, 10 (SP)
	LWC1      F0, C (S3)
	SWC1      F0, 14 (SP)
	LH        V0, A8 (S3)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S3)
	ADDIU     A2, SP, 2C
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S3)
	JAL       800DDC44
	ADDIU     A3, SP, 30
	BEQ       V0, R0, .oD8
	NOP
	BEQ       R0, R0, .oE8
	SW        R0, 18 (S3)
	.oD8
	LW        A1, 18 (S3)
	LW        A2, C (S3)
	JAL       ~Func:npc_move_heading
	COPY      A0, S3
	.oE8
	LWC1      F0, 1C (S3)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1F      .o2B4
	ADDIU     S0, SP, 28
	COPY      A1, S0
	ADDIU     A2, SP, 34
	ADDIU     S2, SP, 38
	LWC1      F0, 38 (S3)
	LIF       F2, 100.0
	LWC1      F4, 40 (S3)
	LIF       F6, 1000.0
	ADDIU     S1, SP, 30
	SWC1      F0, 28 (SP)
	SWC1      F2, 34 (SP)
	SWC1      F4, 30 (SP)
	SWC1      F6, 38 (SP)
	SW        S2, 10 (SP)
	LW        A0, 80 (S3)
	JAL       800DCB7C
	COPY      A3, S1
	COPY      A1, S0
	ADDIU     A2, SP, 2C
	LWC1      F2, 3C (S3)
	LWC1      F6, 38 (S3)
	LIF       F21, 2.65625
	MTC1      R0, F20
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F20
	LWC1      F0, 1C (S3)
	LWC1      F4, 40 (S3)
	ABS.S     F0, F0
	SWC1      F4, 30 (SP)
	LIF       F5, 2.75
	MTC1      R0, F4
	CVT.D.S   F0, F0
	SWC1      F6, 28 (SP)
	ADD.D     F0, F0, F4
	CVT.S.D   F2, F2
	SWC1      F2, 2C (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 38 (SP)
	SW        S2, 10 (SP)
	LW        A0, 80 (S3)
	JAL       800DCB7C
	COPY      A3, S1
	BEQ       V0, R0, .o2B4
	NOP
	LWC1      F0, 1C (S3)
	LWC1      F2, 38 (SP)
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F20
	CVT.D.S   F2, F2
	C.LE.D    F2, F0
	NOP
	BC1F      .o2B4
	ADDIU     V1, R0, F7FF
	LWC1      F0, 2C (SP)
	LW        V0, 0 (S3)
	SW        R0, 1C (S3)
	AND       V0, V0, V1
	SWC1      F0, 3C (S3)
	SW        V0, 0 (S3)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	LW        A1, 38 (S3)
	LW        A2, 3C (S3)
	LW        A3, 40 (S3)
	JAL       ~Func:fx_walk_normal
	ADDIU     A0, R0, 2
	COPY      A0, S7
	ADDIU     V0, R0, C
	SW        V0, 70 (S4)
	ADDIU     V0, R0, 1
	SW        V0, 10 (SP)
	LW        A2, 24 (S6)
	LW        A3, 28 (S6)
	JAL       800490B4
	COPY      A1, S5
	BNE       V0, R0, .o2D0
	ADDIU     A0, R0, 2
	COPY      A1, S3
	CLEAR     A2
	LH        V1, A8 (S3)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	ADDIU     V0, R0, F
	SW        V0, 1C (SP)
	MTC1      V1, F8
	NOP
	CVT.S.W   F8, F8
	MFC1      A3, F8
	ADDIU     V0, SP, 3C
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	ADDIU     V0, R0, 19
	SH        V0, 8E (S3)
	ADDIU     V0, R0, E
	BEQ       R0, R0, .o2D0
	SW        V0, 70 (S4)
	.o2B4
	LWC1      F4, 3C (S3)
	LWC1      F0, 1C (S3)
	ADD.S     F4, F4, F0
	LWC1      F2, 14 (S3)
	SUB.S     F0, F0, F2
	SWC1      F4, 3C (S3)
	SWC1      F0, 1C (S3)
	.o2D0
	LW        RA, 60 (SP)
	LW        S7, 5C (SP)
	LW        S6, 58 (SP)
	LW        S5, 54 (SP)
	LW        S4, 50 (SP)
	LW        S3, 4C (SP)
	LW        S2, 48 (SP)
	LW        S1, 44 (SP)
	LW        S0, 40 (SP)
	LDC1      F20, 68 (SP)
	JR        RA
	ADDIU     SP, SP, 70
}

#new:Function $Function_80240E1C
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, 148 (S0)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (V0)
	LHU       V1, 8E (V0)
	ADDIU     V1, V1, FFFF
	SH        V1, 8E (V0)
	SLL       V1, V1, 10
	BLEZL     V1, .o34
	SW        R0, 70 (S0)
	.o34
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240E60
{
	ADDIU     SP, SP, FFB0
	SW        S3, 3C (SP)
	COPY      S3, A0
	SW        RA, 48 (SP)
	SW        S5, 44 (SP)
	SW        S4, 40 (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S2, 148 (S3)
	LH        A0, 8 (S2)
	LW        S0, C (S3)
	JAL       ~Func:get_npc_unsafe
	COPY      S1, A1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S3
	JAL       ~Func:get_variable
	COPY      S5, V0
	COPY      A0, S3
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S4, V0
	SW        V0, 94 (S2)
	SW        R0, 10 (SP)
	LW        V0, D0 (S2)
	LW        V0, 30 (V0)
	SW        V0, 14 (SP)
	LW        V0, D0 (S2)
	LW        V0, 1C (V0)
	SW        V0, 18 (SP)
	LW        V0, D0 (S2)
	LW        V0, 24 (V0)
	SW        V0, 1C (SP)
	LW        V0, D0 (S2)
	LW        V0, 28 (V0)
	SW        V0, 20 (SP)
	LW        V0, D0 (S2)
	LIF       F0, 100.0
	LW        V0, 2C (V0)
	ADDIU     S0, SP, 10
	SWC1      F0, 28 (SP)
	SH        R0, 2C (SP)
	BEQ       S1, R0, .o118
	SW        V0, 24 (SP)
	SW        R0, 70 (S3)
	SH        R0, 8E (S5)
	SW        R0, 74 (S3)
	LW        V0, 0 (S5)
	ADDIU     V1, R0, F7FF
	AND       V0, V0, V1
	ADDIU     V1, R0, FDFF
	AND       V0, V0, V1
	ORI       V0, V0, 8
	SW        V0, 0 (S5)
	LW        V0, B0 (S2)
	ORI       V0, V0, 18
	SW        V0, B0 (S2)
	LW        V0, 0 (S2)
	LUI       V1, 4000
	AND       V0, V0, V1
	BEQ       V0, R0, .o118
	LUI       V1, BFFF
	ADDIU     V0, R0, C
	SW        V0, 70 (S3)
	LW        V0, 0 (S2)
	ORI       V1, V1, FFFF
	AND       V0, V0, V1
	SW        V0, 0 (S2)
	.o118
	LW        V1, B0 (S2)
	ANDI      V0, V1, 4
	BEQ       V0, R0, .o140
	NOP
	LB        V0, B4 (S2)
	BNE       V0, R0, .o200
	CLEAR     V0
	ADDIU     V0, R0, FFFB
	AND       V0, V1, V0
	SW        V0, B0 (S2)
	.o140
	LW        V1, 70 (S3)
	SLTIU     V0, V1, F
	BEQ       V0, R0, .o1FC
	SLL       V0, V1, 2
	LTW       V0, V0 ($JumpTable_802437B8)
	JR        V0
	NOP
    % LBL: from $JumpTable_802437B8 , entry 0`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240270
	COPY      A2, S0
    % LBL: from $JumpTable_802437B8 , entry 1`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_802404A0
	COPY      A2, S0
	BEQ       R0, R0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_802437B8 , entry 2`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_802407D8
	COPY      A2, S0
	LW        V1, 70 (S3)
	ADDIU     V0, R0, 3
	BNE       V1, V0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_802437B8 , entry 3`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240898
	COPY      A2, S0
	BEQ       R0, R0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_802437B8 , entry 12`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240A3C
	COPY      A2, S0
    % LBL: from $JumpTable_802437B8 , entry 13`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240B1C
	COPY      A2, S0
	BEQ       R0, R0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_802437B8 , entry 14`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240E1C
	COPY      A2, S0
    % LBL: from $JumpTable_802437B8 , entry 11`
	.o1FC
	CLEAR     V0
	.o200
	LW        RA, 48 (SP)
	LW        S5, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 50
}

PADDING: 80241084 to 80241090 (00001084 to 00001090)
00000000 00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 %    0.0    0.0 -530.0  180.0
    ~Vec4f:Entry1 % -530.0    0.0    0.0   90.0
    ~Vec4f:Entry2 %    0.0    0.0  530.0    0.0
    ~Vec4f:Entry3 %  530.0    0.0    0.0  270.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main_EnterWalk
    [EntryList]   $EntryList
    [EntryCount]  00000004
    [Background]  80200000
    [MapTattle]   001900AD
}

#new:Script $Script_80241110
{
    Call  SetMusicTrack     ( 00000000 .Song:ForeverForest 00000000 00000008 )
    Call  PlayAmbientSounds ( .AmbientSounds:Spooky )
    Return
    End
}

#new:Script $Script_8024114C
{
    Call  SetMusicTrack ( 00000000 .Song:JrTroopaTheme 00000000 00000008 )
    Return
    End
}

PADDING: 80241178 to 80241180 (00001178 to 00001180)
00000000 00000000

#new:Script $Script_ExitWalk_80241180
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243790 00000002 ) % mim_09
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_802411DC
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243798 00000001 ) % mim_01
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80241238
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry2 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_802437A0 00000000 ) % mim_06
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80241294
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry3 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_802437A8 00000000 ) % mim_11
    Wait  100`
    Return
    End
}

#new:Script $Script_802412F0
{
    Bind  $Script_ExitWalk_80241180 .Trigger:FloorAbove ~Collider:deilin 00000001 00000000
    Bind  $Script_ExitWalk_802411DC .Trigger:FloorAbove ~Collider:deiliw 00000001 00000000
    Bind  $Script_ExitWalk_80241238 .Trigger:FloorAbove ~Collider:deilis 00000001 00000000
    Bind  $Script_ExitWalk_80241294 .Trigger:FloorAbove ~Collider:deilie 00000001 00000000
    Return
    End
}

#new:Script_Main $Script_Main_EnterWalk
{
    Set   *WorldMapLocation  .Location:ForeverForest
    Call  SetSpriteShading  ( 00070006 )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 0000028A )
    Call  SetCamBGColor ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled ( .Cam:Default .True )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Set   *AreaByte[2]  *Byte_MIM_00
    Call  GetMapID      ( *Byte_MIM_00 )
    ExecWait  $Script_802426A0
    Call  MakeNpcs      ( 00000001 $NpcGroupList_80243758 )
    ExecWait  $Script_MakeEntities
    Set   *Var[0]  $Script_802412F0
    Exec  EnterWalk
    Wait  1`
    Exec  $Script_80241110
    ExecWait  $Script_80241900
    Call  $Function_80240000 ( )
    Call  GetEntryID    ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry3
        Call  UseSettingsFrom   ( .Cam:Default 000001F4 FFFFFF9C 00000000 )
        Call  SetPanTarget  ( .Cam:Default 00000212 00000000 00000000 )
        Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
        Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
        Wait  1`
        Thread
            Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
            Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
        EndThread
    Else
        Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
    EndIf
    Return
    End
}

PADDING: 8024158C to 80241590 (0000158C to 00001590)
00000000

#new:Script $Script_80241590
{
    Call  800441F0  ( *Var[0] )
    If  *Var[0]  ==  00000001
        Return
    EndIf
    SetGroup  00000000
    Call  802D5830  ( 00000001 )
    Call  DisablePlayerInput    ( .True )
    Call  ShowMessageAtScreenPos    ( 001D017F 000000A0 00000028 ) % If you have business at Boo's Mansion, come this w ...
    Call  DisablePlayerInput    ( .False )
    Call  802D5830  ( 00000000 )
    Return
    End
}

#new:Script $Script_MakeEntities
{
    Call  MakeEntity    ( .Entity:Signpost ~Vec4d:Entity80241634 80000000 )
    Call  AssignScript  ( $Script_80241590 )
    Return
    End
}

PADDING: 80241678 to 80241680 (00001678 to 00001680)
00000000 00000000

#new:Unknown $???_80241680
{
    00000000
}

#new:Unknown $???_80241684
{
    00000000
}

#new:Unknown $???_80241688
{
    00000000
}

#new:Script $Script_8024168C
{
    Label  0
    Call  SetTexPanOffset   ( 00000000 00000000 00000000 FFFF8000 )
    Wait  3`
    Call  SetTexPanOffset   ( 00000000 00000000 00000000 00000000 )
    Wait  3`
    Goto  0
    Return
    End
}

#new:Script $Script_80241704
{
    Set   *Var[0]  00000000
    Call  $Function_80240244 ( )
    If  *Var[0]  ==  00000001
        Wait  10`
        Exec  $Script_8024168C *Var[9]
        Call  PlaySoundAt   ( 0000205E 00000000 FFFFFFDE 00000000 FFFFFED4 )
        Loop  00000012
            Call  TranslateModel    ( ~Model:o289 *Fixed[1.0] 00000000 *Fixed[1.0] )
            Call  TranslateModel    ( ~Model:o440 *Fixed[1.0] 00000000 *Fixed[1.0] )
            Wait  2`
            Call  TranslateModel    ( ~Model:o289 *Fixed[-1.0] 00000000 *Fixed[-1.0] )
            Call  TranslateModel    ( ~Model:o440 *Fixed[-1.0] 00000000 *Fixed[-1.0] )
            Wait  2`
        EndLoop
        Loop  0000000A
            Call  TranslateModel    ( ~Model:o289 *Fixed[0.5] 00000000 *Fixed[0.5] )
            Call  TranslateModel    ( ~Model:o440 *Fixed[0.5] 00000000 *Fixed[0.5] )
            Wait  2`
            Call  TranslateModel    ( ~Model:o289 *Fixed[-0.5] 00000000 *Fixed[-0.5] )
            Call  TranslateModel    ( ~Model:o440 *Fixed[-0.5] 00000000 *Fixed[-0.5] )
            Wait  2`
        EndLoop
        Kill  *Var[9]
        Call  TranslateModel    ( ~Model:o289 00000000 00000000 00000000 )
        Call  TranslateModel    ( ~Model:o440 00000000 00000000 00000000 )
    EndIf
    Return
    End
}

#new:Script $Script_80241900
{
    Call  802C94A0      ( 00000001 $Function_802400D8 00000000 )
    Call  802C90FC      ( 00000032 00000001 FFFFFFFF )
    Call  SetModelFlags ( ~Model:o440 00000010 .True )
    Bind  $Script_80241704 .Trigger:WallPressA ~Collider:o491 00000001 00000000
    Call  SetTexPanner  ( ~Model:o440 00000000 )
    Return
    End
}

PADDING: 80241988 to 80241990 (00001988 to 00001990)
00000000 00000000

#new:Script $Script_80241990
{
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetZoneEnabled    ( ~Zone:north .True )
            Call  SetZoneEnabled    ( ~Zone:west .True )
            Call  SetZoneEnabled    ( ~Zone:south .True )
            Call  SetZoneEnabled    ( ~Zone:east .False )
            Call  SetZoneEnabled    ( ~Zone:higashi .True )
            Call  SetZoneEnabled    ( ~Zone:nishi .False )
            Call  SetZoneEnabled    ( ~Zone:minami .False )
            Call  SetZoneEnabled    ( ~Zone:kita .False )
            Call  SetZoneEnabled    ( ~Zone:stage .False )
            Set   *Var[1]  00000000
        Case  ==  00000001
            Call  SetZoneEnabled    ( ~Zone:north .False )
            Call  SetZoneEnabled    ( ~Zone:west .False )
            Call  SetZoneEnabled    ( ~Zone:south .False )
            Call  SetZoneEnabled    ( ~Zone:east .False )
            Call  SetZoneEnabled    ( ~Zone:higashi .False )
            Call  SetZoneEnabled    ( ~Zone:nishi .False )
            Call  SetZoneEnabled    ( ~Zone:minami .False )
            Call  SetZoneEnabled    ( ~Zone:kita .False )
            Call  SetZoneEnabled    ( ~Zone:stage .True )
            Set   *Var[1]  00000001
        Case  ==  00000002
            Call  SetZoneEnabled    ( ~Zone:north .False )
            Call  SetZoneEnabled    ( ~Zone:west .False )
            Call  SetZoneEnabled    ( ~Zone:south .False )
            Call  SetZoneEnabled    ( ~Zone:east .False )
            Call  SetZoneEnabled    ( ~Zone:higashi .True )
            Call  SetZoneEnabled    ( ~Zone:nishi .True )
            Call  SetZoneEnabled    ( ~Zone:minami .True )
            Call  SetZoneEnabled    ( ~Zone:kita .True )
            Call  SetZoneEnabled    ( ~Zone:stage .False )
            Set   *Var[1]  00000002
    EndSwitch
    Return
    End
}

#new:Script $Script_80241C24
{
    Call  ParentColliderToModel ( ~Collider:monn ~Model:n1 )
    Call  RotateGroup   ( ~Model:monn *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monn )
    Call  ParentColliderToModel ( ~Collider:mons ~Model:s1 )
    Call  RotateGroup   ( ~Model:mons *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mons )
    Call  ParentColliderToModel ( ~Collider:mone ~Model:e1 )
    Call  RotateGroup   ( ~Model:mone *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mone )
    Call  ParentColliderToModel ( ~Collider:monw ~Model:w1 )
    Call  RotateGroup   ( ~Model:monw *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monw )
    Return
    End
}

#new:Script $Script_80241D44
{
    Call  RotateGroup   ( ~Model:monn 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monn )
    Call  RotateGroup   ( ~Model:mons 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mons )
    Call  RotateGroup   ( ~Model:mone 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mone )
    Call  RotateGroup   ( ~Model:monw 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monw )
    Return
    End
}

#new:Script $Script_80241E14
{
    Thread
        Call  PlaySoundAtCollider   ( *Var[9] 000001D4 00000000 )
        Wait  19`
        Call  PlaySoundAtCollider   ( *Var[9] 000001D5 00000000 )
    EndThread
    Switch  *AreaByte[1]
        Case  ==  00000000
            Thread
                Call  MakeLerp  ( 0000000A 0000005A 0000000A .Easing:QuadraticIn )
                Label  A
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  A
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  *Var[7]
                Add   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000001
            Exec  $Script_80241990
            Call  MakeLerp  ( 0000005A 00000168 0000001E .Easing:Linear )
            Label  14
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  14
            EndIf
            Exec  $Script_80241D44
            Set   *AreaByte[1]  00000001
            Set   *Flag_MIM_00  .True
        Case  ==  00000001
            Thread
                Call  MakeLerp  ( 00000168 0000010E 0000000A .Easing:QuadraticIn )
                Label  1E
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  1E
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  *Var[7]
                Sub   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000002
            Exec  $Script_80241990
            Call  MakeLerp  ( 0000010E FFFFFFF6 0000001E .Easing:Linear )
            Label  28
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  28
            EndIf
            Set   *AreaByte[1]  00000002
        Case  ==  00000002
            Thread
                Call  MakeLerp  ( FFFFFFF6 0000005A 0000000A .Easing:QuadraticIn )
                Label  32
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  32
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  *Var[7]
                Add   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000001
            Exec  $Script_80241990
            Call  MakeLerp  ( 0000005A 00000168 0000001E .Easing:Linear )
            Label  3C
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  3C
            EndIf
            Exec  $Script_80241D44
            Set   *AreaByte[1]  00000001
    EndSwitch
    Return
    End
}

#new:Script $Script_80242440
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000000
    Set   *Var[8]  00000046
    Set   *Var[9]  0000001C
    Set   *Var[A]  00000078
    ExecWait  $Script_80241E14
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_802424BC
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000000
    Set   *Var[8]  FFFFFFBA
    Set   *Var[9]  00000020
    Set   *Var[A]  0000007E
    ExecWait  $Script_80241E14
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80242538
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  FFFFFFBA
    Set   *Var[8]  00000000
    Set   *Var[9]  0000001E
    Set   *Var[A]  0000007B
    ExecWait  $Script_80241E14
    If  *StoryProgress  >=  FFFFFFD8
        If  *Flag_MIM_03  ==  .False
            If  *Flag_MIM_04  ==  .False
                Set   *Flag_MIM_04  .True
                Call  ShowMessageAtScreenPos    ( 000E0017 000000A0 00000028 ) % Nooooo! Waaahh! Bugs! Get 'em off me! I'm lost in  ...
            EndIf
        EndIf
    EndIf
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80242624
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000046
    Set   *Var[8]  00000000
    Set   *Var[9]  00000022
    Set   *Var[A]  00000081
    ExecWait  $Script_80241E14
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_802426A0
{
    If  *Flag_MIM_00  ==  .False
        Set   *Flag_MIM_00  .True
        Set   *AreaByte[1]  00000002
        Set   *Var[1]  00000002
        Set   *Var[2]  FFFFFFF6
    Else
        Set   *Flag_MIM_00  .False
        Set   *AreaByte[1]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  0000000A
    EndIf
    ExecWait  $Script_80241990
    Exec  $Script_80241C24
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  1`
    Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
    Bind  $Script_80242440 .Trigger:WallPressA ~Collider:monn 00000001 00000000
    Bind  $Script_802424BC .Trigger:WallPressA ~Collider:mons 00000001 00000000
    Bind  $Script_80242624 .Trigger:WallPressA ~Collider:monw 00000001 00000000
    Bind  $Script_80242538 .Trigger:WallPressA ~Collider:mone 00000001 00000000
    Return
    End
}

PADDING: 80242878 to 80242880 (00002878 to 00002880)
00000000 00000000

#new:AISettings $AISettings_80242880
{
    1.0 % move speed
    30` % move time
    10` % wait time
  120.0 % alert radius
    0.0
    5`
    4.5 % chase speed
    90`
    5`
  160.0 % chase radius
    0.0
    1`
}

#new:Script $Script_NpcAI_802428B0
{
    Call  SetNpcFlagBits        ( .Npc:Self 00000040 .True )
    Call  $Function_80240E60    ( $AISettings_80242880 00000001 )
    Return
    End
}

#new:NpcSettings $NpcSettings_802428EC
{
    00000000 00140016 00000000 00000000 $Script_NpcAI_802428B0 80077F70 00000000 8007809C
    00000000 00000000 000B0000
}

#new:NpcSettings $NpcSettings_80242918
{
    00000000 00200018 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

#new:IntTable $IntTable_80242944
{
    00000000 FFFFFEA2
}

#new:IntTable $IntTable_8024294C
{
    00000000 0000015E
}

#new:IntTable $IntTable_80242954
{
    0000015E 00000000
}

#new:IntTable $IntTable_8024295C
{
    FFFFFEF2 FFFFFF0B FFFFFF6A FFFFFECA
}

#new:IntTable $IntTable_8024296C
{
    0000010E FFFFFF0B 00000096 FFFFFECA
}

#new:IntTable $IntTable_8024297C
{
    FFFFFEF2 000000F5 FFFFFF6A 00000136
}

#new:IntTable $IntTable_8024298C
{
    0000010E 000000F5 00000096 00000136
}

#new:IntTable $IntTable_8024299C
{
    000000F5 FFFFFEF2 00000136 FFFFFF6A
}

#new:IntTable $IntTable_802429AC
{
    000000F5 0000010E 00000136 00000096
}

#new:Script $Script_Idle_802429BC
{
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            UseIntBuffer  $IntTable_80242944
        Case  ==  ~Entry:Entry1
            UseIntBuffer  $IntTable_80242944
        Case  ==  ~Entry:Entry2
            UseIntBuffer  $IntTable_8024294C
        Case  ==  ~Entry:Entry3
            UseIntBuffer  $IntTable_80242954
    EndSwitch
    Get2Int  *Var[1] *Var[2]
    Call  AwaitPlayerApproach   ( *Var[1] *Var[2] 00000050 )
    Label  A
    Wait  1`
    Call  AwaitPlayerLeave      ( *Var[1] *Var[2] 00000064 )
    Call  IsPlayerWithin        ( 00000000 00000000 0000019A *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry0
        Goto  A
    EndIf
    Call  DisablePlayerInput    ( .True )
    Call  GetCurrentPartner     ( *Var[0] )
    If  *Var[0]  !=  ~Entry:Entry0
        Call  802D2B6C ( )
        Wait  20`
    EndIf
    ExecWait  $Script_8024114C
    Call  GetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            If  *Var[1]  <  00000000
                UseIntBuffer  $IntTable_8024295C
            Else
                UseIntBuffer  $IntTable_8024296C
            EndIf
        Case  ==  ~Entry:Entry2
            If  *Var[1]  <  00000000
                UseIntBuffer  $IntTable_8024297C
            Else
                UseIntBuffer  $IntTable_8024298C
            EndIf
        Case  ==  ~Entry:Entry3
            If  *Var[3]  <  00000000
                UseIntBuffer  $IntTable_8024299C
            Else
                UseIntBuffer  $IntTable_802429AC
            EndIf
    EndSwitch
    Get4Int  *Var[2] *Var[3] *Var[4] *Var[5]
    Call  SetSelfVar    ( 00000000 *Var[2] )
    Call  SetSelfVar    ( 00000001 *Var[3] )
    Call  SetNpcPos     ( .Npc:Self *Var[2] 00000000 *Var[3] )
    Call  SpeakToPlayer ( .Npc:Self 00210016 00210003 00000000 000E0018 ) % Eeeek!
    Thread
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Add   *Var[0]  *Var[4]
        Add   *Var[2]  *Var[5]
        Div   *Var[0]  00000002
        Div   *Var[2]  00000002
        Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        Call  SetCamSpeed   ( .Cam:Default *Fixed[4.0] )
        Call  SetCamDistance    ( .Cam:Default *Fixed[300.0] )
        Call  SetCamPitch   ( .Cam:Default *Fixed[20.0] *Fixed[-6.0] )
        Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    EndThread
    Call  SetNpcAnimation   ( .Npc:Self 00210009 )
    Call  NpcMoveTo ( .Npc:Self *Var[4] *Var[5] 0000001E )
    Call  SetNpcAnimation   ( .Npc:Self 00210003 )
    Call  SpeakToPlayer     ( .Npc:Self 00210016 00210003 00000000 000E0019 ) % Oh, Mario! Oh, thank... ...I mean, ah HA! Boy, are ...
    Call  DisablePartnerAI  ( 00000000 )
    Call  GetCurrentPartnerID   ( *Var[0] )
    Switch  *Var[0]
        Case  ==  .Partner:Goombario % 1
            Call  SpeakToPlayer ( .Npc:Partner 00010008 00010001 00000005 000E001A ) % Why, it's Jr. Troopa! Have you been crying? Did yo ...
        Case  ==  .Partner:Kooper % 2
            Call  SpeakToPlayer ( .Npc:Partner 0002000D 00020003 00000005 000E001B ) % Hey, Mario. It looks like this kid is lost.
        Case  ==  .Partner:Bombette % 3
            Call  SpeakToPlayer ( .Npc:Partner 0003000E 00030003 00000005 000E001C ) % This little boy is filthy! What happened to him? I ...
        Case  ==  .Partner:Parakarry % 4
            Call  SpeakToPlayer ( .Npc:Partner 00040006 00040001 00000005 000E001D ) % Oh dear. This poor child looks very upset. Was he  ...
        Case  ==  .Partner:Bow % 9
            Call  SpeakToPlayer ( .Npc:Partner 00050004 00050001 00000005 000E001E ) % Who is this kid? What a dirty little urchin... He  ...
    EndSwitch
    Call  EnablePartnerAI ( )
    Call  SpeakToPlayer     ( .Npc:Self 00210016 00210003 00000000 000E001F ) % Hey! Shut up! Shut uuuuup! I'm not a lost child! I ...
    Call  SetNpcAnimation   ( .Npc:Self 0021000B )
    Call  DisablePlayerInput    ( .False )
    Call  StartBossBattle   ( .Song:JrTroopaBattle )
    Return
    End
}

#new:Script $Script_Defeat_80242F94
{
    Call  SpeakToPlayer ( .Npc:Self 00210016 00210003 00000000 000E0022 ) % Nooooo! Darn it! Darn it!! Darn iiiiiit!!!
    Call  GetSelfVar    ( 00000000 *Var[0] )
    Call  GetSelfVar    ( 00000001 *Var[1] )
    If  *Var[1]  >=  00000000
        Call  InterpNpcYaw  ( .Npc:Self 000000C8 00000000 )
    Else
        Call  InterpNpcYaw  ( .Npc:Self 0000014A 00000000 )
    EndIf
    Call  SetNpcAnimation   ( .Npc:Self 0021000B )
    Wait  10`
    Call  NpcMoveTo ( .Npc:Self *Var[0] *Var[1] 0000000F )
    Set   *Flag_MIM_03  .True
    ExecWait  $Script_80241110
    Call  ResetCam  ( .Cam:Default *Fixed[4.0] )
    Call  RemoveNpc ( .Npc:Self )
    Return
    End
}

#new:Script $Script_Init_802430B8
{
    If  *StoryProgress  >=  FFFFFFD8
        If  *Flag_MIM_03  ==  .False
            Call  BindNpcIdle   ( .Npc:Self $Script_Idle_802429BC )
            Call  BindNpcDefeat ( .Npc:Self $Script_Defeat_80242F94 )
            Return
        EndIf
    EndIf
    Call  RemoveNpc ( .Npc:Self )
    Return
    End
}

#new:Script $Script_Init_80243138
{
    If  *StoryProgress  >=  FFFFFFD8
        If  *Flag_MIM_03  ==  .False
            Call  RemoveNpc ( .Npc:Self )
        EndIf
    EndIf
    Return
    End
}

#new:NpcGroup $NpcGroup_80243188
{
    00000000 $NpcSettings_802428EC ~Vec3f:NPC_80243188 % -240 0 -240
    00000000 $Script_Init_80243138 00000000 00000000 00000000
    ~Items:5:ThunderBolt:A ~HP:Standard:2 ~FP:Standard:2 ~CoinBonus:0:2
    ~Movement:NPC_80243188
    ~AnimationTable:NPC_80243188 % .Sprite:Fuzzy
    00000001 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_80243378
{
    00000001 $NpcSettings_802428EC ~Vec3f:NPC_80243378 % 270 0 200
    00000000 $Script_Init_80243138 00000000 00000000 00000000
    ~Items:5:ThunderBolt:A ~HP:Standard:2 ~FP:Standard:2 ~CoinBonus:0:2
    ~Movement:NPC_80243378
    ~AnimationTable:NPC_80243378 % .Sprite:Fuzzy
    00000001 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_80243568
{
    00000002 $NpcSettings_80242918 ~Vec3f:NPC_80243568 % -338 0 0
    00A40D04 $Script_Init_802430B8 00000000 00000000 00000000
    ~NoDrops
    ~Movement:NPC_80243568
    ~AnimationTable:NPC_80243568 % .Sprite:JrTroopa
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_80243758
{
    00000001 $NpcGroup_80243188 0D020001
    00000001 $NpcGroup_80243378 0D060001
    00000001 $NpcGroup_80243568 02040000
    00000000 00000000 00000000
}

PADDING: 80243788 to 80243790 (00003788 to 00003790)
00000000 00000000

#new:ASCII $ASCII_80243790
{
    "mim_09"
}

#new:ASCII $ASCII_80243798
{
    "mim_01"
}

#new:ASCII $ASCII_802437A0
{
    "mim_06"
}

#new:ASCII $ASCII_802437A8
{
    "mim_11"
}

#new:ConstDouble $ConstDouble_802437B0
{
    1.200000d
}

#new:JumpTable $JumpTable_802437B8
{
    $Function_80240E60[164] $Function_80240E60[174] $Function_80240E60[18C] $Function_80240E60[1AC]
    $Function_80240E60[1FC] $Function_80240E60[1FC] $Function_80240E60[1FC] $Function_80240E60[1FC]
    $Function_80240E60[1FC] $Function_80240E60[1FC] $Function_80240E60[1FC] $Function_80240E60[1FC]
    $Function_80240E60[1C4] $Function_80240E60[1D4] $Function_80240E60[1EC]
}

PADDING: 802437F4 to 80243800 (000037F4 to 00003800)
00000000 00000000 00000000

