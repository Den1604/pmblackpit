% Script File: kzn_10.mscr
% Decoded from: 0 to 2020 (kzn_10)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o30
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o40
	ADDU      V0, V1, V0
	.o30
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o44
	SUBU      V0, V1, A0
	.o40
	SW        V0, A8 (S0)
	.o44
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o64
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o74
	ADDU      V0, V1, V0
	.o64
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o78
	SUBU      V0, V1, A0
	.o74
	SW        V0, AC (S0)
	.o78
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o98
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA8
	ADDU      V0, V1, V0
	.o98
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oAC
	SUBU      V0, V1, A0
	.oA8
	SW        V0, B0 (S0)
	.oAC
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oCC
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oDC
	ADDU      V0, V1, V0
	.oCC
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE0
	SUBU      V0, V1, A0
	.oDC
	SW        V0, B4 (S0)
	.oE0
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240124
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o24
	SW        RA, 14 (SP)
	SW        R0, 70 (S0)
	SW        R0, 74 (S0)
	SW        R0, 78 (S0)
	SW        R0, 7C (S0)
	.o24
	LW        V0, 70 (S0)
	BNE       V0, R0, .o64
	NOP
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o50
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o60
	ADDU      V0, V1, V0
	.o50
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o64
	SUBU      V0, V1, A0
	.o60
	SW        V0, A8 (S0)
	.o64
	LW        V0, 74 (S0)
	BNE       V0, R0, .oA4
	NOP
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o90
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA0
	ADDU      V0, V1, V0
	.o90
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oA4
	SUBU      V0, V1, A0
	.oA0
	SW        V0, AC (S0)
	.oA4
	LW        V0, 78 (S0)
	BNE       V0, R0, .oE4
	NOP
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oD0
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oE0
	ADDU      V0, V1, V0
	.oD0
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE4
	SUBU      V0, V1, A0
	.oE0
	SW        V0, B0 (S0)
	.oE4
	LW        V0, 7C (S0)
	BNE       V0, R0, .o124
	NOP
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o110
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o120
	ADDU      V0, V1, V0
	.o110
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o124
	SUBU      V0, V1, A0
	.o120
	SW        V0, B4 (S0)
	.o124
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        V0, 70 (S0)
	LW        V1, 78 (S0)
	LW        A0, 98 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 70 (S0)
	LW        V0, 74 (S0)
	ADDIU     V1, V1, 1
	SW        V1, 78 (S0)
	LW        V1, 70 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 74 (S0)
	LW        V0, 7C (S0)
	SLT       V1, V1, A0
	ADDIU     V0, V0, 1
	BNE       V1, R0, .o198
	SW        V0, 7C (S0)
	SW        R0, 70 (S0)
	.o198
	LW        V0, 74 (S0)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1AC
	SW        R0, 74 (S0)
	.o1AC
	LW        V0, 78 (S0)
	LW        V1, A0 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1C0
	SW        R0, 78 (S0)
	.o1C0
	LW        V0, 7C (S0)
	LW        V1, A4 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1D4
	SW        R0, 7C (S0)
	.o1D4
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_8024030C
{
	LAW       V0, 8010EFC8
	LUI       V1, 400
	AND       V0, V0, V1
	SLTIU     V0, V0, 1
	JR        RA
	SLL       V0, V0, 1
}

PADDING: 80240328 to 80240330 (00000328 to 00000330)
00000000 00000000

#new:Function $Function_80240330
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:subtract_hp
	ADDIU     A0, R0, 1
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240350
{
	LIA       V1, 8010EBB0
	LB        V0, 0 (V1)
	BEQ       V0, R0, .o20
	ADDIU     V0, R0, FFFF
	LB        V0, 3 (V1)
	BEQ       R0, R0, .o24
	SW        V0, 84 (A0)
	.o20
	SW        V0, 84 (A0)
	.o24
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_8024037C
{
	ADDIU     SP, SP, FFD0
	SW        S0, 28 (SP)
	COPY      S0, A0
	SW        RA, 2C (SP)
	LWC1      F0, 84 (S0)
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LWC1      F0, 8C (S0)
	CVT.S.W   F0, F0
	ADDIU     V0, SP, 24
	LUI       A0, 1
	ADDIU     A1, SP, 18
	ADDIU     A2, SP, 1C
	LIF       F2, 2000.0
	ADDIU     A3, SP, 20
	SWC1      F0, 1C (SP)
	SW        R0, 20 (SP)
	SWC1      F2, 24 (SP)
	JAL       800DCB7C
	SW        V0, 10 (SP)
	BEQ       V0, R0, .o84
	NOP
	LWC1      F2, 1C (SP)
	LIF       F0, 55.0
	NOP
	ADD.S     F2, F2, F0
	LWC1      F0, 18 (SP)
	TRUNC.W.S F4, F0
	SWC1      F4, 84 (S0)
	TRUNC.W.S F4, F2
	SWC1      F4, 8C (S0)
	.o84
	LW        RA, 2C (SP)
	LW        S0, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_80240414
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	LIA       V0, 8010EFC8
	SW        RA, 14 (SP)
	LWC1      F0, 28 (V0)
	LWC1      F2, 84 (S0)
	CVT.S.W   F2, F2
	SUB.S     F2, F2, F0
	MUL.S     F2, F2, F2
	NOP
	LWC1      F0, 2C (V0)
	LWC1      F4, 8C (S0)
	CVT.S.W   F4, F4
	SUB.S     F4, F4, F0
	MUL.S     F4, F4, F4
	NOP
	LWC1      F6, 30 (V0)
	MTC1      R0, F0
	NOP
	SUB.S     F0, F0, F6
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F2, F2, F4
	ADD.S     F12, F2, F0
	SQRT.S    F0, F12
	C.EQ.S    F0, F0
	NOP
	BC1T      .o84
	NOP
	JAL       ~Func:sqrtf
	NOP
	.o84
	TRUNC.W.S F8, F0
	SWC1      F8, 94 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802404B4
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	SAF       F0, 8010F054
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_802404EC
{
	ADDIU     SP, SP, FFE0
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	SDC1      F20, 18 (SP)
	LWC1      F12, 90 (S0)
	CVT.S.W   F12, F12
	LAD       F20, $ConstDouble_80242000
	NEG.S     F12, F12
	CVT.D.S   F12, F12
	SUB.D     F12, F12, F20
	JAL       ~Func:cos_deg
	CVT.S.D   F12, F12
	LIF       F3, 2.125
	MTC1      R0, F2
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F2
	NOP
	LWC1      F12, 90 (S0)
	CVT.S.W   F12, F12
	NEG.S     F12, F12
	CVT.D.S   F12, F12
	SUB.D     F12, F12, F20
	LAD       F2, $ConstDouble_80242008
	SUB.D     F0, F0, F2
	TRUNC.W.D F4, F0
	SWC1      F4, 98 (S0)
	JAL       ~Func:sin_deg
	CVT.S.D   F12, F12
	LIF       F3, 2.3125
	MTC1      R0, F2
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F2
	NOP
	TRUNC.W.D F4, F0
	SWC1      F4, 9C (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802405A4
{
	LAD       F2, $ConstDouble_80242010
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LWC1      F0, 84 (S0)
	CVT.D.W   F0, F0
	SUB.D     F2, F2, F0
	CVT.S.D   F2, F2
	MUL.S     F2, F2, F2
	NOP
	LIF       F1, 3.109375
	MTC1      R0, F0
	LWC1      F4, 8C (S0)
	CVT.D.W   F4, F4
	SUB.D     F0, F0, F4
	CVT.S.D   F0, F0
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F12, F2, F0
	SQRT.S    F0, F12
	C.EQ.S    F0, F0
	NOP
	BC1TL     .o78
	NEG.S     F0, F0
	JAL       ~Func:sqrtf
	NOP
	NEG.S     F0, F0
	.o78
	TRUNC.W.S F6, F0
	SWC1      F6, 90 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240638
{
	ADDIU     SP, SP, FFD8
	SW        S1, 1C (SP)
	COPY      S1, A0
	SW        RA, 20 (SP)
	SW        S0, 18 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	SW        V0, 70 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S1
	SW        V0, 74 (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      A0, S1
	ADDIU     A0, R0, 52
	CLEAR     A1
	LWC1      F0, 70 (S1)
	CVT.S.W   F0, F0
	LWC1      F2, 74 (S1)
	CVT.S.W   F2, F2
	MFC1      A2, F0
	MFC1      A3, F2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SW        V0, 78 (S1)
	JAL       801499EC
	SWC1      F0, 10 (SP)
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -445.0    0.0    0.0   90.0
    ~Vec4f:Entry1 %  425.0 -259.0    0.0  270.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main_EnterWalk
    [EntryList]   $EntryList
    [EntryCount]  00000002
    [Background]  00000000
    [MapTattle]   0019010C
}

#new:Script $Script_UpdateTexturePan_80240730
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_80240000 ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_80240124 ( )
    Return
    End
}

#new:Script $Script_802407CC
{
    SetGroup  00000000
    Call  SetTexPanner  ( *Var[0] 00000003 )
    Thread
        Set   *Var[0]  00000003
        Set   *Var[1]  FFFFFF38
        Set   *Var[2]  00000000
        Set   *Var[3]  00000258
        Set   *Var[4]  FFFFFE70
        Set   *Var[5]  00000001
        Set   *Var[6]  00000000
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_80240730
    EndThread
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802408E8
{
    SetGroup  00000000
    Call  SetTexPanner  ( *Var[0] 00000004 )
    Thread
        Set   *Var[0]  00000004
        Set   *Var[1]  000001F4
        Set   *Var[2]  00000000
        Set   *Var[3]  00000000
        Set   *Var[4]  FFFFFE70
        Set   *Var[5]  00000001
        Set   *Var[6]  00000000
        Set   *Var[7]  00000000
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_80240730
    EndThread
    Return
    End
}

#new:Script $Script_ExitWalk_80240A04
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80241FF0 00000001 ) % kzn_09
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80240A60
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80241FF8 00000000 ) % kzn_11
    Wait  100`
    Return
    End
}

#new:Script $Script_80240ABC
{
    Bind  $Script_ExitWalk_80240A04 .Trigger:FloorAbove ~Collider:deili1 00000001 00000000
    Bind  $Script_ExitWalk_80240A60 .Trigger:FloorAbove ~Collider:deili2 00000001 00000000
    Return
    End
}

#new:Script_Main $Script_Main_EnterWalk
{
    Set   *WorldMapLocation  .Location:MtLavalava
    Call  SetSpriteShading  ( 000A0009 )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Thread
        Call  GetEntryID    ( *Var[0] )
        If  *Var[0]  ==  ~Entry:Entry0
            Call  UseSettingsFrom   ( .Cam:Default FFFFFE43 FFFFFFF3 00000000 )
            Call  SetPanTarget      ( .Cam:Default FFFFFE43 FFFFFFF3 00000000 )
        Else
            Call  UseSettingsFrom   ( .Cam:Default 000001A9 FFFFFF0A 00000000 )
            Call  SetPanTarget      ( .Cam:Default 000001A9 FFFFFF0A 00000000 )
        EndIf
        Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
        Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
        Wait  2`
        Call  $Function_8024030C ( )
        Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
    EndThread
    Set   *Var[0]  $Script_80240ABC
    Exec  EnterWalk
    Wait  1`
    Call  SetMusicTrack     ( 00000000 .Song:MtLavalava 00000000 00000008 )
    Call  PlayAmbientSounds ( .AmbientSounds:UnderSea1 )
    Exec  $Script_80241464
    Set   *Var[0]  0000002C
    Exec  $Script_802407CC
    Return
    End
}

PADDING: 80240D0C to 80240D10 (00000D0C to 00000D10)
00000000

#new:Script $Script_80240D10
{
    Call  DisablePlayerInput    ( .True )
    Label  A
    Call  GetCurrentPartner     ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  802D2B6C ( )
    EndIf
    Label  0
    Wait  1`
    Call  GetCurrentPartner ( *Var[0] )
    If  *Var[0]  !=  00000000
        Call  GetCurrentPartnerID   ( *Var[0] )
        If  *Var[0]  ==  .Partner:Bow % 9
            Goto  2
        Else
            Goto  A
        EndIf
    EndIf
    Call  GetPlayerActionState  ( *Var[0] )
    If  *Var[0]  !=  .ActionState:Idle % 0
        Goto  0
    EndIf
    Call  GetPlayerTargetYaw    ( *Var[0] )
    If  *Var[0]  <  000000B4 % B4
        Call  InterpPlayerYaw       ( 0000005A 00000001 )
        Wait  1`
        Call  $Function_802404B4    ( 00000014 )
    Else
        Call  InterpPlayerYaw       ( 0000010E 00000001 )
        Wait  1`
        Call  $Function_802404B4    ( FFFFFFEC )
    EndIf
    Call  SetPlayerAnimation    ( .PlayerAnim:DeadStill )
    Wait  1`
    Call  $Function_80240330 ( )
    Call  802D2520  ( 0001000F 00000004 *Fixed[3.0] *Fixed[3.0] 00000000 00000000 )
    Label  1
    Wait  1`
    If  *AreaFlag[002]  ==  .False
        Goto  1
    EndIf
    Wait  30`
    Call  802D2520  ( 0001000F 00000000 00000000 00000000 00000000 00000000 )
    Call  SetPlayerAnimation    ( .PlayerAnim:GetUp )
    Call  $Function_802404B4    ( 00000000 )
    Label  2
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80240FB0
{
    Call  GetPlayerPos  ( *Var[3] *Var[4] *Var[5] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[3] *Var[4] *Var[5] )
    Call  SetPanTarget  ( .Cam:Default *Var[3] *Var[4] *Var[5] )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[10.0] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Loop
        If  *AreaFlag[003]  ==  .False
            Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  *MapVar[0]
            Div   *Var[0]  00000002
        Else
            Set   *Var[0]  *MapVar[0]
        EndIf
        Set   *Var[3]  *Var[0]
        Switch  *Var[3]
            Case  <  FFFFFEA2
                Set   *Var[6]  000001F4
            Case  <  FFFFFF38
                Set   *Var[6]  *Var[3]
                Add   *Var[6]  00000352
            Case  <  00000096
                Set   *Var[6]  0000028A
            Case  <  0000012C
                Set   *Var[0]  *Var[3]
                Set   *Var[6]  00000320
                Sub   *Var[6]  *Var[0]
            Default
                Set   *Var[6]  000001F4
        EndSwitch
        Call  SetCamDistance    ( .Cam:Default *Var[6] )
        Set   *Var[0]  *Var[3]
        Set   *Var[2]  00000000
        Call  $Function_8024037C ( )
        Sub   *Var[2]  00000037
        Call  SetPanTarget      ( .Cam:Default *Var[3] *Var[2] 00000000 )
        Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_80241224
{
    SetGroup  0000000A
    Loop  00000005
        Call  PlayEffect    ( ~FX:Dust:HeavyRain FFFFFE52 00000064 00000000 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  2`
    EndLoop
    Label  0
    Call  GetCamPosition    ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Add   *Var[1]  00000064
    Call  PlayEffect        ( ~FX:Dust:HeavyRain *Var[0] *Var[1] *Var[2] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  20`
    Sub   *Var[0]  00000064
    Add   *Var[1]  00000032
    Call  PlayEffect        ( ~FX:Dust:HeavyRain *Var[0] *Var[1] *Var[2] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Wait  20`
    If  *AreaFlag[004]  ==  .False
        Goto  0
    EndIf
    Loop  00000008
        Call  PlayEffect    ( ~FX:Dust:HeavyRain 00000190 FFFFFFB0 00000000 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  5`
    EndLoop
    Return
    End
}

#new:Script $Script_80241424
{
    Loop
        Call  ShakeCam  ( .Cam:Default 00000000 0000001E *Fixed[1.0] )
    EndLoop
    Return
    End
}

#new:Script $Script_80241464
{
    SetGroup  000000EF
    Call  SetGroupEnabled   ( ~Model:goron 00000000 )
    Call  EnableModel       ( ~Model:me .False )
    Call  TranslateGroup    ( ~Model:goron 00000000 00000000 00000000 )
    Call  RotateGroup       ( ~Model:goron 00000000 00000000 00000000 00000001 )
    Set   *AreaFlag[004]  .False
    Set   *AreaFlag[003]  .False
    Set   *AreaFlag[002]  .False
    Call  GetEntryID        ( *Var[3] )
    Loop
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        If  *Var[3]  ==  ~Entry:Entry0
            If  *Var[0]  >=  FFFFFE70
                BreakLoop
            EndIf
        Else
            If  *Var[0]  <=  FFFFFE70
                BreakLoop
            EndIf
        EndIf
        Wait  1`
    EndLoop
    Call  802D2B6C ( )
    Call  SetGroupEnabled   ( ~Model:goron 00000001 )
    Call  EnableModel       ( ~Model:me .True )
    Call  DisablePlayerInput    ( .True )
    Set   *Var[0]  FFFFFE2B
    Set   *Var[2]  00000000
    Call  $Function_8024037C ( )
    Call  MakeLerp  ( 000000C8 *Var[2] 00000014 .Easing:QuadraticIn )
    Label  A
    Call  UpdateLerp ( )
    Set   *MapVar[0]  FFFFFE2B
    Call  TranslateGroup    ( ~Model:goron FFFFFE2B *Var[0] 00000000 )
    Call  TranslateModel    ( ~Model:me FFFFFE2B *Var[0] 00000000 )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  A
    EndIf
    Sub   *Var[2]  00000037
    Call  PlayEffect    ( ~FX:Steam:LargeOutward FFFFFE2B *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Exec  $Script_80241224
    Thread
        Call  GetCurrentPartner ( *Var[0] )
        Switch  *Var[0]
            Case  ==  00000004
            Case  ==  00000009
            Default
                Call  GetPlayerPos      ( *Var[1] *Var[2] *Var[3] )
                Call  SetPlayerJumpscale    ( *Fixed[2.5] )
                Call  PlayerJump1       ( *Var[1] *Var[2] *Var[3] 00000008 )
                Call  InterpPlayerYaw   ( 0000010E 00000000 )
                If  *Var[0]  !=  00000008
                    Wait  3`
                    Call  SetPlayerAnimation    ( 0001002B )
                    Wait  10`
                    Call  SetPlayerAnimation    ( 00010002 )
                EndIf
        EndSwitch
    EndThread
    Call  PlaySoundAt   ( 000001E3 00000000 FFFFFE2F 00000000 00000000 )
    Call  ShakeCam      ( .Cam:Default 00000000 0000000A *Fixed[2.5] )
    Call  ShakeCam      ( .Cam:Default 00000000 00000005 *Fixed[1.2] )
    Wait  15`
    Call  DisablePlayerInput    ( .False )
    Exec  $Script_80240FB0 *Var[A]
    Exec  $Script_80241424 *MapVar[A]
    Call  PlaySoundAt   ( 8000001B 00000000 FFFFFE2F 00000000 00000000 )
    Set   *Var[2]  00000000
    Set   *Var[3]  00000000
    Call  MakeLerp      ( FFFFFE2B 000001A2 000000B4 .Easing:QuadraticIn )
    Loop
        Call  UpdateLerp ( )
        Call  $Function_8024037C ( )
        Call  $Function_80240638    ( *Var[0] *Var[1] *Var[2] )
        Set   *MapVar[0]  *Var[0]
        Call  TranslateGroup    ( ~Model:goron *Var[0] *Var[2] 00000000 )
        Call  TranslateModel    ( ~Model:me *Var[0] *Var[2] 00000000 )
        Set   *Var[8]  *Var[0]
        Set   *Var[9]  *Var[2]
        Call  RotateGroup       ( ~Model:goron *Var[3] 00000000 00000000 00000001 )
        Call  RotateModel       ( ~Model:me *Var[3] 00000000 00000000 00000001 )
        Call  $Function_802404EC ( )
        Call  TranslateModel    ( ~Model:me *Var[5] *Var[6] 00000000 )
        Call  $Function_802405A4 ( )
        Wait  1`
        Call  $Function_80240414 ( )
        If  *Var[4]  <  00000050
            If  *AreaFlag[003]  ==  .False
                Call  $Function_80240350 ( )
                If  *Var[0]  !=  00000009
                    Exec  $Script_80240D10
                    If  *AreaFlag[003]  ==  .False
                        Kill  *Var[A]
                        Set   *AreaFlag[003]  .True
                    EndIf
                    Thread
                        Call  ResetCam  ( .Cam:Default *Fixed[2.0] )
                        Wait  45`
                        Set   *AreaFlag[002]  .True
                    EndThread
                EndIf
            EndIf
        EndIf
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    Set   *AreaFlag[004]  .True
    Kill  *MapVar[A]
    Thread
        Call  ShakeCam  ( .Cam:Default 00000000 00000023 *Fixed[2.0] )
        Call  ShakeCam  ( .Cam:Default 00000000 00000014 *Fixed[1.0] )
        Call  ShakeCam  ( .Cam:Default 00000000 0000000A *Fixed[0.5] )
    EndThread
    Call  StopSound     ( 8000001B )
    Call  PlaySoundAt   ( 000001E4 00000000 0000019F FFFFFF10 00000000 )
    Call  EnableModel   ( ~Model:me .False )
    Thread
        Set   *Var[0]  000001A2
        Set   *Var[2]  00000000
        Call  $Function_8024037C ( )
        Call  PlayEffect    ( ~FX:BigSteamPuff *Var[0] *Var[2] 00000000 00000001 00000014 00000003 00000008 00000000 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Set   *Var[0]  *Var[8]
    Set   *Var[1]  *Var[9]
    Set   *Var[2]  *Var[8]
    Set   *Var[3]  *Var[9]
    Set   *Var[4]  *Var[8]
    Set   *Var[5]  *Var[9]
    Set   *Var[6]  *Var[8]
    Set   *Var[7]  *Var[9]
    Loop  0000005A
        Call  TranslateModel    ( ~Model:o70 *Var[6] *Var[1] 00000000 )
        Call  TranslateModel    ( ~Model:o72 *Var[6] *Var[3] 00000000 )
        Call  TranslateModel    ( ~Model:o73 *Var[4] *Var[5] 00000000 )
        Call  TranslateModel    ( ~Model:o74 *Var[4] *Var[7] 00000000 )
        Call  TranslateModel    ( ~Model:2_1 *Var[2] *Var[3] 00000000 )
        Call  TranslateModel    ( ~Model:2_2 *Var[2] *Var[1] 00000000 )
        Call  TranslateModel    ( ~Model:2_3 *Var[0] *Var[7] 00000000 )
        Call  TranslateModel    ( ~Model:2_4 *Var[0] *Var[5] 00000000 )
        Call  TranslateModel    ( ~Model:3_1 *Var[0] *Var[5] 00000000 )
        Call  TranslateModel    ( ~Model:3_2 *Var[0] *Var[7] 00000000 )
        Call  TranslateModel    ( ~Model:3_3 *Var[2] *Var[1] 00000000 )
        Call  TranslateModel    ( ~Model:3_4 *Var[2] *Var[3] 00000000 )
        Call  TranslateModel    ( ~Model:4_1 *Var[4] *Var[7] 00000000 )
        Call  TranslateModel    ( ~Model:4_2 *Var[4] *Var[5] 00000000 )
        Call  TranslateModel    ( ~Model:4_3 *Var[6] *Var[3] 00000000 )
        Call  TranslateModel    ( ~Model:4_4 *Var[6] *Var[1] 00000000 )
        Add   *Var[0]  00000002
        Add   *Var[1]  FFFFFFF9
        Add   *Var[2]  FFFFFFFB
        Add   *Var[3]  00000007
        Add   *Var[4]  00000009
        Add   *Var[5]  FFFFFFFD
        Add   *Var[6]  FFFFFFFA
        Add   *Var[7]  00000007
        Wait  1`
    EndLoop
    Call  SetGroupEnabled   ( ~Model:goron 00000000 )
    Call  EnableModel       ( ~Model:me .False )
    Wait  10`
    If  *AreaFlag[003]  ==  .False
        Kill  *Var[A]
        Call  ResetCam  ( .Cam:Default *Fixed[90.0] )
        Set   *AreaFlag[002]  .True
    EndIf
    Return
    End
}

#new:ASCII $ASCII_80241FF0
{
    "kzn_09"
}

#new:ASCII $ASCII_80241FF8
{
    "kzn_11"
}

#new:ConstDouble $ConstDouble_80242000
{
    35.000000d
}

#new:ConstDouble $ConstDouble_80242008
{
    2.300000d
}

#new:ConstDouble $ConstDouble_80242010
{
    -469.000000d
}

PADDING: 80242018 to 80242020 (00002018 to 00002020)
00000000 00000000

