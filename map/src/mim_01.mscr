% Script File: mim_01.mscr
% Decoded from: 0 to 47C0 (mim_01)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:enable_world_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	JAL       ~Func:enable_entity_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_entity_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_entity_fog_color
	ADDIU     A3, R0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240068 to 80240070 (00000068 to 00000070)
00000000 00000000

#new:Function $Function_80240070
{
	ADDIU     SP, SP, FF88
	SDC1      F22, 50 (SP)
	MTC1      R0, F22
	SW        S3, 34 (SP)
	COPY      S3, A1
	SW        S4, 38 (SP)
	COPY      S4, A2
	SW        S5, 3C (SP)
	COPY      S5, A3
	SW        S2, 30 (SP)
	COPY      S2, A0
	SW        S1, 2C (SP)
	LIA       S1, $End[0]
	SW        RA, 40 (SP)
	SW        S0, 28 (SP)
	SDC1      F30, 70 (SP)
	SDC1      F28, 68 (SP)
	SDC1      F26, 60 (SP)
	SDC1      F24, 58 (SP)
	SDC1      F20, 48 (SP)
	MOV.S     F0, F22
	MOV.S     F16, F22
	MOV.S     F20, F22
	MOV.S     F30, F20
	MOV.S     F2, F20
	MOV.S     F24, F20
	MOV.S     F26, F20
	MOV.S     F28, F20
	.o74
	ADDIU     V0, R0, 6
	LW        A2, 0 (S2)
	LW        A3, 4 (S2)
	SRL       V1, A2, 18
	BEQ       V1, V0, .o1C0
	CLEAR     S0
	SLTI      V0, V1, 7
	BEQ       V0, R0, .oB0
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .oFC
	ADDIU     V0, R0, 5
	BEQ       V1, V0, .o148
	SRL       V0, A3, F
	BEQ       R0, R0, .o284
	NOP
	.oB0
	ADDIU     V0, R0, DE
	BEQ       V1, V0, .oCC
	ADDIU     V0, R0, DF
	BEQL      V1, V0, .o284
	ADDIU     S0, R0, 1
	BEQ       R0, R0, .o284
	NOP
	.oCC
	COPY      A0, A3
	COPY      A1, S3
	COPY      A2, S4
	COPY      A3, S5
	SWC1      F0, 18 (SP)
	SWC1      F2, 1C (SP)
	JAL       $Function_80240070
	SWC1      F16, 20 (SP)
	LWC1      F0, 18 (SP)
	LWC1      F2, 1C (SP)
	BEQ       R0, R0, .o284
	LWC1      F16, 20 (SP)
	.oFC
	SRL       V0, A2, C
	ANDI      A1, V0, FF
	SLTU      V0, S0, A1
	BEQ       V0, R0, .o284
	CLEAR     V1
	SRL       V0, A2, 1
	ANDI      V0, V0, 7F
	SUBU      A2, V0, A1
	COPY      A0, A3
	.o120
	ADDU      V0, A2, V1
	SLL       V0, V0, 2
	ADDU      V0, V0, S1
	SW        A0, 0 (V0)
	ADDIU     V1, V1, 1
	SLTU      V0, V1, A1
	BNE       V0, R0, .o120
	ADDIU     A0, A0, 10
	BEQ       R0, R0, .o284
	NOP
	.o148
	ANDI      V0, V0, 1FC
	ADDU      V0, V0, S1
	LW        A0, 0 (V0)
	ADDIU     S0, R0, 2
	LH        V0, 0 (A0)
	LH        V1, 2 (A0)
	MTC1      V0, F16
	NOP
	CVT.S.W   F16, F16
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	SRL       V0, A3, 7
	ANDI      V0, V0, 1FC
	ADDU      V0, V0, S1
	LH        V1, 4 (A0)
	LW        A0, 0 (V0)
	MTC1      V1, F22
	NOP
	CVT.S.W   F22, F22
	LH        V0, 0 (A0)
	LH        V1, 2 (A0)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	MTC1      V1, F30
	NOP
	CVT.S.W   F30, F30
	BEQ       R0, R0, .o238
	SLL       V0, A3, 1
	.o1C0
	SRL       V0, A2, F
	ANDI      V0, V0, 1FC
	ADDU      V0, V0, S1
	LW        A0, 0 (V0)
	ADDIU     S0, R0, 2
	LH        V0, 0 (A0)
	LH        V1, 2 (A0)
	MTC1      V0, F16
	NOP
	CVT.S.W   F16, F16
	MTC1      V1, F0
	NOP
	CVT.S.W   F0, F0
	SRL       V0, A2, 7
	ANDI      V0, V0, 1FC
	ADDU      V0, V0, S1
	LH        V1, 4 (A0)
	LW        A0, 0 (V0)
	MTC1      V1, F22
	NOP
	CVT.S.W   F22, F22
	LH        V0, 0 (A0)
	LH        V1, 2 (A0)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	MTC1      V1, F30
	NOP
	CVT.S.W   F30, F30
	SLL       V0, A2, 1
	.o238
	ANDI      V0, V0, 1FC
	ADDU      V0, V0, S1
	LH        V1, 4 (A0)
	LW        V0, 0 (V0)
	MTC1      V1, F20
	NOP
	CVT.S.W   F20, F20
	LH        A0, 0 (V0)
	LH        V1, 2 (V0)
	LH        V0, 4 (V0)
	MTC1      A0, F28
	NOP
	CVT.S.W   F28, F28
	MTC1      V1, F26
	NOP
	CVT.S.W   F26, F26
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	.o284
	BEQ       S0, R0, .o74
	ADDIU     S2, S2, 8
	ADDIU     V0, R0, 2
	BNE       S0, V0, .o344
	NOP
	SUB.S     F8, F0, F30
	SUB.S     F6, F24, F20
	MUL.S     F14, F8, F6
	NOP
	SUB.S     F4, F22, F20
	SUB.S     F10, F26, F30
	MUL.S     F12, F4, F10
	NOP
	SUB.S     F0, F28, F2
	MUL.S     F4, F4, F0
	NOP
	SUB.S     F2, F16, F2
	MUL.S     F6, F2, F6
	NOP
	MUL.S     F2, F2, F10
	NOP
	MUL.S     F8, F8, F0
	NOP
	SUB.S     F20, F14, F12
	MUL.S     F0, F20, F20
	NOP
	SUB.S     F22, F4, F6
	MUL.S     F4, F22, F22
	NOP
	SUB.S     F24, F2, F8
	MUL.S     F2, F24, F24
	NOP
	ADD.S     F0, F0, F4
	ADD.S     F12, F0, F2
	SQRT.S    F2, F12
	C.EQ.S    F2, F2
	NOP
	BC1TL     .o330
	DIV.S     F0, F20, F2
	JAL       ~Func:sqrtf
	NOP
	MOV.S     F2, F0
	DIV.S     F0, F20, F2
	.o330
	SWC1      F0, 0 (S3)
	DIV.S     F0, F22, F2
	SWC1      F0, 0 (S4)
	DIV.S     F0, F24, F2
	SWC1      F0, 0 (S5)
	.o344
	LW        RA, 40 (SP)
	LW        S5, 3C (SP)
	LW        S4, 38 (SP)
	LW        S3, 34 (SP)
	LW        S2, 30 (SP)
	LW        S1, 2C (SP)
	LW        S0, 28 (SP)
	LDC1      F30, 70 (SP)
	LDC1      F28, 68 (SP)
	LDC1      F26, 60 (SP)
	LDC1      F24, 58 (SP)
	LDC1      F22, 50 (SP)
	LDC1      F20, 48 (SP)
	JR        RA
	ADDIU     SP, SP, 78
}

#new:Function $Function_802403F0
{
	ADDIU     SP, SP, FFC0
	SW        S1, 24 (SP)
	COPY      S1, A0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	JAL       ~Func:get_model_list_index_from_tree_index
	COPY      A0, V0
	JAL       ~Func:get_model_from_list_index
	COPY      A0, V0
	LW        V0, 8 (V0)
	ADDIU     A1, SP, 10
	LW        V0, 4 (V0)
	ADDIU     A2, SP, 14
	LW        A0, 0 (V0)
	JAL       $Function_80240070
	ADDIU     A3, SP, 18
	LWC1      F0, 10 (SP)
	LIF       F20, 1024.0
	NOP
	MUL.S     F0, F0, F20
	NOP
	LIO       AT, CD5B5858
	MTC1      AT, F22
	NOP
	ADD.S     F0, F0, F22
	LW        A1, 0 (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S1
	LWC1      F0, 14 (SP)
	MUL.S     F0, F0, F20
	NOP
	ADDIU     S0, S0, 4
	ADD.S     F0, F0, F22
	LW        A1, 0 (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S1
	LWC1      F0, 18 (SP)
	MUL.S     F0, F0, F20
	NOP
	ADDIU     S0, S0, 4
	ADD.S     F0, F0, F22
	LW        A1, 0 (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	COPY      A0, S1
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40
}

PADDING: 802404F8 to 80240500 (000004F8 to 00000500)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80240500
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	ADDIU     V1, R0, 1
	COPY      A0, V0
	SW        V1, 6C (S0)
	LH        V0, 8C (A0)
	BNE       V0, R0, .o58
	ADDIU     V0, R0, 2
	LHU       V1, 72 (S0)
	SW        V0, 6C (S0)
	SH        V1, 8E (A0)
	LW        V0, CC (S0)
	LW        V0, 20 (V0)
	SW        V0, 28 (A0)
	ADDIU     V0, R0, 1F
	SW        V0, 70 (S1)
	.o58
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HEURISTIC
#new:Function $Function_8024056C
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	COPY      A0, V0
	LHU       V0, 8E (A0)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (A0)
	SLL       V0, V0, 10
	BGTZ      V0, .o5C
	ADDIU     V0, R0, 3
	LHU       V1, 76 (S0)
	SW        V0, 6C (S0)
	SH        V1, 8E (A0)
	LW        V0, CC (S0)
	LW        V0, 24 (V0)
	SW        V0, 28 (A0)
	ADDIU     V0, R0, 20
	SW        V0, 70 (S1)
	.o5C
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HEURISTIC
#new:Function $Function_802405DC
{
	ADDIU     SP, SP, FFC0
	SW        S1, 34 (SP)
	COPY      S1, A0
	SW        RA, 38 (SP)
	SW        S0, 30 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	COPY      A1, V0
	LHU       V0, 8E (A1)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (A1)
	SLL       V0, V0, 10
	BGTZ      V0, .oC4
	ADDIU     V0, R0, 4
	LW        V1, CC (S0)
	SW        V0, 6C (S0)
	LW        V0, 0 (V1)
	SW        V0, 28 (A1)
	LHU       V0, 7A (S0)
	SH        V0, 8E (A1)
	LW        V0, 78 (S0)
	SLTI      V0, V0, 8
	BNE       V0, R0, .oC0
	ADDIU     V0, R0, 21
	ADDIU     A0, R0, 3
	ADDIU     V1, SP, 28
	LH        A3, A8 (A1)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	MTC1      A3, F6
	NOP
	CVT.S.W   F6, F6
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	SWC1      F4, 18 (SP)
	LW        V0, 78 (S0)
	MFC1      A3, F6
	CLEAR     A2
	SW        V1, 20 (SP)
	ADDIU     V0, V0, FFFF
	JAL       ~Func:fx_emote
	SW        V0, 1C (SP)
	ADDIU     V0, R0, 21
	.oC0
	SW        V0, 70 (S1)
	.oC4
	LW        RA, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

% Origin: HEURISTIC
#new:Function $Function_802406B4
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	LHU       V1, 8E (V0)
	ADDIU     V1, V1, FFFF
	SH        V1, 8E (V0)
	SLL       V1, V1, 10
	BGTZ      V1, .o40
	ADDIU     V0, R0, C
	SW        R0, 6C (S0)
	SW        V0, 70 (S1)
	.o40
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HEURISTIC
#new:Function $Function_80240708
{
	ADDIU     SP, SP, FFD0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, 148 (A0)
	LH        A0, 8 (S0)
	JAL       ~Func:get_npc_unsafe
	ADDIU     S1, R0, 1
	LH        A0, 8 (S0)
	COPY      S0, V0
	LIA       A1, 800B1D80
	LAH       V1, 8009A634
	ADDU      A0, A0, S1
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	SUBU      V0, V0, V1
	SLL       V1, V0, 3
	ADDU      V0, V0, V1
	SLL       V0, V0, 3
	JAL       ~Func:get_enemy
	ADDU      S2, V0, A1
	LIA       S4, 800F7B30
	LWC1      F12, 38 (S0)
	LW        V1, 0 (S4)
	LWC1      F14, 40 (S0)
	LW        A2, 28 (V1)
	LW        A3, 30 (V1)
	JAL       ~Func:dist2D
	COPY      S3, V0
	LWC1      F2, 74 (S3)
	CVT.S.W   F2, F2
	C.LT.S    F2, F0
	NOP
	BC1TL     .oAC
	CLEAR     S1
	.oAC
	LWC1      F12, 6C (S2)
	LWC1      F14, C (S0)
	LIF       F20, 270.0
	JAL       ~Func:get_clamped_angle_diff
	NOP
	JAL       ~Func:clamp_angle
	MOV.S     F12, F0
	LAD       F2, $ConstDouble_802445F0
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1F      .oF0
	NOP
	LIF       F20, 90.0
	.oF0
	LWC1      F12, 38 (S0)
	LW        V0, 0 (S4)
	LWC1      F14, 40 (S0)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	MOV.S     F12, F20
	JAL       ~Func:get_clamped_angle_diff
	MOV.S     F14, F0
	LWC1      F2, 78 (S3)
	CVT.S.W   F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1TL     .o130
	CLEAR     S1
	.o130
	LW        V0, 0 (S4)
	LWC1      F0, 3C (S0)
	LWC1      F2, 2C (V0)
	LH        V0, A8 (S0)
	SUB.S     F0, F0, F2
	MTC1      V0, F2
	NOP
	CVT.D.W   F2, F2
	ADD.D     F2, F2, F2
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	C.LE.D    F2, F0
	NOP
	BC1TL     .o16C
	CLEAR     S1
	.o16C
	LAB       V1, 8010EBB3
	ADDIU     V0, R0, 9
	BEQL      V1, V0, .o180
	CLEAR     S1
	.o180
	ADDIU     V0, R0, 7
	BEQL      V1, V0, .o18C
	CLEAR     S1
	.o18C
	COPY      V0, S1
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 28 (SP)
	JR        RA
	ADDIU     SP, SP, 30
}

#new:Function $Function_802408BC
{
	ADDIU     SP, SP, FFD0
	SW        S4, 28 (SP)
	COPY      S4, A0
	SW        RA, 2C (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        S1, 148 (S4)
	LH        A0, 8 (S1)
	JAL       ~Func:get_npc_unsafe
	COPY      S0, A1
	BNE       S0, R0, .o48
	COPY      S2, V0
	LW        V0, B0 (S1)
	ANDI      V0, V0, 4
	BEQ       V0, R0, .o98
	NOP
	.o48
	SW        R0, 70 (S4)
	LW        V0, 0 (S2)
	LUI       V1, 1F30
	SH        R0, 8E (S2)
	ORI       V0, V0, 102
	SW        V0, 0 (S2)
	LW        V0, 0 (S1)
	LIF       F0, -1000.0
	OR        V0, V0, V1
	SW        V0, 0 (S1)
	SW        R0, 38 (S2)
	SWC1      F0, 3C (S2)
	SW        R0, 40 (S2)
	LW        V1, B0 (S1)
	ANDI      V0, V1, 4
	BEQ       V0, R0, .o98
	ADDIU     V0, R0, FFFB
	AND       V0, V1, V0
	SW        V0, B0 (S1)
	.o98
	LW        S3, 70 (S4)
	BEQ       S3, R0, .oB4
	ADDIU     V0, R0, 1
	BEQ       S3, V0, .o1C8
	NOP
	BEQ       R0, R0, .o23C
	NOP
	.oB4
	LH        A0, 8 (S1)
	JAL       ~Func:get_enemy
	ADDIU     A0, A0, FFFF
	COPY      S0, V0
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	ADDIU     V1, R0, 1
	COPY      S3, V0
	SB        V1, 7 (S1)
	LW        V1, 6C (S0)
	ADDIU     V0, R0, 3
	BNE       V1, V0, .o23C
	NOP
	LW        A1, A8 (S1)
	BEQ       A1, R0, .oFC
	COPY      A0, S3
	JAL       800494C0
	CLEAR     A2
	.oFC
	ADDIU     A0, SP, 10
	LWC1      F8, 70 (S1)
	CVT.S.W   F8, F8
	LWC1      F2, 34 (S3)
	LIF       F0, 270.0
	MFC1      A2, F8
	SUB.S     F0, F0, F2
	LWC1      F6, 38 (S3)
	LWC1      F4, 40 (S3)
	MFC1      A3, F0
	ADDIU     A1, SP, 14
	SWC1      F6, 10 (SP)
	JAL       ~Func:add_vec2D_polar
	SWC1      F4, 14 (SP)
	LWC1      F0, 10 (SP)
	TRUNC.W.S F8, F0
	MFC1      V0, F8
	SWC1      F0, 38 (S2)
	SH        V0, 10 (S1)
	LWC1      F0, 3C (S3)
	LWC1      F2, 6C (S1)
	CVT.S.W   F2, F2
	ADD.S     F0, F0, F2
	LAW       V1, 800F7B30
	SWC1      F0, 3C (S2)
	LWC1      F2, 14 (SP)
	TRUNC.W.S F8, F0
	MFC1      V0, F8
	NOP
	SH        V0, 12 (S1)
	TRUNC.W.S F8, F2
	MFC1      V0, F8
	SWC1      F2, 40 (S2)
	SH        V0, 14 (S1)
	LW        A2, 28 (V1)
	LW        A3, 30 (V1)
	LWC1      F12, 38 (S2)
	JAL       ~Func:atan2
	LWC1      F14, 40 (S2)
	LUI       V1, E0EF
	SWC1      F0, C (S2)
	LW        V0, 0 (S1)
	ORI       V1, V1, FFFF
	AND       V0, V0, V1
	SW        V0, 0 (S1)
	ADDIU     V0, R0, 1
	SH        R0, 8E (S2)
	BEQ       R0, R0, .o23C
	SW        V0, 70 (S4)
	.o1C8
	LH        A0, 8 (S1)
	JAL       ~Func:get_enemy
	ADDIU     A0, A0, FFFF
	COPY      S0, V0
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	LHU       V0, 8E (S2)
	ADDIU     V0, V0, 1
	SH        V0, 8E (S2)
	SLL       V0, V0, 10
	LW        V1, 7C (S1)
	SRA       V0, V0, 10
	SLT       V0, V0, V1
	BEQL      V0, R0, .o204
	SB        R0, 7 (S1)
	.o204
	LW        V1, 6C (S0)
	ADDIU     V0, R0, 4
	BNE       V1, V0, .o23C
	LUI       V0, 1F10
	LW        V1, 0 (S1)
	LIF       F0, -1000.0
	OR        V1, V1, V0
	SW        V1, 0 (S1)
	SW        R0, 38 (S2)
	SWC1      F0, 3C (S2)
	SW        R0, 40 (S2)
	SB        S3, 7 (S1)
	SW        R0, 70 (S4)
	.o23C
	LW        RA, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80240B1C
{
	ADDIU     SP, SP, FFB0
	SW        S2, 38 (SP)
	COPY      S2, A0
	SW        RA, 48 (SP)
	SW        S5, 44 (SP)
	SW        S4, 40 (SP)
	SW        S3, 3C (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S1, 148 (S2)
	LH        A0, 8 (S1)
	JAL       ~Func:get_npc_unsafe
	COPY      S0, A1
	LW        V1, C (S2)
	COPY      A0, S2
	LW        A1, 0 (V1)
	JAL       ~Func:get_variable
	COPY      S5, V0
	SW        R0, 10 (SP)
	LW        V1, D0 (S1)
	LW        V1, 30 (V1)
	SW        V1, 14 (SP)
	LW        V1, D0 (S1)
	LW        V1, 1C (V1)
	SW        V1, 18 (SP)
	LW        V1, D0 (S1)
	LW        V1, 24 (V1)
	SW        V1, 1C (SP)
	LW        V1, D0 (S1)
	LW        V1, 28 (V1)
	ADDIU     S4, SP, 10
	SW        V1, 20 (SP)
	LW        V1, D0 (S1)
	LIF       F0, 65.0
	LW        V1, 2C (V1)
	COPY      S3, V0
	SWC1      F0, 28 (SP)
	SH        R0, 2C (SP)
	BNE       S0, R0, .oB4
	SW        V1, 24 (SP)
	LW        V0, B0 (S1)
	ANDI      V0, V0, 4
	BEQ       V0, R0, .o130
	NOP
	.oB4
	ADDIU     A0, R0, F7FF
	SW        R0, 70 (S2)
	SH        R0, 8E (S5)
	LW        V0, CC (S1)
	LW        V1, 0 (S5)
	LW        V0, 0 (V0)
	AND       V1, V1, A0
	SW        V1, 0 (S5)
	SW        V0, 28 (S5)
	LW        V0, D0 (S1)
	LW        V0, 34 (V0)
	BNEL      V0, R0, .oF8
	ADDIU     V0, R0, FDFF
	ORI       V0, V1, 200
	ADDIU     V1, R0, FFF7
	BEQ       R0, R0, .o100
	AND       V0, V0, V1
	.oF8
	AND       V0, V1, V0
	ORI       V0, V0, 8
	.o100
	SW        V0, 0 (S5)
	LW        V0, B0 (S1)
	ANDI      V0, V0, 4
	BEQ       V0, R0, .o12C
	ADDIU     V0, R0, 63
	SW        V0, 70 (S2)
	SW        R0, 74 (S2)
	LW        V0, B0 (S1)
	ADDIU     V1, R0, FFFB
	AND       V0, V0, V1
	SW        V0, B0 (S1)
	.o12C
	SW        R0, 6C (S1)
	.o130
	LW        V0, 70 (S2)
	SLTI      V0, V0, 1E
	BEQ       V0, R0, .o160
	NOP
	LW        V0, 6C (S1)
	BNE       V0, R0, .o160
	NOP
	JAL       $Function_80240708
	COPY      A0, S2
	BEQ       V0, R0, .o160
	ADDIU     V0, R0, 1E
	SW        V0, 70 (S2)
	.o160
	LW        V1, 70 (S2)
	SLTIU     V0, V1, 64
	BEQ       V0, R0, .o28C
	SLL       V0, V1, 2
	LTW       V0, V0 ($JumpTable_802445F8)
	JR        V0
	NOP
    % LBL: from $JumpTable_802445F8 , entry 0`
	COPY      A0, S2
	COPY      A1, S3
	JAL       800495A0
	COPY      A2, S4
    % LBL: from $JumpTable_802445F8 , entry 1`
	COPY      A0, S2
	COPY      A1, S3
	JAL       800496B8
	COPY      A2, S4
	BEQ       R0, R0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 2`
	COPY      A0, S2
	COPY      A1, S3
	JAL       80049B44
	COPY      A2, S4
    % LBL: from $JumpTable_802445F8 , entry 3`
	COPY      A0, S2
	COPY      A1, S3
	JAL       80049C04
	COPY      A2, S4
	BEQ       R0, R0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 10`
	COPY      A0, S2
	COPY      A1, S3
	JAL       80049E3C
	COPY      A2, S4
    % LBL: from $JumpTable_802445F8 , entry 11`
	COPY      A0, S2
	COPY      A1, S3
	JAL       80049ECC
	COPY      A2, S4
	BEQ       R0, R0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 12`
	COPY      A0, S2
	COPY      A1, S3
	JAL       80049F7C
	COPY      A2, S4
    % LBL: from $JumpTable_802445F8 , entry 13`
	COPY      A0, S2
	COPY      A1, S3
	JAL       8004A124
	COPY      A2, S4
	BEQ       R0, R0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 14`
	COPY      A0, S2
	COPY      A1, S3
	JAL       8004A3E8
	COPY      A2, S4
	BEQ       R0, R0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 30`
	JAL       $Function_80240500
	COPY      A0, S2
    % LBL: from $JumpTable_802445F8 , entry 31`
	JAL       $Function_8024056C
	COPY      A0, S2
	LW        V1, 70 (S2)
	ADDIU     V0, R0, 20
	BNE       V1, V0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 32`
	JAL       $Function_802405DC
	COPY      A0, S2
	LW        V1, 70 (S2)
	ADDIU     V0, R0, 21
	BNE       V1, V0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 33`
	JAL       $Function_802406B4
	COPY      A0, S2
	BEQ       R0, R0, .o28C
	NOP
    % LBL: from $JumpTable_802445F8 , entry 99`
	JAL       8004A73C
	COPY      A0, S2
    % LBL: from $JumpTable_802445F8 , entry 98`
	.o28C
	LW        RA, 48 (SP)
	LW        S5, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 50
}

#new:Function $Function_80240DD0
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	COPY      A0, V0
	LH        V0, 8E (A0)
	LHU       V1, 8E (A0)
	BLEZ      V0, .o3C
	ADDIU     V0, V1, FFFF
	BEQ       R0, R0, .o58
	SH        V0, 8E (A0)
	.o3C
	LW        V0, CC (S0)
	SW        R0, 6C (S0)
	LW        V0, 0 (V0)
	SW        V0, 28 (A0)
	ADDIU     V0, R0, 1
	SW        R0, 74 (S1)
	SW        V0, 70 (S1)
	.o58
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80240E3C
{
	ADDIU     SP, SP, FFB8
	SW        S3, 3C (SP)
	COPY      S3, A0
	SW        RA, 40 (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S2, 148 (S3)
	COPY      S1, A1
	LH        A0, 8 (S2)
	JAL       ~Func:get_npc_unsafe
	COPY      S0, A2
	COPY      A0, S0
	COPY      A1, S2
	SW        R0, 10 (SP)
	LW        A2, C (S1)
	LW        A3, 10 (S1)
	JAL       800490B4
	COPY      S1, V0
	BEQ       V0, R0, .oE0
	COPY      A0, S1
	ADDIU     A1, R0, 322
	JAL       800494C0
	CLEAR     A2
	CLEAR     A0
	COPY      A1, S1
	CLEAR     A2
	ADDIU     S0, R0, A
	LH        V1, A8 (S1)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	MTC1      V1, F6
	NOP
	CVT.S.W   F6, F6
	MFC1      A3, F6
	ADDIU     V0, SP, 28
	SW        S0, 1C (SP)
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	COPY      A0, S1
	ADDIU     A1, R0, 2F4
	JAL       800494C0
	LUI       A2, 20
	LW        V0, CC (S2)
	LW        V0, 20 (V0)
	SW        V0, 28 (S1)
	LHU       V0, 8E (S2)
	SH        V0, 8E (S1)
	SW        S0, 70 (S3)
	.oE0
	LW        RA, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80240F38
{
	ADDIU     SP, SP, FF80
	SW        RA, 64 (SP)
	SW        S8, 60 (SP)
	SW        S7, 5C (SP)
	SW        S6, 58 (SP)
	SW        S5, 54 (SP)
	SW        S4, 50 (SP)
	SW        S3, 4C (SP)
	SW        S2, 48 (SP)
	SW        S1, 44 (SP)
	SW        S0, 40 (SP)
	SDC1      F24, 78 (SP)
	SDC1      F22, 70 (SP)
	SDC1      F20, 68 (SP)
	SW        A0, 80 (SP)
	LW        S6, 148 (A0)
	COPY      S2, A2
	LH        A0, 8 (S6)
	JAL       ~Func:get_npc_unsafe
	CLEAR     S7
	COPY      S1, V0
	LHU       V0, 8E (S1)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (S1)
	SLL       V0, V0, 10
	LW        V1, 90 (S6)
	SRA       V0, V0, 10
	SLT       V1, V1, V0
	BNE       V1, R0, .o88
	COPY      S8, S7
	LW        V0, 0 (S6)
	LUI       V1, 1F10
	OR        V0, V0, V1
	SW        V0, 0 (S6)
	.o88
	LH        V0, 8E (S1)
	BNE       V0, R0, .oA04
	NOP
	LAW       V0, 800F7B30
	JAL       ~Func:clamp_angle
	LWC1      F12, A8 (V0)
	LIF       F2, 180.0
	NOP
	C.LT.S    F0, F2
	NOP
	BC1F      .o100
	NOP
	LAW       V1, 80077410
	LIF       F12, 90.0
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	SUBU      V0, V0, V1
	SLL       V1, V0, 3
	ADDU      V0, V0, V1
	SLL       V0, V0, 3
	LTF       F0, V0 (800B1DEC)
	BEQ       R0, R0, .o13C
	SUB.S     F12, F0, F12
	.o100
	LAW       V1, 80077410
	LIF       F12, 90.0
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	SUBU      V0, V0, V1
	SLL       V1, V0, 3
	ADDU      V0, V0, V1
	SLL       V0, V0, 3
	LTF       F0, V0 (800B1DEC)
	ADD.S     F12, F0, F12
	.o13C
	JAL       ~Func:clamp_angle
	NOP
	MOV.S     F22, F0
	LIF       F12, 180.0
	JAL       ~Func:clamp_angle
	ADD.S     F12, F22, F12
	LW        V0, 88 (S6)
	BNE       V0, R0, .o1A0
	MOV.S     F24, F0
	LAW       V0, 800F7B30
	LB        V1, B4 (V0)
	LIF       F20, 32.0
	BEQ       V1, R0, .o1D4
	ADDIU     V0, R0, 1
	LIF       F20, 100.0
	BNE       V1, V0, .o1D8
	ADDIU     S0, S1, 38
	LIF       F20, 90.0
	BEQ       R0, R0, .o1DC
	COPY      A0, S0
	.o1A0
	LAW       V0, 800F7B30
	LB        V1, B4 (V0)
	LIF       F20, 38.0
	BEQ       V1, R0, .o1D4
	ADDIU     V0, R0, 1
	LIF       F20, 90.0
	BNE       V1, V0, .o1D8
	ADDIU     S0, S1, 38
	LIF       F20, 75.0
	.o1D4
	ADDIU     S0, S1, 38
	.o1D8
	COPY      A0, S0
	.o1DC
	LIA       S5, 800F7B30
	MFC1      A3, F24
	LH        V0, A6 (S1)
	LW        V1, 0 (S5)
	MTC1      V0, F8
	NOP
	CVT.S.W   F8, F8
	LWC1      F0, 28 (V1)
	MFC1      A2, F8
	ADDIU     S3, S1, 40
	SWC1      F0, 38 (S1)
	LWC1      F0, 30 (V1)
	COPY      A1, S3
	JAL       ~Func:add_vec2D_polar
	SWC1      F0, 40 (S1)
	LH        V0, A6 (S1)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	ADD.S     F0, F20, F0
	MFC1      A2, F22
	MFC1      A1, F0
	JAL       ~Func:npc_move_heading
	COPY      A0, S1
	LW        V0, 88 (S6)
	BNE       V0, R0, .o3BC
	NOP
	LWC1      F0, 38 (S1)
	LAD       F4, $ConstDouble_80244788
	CVT.D.S   F0, F0
	C.LT.D    F4, F0
	NOP
	BC1F      .o27C
	NOP
	LIF       F0, 380.0
	NOP
	SWC1      F0, 38 (S1)
	.o27C
	LWC1      F0, 38 (S1)
	LAD       F2, $ConstDouble_80244790
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1F      .o2AC
	NOP
	LIF       F0, -380.0
	NOP
	SWC1      F0, 38 (S1)
	.o2AC
	LWC1      F0, 40 (S1)
	CVT.D.S   F0, F0
	C.LT.D    F4, F0
	NOP
	BC1F      .o2D4
	NOP
	LIF       F0, 380.0
	NOP
	SWC1      F0, 40 (S1)
	.o2D4
	LWC1      F0, 40 (S1)
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1F      .o2FC
	NOP
	LIF       F0, -380.0
	NOP
	SWC1      F0, 40 (S1)
	.o2FC
	LWC1      F2, 38 (S1)
	MUL.S     F2, F2, F2
	NOP
	LWC1      F0, 40 (S1)
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F12, F2, F0
	SQRT.S    F0, F12
	C.EQ.S    F0, F0
	NOP
	BC1T      .o334
	NOP
	JAL       ~Func:sqrtf
	NOP
	.o334
	LW        A2, 38 (S1)
	LW        A3, 40 (S1)
	MTC1      R0, F20
	SWC1      F0, 38 (SP)
	MOV.S     F12, F20
	JAL       ~Func:atan2
	MOV.S     F14, F20
	MOV.S     F22, F0
	LWC1      F2, 38 (SP)
	LAD       F0, $ConstDouble_80244798
	CVT.D.S   F2, F2
	C.LT.D    F2, F0
	NOP
	BC1F      .o380
	COPY      A0, S0
	LIO       A2, 43988000
	BEQ       R0, R0, .o3A0
	RESERVED
	.o380
	LAD       F0, $ConstDouble_802447A0
	C.LT.D    F0, F2
	NOP
	BC1F      .o77C
	NOP
	LIO       A2, 43BB8000
	.o3A0
	MFC1      A3, F22
	COPY      A1, S3
	SWC1      F20, 38 (S1)
	JAL       ~Func:add_vec2D_polar
	SWC1      F20, 40 (S1)
	BEQ       R0, R0, .o77C
	NOP
	.o3BC
	LW        V0, 0 (S1)
	ANDI      V0, V0, 40
	BNE       V0, R0, .o688
	ADDIU     A1, SP, 20
	ADDIU     S4, SP, 20
	COPY      A1, S4
	ADDIU     S3, SP, 24
	LW        V0, 0 (S5)
	LIF       F3, 2.78125
	MTC1      R0, F2
	LWC1      F0, 2C (V0)
	LWC1      F6, 28 (V0)
	LWC1      F4, 30 (V0)
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F2
	SWC1      F6, 20 (SP)
	SWC1      F4, 28 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 24 (SP)
	SWC1      F20, 10 (SP)
	SWC1      F22, 14 (SP)
	LH        V0, A8 (S1)
	COPY      A2, S3
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S1)
	ADDIU     S0, SP, 28
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S1)
	JAL       800DDC44
	COPY      A3, S0
	BEQ       V0, R0, .o77C
	COPY      A1, S4
	LW        V0, 0 (S5)
	LAD       F2, $ConstDouble_802447A8
	LWC1      F0, 2C (V0)
	LWC1      F6, 28 (V0)
	LWC1      F4, 30 (V0)
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F2
	SWC1      F6, 20 (SP)
	SWC1      F4, 28 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 24 (SP)
	SWC1      F20, 10 (SP)
	SWC1      F22, 14 (SP)
	LH        V0, A8 (S1)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S1)
	COPY      A2, S3
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S1)
	JAL       800DDC44
	COPY      A3, S0
	ADDIU     A1, SP, 2C
	ADDIU     A2, SP, 30
	ADDIU     A3, SP, 34
	ADDIU     V1, SP, 38
	LWC1      F2, 38 (S1)
	LWC1      F0, 3C (S1)
	LIF       F6, 200.0
	CVT.D.S   F0, F0
	SWC1      F2, 2C (SP)
	LIF       F3, 3.390625
	MTC1      R0, F2
	LWC1      F4, 40 (S1)
	ADD.D     F0, F0, F2
	SWC1      F6, 38 (SP)
	SWC1      F4, 34 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 30 (SP)
	SW        V1, 10 (SP)
	LW        A0, 80 (S1)
	JAL       800DCB7C
	COPY      S0, V0
	BNE       S0, R0, .o598
	NOP
	BEQ       V0, R0, .o598
	NOP
	LWC1      F2, 38 (SP)
	LIF       F1, 3.3125
	MTC1      R0, F0
	CVT.D.S   F2, F2
	C.LT.D    F0, F2
	NOP
	BC1F      .o598
	NOP
	LIF       F1, 3.46875
	MTC1      R0, F0
	NOP
	C.LT.D    F2, F0
	NOP
	BC1F      .o598
	NOP
	LWC1      F2, 3C (S1)
	LWC1      F0, 30 (SP)
	C.EQ.S    F2, F0
	NOP
	BC1T      .o598
	NOP
	BEQ       R0, R0, .o77C
	ADDIU     S8, R0, 1
	.o598
	LIA       S0, 800F7B30
	LW        V0, 0 (S0)
	LIF       F3, 2.5625
	MTC1      R0, F2
	LWC1      F0, 2C (V0)
	LWC1      F6, 28 (V0)
	LWC1      F4, 30 (V0)
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F2
	SWC1      F6, 20 (SP)
	SWC1      F4, 28 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 24 (SP)
	SWC1      F20, 10 (SP)
	SWC1      F22, 14 (SP)
	LH        V0, A8 (S1)
	ADDIU     A1, SP, 20
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S1)
	ADDIU     A2, SP, 24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S1)
	JAL       800DDC44
	ADDIU     A3, SP, 28
	LW        A2, 20 (SP)
	LW        V0, 0 (S0)
	LW        A3, 28 (SP)
	LWC1      F12, 28 (V0)
	LWC1      F14, 30 (V0)
	JAL       ~Func:dist2D
	ADDIU     S7, R0, 1
	MOV.S     F20, F0
	LW        V1, 0 (S0)
	LH        V0, A6 (S1)
	MFC1      A3, F24
	MTC1      V0, F8
	NOP
	CVT.S.W   F8, F8
	LWC1      F0, 28 (V1)
	MFC1      A2, F8
	ADDIU     A0, S1, 38
	SWC1      F0, 38 (S1)
	LWC1      F0, 30 (V1)
	ADDIU     A1, S1, 40
	JAL       ~Func:add_vec2D_polar
	SWC1      F0, 40 (S1)
	LH        V0, A6 (S1)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	BEQ       R0, R0, .o76C
	ADD.S     F20, F20, F0
	.o688
	LW        V0, 0 (S5)
	LIF       F3, 2.78125
	MTC1      R0, F2
	LWC1      F0, 2C (V0)
	LWC1      F6, 28 (V0)
	LWC1      F4, 30 (V0)
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F2
	SWC1      F6, 20 (SP)
	SWC1      F4, 28 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 24 (SP)
	SWC1      F20, 10 (SP)
	SWC1      F22, 14 (SP)
	LH        V0, A8 (S1)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S1)
	ADDIU     A2, SP, 24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S1)
	JAL       800DDC44
	ADDIU     A3, SP, 28
	BEQ       V0, R0, .o77C
	NOP
	LW        A2, 20 (SP)
	LW        V0, 0 (S5)
	LW        A3, 28 (SP)
	LWC1      F12, 28 (V0)
	JAL       ~Func:dist2D
	LWC1      F14, 30 (V0)
	MOV.S     F20, F0
	LW        V1, 0 (S5)
	LH        V0, A6 (S1)
	MFC1      A3, F24
	MTC1      V0, F8
	NOP
	CVT.S.W   F8, F8
	LWC1      F0, 28 (V1)
	MFC1      A2, F8
	COPY      A0, S0
	SWC1      F0, 38 (S1)
	LWC1      F0, 30 (V1)
	COPY      A1, S3
	JAL       ~Func:add_vec2D_polar
	SWC1      F0, 40 (S1)
	LH        V0, A6 (S1)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	ADD.S     F20, F20, F0
	.o76C
	MFC1      A2, F22
	MFC1      A1, F20
	JAL       ~Func:npc_move_heading
	COPY      A0, S1
	.o77C
	LWC1      F0, 8 (S2)
	CVT.S.W   F0, F0
	MFC1      A1, F0
	LWC1      F0, C (S2)
	CVT.S.W   F0, F0
	MFC1      A2, F0
	LWC1      F0, 40 (S1)
	ADDIU     S0, S1, 38
	SWC1      F0, 10 (SP)
	LWC1      F0, 10 (S2)
	CVT.S.W   F0, F0
	SWC1      F0, 14 (SP)
	LWC1      F0, 14 (S2)
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LW        A0, 4 (S2)
	LW        A3, 38 (S1)
	JAL       ~Func:is_point_within_region
	ADDIU     S3, S1, 40
	BEQ       V0, R0, .o934
	NOP
	LW        V1, 4 (S2)
	BEQ       V1, R0, .o7EC
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o884
	NOP
	BEQ       R0, R0, .o934
	NOP
	.o7EC
	LWC1      F8, 8 (S2)
	CVT.S.W   F8, F8
	MFC1      A2, F8
	LWC1      F8, C (S2)
	CVT.S.W   F8, F8
	LWC1      F12, 38 (S1)
	LWC1      F14, 40 (S1)
	MFC1      A3, F8
	JAL       ~Func:dist2D
	NOP
	LWC1      F2, 10 (S2)
	CVT.S.W   F2, F2
	C.LT.S    F2, F0
	NOP
	BC1F      .o934
	SWC1      F0, 38 (SP)
	LWC1      F12, 8 (S2)
	CVT.S.W   F12, F12
	LW        A2, 38 (S1)
	LW        A3, 40 (S1)
	LWC1      F14, C (S2)
	JAL       ~Func:atan2
	CVT.S.W   F14, F14
	COPY      A0, S0
	MFC1      A3, F0
	LWC1      F0, 8 (S2)
	CVT.S.W   F0, F0
	SWC1      F0, 38 (S1)
	LWC1      F0, C (S2)
	CVT.S.W   F0, F0
	SWC1      F0, 40 (S1)
	LWC1      F8, 10 (S2)
	CVT.S.W   F8, F8
	MFC1      A2, F8
	JAL       ~Func:add_vec2D_polar
	COPY      A1, S3
	BEQ       R0, R0, .o934
	NOP
	.o884
	LW        V0, 8 (S2)
	LW        V1, 10 (S2)
	LWC1      F0, 38 (S1)
	ADDU      V0, V0, V1
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	C.LT.S    F2, F0
	NOP
	BC1TL     .o8B0
	SWC1      F2, 38 (S1)
	.o8B0
	LW        V0, 8 (S2)
	LW        V1, 10 (S2)
	LWC1      F0, 38 (S1)
	SUBU      V0, V0, V1
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	C.LT.S    F0, F2
	NOP
	BC1TL     .o8DC
	SWC1      F2, 38 (S1)
	.o8DC
	LW        V0, C (S2)
	LW        V1, 14 (S2)
	LWC1      F0, 40 (S1)
	ADDU      V0, V0, V1
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	C.LT.S    F2, F0
	NOP
	BC1TL     .o908
	SWC1      F2, 40 (S1)
	.o908
	LW        V0, C (S2)
	LW        V1, 14 (S2)
	LWC1      F0, 40 (S1)
	SUBU      V0, V0, V1
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	C.LT.S    F0, F2
	NOP
	BC1TL     .o934
	SWC1      F2, 40 (S1)
	.o934
	BNE       S7, R0, .o9B4
	NOP
	LW        V0, 0 (S1)
	ANDI      V0, V0, 8
	BEQ       V0, R0, .o954
	ADDIU     A1, SP, 20
	BEQ       S8, R0, .o9B4
	NOP
	.o954
	ADDIU     A2, SP, 24
	ADDIU     V0, SP, 38
	LWC1      F2, 38 (S1)
	LWC1      F0, 3C (S1)
	LIF       F6, 400.0
	CVT.D.S   F0, F0
	SWC1      F2, 20 (SP)
	LAD       F2, $ConstDouble_802447B0
	LWC1      F4, 40 (S1)
	ADD.D     F0, F0, F2
	SWC1      F6, 38 (SP)
	SWC1      F4, 28 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 24 (SP)
	SW        V0, 10 (SP)
	LW        A0, 80 (S1)
	JAL       800DCB7C
	ADDIU     A3, SP, 28
	BEQ       V0, R0, .o9B4
	NOP
	LWC1      F0, 24 (SP)
	SWC1      F0, 3C (S1)
	.o9B4
	LWC1      F12, 38 (S1)
	LAW       V0, 800F7B30
	LWC1      F14, 40 (S1)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	COPY      A0, S1
	ADDIU     A1, R0, 321
	CLEAR     A2
	JAL       800494C0
	SWC1      F0, C (S1)
	LW        V0, CC (S6)
	LW        V0, 24 (V0)
	SW        V0, 28 (S1)
	LHU       V0, 96 (S6)
	SH        V0, 8E (S1)
	LW        T0, 80 (SP)
	ADDIU     V0, R0, B
	SW        V0, 70 (T0)
	.oA04
	LW        RA, 64 (SP)
	LW        S8, 60 (SP)
	LW        S7, 5C (SP)
	LW        S6, 58 (SP)
	LW        S5, 54 (SP)
	LW        S4, 50 (SP)
	LW        S3, 4C (SP)
	LW        S2, 48 (SP)
	LW        S1, 44 (SP)
	LW        S0, 40 (SP)
	LDC1      F24, 78 (SP)
	LDC1      F22, 70 (SP)
	LDC1      F20, 68 (SP)
	JR        RA
	ADDIU     SP, SP, 80
}

#new:Function $Function_80241978
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	COPY      A0, V0
	LHU       V0, 8E (A0)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (A0)
	SLL       V0, V0, 10
	LW        V1, 98 (S0)
	SRA       V0, V0, 10
	SLT       V1, V1, V0
	BNE       V1, R0, .o58
	LUI       V1, E0EF
	LW        V0, 0 (S0)
	ORI       V1, V1, FFFF
	AND       V0, V0, V1
	SW        V0, 0 (S0)
	.o58
	LH        V0, 8E (A0)
	BNE       V0, R0, .o7C
	NOP
	LW        V0, CC (S0)
	LW        V0, 28 (V0)
	SH        R0, 8E (A0)
	SW        V0, 28 (A0)
	ADDIU     V0, R0, C
	SW        V0, 70 (S1)
	.o7C
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80241A08
{
	ADDIU     SP, SP, FFC0
	SW        S1, 34 (SP)
	COPY      S1, A0
	SW        RA, 38 (SP)
	SW        S0, 30 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	COPY      A1, V0
	LHU       V0, 8E (A1)
	ADDIU     V0, V0, 1
	SH        V0, 8E (A1)
	SLL       V0, V0, 10
	LW        V1, A0 (S0)
	SRA       V0, V0, 10
	BNE       V0, V1, .o50
	NOP
	LW        V0, CC (S0)
	LW        V0, 2C (V0)
	SW        V0, 28 (A1)
	.o50
	LH        V1, 8E (A1)
	LW        V0, A4 (S0)
	BNE       V1, V0, .o64
	ADDIU     V0, R0, 3
	SW        V0, 6C (S0)
	.o64
	LH        V0, 8E (A1)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BNE       V0, R0, .oEC
	ADDIU     V0, R0, 4
	SW        V0, 6C (S0)
	ADDIU     V0, R0, 8
	ADDIU     A0, R0, 3
	SH        V0, 8E (A1)
	LW        V0, CC (S0)
	LH        V1, A8 (A1)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	MTC1      V1, F6
	NOP
	CVT.S.W   F6, F6
	LW        V0, 0 (V0)
	MFC1      A3, F6
	CLEAR     A2
	SW        V0, 28 (A1)
	ADDIU     V0, R0, A
	SW        V0, 1C (SP)
	ADDIU     V0, SP, 28
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	SWC1      F4, 18 (SP)
	JAL       ~Func:fx_emote
	SW        V0, 20 (SP)
	ADDIU     V0, R0, D
	SW        V0, 70 (S1)
	.oEC
	LW        RA, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 40
}

#new:Function $Function_80241B08
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, 148 (S1)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (S0)
	COPY      V1, V0
	LHU       V0, 8E (V1)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (V1)
	SLL       V0, V0, 10
	BNE       V0, R0, .o4C
	NOP
	LHU       V0, AA (S0)
	SH        V0, 8E (V1)
	ADDIU     V0, R0, E
	SW        V0, 70 (S1)
	.o4C
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_80241B68
{
	ADDIU     SP, SP, FFB8
	SW        S4, 40 (SP)
	COPY      S4, A0
	SW        RA, 44 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S1, 148 (S4)
	COPY      S2, A1
	LH        A0, 8 (S1)
	JAL       ~Func:get_npc_unsafe
	COPY      S3, A2
	COPY      S0, V0
	LHU       V0, 8E (S0)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (S0)
	SLL       V0, V0, 10
	BNE       V0, R0, .oCC
	COPY      A0, S3
	SW        R0, 10 (SP)
	LW        A2, C (S2)
	LW        A3, 10 (S2)
	JAL       800490B4
	COPY      A1, S1
	BNEL      V0, R0, .oC8
	SH        R0, 8E (S0)
	ADDIU     A0, R0, 2
	COPY      A1, S0
	CLEAR     A2
	LH        V1, A8 (S0)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	ADDIU     V0, R0, F
	SW        V0, 1C (SP)
	MTC1      V1, F6
	NOP
	CVT.S.W   F6, F6
	MFC1      A3, F6
	ADDIU     V0, SP, 28
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	SH        R0, 8E (S0)
	.oC8
	SW        R0, 70 (S4)
	.oCC
	LW        RA, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_80241C54
{
	ADDIU     SP, SP, FFB0
	SW        S2, 38 (SP)
	COPY      S2, A0
	SW        RA, 48 (SP)
	SW        S5, 44 (SP)
	SW        S4, 40 (SP)
	SW        S3, 3C (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S1, 148 (S2)
	LH        A0, 8 (S1)
	JAL       ~Func:get_npc_unsafe
	COPY      S0, A1
	LW        V1, C (S2)
	COPY      A0, S2
	LW        A1, 0 (V1)
	JAL       ~Func:get_variable
	COPY      S5, V0
	SW        R0, 10 (SP)
	LW        V1, D0 (S1)
	LW        V1, 30 (V1)
	SW        V1, 14 (SP)
	LW        V1, D0 (S1)
	LW        V1, 1C (V1)
	SW        V1, 18 (SP)
	LW        V1, D0 (S1)
	LW        V1, 24 (V1)
	SW        V1, 1C (SP)
	LW        V1, D0 (S1)
	LW        V1, 28 (V1)
	ADDIU     S4, SP, 10
	SW        V1, 20 (SP)
	LW        V1, D0 (S1)
	LIF       F0, 200.0
	LW        V1, 2C (V1)
	COPY      S3, V0
	SWC1      F0, 28 (SP)
	SH        R0, 2C (SP)
	BNE       S0, R0, .oB4
	SW        V1, 24 (SP)
	LW        V0, B0 (S1)
	ANDI      V0, V0, 4
	BEQ       V0, R0, .oF4
	NOP
	.oB4
	SW        R0, 70 (S2)
	SH        R0, 8E (S5)
	LW        V0, CC (S1)
	LW        V0, 0 (V0)
	SW        V0, 28 (S5)
	LW        V0, B0 (S1)
	ANDI      V0, V0, 4
	BEQ       V0, R0, .oF4
	SW        R0, 6C (S1)
	ADDIU     V0, R0, 63
	SW        V0, 70 (S2)
	SW        R0, 74 (S2)
	LW        V0, B0 (S1)
	ADDIU     V1, R0, FFFB
	AND       V0, V0, V1
	SW        V0, B0 (S1)
	.oF4
	LW        V1, 70 (S2)
	ADDIU     S0, R0, B
	BEQ       V1, S0, .o1A8
	SLTI      V0, V1, C
	BEQ       V0, R0, .o13C
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o178
	SLTI      V0, V1, 2
	BEQ       V0, R0, .o12C
	ADDIU     V0, R0, A
	BEQ       V1, R0, .o16C
	COPY      A0, S2
	BEQ       R0, R0, .o228
	NOP
	.o12C
	BEQ       V1, V0, .o190
	COPY      A0, S2
	BEQ       R0, R0, .o228
	NOP
	.o13C
	ADDIU     V0, R0, D
	BEQ       V1, V0, .o1E8
	SLT       V0, V1, V0
	BNE       V0, R0, .o1CC
	COPY      A0, S2
	ADDIU     V0, R0, E
	BEQ       V1, V0, .o20C
	ADDIU     V0, R0, 63
	BEQ       V1, V0, .o220
	NOP
	BEQ       R0, R0, .o228
	NOP
	.o16C
	COPY      A1, S3
	JAL       $Function_80240DD0
	COPY      A2, S4
	.o178
	COPY      A0, S2
	COPY      A1, S3
	JAL       $Function_80240E3C
	COPY      A2, S4
	BEQ       R0, R0, .o228
	NOP
	.o190
	COPY      A1, S3
	JAL       $Function_80240F38
	COPY      A2, S4
	LW        V0, 70 (S2)
	BNE       V0, S0, .o228
	NOP
	.o1A8
	COPY      A0, S2
	COPY      A1, S3
	JAL       $Function_80241978
	COPY      A2, S4
	LW        V1, 70 (S2)
	ADDIU     V0, R0, C
	BNE       V1, V0, .o228
	NOP
	COPY      A0, S2
	.o1CC
	COPY      A1, S3
	JAL       $Function_80241A08
	COPY      A2, S4
	LW        V1, 70 (S2)
	ADDIU     V0, R0, D
	BNE       V1, V0, .o228
	NOP
	.o1E8
	COPY      A0, S2
	COPY      A1, S3
	JAL       $Function_80241B08
	COPY      A2, S4
	LW        V1, 70 (S2)
	ADDIU     V0, R0, E
	BNE       V1, V0, .o228
	NOP
	COPY      A0, S2
	.o20C
	COPY      A1, S3
	JAL       $Function_80241B68
	COPY      A2, S4
	BEQ       R0, R0, .o228
	NOP
	.o220
	JAL       8004A73C
	COPY      A0, S2
	.o228
	LW        RA, 48 (SP)
	LW        S5, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 50
}

PADDING: 80241EA4 to 80241EB0 (00001EA4 to 00001EB0)
00000000 00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 %    0.0    0.0 -530.0  180.0
    ~Vec4f:Entry1 % -530.0    0.0    0.0   90.0
    ~Vec4f:Entry2 %    0.0    0.0  530.0    0.0
    ~Vec4f:Entry3 %  530.0    0.0    0.0  270.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main_EnterWalk
    [EntryList]   $EntryList
    [EntryCount]  00000004
    [Background]  80200000
    [MapTattle]   001900A7
}

#new:Script $Script_80241F30
{
    Call  SetMusicTrack     ( 00000000 .Song:ForeverForest 00000000 00000008 )
    Call  PlayAmbientSounds ( .AmbientSounds:Spooky )
    Return
    End
}

PADDING: 80241F6C to 80241F70 (00001F6C to 00001F70)
00000000

#new:Script $Script_ExitWalk_80241F70
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_802445D0 00000001 ) % mim_01
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80241FCC
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_802445D8 00000001 ) % mim_10
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80242028
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry2 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_802445D0 00000001 ) % mim_01
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80242084
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry3 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_802445E0 00000001 ) % mim_02
    Wait  100`
    Return
    End
}

#new:Script $Script_802420E0
{
    Bind  $Script_ExitWalk_80241F70 .Trigger:FloorAbove ~Collider:deilin 00000001 00000000
    Bind  $Script_ExitWalk_80241FCC .Trigger:FloorAbove ~Collider:deiliw 00000001 00000000
    Bind  $Script_ExitWalk_80242028 .Trigger:FloorAbove ~Collider:deilis 00000001 00000000
    Bind  $Script_ExitWalk_80242084 .Trigger:FloorAbove ~Collider:deilie 00000001 00000000
    Return
    End
}

#new:Script_Main $Script_Main_EnterWalk
{
    Set   *WorldMapLocation  .Location:ForeverForest
    Call  SetSpriteShading  ( 00070000 )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 0000028A )
    Call  SetCamBGColor ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled ( .Cam:Default .True )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Set   *Flag_MAP_0D  .True
    Set   *AreaByte[2]  *Byte_MIM_00
    Call  GetMapID      ( *Byte_MIM_00 )
    ExecWait  $Script_80243CD8
    Call  MakeNpcs      ( 00000001 $NpcGroupList_802445B4 )
    ExecWait  $Script_MakeEntities
    ExecWait  $Script_80242C40
    Set   *Var[0]  $Script_802420E0
    Exec  EnterWalk
    Wait  1`
    Call  $Function_80240000 ( )
    Exec  $Script_80241F30
    Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
    Return
    End
}

#new:Script $Script_802422B0
{
    Call  800441F0  ( *Var[0] )
    If  *Var[0]  ==  00000001
        Return
    EndIf
    SetGroup  00000000
    Call  802D5830  ( 00000001 )
    Call  DisablePlayerInput    ( .True )
    Call  ShowMessageAtScreenPos    ( 001D017E 000000A0 00000028 ) %  Forever Forest  Toad Town
    Call  DisablePlayerInput    ( .False )
    Call  802D5830  ( 00000000 )
    Return
    End
}

#new:Script $Script_MakeEntities
{
    Call  MakeEntity    ( .Entity:Signpost ~Vec4d:Entity80242354 80000000 )
    Call  AssignScript  ( $Script_802422B0 )
    Return
    End
}

PADDING: 80242398 to 802423A0 (00002398 to 000023A0)
00000000 00000000

#new:Script $Script_802423A0
{
    Call  PlaySoundAt   ( 000000DF 00000000 0000012D 00000000 FFFFFFE5 )
    Loop  00000006
        Set   *Var[0]  00000002
        Call  TranslateModel    ( ~Model:ea_1 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:ea_2 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:eb_1 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:eb_2 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:ec_1 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:ec_2 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:atari_kusa 00000000 00000000 *Var[0] )
        Wait  1`
        Set   *Var[0]  FFFFFFFE
        Call  TranslateModel    ( ~Model:ea_1 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:ea_2 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:eb_1 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:eb_2 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:ec_1 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:ec_2 00000000 00000000 *Var[0] )
        Call  TranslateModel    ( ~Model:atari_kusa 00000000 00000000 *Var[0] )
        Wait  1`
    EndLoop
    Call  TranslateModel    ( ~Model:ea_1 00000000 00000000 00000000 )
    Call  TranslateModel    ( ~Model:ea_2 00000000 00000000 00000000 )
    Call  TranslateModel    ( ~Model:eb_1 00000000 00000000 00000000 )
    Call  TranslateModel    ( ~Model:eb_2 00000000 00000000 00000000 )
    Call  TranslateModel    ( ~Model:ec_1 00000000 00000000 00000000 )
    Call  TranslateModel    ( ~Model:ec_2 00000000 00000000 00000000 )
    Call  TranslateModel    ( ~Model:atari_kusa 00000000 00000000 00000000 )
    Wait  20`
    Call  SetTexPanOffset   ( 00000001 00000000 00000000 FFFF8000 )
    Wait  2`
    Call  SetTexPanOffset   ( 00000001 00000000 00000000 FFFF0000 )
    Wait  2`
    Call  PlaySoundAt       ( 0000205B 00000000 0000012D 00000000 FFFFFFE5 )
    Call  MakeLerp  ( 00000000 0000001E 00000032 .Easing:CosInOut )
    Label  A
    Call  UpdateLerp ( )
    Call  $Function_802403F0    ( 0000003D *Var[7] *Var[8] *Var[9] )
    Call  RotateModel       ( ~Model:ea_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel       ( ~Model:ea_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  $Function_802403F0    ( 00000040 *Var[7] *Var[8] *Var[9] )
    Call  RotateModel       ( ~Model:eb_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel       ( ~Model:eb_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  $Function_802403F0    ( 00000043 *Var[7] *Var[8] *Var[9] )
    Call  RotateModel       ( ~Model:ec_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel       ( ~Model:ec_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  A
    EndIf
    Call  PlaySoundAt   ( 0000205B 00000000 0000012D 00000000 FFFFFFE5 )
    Call  MakeLerp      ( 0000001E FFFFFFE2 00000032 .Easing:CosInOut )
    Label  14
    Call  UpdateLerp ( )
    Call  $Function_802403F0    ( 0000003D *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ea_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ea_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  $Function_802403F0    ( 00000040 *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:eb_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:eb_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  $Function_802403F0    ( 00000043 *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ec_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ec_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  14
    EndIf
    Call  PlaySoundAt   ( 0000205B 00000000 0000012D 00000000 FFFFFFE5 )
    Call  MakeLerp      ( FFFFFFE2 00000000 00000032 .Easing:CosInOut )
    Label  1E
    Call  UpdateLerp ( )
    Call  $Function_802403F0    ( 0000003D *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ea_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ea_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  $Function_802403F0    ( 00000040 *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:eb_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:eb_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  $Function_802403F0    ( 00000043 *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ec_1 *Var[0] *Var[7] *Var[8] *Var[9] )
    Call  RotateModel   ( ~Model:ec_2 *Var[0] *Var[7] *Var[8] *Var[9] )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  1E
    EndIf
    Call  SetTexPanOffset   ( 00000001 00000000 00000000 FFFF8000 )
    Wait  2`
    Call  SetTexPanOffset   ( 00000001 00000000 00000000 00000000 )
    Wait  30`
    Return
    End
}

#new:Script $Script_80242BDC
{
    Label  0
    Call  AwaitPlayerApproach   ( 0000015E 00000000 00000032 )
    ExecWait  $Script_802423A0
    Call  AwaitPlayerLeave      ( 0000015E 00000000 00000032 )
    Goto  0
    Return
    End
}

#new:Script $Script_80242C40
{
    Call  SetTexPanner  ( ~Model:ea_2 00000001 )
    Call  SetTexPanner  ( ~Model:eb_2 00000001 )
    Call  SetTexPanner  ( ~Model:ec_2 00000001 )
    Exec  $Script_80242BDC
    Return
    End
}

PADDING: 80242C98 to 80242CA0 (00002C98 to 00002CA0)
00000000 00000000

#new:Script $Script_80242CA0
{
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetZoneEnabled    ( ~Zone:north .True )
            Call  SetZoneEnabled    ( ~Zone:west .True )
            Call  SetZoneEnabled    ( ~Zone:south .True )
            Call  SetZoneEnabled    ( ~Zone:east .True )
            Call  SetZoneEnabled    ( ~Zone:higashi .False )
            Call  SetZoneEnabled    ( ~Zone:nishi .False )
            Call  SetZoneEnabled    ( ~Zone:minami .False )
            Call  SetZoneEnabled    ( ~Zone:kita .False )
            Call  SetZoneEnabled    ( ~Zone:stage .False )
            Set   *Var[1]  00000000
        Case  ==  00000001
            Call  SetZoneEnabled    ( ~Zone:north .False )
            Call  SetZoneEnabled    ( ~Zone:west .False )
            Call  SetZoneEnabled    ( ~Zone:south .False )
            Call  SetZoneEnabled    ( ~Zone:east .False )
            Call  SetZoneEnabled    ( ~Zone:higashi .False )
            Call  SetZoneEnabled    ( ~Zone:nishi .False )
            Call  SetZoneEnabled    ( ~Zone:minami .False )
            Call  SetZoneEnabled    ( ~Zone:kita .False )
            Call  SetZoneEnabled    ( ~Zone:stage .True )
            Set   *Var[1]  00000001
        Case  ==  00000002
            Call  SetZoneEnabled    ( ~Zone:north .False )
            Call  SetZoneEnabled    ( ~Zone:west .True )
            Call  SetZoneEnabled    ( ~Zone:south .False )
            Call  SetZoneEnabled    ( ~Zone:east .False )
            Call  SetZoneEnabled    ( ~Zone:higashi .True )
            Call  SetZoneEnabled    ( ~Zone:nishi .False )
            Call  SetZoneEnabled    ( ~Zone:minami .True )
            Call  SetZoneEnabled    ( ~Zone:kita .True )
            Call  SetZoneEnabled    ( ~Zone:stage .False )
            Set   *Var[1]  00000002
    EndSwitch
    Return
    End
}

#new:Script $Script_80242F34
{
    Call  ParentColliderToModel ( ~Collider:monn ~Model:n1 )
    Call  RotateGroup   ( ~Model:monn *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monn )
    Call  ParentColliderToModel ( ~Collider:mons ~Model:s1 )
    Call  RotateGroup   ( ~Model:mons *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mons )
    Call  ParentColliderToModel ( ~Collider:mone ~Model:e1 )
    Call  RotateGroup   ( ~Model:mone *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mone )
    Call  ParentColliderToModel ( ~Collider:monw ~Model:w1 )
    Call  RotateGroup   ( ~Model:monw 0000000A 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monw )
    Return
    End
}

#new:Script $Script_80243054
{
    Call  RotateGroup   ( ~Model:monn 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monn )
    Call  RotateGroup   ( ~Model:mons 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mons )
    Call  RotateGroup   ( ~Model:mone 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mone )
    Call  RotateGroup   ( ~Model:monw 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monw )
    Return
    End
}

#new:Script $Script_80243124
{
    Call  PlaySoundAtCollider   ( *Var[9] 000001D4 00000000 )
    Wait  19`
    Call  PlaySoundAtCollider   ( *Var[9] 000001D5 00000000 )
    Return
    End
}

#new:Script $Script_80243170
{
    Exec  $Script_80243124
    Switch  *AreaByte[1]
        Case  ==  00000000
            Thread
                Call  MakeLerp  ( 0000000A 0000005A 0000000A .Easing:QuadraticIn )
                Label  A
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  A
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  *Var[7]
                Add   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000001
            Exec  $Script_80242CA0
            Call  MakeLerp  ( 0000005A 00000168 0000001E .Easing:Linear )
            Label  14
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  14
            EndIf
            Exec  $Script_80243054
            Set   *AreaByte[1]  00000001
            Set   *Flag_MIM_00  .True
        Case  ==  00000001
            Thread
                Call  MakeLerp  ( 00000168 0000010E 0000000A .Easing:QuadraticIn )
                Label  1E
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  1E
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  *Var[7]
                Sub   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000002
            Exec  $Script_80242CA0
            Call  MakeLerp  ( 0000010E FFFFFFF6 0000001E .Easing:Linear )
            Label  28
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  28
            EndIf
            Set   *AreaByte[1]  00000002
        Case  ==  00000002
            Thread
                Call  MakeLerp  ( FFFFFFF6 0000005A 0000000A .Easing:QuadraticIn )
                Label  32
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  32
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  *Var[7]
                Add   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000001
            Exec  $Script_80242CA0
            Call  MakeLerp  ( 0000005A 00000168 0000001E .Easing:Linear )
            Label  3C
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  3C
            EndIf
            Exec  $Script_80243054
            Set   *AreaByte[1]  00000001
    EndSwitch
    Return
    End
}

#new:Script $Script_8024375C
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000000
    Set   *Var[8]  00000046
    Set   *Var[9]  0000001A
    Set   *Var[A]  0000009B
    ExecWait  $Script_80243170
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_802437D8
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000000
    Set   *Var[8]  FFFFFFBA
    Set   *Var[9]  0000001E
    Set   *Var[A]  000000A1
    ExecWait  $Script_80243170
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80243854
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  FFFFFFBA
    Set   *Var[8]  00000000
    Set   *Var[9]  0000001C
    Set   *Var[A]  0000009E
    ExecWait  $Script_80243170
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_802438D0
{
    Set   *Var[9]  00000020
    Exec  $Script_80243124
    Call  DisablePlayerInput    ( .True )
    If  *AreaByte[1]  !=  00000001
        Thread
            Call  MakeLerp  ( 0000000A 0000005A 0000000A .Easing:QuadraticIn )
            Label  A
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:monw *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( ~Collider:monw )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  A
            EndIf
        EndThread
        Wait  15`
        Thread
            Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
            Add   *Var[0]  00000046
            Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
        EndThread
        Set   *Var[1]  00000001
        Exec  $Script_80242CA0
        Call  MakeLerp  ( 0000005A 00000168 0000001E .Easing:Linear )
        Label  14
        Call  UpdateLerp ( )
        Call  RotateGroup   ( ~Model:monw *Var[0] 00000000 00000001 00000000 )
        Call  UpdateColliderTransform   ( ~Collider:monw )
        Wait  1`
        If  *Var[1]  ==  00000001
            Goto  14
        EndIf
        Exec  $Script_80243054
        Set   *AreaByte[1]  00000001
        Set   *Flag_MIM_00  .True
    Else
        Thread
            Call  MakeLerp  ( 00000168 0000010E 0000000A .Easing:QuadraticIn )
            Label  1E
            Call  UpdateLerp ( )
            Call  RotateGroup   ( ~Model:monw *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( ~Collider:monw )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  1E
            EndIf
        EndThread
        Wait  15`
        Thread
            Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
            Sub   *Var[0]  00000046
            Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
        EndThread
        Set   *Var[1]  00000002
        Exec  $Script_80242CA0
        Call  MakeLerp  ( 0000010E 0000000A 0000001E .Easing:Linear )
        Label  28
        Call  UpdateLerp ( )
        Call  RotateGroup   ( ~Model:monw *Var[0] 00000000 00000001 00000000 )
        Call  UpdateColliderTransform   ( ~Collider:monw )
        Wait  1`
        If  *Var[1]  ==  00000001
            Goto  28
        EndIf
        Set   *AreaByte[1]  00000000
    EndIf
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80243CD8
{
    If  *Flag_MIM_00  ==  .False
        Set   *Flag_MIM_00  .True
        Set   *AreaByte[1]  00000002
        Set   *Var[1]  00000002
        Set   *Var[2]  FFFFFFF6
    Else
        Set   *Flag_MIM_00  .False
        Set   *AreaByte[1]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  0000000A
    EndIf
    ExecWait  $Script_80242CA0
    Exec  $Script_80242F34
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  1`
    Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
    Bind  $Script_8024375C .Trigger:WallPressA ~Collider:monn 00000001 00000000
    Bind  $Script_802437D8 .Trigger:WallPressA ~Collider:mons 00000001 00000000
    Bind  $Script_802438D0 .Trigger:WallPressA ~Collider:monw 00000001 00000000
    Bind  $Script_80243854 .Trigger:WallPressA ~Collider:mone 00000001 00000000
    Return
    End
}

#new:Script $Script_80243EB0
{
    Call  GetBattleOutcome  ( *Var[0] )
    Switch  *Var[0]
        Case  ==  00000000
            Call  RemoveNpc ( .Npc:Self )
        Case  ==  00000002
            Call  SetNpcPos ( .Npc:Self 00000000 FFFFFC18 00000000 )
            Call  80045900  ( 00000001 )
        Case  ==  00000003
            Call  SetEnemyFlagBits  ( .Npc:Self 00000010 00000001 )
            Call  RemoveNpc ( .Npc:Self )
    EndSwitch
    Return
    End
}

#new:AISettings $AISettings_80243F6C
{
    0.0 % move speed
    30` % move time
    30` % wait time
  150.0 % alert radius
    0.0
    1`
    0.0 % chase speed
    0`
    0`
    0.0 % chase radius
    0.0
    0`
}

#new:Script $Script_NpcAI_80243F9C
{
    Call  SetSelfVar    ( 00000007 00000000 )
    Call  SetSelfVar    ( 00000008 0000000C )
    Call  SetSelfVar    ( 00000009 0000000B )
    Call  SetSelfVar    ( 0000000A 0000000E )
    Call  SetSelfVar    ( 0000000B 00000009 )
    Call  SetSelfVar    ( 0000000C 00000019 )
    Call  SetSelfVar    ( 0000000D FFFFFFFF )
    Call  SetSelfVar    ( 0000000E 0000000A )
    Call  SetSelfVar    ( 0000000F 0000000F )
    Call  $Function_80241C54    ( $AISettings_80243F6C )
    Return
    End
}

#new:NpcSettings $NpcSettings_80244070
{
    00000000 0020001A 00000000 00000000 $Script_NpcAI_80243F9C 80077F70 00000000 8007809C
    00000000 00000000 000B0000
}

#new:Script $Script_NpcAI_8024409C
{
    Call  EnableNpcShadow   ( .Npc:Self .False )
    Call  SetSelfVar    ( 00000000 0000000A )
    Call  SetSelfVar    ( 00000001 00000012 )
    Call  SetSelfVar    ( 00000004 00000003 )
    Call  SetSelfVar    ( 0000000F 000020DE )
    Call  $Function_802408BC ( )
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_8024411C
{
    Call  GetOwnerEncounterTrigger  ( *Var[0] )
    Switch  *Var[0]
        Case  ==  .EncounterTrigger:None % 1
        CaseOR  ==  .EncounterTrigger:Jump % 2
        CaseOR  ==  .EncounterTrigger:Hammer % 4
        CaseOR  ==  .EncounterTrigger:Partner % 6
            Call  GetSelfAnimationFromTable ( 00000007 *Var[0] )
            ExecWait  800936DC
        EndCaseGroup
    EndSwitch
    Return
    End
}

#new:NpcSettings $NpcSettings_802441A8
{
    00000000 00120012 00000000 00000000 $Script_NpcAI_8024409C 00000000 00000000 $Script_80243EB0
    00000000 00000000 000B0008
}

#new:NpcGroup $NpcGroup_802441D4
{
    00000001 $NpcSettings_80244070 ~Vec3f:NPC_802441D4 % 135 0 -300
    00000400 00000000 00000000 00000000 00000000
    ~Items:5:FireFlower:A ~HP:Standard:2 ~FP:Standard:3 ~CoinBonus:0:2
    ~Movement:NPC_802441D4
    ~AnimationTable:NPC_802441D4 % .Sprite:PiranhaPlant
    00000001 00000000 00000000 00000000 % no tattle string
    %
    % $NpcGroup_802441D4[1F0]
    00000002 $NpcSettings_802441A8 ~Vec3f:NPC_802443C4 % 0 -1000 0
    00800D00 00000000 00000000 00000000 00000000
    ~NoDrops
    ~Movement:NPC_802443C4
    ~AnimationTable:NPC_802443C4 % .Sprite:PiranhaPlant
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_802445B4
{
    00000002 $NpcGroup_802441D4 0D090001
    00000000 00000000 00000000
}

PADDING: 802445CC to 802445D0 (000045CC to 000045D0)
00000000

#new:ASCII $ASCII_802445D0
{
    "mim_01"
}

#new:ASCII $ASCII_802445D8
{
    "mim_10"
}

#new:ASCII $ASCII_802445E0
{
    "mim_02"
}

PADDING: 802445E8 to 802445F0 (000045E8 to 000045F0)
00000000 00000000

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_802445F0
{
    180.000000d
}

% Origin: HEURISTIC
#new:JumpTable $JumpTable_802445F8
{
    $Function_80240B1C[184] $Function_80240B1C[194] $Function_80240B1C[1AC] $Function_80240B1C[1BC]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[1D4] $Function_80240B1C[1E4]
    $Function_80240B1C[1FC] $Function_80240B1C[20C] $Function_80240B1C[224] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[23C] $Function_80240B1C[244]
    $Function_80240B1C[25C] $Function_80240B1C[274] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C]
    $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[28C] $Function_80240B1C[284]
}

#new:ConstDouble $ConstDouble_80244788
{
    380.000000d
}

#new:ConstDouble $ConstDouble_80244790
{
    -380.000000d
}

#new:ConstDouble $ConstDouble_80244798
{
    305.000000d
}

#new:ConstDouble $ConstDouble_802447A0
{
    375.000000d
}

#new:ConstDouble $ConstDouble_802447A8
{
    45.000000d
}

#new:ConstDouble $ConstDouble_802447B0
{
    150.000000d
}

PADDING: 802447B8 to 802447C0 (000047B8 to 000047C0)
00000000 00000000

