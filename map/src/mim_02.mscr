% Script File: mim_02.mscr
% Decoded from: 0 to 3880 (mim_02)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       ~Func:enable_world_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_world_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_world_fog_color
	ADDIU     A3, R0, FF
	JAL       ~Func:enable_entity_fog
	NOP
	ADDIU     A0, R0, 3DE
	JAL       ~Func:set_entity_fog_dist
	ADDIU     A1, R0, 3E8
	CLEAR     A0
	COPY      A1, A0
	COPY      A2, A0
	JAL       ~Func:set_entity_fog_color
	ADDIU     A3, R0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240068 to 80240070 (00000068 to 00000070)
00000000 00000000

#new:Function $Function_80240070
{
	ADDIU     SP, SP, FFA8
	SW        S0, 30 (SP)
	COPY      S0, A0
	SW        RA, 40 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SDC1      F22, 50 (SP)
	SDC1      F20, 48 (SP)
	LW        S3, 148 (S0)
	COPY      S1, A1
	LH        A0, 8 (S3)
	JAL       ~Func:get_npc_unsafe
	COPY      S2, A2
	COPY      A0, S0
	COPY      A1, S1
	COPY      A2, S2
	JAL       800495A0
	COPY      S0, V0
	LW        V0, 0 (S0)
	ADDIU     A0, R0, 2D
	ORI       V0, V0, 800
	JAL       ~Func:rand_int
	SW        V0, 0 (S0)
	COPY      A0, S0
	LIO       A1, B0000017
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIF       F5, 2.5
	MTC1      R0, F4
	DIV.D     F0, F0, F2
	ADD.D     F0, F0, F4
	LIF       F2, 1.5
	CLEAR     A2
	SWC1      F2, 14 (S0)
	CVT.S.D   F0, F0
	JAL       800494C0
	SWC1      F0, 1C (S0)
	LW        V1, D0 (S3)
	LWC1      F0, 40 (S0)
	LWC1      F2, 0 (V1)
	CVT.S.W   F2, F2
	LWC1      F4, 8 (V1)
	CVT.S.W   F4, F4
	SWC1      F0, 10 (SP)
	LW        V0, D0 (S3)
	MFC1      A1, F2
	LWC1      F0, C (V0)
	CVT.S.W   F0, F0
	SWC1      F0, 14 (SP)
	LW        V0, D0 (S3)
	MFC1      A2, F4
	LWC1      F0, 10 (V0)
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LW        A0, 18 (V1)
	JAL       ~Func:is_point_within_region
	LW        A3, 38 (S0)
	BEQ       V0, R0, .o1DC
	NOP
	LWC1      F12, 38 (S0)
	LIF       F22, 25.0
	LW        V0, D0 (S3)
	LWC1      F14, 40 (S0)
	LWC1      F8, 0 (V0)
	CVT.S.W   F8, F8
	MFC1      A2, F8
	LWC1      F8, 8 (V0)
	CVT.S.W   F8, F8
	MFC1      A3, F8
	LIF       F21, 2.96875
	MTC1      R0, F20
	JAL       ~Func:atan2
	CLEAR     S1
	LWC1      F2, 38 (S0)
	LWC1      F4, 3C (S0)
	LWC1      F6, 40 (S0)
	SWC1      F0, C (S0)
	SWC1      F2, 20 (SP)
	SWC1      F4, 24 (SP)
	SWC1      F6, 28 (SP)
	.o168
	SWC1      F22, 10 (SP)
	LWC1      F0, C (S0)
	SWC1      F0, 14 (SP)
	LH        V0, A8 (S0)
	ADDIU     A1, SP, 20
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S0)
	ADDIU     A2, SP, 24
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S0)
	JAL       800DDC44
	ADDIU     A3, SP, 28
	BEQ       V0, R0, .o20C
	ADDIU     S1, S1, 1
	LWC1      F0, C (S0)
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F20
	SLTI      V0, S1, 6
	CVT.S.D   F0, F0
	BNE       V0, R0, .o168
	SWC1      F0, C (S0)
	BEQ       R0, R0, .o20C
	NOP
	.o1DC
	JAL       ~Func:rand_int
	ADDIU     A0, R0, 3C
	LWC1      F12, C (S0)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	ADD.S     F12, F12, F0
	LIF       F0, 30.0
	JAL       ~Func:clamp_angle
	SUB.S     F12, F12, F0
	SWC1      F0, C (S0)
	.o20C
	LW        RA, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F22, 50 (SP)
	LDC1      F20, 48 (SP)
	JR        RA
	ADDIU     SP, SP, 58
}

#new:Function $Function_802402A0
{
	ADDIU     SP, SP, FFA0
	SW        S3, 4C (SP)
	COPY      S3, A0
	SW        RA, 54 (SP)
	SW        S4, 50 (SP)
	SW        S2, 48 (SP)
	SW        S1, 44 (SP)
	SW        S0, 40 (SP)
	SDC1      F20, 58 (SP)
	LW        S1, 148 (S3)
	COPY      S4, A1
	LH        A0, 8 (S1)
	JAL       ~Func:get_npc_unsafe
	COPY      S2, A2
	LW        V1, 14 (S4)
	BLTZ      V1, .o110
	COPY      S0, V0
	LW        V0, 74 (S3)
	BGTZ      V0, .o10C
	ADDIU     V0, V0, FFFF
	COPY      A0, S2
	SW        V1, 74 (S3)
	SW        R0, 10 (SP)
	LW        A2, C (S4)
	LW        A3, 10 (S4)
	JAL       800490B4
	COPY      A1, S1
	BEQ       V0, R0, .o104
	CLEAR     A0
	COPY      A1, S0
	CLEAR     A2
	LH        V1, A8 (S0)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	ADDIU     V0, R0, F
	SW        V0, 1C (SP)
	MTC1      V1, F10
	NOP
	CVT.S.W   F10, F10
	MFC1      A3, F10
	ADDIU     V0, SP, 28
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	COPY      A0, S0
	ADDIU     A1, R0, 2F4
	JAL       800494C0
	LUI       A2, 20
	LAW       V0, 800F7B30
	LWC1      F12, 38 (S0)
	LWC1      F14, 40 (S0)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	ADDIU     V0, R0, C
	SWC1      F0, C (S0)
	BEQ       R0, R0, .o314
	SW        V0, 70 (S3)
	.o104
	LW        V0, 74 (S3)
	ADDIU     V0, V0, FFFF
	.o10C
	SW        V0, 74 (S3)
	.o110
	LWC1      F0, 18 (S0)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F2, F0
	NOP
	BC1F      .o1C0
	ADDIU     A1, SP, 2C
	LWC1      F0, 38 (S0)
	LH        V0, A6 (S0)
	LAD       F2, $ConstDouble_80243830
	ADDIU     A2, SP, 30
	SWC1      F0, 2C (SP)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	CVT.D.S   F0, F0
	LWC1      F4, 3C (S0)
	LWC1      F6, 40 (S0)
	LWC1      F8, 18 (S0)
	LH        V0, A8 (S0)
	MUL.D     F0, F0, F2
	NOP
	SWC1      F4, 30 (SP)
	SWC1      F6, 34 (SP)
	SWC1      F8, 10 (SP)
	LWC1      F4, C (S0)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	SWC1      F2, 18 (SP)
	SWC1      F4, 14 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S0)
	JAL       800DDC44
	ADDIU     A3, SP, 34
	BNEL      V0, R0, .o1C0
	SW        R0, 18 (S0)
	LW        A1, 18 (S0)
	LW        A2, C (S0)
	JAL       ~Func:npc_move_heading
	COPY      A0, S0
	.o1C0
	LWC1      F0, 1C (S0)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1F      .o2F8
	ADDIU     A1, SP, 2C
	ADDIU     A2, SP, 30
	ADDIU     V0, SP, 38
	LWC1      F2, 3C (S0)
	LWC1      F6, 38 (S0)
	LIF       F21, 2.65625
	MTC1      R0, F20
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F20
	LWC1      F0, 1C (S0)
	LWC1      F4, 40 (S0)
	ABS.S     F0, F0
	SWC1      F4, 34 (SP)
	LIF       F5, 2.75
	MTC1      R0, F4
	CVT.D.S   F0, F0
	SWC1      F6, 2C (SP)
	ADD.D     F0, F0, F4
	CVT.S.D   F2, F2
	SWC1      F2, 30 (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 38 (SP)
	SW        V0, 10 (SP)
	LW        A0, 80 (S0)
	JAL       800DCB7C
	ADDIU     A3, SP, 34
	BEQ       V0, R0, .o2F8
	NOP
	LWC1      F0, 1C (S0)
	LWC1      F2, 38 (SP)
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F20
	CVT.D.S   F2, F2
	C.LE.D    F2, F0
	NOP
	BC1F      .o2F8
	ADDIU     A0, R0, 3E8
	LWC1      F0, 30 (SP)
	LW        V0, 0 (S0)
	ADDIU     V1, R0, F7FF
	SW        R0, 1C (S0)
	AND       V0, V0, V1
	SW        V0, 0 (S0)
	ADDIU     V0, R0, 2
	SWC1      F0, 3C (S0)
	JAL       ~Func:rand_int
	SW        V0, 70 (S3)
	LIO       V1, 55555556
	MULT      V0, V1
	SRA       A0, V0, 1F
	MFHI      T0
	SUBU      A0, T0, A0
	SLL       V1, A0, 1
	ADDU      V1, V1, A0
	SUBU      V0, V0, V1
	ADDIU     V1, V0, 2
	SW        V1, 74 (S3)
	LW        V0, 2C (S4)
	BLEZL     V0, .o314
	SW        R0, 70 (S3)
	LW        V0, 4 (S4)
	BLEZL     V0, .o314
	SW        R0, 70 (S3)
	BNE       V1, R0, .o314
	NOP
	BEQ       R0, R0, .o314
	SW        R0, 70 (S3)
	.o2F8
	LWC1      F4, 3C (S0)
	LWC1      F0, 1C (S0)
	ADD.S     F4, F4, F0
	LWC1      F2, 14 (S0)
	SUB.S     F0, F0, F2
	SWC1      F4, 3C (S0)
	SWC1      F0, 1C (S0)
	.o314
	LW        RA, 54 (SP)
	LW        S4, 50 (SP)
	LW        S3, 4C (SP)
	LW        S2, 48 (SP)
	LW        S1, 44 (SP)
	LW        S0, 40 (SP)
	LDC1      F20, 58 (SP)
	JR        RA
	ADDIU     SP, SP, 60
}

#new:Function $Function_802405D8
{
	ADDIU     SP, SP, FFD8
	SW        S3, 1C (SP)
	COPY      S3, A0
	SW        RA, 20 (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, 148 (S3)
	LH        A0, 8 (S2)
	JAL       ~Func:get_npc_unsafe
	COPY      S1, A1
	LW        A0, 8 (S1)
	COPY      S0, V0
	SRL       V1, A0, 1F
	ADDU      A0, A0, V1
	SRA       A0, A0, 1
	JAL       ~Func:rand_int
	ADDIU     A0, A0, 1
	LW        V1, 8 (S1)
	ADDIU     A0, R0, B4
	SRL       A1, V1, 1F
	ADDU      V1, V1, A1
	SRA       V1, V1, 1
	ADDU      V1, V1, V0
	JAL       ~Func:rand_int
	SH        V1, 8E (S0)
	LWC1      F12, C (S0)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	ADD.S     F12, F12, F0
	LIF       F0, 90.0
	JAL       ~Func:clamp_angle
	SUB.S     F12, F12, F0
	SWC1      F0, C (S0)
	LW        V0, CC (S2)
	LW        V0, 0 (V0)
	SW        V0, 28 (S0)
	ADDIU     V0, R0, 3
	SW        V0, 70 (S3)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Function $Function_80240698
{
	ADDIU     SP, SP, FFB8
	SW        S4, 40 (SP)
	COPY      S4, A0
	SW        RA, 44 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S2, 148 (S4)
	COPY      S1, A1
	LH        A0, 8 (S2)
	JAL       ~Func:get_npc_unsafe
	COPY      S3, A2
	LW        V1, 14 (S1)
	BLTZ      V1, .oF0
	COPY      S0, V0
	COPY      A0, S3
	SW        R0, 10 (SP)
	LW        A2, 24 (S1)
	LW        A3, 28 (S1)
	JAL       800490B4
	COPY      A1, S2
	BEQ       V0, R0, .oF0
	CLEAR     A0
	COPY      A1, S0
	CLEAR     A2
	LH        V1, A8 (S0)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	ADDIU     V0, R0, F
	SW        V0, 1C (SP)
	MTC1      V1, F6
	NOP
	CVT.S.W   F6, F6
	MFC1      A3, F6
	ADDIU     V0, SP, 28
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	COPY      A0, S0
	ADDIU     A1, R0, 2F4
	JAL       800494C0
	LUI       A2, 20
	LAW       V0, 800F7B30
	LWC1      F12, 38 (S0)
	LWC1      F14, 40 (S0)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	ADDIU     V0, R0, C
	SWC1      F0, C (S0)
	BEQ       R0, R0, .o184
	SW        V0, 70 (S4)
	.oF0
	LH        V0, 8C (S0)
	BNE       V0, R0, .o184
	NOP
	LHU       V0, 8E (S0)
	ADDIU     V0, V0, FFFF
	SH        V0, 8E (S0)
	SLL       V0, V0, 10
	BGTZ      V0, .o184
	NOP
	LW        V0, 74 (S4)
	ADDIU     V0, V0, FFFF
	BLEZ      V0, .o180
	SW        V0, 74 (S4)
	LWC1      F0, C (S0)
	LIF       F12, 180.0
	JAL       ~Func:clamp_angle
	ADD.S     F12, F0, F12
	ADDIU     A0, R0, 3E8
	JAL       ~Func:rand_int
	SWC1      F0, C (S0)
	LIO       V1, 2E8BA2E9
	MULT      V0, V1
	SRA       V1, V0, 1F
	MFHI      T0
	SRA       A0, T0, 1
	SUBU      A0, A0, V1
	SLL       V1, A0, 1
	ADDU      V1, V1, A0
	SLL       V1, V1, 2
	SUBU      V1, V1, A0
	SUBU      V0, V0, V1
	ADDIU     V0, V0, 5
	BEQ       R0, R0, .o184
	SH        V0, 8E (S0)
	.o180
	SW        R0, 70 (S4)
	.o184
	LW        RA, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_8024083C
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        V0, 148 (S1)
	COPY      S2, A1
	LH        A0, 8 (V0)
	JAL       ~Func:get_npc_unsafe
	COPY      S0, A2
	COPY      A0, S1
	COPY      A1, S2
	COPY      A2, S0
	JAL       80049F7C
	COPY      S0, V0
	LW        V0, 0 (S0)
	ADDIU     A0, R0, 5
	ORI       V0, V0, 800
	JAL       ~Func:rand_int
	SW        V0, 0 (S0)
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	LIF       F3, 2.5625
	MTC1      R0, F2
	LIF       F4, 1.5
	LAW       V0, 800F7B30
	LWC1      F12, 38 (S0)
	LWC1      F14, 40 (S0)
	ADD.D     F0, F0, F2
	SWC1      F4, 14 (S0)
	CVT.S.D   F0, F0
	SWC1      F0, 1C (S0)
	LW        A2, 28 (V0)
	JAL       ~Func:atan2
	LW        A3, 30 (V0)
	COPY      A0, S0
	LIO       A1, B0000017
	CLEAR     A2
	SWC1      F0, C (A0)
	LWC1      F0, 18 (S2)
	ADDIU     V0, R0, D
	SWC1      F0, 18 (A0)
	JAL       800494C0
	SW        V0, 70 (S1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_8024091C
{
	ADDIU     SP, SP, FF90
	SW        S4, 50 (SP)
	COPY      S4, A0
	SW        RA, 60 (SP)
	SW        S7, 5C (SP)
	SW        S6, 58 (SP)
	SW        S5, 54 (SP)
	SW        S3, 4C (SP)
	SW        S2, 48 (SP)
	SW        S1, 44 (SP)
	SW        S0, 40 (SP)
	SDC1      F20, 68 (SP)
	LW        S5, 148 (S4)
	COPY      S6, A1
	LH        A0, 8 (S5)
	JAL       ~Func:get_npc_unsafe
	COPY      S7, A2
	COPY      S3, V0
	LWC1      F0, 18 (S3)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F2, F0
	NOP
	BC1F      .oE8
	ADDIU     A1, SP, 28
	LWC1      F0, 38 (S3)
	LWC1      F2, 3C (S3)
	LWC1      F4, 40 (S3)
	LWC1      F6, 18 (S3)
	SWC1      F0, 28 (SP)
	SWC1      F2, 2C (SP)
	SWC1      F4, 30 (SP)
	SWC1      F6, 10 (SP)
	LWC1      F0, C (S3)
	SWC1      F0, 14 (SP)
	LH        V0, A8 (S3)
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (SP)
	LH        V0, A6 (S3)
	ADDIU     A2, SP, 2C
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (SP)
	LW        A0, 80 (S3)
	JAL       800DDC44
	ADDIU     A3, SP, 30
	BEQ       V0, R0, .oD8
	NOP
	BEQ       R0, R0, .oE8
	SW        R0, 18 (S3)
	.oD8
	LW        A1, 18 (S3)
	LW        A2, C (S3)
	JAL       ~Func:npc_move_heading
	COPY      A0, S3
	.oE8
	LWC1      F0, 1C (S3)
	MTC1      R0, F2
	MTC1      R0, F3
	CVT.D.S   F0, F0
	C.LT.D    F0, F2
	NOP
	BC1F      .o2B4
	ADDIU     S0, SP, 28
	COPY      A1, S0
	ADDIU     A2, SP, 34
	ADDIU     S2, SP, 38
	LWC1      F0, 38 (S3)
	LIF       F2, 100.0
	LWC1      F4, 40 (S3)
	LIF       F6, 1000.0
	ADDIU     S1, SP, 30
	SWC1      F0, 28 (SP)
	SWC1      F2, 34 (SP)
	SWC1      F4, 30 (SP)
	SWC1      F6, 38 (SP)
	SW        S2, 10 (SP)
	LW        A0, 80 (S3)
	JAL       800DCB7C
	COPY      A3, S1
	COPY      A1, S0
	ADDIU     A2, SP, 2C
	LWC1      F2, 3C (S3)
	LWC1      F6, 38 (S3)
	LIF       F21, 2.65625
	MTC1      R0, F20
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F20
	LWC1      F0, 1C (S3)
	LWC1      F4, 40 (S3)
	ABS.S     F0, F0
	SWC1      F4, 30 (SP)
	LIF       F5, 2.75
	MTC1      R0, F4
	CVT.D.S   F0, F0
	SWC1      F6, 28 (SP)
	ADD.D     F0, F0, F4
	CVT.S.D   F2, F2
	SWC1      F2, 2C (SP)
	CVT.S.D   F0, F0
	SWC1      F0, 38 (SP)
	SW        S2, 10 (SP)
	LW        A0, 80 (S3)
	JAL       800DCB7C
	COPY      A3, S1
	BEQ       V0, R0, .o2B4
	NOP
	LWC1      F0, 1C (S3)
	LWC1      F2, 38 (SP)
	ABS.S     F0, F0
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F20
	CVT.D.S   F2, F2
	C.LE.D    F2, F0
	NOP
	BC1F      .o2B4
	ADDIU     V1, R0, F7FF
	LWC1      F0, 2C (SP)
	LW        V0, 0 (S3)
	SW        R0, 1C (S3)
	AND       V0, V0, V1
	SWC1      F0, 3C (S3)
	SW        V0, 0 (S3)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	LW        A1, 38 (S3)
	LW        A2, 3C (S3)
	LW        A3, 40 (S3)
	JAL       ~Func:fx_walk_normal
	ADDIU     A0, R0, 2
	COPY      A0, S7
	ADDIU     V0, R0, C
	SW        V0, 70 (S4)
	ADDIU     V0, R0, 1
	SW        V0, 10 (SP)
	LW        A2, 24 (S6)
	LW        A3, 28 (S6)
	JAL       800490B4
	COPY      A1, S5
	BNE       V0, R0, .o2D0
	ADDIU     A0, R0, 2
	COPY      A1, S3
	CLEAR     A2
	LH        V1, A8 (S3)
	LIF       F0, 1.0
	LIF       F2, 2.0
	LIF       F4, -20.0
	ADDIU     V0, R0, F
	SW        V0, 1C (SP)
	MTC1      V1, F8
	NOP
	CVT.S.W   F8, F8
	MFC1      A3, F8
	ADDIU     V0, SP, 3C
	SW        V0, 20 (SP)
	SWC1      F0, 10 (SP)
	SWC1      F2, 14 (SP)
	JAL       ~Func:fx_emote
	SWC1      F4, 18 (SP)
	ADDIU     V0, R0, 19
	SH        V0, 8E (S3)
	ADDIU     V0, R0, E
	BEQ       R0, R0, .o2D0
	SW        V0, 70 (S4)
	.o2B4
	LWC1      F4, 3C (S3)
	LWC1      F0, 1C (S3)
	ADD.S     F4, F4, F0
	LWC1      F2, 14 (S3)
	SUB.S     F0, F0, F2
	SWC1      F4, 3C (S3)
	SWC1      F0, 1C (S3)
	.o2D0
	LW        RA, 60 (SP)
	LW        S7, 5C (SP)
	LW        S6, 58 (SP)
	LW        S5, 54 (SP)
	LW        S4, 50 (SP)
	LW        S3, 4C (SP)
	LW        S2, 48 (SP)
	LW        S1, 44 (SP)
	LW        S0, 40 (SP)
	LDC1      F20, 68 (SP)
	JR        RA
	ADDIU     SP, SP, 70
}

#new:Function $Function_80240C1C
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, 148 (S0)
	JAL       ~Func:get_npc_unsafe
	LH        A0, 8 (V0)
	LHU       V1, 8E (V0)
	ADDIU     V1, V1, FFFF
	SH        V1, 8E (V0)
	SLL       V1, V1, 10
	BLEZL     V1, .o34
	SW        R0, 70 (S0)
	.o34
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240C60
{
	ADDIU     SP, SP, FFB0
	SW        S3, 3C (SP)
	COPY      S3, A0
	SW        RA, 48 (SP)
	SW        S5, 44 (SP)
	SW        S4, 40 (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SW        S0, 30 (SP)
	LW        S2, 148 (S3)
	LH        A0, 8 (S2)
	LW        S0, C (S3)
	JAL       ~Func:get_npc_unsafe
	COPY      S1, A1
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S3
	JAL       ~Func:get_variable
	COPY      S5, V0
	COPY      A0, S3
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      S4, V0
	SW        V0, 94 (S2)
	SW        R0, 10 (SP)
	LW        V0, D0 (S2)
	LW        V0, 30 (V0)
	SW        V0, 14 (SP)
	LW        V0, D0 (S2)
	LW        V0, 1C (V0)
	SW        V0, 18 (SP)
	LW        V0, D0 (S2)
	LW        V0, 24 (V0)
	SW        V0, 1C (SP)
	LW        V0, D0 (S2)
	LW        V0, 28 (V0)
	SW        V0, 20 (SP)
	LW        V0, D0 (S2)
	LIF       F0, 100.0
	LW        V0, 2C (V0)
	ADDIU     S0, SP, 10
	SWC1      F0, 28 (SP)
	SH        R0, 2C (SP)
	BEQ       S1, R0, .o118
	SW        V0, 24 (SP)
	SW        R0, 70 (S3)
	SH        R0, 8E (S5)
	SW        R0, 74 (S3)
	LW        V0, 0 (S5)
	ADDIU     V1, R0, F7FF
	AND       V0, V0, V1
	ADDIU     V1, R0, FDFF
	AND       V0, V0, V1
	ORI       V0, V0, 8
	SW        V0, 0 (S5)
	LW        V0, B0 (S2)
	ORI       V0, V0, 18
	SW        V0, B0 (S2)
	LW        V0, 0 (S2)
	LUI       V1, 4000
	AND       V0, V0, V1
	BEQ       V0, R0, .o118
	LUI       V1, BFFF
	ADDIU     V0, R0, C
	SW        V0, 70 (S3)
	LW        V0, 0 (S2)
	ORI       V1, V1, FFFF
	AND       V0, V0, V1
	SW        V0, 0 (S2)
	.o118
	LW        V1, B0 (S2)
	ANDI      V0, V1, 4
	BEQ       V0, R0, .o140
	NOP
	LB        V0, B4 (S2)
	BNE       V0, R0, .o200
	CLEAR     V0
	ADDIU     V0, R0, FFFB
	AND       V0, V1, V0
	SW        V0, B0 (S2)
	.o140
	LW        V1, 70 (S3)
	SLTIU     V0, V1, F
	BEQ       V0, R0, .o1FC
	SLL       V0, V1, 2
	LTW       V0, V0 ($JumpTable_80243838)
	JR        V0
	NOP
    % LBL: from $JumpTable_80243838 , entry 0`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240070
	COPY      A2, S0
    % LBL: from $JumpTable_80243838 , entry 1`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_802402A0
	COPY      A2, S0
	BEQ       R0, R0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_80243838 , entry 2`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_802405D8
	COPY      A2, S0
	LW        V1, 70 (S3)
	ADDIU     V0, R0, 3
	BNE       V1, V0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_80243838 , entry 3`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240698
	COPY      A2, S0
	BEQ       R0, R0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_80243838 , entry 12`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_8024083C
	COPY      A2, S0
    % LBL: from $JumpTable_80243838 , entry 13`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_8024091C
	COPY      A2, S0
	BEQ       R0, R0, .o200
	CLEAR     V0
    % LBL: from $JumpTable_80243838 , entry 14`
	COPY      A0, S3
	COPY      A1, S4
	JAL       $Function_80240C1C
	COPY      A2, S0
    % LBL: from $JumpTable_80243838 , entry 11`
	.o1FC
	CLEAR     V0
	.o200
	LW        RA, 48 (SP)
	LW        S5, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	JR        RA
	ADDIU     SP, SP, 50
}

% Origin: HEURISTIC
#new:Function $Function_80240E84
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	JAL       ~Func:get_npc_safe
	COPY      A0, V0
	BEQ       V0, R0, .o44
	NOP
	LW        A1, 0 (S0)
	LH        A2, A8 (V0)
	JAL       ~Func:set_variable
	COPY      A0, S1
	.o44
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

% Origin: HEURISTIC
#new:Function $Function_80240EE0
{
	ADDIU     SP, SP, FFB0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        S3, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S3
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      A1, S4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	LW        S0, 0 (S0)
	COPY      A0, S1
	JAL       ~Func:get_variable
	COPY      A1, S0
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	LIA       S2, 8010EFC8
	LAW       V1, 80077410
	LWC1      F2, A8 (S2)
	MTC1      R0, F0
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	SUBU      V0, V0, V1
	SLL       V1, V0, 3
	ADDU      V0, V0, V1
	SLL       V0, V0, 3
	C.EQ.S    F2, F0
	LTF       F22, V0 (800B1DEC)
	BC1F      .oEC
	NOP
	LIF       F0, 100.0
	BEQ       R0, R0, .oFC
	SUB.S     F22, F22, F0
	.oEC
	LIF       F0, 100.0
	NOP
	ADD.S     F22, F22, F0
	.oFC
	JAL       ~Func:clamp_angle
	MOV.S     F12, F22
	MOV.S     F22, F0
	LIF       F20, 15.0
	JAL       ~Func:sin_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F20
	NOP
	LH        V0, B0 (S2)
	LIF       F4, 0.5
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	MUL.S     F2, F2, F4
	NOP
	ADD.S     F28, F28, F0
	ADD.S     F26, F26, F2
	JAL       ~Func:cos_deg
	MOV.S     F12, F22
	MUL.S     F0, F0, F20
	NOP
	COPY      A0, S1
	COPY      A1, S3
	TRUNC.W.S F6, F28
	MFC1      A2, F6
	JAL       ~Func:set_variable
	SUB.S     F24, F24, F0
	COPY      A0, S1
	TRUNC.W.S F6, F26
	MFC1      A2, F6
	JAL       ~Func:set_variable
	COPY      A1, S4
	COPY      A0, S1
	TRUNC.W.S F6, F24
	MFC1      A2, F6
	JAL       ~Func:set_variable
	COPY      A1, S0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 50
}

% Origin: HEURISTIC
#new:Function $Function_802410B0
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	BEQ       A1, R0, .o18
	LW        A2, C (A0)
	SAW       R0, $???_802416AC
	.o18
	LIA       V1, $???_802416AC
	LW        V0, 0 (V1)
	BNEL      V0, R0, .o34
	SW        R0, 0 (V1)
	BEQ       R0, R0, .o48
	CLEAR     V0
	.o34
	LW        A1, 0 (A2)
	LAW       A2, $???_802416B0
	JAL       ~Func:set_variable
	RESERVED
	ADDIU     V0, R0, 2
	.o48
	LW        RA, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_80241104
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	SAW       V0, $???_802416B0
	ADDIU     V0, R0, 2
	LW        RA, 10 (SP)
	ADDIU     V1, R0, 1
	SAW       V1, $???_802416AC
	JR        RA
	ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_8024113C
{
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       ~Func:get_variable
	LW        A1, 0 (V0)
	COPY      V1, V0
	BEQ       V1, R0, .o64
	CLEAR     A0
	LW        V0, 0 (V1)
	BEQL      V0, R0, .o50
	SLL       V0, A0, 2
	LIA       A1, $End[0]
	.o34
	ADDIU     V1, V1, 4
	ADDIU     A0, A0, 1
	SW        V0, 0 (A1)
	LW        V0, 0 (V1)
	BNE       V0, R0, .o34
	ADDIU     A1, A1, 4
	SLL       V0, A0, 2
	.o50
	STW       R0, V0 ($End[0])
	BEQ       R0, R0, .o8C
	NOP
	.o64
	LIA       V1, $End[0]
	COPY      A1, V1
	.o70
	ADDIU     V0, A0, 10
	SW        V0, 0 (V1)
	ADDIU     V1, V1, 4
	ADDIU     A0, A0, 1
	SLTI      V0, A0, 70
	BNE       V0, R0, .o70
	SW        R0, 1C0 (A1)
	.o8C
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 802411D8 to 802411E0 (000011D8 to 000011E0)
00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 %    0.0    0.0 -530.0  180.0
    ~Vec4f:Entry1 % -530.0    0.0    0.0   90.0
    ~Vec4f:Entry2 %    0.0    0.0  530.0    0.0
    ~Vec4f:Entry3 %  530.0    0.0    0.0  270.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main_EnterWalk
    [EntryList]   $EntryList
    [EntryCount]  00000004
    [Background]  80200000
    [MapTattle]   001900A8
}

#new:Script $Script_80241260
{
    Call  SetMusicTrack     ( 00000000 .Song:ForeverForest 00000000 00000008 )
    Call  PlayAmbientSounds ( .AmbientSounds:Spooky )
    Return
    End
}

PADDING: 8024129C to 802412A0 (0000129C to 000012A0)
00000000

#new:Script $Script_ExitWalk_802412A0
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243820 00000002 ) % mim_03
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_802412FC
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243828 00000003 ) % mim_01
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80241358
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry2 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243828 00000001 ) % mim_01
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_802413B4
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 0000003C ~Entry:Entry3 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80243828 00000001 ) % mim_01
    Wait  100`
    Return
    End
}

#new:Script $Script_80241410
{
    Bind  $Script_ExitWalk_802412A0 .Trigger:FloorAbove ~Collider:deilis 00000001 00000000
    Bind  $Script_ExitWalk_802412FC .Trigger:FloorAbove ~Collider:deilie 00000001 00000000
    Bind  $Script_ExitWalk_80241358 .Trigger:FloorAbove ~Collider:deilin 00000001 00000000
    Bind  $Script_ExitWalk_802413B4 .Trigger:FloorAbove ~Collider:deiliw 00000001 00000000
    Return
    End
}

#new:Script_Main $Script_Main_EnterWalk
{
    Set   *WorldMapLocation  .Location:ForeverForest
    Call  SetSpriteShading  ( 00070001 )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 0000028A )
    Call  SetCamBGColor ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled ( .Cam:Default .True )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Set   *AreaByte[2]  *Byte_MIM_00
    Call  GetMapID      ( *Byte_MIM_00 )
    ExecWait  $Script_80243430
    Call  MakeNpcs      ( 00000001 $NpcGroupList_80242754 )
    Set   *Var[0]  $Script_80241410
    Exec  EnterWalk
    Wait  1`
    Exec  $Script_80241260
    Exec  $Script_80243650
    Call  $Function_80240000 ( )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
    Return
    End
}

MISSING: 802415C4 to 802415E0 (000015C4 to 000015E0)
00000000 00000000 00000000 00000002 00000000 00000001 00000000

#new:NpcSettings $NpcSettings_802415E0
{
    00000000 00200018 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

#new:AISettings $AISettings_8024160C
{
    1.0 % move speed
    30` % move time
    10` % wait time
  120.0 % alert radius
    0.0
    5`
    4.5 % chase speed
    90`
    5`
  160.0 % chase radius
    0.0
    1`
}

#new:Script $Script_NpcAI_8024163C
{
    Call  SetNpcFlagBits        ( .Npc:Self 00000040 .True )
    Call  $Function_80240C60    ( $AISettings_8024160C 00000001 )
    Return
    End
}

#new:NpcSettings $NpcSettings_80241678
{
    00000000 00140016 00000000 00000000 $Script_NpcAI_8024163C 80077F70 00000000 8007809C
    00000000 00000000 000B0000
}

MISSING: 802416A4 to 802416AC (000016A4 to 000016AC)
0000001B 00000000

% Origin: HEURISTIC
#new:Unknown $???_802416AC
{
    00000000
}

% Origin: HEURISTIC
#new:Unknown $???_802416B0
{
    00000000
}

% Origin: HEURISTIC
#new:Script $Script_802416B4
{
    Set   *Var[9]  *Var[1]
    Call  802D6420 ( )
    Set   *Var[A]  *Var[0]
    Switch  *Var[0]
        Case  ==  00000000
        Case  ==  FFFFFFFF
        Default
            Call  RemoveKeyItemAt       ( *Var[1] )
            Call  GetPlayerPos  ( *Var[3] *Var[4] *Var[5] )
            Call  $Function_80240EE0    ( *Var[3] *Var[4] *Var[5] )
            ConstOR  *Var[0] 00050000
            Call  MakeItemEntity        ( *Var[0] *Var[3] *Var[4] *Var[5] .ItemSpawnMode:Decoration 00000000 )
            Call  SetPlayerAnimation    ( 00060005 )
            Wait  30`
            Call  SetPlayerAnimation    ( 00010002 )
            Call  RemoveItemEntity      ( *Var[0] )
    EndSwitch
    Call  $Function_80241104    ( *Var[A] )
    Call  802D6954 ( )
    Unbind
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_802417F8
{
    Call  $Function_8024113C    ( *Var[0] )
    BindLock  $Script_802416B4 00000010 00000000 $End[0] 00000000 00000001
    Call  $Function_802410B0    ( *Var[0] )
    Return
    End
}

#new:Script $Script_Interact_80241848
{
    If  *StoryProgress  <  FFFFFFCE
        Call  SpeakToPlayer ( 00000000 00BE0002 00BE0001 00000000 000E0006 ) % I'm called Oaklie. This forest is my home. I try t ...
        Return
    EndIf
    Call  SpeakToPlayer     ( 00000000 00BE0002 00BE0001 00000000 000E0007 ) % Um-kay. So that's your story. You're invited to Bo ...
    Call  SetNpcFlagBits    ( 00000000 00000100 .True )
    Wait  5`
    Thread
        Call  SetNpcAnimation   ( 00000000 00BE0003 )
        Wait  15`
        Call  SetNpcAnimation   ( 00000000 00BE0004 )
    EndThread
    Thread
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        Call  SetPanTarget  ( .Cam:Default FFFFFE56 0000003A FFFFFFBA )
        Call  SetCamPitch   ( .Cam:Default *Fixed[6.0] *Fixed[-6.0] )
        Call  SetCamDistance    ( .Cam:Default 000000FA )
        Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
        Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
        Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
    EndThread
    Call  PlaySoundAtNpc    ( 00000000 0000032C 00000000 )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
    Call  NpcJump0  ( 00000000 FFFFFE56 0000003A FFFFFFBA 00000014 )
    Call  SetNpcAnimation   ( 00000000 00BE0005 )
    Wait  5`
    Call  SetNpcAnimation   ( 00000000 00BE0001 )
    Call  SpeakToPlayer     ( 00000000 00BE0002 00BE0001 00000000 000E0008 ) % Listen carefully... If you want to get through thi ...
    Wait  5`
    Thread
        Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
        Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
        Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
        Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
    EndThread
    Thread
        Call  SetNpcAnimation   ( 00000000 00BE0003 )
        Wait  15`
        Call  SetNpcAnimation   ( 00000000 00BE0004 )
    EndThread
    Call  PlaySoundAtNpc    ( 00000000 0000032C 00000000 )
    Call  NpcJump0  ( 00000000 FFFFFEB3 00000000 FFFFFFAF 00000014 )
    Call  SetNpcAnimation   ( 00000000 00BE0005 )
    Wait  5`
    Thread
        Call  SetNpcAnimation   ( 00000000 00BE0003 )
        Wait  15`
        Call  SetNpcAnimation   ( 00000000 00BE0004 )
    EndThread
    Call  PlaySoundAtNpc    ( 00000000 0000032C 00000000 )
    Call  NpcJump0  ( 00000000 FFFFFED4 00000000 FFFFFF56 0000000F )
    Call  SetNpcAnimation   ( 00000000 00BE0005 )
    Wait  5`
    Thread
        Call  SetNpcAnimation   ( 00000000 00BE0003 )
        Wait  15`
        Call  SetNpcAnimation   ( 00000000 00BE0004 )
    EndThread
    Call  PlaySoundAtNpc    ( 00000000 0000032C 00000000 )
    Call  NpcJump0  ( 00000000 FFFFFF1E 00000000 FFFFFF0B 0000000F )
    Call  SetNpcAnimation   ( 00000000 00BE0005 )
    Wait  5`
    Thread
        Call  SetNpcAnimation   ( 00000000 00BE0003 )
        Wait  15`
        Call  SetNpcAnimation   ( 00000000 00BE0004 )
    EndThread
    Call  PlaySoundAtNpc    ( 00000000 0000032C 00000000 )
    Call  NpcJump0  ( 00000000 FFFFFF60 00000000 FFFFFED8 0000000F )
    Call  SetNpcAnimation   ( 00000000 00BE0005 )
    Wait  5`
    Call  SetNpcPos ( 00000000 00000000 FFFFFC18 00000000 )
    Set   *StoryProgress  FFFFFFCF
    ExecWait  $Script_80243620
    Return
    End
}

#new:Script $Script_Idle_80241DE0
{
    Switch  *StoryProgress
        Case  <  FFFFFFCF
            Call  DisablePlayerInput    ( .True )
            Wait  25`
            Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
            Call  UseSettingsFrom       ( .Cam:Default *Var[0] *Var[1] *Var[2] )
            Call  GetNpcPos     ( .Npc:Self *Var[0] *Var[1] *Var[2] )
            Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
            Call  SetCamPitch   ( .Cam:Default *Fixed[6.0] *Fixed[-6.0] )
            Call  SetCamDistance        ( .Cam:Default 0000012C )
            Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
            Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
            Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
            Call  SpeakToPlayer ( 00000000 00BE0002 00BE0001 00000000 000E0003 ) % Hmm... What do you think you're doing?
            Wait  10`
            Thread
                Call  SetNpcAnimation   ( 00000000 00BE0003 )
                Wait  5`
                Call  SetNpcAnimation   ( 00000000 00BE0004 )
            EndThread
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
                Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
                Call  WaitForCam    ( .Cam:Default *Fixed[1.0] )
                Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
                Call  SetCamSpeed   ( .Cam:Default *Fixed[3.0] )
            EndThread
            Call  PlaySoundAtNpc    ( 00000000 0000032C 00000000 )
            Call  SetNpcJumpscale   ( .Npc:Self *Fixed[1.0] )
            Call  NpcJump0  ( .Npc:Self FFFFFE39 00000000 00000000 00000014 )
            Call  SetNpcAnimation   ( 00000000 00BE0005 )
            Wait  5`
            Call  SetNpcAnimation   ( 00000000 00BE0001 )
            Wait  15`
            If  *StoryProgress  <  FFFFFFB7
                Call  SpeakToPlayer ( 00000000 00BE0002 00BE0001 00000000 000E0004 ) % This is Forever Forest... The path ahead of here i ...
            Else
                Call  SpeakToPlayer ( 00000000 00BE0002 00BE0001 00000000 000E0005 ) % This is Forever Forest... The path ahead of here i ...
            EndIf
            Call  DisablePlayerInput    ( .False )
    EndSwitch
    Return
    End
}

#new:Script $Script_Init_80242110
{
    Call  BindNpcInteract   ( .Npc:Self $Script_Interact_80241848 )
    Call  BindNpcIdle       ( .Npc:Self $Script_Idle_80241DE0 )
    Switch  *StoryProgress
        Case  >=  FFFFFFCF
            Call  SetNpcPos ( 00000000 00000000 FFFFFC18 00000000 )
    EndSwitch
    Return
    End
}

#new:NpcGroup $NpcGroup_80242184
{
    00000000 $NpcSettings_802415E0 ~Vec3f:NPC_80242184 % -426 58 -70
    00400901 $Script_Init_80242110 00000000 00000000 0000010E
    ~NoDrops
    ~Movement:NPC_80242184
    ~AnimationTable:NPC_80242184 % .Sprite:Oaklie
    00000000 00000000 00000000 001A00A1 % This is Oaklie. He lives in Forever Forest. He gua ...
}

#new:NpcGroup $NpcGroup_80242374
{
    00000001 $NpcSettings_80241678 ~Vec3f:NPC_80242374 % 300 0 130
    00000000 00000000 00000000 00000000 00000000
    ~Items:5:ThunderBolt:A ~HP:Standard:2 ~FP:Standard:2 ~CoinBonus:0:2
    ~Movement:NPC_80242374
    ~AnimationTable:NPC_80242374 % .Sprite:Fuzzy
    00000001 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroup $NpcGroup_80242564
{
    00000002 $NpcSettings_80241678 ~Vec3f:NPC_80242564 % -100 0 -320
    00000000 00000000 00000000 00000000 00000000
    ~Items:5:ThunderBolt:A ~HP:Standard:2 ~FP:Standard:2 ~CoinBonus:0:2
    ~Movement:NPC_80242564
    ~AnimationTable:NPC_80242564 % .Sprite:Fuzzy
    00000001 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_80242754
{
    00000001 $NpcGroup_80242184 00000000
    00000001 $NpcGroup_80242374 0D000001
    00000001 $NpcGroup_80242564 0D010001
    00000000 00000000 00000000
}

PADDING: 80242784 to 80242790 (00002784 to 00002790)
00000000 00000000 00000000

#new:Script $Script_80242790
{
    Switch  *Var[1]
        Case  ==  00000000
            Call  SetZoneEnabled    ( ~Zone:north .True )
            Call  SetZoneEnabled    ( ~Zone:west .True )
            Call  SetZoneEnabled    ( ~Zone:south .True )
            Call  SetZoneEnabled    ( ~Zone:east .True )
            Call  SetZoneEnabled    ( ~Zone:higashi .False )
            Call  SetZoneEnabled    ( ~Zone:nishi .False )
            Call  SetZoneEnabled    ( ~Zone:minami .False )
            Call  SetZoneEnabled    ( ~Zone:kita .False )
            Call  SetZoneEnabled    ( ~Zone:stage .False )
            Set   *Var[1]  00000000
        Case  ==  00000001
            Call  SetZoneEnabled    ( ~Zone:north .False )
            Call  SetZoneEnabled    ( ~Zone:west .False )
            Call  SetZoneEnabled    ( ~Zone:south .False )
            Call  SetZoneEnabled    ( ~Zone:east .False )
            Call  SetZoneEnabled    ( ~Zone:higashi .False )
            Call  SetZoneEnabled    ( ~Zone:nishi .False )
            Call  SetZoneEnabled    ( ~Zone:minami .False )
            Call  SetZoneEnabled    ( ~Zone:kita .False )
            Call  SetZoneEnabled    ( ~Zone:stage .True )
            Set   *Var[1]  00000001
        Case  ==  00000002
            Call  SetZoneEnabled    ( ~Zone:north .False )
            Call  SetZoneEnabled    ( ~Zone:west .False )
            Call  SetZoneEnabled    ( ~Zone:south .False )
            Call  SetZoneEnabled    ( ~Zone:east .False )
            Call  SetZoneEnabled    ( ~Zone:higashi .True )
            Call  SetZoneEnabled    ( ~Zone:nishi .True )
            Call  SetZoneEnabled    ( ~Zone:minami .True )
            Call  SetZoneEnabled    ( ~Zone:kita .True )
            Call  SetZoneEnabled    ( ~Zone:stage .False )
            Set   *Var[1]  00000002
    EndSwitch
    Return
    End
}

#new:Script $Script_80242A24
{
    Call  ParentColliderToModel ( ~Collider:monn ~Model:n1 )
    Call  RotateGroup   ( ~Model:monn *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monn )
    Call  ParentColliderToModel ( ~Collider:mons ~Model:s1 )
    Call  RotateGroup   ( ~Model:mons *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mons )
    Call  ParentColliderToModel ( ~Collider:mone ~Model:e1 )
    Call  RotateGroup   ( ~Model:mone *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mone )
    Call  ParentColliderToModel ( ~Collider:monw ~Model:w1 )
    Call  RotateGroup   ( ~Model:monw *Var[2] 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monw )
    Return
    End
}

#new:Script $Script_80242B44
{
    Call  RotateGroup   ( ~Model:monn 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monn )
    Call  RotateGroup   ( ~Model:mons 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mons )
    Call  RotateGroup   ( ~Model:mone 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:mone )
    Call  RotateGroup   ( ~Model:monw 00000000 00000000 00000001 00000000 )
    Call  UpdateColliderTransform   ( ~Collider:monw )
    Return
    End
}

#new:Script $Script_80242C14
{
    Thread
        Call  PlaySoundAtCollider   ( *Var[9] 000001D4 00000000 )
        Wait  19`
        Call  PlaySoundAtCollider   ( *Var[9] 000001D5 00000000 )
    EndThread
    Switch  *AreaByte[1]
        Case  ==  00000000
            Thread
                Call  MakeLerp  ( 0000000A 0000005A 0000000A .Easing:QuadraticIn )
                Label  A
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  A
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  *Var[7]
                Add   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000001
            Exec  $Script_80242790
            Call  MakeLerp  ( 0000005A 00000168 0000001E .Easing:Linear )
            Label  14
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  14
            EndIf
            Exec  $Script_80242B44
            Set   *AreaByte[1]  00000001
            Set   *Flag_MIM_00  .True
        Case  ==  00000001
            Thread
                Call  MakeLerp  ( 00000168 0000010E 0000000A .Easing:QuadraticIn )
                Label  1E
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  1E
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Sub   *Var[0]  *Var[7]
                Sub   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000002
            Exec  $Script_80242790
            Call  MakeLerp  ( 0000010E FFFFFFF6 0000001E .Easing:Linear )
            Label  28
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  28
            EndIf
            Set   *AreaByte[1]  00000002
        Case  ==  00000002
            Thread
                Call  MakeLerp  ( FFFFFFF6 0000005A 0000000A .Easing:QuadraticIn )
                Label  32
                Call  UpdateLerp ( )
                Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
                Call  UpdateColliderTransform   ( *Var[9] )
                Wait  1`
                If  *Var[1]  ==  00000001
                    Goto  32
                EndIf
            EndThread
            Wait  15`
            Thread
                Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
                Add   *Var[0]  *Var[7]
                Add   *Var[2]  *Var[8]
                Call  PlayerMoveTo  ( *Var[0] *Var[2] 0000000F )
            EndThread
            Set   *Var[1]  00000001
            Exec  $Script_80242790
            Call  MakeLerp  ( 0000005A 00000168 0000001E .Easing:Linear )
            Label  3C
            Call  UpdateLerp ( )
            Call  RotateGroup   ( *Var[A] *Var[0] 00000000 00000001 00000000 )
            Call  UpdateColliderTransform   ( *Var[9] )
            Wait  1`
            If  *Var[1]  ==  00000001
                Goto  3C
            EndIf
            Exec  $Script_80242B44
            Set   *AreaByte[1]  00000001
    EndSwitch
    Return
    End
}

#new:Script $Script_80243240
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000000
    Set   *Var[8]  00000046
    Set   *Var[9]  0000001B
    Set   *Var[A]  00000097
    ExecWait  $Script_80242C14
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_802432BC
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000000
    Set   *Var[8]  FFFFFFBA
    Set   *Var[9]  0000001F
    Set   *Var[A]  0000009D
    ExecWait  $Script_80242C14
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80243338
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  FFFFFFBA
    Set   *Var[8]  00000000
    Set   *Var[9]  0000001D
    Set   *Var[A]  0000009A
    ExecWait  $Script_80242C14
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_802433B4
{
    Call  DisablePlayerInput    ( .True )
    Set   *Var[7]  00000046
    Set   *Var[8]  00000000
    Set   *Var[9]  00000021
    Set   *Var[A]  000000A0
    ExecWait  $Script_80242C14
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80243430
{
    If  *Flag_MIM_00  ==  .False
        Set   *Flag_MIM_00  .True
        Set   *AreaByte[1]  00000002
        Set   *Var[1]  00000002
        Set   *Var[2]  FFFFFFF6
    Else
        Set   *Flag_MIM_00  .False
        Set   *AreaByte[1]  00000000
        Set   *Var[1]  00000000
        Set   *Var[2]  0000000A
    EndIf
    ExecWait  $Script_80242790
    Exec  $Script_80242A24
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    Call  UseSettingsFrom   ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  SetPanTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Wait  1`
    Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
    Bind  $Script_80243240 .Trigger:WallPressA ~Collider:monn 00000001 00000000
    Bind  $Script_802432BC .Trigger:WallPressA ~Collider:mons 00000001 00000000
    Bind  $Script_80243338 .Trigger:WallPressA ~Collider:mone 00000001 00000000
    If  *StoryProgress  >=  FFFFFFCF
        Bind  $Script_802433B4 .Trigger:WallPressA ~Collider:monw 00000001 00000000
    EndIf
    Return
    End
}

#new:Script $Script_80243620
{
    Bind  $Script_802433B4 .Trigger:WallPressA ~Collider:monw 00000001 00000000
    Return
    End
}

PADDING: 8024364C to 80243650 (0000364C to 00003650)
00000000

#new:Script $Script_80243650
{
    SetGroup  00000000
    Set   *Var[0]  00000000
    Call  EnableModel   ( ~Model:o414 .True )
    Call  EnableModel   ( ~Model:me .False )
    Label  A
    Call  AwaitPlayerApproach   ( 00000014 FFFFFEAC 00000032 )
    Call  RandInt       ( 00000001 *Var[2] )
    Add   *Var[2]  00000001
    Call  EnableModel   ( ~Model:o414 .False )
    Call  EnableModel   ( ~Model:me .True )
    Call  PlaySoundAt   ( 00002060 00000000 0000000A 0000006E FFFFFF38 )
    Loop  *Var[2]
        Call  EnableModel   ( ~Model:o414 .True )
        Call  EnableModel   ( ~Model:me .False )
        Wait  2`
        Call  EnableModel   ( ~Model:o414 .False )
        Call  EnableModel   ( ~Model:me .True )
        Call  RandInt       ( 00000005 *Var[3] )
        Add   *Var[3]  00000002
        Wait  *Var[3]
    EndLoop
    Wait  20`
    Call  EnableModel   ( ~Model:o414 .True )
    Call  EnableModel   ( ~Model:me .False )
    Wait  60`
    Goto  A
    Return
    End
}

#new:ASCII $ASCII_80243820
{
    "mim_03"
}

#new:ASCII $ASCII_80243828
{
    "mim_01"
}

#new:ConstDouble $ConstDouble_80243830
{
    1.200000d
}

#new:JumpTable $JumpTable_80243838
{
    $Function_80240C60[164] $Function_80240C60[174] $Function_80240C60[18C] $Function_80240C60[1AC]
    $Function_80240C60[1FC] $Function_80240C60[1FC] $Function_80240C60[1FC] $Function_80240C60[1FC]
    $Function_80240C60[1FC] $Function_80240C60[1FC] $Function_80240C60[1FC] $Function_80240C60[1FC]
    $Function_80240C60[1C4] $Function_80240C60[1D4] $Function_80240C60[1EC]
}

PADDING: 80243874 to 80243880 (00003874 to 00003880)
00000000 00000000 00000000

