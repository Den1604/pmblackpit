% Script File: kpa_133.mscr
% Decoded from: 0 to 1B20 (kpa_133)

#new:Function $Function_80240000
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o30
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o40
	ADDU      V0, V1, V0
	.o30
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o44
	SUBU      V0, V1, A0
	.o40
	SW        V0, A8 (S0)
	.o44
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o64
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o74
	ADDU      V0, V1, V0
	.o64
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o78
	SUBU      V0, V1, A0
	.o74
	SW        V0, AC (S0)
	.o78
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o98
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA8
	ADDU      V0, V1, V0
	.o98
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oAC
	SUBU      V0, V1, A0
	.oA8
	SW        V0, B0 (S0)
	.oAC
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oCC
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oDC
	ADDU      V0, V1, V0
	.oCC
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE0
	SUBU      V0, V1, A0
	.oDC
	SW        V0, B4 (S0)
	.oE0
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240124
{
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	BEQ       A1, R0, .o24
	SW        RA, 14 (SP)
	SW        R0, 70 (S0)
	SW        R0, 74 (S0)
	SW        R0, 78 (S0)
	SW        R0, 7C (S0)
	.o24
	LW        V0, 70 (S0)
	BNE       V0, R0, .o64
	NOP
	LW        V1, A8 (S0)
	LW        V0, 88 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o50
	SW        V1, A8 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o60
	ADDU      V0, V1, V0
	.o50
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o64
	SUBU      V0, V1, A0
	.o60
	SW        V0, A8 (S0)
	.o64
	LW        V0, 74 (S0)
	BNE       V0, R0, .oA4
	NOP
	LW        V1, AC (S0)
	LW        V0, 8C (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o90
	SW        V1, AC (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oA0
	ADDU      V0, V1, V0
	.o90
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oA4
	SUBU      V0, V1, A0
	.oA0
	SW        V0, AC (S0)
	.oA4
	LW        V0, 78 (S0)
	BNE       V0, R0, .oE4
	NOP
	LW        V1, B0 (S0)
	LW        V0, 90 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .oD0
	SW        V1, B0 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .oE0
	ADDU      V0, V1, V0
	.oD0
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .oE4
	SUBU      V0, V1, A0
	.oE0
	SW        V0, B0 (S0)
	.oE4
	LW        V0, 7C (S0)
	BNE       V0, R0, .o124
	NOP
	LW        V1, B4 (S0)
	LW        V0, 94 (S0)
	ADDU      V1, V1, V0
	BGEZ      V1, .o110
	SW        V1, B4 (S0)
	LUI       V0, 2
	BEQ       R0, R0, .o120
	ADDU      V0, V1, V0
	.o110
	LUI       A0, 2
	SLT       V0, A0, V1
	BEQ       V0, R0, .o124
	SUBU      V0, V1, A0
	.o120
	SW        V0, B4 (S0)
	.o124
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_u
	LW        A1, A8 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_main_pan_v
	LW        A1, AC (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_u
	LW        A1, B0 (S0)
	LW        A0, 84 (S0)
	JAL       ~Func:set_aux_pan_v
	LW        A1, B4 (S0)
	LW        V0, 70 (S0)
	LW        V1, 78 (S0)
	LW        A0, 98 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 70 (S0)
	LW        V0, 74 (S0)
	ADDIU     V1, V1, 1
	SW        V1, 78 (S0)
	LW        V1, 70 (S0)
	ADDIU     V0, V0, 1
	SW        V0, 74 (S0)
	LW        V0, 7C (S0)
	SLT       V1, V1, A0
	ADDIU     V0, V0, 1
	BNE       V1, R0, .o198
	SW        V0, 7C (S0)
	SW        R0, 70 (S0)
	.o198
	LW        V0, 74 (S0)
	LW        V1, 9C (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1AC
	SW        R0, 74 (S0)
	.o1AC
	LW        V0, 78 (S0)
	LW        V1, A0 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1C0
	SW        R0, 78 (S0)
	.o1C0
	LW        V0, 7C (S0)
	LW        V1, A4 (S0)
	SLT       V0, V0, V1
	BEQL      V0, R0, .o1D4
	SW        R0, 7C (S0)
	.o1D4
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	CLEAR     V0
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 8024030C to 80240310 (0000030C to 00000310)
00000000

#new:Function $Function_80240310
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	CLEAR     A0
	LUI       A1, FD05
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	JAL       ~Func:get_variable
	ORI       A1, A1, F80
	JAL       ~Func:get_entity_by_index
	COPY      A0, V0
	COPY      A0, S2
	COPY      S1, V0
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 60 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 64 (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      A0, S2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 68 (S1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_802403C0
{
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	COPY      S2, A0
	CLEAR     A0
	LUI       A1, FD05
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	JAL       ~Func:get_variable
	ORI       A1, A1, F80
	JAL       ~Func:get_entity_by_index
	COPY      A0, V0
	COPY      A0, S2
	COPY      S1, V0
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	ADDIU     S0, S0, 4
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 48 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A0, S2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 4C (S1)
	LW        A1, 0 (S0)
	JAL       ~Func:get_variable
	COPY      A0, S2
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 50 (S1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 % -387.0    0.0  115.0   90.0
    ~Vec4f:Entry1 %  370.0    0.0  120.0  270.0
    ~Vec4f:Entry2 %  370.0  100.0  120.0  270.0
    ~Vec4f:Entry3 %  365.0  240.0  -20.0  270.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000004
    [Background]  00000000
    [MapTattle]   0019016E
}

#new:Script $Script_802404F0
{
    Call  SetMusicTrack ( 00000000 .Song:BowsersCastle 00000000 00000008 )
    Call  UseDoorSounds ( .DoorSounds:Metal )
    Thread
        Wait  30`
        Call  802D5FA4  ( 00000006 )
    EndThread
    Return
    End
}

PADDING: 80240558 to 80240560 (00000558 to 00000560)
00000000 00000000

#new:Script $Script_UpdateTexturePan_80240560
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_80240000 ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_80240124 ( )
    Return
    End
}

#new:Script $Script_ExitDoubleDoor_802405FC
{
    SetGroup  0000001B
    Call  DisablePlayerInput    ( .True )
    Set   *Var[0]  ~Entry:Entry0
    Set   *Var[1]  ~Collider:ttw
    Set   *Var[2]  ~Model:o486
    Set   *Var[3]  ~Model:o485
    Exec  ExitDoubleDoor
    Wait  17`
    Call  GotoMap   ( $ASCII_80241B10 00000001 ) % kpa_51
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_802406A0
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 00000028 ~Entry:Entry1 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80241B18 00000000 ) % kpa_134
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_802406FC
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 00000028 ~Entry:Entry2 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80241B18 00000002 ) % kpa_134
    Wait  100`
    Return
    End
}

#new:Script $Script_ExitWalk_80240758
{
    SetGroup  0000001B
    Call  UseExitHeading    ( 00000028 ~Entry:Entry3 )
    Exec  ExitWalk
    Call  GotoMap   ( $ASCII_80241B18 00000003 ) % kpa_134
    Wait  100`
    Return
    End
}

#new:Script $Script_802407B4
{
    Bind  $Script_ExitDoubleDoor_802405FC .Trigger:WallPressA ~Collider:ttw 00000001 00000000
    Bind  $Script_ExitWalk_802406A0 .Trigger:FloorAbove ~Collider:deilie 00000001 00000000
    Bind  $Script_ExitWalk_802406FC .Trigger:FloorAbove ~Collider:deilie2 00000001 00000000
    Bind  $Script_ExitWalk_80240758 .Trigger:FloorAbove ~Collider:deiliae 00000001 00000000
    Return
    End
}

#new:Script $Script_EnterWalk_80240834
{
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            Set   *Var[0]  00000000
            Set   *Var[2]  ~Model:o486
            Set   *Var[3]  ~Model:o485
            Exec  EnterDoubleDoor
            Exec  $Script_802407B4
        Case  ==  ~Entry:Entry1
            Set   *Var[0]  $Script_802407B4
            Exec  EnterWalk
        Case  ==  ~Entry:Entry2
            Set   *Var[0]  $Script_802407B4
            Exec  EnterWalk
        Case  ==  ~Entry:Entry3
            Set   *Var[0]  $Script_802407B4
            Exec  EnterWalk
    EndSwitch
    Return
    End
}

#new:TriggerCoord $TriggerCoord_80240934
{
    ~BombPos:Bomb_80240934 % 388.000000 240.000000 -25.000000 0.000000
}

#new:Script $Script_80240944
{
    Call  PlayEffect    ( 00000042 00000000 00000038 00000038 00000001 0000000A 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    SetGroup  00000000
    SuspendAll  00000001
    Call  EnableModel   ( ~Model:o235 .True )
    Loop  0000000A
        Call  EnableModel   ( ~Model:o477 .True )
        Call  EnableModel   ( ~Model:o476 .True )
        Wait  1`
        Call  EnableModel   ( ~Model:o477 .False )
        Call  EnableModel   ( ~Model:o476 .False )
        Wait  1`
    EndLoop
    Call  ModifyColliderFlags   ( 00000000 ~Collider:ttae 7FFFFE00 )
    Set   *Flag_KPA_28  .True
    ResumeAll  00000001
    Unbind
    Return
    End
}

#new:Script_Main $Script_Main
{
    Set   *WorldMapLocation  .Location:BowsersCastle
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call  SetCamBGColor     ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled     ( .Cam:Default .True )
    Call  MakeNpcs  ( 00000001 $NpcGroupList_802417D0 )
    ExecWait  $Script_MakeEntities
    If  *Flag_KPA_28  ==  .False
        Call  EnableModel   ( ~Model:o235 .False )
        Bind  $Script_80240944 .Trigger:PointBomb $TriggerCoord_80240934 00000001 00000000
    Else
        Call  EnableModel   ( ~Model:o477 .False )
        Call  EnableModel   ( ~Model:o476 .False )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:ttae 7FFFFE00 )
    EndIf
    Exec  $Script_802417F0
    Bind  $Script_80241A90 .Trigger:AreaFlagSet *AreaFlag[008] 00000001 00000000
    Call  EnableTexPanning  ( ~Model:move .True )
    Call  EnableTexPanning  ( ~Model:s_sui .True )
    Call  EnableTexPanning  ( ~Model:sui .True )
    Thread
        Set   *Var[0]  00000001
        Set   *Var[1]  FFFFFF9C
        Set   *Var[2]  00000064
        Set   *Var[3]  00000046
        Set   *Var[4]  FFFFFFBA
        Set   *Var[5]  00000001
        Set   *Var[6]  00000001
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_80240560
    EndThread
    Thread
        Set   *Var[0]  00000004
        Set   *Var[1]  000000C8
        Set   *Var[2]  FFFFFF9C
        Set   *Var[3]  00000014
        Set   *Var[4]  FFFFFFEC
        Set   *Var[5]  00000001
        Set   *Var[6]  00000001
        Set   *Var[7]  00000001
        Set   *Var[8]  00000001
        Set   *Var[9]  00000000
        Set   *Var[A]  00000000
        Set   *Var[B]  00000000
        Set   *Var[C]  00000000
        Exec  $Script_UpdateTexturePan_80240560
    EndThread
    Exec  $Script_802404F0
    Exec  $Script_EnterWalk_80240834
    Wait  1`
    Return
    End
}

PADDING: 80240E0C to 80240E10 (00000E0C to 00000E10)
00000000

#new:Script $Script_MakeEntities
{
    If  *Flag_KPA_2A  ==  .False
        Call  MakeEntity        ( .Entity:BlueSwitch ~Vec4d:Entity80240E20 80000000 )
        Call  AssignAreaFlag    ( 00000008 )
        Call  AssignScript      ( $Script_80241540 )
    EndIf
    If  *Flag_KPA_2A  ==  .True
        Call  MakeEntity    ( .Entity:SimpleSpring ~Vec4d:Entity80240E7C 60` 80000000 )
    Else
        Call  MakeEntity    ( .Entity:SimpleSpring ~Vec4d:Entity80240EAC 60` 80000000 )
        Set   *MapVar[0]  *Var[0]
        Call  $Function_80240310    ( FFFFFFA6 00000000 00000000 )
        Exec  $Script_80240F44
    EndIf
    Call  MakeItemEntity    ( .Item:CastleKey2 ~Vec3d:Item80240F10 00000000 *Flag_KPA_29 )
    Return
    End
}

#new:Script $Script_80240F44
{
    Loop
        Wait  1`
        If  *MapVar[1]  ==  00000001
            BreakLoop
        EndIf
    EndLoop
    Call  DisablePlayerInput    ( .True )
    Set   *Flag_KPA_2A  .True
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    If  *Var[0]  >=  00000073
        If  *Var[0]  <=  000000B4
            Set   *Var[3]  *Var[0]
            If  *Var[0]  <  00000096
                Add   *Var[3]  FFFFFFD8
                Set   *Var[4]  0000005A
            Else
                Add   *Var[3]  00000028
                Set   *Var[4]  0000010E
            EndIf
            Thread
                Wait  2`
                Call  InterpPlayerYaw       ( *Var[4] 00000000 )
                Wait  2`
                Call  SetPlayerJumpscale    ( *Fixed[2.0] )
                Call  SetPlayerAnimation    ( 0001002B )
                Call  PlayerJump1   ( *Var[3] *Var[1] *Var[2] 0000000A )
                Call  SetPlayerAnimation    ( 00010002 )
                Wait  5`
            EndThread
        EndIf
    EndIf
    Thread
        Call  MakeLerp  ( 00000000 00000050 0000000F .Easing:QuadraticIn )
        Loop
            Call  UpdateLerp ( )
            Call  RotateModel   ( ~Model:kakusitobira *Var[0] 00000001 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
        Call  PlayEffect    ( ~FX:Steam:SmallOutward 00000087 00000073 FFFFFFBA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward 000000B4 00000073 FFFFFFBA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward 00000087 00000073 FFFFFFC9 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward 000000B4 00000073 FFFFFFC9 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward 00000087 00000073 FFFFFFD8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  PlayEffect    ( ~FX:Steam:SmallOutward 000000B4 00000073 FFFFFFD8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait  20`
        Call  EnableModel   ( ~Model:kakusitobira .False )
        Call  ModifyColliderFlags   ( 00000000 ~Collider:123 7FFFFE00 )
    EndThread
    Thread
        Wait  18`
        Call  PlaySoundAtNpc    ( 00000000 000001EF 00000000 )
    EndThread
    Thread
        Call  MakeLerp  ( FFFFFFA6 00000000 0000000F .Easing:QuadraticIn )
        Loop
            Call  UpdateLerp ( )
            Call  $Function_80240310    ( *Var[0] 00000000 00000000 )
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Thread
        Loop  00000017
            Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
            Call  $Function_802403C0    ( *Var[0] *Var[1] *Var[2] )
            Wait  1`
        EndLoop
        Call  SetNpcPos ( 00000000 00000000 FFFFFC18 00000000 )
    EndThread
    Wait  3`
    Call  SetNpcPos ( 00000000 00000096 00000096 FFFFFF97 )
    Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
    Call  NpcJump0  ( 00000000 00000096 00000073 00000000 00000011 )
    Call  GetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
    Wait  20`
    Call  DisablePlayerInput    ( .False )
    Return
    End
}

#new:Script $Script_80241540
{
    Set   *MapVar[1]  00000001
    Return
    End
}

#new:NpcSettings $NpcSettings_80241560
{
    00000000 001E0018 00000000 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

MISSING: 8024158C to 802415B8 (0000158C to 000015B8)
00000000 00170013 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00630000

#new:Script $Script_Init_802415B8
{
    Call  SetNpcFlagBits    ( .Npc:Self 00000010 .False )
    Return
    End
}

#new:NpcGroup $NpcGroup_802415E0
{
    00000000 $NpcSettings_80241560 ~Vec3f:NPC_802415E0 % 0 -1000 0
    00206F01 $Script_Init_802415B8 00000000 00000000 00000000
    ~NoDrops
    ~Movement:NPC_802415E0
    ~AnimationTable:NPC_802415E0 % .Sprite:Toad
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_802417D0
{
    00000001 $NpcGroup_802415E0 00000000
    00000000 00000000 00000000
}

PADDING: 802417E8 to 802417F0 (000017E8 to 000017F0)
00000000 00000000

#new:Script $Script_802417F0
{
    Call  SetRenderMode ( ~Model:s_sui 00000016 )
    Call  SetRenderMode ( ~Model:sui 00000016 )
    Switch  *Byte_KPA_00
        Case  ==  00000000
            Call  SetGroupEnabled       ( ~Model:suimen 00000000 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o358 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o405 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o414 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o418 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:tte 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o451 7FFFFE00 )
        Case  ==  00000001
            Call  TranslateGroup        ( ~Model:suimen 00000000 00000078 00000000 )
            Call  EnableModel   ( ~Model:s_sui .False )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o405 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o418 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:tte 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000003 ~Collider:o414 00000004 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o414 00080000 )
        Case  ==  00000002
            Call  TranslateGroup        ( ~Model:suimen 00000000 000000DC 00000000 )
            Call  EnableModel   ( ~Model:sui .False )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o358 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o414 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:kabe_2 7FFFFE00 )
            Call  ModifyColliderFlags   ( 00000003 ~Collider:o418 00000004 )
            Call  ModifyColliderFlags   ( 00000003 ~Collider:o440 00000004 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o418 00080000 )
            Call  ModifyColliderFlags   ( 00000000 ~Collider:o440 00080000 )
    EndSwitch
    Return
    End
}

PADDING: 80241A84 to 80241A90 (00001A84 to 00001A90)
00000000 00000000 00000000

#new:Script $Script_80241A90
{
    Call  MakeLerp  ( 00000000 0000005A 0000002D .Easing:CosFastOvershoot )
    Label  A
    Call  UpdateLerp ( )
    Wait  1`
    If  *Var[1]  ==  00000001
        Goto  A
    EndIf
    Unbind
    Return
    End
}

PADDING: 80241B0C to 80241B10 (00001B0C to 00001B10)
00000000

#new:ASCII $ASCII_80241B10
{
    "kpa_51"
}

#new:ASCII $ASCII_80241B18
{
    "kpa_134"
}

