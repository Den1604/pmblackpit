% Script File: iwa_11.mscr
% Decoded from: 0 to 2880 (iwa_11)

#new:Function $Function_80240000
{
	LAW       V0, 8007419C
	LW        V0, 10 (V0)
	ANDI      V0, V0, C000
	SLTU      V0, R0, V0
	JR        RA
	SLL       V0, V0, 1
}

PADDING: 8024001C to 80240020 (0000001C to 00000020)
00000000

#new:Function $Function_80240020
{
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	COPY      S2, A0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_variable
	COPY      A1, S4
	COPY      S3, V0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       ~Func:get_float_variable
	COPY      A0, S2
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_float_variable
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	COPY      A0, S2
	JAL       ~Func:get_variable
	COPY      S1, V0
	COPY      A0, S2
	LW        A1, 0 (S0)
	JAL       ~Func:get_float_variable
	COPY      S0, V0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	COPY      A0, S2
	COPY      S3, S1
	COPY      A1, S4
	JAL       ~Func:set_variable
	COPY      A2, S1
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       ~Func:cos_rad
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	COPY      A0, S2
	MFC1      A2, F2
	JAL       ~Func:set_float_variable
	COPY      A1, S5
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48
}

#new:Function $Function_802401B0
{
	LIO       AT, C019999A
	MTC1      AT, F0
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LWC1      F12, 8C (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	JAL       ~Func:clamp_angle
	NOP
	LIO       A1, *Var[0]
	MFC1      A2, F0
	JAL       ~Func:set_float_variable
	COPY      A0, S0
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_80240208
{
	LIO       AT, C019999A
	MTC1      AT, F0
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LWC1      F12, 8C (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	LIO       AT, 3F19999A
	MTC1      AT, F0
	NOP
	MUL.S     F12, F12, F0
	JAL       ~Func:clamp_angle
	NOP
	LIO       A1, *Var[0]
	MFC1      A2, F0
	JAL       ~Func:set_float_variable
	COPY      A0, S0
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

PADDING: 80240278 to 80240280 (00000278 to 00000280)
00000000 00000000

#new:Function $Function_80240280
{
	LW        A2, 84 (A0)
	CLEAR     A1
	LIA       V1, $???_80242148
	.o10
	LW        V0, 0 (V1)
	SLT       V0, A2, V0
	BNEL      V0, R0, .o34
	ADDIU     V1, A1, FFFF
	ADDIU     A1, A1, 1
	SLTI      V0, A1, E
	BNE       V0, R0, .o10
	ADDIU     V1, V1, 1C
	ADDIU     V1, A1, FFFF
	.o34
	CLEAR     A1
	LIA       A3, $???_80242148
	SLL       V0, V1, 3
	SUBU      V0, V0, V1
	SLL       A2, V0, 2
	ADDIU     V1, A1, 5
	.o50
	ADDIU     V0, A1, 1
	COPY      A1, V0
	SLL       V1, V1, 2
	SLL       V0, A1, 2
	ADDU      V0, V0, A2
	ADDU      V0, V0, A3
	LW        V0, 0 (V0)
	ADDU      V1, A0, V1
	SW        V0, 84 (V1)
	SLTI      V0, A1, 6
	BNE       V0, R0, .o50
	ADDIU     V1, A1, 5
	JR        RA
	ADDIU     V0, R0, 2
}

PADDING: 80240308 to 80240310 (00000308 to 00000310)
00000000 00000000

#new:EntryList $EntryList
{
    ~Vec4f:Entry0 %    0.0    0.0   15.0   90.0
    ~Vec4f:Entry1 %    0.0    0.0   15.0  270.0
}

#new:Header $Header
{
    [MainScript]  $Script_Main
    [EntryList]   $EntryList
    [EntryCount]  00000002
    [Background]  80200000
    [MapTattle]   00000000
}

#new:Script $Script_80240370
{
    Call  SetMusicTrack ( 00000000 .Song:RidingTheRails 00000000 00000008 )
    Return
    End
}

PADDING: 8024039C to 802403A0 (0000039C to 000003A0)
00000000

#new:Script $Script_802403A0
{
    If  *StoryProgress  <  FFFFFFB8
        Return
    EndIf
    Call  GetEntryID    ( *Var[0] )
    Call  $Function_80240000 ( )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            Call  GotoMap   ( $ASCII_80242858 00000000 ) % iwa_10
        Case  ==  ~Entry:Entry1
            Call  GotoMap   ( $ASCII_80242850 00000001 ) % mac_03
    EndSwitch
    Wait  100`
    Return
    End
}

#new:Script_Main $Script_Main
{
    Set   *WorldMapLocation  .Location:MtRugged
    Call  SetSpriteShading  ( FFFFFFFF )
    Call  SetCamPerspective ( .Cam:Default 00000003 0000001E 00000010 00001000 )
    Call  SetCamBGColor ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamEnabled ( .Cam:Default .True )
    Call  SetCamLeadPlayer  ( .Cam:Default .False )
    Call  UseSettingsFrom   ( .Cam:Default 00000000 00000000 00000000 )
    Call  SetCamPosA    ( .Cam:Default FFFFE958 00000000 )
    Call  SetCamPosB    ( .Cam:Default 00001644 00000000 )
    Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
    Call  SetPanTarget  ( .Cam:Default 00000000 00000000 00000000 )
    Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
    Call  MakeNpcs      ( 00000001 $NpcGroupList_8024282C )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:deiliti 7FFFFE00 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:deilitm 7FFFFE00 )
    ExecWait  $Script_80241FD8
    Call  GetEntryID    ( *Var[0] )
    Switch  *Var[0]
        Case  ==  ~Entry:Entry0
            Exec  $Script_80241DE0
        Case  ==  ~Entry:Entry1
            Exec  $Script_80241C1C
    EndSwitch
    Exec  $Script_802422D0
    Exec  $Script_802403A0
    Exec  $Script_80240370
    Return
    End
}

PADDING: 8024063C to 80240640 (0000063C to 00000640)
00000000

#new:Script $Script_80240640
{
    Call  PlaySoundAtModel  ( ~Model:07 B000001A 00000000 )
    SetF  *Var[0]  *MapVar[0]
    If  *MapFlag[05]  ==  .False
        AddF  *Var[0]  FFFFFECA
    Else
        AddF  *Var[0]  FFFFFE3E
    EndIf
    SetF  *Var[1]  0000008C
    SetF  *Var[2]  00000000
    SetF  *Var[3]  *Fixed[1.0]
    SetF  *Var[4]  *Fixed[3.0]
    Add   *Var[B]  00002710
    Call  EnableModel   ( *Var[B] .True )
    Loop  00000014
        Call  TranslateModel    ( *Var[B] *Var[0] *Var[1] *Var[2] )
        Call  ScaleModel        ( *Var[B] *Var[3] *Var[3] 00000001 )
        AddF  *Var[1]  *Var[4]
        AddF  *Var[3]  *Fixed[0.046875]
        MulF  *Var[4]  *Fixed[0.90625]
        Wait  1`
    EndLoop
    Call  EnableModel   ( *Var[B] .False )
    Return
    End
}

#new:Script $Script_802407B8
{
    Label  0
    Set   *Var[0]  *MapVar[0]
    Call  TranslateModel    ( ~Model:08 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:07 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:10 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:11 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:12 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:13 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:09 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:01 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:02 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:03 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:04 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:05 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:06 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:ura *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:omote *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:ura2 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:omote2 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:14 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:15 *Var[0] 00000000 00000000 )
    Call  TranslateModel    ( ~Model:16 *Var[0] 00000000 00000000 )
    If  *MapFlag[05]  ==  .True
        Set   *Var[0]  000000B4
        Call  TranslateModel    ( ~Model:08 FFFFFFBB FFFFFFCE 00000000 )
        Call  TranslateModel    ( ~Model:07 FFFFFFBB FFFFFFCE 00000000 )
        Call  TranslateModel    ( ~Model:10 0000004B 00000019 00000002 )
        Call  TranslateModel    ( ~Model:11 0000001E 0000001E 00000002 )
        Call  TranslateModel    ( ~Model:12 FFFFFFF6 0000001E 00000002 )
        Call  TranslateModel    ( ~Model:13 FFFFFFCE 0000001E 00000002 )
        Call  TranslateModel    ( ~Model:09 FFFFFFFF FFFFFFC6 00000000 )
        Call  TranslateModel    ( ~Model:ura 00000052 FFFFFFED FFFFFFDD )
        Call  TranslateModel    ( ~Model:omote 00000052 FFFFFFED FFFFFFDD )
        Call  TranslateModel    ( ~Model:ura2 00000052 FFFFFFED 00000023 )
        Call  TranslateModel    ( ~Model:omote2 00000052 FFFFFFED 00000023 )
        Call  TranslateModel    ( ~Model:14 FFFFFFEB 0000001E 00000000 )
        Call  TranslateModel    ( ~Model:15 FFFFFFE7 0000001E 00000000 )
        Call  TranslateModel    ( ~Model:16 FFFFFFC1 0000000F 00000000 )
        Call  RotateModel       ( ~Model:08 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:07 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:10 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:11 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:12 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:13 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:09 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:01 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:02 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:03 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:04 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:05 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:06 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:ura *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:omote *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:ura2 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:omote2 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:14 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:15 *Var[0] 00000000 00000001 00000000 )
        Call  RotateModel       ( ~Model:16 *Var[0] 00000000 00000001 00000000 )
        Call  TranslateModel    ( ~Model:08 00000045 00000032 00000000 )
        Call  TranslateModel    ( ~Model:07 00000045 00000032 00000000 )
        Call  TranslateModel    ( ~Model:10 FFFFFFB5 FFFFFFE7 FFFFFFFE )
        Call  TranslateModel    ( ~Model:11 FFFFFFE2 FFFFFFE2 FFFFFFFE )
        Call  TranslateModel    ( ~Model:12 0000000A FFFFFFE2 FFFFFFFE )
        Call  TranslateModel    ( ~Model:13 00000032 FFFFFFE2 FFFFFFFE )
        Call  TranslateModel    ( ~Model:09 00000001 0000003A 00000000 )
        Call  TranslateModel    ( ~Model:ura FFFFFFAE 00000013 00000023 )
        Call  TranslateModel    ( ~Model:omote FFFFFFAE 00000013 00000023 )
        Call  TranslateModel    ( ~Model:ura2 FFFFFFAE 00000013 FFFFFFDD )
        Call  TranslateModel    ( ~Model:omote2 FFFFFFAE 00000013 FFFFFFDD )
        Call  TranslateModel    ( ~Model:14 00000015 FFFFFFE2 00000000 )
        Call  TranslateModel    ( ~Model:15 00000019 FFFFFFE2 00000000 )
        Call  TranslateModel    ( ~Model:16 0000003F FFFFFFF1 00000000 )
    EndIf
    If  *MapFlag[05]  ==  .False
        Set   *Var[2]  *MapVar[0]
    Else
        Set   *Var[2]  000003E8
        Sub   *Var[2]  *MapVar[0]
    EndIf
    Call  $Function_802401B0 ( )
    Call  RotateModel       ( ~Model:11 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel       ( ~Model:12 *Var[0] 00000000 00000000 00000001 )
    Call  RotateModel       ( ~Model:13 *Var[0] 00000000 00000000 00000001 )
    Call  $Function_80240208 ( )
    Call  RotateModel       ( ~Model:10 *Var[0] 00000000 00000000 00000001 )
    Call  $Function_80240020    ( *Var[2] *Var[0] 00000000 FFFFFFEC 0000004B 00000000 00000000 )
    Call  $Function_80240020    ( *Var[2] *Var[1] FFFFFFF6 0000000A 0000004B 00000000 FFFFFFA6 )
    Call  TranslateModel    ( ~Model:14 *Var[0] *Var[1] 00000000 )
    Call  $Function_80240020    ( *Var[2] *Var[0] 00000000 FFFFFFEC 0000004B 00000000 00000000 )
    Add   *Var[0]  00000005
    Call  TranslateModel    ( ~Model:16 *Var[0] FFFFFFF2 00000000 )
    Call  $Function_80240020    ( *Var[2] *Var[0] 00000000 FFFFFFEC 0000004B 00000000 00000000 )
    Call  $Function_80240020    ( *Var[2] *Var[1] FFFFFFF6 0000000A 0000004B 00000000 FFFFFFA6 )
    Call  TranslateModel    ( ~Model:15 *Var[0] *Var[1] 00000000 )
    Call  $Function_80240020    ( *Var[2] *Var[0] FFFFFFD8 00000028 0000004B 00000000 0000005A )
    Call  RotateModel       ( ~Model:15 *Var[0] 00000000 00000000 00000001 )
    Call  $Function_80240020    ( *Var[C] *Var[0] FFFFFFE2 0000001E 0000000A 00000000 00000000 )
    Call  RotateModel       ( ~Model:09 *Var[0] 00000000 00000000 00000001 )
    If  *MapVar[1]  !=  00000000
        If  *Var[D]  ==  00000000
            Thread
                Wait  18`
                Exec  $Script_80240640
            EndThread
        EndIf
    EndIf
    If  *Var[D]  <=  00000014
        Call  $Function_80240020    ( *Var[D] *Var[0] *Fixed[0.703125] *Fixed[1.0] 0000000A 00000000 000000B4 )
        Call  $Function_80240020    ( *Var[D] *Var[2] *Fixed[0.0] *Fixed[0.296875] 0000000A 00000000 000000B4 )
        SetF  *Var[1]  *Fixed[0.296875]
        SubF  *Var[1]  *Var[2]
        AddF  *Var[1]  *Fixed[1.0]
        Call  ScaleModel    ( ~Model:07 *Var[1] *Var[0] *Var[1] )
        Call  ScaleModel    ( ~Model:08 *Var[1] *Var[0] *Var[1] )
    Else
        SetF  *Var[0]  *Fixed[1.0]
        SetF  *Var[2]  *Fixed[0.296875]
        SetF  *Var[1]  *Fixed[0.296875]
        SubF  *Var[1]  *Var[2]
        AddF  *Var[1]  *Fixed[1.0]
        Call  ScaleModel    ( ~Model:07 *Var[1] *Var[0] *Var[1] )
        Call  ScaleModel    ( ~Model:08 *Var[1] *Var[0] *Var[1] )
    EndIf
    If  *MapFlag[00]  ==  .True
        Set   *Var[8]  0000000A
        Set   *Flag[01]  .True
        Set   *MapFlag[00]  .False
    EndIf
    If  *MapFlag[01]  ==  .True
        Set   *Var[8]  FFFFFFF6
        Set   *Flag[01]  .True
        Set   *MapFlag[01]  .False
    EndIf
    If  *MapFlag[02]  ==  .True
        Set   *Var[8]  0000000A
        Set   *Flag[02]  .True
        Set   *MapFlag[02]  .False
    EndIf
    If  *MapFlag[03]  ==  .True
        Set   *Var[8]  FFFFFFF6
        Set   *Flag[02]  .True
        Set   *MapFlag[03]  .False
    EndIf
    If  *Flag[01]  ==  .True
        Add   *Var[9]  *Var[8]
        If  *Var[9]  >=  0000005A
            Set   *Var[9]  0000005A
            Set   *Flag[01]  .False
        EndIf
        If  *Var[9]  <=  00000000
            Set   *Var[9]  00000000
            Set   *Flag[01]  .False
        EndIf
    EndIf
    If  *Flag[02]  ==  .True
        Add   *Var[A]  *Var[8]
        If  *Var[A]  >=  0000005A
            Set   *Var[A]  0000005A
            Set   *Flag[02]  .False
        EndIf
        If  *Var[A]  <=  00000000
            Set   *Var[A]  00000000
            Set   *Flag[02]  .False
        EndIf
    EndIf
    Call  RotateModel   ( ~Model:omote *Var[9] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:ura *Var[9] 00000000 FFFFFFFF 00000000 )
    Call  RotateModel   ( ~Model:omote2 *Var[A] 00000000 00000001 00000000 )
    Call  RotateModel   ( ~Model:ura2 *Var[A] 00000000 00000001 00000000 )
    If  *MapFlag[04]  ==  .True
        If  *MapFlag[05]  ==  .False
            Set   *Var[0]  *MapVar[0]
            Add   *Var[0]  FFFFFE57
            Add   *Var[1]  0000004B
            Add   *Var[2]  00000014
            Call  SetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        Else
            Set   *Var[0]  *MapVar[0]
            Add   *Var[0]  FFFFFEB1
            Add   *Var[1]  0000004B
            Add   *Var[2]  00000014
            Call  SetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
        EndIf
    EndIf
    Add   *MapVar[0]  *MapVar[1]
    Set   *Var[0]  *MapVar[0]
    Div   *Var[0]  0000004B
    If  *Var[0]  !=  *Var[E]
        Set   *Var[E]  *Var[0]
        Set   *Var[D]  FFFFFFFF
        Add   *Var[B]  00000001
        If  *Var[B]  ==  0000000A
            Set   *Var[B]  00000000
        EndIf
    EndIf
    AddF  *Var[D]  00000001
    If  *Var[D]  >  000003E8
        Set   *Var[D]  000003E8
    EndIf
    AddF  *Var[C]  00000001
    If  *Var[C]  >  000003E8
        Set   *Var[C]  00000000
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80241908
{
    Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .False )
    Label  0
    Call  GetPlayerPos      ( *Var[0] *Var[1] *Var[2] )
    Set   *Var[0]  *MapVar[0]
    If  *MapFlag[05]  ==  .False
        Add   *Var[0]  FFFFFE57
    Else
        Add   *Var[0]  FFFFFEB1
    EndIf
    Set   *Var[3]  *Var[0]
    Set   *Var[4]  *Var[1]
    Set   *Var[5]  *Var[2]
    If  *MapFlag[05]  ==  .False
        Add   *Var[3]  FFFFFFC7
    Else
        Add   *Var[3]  00000039
    EndIf
    Add   *Var[4]  FFFFFFE1
    Add   *Var[5]  00000000
    Call  SetNpcPos ( .Npc:Partner *Var[3] *Var[4] *Var[5] )
    If  *MapFlag[05]  ==  .False
        Add   *Var[0]  00000000
    Else
        Add   *Var[0]  00000000
    EndIf
    Add   *Var[1]  FFFFFFFA
    Add   *Var[2]  FFFFFFD8
    Call  SetNpcPos ( 00000000 *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

% Origin: HEURISTIC
#new:Script $Script_80241AE4
{
    Label  0
    Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
    If  *MapFlag[05]  ==  .False
        If  *Var[0]  <  FFFFFBB4
            Set   *Var[0]  FFFFFBB4
        EndIf
        Add   *Var[0]  00000028
        Set   *Var[1]  0000001E
        Add   *Var[2]  00000028
    Else
        If  *Var[0]  <  FFFFFBB4
            Set   *Var[0]  FFFFFBB4
        EndIf
        Add   *Var[0]  FFFFFFD8
        Set   *Var[1]  0000001E
        Add   *Var[2]  00000028
    EndIf
    Call  SetCamTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_80241C1C
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  DisablePartnerAI  ( 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  SetPlayerActionState  ( .ActionState:Idle )
    Call  InterpPlayerYaw   ( 0000010E 00000000 )
    Call  InterpNpcYaw      ( .Npc:Partner 0000010E 00000000 )
    Call  EnableNpcShadow   ( .Npc:Partner .False )
    Call  HidePlayerShadow  ( .True )
    Set   *MapFlag[04]  .True
    Set   *MapFlag[05]  .True
    Exec  $Script_80241908
    Thread
        Call  MakeLerp  ( 00001900 FFFFEA20 000004B0 .Easing:Linear )
        Loop
            Call  UpdateLerp ( )
            Set   *MapVar[0]  *Var[0]
            Wait  1`
            If  *Var[1]  ==  00000000
                BreakLoop
            EndIf
        EndLoop
    EndThread
    Thread
        Loop
            Wait  1`
        EndLoop
    EndThread
    Wait  1200`
    Call  GotoMap   ( $ASCII_80242860 00000001 ) % mac_03
    Wait  100`
    Return
    End
}

#new:Script $Script_80241DE0
{
    Call  DisablePlayerInput    ( .True )
    Call  DisablePlayerPhysics  ( .True )
    Call  DisablePartnerAI  ( 00000000 )
    Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
    Call  SetPlayerActionState  ( .ActionState:Idle )
    Call  InterpPlayerYaw   ( 0000005A 00000000 )
    Call  InterpNpcYaw      ( .Npc:Partner 0000005A 00000000 )
    Call  EnableNpcShadow   ( .Npc:Partner .False )
    Call  HidePlayerShadow  ( .True )
    Exec  $Script_80241908
    Set   *MapFlag[04]  .True
    Call  MakeLerp  ( 00000000 000018CE 00000258 .Easing:Linear )
    Loop
        Call  UpdateLerp ( )
        Set   *MapVar[0]  *Var[0]
        Wait  1`
        If  *Var[1]  ==  00000000
            BreakLoop
        EndIf
    EndLoop
    If  *StoryProgress  <  FFFFFFB8
        Set   *StoryProgress  FFFFFFB8
    EndIf
    If  *Flag_EVT_02  ==  .False
        Set   *Flag_EVT_02  .True
        Call  FadeOutMusic      ( 00000000 000005DC )
        Call  GotoMapSpecial    ( $ASCII_80242870 00000002 00000006 ) % kmr_22
        Wait  100`
        Return
    EndIf
    Call  GotoMap   ( $ASCII_80242868 00000000 ) % iwa_10
    Wait  100`
    Return
    End
}

#new:Script $Script_80241FD8
{
    Call  EnableModel   ( ~Model:km .False )
    Call  SetModelFlags ( ~Model:km 00000100 .True )
    Call  CloneModel    ( ~Model:km 00002710 )
    Call  CloneModel    ( ~Model:km 00002711 )
    Call  CloneModel    ( ~Model:km 00002712 )
    Call  CloneModel    ( ~Model:km 00002713 )
    Call  CloneModel    ( ~Model:km 00002714 )
    Call  CloneModel    ( ~Model:km 00002715 )
    Call  CloneModel    ( ~Model:km 00002716 )
    Call  CloneModel    ( ~Model:km 00002717 )
    Call  CloneModel    ( ~Model:km 00002718 )
    Call  CloneModel    ( ~Model:km 00002719 )
    Set   *MapFlag[05]  .False
    Set   *MapVar[0]  FFFFE890
    Set   *MapVar[1]  0000000A
    Exec  $Script_802407B8
    Wait  1`
    Return
    End
}

MISSING: 80242124 to 80242148 (00002124 to 00002148)
00000000 00000000 00000000 0000003F 00000048 00000054 00000067 0000006F
00000077

#new:Unknown $???_80242148
{
    FFFFE890 FFFFE98A FFFFE98A FFFFE98A FFFFF34E FFFFF34E FFFFF34E FFFFEE6C
    FFFFEF66 FFFFE98A FFFFE98A FFFFF34E FFFFF34E FFFFF34E FFFFF060 FFFFEF66
    FFFFEF66 FFFFE98A FFFFF34E FFFFF34E FFFFF34E FFFFF34E FFFFF34E FFFFEF66
    FFFFE98A FFFFF34E FFFFF34E FFFFF34E FFFFF542 FFFFF34E FFFFF34E FFFFF34E
    FFFFF34E FFFFF34E FFFFF34E FFFFF63C FFFFF34E FFFFF34E FFFFF34E FFFFF34E
    FFFFF34E FFFFF34E 000000FA FFFFF34E FFFFF34E FFFFF34E FFFFF34E FFFFF736
    FFFFF34E 000002EE FFFFF34E FFFFF34E FFFFF34E FFFFFD12 FFFFF736 FFFFF736
    000005DC FFFFF34E FFFFF34E FFFFF34E FFFFFD12 FFFFFD12 FFFFF736 000007D0
    FFFFF34E FFFFF34E FFFFF34E FFFFFD12 FFFFFD12 FFFFFD12 00000ABE FFFFF34E
    FFFFF34E FFFFF34E 000006D6 000000FA FFFFFD12 00000CB2 FFFFF34E FFFFF34E
    FFFFF34E 000006D6 000000FA 000000FA 00000FA0 FFFFF34E FFFFF34E FFFFF34E
    000006D6 000006D6 000000FA 00001194 FFFFF34E FFFFF34E FFFFF34E 000006D6
    000006D6 000006D6
}

#new:Script $Script_802422D0
{
    Call  TranslateGroup    ( ~Model:mac_side FFFFE98A 00000000 00000000 )
    Call  TranslateGroup    ( ~Model:turen FFFFF34E 00000000 00000000 )
    Call  TranslateGroup    ( ~Model:iwa_side 000006D6 00000000 00000000 )
    Call  GetEntryID        ( *Var[2] )
    Switch  *Var[2]
        Case  ==  ~Entry:Entry0
            Set   *Var[3]  0000015E
            Set   *MapVar[1]  0000000A
        Case  ==  ~Entry:Entry1
            Set   *Var[3]  00000190
            Set   *MapVar[1]  FFFFFFF6
    EndSwitch
    Loop
        Set   *Var[0]  *MapVar[0]
        Sub   *Var[0]  *Var[3]
        Call  SetPanTarget      ( .Cam:Default *Var[0] 00000000 00000000 )
        Call  $Function_80240280 ( )
        Call  TranslateGroup    ( ~Model:field_a *Var[5] 00000000 00000000 )
        Call  TranslateGroup    ( ~Model:field_b *Var[6] 00000000 00000000 )
        Call  TranslateGroup    ( ~Model:field_c *Var[7] 00000000 00000000 )
        Call  TranslateGroup    ( ~Model:field_d *Var[8] 00000000 00000000 )
        Call  TranslateGroup    ( ~Model:field_e *Var[9] 00000000 00000000 )
        Call  TranslateGroup    ( ~Model:field_f *Var[A] 00000000 00000000 )
        Wait  1`
    EndLoop
    Return
    End
}

#new:Script $Script_802424C0
{
    Return
    End
}

#new:NpcSettings $NpcSettings_802424D0
{
    00000000 00200018 $Script_802424C0 00000000 00000000 00000000 00000000 00000000
    00000000 00000000 00630000
}

MISSING: 802424FC to 80242580 (000024FC to 00002580)
00000000 001E0018 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00630000 00000000 00170013 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00630000 00000000 001A0017
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00630000

#new:Script $Script_Init_80242580
{
    Call  EnableNpcShadow   ( .Npc:Self .False )
    Call  GetEntryID        ( *Var[0] )
    If  *Var[0]  ==  ~Entry:Entry0
        Call  SetNpcPos     ( .Npc:Self FFFFFE57 00000046 FFFFFFEC )
        Call  InterpNpcYaw  ( .Npc:Self 0000005A 00000000 )
    Else
        Call  SetNpcPos     ( .Npc:Self FFFFFE57 00000046 FFFFFFEC )
        Call  InterpNpcYaw  ( .Npc:Self 0000010E 00000000 )
    EndIf
    Return
    End
}

#new:NpcGroup $NpcGroup_8024263C
{
    00000000 $NpcSettings_802424D0 ~Vec3f:NPC_8024263C % 0 -1000 0
    00402D09 $Script_Init_80242580 00000000 00000000 0000005A
    ~NoDrops
    ~Movement:NPC_8024263C
    ~AnimationTable:NPC_8024263C % .Sprite:TrainStationToad
    00000000 00000000 00000000 00000000 % no tattle string
}

#new:NpcGroupList $NpcGroupList_8024282C
{
    00000001 $NpcGroup_8024263C 00000000
    00000000 00000000 00000000
}

PADDING: 80242844 to 80242850 (00002844 to 00002850)
00000000 00000000 00000000

#new:ASCII $ASCII_80242850
{
    "mac_03"
}

#new:ASCII $ASCII_80242858
{
    "iwa_10"
}

#new:ASCII $ASCII_80242860
{
    "mac_03"
}

#new:ASCII $ASCII_80242868
{
    "iwa_10"
}

#new:ASCII $ASCII_80242870
{
    "kmr_22"
}

PADDING: 80242878 to 80242880 (00002878 to 00002880)
00000000 00000000

