% Lobby used in the demo

#import UsingPipeDown.mpat		%Load Mario's animation when is leaving the Map using a Pipe with a Vertical Exit
#import FallingDownPipe.mpat	%Load Mario's animation when is entering the Map from an up pipe
#import MapLoader.mpat			%Load the next map to go, the Mover use a diferent one at SetSpawns.mpat
#import SignStringLoader.mpat	%Used to stop the leaderboards to track everything when you arrive at pit00

#new:Header $Header
{
[MainScript] $Script_Main
[Background] 80200000
[EntryList] $EntryList
[EntryCount] 4
}

#new:EntryList $EntryList
{
~Vec4f:Entry0 % Start
~Vec4f:Entry1 % Pipe1
~Vec4f:Entry2 % Pipe2
~Vec4f:Entry3 % Save Block
}

% Override texture package
#new:Function_Init $Function_Init
{
PUSH 	RA, A0, A1
LIA 	A0, 800B0CF0
LIA 	A1, "tik_tex"
JAL 	~Func:sprintf
RESERVED
DADDU 	V0, R0, R0
JPOP 	RA, A0, A1
}

#new:Script_Main $Script_Main
{
Call SetSpriteShading  	( FFFFFFFF )
Call SetCamPerspective 	( .Cam:Default 00000003 00000019 00000010 00001000 )
Call SetCamBGColor     	( .Cam:Default .Cam:Default .Cam:Default .Cam:Default )
Call SetCamEnabled       	( .Cam:Default .True )
Call SetCamLeadPlayer       	( .Cam:Default .False )
Set *Flag_Demo .True
Set *Rogue_Keys .Default
Set	*LastPartnerUsed .Default
ExecWait $Script_EnableSettingsModels
Exec 	$Script_MakeEntities
Bind    $Script_Sign_QuickSwap .Trigger:WallPressA ~Collider:signcol .True .Default
Bind    $Script_Settings .Trigger:WallPressA ~Collider:Settings .True .Default
Call	$Function_ResetGainedCoins
Call	GetLoadType 	( *Var[1] )
If	*Var[1] ==  1
	Exec	$Script_MakeExits 
	Exec	EnterSavePoint
Else
	Exec  $TrackEntry
EndIf
%% Reset Flags and Bytes %%
% Check if the player haven't ever reached floor 50
Set		*Var[0] .Default
Add		*Var[0] *BestTimeRogue_HH
Add		*Var[0] *BestTimeRogue_MM
Add		*Var[0] *BestTimeRogue_SS
Add		*Var[0] *BestTimeRogue_MS
% Format bytes
If	*Var[0] == 0
	Set *BestTimeRogue_HH 99`
	Set *BestTimeRogue_MM 59`
	Set *BestTimeRogue_SS 59`
EndIf
Exec	$RestoreBadgesFlags
% Byte000 = StoryProgress, I used Byte[000] instead because nothing happen when you use *StoryProgress
Set		*GameByte[000] 81  % to being able to pause the game
Set		*PitMapID .Default
Set	 	*PitFlag .False
Set	 	*Flag_Mode_Rogue .True
Set		*MostTimeFloorID .Default
Call	$Function_ResetHighscores
Wait	15`
Return
End
}

#new:Script $Script_EnableSettingsModels
{
Call	EnableModel ( ~Model:SignTex .False )
Call	EnableModel ( ~Model:0 .False )
Call	EnableModel ( ~Model:1 .False )
Call	EnableModel ( ~Model:2 .False )
% Enable Pipe Model
If *Flag_PipeBehaviour == .False
	Call	EnableModel ( ~Model:1 .True )
Else
	Call	EnableModel ( ~Model:2 .True )
EndIf
% Enable Counter Model
If *Flag_FloorNumber == .False
	Call	EnableModel ( ~Model:SignTex .True )
Else
	Call	EnableModel ( ~Model:0 .True )
EndIf
Return
End
}

#new:Script $Script_MakeEntities
{
Call     MakeEntity  	( .Entity:SavePoint ~Vec4d:SaveBlock 80000000 )
Call     MakeEntity 	( .Entity:Signpost 	~Vec4d:RogueRules 80000000 )
Call     AssignScript 	( $Script_Sign_RogueAbout )
Call     MakeEntity 	( .Entity:Signpost 	~Vec4d:Highscore 80000000 )
Call     AssignScript 	( $Script_Sign_Highscores )
Call     MakeEntity 	( .Entity:Signpost 	~Vec4d:Grettings 80000000 )
Call     AssignScript 	( $Script_Sign_Grettings )
Return
End
}

#new:Script $Script_Sign_RogueAbout
{
Call     DisablePlayerInput	( .True )
Call     ShowMessageAtScreenPos     	( $String_About 000000A0 00000028 )
Call     DisablePlayerInput	( .False )
Return
End
}

#new:Script $Script_Sign_Highscores
{
Call    DisablePlayerInput	( .True )
Call	SetMessageValue 	( *BestTimeRogue_HH 0 )
Call	SetMessageValue 	( *BestTimeRogue_MM 1 )
Call	SetMessageValue 	( *BestTimeRogue_SS 2 )
% Read current time to know what kind of string to use
% I know an easier solution could printing a dialog box by myself and using ASM but whatever :]
If *BestTimeRogue_HH > 9
	Set *Var[A] $String_Highscore0_00_00
	If *BestTimeRogue_MM > 9
		Set *Var[A] $String_Highscore0_0_00
		If *BestTimeRogue_SS > 9
			Set *Var[A] $String_Highscore0_0_0
		Else
			Set *Var[A] $String_Highscore0_0_00
		EndIf
	Else
		Set *Var[A] $String_Highscore0_00_00
		If *BestTimeRogue_SS > 9
			Set *Var[A] $String_Highscore0_00_0
		Else
			Set *Var[A] $String_Highscore0_00_00
		EndIf
	EndIf
Else
	Set *Var[A] $String_Highscore00_00_00
	If *BestTimeRogue_MM > 9
		Set *Var[A] $String_Highscore00_0_00
		If *BestTimeRogue_SS > 9
			Set *Var[A] $String_Highscore00_0_0
		Else
			Set *Var[A] $String_Highscore00_0_00
		EndIf
	Else
		Set *Var[A] $String_Highscore00_00_00
		If *BestTimeRogue_SS > 9
			Set *Var[A] $String_Highscore00_00_0
		Else
			Set *Var[A] $String_Highscore00_00_00
		EndIf
	EndIf
EndIf
Call    ShowMessageAtScreenPos     	( *Var[A] 000000A0 00000028 )
Call	$LoadHighscores		% loaded from StaticValues.mpat
Call    SetMessageValue 	( *Var[0] 0 )
Call    SetMessageValue 	( *Var[2] 1 )
Call    ShowMessageAtScreenPos     	( $String_Highscore2 000000A0 00000028 )
Call    DisablePlayerInput	( .False )
Return
End
}

#new:Script $Script_Sign_Grettings
{
Call     DisablePlayerInput	( .True )
Call     ShowMessageAtScreenPos     	( $String_Grettings 000000A0 00000028 )
Call     DisablePlayerInput	( .False )
Return
End
}

#new:Script $Script_Sign_QuickSwap
{
Call    DisablePlayerInput	( .True )
Call    ShowMessageAtScreenPos ( $String_QuickSwap 000000A0 00000028 )
Call    DisablePlayerInput	( .False )
Return
End
}

#new:Script $Script_Settings
{
Call    DisablePlayerInput	( .True )
Call    ShowMessageAtScreenPos ( $String_Settings_Start 000000A0 00000028 )
Call	ShowChoice ( $String_Choice_Settings1 )
Call    CloseMessage % close message box
Switch	*Var[0]
	Case == 0 % Pipes
		Set		*Flag_Demo_SettingsBox_StringsBank .False
		Set		*Flag_Demo_SettingsBox .True
		Call    ShowMessageAtScreenPos ( $String_Settings_Pipe 000000A0 00000028 )
		Call	ShowChoice ( $String_Choice_Settings2 )
		Call    CloseMessage % close message box
		Switch *Var[0]
			Case == 0 % After Landing
				Set		*Flag_Demo_SettingsBox .False
				% Activate this
				If *Flag_PipeBehaviour != .False
					Call	PlaySound ( 000F )
					Call	EnableModel ( ~Model:2 .False )
					Wait 	5
					Call	EnableModel ( ~Model:1 .True )
					Set 	*Flag_PipeBehaviour .False
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				Else
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				EndIf
			Case == 1 % Always
				Set		*Flag_Demo_SettingsBox .False
				% Activate this
				If *Flag_PipeBehaviour != .True
					Call	PlaySound ( 000F )
					Call	EnableModel ( ~Model:1 .False )
					Wait 	5
					Call	EnableModel ( ~Model:2 .True )
					Set 	*Flag_PipeBehaviour .True
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				Else
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				EndIf
			Case == 2 % Cancel
				Set		*Flag_Demo_SettingsBox .False
				Call    DisablePlayerInput	( .False )
				Jump	$Script_Settings
		EndSwitch
	Case == 1 % Floor Counter
		Set		*Flag_Demo_SettingsBox_StringsBank .True
		Set		*Flag_Demo_SettingsBox .True
		Call    ShowMessageAtScreenPos ( $String_Settings_FloorCounter 000000A0 00000028 )
		Call	ShowChoice ( $String_Choice_Settings3 )
		Call    CloseMessage % close message box
		Switch *Var[0]
			Case == 0 % Sign
				Set		*Flag_Demo_SettingsBox .False
				% Activate this
				If *Flag_FloorNumber != .False
					Call	PlaySound ( 000F )
					Call	EnableModel ( ~Model:0 .False )
					Wait 	5
					Call	EnableModel ( ~Model:SignTex .True )
					Set 	*Flag_FloorNumber .False
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				Else
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				EndIf
			Case == 1 % Top Pipe
				Set		*Flag_Demo_SettingsBox .False
				% Activate this
				If *Flag_FloorNumber != .True
					Call	PlaySound ( 000F )
					Call	EnableModel ( ~Model:SignTex .False )
					Wait 	5
					Call	EnableModel ( ~Model:0 .True )
					Set 	*Flag_FloorNumber .True
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				Else
					Call    DisablePlayerInput	( .False )
					Jump	$Script_Settings
				EndIf
			Case == 2 % Cancel
				Set		*Flag_Demo_SettingsBox .False
				Call    DisablePlayerInput	( .False )
				Jump	$Script_Settings
		EndSwitch
	Case == 2 % Cancel
		Call     DisablePlayerInput	( .False )
		Return
EndSwitch
Return
End
}

#new:Script $Script_MakeExits
{
Bind     $Script_Exit0  .Trigger:FloorTouch ~Collider:col0 00000001 00000000 % Down Pipe 
Return
End	
}

#new:Script $TrackEntry
{
	Call     GetEntryID  	( *Var[0] )
	Switch *Var[0]
		Case == 0 % If Player Died / Start
			Call DisablePlayerInput ( .True )
			% Check if is the game intro
			Call	$RestoreBadges
			Call	$RestorePartnersRanks
			Call	$RestoreMariosStats
			Call	$RestoreItems
			Call	$RespawnPartner2
			Call	$ResetKeyStarPiecesBox
			Exec	$Script_MakeExits
			ExecWait $Script_Mario_WakeUpfromDeath
			Call 	 DisablePlayerInput ( .False )
		Case == 2 % Large Pipe
			Call	$RestoreBadges
			Call	$RestorePartnersRanks
			Call	$RestoreMariosStats
			Call	$RestoreItems
			Call	$RespawnPartner2
			Call	$ResetKeyStarPiecesBox
			Exec    $ComingDownPipe
			Exec	$Script_MakeExits
	EndSwitch
	Return
	End
}

	#new:Script $ComingDownPipe
{
	Set *Var[A] 2					% entry index
 	Set *Var[B] ~Collider:col2		% pipe collider id
	ExecWait $FallingDownPipe		% loaded from FallingDownPipe.mpat
	Return
	End
}

	#new:Script $Script_Mario_WakeUpfromDeath
{
	Call SetPlayerAnimation ( 0001000F ) % Dead
	Wait 32`
	Call SetPlayerAnimation ( 00010030 ) % Get Up
	Wait 16`
	Return
	End
}

#new:Script $Script_Exit0
{
	Set  *Var[A]  1 % Entry ID
	Set  *Var[B]  ~Collider:col0
	ExecWait $Script_TrackPlayer_Rogue
	Return
	End
}

	#new:Script $Script_TrackPlayer_Rogue
{
	Call     $Function_TrackInput	% loaded from UsingPipeDown.mpat
	If  *Var[0]  ==  0
		Return
	EndIf
	Call     GetCurrentPartnerID ( *Var[0] )
	If  *Var[0]  !=  0
		Call     GetCurrentPartnerID 	( *Var[1] )
		If  *Var[1]  !=  6
			Return
		Else
			Call     802D2B6C
			Call     DisablePlayerInput	( .True )
		EndIf
	Else
		Call     DisablePlayerInput	( .True )
	EndIf
	% Save everything in Memory
	Call	$Function_SaveCurrentPartners
	Call	$Function_SavePartnersRanks
	Call	$Function_SaveMariosStats
	Call	$Function_SaveItems
	Call	$Function_SaveActivatedBadges		% Save in a list Mario's current activated badges
	% Reset Addresses
	Call	$Function_DisableActivatedBadges	% Disable Mario's Current activated badges
	Call	$Function_DisablePartnersAndRanks
	Call	$Function_SetMariosStats
	Call	FullyRestoreSP
	Call	$Function_ResetItems
	% Disable Current Partner
	Set		*LastPartnerUsed .Default
	Call	$SaveCurrentPartner 				% save in byte, to restore after coming from the pit
	Call    $DispawnPartner
	Call 	SetMusicTrack 		( .Cam:Default .Song:ToadTownTunnels 00000000 00000008 )
	ExecWait $Script_PipeAnimation 				% loaded from UsingPipeDown.mpat
	Return
	End
}

#string $String_Highscore0_0_0
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19][Var:00]:[Var:01]:[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore00_0_0
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19]0[Var:00]:[Var:01]:[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore0_00_0
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19][Var:00]:0[Var:01]:[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore0_0_00
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19][Var:00]:[Var:01]:0[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore00_00_0
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19]0[Var:00]:0[Var:01]:[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore00_0_00
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19]0[Var:00]:[Var:01]:0[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore0_00_00
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19][Var:00]:0[Var:01]:0[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore00_00_00
{
[DelayOff][STYLE:SIGN][...]
Best time on beating the Demo:
             [Down:05][Size:17:17][PushColor][Color:19]0[Var:00]:0[Var:01]:0[Var:02][PopColor][SizeReset]
[DelayOn][WAIT][END]
}

#string $String_Highscore2
{
[DelayOff][STYLE:SIGN][...]
Deepest Level Reached:  [Var:00]/50
Total Floors Reached:     [Var:01]
[DelayOn][WAIT][END]
}

#string $String_QuickSwap
{
[DelayOff][STYLE:SIGN][...]
Have you tried to [PushColor][Color:19]press the[PopColor]
[R] [PushColor][Color:19]button[PopColor] when you have more
than one partner?
[WAIT][NEXT][...]
Give it a shot!
[DelayOn][WAIT][END]
}

#string $String_Grettings
{
[DelayOff][STYLE:SIGN][...]
Hi, thank you for downloading this
demo!
[WAIT][NEXT][...]
If you want to report a bug,
you have any suggestions, ideas
or any comment regarding this
demo.
[WAIT][NEXT][...]
You can reach me through the
[PushColor][Color:19]Paper Mario Modding Server[PopColor] on
Discord.
[WAIT][NEXT][...]
Here's an invite:
[PushColor][Color:19]https://discord.gg/pUWj6ss[PopColor]
[WAIT][NEXT][...]
Also remember to follow me on my
Youtube channel for new updates!
[PushColor][Color:19]youtube.com/eldexterr[PopColor]
[WAIT][NEXT][...]
Have fun! :)

                                - Dex
[DelayOn][WAIT][END]
}

#string $String_About
{
[DelayOff][STYLE:SIGN][...]

     - Roguelike Mode Rules -
[WAIT][NEXT][...]
In this Pit you will always start
with 10HP and 5FP and nothing
else.
[WAIT][NEXT][...]
Each floor will load a custom trap
that you will need to surpass to
get a reward.
[WAIT][NEXT][...]
The reward can be a bunch of
useful things like Items, Badges,
Upgrades and other stuff.
[WAIT][NEXT][...]
All badges you get, will get
perma-activated.
[WAIT][NEXT][...]
Manage your resources like
HP, Coins and Keys to get
better rewards.
[WAIT][NEXT][...]
Good luck!
[DelayOn][WAIT][END]
}

#new:Script $RestoreBadgesFlags
{
   Set		*Flag_HPDrain2 0
   Set		*Flag_DamageDodgeA2 0
   Set		*Flag_DamageDodgeB2 0
   Set		*Flag_LastStand2 0
   Set		*Flag_PowerBounce2 0
   Set		*Flag_MegaRush2 0
   Set		*Flag_AllorNothing2 0
   Set		*Flag_PUpDDown2 0
   Set		*Flag_DDownJump2 0
   Set		*Flag_PowerRush2 0
   Set		*Flag_DoubleDip2 0
   Set		*Flag_PowerQuake2 0
   Set		*Flag_QuakeHammer2 0
   Set		*Flag_QuickChange2 0
   Set		*Flag_PowerPlusA2 0
   Set		*Flag_PowerPlusB2 0
   Set		*Flag_PDownDUp2 0
   Set		*Flag_DefendPlus2 0
   Set		*Flag_CloseCall2 0
   Set		*Flag_FlowerFinder2 0
   Set		*Flag_HeartFinder2 0
   Set		*Flag_FlowerSaverA2 0
   Set		*Flag_FlowerSaverB2 0
   Set		*Flag_PowerJump2 0
   Set		*Flag_DizzyAttack2 0
   Set		*Flag_Multibounce2 0
   Set		*Flag_ZapTap2 0
   Set		*Flag_DodgeMaster2 0
   Set		*Flag_HappyFlowerA2 0
   Set		*Flag_HappyFlowerB2 0
   Set		*Flag_DeepFocusA2 0
   Set		*Flag_DeepFocusB2 0
   Set		*Flag_DeepFocusC2 0
   Set		*Flag_JumpCharge2 0
   Set		*Flag_SJumpChg2 0
   Set		*Flag_FeelingFine2 0
   Set		*Flag_IcePower2 0
   Set		*Flag_HappyHeartA2 0
   Set		*Flag_HappyHeartB2 0
   Set		*Flag_FireShield2 0
   Set		*Flag_GroupFocus2 0
   Set		*Flag_ShrinkStomp2 0
   Set		*Flag_TripleDip2 0
   Set		*Flag_MegaQuake2 0
   Set		*Flag_DizzyStomp2 0
   Set		*Flag_SleepStomp2 0
   Set		*Flag_PowerSmash2 0
   Set		*Flag_DDownPound2 0
   Set		*Flag_SpikeShield2 0
   Set		*Flag_SmashCharge2 0
   Set		*Flag_Refund2 0
   Set		*Flag_MegaJump2 0
   Set		*Flag_MegaSmash2 0
   Set		*Flag_Hammer_Throw2 0
   Set		*Flag_Pretty_Lucky2 0
   Set		*Flag_Chill_Out2 0
   Set		*Flag_Money_Money2 0
   Set		*Flag_PayOff2 0
   Set		*Flag_Spin_Smash2 0
   %Set		*Flag_Runaway_Pay2 0 % unused badge
   Set		*Flag_SSmashChg2 0
   Set		*Flag_Peekaboo2 0
   Set		*Flag_LuckyDay2 0
   Set		*Flag_SlowGo2 0
   % Partners
   Set		*Flag_Goombario2 0
   Set		*Flag_Kooper2 0
   Set		*Flag_Bombette2 0
   Set		*Flag_Parakarry2 0
   Set		*Flag_Bow2 0
   Set		*Flag_Watt2 0
   Set		*Flag_Sushie2 0
   Set		*Flag_Lakilester2 0
   Return
   End
}

#new:Function $Function_ResetGainedCoins
{
SAH		R0, 8010F2AA
JR 		RA
NOP
}

#new:Function $Function_ResetHighscores
{
SAW	R0, $Timer_Total
SAW	R0, $Timer_Floor
SAW	R0, $Timer_Floor_Highest
SAB	R0, $Timer_Speed
SAH	R0, $TotalDamage_Dealt
SAH	R0, $TotalDamage_Received
SAB	R0, $TotalItemsUsed
SAH	R0, $TotalFloors
JR	RA
NOP
}

#new:Function $Function_SaveActivatedBadges
{
PUSH	T0
LAH		T0, 8010F498 % Activated Badge 1
SAH		T0, 800DBE50 % Saved Badge 1
LAH		T0, 8010F49A % Activated Badge 2
SAH		T0, 800DBE52 % Saved Badge 2
LAH		T0, 8010F49C % Activated Badge 3
SAH		T0, 800DBE54 % Saved Badge 3
LAH		T0, 8010F49E % Activated Badge 4
SAH		T0, 800DBE56 % Saved Badge 4
LAH		T0, 8010F4A0 % Activated Badge 5
SAH		T0, 800DBE58 % Saved Badge 5
LAH		T0, 8010F4A2 % Activated Badge 6
SAH		T0, 800DBE5A % Saved Badge 6
LAH		T0, 8010F4A4 % Activated Badge 7
SAH		T0, 800DBE5C % Saved Badge 7
LAH		T0, 8010F4A6 % Activated Badge 8
SAH		T0, 800DBE5E % Saved Badge 8
LAH		T0, 8010F4A8 % Activated Badge 9
SAH		T0, 800DBE60 % Saved Badge 9
LAH		T0, 8010F4AA % Activated Badge 10
SAH		T0, 800DBE62 % Saved Badge 10
LAH		T0, 8010F4AC % Activated Badge 11
SAH		T0, 800DBE64 % Saved Badge 11
LAH		T0, 8010F4AE % Activated Badge 12
SAH		T0, 800DBE66 % Saved Badge 12
LAH		T0, 8010F4B0 % Activated Badge 13
SAH		T0, 800DBE68 % Saved Badge 13
LAH		T0, 8010F4B2 % Activated Badge 14
SAH		T0, 800DBE6A % Saved Badge 14
LAH		T0, 8010F4B4 % Activated Badge 15
SAH		T0, 800DBE6C % Saved Badge 15
LAH		T0, 8010F4B6 % Activated Badge 16
SAH		T0, 800DBE6E % Saved Badge 16
LAH		T0, 8010F4B8 % Activated Badge 17
SAH		T0, 800DBE70 % Saved Badge 17
LAH		T0, 8010F4BA % Activated Badge 18
SAH		T0, 800DBE72 % Saved Badge 18
LAH		T0, 8010F4BC % Activated Badge 19
SAH		T0, 800DBE74 % Saved Badge 19
LAH		T0, 8010F4BE % Activated Badge 20
SAH		T0, 800DBE76 % Saved Badge 20
LAH		T0, 8010F4C0 % Activated Badge 21
SAH		T0, 800DBE78 % Saved Badge 21
LAH		T0, 8010F4C2 % Activated Badge 22
SAH		T0, 800DBE7A % Saved Badge 22
LAH		T0, 8010F4C4 % Activated Badge 23
SAH		T0, 800DBE7C % Saved Badge 23
LAH		T0, 8010F4C6 % Activated Badge 24
SAH		T0, 800DBE7E % Saved Badge 24
LAH		T0, 8010F4C8 % Activated Badge 25
SAH		T0, 800DBE80 % Saved Badge 25
LAH		T0, 8010F4CA % Activated Badge 26
SAH		T0, 800DBE82 % Saved Badge 26
LAH		T0, 8010F4CC % Activated Badge 27
SAH		T0, 800DBE84 % Saved Badge 27
LAH		T0, 8010F4CE % Activated Badge 28
SAH		T0, 800DBE86 % Saved Badge 28
LAH		T0, 8010F4D0 % Activated Badge 29
SAH		T0, 800DBE88 % Saved Badge 29
LAH		T0, 8010F4D2 % Activated Badge 30
SAH		T0, 800DBE8A % Saved Badge 30
POP		T0
JR		RA
NOP
}

#new:Function $Function_DisableActivatedBadges
{
SAW		R0, 8010F498 % Deactivate Badges 1-2
SAW		R0, 8010F49C % Deactivate Badges 3-4
SAW		R0, 8010F4A0 % Deactivate Badges 5-6
SAW		R0, 8010F4A4 % Deactivate Badges 7-8
SAW		R0, 8010F4A8 % Deactivate Badges 9-10
SAW		R0, 8010F4AC % Deactivate Badges 11-12
SAW		R0, 8010F4B0 % Deactivate Badges 13-14
SAW		R0, 8010F4B4 % Deactivate Badges 15-16
SAW		R0, 8010F4B8 % Deactivate Badges 17-18
SAW		R0, 8010F4BC % Deactivate Badges 19-20
SAW		R0, 8010F4C0 % Deactivate Badges 21-22
SAW		R0, 8010F4C4 % Deactivate Badges 23-24
SAW		R0, 8010F4C8 % Deactivate Badges 25-26
SAW		R0, 8010F4CC % Deactivate Badges 27-28
SAW		R0, 8010F4D0 % Deactivate Badges 29-30
JR RA
NOP
}
   
   #new:Function $RestoreBadges
{
   PUSH		T0
   LAH		T0, 800DBE50 % Load BadgeSaved 1
   SAH		T0, 8010F498 % Activate BadgeSaved 1
   LAH		T0, 800DBE52 % Load BadgeSaved 2
   SAH		T0, 8010F49A % Activate BadgeSaved 2
   LAH		T0, 800DBE54 % Load BadgeSaved 3
   SAH		T0, 8010F49C % Activate BadgeSaved 3
   LAH		T0, 800DBE56 % Load BadgeSaved 4
   SAH		T0, 8010F49E % Activate BadgeSaved 4
   LAH		T0, 800DBE58 % Load BadgeSaved 5
   SAH		T0, 8010F4A0 % Activate BadgeSaved 5
   LAH		T0, 800DBE5A % Load BadgeSaved 6
   SAH		T0, 8010F4A2 % Activate BadgeSaved 6
   LAH		T0, 800DBE5C % Load BadgeSaved 7
   SAH		T0, 8010F4A4 % Activate BadgeSaved 7
   LAH		T0, 800DBE5E % Load BadgeSaved 8
   SAH		T0, 8010F4A6 % Activate BadgeSaved 8
   LAH		T0, 800DBE60 % Load BadgeSaved 9
   SAH		T0, 8010F4A8 % Activate BadgeSaved 9
   LAH		T0, 800DBE62 % Load BadgeSaved 10
   SAH		T0, 8010F4AA % Activate BadgeSaved 10
   LAH		T0, 800DBE64 % Load BadgeSaved 11
   SAH		T0, 8010F4AC % Activate BadgeSaved 11
   LAH		T0, 800DBE66 % Load BadgeSaved 12
   SAH		T0, 8010F4AE % Activate BadgeSaved 12
   LAH		T0, 800DBE68 % Load BadgeSaved 13
   SAH		T0, 8010F4B0 % Activate BadgeSaved 13
   LAH		T0, 800DBE6A % Load BadgeSaved 14
   SAH		T0, 8010F4B2 % Activate BadgeSaved 14
   LAH		T0, 800DBE6C % Load BadgeSaved 15
   SAH		T0, 8010F4B4 % Activate BadgeSaved 15
   LAH		T0, 800DBE6E % Load BadgeSaved 16
   SAH		T0, 8010F4B6 % Activate BadgeSaved 16
   LAH		T0, 800DBE70 % Load BadgeSaved 17
   SAH		T0, 8010F4B8 % Activate BadgeSaved 17
   LAH		T0, 800DBE72 % Load BadgeSaved 18
   SAH		T0, 8010F4BA % Activate BadgeSaved 18
   LAH		T0, 800DBE74 % Load BadgeSaved 19
   SAH		T0, 8010F4BC % Activate BadgeSaved 19
   LAH		T0, 800DBE76 % Load BadgeSaved 20
   SAH		T0, 8010F4BE % Activate BadgeSaved 20
   LAH		T0, 800DBE78 % Load BadgeSaved 21
   SAH		T0, 8010F4C0 % Activate BadgeSaved 21
   LAH		T0, 800DBE7A % Load BadgeSaved 22
   SAH		T0, 8010F4C2 % Activate BadgeSaved 22
   LAH		T0, 800DBE7C % Load BadgeSaved 23
   SAH		T0, 8010F4C4 % Activate BadgeSaved 23
   LAH		T0, 800DBE7E % Load BadgeSaved 24
   SAH		T0, 8010F4C6 % Activate BadgeSaved 24
   LAH		T0, 800DBE80 % Load BadgeSaved 25
   SAH		T0, 8010F4C8 % Activate BadgeSaved 25
   LAH		T0, 800DBE82 % Load BadgeSaved 26
   SAH		T0, 8010F4CA % Activate BadgeSaved 26
   LAH		T0, 800DBE84 % Load BadgeSaved 27
   SAH		T0, 8010F4CC % Activate BadgeSaved 27
   LAH		T0, 800DBE86 % Load BadgeSaved 28
   SAH		T0, 8010F4CE % Activate BadgeSaved 28
   LAH		T0, 800DBE88 % Load BadgeSaved 29
   SAH		T0, 8010F4D0 % Activate BadgeSaved 29
   LAH		T0, 800DBE8A % Load BadgeSaved 30
   SAH		T0, 8010F4D2 % Activate BadgeSaved 30
   POP		T0
   JR		RA
   NOP
}

   % Restore Addresses

	#new:Function $RestorePartnersRanks
{
	PUSH	RA, V0, A1, A2
	% Goombario
	LIO 	A1, *Flag_Rogue_Goombario
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2AC % Goombario Byte Flag
	LIO 	A1, *Rogue_Goombario_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2AD % Goombario Rank
	% Kooper
	LIO 	A1, *Flag_Rogue_Kooper
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2B4 % Kooper Byte Flag
	LIO 	A1, *Rogue_Kooper_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2B5 % Kooper Rank
	% Bombette
	LIO 	A1, *Flag_Rogue_Bombette
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2BC % Bombette Byte Flag
	LIO 	A1, *Rogue_Bombette_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2BD % Bombette Rank
	% Parakarry
	LIO 	A1, *Flag_Rogue_Parakarry
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2C4 % Parakarry Byte Flag
	LIO 	A1, *Rogue_Parakarry_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2C5 % Parakarry Rank
	% Bow
	LIO 	A1, *Flag_Rogue_Bow
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2EC % Bow Byte Flag
	LIO 	A1, *Rogue_Bow_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2ED % Bow Rank
	% Watt
	LIO 	A1, *Flag_Rogue_Watt
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2D4 % Watt Byte Flag
	LIO 	A1, *Rogue_Watt_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2D5 % Watt Rank
	% Sushie
	LIO 	A1, *Flag_Rogue_Sushie
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2DC % Sushie Byte Flag
	LIO 	A1, *Rogue_Sushie_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2DD % Sushie Rank
	% Lakilester
	LIO 	A1, *Flag_Rogue_Lakilester
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2E4 % Lakilester Byte Flag
	LIO 	A1, *Rogue_Lakilester_Rank
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2E5 % Lakilester Rank
	POP	RA, V0, A1, A2
	JR RA
	NOP
}

	#new:Function $RestoreMariosStats
{
	PUSH	RA, V0, A1, A2
	% HP
	LIO 	A1, *Rogue_MaxHP
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F293 % MaxHP1
	SAB		V0, 8010F294 % MaxHP2
	% FP
	LIO 	A1, *Rogue_MaxFP
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F296 % MaxFP1
	SAB		V0, 8010F297 % MaxFP2
	% Boots
	LIO 	A1, *Rogue_Boots
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F290
	% Hammer
	LIO 	A1, *Rogue_Hammer
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F291
	% Coins
	LIO 	A1, *Rogue_CoinsSaved1
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F29C % 1st Byte
	LIO 	A1, *Rogue_CoinsSaved2
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F29D % 2nd Byte
	% Sack
	LIO 	A1, *Flag_Rogue_Sack
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F2AE
	POP		RA, V0, A1, A2
	JR		RA
	NOP
}

	#new:Function $RestoreItems
{
	PUSH	RA, V0, A1, A2
	% Slot 1
	LIO 	A1, *Rogue_ItemSlot1
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F445
	 % Slot 2
	LIO 	A1, *Rogue_ItemSlot2
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F447
	% Slot 3
	LIO 	A1, *Rogue_ItemSlot3
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F449
	% Slot 4
	LIO 	A1, *Rogue_ItemSlot4
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F44B
	% Slot 5
	LIO 	A1, *Rogue_ItemSlot5
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F44D
	% Slot 6
	LIO 	A1, *Rogue_ItemSlot6
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F44F
	% Slot 7
	LIO 	A1, *Rogue_ItemSlot7
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F451
	% Slot 8
	LIO 	A1, *Rogue_ItemSlot8
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F453
	% Slot 9
	LIO 	A1, *Rogue_ItemSlot9
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F455
	% Slot 10
	LIO 	A1, *Rogue_ItemSlot10
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F457
	% Slot 11
	LIO 	A1, *Rogue_ItemSlot11
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F459
	% Slot 12
	LIO 	A1, *Rogue_ItemSlot12
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F45B
	% Slot 13
	LIO 	A1, *Rogue_ItemSlot13
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F45D
	% Slot 14
	LIO 	A1, *Rogue_ItemSlot14
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F45F
	% Slot 15
	LIO 	A1, *Rogue_ItemSlot15
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F461
	% Slot 16
	LIO 	A1, *Rogue_ItemSlot16
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F463
	% Slot 17
	LIO 	A1, *Rogue_ItemSlot17
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F465
	% Slot 18
	LIO 	A1, *Rogue_ItemSlot18
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F467
	% Slot 19
	LIO 	A1, *Rogue_ItemSlot19
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F469
	% Slot 20
	LIO 	A1, *Rogue_ItemSlot20
	JAL 	~Func:get_variable
	NOP
	SAB		V0, 8010F46B
	POP		RA, V0, A1, A2
	JR		RA
	NOP
}

	#new:Function $ResetKeyStarPiecesBox % Set the key box to his start state
{
	SAW		R0, $KeyStarPieces_BoxData
	SAW		R0, $KeyStarPieces_BoxDataExtra
	JR		RA
	NOP
}

	#new:Function $RespawnPartner2 % Load Mario's partner before entering Rogue and spawn it
{
	PUSH	RA, A1, A2, V0
	ADDIU	V0, R0, 0
   	SLL     V0, V0, 18
   	JAL     800EB168
   	SRA     A0, V0, 18
   	POP		RA, A1, A2, V0
   	JR      RA
	ADDIU   V0, R0, 2
}

	#new:Function $Function_SaveCurrentPartners
{
	PUSH	RA, V0, A1, A2
	LABU 	A2, 8010F2AC % Goombario Byte
	LIO 	A1, *Flag_Rogue_Goombario
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2B4 % Kooper Byte
	LIO 	A1, *Flag_Rogue_Kooper
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2BC % Bombette Byte
	LIO 	A1, *Flag_Rogue_Bombette
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2C4 % Parakarry Byte
	LIO 	A1, *Flag_Rogue_Parakarry
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2EC % Bow Byte
	LIO 	A1, *Flag_Rogue_Bow
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2D4 % Watt Byte
	LIO 	A1, *Flag_Rogue_Watt
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2DC % Sushie Byte
	LIO 	A1, *Flag_Rogue_Sushie
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2E4 % Lakilester Byte
	LIO 	A1, *Flag_Rogue_Lakilester
	JAL 	~Func:set_variable
	NOP
	JPOP	RA, V0, A1, A2
}

	#new:Function $Function_SavePartnersRanks
{
	PUSH	RA, V0, A1, A2
	LABU 	A2, 8010F2AD % Goombario Rank
	LIO 	A1, *Rogue_Goombario_Rank
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2B5 % Kooper Rank
	LIO 	A1, *Rogue_Kooper_Rank
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2BD % Bombette Rank
	LIO 	A1, *Rogue_Bombette_Rank
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2C5 % Parakarry Rank
	LIO 	A1, *Rogue_Parakarry_Rank
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2ED % Bow Rank
	LIO 	A1, *Rogue_Bow_Rank
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2D5 % Watt Rank
	LIO 	A1, *Rogue_Watt_Rank
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2DD % Sushie Rank
	LIO 	A1, *Rogue_Sushie_Rank
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2E5 % Lakilester Rank
	LIO 	A1, *Rogue_Lakilester_Rank
	JAL 	~Func:set_variable
	NOP
	JPOP	RA, V0, A1, A2
}

	#new:Function $SaveCurrentPartner
{
	PUSH 	RA, A1, A2, V0
	LABU 	A2, 8010F2A2 % Current Partner
	LIO 	A1, *Rogue_LastPartner
	JAL 	~Func:set_variable
	NOP
	JPOP 	RA, A1, A2, V0
}

	#new:Function $Function_SaveMariosStats
{
	PUSH 	RA, A1, A2, V0
	LABU 	A2, 8010F293 % Max HP
	LIO 	A1, *Rogue_MaxHP
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F296 % Max FP
	LIO 	A1, *Rogue_MaxFP
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F290 % Boots
	LIO 	A1, *Rogue_Boots
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F291 % Hammer
	LIO 	A1, *Rogue_Hammer
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F29C % Coins % 1st Byte
	LIO 	A1, *Rogue_CoinsSaved1
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F29D % Coins % 2nd Byte
	LIO 	A1, *Rogue_CoinsSaved2
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F2AE % Strange Sack
	LIO 	A1, *Flag_Rogue_Sack
	JAL 	~Func:set_variable
	NOP
	JPOP 	RA, A1, A2, V0
}

	#new:Function $Function_SaveItems
{
	PUSH 	RA, A1, A2, V0
	LABU 	A2, 8010F445 % Item Slot 1
	LIO 	A1, *Rogue_ItemSlot1
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F447 % Item Slot 2
	LIO 	A1, *Rogue_ItemSlot2
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F449 % Item Slot 3
	LIO 	A1, *Rogue_ItemSlot3
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F44B % Item Slot 4
	LIO 	A1, *Rogue_ItemSlot4
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F44D % Item Slot 5
	LIO 	A1, *Rogue_ItemSlot5
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F44F % Item Slot 6
	LIO 	A1, *Rogue_ItemSlot6
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F451 % Item Slot 7
	LIO 	A1, *Rogue_ItemSlot7
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F453 % Item Slot 8
	LIO 	A1, *Rogue_ItemSlot8
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F455 % Item Slot 9
	LIO 	A1, *Rogue_ItemSlot9
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F457 % Item Slot 10
	LIO 	A1, *Rogue_ItemSlot10
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F459 % Item Slot 11
	LIO 	A1, *Rogue_ItemSlot11
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F45B % Item Slot 12
	LIO 	A1, *Rogue_ItemSlot12
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F45D % Item Slot 13
	LIO 	A1, *Rogue_ItemSlot13
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F45F % Item Slot 14
	LIO 	A1, *Rogue_ItemSlot14
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F461 % Item Slot 15
	LIO 	A1, *Rogue_ItemSlot15
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F463 % Item Slot 16
	LIO 	A1, *Rogue_ItemSlot16
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F465 % Item Slot 17
	LIO 	A1, *Rogue_ItemSlot17
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F467 % Item Slot 18
	LIO 	A1, *Rogue_ItemSlot18
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F469 % Item Slot 19
	LIO 	A1, *Rogue_ItemSlot19
	JAL 	~Func:set_variable
	NOP
	LABU 	A2, 8010F46B % Item Slot 20
	LIO 	A1, *Rogue_ItemSlot20
	JAL 	~Func:set_variable
	NOP
	JPOP 	RA, A1, A2, V0
}

	#new:Function $Function_DisablePartnersAndRanks
{
	SAH		R0, 8010F2AC % Goombario
	SAH		R0, 8010F2B4 % Kooper
	SAH		R0, 8010F2BC % Bombette
	SAH		R0, 8010F2C4 % Parakarry
	SAH		R0, 8010F2EC % Bow
	SAH		R0, 8010F2D4 % Watt
	SAH		R0, 8010F2DC % Sushie
	SAH		R0, 8010F2E4 % Lakilester
	JR RA
	NOP
}

	#new:Function $Function_SetMariosStats
{
	ADDIU 	T0, R0, 5
	ADDIU 	T1, R0, A
	SAB		T1, 8010F292 % Current HP
	SAB		T1, 8010F293 % Max HP1
	SAB		T1, 8010F294 % Max HP2
	SAB		T0, 8010F295 % Current FP
	SAB		T0, 8010F296 % Max FP1
	SAB		T0, 8010F297 % Max FP2
	SAB		R0, 8010F290 % Boots
	SAB		R0, 8010F291 % Hammer
	SAH		R0, 8010F29C % Coins
	SAB		R0, 8010F2AE % Strange Sack
	JR		RA
	NOP
}

	#new:Function $Function_ResetItems
{
	SAW		R0, 8010F444 % Item Slots 1-2
	SAW		R0, 8010F448 % Item Slots 3-4
	SAW		R0, 8010F44C % Item Slots 5-6
	SAW		R0, 8010F450 % Item Slots 7-8
	SAW		R0, 8010F454 % Item Slots 9-10
	SAW		R0, 8010F458 % Item Slots 11-12
	SAW		R0, 8010F45C % Item Slots 13-14
	SAW		R0, 8010F460 % Item Slots 15-16
	SAW		R0, 8010F464 % Item Slots 17-18
	SAW		R0, 8010F468 % Item Slots 19-20
	JR		RA
	NOP
}

	#new:Function $DispawnPartner
{
    PUSH	RA
    LW      V0, C (A0)
    LAB     A2, 8010F2A2
    JAL     ~Func:set_variable
    LW      A1, 0 (V0)
    JAL     800EB168
    DADDU   A0, R0, R0
    POP		RA
    JR      RA
	ADDIU   V0, R0, 2
}
	
#string $String_Settings_Start
{
[STYLE:INSPECT][...]
         - Game Settings -
Which behaviour do you want to
change?
[Func_04][END]
}

#string $String_Settings_Pipe
{
[STYLE:INSPECT][...]
How do you want the pipes to
react?
[Func_04][END]
}

#string $String_Settings_FloorCounter
{
[STYLE:INSPECT][...]
How do you want to display the
current floor counter?
[Func_04][END]
}

#string $String_Choice_Settings1
{
[STYLE:CHOICE:50:70:A0:30][...]
[DelayOff][Cursor:00][Option:00]Entering a Pipe
[Cursor:01][Option:01]Floor Counter
[Option:FF][DelayOn][SetCancel:02][EndChoice:02][END]
}

#string $String_Choice_Settings2
{
[STYLE:CHOICE:50:70:A0:30][...]
[DelayOff][Cursor:00][Option:00]After Landing
[Cursor:01][Option:01]Always
[Option:FF][DelayOn][SetCancel:02][EndChoice:02][END]
}

#string $String_Choice_Settings3
{
[STYLE:CHOICE:50:70:A0:30][...]
[DelayOff][Cursor:00][Option:00]Sign
[Cursor:01][Option:01]Top Pipe
[Option:FF][DelayOn][SetCancel:02][EndChoice:02][END]
}
