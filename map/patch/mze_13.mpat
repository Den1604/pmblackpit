#new:Header $Header
{
[MainScript] $Script_Main
[Background] 80200000
[EntryList] $EntryList
[EntryCount] 1
[MapTattle]  $Function_GetTattle
}

#new:Function_Init $Function_Init
{
PUSH 	RA, A0, A1
LIA 	     A0, 800B0CF0
LIA 	     A1, "tik_tex" 
JAL 	     ~Func:sprintf
RESERVED
COPY 	V0, R0
JPOP 	RA, A0, A1
}

#new:EntryList $EntryList
{
~Vec4f:Entry0
}

#new:Script_Main $Script_Main
{
Call    SetSpriteShading  	( FFFFFFFF )
Call    SetCamPerspective 	( .Cam:Default 00000003 00000019 00000010 00001000 )
Call    SetCamBGColor     	( .Cam:Default 0 0 0 )
Call    SetCamEnabled       ( .Cam:Default .True )
Call    SetCamLeadPlayer    ( .Cam:Default .False )
Exec    $Script_EnableTexPanning
Bind    $Script_LS_Vanilla    .Trigger:WallPressA ~Collider:Trigger_LS 00000001 00000000
Bind    $Script_LS_FP         .Trigger:WallPressA ~Collider:Trigger_FP 00000001 00000000
Bind    $Script_LS_Ultra      .Trigger:WallPressA ~Collider:Trigger_Ultra 00000001 00000000
Bind    $Script_Pool          .Trigger:WallPressA ~Collider:Trigger_Pool 00000001 00000000
Call    $ReadAddress     ( 8010F2B0 1 *Var[0] .False .False ) % Load LostedCoins
If *Var[0] == .False % player doesn't have coins losted
     Call EnableModel ( ~Model:pool_light .False )
EndIf
Call    MakeNpcs ( 1 $NpcGroupList_Sack )
Set	   *Var[0] $Script_MakeExits
Exec    EnterWalk
Wait    1
Return
End
}

#new:Script $Script_LS_Vanilla
{
Set  *Var[A] 0 % Life Shroom ID
Set  *Var[B] 200` % Cost
ExecWait $Script_LS_Main
Return
End
}

#new:Script $Script_LS_FP
{
Set  *Var[A] 1 % Life Shroom ID
Set  *Var[B] 300` % Cost
ExecWait $Script_LS_Main
Return
End
}

#new:Script $Script_LS_Ultra
{
Set  *Var[A] 2 % Life Shroom ID
Set  *Var[B] 400` % Cost
ExecWait $Script_LS_Main
Return
End
}

#new:Script $Script_LS_Main
{
Call      DisablePlayerInput ( .True )
% Check if is the 1st time trying to buy a life shroom
If   *Flag_LifeShrooms_Tutorial == .False
     Call	     ShowMessageAtScreenPos ( $String_LS_Tutorial A0 28 )
     Call      DisablePlayerInput ( .False )
     Set       *Flag_LifeShrooms_Tutorial .True
     Return
EndIf
Call      SetMessageValue ( *Var[B] 0 )
% Check if the player already have one life shroom
Call FindItem ( .Item:LifeShroom *Var[0] ) % LS
Call FindItem ( 00A0 *Var[1] ) % LS FP
Call FindItem ( 009F *Var[2] ) % LS Ultra
Set  *Var[3] .False
% != -1` means you had that life shroom
If *Var[0] != -1`
     Set  *Var[3] .True
EndIf
If *Var[1] != -1`
     Set  *Var[3] .True
EndIf
If *Var[2] != -1`
     Set  *Var[3] .True
EndIf
If *Var[3] == .True
     Call	     ShowMessageAtScreenPos ( $String_LS_Error_OnlyOne A0 28 )
     Call      DisablePlayerInput ( .False )
     Return
EndIf
% Check if the player have the star pieces needed
Call      $ReadAddress    ( 8035612C 1 *Var[2] .False .False ) % load star pieces
If *Var[2] < *Var[B] % you can't buy this
     Call	     ShowMessageAtScreenPos ( $String_LS_Error_Money A0 28 )
     Call      DisablePlayerInput ( .False )
     Return
Else
     Call	     ShowMessageAtScreenPos ( $String_LS_Buy1 A0 28 )
EndIf
Call    ShowChoice    ( 001E001D ) % yes no
If  *Var[0] != 0 % no
     Call    CloseMessage
     Call    DisablePlayerInput ( .False )
     Return
EndIf
Call      CloseMessage
% Check if the player have available item slots
Call     $Function_GetEmptyItemSlots
If  *Var[0]  ==  .False
     Call	     ShowMessageAtScreenPos ( $String_LS_Error_Full A0 28 )
     Call      DisablePlayerInput ( .False )
     Return
EndIf
SetTimescale *Fixed[15.0]
Loop *Var[B] % Amount to substract
     Call    $ReadAddress   ( 8035612C 1 *Var[0] 0 .False ) % get star pieces
     Sub     *Var[0] 1 % substract 1 by 1
     Call    $WriteAddress  ( 8035612C 1 *Var[0] 0 .False )
     Call    PlaySound ( 0215 )
     Wait    1
EndLoop
SetTimescale *Fixed[1.0]
% Give Life Shroom
Switch *Var[A]
     Case == 0 % Life Shroom
          Set  *Flag_Maze_LSBuyed .True
          Set  *Var[3] .Item:LifeShroom
          Call $WriteAddress    ( 8010F2A4 0 0 .False .False ) % Current Life Shroom ID
     Case == 1 % Life Shroom FP
          Set  *Flag_Maze_LS_FPBuyed .True
          Set  *Var[3] 00A0
          Call $WriteAddress    ( 8010F2A4 0 1 .False .False ) % Current Life Shroom ID
     Case == 2 % Ultra Life Shroom
          Set  *Flag_Maze_ULSBuyed .True
          Set  *Var[3] 009F
          Call $WriteAddress    ( 8010F2A4 0 2 .False .False ) % Current Life Shroom ID
EndSwitch
% Spawn Item
Call	     GetPlayerPos   ( *Var[0] *Var[1] *Var[2] )
Add		*Var[1] 80`
Call      PlayEffect     ( ~FX:EnergyWaveIn:Blue *Var[0] *Var[1] *Var[2] 1 20` )
Call	     PlaySound	     ( 208F ) % Charging
Wait	     35`
Call      PlayEffect     ( ~FX:EnergyWaveOut:Red *Var[0] *Var[1] *Var[2] 1 20` )
Call      PlayEffect     ( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] 20` )
Call	     PlaySound	     ( 0241 ) % Focus
Call	     DropItemEntity ( *Var[3] *Var[0] *Var[1] *Var[2] .ItemSpawnMode:Fall_NeverVanish .False )
Wait      20`
Set *Var[0] *Flag_Maze_LSBuyed
Add *Var[0] *Flag_Maze_LS_FPBuyed
Add *Var[0] *Flag_Maze_ULSBuyed
If *Var[0] == 3
     Set *Flag_Cheev_Dungeon_06 .True
EndIf
Call      DisablePlayerInput ( .False )
Return
End
}

#new:Function $Function_GetEmptyItemSlots
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  SW        RA, 14 (SP)
    C:  JAL       ~Func:get_item_empty_count
   10:  DADDU     S0, A0, R0
   14:  SW        V0, 84 (S0)
   18:  LW        RA, 14 (SP)
   1C:  LW        S0, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#string $String_LS_Error_OnlyOne
{
[STYLE:INSPECT][...]
You can hold [PushColor][Color:07]only one[PopColor] Life Shroom
at the same time.
[WAIT][NEXT][...]
Use your current Life Shroom
before buying another one.
[WAIT][END]
}

#string $String_LS_Error_Money
{
[STYLE:INSPECT][...]
This Life Shroom has a cost of [PushColor][Color:07][Var:00]
Star Pieces[PopColor].
[WAIT][NEXT][...]
You don't have enough Star Pieces.
[WAIT][END]
}

#string $String_LS_Error_Full
{
[STYLE:INSPECT][...]
Currently you [PushColor][Color:07]don't have any more space
your items inventory[PopColor].
[WAIT][END]
}

#string $String_LS_Buy1
{
[STYLE:INSPECT][...]
This Life Shroom has a cost of
[PushColor][Color:07][Var:00][PopColor] Star Pieces.
[WAIT][NEXT][...]
Do you want to buy it?
[Func_04][END]
}

#string $String_LS_Tutorial
{
[STYLE:INSPECT][...]
You can feel a powerful energy
emanating from these pillars.
[WAIT][NEXT][...]
Use the power of these pillars
along with the one from your
[PushColor][Color:07]Star Pieces[PopColor] to create [PushColor][Color:07]different
kinds of Life Shrooms[PopColor].
[WAIT][NEXT][...]
Just keep in mind you can carry
[PushColor][Color:07]only one[PopColor] Life Shroom at a time.
[WAIT][NEXT][...]
Life Shrooms can be used on any
place [PushColor][Color:07]except[PopColor] inside the Roguelike
Pit.
[WAIT][END]
}

#new:Script $Script_Pool
{
Call      DisablePlayerInput ( .True )
% Check if the player have coins lost
Call    $ReadAddress     ( 8010F2B0 1 *Var[2] .False .False ) % Load LostedCoins
If *Var[2] == .False % player doesn't have coins losted
     Call	     ShowMessageAtScreenPos ( $String_Pool_NotLost A0 28 )
     Set       *Flag_Maze_Pool .True
     Call      DisablePlayerInput ( .False )
     Return
EndIf
% Is the 1st time the player interact with the pool
If   *Flag_Maze_Pool == .False
     Call	     ShowMessageAtScreenPos ( $String_Pool_NotLost A0 28 )
     Set       *Flag_Maze_Pool .True
EndIf
% Get Star Pieces needed
Switch *Var[2] % coins losted
     Case > 8000`
          Set *Var[1] 3200`
     Case > 6000`
          Set *Var[1] 2500`
     Case > 4000`
          Set *Var[1] 1500`
     Case > 2000`
          Set *Var[1] 800`
     Case > 1000`
          Set *Var[1] 400`
     Case > 500`
          Set *Var[1] 200`
     Case > 250`
          Set *Var[1] 150`
     Case <= 250`
          Set *Var[1] 100`
EndSwitch
% Var1 = Star Pieces needed
Call      $ReadAddress    ( 8035612C 1 *Var[3] .False .False ) % load star pieces
Call      SetMessageValue ( *Var[1] 0 )
If   *Var[3] < *Var[1] % don't have enough star pieces
     Call	     ShowMessageAtScreenPos ( $String_Pool_Error A0 28 )
     Call      DisablePlayerInput ( .False )
     Return
EndIf
Call	     ShowMessageAtScreenPos ( $String_Pool_Confirmation A0 28 )
Call      ShowChoice    ( 001E001D ) % yes no
If  *Var[0] != 0 % no
     Call    CloseMessage
     Call    DisablePlayerInput ( .False )
     Return
EndIf
Call      CloseMessage
Wait      15`
SetTimescale *Fixed[15.0]
Loop *Var[1] % Amount to substract
     Call    $ReadAddress   ( 8035612C 1 *Var[0] 0 .False ) % get star pieces
     Sub     *Var[0] 1 % substract 1 by 1
     Call    $WriteAddress  ( 8035612C 1 *Var[0] 0 .False ) % get star pieces
     Call    PlaySound ( 0215 )
     Wait    1
EndLoop
SetTimescale *Fixed[1.0]
Call	     SetNpcVar	( 40 0 .True ) % Make the sack appear
Call      ModifyColliderFlags ( .False ~Collider:Entry0 7FFFFE00 ) % Disable Exit
Wait      10`
Unbind
Call      DisablePlayerInput ( .False )
Return
End
}

#string $String_Pool_NotLost
{
[STYLE:INSPECT][...]
When you think it's impossible for
you to get back [PushColor][Color:07]something you
lost[PopColor]...
[WAIT][NEXT][...]
...use the power of your [PushColor][Color:07]Star
Pieces[PopColor] to find that [PushColor][Color:07]lost gold[PopColor].
[WAIT][END]
}

#string $String_Pool_Confirmation
{
[STYLE:INSPECT][...]
Do you want to get your coins
back for [PushColor][Color:07][Var:00][PopColor] Star Pieces?
[Func_04][END]
}

#string $String_Pool_Error
{
[STYLE:INSPECT][...]
You can get your coins back for
the price of [PushColor][Color:07][Var:00][PopColor] Star Pieces.
[WAIT][NEXT][...]
Currently you don't have enough
Star Pieces.
[WAIT][END]
}

%%
% Money Bag
%%

#new:NpcGroupList $NpcGroupList_Sack
{
00000002 $NpcGroup_MoneyBag  00000000
00000000 00000000 00000000
}

#new:NpcGroup $NpcGroup_MoneyBag
{
00000040 $NPC_Settings_Sack ~Vec3f:NPC_Sack
00440C0D $Script_Init_Bag 00000000 00000000 0000010E
~NoItems ~NoHP ~NoFP ~NoCoinBonus 
~Movement:NPC_Sack
% animations
00ED0001 00ED0002 00ED0003 00ED0003 00ED0001 00ED0001 00ED0001 00ED0001 
00ED0001 00ED0002 00ED0001 00ED0002 00ED0001 00ED0001 00ED0001 00ED0001 
00000001 00000000 00000000 00000000
% 21540C0C % Toogle HitBox Visibility
% $NpcGroup_MoneyBag[1F0]
00000041 $NPC_Settings_Sack ~Vec3f:NPC_Sack
21544C0C $Script_Init_Bag_HitBox 00000000 00000000 0000010E
~NoItems ~NoHP ~NoFP ~NoCoinBonus ~NoMovement
00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 
00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 00ED0001 
00000001 00000000 00000000 00000000
}
	
#new:NpcSettings $NPC_Settings_Sack
{
00000000 00180028 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 000D0000 
}

#define .Npc_Sack	00000040

#new:Script $Script_Init_Bag
{
     Call     SetSelfVar 	( 0 0 )
	Call     BindNpcIdle 	( .Npc:Self $NPC_Sack_AnimationStart )
	Return
	End
}
	
#new:Script $NPC_Sack_AnimationStart
{
     Loop     
          Call     GetNpcVar 	( .Npc:Self 0 *Var[0] )
          If  *Var[0]  ==  .True
               BreakLoop
          EndIf
          Wait 1
     EndLoop
     Call	DisablePlayerInput ( .True )
     Exec	$Script_Sack_AppearsAnimation
     Return
     End
}

#new:Script $Script_Sack_AppearsAnimation
{
     Thread
     % Fade light from the pool
          Call    MakeLerp    	( 0 -70 30` .Easing:QuadraticIn )
          Loop     
               Call     UpdateLerp
               Call     TranslateModel ( ~Model:pool_light 0 *Var[0] 0 )
               Wait     1
               If  *Var[1]  ==  .False
                    Call      EnableModel    ( ~Model:pool_light .False )
                    BreakLoop
               EndIf
          EndLoop
     EndThread
     % Jump from the pool
     Wait      10`
     Call      SetNpcFlagBits ( .Npc:Self 00000100 .True ) % ignore player's collision
     Call	     SetNpcPos      ( .Npc:Self 74` 0 97` ) % center of the pool
     Call      GetNpcPos      ( .Npc:Self *Var[0] *Var[1] *Var[2] )
	Sub	     *Var[0] 95`
     Call	     PlaySoundAtNpc	     ( .Npc:Self 2005 0 ) % Parakarry's Kick
     Call	     PlaySoundAtNpc	     ( .Npc:Self 0333 0 ) % Fuzzy's Jump
     Call      SetNpcJumpscale 	( .Npc:Self *Fixed[1.0] )
     Call      NpcJump1    	     ( .Npc:Self *Var[0] *Var[1] *Var[2] 21` )
     Wait	     15`
     Call      SetNpcFlagBits ( .Npc:Self 00000100 .False )
     Call	     DisablePlayerInput   ( .False )
	Call	     BindNpcAI ( .Npc:Self $Script_NpcAI_MoneySack ) % Bind Sack AI when his animation just finished
	Return
	End
}
	
#new:Function $Function_LoadCoinsLosted
{
PUSH  RA, A1, A2, V0
LAHU	 A2, 8010F2B0 % Coins Losted
LIO   A1, *Var[1]
JAL   ~Func:set_variable 
RESERVED
JPOP  RA, A1, A2, V0
}
	
#new:Function $Function_ResetCoinsLosted
{
SAH		R0, 8010F2B0 % Coins Losted
JR		RA
ADDIU 	V0, R0, 2
}
	
%% Money Sack - NPC AI
	
#new:AISettings $AISettings_MoneySack
{
2.5 % move speed
50` % move time
15` % wait time
100.0 % alert radius
0.0
3`
3.9 % chase speed
20`
1`
180.0 % chase radius
0.0
1`
}

#new:Script $Script_NpcAI_MoneySack
{
	Thread	% Set HitBox coordinates as Sack coordinates until you attack him
		Loop
			Call	GetNpcPos	( .Npc:Self *Var[0] *Var[1] *Var[2] )
			Call	SetNpcPos	( 41 *Var[0] *Var[1] *Var[2] )
			Wait	1
			Call	$Function_LoadCoinsLosted ( *Var[1] )
			If	*Var[1] == .False
				BreakLoop
			EndIf
		EndLoop
	EndThread
	Call     $Function_NpcAI_MoneySack ( $AISettings_MoneySack )
	Return
	End
}
	
#new:JumpTable $JumpTable_80242448
{
	$Function_NpcAI_MoneySack[150] $Function_NpcAI_MoneySack[160] $Function_NpcAI_MoneySack[178] $Function_NpcAI_MoneySack[188] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[1A0] $Function_NpcAI_MoneySack[1B0] 
	$Function_NpcAI_MoneySack[1C8] $Function_NpcAI_MoneySack[1D8] $Function_NpcAI_MoneySack[1F0] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] 
	$Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[210] $Function_NpcAI_MoneySack[208] 
}

#new:Function $Function_NpcAI_MoneySack
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 40 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 48 (SP)
   10:  SW        S5, 44 (SP)
   14:  SW        S3, 3C (SP)
   18:  SW        S2, 38 (SP)
   1C:  SW        S1, 34 (SP)
   20:  SW        S0, 30 (SP)
   24:  LW        S1, 148 (S4)
   28:  LH        A0, 8 (S1)
   2C:  JAL       ~Func:get_npc_unsafe
   30:  DADDU     S0, A1, R0
   34:  LW        V1, C (S4)
   38:  DADDU     A0, S4, R0
   3C:  LW        A1, 0 (V1)
   40:  JAL       ~Func:get_variable
   44:  DADDU     S5, V0, R0
   48:  SW        R0, 10 (SP)
   4C:  LW        V1, D0 (S1)
   50:  LW        V1, 30 (V1)
   54:  SW        V1, 14 (SP)
   58:  LW        V1, D0 (S1)
   5C:  LW        V1, 1C (V1)
   60:  SW        V1, 18 (SP)
   64:  LW        V1, D0 (S1)
   68:  LW        V1, 24 (V1)
   6C:  SW        V1, 1C (SP)
   70:  LW        V1, D0 (S1)
   74:  LW        V1, 28 (V1)
   78:  ADDIU     S3, SP, 10
   7C:  SW        V1, 20 (SP)
   80:  LW        V1, D0 (S1)
   84:  LIF       F0, 100.0
   8C:  LW        V1, 2C (V1)
   90:  DADDU     S2, V0, R0
   94:  SWC1      F0, 28 (SP)
   98:  SH        R0, 2C (SP)
   9C:  BNE       S0, R0, .oB4
   A0:  SW        V1, 24 (SP)
   A4:  LW        V0, B0 (S1)
   A8:  ANDI      V0, V0, 4
   AC:  BEQ       V0, R0, .o12C
   B0:  NOP
        .oB4
   B4:  ADDIU     A0, R0, F7FF
   B8:  SW        R0, 70 (S4)
   BC:  SH        R0, 8E (S5)
   C0:  LW        V0, CC (S1)
   C4:  LW        V1, 0 (S5)
   C8:  LW        V0, 0 (V0)
   CC:  AND       V1, V1, A0
   D0:  SW        V1, 0 (S5)
   D4:  SW        V0, 28 (S5)
   D8:  LW        V0, D0 (S1)
   DC:  LW        V0, 34 (V0)
   E0:  BNEL      V0, R0, .oF8
   E4:  ADDIU     V0, R0, FDFF
   E8:  ORI       V0, V1, 200
   EC:  ADDIU     V1, R0, FFF7
   F0:  BEQ       R0, R0, .o100
   F4:  AND       V0, V0, V1
        .oF8
   F8:  AND       V0, V1, V0
   FC:  ORI       V0, V0, 8
        .o100
  100:  SW        V0, 0 (S5)
  104:  LW        V0, B0 (S1)
  108:  ANDI      V0, V0, 4
  10C:  BEQ       V0, R0, .o12C
  110:  ADDIU     V0, R0, 63
  114:  SW        V0, 70 (S4)
  118:  SW        R0, 74 (S4)
  11C:  LW        V0, B0 (S1)
  120:  ADDIU     V1, R0, FFFB
  124:  AND       V0, V0, V1
  128:  SW        V0, B0 (S1)
        .o12C
  12C:  LW        V1, 70 (S4)
  130:  SLTIU     V0, V1, 64
  134:  BEQ       V0, R0, .o210
  138:  SLL       V0, V1, 2
  13C:  LTW       V0, V0 ($JumpTable_80242448)
  148:  JR        V0
  14C:  NOP
% LBL: from $JumpTable_80242448 , entry 0`
  150:  DADDU     A0, S4, R0
  154:  DADDU     A1, S2, R0
  158:  JAL       800495A0
  15C:  DADDU     A2, S3, R0
% LBL: from $JumpTable_80242448 , entry 1`
  160:  DADDU     A0, S4, R0
  164:  DADDU     A1, S2, R0
  168:  JAL       800496B8
  16C:  DADDU     A2, S3, R0
  170:  BEQ       R0, R0, .o210
  174:  NOP
% LBL: from $JumpTable_80242448 , entry 2`
  178:  DADDU     A0, S4, R0
  17C:  DADDU     A1, S2, R0
  180:  JAL       80049B44
  184:  DADDU     A2, S3, R0
% LBL: from $JumpTable_80242448 , entry 3`
  188:  DADDU     A0, S4, R0
  18C:  DADDU     A1, S2, R0
  190:  JAL       80049C04
  194:  DADDU     A2, S3, R0
  198:  BEQ       R0, R0, .o210
  19C:  NOP
% LBL: from $JumpTable_80242448 , entry 10`
  1A0:  DADDU     A0, S4, R0
  1A4:  DADDU     A1, S2, R0
  1A8:  JAL       80049E3C
  1AC:  DADDU     A2, S3, R0
% LBL: from $JumpTable_80242448 , entry 11`
  1B0:  DADDU     A0, S4, R0
  1B4:  DADDU     A1, S2, R0
  1B8:  JAL       80049ECC
  1BC:  DADDU     A2, S3, R0
  1C0:  BEQ       R0, R0, .o210
  1C4:  NOP
% LBL: from $JumpTable_80242448 , entry 12`
  1C8:  DADDU     A0, S4, R0
  1CC:  DADDU     A1, S2, R0
  1D0:  JAL       $Function_80240260
  1D4:  DADDU     A2, S3, R0
% LBL: from $JumpTable_80242448 , entry 13`
  1D8:  DADDU     A0, S4, R0
  1DC:  DADDU     A1, S2, R0
  1E0:  JAL       $Function_80240844
  1E4:  DADDU     A2, S3, R0
  1E8:  BEQ       R0, R0, .o210
  1EC:  NOP
% LBL: from $JumpTable_80242448 , entry 14`
  1F0:  DADDU     A0, S4, R0
  1F4:  DADDU     A1, S2, R0
  1F8:  JAL       $Function_802409A8
  1FC:  DADDU     A2, S3, R0
  200:  BEQ       R0, R0, .o210
  204:  NOP
% LBL: from $JumpTable_80242448 , entry 99`
  208:  JAL       8004A73C
  20C:  DADDU     A0, S4, R0
% LBL: from $JumpTable_80242448 , entry 98`
        .o210
  210:  LW        RA, 48 (SP)
  214:  LW        S5, 44 (SP)
  218:  LW        S4, 40 (SP)
  21C:  LW        S3, 3C (SP)
  220:  LW        S2, 38 (SP)
  224:  LW        S1, 34 (SP)
  228:  LW        S0, 30 (SP)
  22C:  DADDU     V0, R0, R0
  230:  JR        RA
  234:  ADDIU     SP, SP, 50
}
  
#new:Function $Function_80240260
{
    0:  ADDIU     SP, SP, FF68
    4:  SW        S6, 60 (SP)
    8:  DADDU     S6, A0, R0
    C:  SW        RA, 64 (SP)
   10:  SW        S5, 5C (SP)
   14:  SW        S4, 58 (SP)
   18:  SW        S3, 54 (SP)
   1C:  SW        S2, 50 (SP)
   20:  SW        S1, 4C (SP)
   24:  SW        S0, 48 (SP)
   28:  SDC1      F30, 90 (SP)
   2C:  SDC1      F28, 88 (SP)
   30:  SDC1      F26, 80 (SP)
   34:  SDC1      F24, 78 (SP)
   38:  SDC1      F22, 70 (SP)
   3C:  SDC1      F20, 68 (SP)
   40:  LW        S2, 148 (S6)
   44:  DADDU     S1, A1, R0
   48:  LH        A0, 8 (S2)
   4C:  JAL       ~Func:get_npc_unsafe
   50:  DADDU     S5, A2, R0
   54:  LW        A0, 20 (S1)
   58:  DADDU     S0, V0, R0
   5C:  SRL       V1, A0, 1F
   60:  ADDU      A0, A0, V1
   64:  SRA       A0, A0, 1
   68:  JAL       ~Func:rand_int
   6C:  ADDIU     A0, A0, 1
   70:  LW        V1, 20 (S1)
   74:  LWC1      F12, 38 (S0)
   78:  SRL       A0, V1, 1F
   7C:  ADDU      V1, V1, A0
   80:  SRA       V1, V1, 1
   84:  ADDU      V1, V1, V0
   88:  SH        V1, 8E (S0)
   8C:  LW        V0, CC (S2)
   90:  LWC1      F14, 40 (S0)
   94:  LW        V0, C (V0)
   98:  SW        V0, 28 (S0)
   9C:  LWC1      F0, 18 (S1)
   A0:  LAW       V0, 800F7B30
   A8:  SWC1      F0, 18 (S0)
   AC:  LW        A2, 28 (V0)
   B0:  LW        A3, 30 (V0)
   B4:  JAL       80029C80
   B8:  DADDU     S3, R0, R0
   BC:  LIF       F12, 180.0
   C4:  JAL       ~Func:clamp_angle
   C8:  ADD.S     F12, F0, F12
   CC:  MOV.S     F20, F0
   D0:  LWC1      F12, C (S0)
   D4:  JAL       ~Func:get_clamped_angle_diff
   D8:  MOV.S     F14, F20
   DC:  MOV.S     F2, F0
   E0:  LW        V0, 1C (S1)
   E4:  ABS.S     F0, F2
   E8:  MTC1      V0, F4
   EC:  NOP
   F0:  CVT.S.W   F4, F4
   F4:  C.LT.S    F4, F0
   F8:  NOP
   FC:  BC1F      .o134
  100:  NOP
  104:  MTC1      R0, F0
  108:  LWC1      F20, C (S0)
  10C:  C.LT.S    F2, F0
  110:  NOP
  114:  BC1F      .o130
  118:  SUBU      V0, R0, V0
  11C:  MTC1      V0, F0
  120:  NOP
  124:  CVT.S.W   F0, F0
  128:  BEQ       R0, R0, .o134
  12C:  ADD.S     F20, F20, F0
        .o130
  130:  ADD.S     F20, F20, F4
        .o134
  134:  JAL       ~Func:clamp_angle
  138:  MOV.S     F12, F20
  13C:  LIA       S4, 800F7B30
  144:  LWC1      F12, 38 (S0)
  148:  LWC1      F14, 40 (S0)
  14C:  LW        V0, 0 (S4)
  150:  LWC1      F2, 3C (S0)
  154:  SWC1      F0, C (S0)
  158:  MOV.S     F0, F12
  15C:  LW        A2, 28 (V0)
  160:  LW        A3, 30 (V0)
  164:  MOV.S     F4, F14
  168:  SWC1      F0, 20 (SP)
  16C:  SWC1      F2, 24 (SP)
  170:  JAL       80029C80
  174:  SWC1      F4, 28 (SP)
  178:  LIF       F12, 180.0
  180:  JAL       ~Func:clamp_angle
  184:  ADD.S     F12, F0, F12
  188:  LWC1      F2, 18 (S0)
  18C:  LIF       F29, 2.28125
  194:  MTC1      R0, F28
  198:  CVT.D.S   F2, F2
  19C:  MUL.D     F2, F2, F28
  1A0:  NOP
  1A4:  MOV.S     F20, F0
  1A8:  ADDIU     A1, SP, 20
  1AC:  ADDIU     A2, SP, 24
  1B0:  ADDIU     A3, SP, 28
  1B4:  SWC1      F20, 14 (SP)
  1B8:  CVT.S.D   F2, F2
  1BC:  SWC1      F2, 10 (SP)
  1C0:  LH        V0, A8 (S0)
  1C4:  MTC1      R0, F22
  1C8:  MTC1      V0, F0
  1CC:  NOP
  1D0:  CVT.S.W   F0, F0
  1D4:  SWC1      F0, 18 (SP)
  1D8:  LH        V0, A6 (S0)
  1DC:  MOV.S     F24, F22
  1E0:  MTC1      V0, F0
  1E4:  NOP
  1E8:  CVT.S.W   F0, F0
  1EC:  SWC1      F0, 1C (SP)
  1F0:  LW        A0, 80 (S0)
  1F4:  JAL       800DDCEC
  1F8:  MOV.S     F26, F24
  1FC:  BEQ       V0, R0, .o584
  200:  NOP
  204:  LWC1      F12, 38 (S0)
  208:  LWC1      F14, 40 (S0)
  20C:  LW        A2, 20 (SP)
  210:  JAL       ~Func:dist2D
  214:  LW        A3, 28 (SP)
  218:  MOV.S     F22, F0
  21C:  LWC1      F2, 38 (S0)
  220:  LWC1      F4, 3C (S0)
  224:  LIF       F30, 35.0
  22C:  LWC1      F0, 40 (S0)
  230:  ADD.S     F12, F20, F30
  234:  SWC1      F2, 2C (SP)
  238:  SWC1      F4, 30 (SP)
  23C:  JAL       ~Func:clamp_angle
  240:  SWC1      F0, 34 (SP)
  244:  LWC1      F2, 18 (S0)
  248:  CVT.D.S   F2, F2
  24C:  MUL.D     F2, F2, F28
  250:  NOP
  254:  SWC1      F0, 14 (SP)
  258:  CVT.S.D   F2, F2
  25C:  SWC1      F2, 10 (SP)
  260:  LH        V0, A8 (S0)
  264:  ADDIU     A1, SP, 2C
  268:  MTC1      V0, F0
  26C:  NOP
  270:  CVT.S.W   F0, F0
  274:  SWC1      F0, 18 (SP)
  278:  LH        V0, A6 (S0)
  27C:  ADDIU     A2, SP, 30
  280:  MTC1      V0, F0
  284:  NOP
  288:  CVT.S.W   F0, F0
  28C:  SWC1      F0, 1C (SP)
  290:  LW        A0, 80 (S0)
  294:  JAL       800DDCEC
  298:  ADDIU     A3, SP, 34
  29C:  BEQ       V0, R0, .o2BC
  2A0:  NOP
  2A4:  LWC1      F12, 38 (S0)
  2A8:  LWC1      F14, 40 (S0)
  2AC:  LW        A2, 2C (SP)
  2B0:  JAL       ~Func:dist2D
  2B4:  LW        A3, 34 (SP)
  2B8:  MOV.S     F24, F0
        .o2BC
  2BC:  LWC1      F0, 38 (S0)
  2C0:  LWC1      F2, 3C (S0)
  2C4:  LWC1      F4, 40 (S0)
  2C8:  SUB.S     F12, F20, F30
  2CC:  SWC1      F0, 38 (SP)
  2D0:  SWC1      F2, 3C (SP)
  2D4:  JAL       ~Func:clamp_angle
  2D8:  SWC1      F4, 40 (SP)
  2DC:  LWC1      F2, 18 (S0)
  2E0:  CVT.D.S   F2, F2
  2E4:  MUL.D     F2, F2, F28
  2E8:  NOP
  2EC:  SWC1      F0, 14 (SP)
  2F0:  CVT.S.D   F2, F2
  2F4:  SWC1      F2, 10 (SP)
  2F8:  LH        V0, A8 (S0)
  2FC:  ADDIU     A1, SP, 38
  300:  MTC1      V0, F0
  304:  NOP
  308:  CVT.S.W   F0, F0
  30C:  SWC1      F0, 18 (SP)
  310:  LH        V0, A6 (S0)
  314:  ADDIU     A2, SP, 3C
  318:  MTC1      V0, F0
  31C:  NOP
  320:  CVT.S.W   F0, F0
  324:  SWC1      F0, 1C (SP)
  328:  LW        A0, 80 (S0)
  32C:  JAL       800DDCEC
  330:  ADDIU     A3, SP, 40
  334:  BEQ       V0, R0, .o354
  338:  NOP
  33C:  LWC1      F12, 38 (S0)
  340:  LWC1      F14, 40 (S0)
  344:  LW        A2, 38 (SP)
  348:  JAL       ~Func:dist2D
  34C:  LW        A3, 40 (SP)
  350:  MOV.S     F26, F0
        .o354
  354:  LWC1      F12, 38 (S0)
  358:  LW        V0, 0 (S4)
  35C:  LWC1      F14, 40 (S0)
  360:  LW        A2, 28 (V0)
  364:  JAL       ~Func:dist2D
  368:  LW        A3, 30 (V0)
  36C:  LWC1      F0, 18 (S0)
  370:  LIF       F3, 1.9375
  378:  MTC1      R0, F2
  37C:  CVT.D.S   F0, F0
  380:  MUL.D     F2, F0, F2
  384:  NOP
  388:  CVT.D.S   F0, F22
  38C:  C.LT.D    F0, F2
  390:  NOP
  394:  BC1F      .o3E0
  398:  NOP
  39C:  CVT.D.S   F0, F24
  3A0:  C.LT.D    F0, F2
  3A4:  NOP
  3A8:  BC1F      .o3E0
  3AC:  NOP
  3B0:  CVT.D.S   F0, F26
  3B4:  C.LT.D    F0, F2
  3B8:  NOP
  3BC:  BC1F      .o3E0
  3C0:  DADDU     A0, S5, R0
  3C4:  SW        R0, 10 (SP)
  3C8:  LW        A2, C (S1)
  3CC:  LW        A3, 10 (S1)
  3D0:  JAL       800490B4
  3D4:  DADDU     A1, S2, R0
  3D8:  BNEL      V0, R0, .o3E0
  3DC:  ADDIU     S3, R0, 1
        .o3E0
  3E0:  BNE       S3, R0, .o58C
  3E4:  ADDIU     V0, R0, A
  3E8:  C.LT.S    F24, F22
  3EC:  NOP
  3F0:  BC1F      .o424
  3F4:  NOP
  3F8:  C.LT.S    F26, F24
  3FC:  NOP
  400:  BC1F      .o41C
  404:  NOP
  408:  LWC1      F12, 38 (S0)
  40C:  LWC1      F14, 40 (S0)
  410:  LW        A2, 20 (SP)
  414:  BEQ       R0, R0, .o508
  418:  LW        A3, 28 (SP)
        .o41C
  41C:  C.LT.S    F24, F22
  420:  NOP
        .o424
  424:  BC1F      .o450
  428:  NOP
  42C:  C.LT.S    F24, F26
  430:  NOP
  434:  BC1F      .o450
  438:  NOP
  43C:  LWC1      F12, 38 (S0)
  440:  LWC1      F14, 40 (S0)
  444:  LW        A2, 20 (SP)
  448:  BEQ       R0, R0, .o508
  44C:  LW        A3, 28 (SP)
        .o450
  450:  C.LT.S    F22, F24
  454:  NOP
  458:  BC1F      .o484
  45C:  NOP
  460:  C.LT.S    F26, F22
  464:  NOP
  468:  BC1F      .o484
  46C:  NOP
  470:  LWC1      F12, 38 (S0)
  474:  LWC1      F14, 40 (S0)
  478:  LW        A2, 2C (SP)
  47C:  BEQ       R0, R0, .o508
  480:  LW        A3, 34 (SP)
        .o484
  484:  C.LT.S    F26, F24
  488:  NOP
  48C:  BC1F      .o4B8
  490:  NOP
  494:  C.LT.S    F22, F26
  498:  NOP
  49C:  BC1F      .o4C0
  4A0:  NOP
  4A4:  LWC1      F12, 38 (S0)
  4A8:  LWC1      F14, 40 (S0)
  4AC:  LW        A2, 2C (SP)
  4B0:  BEQ       R0, R0, .o508
  4B4:  LW        A3, 34 (SP)
        .o4B8
  4B8:  C.LT.S    F22, F26
  4BC:  NOP
        .o4C0
  4C0:  BC1F      .o4D8
  4C4:  NOP
  4C8:  C.LT.S    F24, F22
  4CC:  NOP
  4D0:  BC1T      .o4F8
  4D4:  NOP
        .o4D8
  4D8:  C.LT.S    F24, F26
  4DC:  NOP
  4E0:  BC1F      .o514
  4E4:  NOP
  4E8:  C.LT.S    F22, F24
  4EC:  NOP
  4F0:  BC1F      .o514
  4F4:  NOP
        .o4F8
  4F8:  LWC1      F12, 38 (S0)
  4FC:  LWC1      F14, 40 (S0)
  500:  LW        A2, 38 (SP)
  504:  LW        A3, 40 (SP)
        .o508
  508:  JAL       80029C80
  50C:  NOP
  510:  MOV.S     F20, F0
        .o514
  514:  LWC1      F12, C (S0)
  518:  JAL       ~Func:get_clamped_angle_diff
  51C:  MOV.S     F14, F20
  520:  MOV.S     F2, F0
  524:  LW        V0, 1C (S1)
  528:  ABS.S     F0, F2
  52C:  MTC1      V0, F4
  530:  NOP
  534:  CVT.S.W   F4, F4
  538:  C.LT.S    F4, F0
  53C:  NOP
  540:  BC1F      .o578
  544:  NOP
  548:  MTC1      R0, F0
  54C:  LWC1      F20, C (S0)
  550:  C.LT.S    F2, F0
  554:  NOP
  558:  BC1F      .o574
  55C:  SUBU      V0, R0, V0
  560:  MTC1      V0, F0
  564:  NOP
  568:  CVT.S.W   F0, F0
  56C:  BEQ       R0, R0, .o578
  570:  ADD.S     F20, F20, F0
        .o574
  574:  ADD.S     F20, F20, F4
        .o578
  578:  JAL       ~Func:clamp_angle
  57C:  MOV.S     F12, F20
  580:  SWC1      F0, C (S0)
        .o584
  584:  BEQ       S3, R0, .o59C
  588:  ADDIU     V0, R0, A
        .o58C
  58C:  SH        V0, 8E (S0)
  590:  LW        V0, CC (S2)
  594:  LW        V0, 20 (V0)
  598:  SW        V0, 28 (S0)
        .o59C
  59C:  ADDIU     V0, R0, D
  5A0:  SW        V0, 70 (S6)
  5A4:  LW        RA, 64 (SP)
  5A8:  LW        S6, 60 (SP)
  5AC:  LW        S5, 5C (SP)
  5B0:  LW        S4, 58 (SP)
  5B4:  LW        S3, 54 (SP)
  5B8:  LW        S2, 50 (SP)
  5BC:  LW        S1, 4C (SP)
  5C0:  LW        S0, 48 (SP)
  5C4:  LDC1      F30, 90 (SP)
  5C8:  LDC1      F28, 88 (SP)
  5CC:  LDC1      F26, 80 (SP)
  5D0:  LDC1      F24, 78 (SP)
  5D4:  LDC1      F22, 70 (SP)
  5D8:  LDC1      F20, 68 (SP)
  5DC:  JR        RA
  5E0:  ADDIU     SP, SP, 98
}

#new:Function $Function_80240844
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S3, 3C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        RA, 40 (SP)
   10:  SW        S2, 38 (SP)
   14:  SW        S1, 34 (SP)
   18:  SW        S0, 30 (SP)
   1C:  LW        S2, 148 (S3)
   20:  DADDU     S1, A1, R0
   24:  LH        A0, 8 (S2)
   28:  JAL       ~Func:get_npc_unsafe
   2C:  DADDU     S0, A2, R0
   30:  DADDU     A0, S0, R0
   34:  DADDU     A1, S2, R0
   38:  ADDIU     V1, R0, 1
   3C:  SW        V1, 10 (SP)
   40:  LW        A2, 24 (S1)
   44:  LW        A3, 28 (S1)
   48:  JAL       800490B4
   4C:  DADDU     S0, V0, R0
   50:  BNE       V0, R0, .oC8
   54:  ADDIU     A0, R0, 2
   58:  DADDU     A1, S0, R0
   5C:  DADDU     A2, R0, R0
   60:  LH        V1, A8 (S0)
   64:  LIF       F0, 1.0
   6C:  LIF       F2, 2.0
   74:  LIF       F4, -20.0
   7C:  ADDIU     V0, R0, F
   80:  SW        V0, 1C (SP)
   84:  MTC1      V1, F6
   88:  NOP
   8C:  CVT.S.W   F6, F6
   90:  MFC1      A3, F6
   94:  ADDIU     V0, SP, 28
   98:  SW        V0, 20 (SP)
   9C:  SWC1      F0, 10 (SP)
   A0:  SWC1      F2, 14 (SP)
   A4:  JAL       8006FE90
   A8:  SWC1      F4, 18 (SP)
   AC:  LW        V0, CC (S2)
   B0:  LW        V1, 0 (V0)
   B4:  ADDIU     V0, R0, 19
   B8:  SH        V0, 8E (S0)
   BC:  ADDIU     V0, R0, E
   C0:  BEQ       R0, R0, .o144
   C4:  SW        V1, 28 (S0)
        .oC8
   C8:  LW        V0, CC (S2)
   CC:  LW        V1, 28 (S0)
   D0:  LW        V0, 20 (V0)
   D4:  BEQ       V1, V0, .o128
   D8:  NOP
   DC:  LWC1      F0, 18 (S0)
   E0:  LIF       F3, 2.25
   E8:  MTC1      R0, F2
   EC:  CVT.D.S   F0, F0
   F0:  C.LT.D    F0, F2
   F4:  NOP
   F8:  BC1F      .o108
   FC:  DADDU     A1, R0, R0
  100:  BEQ       R0, R0, .o110
  104:  DADDU     A0, S0, R0
        .o108
  108:  DADDU     A0, S0, R0
  10C:  ADDIU     A1, R0, 1
        .o110
  110:  JAL       8003D660
  114:  NOP
  118:  LW        A1, 18 (S0)
  11C:  LW        A2, C (S0)
  120:  JAL       8003AA54
  124:  DADDU     A0, S0, R0
        .o128
  128:  LH        V0, 8E (S0)
  12C:  LHU       V1, 8E (S0)
  130:  BLEZ      V0, .o140
  134:  ADDIU     V0, V1, FFFF
  138:  BEQ       R0, R0, .o148
  13C:  SH        V0, 8E (S0)
        .o140
  140:  ADDIU     V0, R0, C
        .o144
  144:  SW        V0, 70 (S3)
        .o148
  148:  LW        RA, 40 (SP)
  14C:  LW        S3, 3C (SP)
  150:  LW        S2, 38 (SP)
  154:  LW        S1, 34 (SP)
  158:  LW        S0, 30 (SP)
  15C:  JR        RA
  160:  ADDIU     SP, SP, 48
}

#new:Function $Function_802409A8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, 148 (S0)
   14:  JAL       ~Func:get_npc_unsafe
   18:  LH        A0, 8 (V0)
   1C:  LHU       V1, 8E (V0)
   20:  ADDIU     V1, V1, FFFF
   24:  SH        V1, 8E (V0)
   28:  SLL       V1, V1, 10
   2C:  BEQL      V1, R0, .o34
   30:  SW        R0, 70 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

% Money Sack - HitBox
#new:Script $Script_Init_Bag_HitBox
{
	Call     EnableNpcShadow ( .Npc:Self .False )
	Call     BindNpcHit  	( .Npc:Self $Script_NPC_SackHit_Init )
	Return
	End
}
	
#new:Script $Script_NPC_SackHit_Init
{
	Call   SetSelfEnemyFlagBits 	( 1F000000 .True ) % Disable NPC HitBox after being hit
	Kill	 $Script_Init_Bag	% Stop the Init Scrip and all their childers
	% Jump
	Thread
		Exec	$Script_NPC_Sack_FX % FX Script
		Call	PlaySoundAtNpc	( .Npc_Sack 333 0 )	% Fuzzy Jump
		Call	GetNpcPos ( .Npc_Sack *Var[0] *Var[1] *Var[2] )
		Add	*Var[1] 20`	% Y Coords
		Call SetNpcJumpscale 	( .Npc_Sack *Fixed[1.0] )	% Set Jump Height
		Call NpcJump1    	( .Npc_Sack *Var[0] *Var[1] *Var[2] A )	% Set Cordinates to set after the Jump (you need to set this manually)
		Wait	1
	EndThread
	% Coins Sounds
	Thread
		Loop 4
			Wait 4
			Call	PlaySound	( 0211 ) % Coin
		EndLoop
	EndThread
	% Message
	Call	$Function_LoadCoinsLosted ( *Var[1] )
	Call	SetMessageValue	( *Var[1] 0 )
     Call	ShowMessageAtScreenPos 	( $String_CoinsGained A0 28 )
	Call	AddCoin ( *Var[1] )
	Call	$Function_ResetCoinsLosted
     Set	*LostCoinsMapID 0
     Call ModifyColliderFlags ( .True ~Collider:Entry0 7FFFFE00 ) % Enable Exit
	Return
	End
}
	
#new:Script $Script_NPC_Sack_FX
{
	Call GetNpcPos      ( .Npc_Sack *Var[3] *Var[4] *Var[5] )
	Add	*Var[4] 20`	% Y Coords
	Call PlayEffect  	( ~FX:Sparkles:Star *Var[3] *Var[4] *Var[5] *Fixed[5.0] )
	Wait	10`
	Call PlayEffect  	( ~FX:SmallGoldSparkle *Var[3] *Var[4] *Var[5] *Fixed[2.8007812] 50` )
	%Sub	*Var[1] 1000` % Put the NPC 1000 pixels below
	Call	RemoveNpc      ( .Npc_Sack )
	Return
	End
}
	
#string $String_CoinsGained
{
[STYLE:EPILOGUE][...]
[Speed:00:07] You got [PushColor][Color:7][Var:00] coins[PopColor] back![PAUSE:40][END]
}


#new:Script $Script_MakeExits
{
Bind     $Script_Exit0  .Trigger:FloorAbove ~Collider:Entry0 1 0
Return
End
}

#new:Script $Script_Exit0
{
Call     UseExitHeading  	( 3C 0 )
Exec     80285CF4 
Call     GotoMap         	( "mze_12" 1 )
Wait     100` 
Return
End
}

% Texture Panning
#new:Script $Script_EnableTexPanning
{
    Call     EnableTexPanning 	( ~Model:pool .True )
	Thread
		Set  *Var[0]  .Default % panner id
		Set  *Var[1]  43` 	    % x scroll
		Set  *Var[2]  43`       % y scroll
		Set  *Var[3]  0 	    % x scroll (aux)
		Set  *Var[4]  0 	    % y scroll (aux)
		Set  *Var[5]  .False
		Set  *Var[6]  .True
		Set  *Var[7]  .False 
		Set  *Var[8]  .False 
		Set  *Var[9]  .False 
		Set  *Var[A]  .False 
		Set  *Var[B]  .False 
		Set  *Var[C]  .False 
		Exec     $Script_80244A70 
    EndThread
    Call     EnableTexPanning 	( ~Model:pool_light .True )
	Thread
		Set  *Var[0]  1         % panner id
		Set  *Var[1]  0 	    % x scroll
		Set  *Var[2]  344`      % y scroll
		Set  *Var[3]  0 	    % x scroll (aux)
		Set  *Var[4]  0 	    % y scroll (aux)
		Set  *Var[5]  .False
		Set  *Var[6]  .True
		Set  *Var[7]  .False 
		Set  *Var[8]  .False 
		Set  *Var[9]  .False 
		Set  *Var[A]  .False 
		Set  *Var[B]  .False 
		Set  *Var[C]  .False 
		Exec     $Script_80244A70 
    EndThread
	Return
	End
}

#new:Script $Script_80244A70
{
	SetGroup 0
	If  *Var[5]  ==  .True
		If  *Var[6]  ==  .True 
			If  *Var[7]  ==  .True 
				If  *Var[8]  ==  .True 
					Call     $Function_802402E0
					Return
				EndIf
			EndIf
		EndIf
	EndIf
	Call     $Function_80240404
	Return
	End
}
   
   #new:Function $Function_80240404
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       8011BC1C
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       8011BC34
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       8011BC4C
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       8011BC64
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  DADDU     V0, R0, R0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18
}
   
   #new:Function $Function_802402E0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       8011BC1C
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       8011BC34
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       8011BC4C
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       8011BC64
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  DADDU     V0, R0, R0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18
}

#new:Function $Function_GetTattle
{
LIO       V0, $MapTattle
JR        RA
RESERVED
}
	
#string $MapTattle
{
[STYLE:TATTLE][...]
[Func_2B]You can buy different kinds
of Life Shrooms here.
[WAIT][NEXT][...]
Just keep in mind you can only
have one Life Shroom at the same
time.
[WAIT][NEXT][...]
In addition if some of your coins are
currently lost inside the Pit, the
water from that pool will start
to shine.
[WAIT][NEXT][...]
You can use your Star Pieces to
get those coins back.
[WAIT][NEXT][...]
Although the cost will depend on
the number of coins lost.
[WAIT][END]
}
