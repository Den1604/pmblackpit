%% This file handle what partner and when the chest will give a partner to Mario

#new:NpcSettings $Partner_Settings
{
00000000 00180018 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 000D0000 
}
	
% Bypass all dialogs on Roguelike Mode
#new:Script $Init_NPC
{
	Call    SetSelfVar 	( .Default .False )
	%Set *MapVar[2]  E % testing
	Switch *MapVar[2]	% Check "badge" id
		Case == B % Goombario
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene1 )
		Case == C % Kooper
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene2 )
		Case == D % Bombette
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene3 )
		Case == E % Parakarry
			Set		*MapVar[7] 		.True % to know Mario got Parakarry after overwriting MapVar[2]
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene4 )
		Case == 10 % Bow
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene5 )
		Case == 11 % Watt
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene6 )
		Case == 12 % Sushie
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene7 )
		Case == 13 % Lakilester
			Call     BindNpcIdle 	( .Npc:Self $NPC_Cutscene8 )%/
	EndSwitch
	Return
	End
}

% Why this?
% Looks like for the chest's top to go down the chest's assigned script need to run an ExecWait or finish his script lol
#new:Script $Script_CloseChest
{
	Wait 1
	Return
	End
}

% Goombario Cutscene
#new:Script $NPC_Cutscene1
{
	Loop     
		Call     GetSelfVar 	( 00000000 *Var[0] )
		If  *Var[0]  ==  1
			BreakLoop
		EndIf
		Wait     1 
	EndLoop
	ExecWait $Script_CloseChest
	Exec	$Script_GoombarioCS1 *Var[A]
	Exec	$SkipCutscene_GoombarioCS1
	Loop
		DoesScriptExist ( *Var[A] *Var[0] )
		If *Var[0] == .False
			BreakLoop
		EndIf
		Wait 1
	EndLoop
	Set 	*Flag_Skip .False
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Call     DisablePartnerAI 	( 0 )
	ExecWait $Script_SetNPC
	Return
	End
}

#new:Script $Script_GoombarioCS1
{
	Call	 SetNpcAnimation ( .Npc:Self 00010002 )
	Call     EnableNpcShadow 	( .Npc:Self .False )
	Wait     40` 
	Call	 SetNpcAnimation ( .Npc:Self 00010004 )
	Call     SetNpcFlagBits ( .Npc:Self 00000100 .True )
	Call     SetNpcPos   	( .Npc:Self -538` -20` -22 )	% Set NPC position before doing the 1st jump
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[1.0] )	% Set Jump Height
	Call     NpcJump1    	( .Npc:Self -538` 63` -17` D )	% Set Cordinates to set after the Jump (you need to set this manually)
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	Call	 SetNpcAnimation ( .Npc:Self 00010001 )
	Wait     15`
	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call     UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call     SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call     SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call     SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call     SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call     PanToTarget 	( .Cam:Default 00000000 00000001 )			%
	Wait     15`
	If *Flag_Mode_Rogue == .False
		Call    SpeakToPlayer 	( .Npc:Self 00010008 00010001 00000005 $String_Goombario_0 )
	EndIf
	Call	 SetNpcAnimation ( .Npc:Self 00010004 )
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.80078125] )	%Jump 2
	Call     NpcJump1    	( .Npc:Self -564` 6` -2` F )			%Jump 2
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )					%Jump 2
	Call     EnableNpcShadow 	( .Npc:Self .True )
	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	If *Flag_Mode_Rogue == .False
		Call    SpeakToPlayer 	( .Npc:Self 00010008 00010001 00000005 $String_Goombario_1 )
		Call	 SetNpcAnimation ( .Npc:Self 00010001 ) % idle
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Wait	1
		Call 	PlaySoundAtPlayer 	( 0263 .Cam:Default ) % ?
		Call 	ShowEmote 		  	( .Cam:Default .Emote:Question -45` 20` 0 0 0 0 0 )
		Call 	SetPlayerAnimation ( 00010021 ) % thinking
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call    SpeakToPlayer 	( .Npc:Self 00010008 00010001 00000005 $String_Goombario_2 )
		Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call    SpeakToPlayer 	( .Npc:Self 00010008 00010001 00000005 $String_Goombario_3 )
		Call 	SetPlayerAnimation ( 00010029 ) % yes
		Wait	35`
	EndIf
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call	 SetNpcAnimation ( .Npc:Self 00010009 ) % happy
	Wait	 15`
	Return
	End
}

#new:Script $SkipCutscene_GoombarioCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00010001 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			Call    SetNpcPos	    	( .Npc:Self -564` 6` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}
  
  % Kooper Cutscene
#new:Script $NPC_Cutscene2
{
    Loop
		Call     GetSelfVar 	( 00000000 *Var[0] )
		If  *Var[0]  ==  .True
			BreakLoop
		EndIf
		Wait     1
	EndLoop
	ExecWait $Script_CloseChest
	Exec	$Script_KooperCS1 *Var[A]
	Exec	$SkipCutscene_KooperCS1
	Loop
		DoesScriptExist ( *Var[A] *Var[0] )
		If *Var[0] == .False
			BreakLoop
		EndIf
		Wait 1
	EndLoop
	Set 	*Flag_Skip .False
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Call     DisablePartnerAI 	( 0 )
	ExecWait $Script_SetNPC
	Return
	End
}

#new:Script $Script_KooperCS1
{
	Wait	40`
	Call	SetNpcAnimation ( .Npc:Self 00020010 )
	Call 	EnableNpcShadow ( .Npc:Self .False )
	Call    SetNpcFlagBits ( .Npc:Self 00000100 .True )
	Call    SetNpcPos   	( .Npc:Self -538` -15` -22 )			% Set NPC position before doing the 1st jump (you need to set this manually)
	Call    SetNpcJumpscale 	( .Npc:Self *Fixed[0.4] )	% Set Jump Height
	Call	SetNpcAnimation ( .Npc:Self 00020006 )
	Call    NpcJump1    	( .Npc:Self -538` 63` -19` 9 )
	Call    PlayerFaceNpc 	( .Npc:Self 00000000 )
	Call    GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call    UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call    SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call    SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call    SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call    SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call    PanToTarget 	( .Cam:Default 00000000 00000001 )			%
	Call	SetNpcAnimation ( .Npc:Self 0002000A )
	Wait 	10`
  %%
  % Kooper Animation
  %%
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )			
	Call 	 PlaySound ( 284 ) % Shell Sliding Sound
	Call	 SetNpcAnimation ( .Npc:Self 00020009 )
	Call     NpcJump1    	( .Npc:Self -518` 63` -19` 3 )		
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	%%
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )
	Call 	 PlaySound ( 284 )
	Call     NpcJump1    	( .Npc:Self -559` 63` -19` 3 )
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	%%
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )
	Call 	 PlaySound ( 284 ) % Shell Sliding Sound
	Call     NpcJump1    	( .Npc:Self -518` 63` -19` 3 )
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )	
	%%
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )
	Call 	 PlaySound ( 284 ) % Shell Sliding Sound
	Call     NpcJump1    	( .Npc:Self -559` 63` -19` 3 )
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	%%
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )
	Call 	 PlaySound ( 284 ) % Shell Sliding Sound
	Call     NpcJump1    	( .Npc:Self -518` 63` -19` 3 )
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	%%
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.80078125] )	
	Call 	 PlaySound ( 284 ) % Shell Sliding Sound
	Call     NpcJump1    	( .Npc:Self -564` 6` -2` F )	
	Call 	 EnableNpcShadow ( .Npc:Self .True )
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	Call	 SetNpcAnimation ( .Npc:Self 0002000B )
	Wait 	10`
   %% Animation Ended
	Call	 SetNpcAnimation ( .Npc:Self 00020003 ) % idle
	If *Flag_Mode_Rogue == .False
		Call     SpeakToPlayer 	( .Npc:Self 0002000D 00020003 00000000 $String_Kooper_1 )
		Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call     SpeakToPlayer 	( .Npc:Self 0002000D 00020003 00000000 $String_Kooper_2 )
		Call 	SetPlayerAnimation ( 00010029 ) % yes
		Wait	35`
	EndIf
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call	 SetNpcAnimation ( .Npc:Self 00020010 ) % happy
	Wait	20`
	Return
	End
}

#new:Script $SkipCutscene_KooperCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00020003 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			Call    SetNpcPos	    	( .Npc:Self -564` 6` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}
  
% Bombette Cutscene
#new:Script $NPC_Cutscene3
{
	Loop
		Call     GetSelfVar 	( 00000000 *Var[0] )
		If  *Var[0]  ==  00000001 
			BreakLoop
		EndIf
		Wait	1
	EndLoop
	ExecWait $Script_CloseChest
	Exec	$Script_BombetteCS1 *Var[A]
	Exec	$SkipCutscene_BombetteCS1
	Loop
		DoesScriptExist ( *Var[A] *Var[0] )
		If *Var[0] == .False
			BreakLoop
		EndIf
		Wait 1
	EndLoop
	Call     StopSound  ( 0287 ) % bomb turned on sfx
	Set 	*Flag_Skip .False
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Call     DisablePartnerAI 	( 0 )
	ExecWait $Script_SetNPC
	Return
	End
}

#new:Script $SkipCutscene_BombetteCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00030003 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			Call    SetNpcPos	    	( .Npc:Self -564` 6` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}

#new:Script $Script_BombetteCS1
{
	Wait	40`
	Call    GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call    UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call    SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call    SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call    SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call    SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call    PanToTarget 	( .Cam:Default 00000000 00000001 )
	Call    SetNpcFlagBits ( .Npc:Self 00000100 .True )
	Call    SetNpcPos   	( .Npc:Self -538` -15` -22 )			% Set NPC position before doing the 1st jump (you need to set this manually)
	Call    SetNpcJumpscale 	( .Npc:Self *Fixed[0.6] )	% Set Jump Height
	Call    NpcJump1    	( .Npc:Self -538` 30` -17` D )			% Set Cordinates to set after the Jump (you need to set this manually)
	Call	SetNpcAnimation ( .Npc:Self 00030010 )
	Call    PlaySoundAtNpc 	( .Npc:Self 0287 0 ) % Bomb turned on
	Wait 	19`
	Call     StopSound  ( 0287 )
	Call	 SetNpcAnimation ( .Npc:Self 00030009 )
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
  %%
  % Bombette Animation
  %%
	Call     GetNpcPos   	( .Npc:Self *Var[0] *Var[1] *Var[2] )
	Call 	 PlaySound ( 2016 )
	Call     $Explotion ( *Var[0] *Var[1] *Var[2] )
	ChildThread
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[2.0] )
		Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[2.0] )
		Call     ShakeCam    	( 00000001 00000000 00000003 *Fixed[1.5] )
		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[0.80078125] )
		Call     ShakeCam    	( 00000001 00000000 00000006 *Fixed[0.30078125] )
		Call     ShakeCam    	( 00000001 00000000 00000008 *Fixed[0.10058594] )
	EndChildThread
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[6.0] )
	Call     NpcJump1    	( .Npc:Self -564` 200` -2` 15 )	
	Call	 SetNpcAnimation ( .Npc:Self 0003000A )
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )
	Call     NpcJump1    	( .Npc:Self -564` 6` -2` D )	
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
   %% Animation Ended
   Call	 SetNpcAnimation ( .Npc:Self 00030003 ) % idle
   If *Flag_Mode_Rogue == .False
		Call     SpeakToPlayer 	( .Npc:Self 0003000E 00030003 00000000 $String_Bombette_1 )
		Wait	 14`
		Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call     SpeakToPlayer 	( .Npc:Self 0003000E 00030003 00000000 $String_Bombette_2 )
   	EndIf
	Call	 SetNpcAnimation ( .Npc:Self 0003000F ) % happy
	Wait	 15`
	Return
	End
}
  
% Parakarry Cutscene
#new:Script $NPC_Cutscene4
{
	Loop
		Call     GetSelfVar 	( 00000000 *Var[0] )
		If  *Var[0]  ==  .True
			BreakLoop
		EndIf
		Wait     1
	EndLoop
	Wait     40`
	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call     UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call     SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call     SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call     SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call     SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call     PanToTarget 	( .Cam:Default 00000000 00000001 )
	Call     SetNpcFlagBits ( .Npc:Self 00000100 .True )
	%%
	% Parakarry Animation
	%%
		Call	 SetNpcAnimation ( .Npc:Self 0004000A )
		Call     SetNpcPos   	( .Npc:Self -538` -15` -22 )			% Set NPC position before doing the 1st jump (you need to set this manually)
   		If *Flag_Mode_Rogue == .False
			Call     SpeakToPlayer 	( .Npc:Self 00040006 00040001 00000000 $String_Parakarry_1 )
		EndIf
		If *PitMapID == 0
			Wait 1
			Call SetNpcAnimation ( .Npc:Self 00040001 ) % idle
			Goto RogueHard
		EndIf
   		ExecWait $GetBadge
		If *MapVar[1] == .False % Invalid Badge, happens when the player already have all Badges
			Goto RogueHard
		EndIf
		Call     MakeItemEntity ( *MapVar[1] ~Vec3d:Item_Badge 00000011 .False )
		Call     GetNpcPos   	( .Npc:Self *Var[3] *Var[4] *Var[5] )
		Add		*Var[3]		2											% Moving the Badge a little to the right, so it looks is at parakarry's hands
		Call	 SetItemPos		( *Var[0] *Var[3] *Var[4] *Var[5] )
		Set		*Var[A] *Var[0] % save BadgeID
		Thread
			Loop 15`
				Call	 PlaySound		( 2009 )	% Parrakary Flying
				Wait	6`
			EndLoop
		EndThread
		SetTimescale   *Fixed[1.2]
		Thread
		% Moving Badge Y Axis
			Loop 28`
				Wait 1
				Add		*Var[4] 2
				Call	 SetItemPos		( *Var[0] *Var[3] *Var[4] *Var[5] )
			EndLoop
		% Moving Badge Z Axis
			SetTimescale   *Fixed[0.4]
			Loop 23`
				Wait 1
				Add		*Var[5] 1
				Call	 SetItemPos		( *Var[0] *Var[3] *Var[4] *Var[5] )
			EndLoop
		% Moving Badge Y Axis (Again)
			SetTimescale   *Fixed[1.0]
			Loop 10`
				Wait 1
				Add		*Var[4] -2
				Call	 SetItemPos		( *Var[0] *Var[3] *Var[4] *Var[5] )
			EndLoop
			If *Flag_Mode_Rogue == .False % Add Badge
				Call	AddBadge ( *MapVar[1] 0 )
				Add *BadgeList 1 % Add one badge to the total badge counter
				Switch *BadgeList % Challenge Completed
					Case >= 62`
						Set	*Flag_Cheev_Classic_07 .True
						Set	*Flag_Cheev_Classic_06 .True
						Set	*Flag_Cheev_Classic_05 .True
						Set	*Flag_Cheev_Classic_04 .True
					Case >= 40`
						Set	*Flag_Cheev_Classic_06 .True
						Set	*Flag_Cheev_Classic_05 .True
						Set	*Flag_Cheev_Classic_04 .True
					Case >= 20`
						Set	*Flag_Cheev_Classic_05 .True
						Set	*Flag_Cheev_Classic_04 .True
					Case >= 5
						Set	*Flag_Cheev_Classic_04 .True
				EndSwitch
				ExecWait $Script_CheckBadgeFlags % Check the player have all Badges his supposed to have, if not give the badge to him
			EndIf
		EndThread
		% 1st Jump
		Label	RogueHard
   A4:  Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )			% Set Jump Height
   B8:  Call     NpcJump1    	( .Npc:Self -538` 65` -17` 1F )			% Set Cordinates to set after the Jump (you need to set this manually)
		Wait	18`
		Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
		Call     GetNpcPos   	( .Npc:Self *Var[0] *Var[1] *Var[2] )
		Add		*Var[2] 20`
		Call	NpcMoveTo ( .Npc:Self *Var[0] *Var[2] 0 )				% X, Z, Speed
		Wait	20`
		If *PitMapID != 0
			Call	 PlaySound		( 2005 )								% Parakarry's Kick
		EndIf
		Call	 SetNpcAnimation ( .Npc:Self 00040001 )
		Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
		Set		*Var[0] *Var[A] % get badgeID
		If *Flag_Mode_Rogue == .True
			Exec    $Script_PlayPartnerMusic % play partner music
		EndIf
		Wait	15`
		% Skip after getting badge stuff
		Exec	$Script_ParakarryCS1 *Var[A]
		Exec	$SkipCutscene_ParakarryCS1
		Loop
			DoesScriptExist ( *Var[A] *Var[0] )
			If *Var[0] == .False
				BreakLoop
			EndIf
			Wait 1
		EndLoop
		Set 	*Flag_Skip .False
		Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
		Call     DisablePartnerAI 	( 0 )
		%% Enable Blue Switch
		If *PitMapID != 0
			If *MapFlag[1] == .True
				Call     MakeEntity  	( .Entity:BlueSwitch ~Vec4d:Switch 80000000 )
				Call     AssignScript	( $PipeSpawning )
				Set		*MapFlag[1] .False
			EndIf
		EndIf
		ExecWait $Script_SetNPC
  868:  Return
  870:  End
}

#new:Script $Script_ParakarryCS1
{
	% 2nd Jump
	Call     SetNpcRotation ( .Npc:Self 00000000 -360` 00000000 )
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.80078125] )	%Scale
	Call     NpcJump0    	( .Npc:Self -564` 6` -2` F )			%XYZ, Height
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	%% Animation Ended
	If *Flag_Mode_Rogue == .False
		Call     SpeakToPlayer 	( .Npc:Self 00040006 00040001 00000000 $String_Parakarry_2 )
		Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call     SpeakToPlayer 	( .Npc:Self 00040006 00040001 00000000 $String_Parakarry_3 )
		Call 	SetPlayerAnimation ( 00010029 ) % yes
		Wait	35`
	EndIf
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call	 SetNpcAnimation ( .Npc:Self 00040007 ) % happy
	Wait	15`
	Return
	End
}

#new:Script $SkipCutscene_ParakarryCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00040001 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			%Call    SetNpcPos	    	( .Npc:Self -564` 10` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}

% Bow Cutscene
  
#new:Script $NPC_Cutscene5
{
    0:  Loop     
    C:  	Call     GetSelfVar 	( 00000000 *Var[0] )
   20:  	If  *Var[0]  ==  00000001 
   30:  		BreakLoop
   38:  	EndIf
   40:  	Wait     00000001 
   4C:  EndLoop
   		ExecWait $Script_CloseChest
		Exec	$Script_BowCS1 *Var[A]
		Exec	$SkipCutscene_BowCS1
		Loop
			DoesScriptExist ( *Var[A] *Var[0] )
			If *Var[0] == .False
				BreakLoop
			EndIf
			Wait 1
		EndLoop
		Set 	*Flag_Skip .False
		Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
		Call     DisablePartnerAI 	( 0 )
		ExecWait $Script_SetNPC
		Return
		End
}

#new:Script $Script_BowCS1
{
	Wait     40` 
	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call     UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call     SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call     SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call     SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call     SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call     PanToTarget 	( .Cam:Default 00000000 00000001 )
	Call     SetNpcFlagBits ( .Npc:Self 00000100 .True )
%%
% Bow Animation
%%
	% Rogue skips the entire animation
	If *Flag_Mode_Rogue == .True
		% Dissapear bow
		Call    802CFD30 ( .Npc:Self 7 *Fixed[0.0] 0 0 0 )
		Call	SetNpcPos ( .Npc:Self -574` 22` -3` )
		% Reappear Bow
		Call	PlaySound			( 200F ) % Appearing
		Set  *Var[1]  0
		Loop     10` 
			Add  *Var[1]  24`
			Call     802CFD30 ( .Npc:Self 7 *Var[1] 0 0 0 )
			Wait     1 
		EndLoop
		Wait	10`
		Goto GetPartner
	EndIf
	% Bow Dissappearing/Appearing 1
	Call	PlaySound			( 200E ) % Dissappearing
	Wait	10`
	Call	EnableNpcShadow		( .Npc:Self .False )
	ChildThread
		SetF  *Var[1]  *Fixed[240.0] 
		Loop     20` 
			SubF  *Var[1]  *Fixed[8.0] 
			Call     802CFD30 ( .Npc:Self 7 *Var[1] 0 0 0 )
			Wait     1 
		EndLoop
	EndChildThread
	Call     SetNpcPos   	 ( .Npc:Self -535` -15` -22 )			% Set NPC position before doing the 1st jump (you need to set this manually)
A4:  Call     SetNpcJumpscale ( .Npc:Self *Fixed[0.0] )				% Set Jump Height
B8:  Call     NpcJump1    	 ( .Npc:Self -535` 65` -17` 29 )		% Set Cordinates to set after the Jump (you need to set this manually)
	%1st Rotation
	Set		*Var[0] 0
	Loop
		If *Var[0]	== 180`
			BreakLoop
		EndIf
		Add		*Var[0]	18`
		Call     SetNpcRotation  ( .Npc:Self 00000000 *Var[0] 00000000 )
		Wait	1
	EndLoop
	%2nd Jump
	Call	 SetNpcAnimation ( .Npc:Self 00050002 )
	Call     SetNpcJumpscale ( .Npc:Self *Fixed[0.0] )				% NpcID, Radious
	Call     NpcJump1    	 ( .Npc:Self -580` 18` -2` F )			% NpcID, XYZ, Height
	%2nd Rotation
	Loop
		If *Var[0]	== 0`
			BreakLoop
		EndIf
		Add		*Var[0]	-18`
		Call     SetNpcRotation  ( .Npc:Self 00000000 *Var[0] 00000000 )
		Wait	1
	EndLoop
	% X Axis Offsets
	Call     GetNpcPos   	( .Npc:Self *Var[0] *Var[1] *Var[2] )
	% X Offset 1
	Loop 11`
		Add	*Var[0] 2
		Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
		Wait	1
	EndLoop
	% X Offset 2
	Set *MapVar[8] 2
	SetTimescale *Fixed[1.3]
	Loop 2
		Loop 7`
			Add	*Var[0] 1
			Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
			Wait	1
		EndLoop
		Loop 7`
			Add	*Var[0] -1
			Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
			Wait	1
		EndLoop
	EndLoop
	ExecWait $Script_MarioAnimation0
	SetTimescale *Fixed[1.0] % Normal Speed
	Call	 SetNpcAnimation ( .Npc:Self 00050001 )
	% Bow Dissappearing/Appearing 2
	Call	PlaySound			( 200E ) % Dissappearing
	SetF  *Var[1]  *Fixed[75.0] 
	Loop     15` 
		SubF  *Var[1]  *Fixed[5.0] 
		Call     802CFD30 ( .Npc:Self 7 *Var[1] 0 0 0 )
		Wait     1 
	EndLoop
	% X Offset 3
	% Bow reappear at Mario's right
	Call	 SetNpcAnimation ( .Npc:Self 00050002 )
	Set		*Var[0] 0
	Loop
		If *Var[0]	== 180`
			BreakLoop
		EndIf
		Add		*Var[0]	18`
		Call     SetNpcRotation  ( .Npc:Self 00000000 *Var[0] 00000000 )
		Wait	1
	EndLoop
	Call    GetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
	Add	*Var[0] 69`
	Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
	% Bow Dissappearing/Appearing 3
	Call	PlaySound			( 200F ) % Appearing
	SetF  *Var[1]  *Fixed[0.0] 
	Loop     12` 
		AddF  *Var[1]  *Fixed[8.0] 
		Call     802CFD30 ( .Npc:Self 7 *Var[1] 0 0 0 )
		Wait     1 
	EndLoop
	% X Offset 4
	Call     GetNpcPos   	( .Npc:Self *Var[0] *Var[1] *Var[2] )
	Loop 11`
		Add	*Var[0] -2
		Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
		Wait	1
	EndLoop
	% X Offset 5
	Set *MapVar[8] 3
	SetTimescale *Fixed[1.3]
	Loop 2
		Loop 7`
			Add	*Var[0] -1
			Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
			Wait	1
		EndLoop
		Loop 7`
			Add	*Var[0] 1
			Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
			Wait	1
		EndLoop
	EndLoop
	ExecWait $Script_MarioAnimation0
	SetTimescale *Fixed[1.0] % Normal Speed
	% Bow Dissappearing/Appearing 4
	Call	PlaySound			( 200E ) % Dissappearing
	SetF  *Var[1]  *Fixed[75.0] 
	Loop     15` 
		SubF  *Var[1]  *Fixed[5.0] 
		Call     802CFD30 ( .Npc:Self 7 *Var[1] 0 0 0 )
		Wait     1 
	EndLoop
	% X Offset 6
	% Bow reappear at Mario's left
	Call	SetNpcAnimation		( .Npc:Self 00050006 )
	Set		*Var[0] 180`
	Loop
		If *Var[0]	== 0
			BreakLoop
		EndIf
		Add		*Var[0]	-18`
		Call     SetNpcRotation  ( .Npc:Self 00000000 *Var[0] 00000000 )
		Wait	1
	EndLoop
	Call    GetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
	Add	*Var[0] -52`
	Call	SetNpcPos ( .Npc:Self *Var[0] *Var[1] *Var[2] )
	% Bow Dissappearing/Appearing 5
	Call	PlaySound			( 200F ) % Appearing
	Set  *Var[1]  0
	Loop     10` 
		Add  *Var[1]  24`
		Call     802CFD30 ( .Npc:Self 7 *Var[1] 0 0 0 )
		Wait     1 
	EndLoop
	Call	EnableNpcShadow		( .Npc:Self .True )
	Wait	15`
	Call	SetNpcAnimation		( .Npc:Self 00050007 )
	Wait	10`
	Call	SetNpcAnimation		( .Npc:Self 00050008 )
	Call	PlaySound			( 291 ) % Screaming
	Call    PlayerFaceNpc ( .Npc:Self 1 )
	Call	PlaySoundAtPlayer 	( 0262 00000000 )
	Call	ShowEmote 		  	( 00000000 .Emote:Exclamation FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
	Thread
		ChildThread
			Call     GetPlayerPos 	( *Var[A] *Var[B] *Var[C] )
			Call     UseSettingsFrom 	( .Cam:Default *Var[A] *Var[B] *Var[C] )
			Call     SetCamSpeed 	( .Cam:Default *Fixed[90.0] )
			Loop
				Call     SetCamDistance ( .Cam:Default 260` )
				Call     PanToTarget 	( .Cam:Default 00000000 00000001 )
				Wait     1
				Call     SetCamDistance ( .Cam:Default 310` )
				Call     PanToTarget 	( .Cam:Default 00000000 00000001 )
				Wait     1
			EndLoop
		EndChildThread
		Call     GetNpcPos   	( 00000000 *Var[A] *Var[B] *Var[C] )
		Sub  *Var[B]  40`
		Call     SetNpcPos   	( 00000000 *Var[A] *Var[B] *Var[C] )
		Call     SetNpcScale 	( 00000000 *Fixed[8.0] *Fixed[8.0] *Fixed[8.0] )
		SetF  *Var[0]  *Fixed[0.0] 
		Loop
			AddF  *Var[0]  *Fixed[12.0] 
			Call     802CFD30 ( 00000000 00000007 *Var[0] 00000000 00000000 00000000 )
			Wait     00000001 
			If *MapVar[8] == 1
				BreakLoop
			EndIf
		EndLoop
	EndThread
	Call     SetPlayerAnimation ( 0001002B )
	Wait     00000005 
	Call    SpeakToPlayer 		( .Npc:Self 00050008 00050008 00000000 $String_Bow_1 )
	Set *MapVar[8] 1
	Call    SetPlayerAnimation 	( .PlayerAnim:Crouch )
	Call	SetNpcAnimation		( .Npc:Self 00050001 ) % idle
	Wait	20`
	Call	SetNpcAnimation		( .Npc:Self 0005000B )
	Exec	$Script_MarioAnimation1
	Call    SpeakToPlayer 		( .Npc:Self 0005000B 0005000B 00000000 $String_Bow_2 )
	Call	SetNpcAnimation		( .Npc:Self 0005000A )
	Wait	10`
	Call	SetNpcAnimation		( .Npc:Self 00050009 )
	Wait	10`
%% Animation Ended
	Call	SetNpcAnimation ( .Npc:Self 00050001 )
	Wait	10`
	Call    SpeakToPlayer 		( .Npc:Self 00050004 00050001 00000000 $String_Bow_3 )
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Wait	1
	Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
	Wait	40`
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call    SpeakToPlayer 		( .Npc:Self 00050004 00050001 00000000 $String_Bow_4 )
	Call 	SetPlayerAnimation ( 00010029 ) % yes
	Wait	35`
	Label	GetPartner
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call	 SetNpcAnimation ( .Npc:Self 0005000A ) % Laught
	Wait	15`
	Return
	End
}

#new:Script $SkipCutscene_BowCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00050001 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			Call    SetNpcPos	    	( .Npc:Self -564` 15` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Set		*MapVar[8] 1
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}

#new:Script $Script_MarioAnimation0
{
	Wait 3`
	Call PlaySoundAtPlayer 	( 00000263 00000000 )
	Exec $Script_MarioAnimation0_1
	Exec $Script_MarioAnimation0_2
	Return
	End
}

#new:Script $Script_MarioAnimation0_1
{
	Call    PlayerFaceNpc ( .Npc:Self 1 )
	Call	GetPlayerPos ( *Var[A] *Var[B] *Var[C] )
	Loop 3
		Add		*Var[B] 2
		Call	SetPlayerPos ( *Var[A] *Var[B] *Var[C] )
		Wait	1
	EndLoop
	Loop 3
		Add		*Var[B] -2
		Call	SetPlayerPos ( *Var[A] *Var[B] *Var[C] )
		Wait	1
	EndLoop
	Return
	End
}

#new:Script $Script_MarioAnimation0_2
{
	Call ShowEmote 		  	( 00000000 .Emote:Question FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
	Wait 5`
	Switch	*MapVar[8]
		Case == 2 % 1st Time Bow poke Mario
			Call InterpPlayerYaw	( -90` 0 )
			Wait 13`
			Call InterpPlayerYaw	( 90` 0 )
			Wait 13`
			Call InterpPlayerYaw	( -90` 0 )
		Case == 3 %2nd Time Bow poke Mario
			Call InterpPlayerYaw	( 90` 0 )
			Wait 13`
			Call InterpPlayerYaw	( -90` 0 )
			Wait 13`
			Call InterpPlayerYaw	( 90` 0 )
	EndSwitch
	Return
	End
}

#new:Script $Script_MarioAnimation1
{
	WaitSeconds 3
	Call	SetPlayerAnimation	( .PlayerAnim:BeforeJump )
	Wait	20`
	Call	SetPlayerAnimation	( .PlayerAnim:Midair )
	Call	PlaySoundAtPlayer	( 2081 0  ) % Jump
	Call	GetPlayerPos   		( *Var[A] *Var[B] *Var[C] )
	Add		*Var[B] 1
	Call    SetPlayerJumpscale 	( *Fixed[1.0] ) 
	% There's some problems when skipping while mario is in the air
	% I tried to fix it but looks like wasn't as easy as I though
	% I think this is a quicker and easier aproeach :)
	Set 	*Flag_Skip .False % disable skipping
	Call	PlayerJump 			( *Var[A] *Var[B] *Var[C] 15` ) % xyz, height
	Return
	End
}

% Watt Cutscene
  
#new:Script $NPC_Cutscene6
{
	Loop     
		Call     GetSelfVar 	( 00000000 *Var[0] )
		If  *Var[0]  ==  1
			BreakLoop
		EndIf
		Wait     1
	EndLoop
	ExecWait $Script_CloseChest
	Exec	$Script_WattCS1 *Var[A]
	Exec	$SkipCutscene_WattCS1
	Loop
		DoesScriptExist ( *Var[A] *Var[0] )
		If *Var[0] == .False
			BreakLoop
		EndIf
		Wait 1
	EndLoop
	Set 	*Flag_Skip .False
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	ExecWait $Script_SetNPC
	Return
	End
}

#new:Script $Script_WattCS1
{
	Wait     40`
	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call     UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call     SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call     SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call     SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call     SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call     PanToTarget 	( .Cam:Default 00000000 00000001 )
	Call     SetNpcFlagBits ( .Npc:Self 00000100 .True )
  %%
  % Watt Animation
  %%
	Call     SetNpcPos   	( .Npc:Self -538` -50` -22 )			% Set NPC position before doing the 1st jump (you need to set this manually)
	Exec	$Script_WattThunder
	Call     PlayerFaceNpc 	( .Npc:Self 00000000 )
	Call     GetNpcPos   	( .Npc:Self *Var[0] *Var[1] *Var[2] )
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[6.0] )
	Call     NpcJump1    	( .Npc:Self -564` 200` -2` 15 )	
	ChildThread
		Call    SetPlayerAnimation ( 0001002B )
		Call	PlaySoundAtPlayer  ( 00000262 00000000 )
		Call	ShowEmote 		   ( 00000000 .Emote:Exclamation FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
		Wait	35`
		Call	 SetPlayerAnimation ( .PlayerAnim:StandStill )
		Call     PlayerFaceNpc	 	( .Npc:Self 00000000 )
	EndChildThread
	Wait	 40`
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )
	Call     NpcJump1    	( .Npc:Self -564` 16` -2` D )	
	Wait	 7`
%% Animation Ended
	If *Flag_Mode_Rogue == .False
		Call     SpeakToPlayer 	( .Npc:Self 00060004 00060001 00000000 $String_Watt_1 )
		Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call     SpeakToPlayer 	( .Npc:Self 00060004 00060001 00000000 $String_Watt_2 )
		Call 	SetPlayerAnimation ( 00010029 ) % yes
		Wait	35`
	EndIf
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call	SetNpcAnimation ( .Npc:Self 00060005 ) % charging
	Wait	15`
	Call     DisablePartnerAI 	( 00000000 )
	Wait	18`
	Return
	End
}

#new:Script $SkipCutscene_WattCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00060001 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			Call    SetNpcPos	    	( .Npc:Self -564` 15` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}
  
#new:Script $Script_WattThunder
{
	% YellowMagic3 / Right Thunder 1
	Call     PlayEffect  	( ~FX:Lightning:YellowMagic3 -510` 54` -75` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call	 PlaySound		( 366 ) % Thunder 2
	Wait	10`
	% YellowMagic2 / Right Thunder 2
	Call     PlayEffect  	( ~FX:Lightning:YellowMagic2 -560` 54` -43` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call	 PlaySound		( 366 ) % Thunder 2
	Wait	10`
	% YellowMagic1 / Left Thunder
	Call     PlayEffect  	( ~FX:Lightning:YellowMagic1 -593` 54` -3` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call	 PlaySound		( 366 ) % Thunder 2
	Return
	End
}
  
% Sushie Cutscene

#new:Script $NPC_Cutscene7
{
	Loop     
		Call     GetSelfVar 	( 00000000 *Var[0] )
		If  *Var[0]  ==  1
			BreakLoop
		EndIf
		Wait     1
	EndLoop
   	ExecWait $Script_CloseChest
	Exec	$Script_SushieCS1 *Var[A]
	Exec	$SkipCutscene_SushieCS1
	Loop
		DoesScriptExist ( *Var[A] *Var[0] )
		If *Var[0] == .False
			BreakLoop
		EndIf
		Wait 1
	EndLoop
	Set 	*Flag_Skip .False
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Call     DisablePartnerAI 	( 0 )
	ExecWait $Script_SetNPC
	Return
	End
}

#new:Script $Script_SushieCS1
{
	Wait     40`
	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call     UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call     SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call     SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call     SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call     SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call     PanToTarget 	( .Cam:Default 00000000 00000001 )
	Call     SetNpcFlagBits ( .Npc:Self 00000100 .True )
  %%
  % Sushie Animation
  %%
	Call     SetNpcPos   		( .Npc:Self -526` 7` -19` )			% Set NPC position before doing the 1st jump (you need to set this manually)
	Call	InterpNpcYaw ( .Npc:Self -90` 0 )
	ChildThread
		Call	PlaySound	( 2015 ) % Swimming
		Wait	25`
		Call	PlaySound	( 2015 ) % Swimming
	EndChildThread
	Wait	20`
		%Jump 1
	Call	 SetNpcAnimation	( .Npc:Self 0007000A ) % Swimming
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[0.0] )
	Call     NpcJump1    		( .Npc:Self -550` 25` -19` F )
	%
	Call	 SetNpcAnimation	( .Npc:Self 00070001 )
	Call     PlayerFaceNpc 		( .Npc:Self 00000000 )
	If *Flag_Mode_Rogue == .False
		Call	InterpNpcYaw ( .Npc:Self 90` 0 )
		Wait	10`
		Call    SpeakToPlayer 		( .Npc:Self 00070004 00070001 00000000 $String_Sushie_1 )
		Set		*Var[0] 0`
		Call	InterpNpcYaw ( .Npc:Self -90` 0 )
		Wait	10`
	EndIf
	% Jump 2
	ChildThread
		Wait	6`
		Call	 PlaySound		( 2005 )					% Parakarry's Kick
	EndChildThread
	Call     SetNpcJumpscale 	( .Npc:Self *Fixed[1.5] )
	Call     NpcJump1    		( .Npc:Self -564` 6` -2` D )
	%
	Call	InterpNpcYaw ( .Npc:Self 90` 0 )
	Wait	10`
	%% Animation Ended
	If *Flag_Mode_Rogue == .False
		Call     SpeakToPlayer 		( .Npc:Self 00070004 00070001 00000000 $String_Sushie_2 )
		Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call     SpeakToPlayer 		( .Npc:Self 00070004 00070001 00000000 $String_Sushie_3 )
		Call 	SetPlayerAnimation ( 00010029 ) % yes
		Wait	35`
	EndIf
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call	 SetNpcAnimation	( .Npc:Self 00070006 ) % Laugh
	Wait	 15`
	Return
	End
}

#new:Script $SkipCutscene_SushieCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00070001 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			Call    SetNpcPos	    	( .Npc:Self -564` 6` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}
  
% Lakilester Cutscene
  
#new:Script $NPC_Cutscene8
{
	Loop     
		Call     GetSelfVar 	( 0 *Var[0] )
		If  *Var[0]  ==  1
			BreakLoop
		EndIf
		Wait     1
	EndLoop
	ExecWait $Script_CloseChest
	Exec	$Script_LakilesterCS1 *Var[A]
	Exec	$SkipCutscene_LakilesterCS1
	Loop
		DoesScriptExist ( *Var[A] *Var[0] )
		If *Var[0] == .False
			BreakLoop
		EndIf
		Wait 1
	EndLoop
	Set 	*Flag_Skip .False
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Call     DisablePartnerAI 	( 0 )
	ExecWait $Script_SetNPC
	Return
	End
}

#new:Script $Script_LakilesterCS1
{
	Wait     40` 
	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
	Call     UseSettingsFrom 	( .Cam:Default *Var[0] *Var[1] *Var[2] )
	Call     SetCamSpeed 	( .Cam:Default *Fixed[10.0] )				% Speed to Zoom to Target
	Call     SetCamDistance ( .Cam:Default 300` )						% Cam Zoom
	Call     SetCamPosB  	( .Cam:Default -543` 10` )					% Set Cam Cordinates (you need to set this manually)
	Call     SetPanTarget 	( .Cam:Default *Var[0] 35` *Var[2] )		% npcID, int X, int Y, int Z - Pan to Partner
	Call     PanToTarget 	( .Cam:Default 0 1 )
	Call     SetNpcFlagBits ( .Npc:Self 00000100 .True )
%%
% Lakilester Animation
%%
	Thread
		Call     $Function_LoadPath ( 80` )
	EndThread
	ChildThread
		Wait	7`
		Call    PlayerFaceNpc 		( .Npc:Self 0 )
		Wait	35`
		Call    PlayerFaceNpc 		( .Npc:Self 0 )
	EndChildThread
	Call     LoadPath    	( 80` $VectorList_Path_Lakilester 5 0 ) % Speed, VectorPointer, NumOfVectors, ?
	Label    14 
	Call     GetNextPathPos
	Call     SetNpcPos   	( .Npc:Self *Var[1] *Var[2] *Var[3] )
	Wait     1
	If  *Var[0]  ==  1
		Goto     14 
	EndIf
%% Animation Ended
	If *Flag_Mode_Rogue == .False
		Call     SpeakToPlayer 		( .Npc:Self 00080009 00080001 00000000 $String_Lakilester_1 )
		Call 	SetPlayerAnimation ( 00080007 ) % hand to the ear
		Wait	40`
		Call 	SetPlayerAnimation ( 00010002 ) % idle
		Call     SpeakToPlayer 		( .Npc:Self 00080009 00080001 00000000 $String_Lakilester_2 )
		Call 	SetPlayerAnimation ( 00010029 ) % yes
		Wait	35`
	EndIf
	Call 	SetPlayerAnimation ( 00010002 ) % idle
	Call	 SetNpcAnimation	( .Npc:Self 0008000D ) % Happy
	Wait	15`
	Return
	End
}

#new:Script $SkipCutscene_LakilesterCS1
{
	Set *Flag_Skip .True
	Call 	$WriteAddress ( $SkipCs_Data 2 0 .False .False ) % nuke data
	Loop % track Start Button
		Call 	$ReadAddress ( $SkipCs_Data 0 *Var[0] .False .False )
		If *Var[0] >= 3B % Start Button Holded Progress % 3B = Max
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 1st try
			% Fade Screen Brightness
			SetGroup 0
			SuspendAll .True
			SetF	*Var[0] *Fixed[25.0]  % speed
			SetF	*Var[1] *Fixed[255.0] % fully dark
			ExecWait $Script_FadeScreenOut
			Call	SetNpcAnimation 	( .Npc:Self 00080001 ) % idle
			Call	SetPlayerAnimation 	( .PlayerAnim:StandStill ) % idle
			Call    SetNpcPos	    	( .Npc:Self -564` 15` -2` )
			Call    PlayerFaceNpc 		( .Npc:Self 0 )
			Kill	*Var[A]
			Call 	$WriteAddress ( 80155128 0 3 0 .False ) % Close active dialog bubble - 2nd try
			ResumeAll .True
			Thread % Fade Screen Brightness
				SetF	*Var[0] *Fixed[25.0] % speed
				SetF	*Var[1] *Fixed[5.0]  % fully bright
				ExecWait $Script_FadeScreenIn
			EndThread
		EndIf
		Wait 1
		If *Flag_Skip == .False
			BreakLoop
		EndIf
	EndLoop
	Return
	End
}
		
#new:VectorList $VectorList_Path_Lakilester
{
	%{Path3f:Path_Lakilester}
	-552.000000 -8.000000  -28.000000
	-513.000000	249.000000 -28.000000
	-604.000000	191.000000 -3.000000
	-675.000000	156.000000 -3.000000
	-570.000000	15.000000  -3.000000
}
	
#new:Function $Function_LoadPath
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S3, 2C (SP)
    8:  DADDU     S3, A0, R0
		%SH		  T0, 1 (SP) % Crasher
    C:  SW        S0, 20 (SP)
   10:  DADDU     S0, A1, R0
   14:  ADDIU     A0, R0, 1
   18:  SW        RA, 30 (SP)
   1C:  SW        S2, 28 (SP)
   20:  JAL       ~Func:get_npc_unsafe
   24:  SW        S1, 24 (SP)
   28:  LW        V1, C (S3)
   2C:  DADDU     A0, S3, R0
   30:  LW        A1, 0 (V1)
   34:  JAL       ~Func:get_variable
   38:  DADDU     S2, V0, R0
   3C:  BEQ       S0, R0, .o48
   40:  SW        V0, 74 (S3)
   44:  SW        R0, 70 (S3)
        .o48
   48:  LUI       V0, 6666
   4C:  LW        A0, 70 (S3)
   50:  ORI       V0, V0, 6667
   54:  MULT      A0, V0
   58:  SRA       V0, A0, 1F
   5C:  MFHI      T0
   60:  SRA       V1, T0, 1
   64:  SUBU      V1, V1, V0
   68:  SLL       V0, V1, 2
   6C:  ADDU      V0, V0, V1
   70:  BNE       A0, V0, .oE0
   74:  LUI       V0, 20
   78:  ORI       V0, V0, 2
   7C:  ADDIU     S1, SP, 1A
   80:  ADDIU     S0, SP, 18
   84:  SW        S1, 10 (SP)
   88:  SW        V0, 14 (SP)
   8C:  LW        A2, 40 (S2)
   90:  LWC1      F12, 38 (S2)
   94:  LWC1      F14, 3C (S2)
   98:  JAL       80149E04
   9C:  DADDU     A3, S0, R0
   A0:  LUI       A1, 43FA
   A4:  LW        V0, 74 (S3)
   A8:  DADDU     A0, R0, R0
   AC:  SW        V0, 10 (SP)
   B0:  LW        A3, 70 (S3)
   B4:  JAL       ~Func:update_lerp
   B8:  DADDU     A2, R0, R0
   BC:  ADDIU     A0, R0, 295
   C0:  TRUNC.W.S F2, F0
   C4:  MFC1      A3, F2
   C8:  NOP
   CC:  SLL       A3, A3, 10
   D0:  LBU       A1, 1 (S0)
   D4:  LBU       A2, 1 (S1)
   D8:  JAL       ~Func:_play_sound
   DC:  SRA       A3, A3, 10
        .oE0
   E0:  LW        V1, 70 (S3)
   E4:  LW        V0, 74 (S3)
   E8:  ADDIU     V1, V1, 1
   EC:  SLT       V0, V0, V1
   F0:  SW        V1, 70 (S3)
   F4:  LW        RA, 30 (SP)
   F8:  LW        S3, 2C (SP)
   FC:  LW        S2, 28 (SP)
  100:  LW        S1, 24 (SP)
  104:  LW        S0, 20 (SP)
  108:  SLL       V0, V0, 1
  10C:  JR        RA
  110:  ADDIU     SP, SP, 38
}

%This function make the NPC into a Partner
#new:Script $Script_SetNPC
{
		% If Mario got Parakarry set MapVar2 back to his ID
		If	*MapVar[7] == .True
			Set *MapVar[2] E
		EndIf
		% Save *LastPartnerUsed
		Call GetCurrentPartnerID ( *Var[0] )
		If	*Var[0] != .False
			Set	 *LastPartnerUsed *Var[0]
		EndIf
		Switch *MapVar[2]	% Check the Chest floor where Mario is right now											
			Case == B % Goombario
				Call     $SetNPCtoPartner ( 1 .Partner:Goombario ) % NPCID, PartnerID
			Case == C % Kooper
				Call     $SetNPCtoPartner ( 2 .Partner:Kooper )
			Case == D % Bombette
				Call     $SetNPCtoPartner ( 3 .Partner:Bombette ) 
			Case == E % Parakarry
				Call     $SetNPCtoPartner ( 4 .Partner:Parakarry )
			Case == 10 % Bow
				Call     $SetNPCtoPartner ( 5 .Partner:Bow )
			Case == 11 % Watt
				Call     $SetNPCtoPartner ( 6 .Partner:Watt )
			Case == 12 % Sushie
				Call     $SetNPCtoPartner ( 7 .Partner:Sushie )
			Case == 13 % Lakilester
				Call     $SetNPCtoPartner ( 8 .Partner:Lakilester )
		EndSwitch
		If *Flag_Mode_Rogue == .True
			If	*MapVar[2] != E % isn't Parakarry
				Exec     $Script_PlayPartnerMusic % play music
			EndIf
			Goto	Bypass
		EndIf
		Call     $JoinedYourParty
		Exec     $Script_PlayPartnerMusic
		Wait     15` 
		Switch *MapVar[2]	% Check the "badge ID"
			Case == B % Goombario
				Call     ShowMessageAtScreenPos 	( 001D0189 000000A0 00000028 ) % Goombario joined your party!! Press  to have him t ...
			Case == C % Kooper
				Call     ShowMessageAtScreenPos 	( 001D018A 000000A0 00000028 ) % Kooper joined your party!! Press  to have him t ...
			Case == D % Bombette
				Call     ShowMessageAtScreenPos 	( 001D018B 000000A0 00000028 ) % Bombette joined your party!! Press  to have him t ...
			Case == E % Parakarry
				Call     ShowMessageAtScreenPos 	( 001D018C 000000A0 00000028 ) % Parakarry joined your party!! Press  to have him t ...
			Case == 10 % Bow
				Call     ShowMessageAtScreenPos 	( 001D018D 000000A0 00000028 ) % Bow joined the party--  like it or not!! Press  to ...
			Case == 11 % Watt
				Call     ShowMessageAtScreenPos 	( 001D018E 000000A0 00000028 ) % Watt joined your party!! Press  to have him t ...
			Case == 12 % Sushie
				Call     ShowMessageAtScreenPos 	( 001D018F 000000A0 00000028 ) % Sushie joined your party!! Press  to have him t ...
			Case == 13 % Lakilester
				Call     ShowMessageAtScreenPos 	( 001D0190 000000A0 00000028 ) % Lakilester joined your party!! Press  to have him t ...
		EndSwitch
		Wait     10`
		Switch *MapVar[2] % "badge id"
			Case == B % Goombario
				Call    SpeakToPlayer 	( .Npc:Partner 00010008 00010001 00000000 $String_Goombario_4 )
			Case == C % Kooper
				Call    SpeakToPlayer 	( .Npc:Partner 0002000D 00020003 00000000 $String_Kooper_3 )
			Case == D % Bombette
				Call	SetPlayerAnimation ( .PlayerAnim:StandStill )
				Call	SetPlayerAnimation ( .PlayerAnim:Thinking )
				Call    PlaySoundAtPlayer ( 0262 .Default ) % !
            	Call    ShowEmote       ( .Default .Emote:Exclamation -45` 20` 0 0 0 0 0 )
				Wait	10`
				Call	ShowMessageAtScreenPos ( $String_BlastRocks A0 28 )
				Call	SetPlayerAnimation ( .PlayerAnim:StandStill )
				Call    SpeakToPlayer 	( .Npc:Partner 0003000E 00030003 00000000 $String_Bombette_3 )
			Case == E % Parakarry
				Goto 	Bypass2
			Case == 10 % Bow
				Call     SpeakToPlayer 	( .Npc:Partner 00050004 00050001 00000000 $String_Bow_5 )
			Case == 11 % Watt
				Call     SpeakToPlayer 	( .Npc:Partner 00060004 00060001 00000000 $String_Watt_3 )
			Case == 12 % Sushie
				Call     SpeakToPlayer 	( .Npc:Partner 00070004 00070001 00000000 $String_Sushie_4 )
			Case == 13 % Lakilester
				Call     SpeakToPlayer 	( .Npc:Partner 00080009 00080001 00000000 $String_Lakilester_3 )
		EndSwitch
		Label Bypass
		% Rogue challenges
		If *Flag_Mode_Rogue == .True
			If *PitMapID != 0 % Isn't Floor Zero
				% Challenges Code
				Set *Flag_Cheev_Rogue_02 .True % Challenge Completed
				If *MapVar[2] != E % Parakarry % Parakarry's Badge is actually just an overworld that get added when the player touch it
					Add	*BadgesEquipped_Rogue 1
				EndIf
				% Rogue_TotalBadges(16-bit) == GameByte[0D6] == 803560D6
				Call 	 $ReadAddress 		( 803560D6 1 *Var[0] .False .False )
				Add		*Var[0] 1
				If	*Var[0] >= 10000` % cap
					Set *Var[0] 9999`
				EndIf
				Call 	 $WriteAddress 		( 803560D6 1 *Var[0] .False .False )
				% Var[0] = Rogue_TotalBadges
				If *BadgesEquipped_Rogue >= 10`
					Set *Flag_Cheev_Rogue_05 .True % Challenge Completed
					If *BadgesEquipped_Rogue >= 20`
						Set *Flag_Cheev_Rogue_06 .True % Challenge Completed
					EndIf
				EndIf
				If *Var[0] >= 50`
					Set *Flag_Cheev_Rogue_24 .True
					If *Var[0] >= 100`
						Set *Flag_Cheev_Rogue_25 .True
					EndIf
				EndIf
			EndIf
			% Mario got Parakarry? in Roguelike
			If *MapVar[2] == E
				Goto Bypass2
			EndIf
		EndIf
		If *PitMapID != 0
			ExecWait $GetBadge
			ExecWait $Script_UseChest
		EndIf
		Label	 Bypass2
		% Floor Zero
		% On floor Zero the partner doesn't give any badge
		% Run all the neccesary stuff functions placed on UseChest
		If *PitMapID == 0
			% Spawn Blue Switch
			Set		*Var[0] -607` % x
			Set		*Var[1] -11`  % y
			Set		*Var[2] 66`   % z
			Call     PlayEffect 	( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] ) % ~Vec3d:Switch
			Call     PlaySound  	( .Sound:SmokeBurst )
			Call     MakeEntity  	( .Entity:BlueSwitch ~Vec4d:Switch 80000000 )
			Call     AssignScript	( $PipeSpawning )
			Set		*MapFlag[1] .False
			%===
			Call 	DisablePlayerInput ( .False )
			Exec    $Script_StopPartnerMusic
			Call    ResetCam    	( .Cam:Default *Fixed[4.0] )
			Call    EnablePartnerAI
			Return
		EndIf
		If *MapVar[2] == E % Parakarry
			Call	DisablePlayerInput ( .False )
		EndIf
		Exec     $Script_StopPartnerMusic
  		Call     ResetCam    	( .Cam:Default *Fixed[4.0] )
  		Call     EnablePartnerAI
  		Return
  		End
}

#string $String_BlastRocks
{
[STYLE:INSPECT][...]
Hmm... I think with Bombette's help
I will be able to finally [PushColor][Color:07]blow[PopColor]
up the rocks from [PushColor][Color:07]that room[PopColor]...
[WAIT][END]
}
  
#new:Script $Script_PlayPartnerMusic
{
	Call     StopSound ( 80000009 )
	Call     802D5FF8 ( 00000082 00000000 ) % PlayMusic
	Return
	End
}
  
#new:Script $Script_StopPartnerMusic
{
	Call     FadeOutMusic 	( 00000000 000001F4 )
	Wait     15` 
	Call     802D5FD8
	Return
	End
}
   
#new:Function $Explotion
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  SDC1      F22, 28 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  MTC1      V0, F22
   38:  NOP
   3C:  CVT.S.W   F22, F22
   40:  JAL       ~Func:get_variable
   44:  DADDU     A0, S1, R0
   48:  LW        A1, 0 (S0)
   4C:  MTC1      V0, F20
   50:  NOP
   54:  CVT.S.W   F20, F20
   58:  JAL       ~Func:get_variable
   5C:  DADDU     A0, S1, R0
   60:  LIF       F0, 15.0
   68:  MTC1      V0, F2
   6C:  NOP
   70:  CVT.S.W   F2, F2
   74:  ADD.S     F20, F20, F0
   78:  MFC1      A1, F22
   7C:  MFC1      A3, F2
   80:  MFC1      A2, F20
   84:  JAL       800701F0
   88:  DADDU     A0, R0, R0
   8C:  DADDU     A0, R0, R0
   90:  DADDU     A1, A0, R0
   94:  JAL       802CB56C
   98:  ADDIU     A2, R0, 14
   9C:  LW        RA, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LDC1      F22, 28 (SP)
   AC:  LDC1      F20, 20 (SP)
   B0:  ADDIU     V0, R0, 2
   B4:  JR        RA
   B8:  ADDIU     SP, SP, 30
}
  
% load Partners' pictures
#new:Function $JoinedYourParty
{
		% Get MapVar2
		PUSH	RA, A0, A1, A2, A3, V0, V1
		LIO 	A1, *MapVar[2]
		JAL 	~Func:get_variable 
		RESERVED
		COPY	T1, V0 % copy in t1
		POP     RA, A0, A1, A2, A3, V0, V1
		%% end %%
  		ADDIU   SP, SP, FFD8
		ADDIU 	T0, R0, B
		BEQ 	T0, T1, .Partner1
		ADDIU 	T0, R0, C
		BEQ 	T0, T1, .Partner2
		ADDIU 	T0, R0, D
		BEQ 	T0, T1, .Partner3
		ADDIU 	T0, R0, E
		BEQ 	T0, T1, .Partner4
		ADDIU 	T0, R0, 10
		BEQ 	T0, T1, .Partner5
		ADDIU 	T0, R0, 11
		BEQ 	T0, T1, .Partner6
		ADDIU 	T0, R0, 12
		BEQ 	T0, T1, .Partner7
		ADDIU 	T0, R0, 13
		BEQ 	T0, T1, .Partner8
		NOP
		.Partner1 % Goombario
		LIA     A0, "party_kurio"
		BEQ 	R0, R0, .End
		RESERVED
		.Partner2 % Kooper
		LIA     A0, "party_kameki"
		BEQ 	R0, R0, .End
		RESERVED
		.Partner3 % Bombette
		LIA     A0, "party_pinki"
		BEQ 	R0, R0, .End
		RESERVED
		.Partner4 % Parakarry
		LIA     A0, "party_pareta"
		BEQ 	R0, R0, .End
		RESERVED
		.Partner5 % Bow
		LIA     A0, "party_resa"
		BEQ 	R0, R0, .End
		RESERVED
		.Partner6 % Watt
		LIA     A0, "party_akari"
		BEQ 	R0, R0, .End
		RESERVED
		.Partner7 % Sushie
		LIA     A0, "party_opuku"
		BEQ 	R0, R0, .End
		RESERVED
		.Partner8 % Lakilester
		LIA     A0, "party_pokopi"
		.End
    C:  ADDIU     A1, SP, 10
   10:  SW        RA, 20 (SP)
   14:  SW        S1, 1C (SP)
   18:  JAL       ~Func:load_asset_by_name
   1C:  SW        S0, 18 (SP)
   20:  DADDU     S0, V0, R0
   24:  DADDU     A0, S0, R0
   28:  LIA       S1, $PartnerPicture_Data[10]
   30:  JAL       ~Func:decode_yay0
   34:  DADDU     A1, S1, R0
   38:  JAL       ~Func:general_heap_free
   3C:  DADDU     A0, S0, R0
   40:  LIA       A0, $PartnerPicture_Data[3FA0]
   48:  LIA       V0, $PartnerPicture_Data[210]
   50:  SW        V0, 0 (A0)
   54:  ADDIU     V0, R0, 96
   58:  SH        V0, 8 (A0)
   5C:  ADDIU     V0, R0, 69
   60:  SH        V0, A (A0)
   64:  ADDIU     V0, R0, 2
   68:  SW        V0, C (A0)
   6C:  ADDIU     V0, R0, 1
   70:  SW        S1, 4 (A0)
   74:  JAL       ~Func:set_message_images
   78:  SW        V0, 10 (A0)
   7C:  LW        RA, 20 (SP)
   80:  LW        S1, 1C (SP)
   84:  LW        S0, 18 (SP)
   88:  ADDIU     V0, R0, 2
   8C:  JR        RA
   90:  ADDIU     SP, SP, 28
}
   
#new:Function $SetNPCtoPartner
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        S1, 14 (SP)
   10:  DADDU     S1, A1, R0
   14:  SW        RA, 24 (SP)
   18:  SW        S4, 20 (SP)
   1C:  SW        S3, 1C (SP)
   20:  SW        S0, 10 (SP)
   24:  LW        S0, C (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S2, R0
   38:  LW        A1, 0 (S0)
   3C:  JAL       ~Func:get_variable
   40:  DADDU     S0, V0, R0
   44:  DADDU     A0, S0, R0
   48:  JAL       ~Func:get_npc_safe
   4C:  DADDU     S4, V0, R0
   50:  LIA       S3, 8010F290
   58:  BEQ       S1, R0, .o74
   5C:  DADDU     S0, V0, R0
   60:  LB        V0, 12 (S3)
   64:  BNEL      V0, R0, .o74
   68:  SW        R0, 70 (S2)
   6C:  ADDIU     V0, R0, 2
   70:  SW        V0, 70 (S2)
        .o74
   74:  LW        V1, 70 (S2)
   78:  ADDIU     S1, R0, 1
   7C:  BEQ       V1, S1, .oCC
   80:  SLTI      V0, V1, 2
   84:  BEQ       V0, R0, .o9C
   88:  ADDIU     V0, R0, 2
   8C:  BEQ       V1, R0, .oB4
   90:  DADDU     V0, R0, R0
   94:  BEQ       R0, R0, .o164
   98:  NOP
        .o9C
   9C:  BEQ       V1, V0, .oEC
   A0:  ADDIU     V0, R0, 3
   A4:  BEQ       V1, V0, .o120
   A8:  DADDU     V0, R0, R0
   AC:  BEQ       R0, R0, .o164
   B0:  NOP
        .oB4
   B4:  JAL       800EB168
   B8:  DADDU     A0, R0, R0
   BC:  ADDIU     V0, R0, 1E
   C0:  SW        V0, 74 (S2)
   C4:  BEQ       R0, R0, .o160
   C8:  SW        S1, 70 (S2)
        .oCC
   CC:  LW        V0, 74 (S2)
   D0:  ADDIU     V1, R0, FFFF
   D4:  ADDIU     V0, V0, FFFF
   D8:  BNE       V0, V1, .o160
   DC:  SW        V0, 74 (S2)
   E0:  ADDIU     V0, R0, 2
   E4:  BEQ       R0, R0, .o160
   E8:  SW        V0, 70 (S2)
        .oEC
   EC:  DADDU     A0, S0, R0
   F0:  SLL       V0, S4, 18
   F4:  SRA       V0, V0, 15
   F8:  ADDU      V0, S3, V0
   FC:  SB        S4, 12 (S3)
  100:  JAL       800EF45C
  104:  SB        S1, 14 (V0)
  108:  LB        A0, 12 (S3)
  10C:  JAL       800EB2A4
  110:  NOP
  114:  ADDIU     V0, R0, 3
  118:  BEQ       R0, R0, .o160
  11C:  SW        V0, 70 (S2)
        .o120
  120:  JAL       ~Func:get_npc_safe
  124:  ADDIU     A0, R0, FFFC
  128:  LW        A1, C (S0)
  12C:  JAL       ~Func:set_npc_yaw
  130:  DADDU     A0, V0, R0
  134:  DADDU     A0, S0, R0
  138:  LW        V0, 0 (S0)
  13C:  ADDIU     V1, R0, FFFB
  140:  AND       V0, V0, V1
  144:  JAL       8003ABFC
  148:  SW        V0, 0 (S0)
  14C:  LIF       F0, -1000.0
  154:  ADDIU     V0, R0, 2
  158:  BEQ       R0, R0, .o164
  15C:  SWC1      F0, 3C (S0)
        .o160
  160:  DADDU     V0, R0, R0
        .o164
  164:  LW        RA, 24 (SP)
  168:  LW        S4, 20 (SP)
  16C:  LW        S3, 1C (SP)
  170:  LW        S2, 18 (SP)
  174:  LW        S1, 14 (SP)
  178:  LW        S0, 10 (SP)
  17C:  JR        RA
  180:  ADDIU     SP, SP, 28
}
  
% Strings
#string $String_Goombario_0
{
[STYLE:RIGHT][...]
Hyyyyyyyyya!
[WAIT][END]
}

#string $String_Goombario_1
{
[STYLE:RIGHT][...]
Hey, thank you for saving me!
[WAIT][NEXT][...]
I was getting really bored of
just being there...
[WAIT][NEXT][...]
Although I don't exactly remember
how I even got inside that chest...
[WAIT][END]
}
  
#string $String_Goombario_2
{
[STYLE:RIGHT][...]
So... what's your name?
[WAIT][NEXT][...]
And what are you even doing
here?
[WAIT][END]
}
  
#string $String_Goombario_3
{
[STYLE:RIGHT][...]
Woooh, I see.
Nice to meet you Mario.
[WAIT][NEXT][...]
Hey! Let's have a deal!
What if I help you on your
journey of getting out of
this Pit?
[WAIT][NEXT][...]
I'm in debt with you, you saved
me from that chest. So what do
you think?
[WAIT][END]
}

#string $String_Goombario_4
{
[STYLE:RIGHT][...]
Oh yeah, I was trapped in that
chest along with this thing too.
[WAIT][NEXT][...]
I dunno exactly what it does
but maybe it can be useful to you.
[WAIT][END]
}
  
% Kooper
#string $String_Kooper_1
{
[STYLE:RIGHT][...]
Yooooooo!
[WAIT][NEXT][...]
Hey thank you for saving me
I'm Kooper, and you are?
[WAIT][END]
}
  
#string $String_Kooper_2
{
[STYLE:RIGHT][...]
Nice to meet you Mario.
[WAIT][NEXT][...]
Hey! What if I help you on your
journey? We'll get out of this
Pit!
[WAIT][NEXT][...]
I'm in your debt, after all
you saved me. So what do you
think?
[WAIT][END]
}

#string $String_Kooper_3
{
[STYLE:RIGHT][...]
This thing was with me inside
that chest, I dunno exactly
what it does.
[WAIT][NEXT][...]
But maybe can be useful to
you.
[WAIT][END]
}
  
% Bombette
#string $String_Bombette_1
{
[STYLE:RIGHT][...]
Hey, nice to meet ya
I'm Bombette and you are?
[WAIT][END]
}
  
#string $String_Bombette_2
{
[STYLE:RIGHT][...]
Ooooh, so you want to get out
of here Mario?!
[WAIT][NEXT][...]
Not an easy task, I can tell
you that.
[WAIT][NEXT][...]
But, I will kindly help you!
[WAIT][NEXT][...]
After all, you saved me.
[WAIT][NEXT][...]
So, thank you sooooooooooooooooo
oooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooo
[WAIT][NEXT][...]
much Mario.
I will do my best!
[WAIT][END]
}

#string $String_Bombette_3
{
[STYLE:RIGHT][...]
Oh yeah, here's a present from
me to you!
[WAIT][END]
}
  
% Parakarry
#string $String_Parakarry_1
{
[STYLE:RIGHT][...]
This thing... is... kinda...
heavy!
[WAIT][END]
}

#string $String_Parakarry_2
{
[STYLE:RIGHT][...]
Thank god!
Hey, thank you for saving my
life!
[WAIT][NEXT][...]
Do you know what are we doing
here?
[WAIT][NEXT][...]
What is this place?
[WAIT][NEXT][...]
and more importantly who are
you?
[WAIT][END]
}

#string $String_Parakarry_3
{
[STYLE:RIGHT][...]
Oh, I see!
[WAIT][NEXT][...]
In that case, I will gladly help
you Mario! Let's go!
[WAIT][END]
}

% Bow
#string $String_Bow_1
{
[STYLE:RIGHT][...]
Booooo!
[WAIT][END]
}


#string $String_Bow_2
{
[STYLE:RIGHT][...]
Hahaha, hey!! I was joking!!!
[WAIT][NEXT][...]
You should have seen your face!
Hahaha.
[WAIT][NEXT][...]
Apologies, but I haven't laughed
like this in a very long time.
It just feels so good!
[WAIT][NEXT][...]
God...
Okay, I think that's enough haha
[WAIT][END]
}

#string $String_Bow_3
{
[STYLE:RIGHT][...]
Hey, sorry for that.
[WAIT][NEXT][...]
I just wanted to give you a
warm welcome hehe.
[WAIT][NEXT][...]
Joking aside, thank you for
saving me, I'm in debt with you.
[WAIT][NEXT][...]
But I want to know why did you
save me?!
[WAIT][END]
}

#string $String_Bow_4
{
[STYLE:RIGHT][...]
I see.
[WAIT][NEXT][...]
In that case, I think this will
be the beginning of a beautiful
friendship!
[WAIT][END]
}

#string $String_Bow_5
{
[STYLE:RIGHT][...]
Also, take this, it's a present
for you! [PushColor][Color:0B](I think? I don't even
know what it does... hehe)[PopColor]
[WAIT][END]
}

% Watt
#string $String_Watt_1
{
[STYLE:RIGHT][...]
Hey! Thank you for saving me!
[WAIT][NEXT][...]
Geez, I was so tired of being
there...
[WAIT][NEXT][...]
There wasn't anything really
interesting to do inside that
chest...
[WAIT][NEXT][...]
So tell me about you!
What are you doing here?
[WAIT][END]
}

#string $String_Watt_2
{
[STYLE:RIGHT][...]
Okay, I think it's time for me
to flex these muscles, let's
go Mario!
[WAIT][END]
}

#string $String_Watt_3
{
[STYLE:RIGHT][...]
I also have a present, maybe it'll
be useful for you, take it!
[WAIT][END]
}

% Sushie
#string $String_Sushie_1
{
[STYLE:RIGHT][...]
Finally! Woohooo!
[WAIT][END]
}

#string $String_Sushie_2
{
[STYLE:RIGHT][...]
Hey, thank you for saving me!
[WAIT][NEXT][...]
My bad!
Where are my manners, I still
need to introduce myself!
[WAIT][NEXT][...]
I'm Sushie and you are?
[WAIT][END]
}

#string $String_Sushie_3
{
[STYLE:RIGHT][...]
I see, in that case, I'm in.
[WAIT][NEXT][...]
I really hope we can finally
escape from this place once
and for all, Mario!
[WAIT][END]
}

#string $String_Sushie_4
{
[STYLE:RIGHT][...]
Oh yeah, this thing was with
me all this time, maybe it can
be useful for you Mario.
[WAIT][END]
}

% Lakilester
#string $String_Lakilester_1
{
[STYLE:RIGHT][...]
Wow! I thought I will never be
free from that chest...
[WAIT][NEXT][...]
Hey thank you so much, dude.
I'm in debt with you!
[WAIT][NEXT][...]
I'm Lakilester what's your name
bro?
[WAIT][END]
}

#string $String_Lakilester_2
{
[STYLE:RIGHT][...]
Mario?
[WAIT][NEXT][...]
Okay Mario!
I'm ready for whatever we need
to face or do to get out of
this place!
[WAIT][END]
}

#string $String_Lakilester_3
{
[STYLE:RIGHT][...]
I'm dying to kick some ass.
And to find out who was
responsible for trapping me
inside that chest!
[WAIT][NEXT][...]
I hope we get an answer soon,
let's go Mario!
[WAIT][NEXT][...]
Wait!
[WAIT][NEXT][...]
I almost forgot hehe, take this,
it's for you, it was inside that
chest with me all this time.
[WAIT][NEXT][...]
Maybe it's useful for you.
[WAIT][END]
}
