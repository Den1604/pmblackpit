/%
*PitDifficulty
00=Normal
01=Hard
02=Very hard
%/

% write each actor current and max hp
@Hook 193DE8 % 80265508
{
% =======================
% The player is inside the Pit?
PUSH	RA, A0, A1, A2, A3, V0, V1
LIO 	A1, *PitFlag
JAL 	~Func:get_variable 
RESERVED
% If the player is inside the Pit
BNE		V0, R0, .CheckDifficulty
NOP
% If not, pop and finish
POP		RA, A0, A1, A2, A3, V0, V1
BEQ		R0, R0, .End
NOP
.CheckDifficulty
LIO 	A1, *PitDifficulty
JAL 	~Func:get_variable 
RESERVED
COPY	T0, V0 % Save Difficulty in T0
POP		RA, A0, A1, A2, A3, V0, V1
%=========================
% Check current difficulty
% Normal
BEQ		T0, R0, .End
NOP
SLTI	T0, T0, 2 % the value is lower than 2?
% Very Hard
BEQ 	T0, R0, .VeryHard
NOP
BEQ     R0, R0, .Hard
NOP
.VeryHard
BEQ     R0, R0, .CheckCap
ADDU    V0, V0, V0 % just sum enemyHP twice = EnemyHPx2
.Hard
ORI     T0, R0, 2 % get 50%
DIV     V0, T0 % EnemyHP / 2 = 50%
MFLO    T0
ADDU    V0, V0, T0 % EnemyHP+50% = 1.5x HP
.CheckCap
% Check if the value isn't above 255
SLTIU   T0, V0, 100
BEQL    T0, R0, .End
ORI     V0, R0, FF % is above 255, set the HP value back to FF (needed only by Bonetail actually)
.End
SB		V0, 01B8 (S1) % write current hp
J 		80265510
SB		V0, 01B9 (S1) % write max hp
}

% Add difficulty compatibility for enemies attacks
% Patch EnemyDamageTarget
@Hook 1AB628 % 8027CD48
{
    % =======================
    % The player is inside the Pit?
    PUSH	RA, A0, A1, A2, A3, V0, V1
    LIO 	A1, *PitFlag
    JAL 	~Func:get_variable 
    RESERVED
    % If the player is inside the Pit
    BNE		V0, R0, .CheckDifficulty
    NOP
    % If not, pop and finish
    POP		RA, A0, A1, A2, A3, V0, V1
    BEQ		R0, R0, .End
    NOP
    .CheckDifficulty
    LIO 	A1, *PitDifficulty
    JAL 	~Func:get_variable 
    RESERVED
    COPY	T0, V0 % Save Difficulty in T0
    POP		RA, A0, A1, A2, A3, V0, V1
    % V0 = Damage to give
    %=========================
    % Check current difficulty
    % Normal
    BEQ		T0, R0, .End
    NOP
    SLTI	T0, T0, 2 % the value is lower than 2?
    % Very Hard
    BEQ 	T0, R0, .VeryHard
    NOP
    BEQ     R0, R0, .Hard
    NOP
    .VeryHard
    BEQ     R0, R0, .End
    ADDU    V0, V0, V0 % just sum enemyHP twice = EnemyHPx2
    .Hard
    ORI     T0, R0, 2 % get 50%
    DIV     V0, T0 % EnemyHP / 2 = 50%
    MFLO    T0
    ADDU    V0, V0, T0 % EnemyHP+50% = 1.5x HP
    .End
    % Pierce Mario's defense?
    % Used only by Bonetail's breaths attacks.
    PUSH    RA, A0, A1, A2, A3, V1
    COPY    GP, V0 % push V0
    LIO     A1, *PierceDefense
    JAL     ~Func:get_variable
    RESERVED
    BEQ     V0, R0, .DontPierce
    COPY    V0, GP % pop V0
    JAL     $Function_GetMarioDefense
    NOP
    ADDU    V0, V0, A1
    .DontPierce
    POP     RA, A0, A1, A2, A3, V1
    % restore vanilla code
    SH	    V0, 017E (S1)
    J       8027CD50
    LW	    A1, 0000 (S0)
}

% *out = A1
#new:Function $Function_GetMarioDefense
{
    PUSH    RA
	.CheckWaterBlock
	% Check if Mario have Sushie's Water Block Activated
	ADDIU   A1, R0, 0 % init A1
	LABU    T0, 800DC10D % Water Block: Remaining Turns
	BNEL    T0, R0, .CheckDefensePlus % If Turns isn't equal to 0, add 1 to A2
	ADDI    A1, A1, 1
	.CheckDefensePlus
	% Check if Mario have the following Badges
	JAL     $IsBadgeEquiped0 % Save a bolean value in T2
	ADDIU   T2, R0, 00FB % Badge ID
	BNEL    T2, R0, .CheckPDownDUp
	ADDI    A1, A1, 1
	.CheckPDownDUp
	JAL   $IsBadgeEquiped0 % Save a bolean value in T2
	ADDIU   T2, R0, 0116 % Badge ID
	BNEL    T2, R0, .End
	ADDI    A1, A1, 1
	% Damage Dodge doesn't boost Mario's defense so was removed
	/%.CheckDamageDodgeA
	JAL     $IsBadgeEquiped0 % Save a bolean value in T2
	ADDIU   T2, R0, 0130 % Badge ID
	BNEL    T2, R0, .CheckDamageDodgeB
	ADDI    A1, A1, 1
	.CheckDamageDodgeB
	JAL     $IsBadgeEquiped0 % Save a bolean value in T2
	ADDIU   T2, R0, 013A % Badge ID
	BNEL    T2, R0, .End
	ADDI    A1, A1, 1%/
    .End
	POP     RA
	JR	    RA
	NOP
}

% T2 = Badge ID
% *out = bool (T2)
#new:Function $IsBadgeEquiped0
{
	PUSH	T0, T1, T3
	.Init
	LIO		T0, 8010F498	% position in list
	ADDIU	T3, T0, 78		% end of list
	.Loop
	LH		T1, 0 (T0)
	BEQL	T2, T1, .End
	ADDIU	T2, R0, 1 % return true
	BNE		T0, T3, .Loop
	ADDIU	T0, T0, 2
	ADDIU	T2, R0, 0 % return false
	.End
	POP		T0, T1, T3
	JR		RA
	NOP
}

% Enemies' Damage
/% Grabed from Clover's Pro Mode
%
% Scrapped, I patched EnemyDamageTarget instead, to fix blocking double damage and other stuff
@Hook 1A641C % 80277B3C
{
% =======================
% The player is inside the Pit?
PUSH	RA, A0, A1, A2, A3, V0, V1
LIO 	A1, *PitFlag
JAL 	~Func:get_variable 
RESERVED
% If the player is inside the Pit
BNE		V0, R0, .CheckDifficulty
NOP
% If not, pop and finish
POP		RA, A0, A1, A2, A3, V0, V1
BEQ		R0, R0, .End
NOP
.CheckDifficulty
LIO 	A1, *PitDifficulty
JAL 	~Func:get_variable 
RESERVED
COPY	T0, V0 % Save Difficulty in T0
POP		RA, A0, A1, A2, A3, V0, V1
%=========================
% Check current difficulty
% Normal
BEQ		T0, R0, .End
NOP
SLTI	T0, T0, 2 % the value is lower than 2?
% Very Hard
BEQ 	T0, R0, .VeryHard
NOP
BEQ     R0, R0, .Hard
NOP
.VeryHard
BEQ     R0, R0, .DodgeAttack
ADDU    S0, S0, S0 % just sum enemyHP twice = EnemyHPx2
.Hard
ORI     T0, R0, 2 % get 50%
DIV     S0, T0 % EnemyHP / 2 = 50%
MFLO    T0
ADDU    S0, S0, T0 % EnemyHP+50% = 1.5x HP
% attack dodged?
.DodgeAttack
LABU    V0, 800DC0F7 % attack dodged byte ( FF = A pressed to soon, 01 = attack dodged )
ORI     T0, R0, 1
BEQL    V0, T0, .End
ADDIU   S0, S0, 1
.End
% deduct from HP
% S0 = Damage to substract
LBU		V0, 1B8 (S3)
SUBU	V0, V0, S0
J		80277B4C
SB		V0, 1B8 (S3)
}%/

% 8010F299 - Mario's Level
@Hook 	1AB210 % 8027C930
{
PUSH	RA, V0, A0, A1, A2, A3, S0
LABU	S0, 8010F299 % Mario's Level
% =======================
% The player is inside the Pit?
LIO 	A1, *PitFlag
JAL 	~Func:get_variable 
RESERVED
% If the player is inside the Pit
BNE		V0, R0, .CheckDifficulty
NOP
% If not just finish
BEQ		R0, R0, .End
NOP
.CheckDifficulty
LIO 	A1, *PitDifficulty
JAL 	~Func:get_variable 
RESERVED
%=========================
% Check current difficulty
/% The coins awarded get calculated according
to Mario's level, decrease his level on harder
difficulties to give more coins %/
% Normal
BEQ		V0, R0, .CheckRain
NOP
SLTI	V0, V0, 2
% Very Hard
BEQL 	V0, R0, .Sub
ADDIU   T0, R0, 4
% Hard
ADDIU   T0, R0, 2
.Sub
SUBU    S0, S0, T0
.CheckRain
% Check if the Raining Event is active in the pit
% to give more coins
LIO 	A1, *Flag_Event
JAL 	~Func:get_variable 
RESERVED
BEQ     V0, R0, .End
NOP
% The rain event is active?
LIO 	A1, *EventToLoad
JAL 	~Func:get_variable 
RESERVED
ORI     T0, R0, 1 % rain
BNE     V0, T0, .End
NOP
% The rain event is active, substract 5 levels from mario
ADDIU   T0, R0, 5
SUBU    S0, S0, T0
.End % the player isn't inside the pit
COPY	V1, S0
POP		RA, V0, A0, A1, A2, A3, S0
J		8027C938
MTC1	V1, F4
}

% Roguelike
% Set all Defenses between 1 - 20 as Zero
@Hook 194724 % 80265E44
{
    PUSH    RA, A0, A1, A2, A3, V0, V1
    % The player is inside the roguelike pit?
    LIO     A1, *PitFlag
    JAL     ~Func:get_variable
    RESERVED
    BEQ     V0, R0, .Pop
    COPY    T0, V0
    LIO     A1, *Flag_Mode_Rogue
    JAL     ~Func:get_variable
    RESERVED
    COPY    T0, V0 % move V0 inside T0
    .Pop
    POP     RA, A0, A1, A2, A3, V0, V1
    BEQ     T0, R0, .End
    NOP
    % Overwrite defense table
    % A0 = Table Address
    PUSH    A0, A1, A2, A3
    .ReadElement
    LW      A1, 0 (A0)
    BEQ     A1, R0, .Pop2 % is the end of the table?
    NOP
    LW      A1, 4 (A0) % load current element defense
    SLTI    A2, A1, 1
    BNE     A2, R0, .CheckNextElement
    NOP
    SLTI    A2, A1, 21`
    BEQ     A2, R0, .CheckNextElement
    NOP
    /% Don't overwrite the defense if is one of the following enemies
    % Get Actor's Index
    LBU     A3, 136 (S3)
    ORI     T0, R0, 0B % Koopa Troopa
    BEQ     A3, T0, .Pop2
    ORI     T0, R0, 0C % Paratroopa
    BEQ     A3, T0, .Pop2
    ORI     T0, R0, 17 % Buzzy Beetle
    BEQ     A3, T0, .Pop2
    ORI     T0, R0, 1D % Hyper Cleft
    BEQ     A3, T0, .Pop2
    ORI     T0, R0, 2C % Spike Top
    BEQ     A3, T0, .Pop2
    ORI     T0, R0, 2F % Spiny
    BEQ     A3, T0, .Pop2
    ORI     T0, R0, 4C % Koopatrol
    BEQ     A3, T0, .Pop2
    ORI     T0, R0, 46 % Bony Beetle
    BEQ     A3, T0, .Pop2
    NOP%/
    SW      R0, 4 (A0) % set element defense as zero
    .CheckNextElement
    BEQ     R0, R0, .ReadElement
    ADDIU   A0, A0, 8
    .Pop2
    POP     A0, A1, A2, A3
    .End
    DADDU	V1, A0, R0
    J       80265E4C
    LW	    V0, 0000 (V1)
}