#export:Function $handleInputCommonMenu {
    PUSH s0, s1, ra
    LAH t0, 80074026
    ANDI t0, t0, 4000 %B button
    BNE t0, r0, .BPressed
    NOP
    LIO s0, 80074044 %button input that reset every 4 frames
    LH s1, 0000 (s0) %load analog input
    LIO s3, $cursorPosition
    LIO s4, $currentPageNumber
    ANDI t0, s1, .analog_Up
    BNE t0, r0, .upPressed
    NOP
    ANDI t0, s1, .analog_Down
    BNE t0, r0, .downPressed
    NOP
    ANDI t0, s1, .analog_Left
    BNE t0, r0, .leftPressed
    NOP
    ANDI t0, s1, .analog_Right
    BNE t0, r0, .rightPressed
    NOP
    LAH s1, 80074046 %check for R/Z input
    ANDI t0, s1, 2000 %Z button
    BNE t0, r0, .zPressed
    NOP
    ANDI t0, s1, 0010 %R button
    BNE t0, r0, .rPressed
    NOP
    BEQ r0, r0, .exit
    NOP
    .buttonPressedExit
    JAL ~Func:play_sound
    ORI a0, r0, 00C7 %move cursor sound
    SAW r0, 80270110 %reset description scrolling index
    SAW r0, 80270114 %reset scrolling distance
    .exit
    .pageMax
    .skipPageUp
    .preventCursorMovingDown
    JAL $cursorArrayPosToFloatPosition
    NOP
    JPOP s0, s1, ra



    .upPressed
    LH t0, 0002 (s3) %load y array pos
    BEQ t0, r0, .upAPage
    NOP
    ADDI t0, t0, FFFF
    SH t0, 0002 (s3) %store new y array pos
    BEQ r0, r0, .buttonPressedExit
    NOP
    .upAPage
    LAW t1, $currentPageNumber
    BEQ t1, r0, .skipPageUp
    NOP
    ADDIU t1, t1, FFFF
    SAW t1, $currentPageNumber
    ORI t1, r0, 7 %Y pos bottom text
    SH t1, 0002 (s3) %store new Y pos
    BEQ r0, r0, .buttonPressedExit
    NOP

    .downPressed
    LAW t0, $currentPageNumber
    ORI t1, r0, .commonPageTotal %last page
    BEQ t0, t1, .preventCursorFromGoingToEmptyEntry
    NOP
    .afterCursorDownCheck
    LH t0, 0002 (s3) %load y array pos
    SLTI t1, t0, 0007 %8 columns
    BEQ t1, r0, .downAPage
    NOP
    ADDIU t0, t0, 1
    SH t0, 0002 (s3)
    BEQ r0, r0, .buttonPressedExit
    NOP
    .downAPage
    LAW t0, $currentPageNumber
    ORI t1, r0, .commonPageTotal %last page
    ADDIU t1, t1, FFFF
    BEQ t0, t1, .setCursorTo00
    NOP
    .afterCursor00Check
    LAW t0, $currentPageNumber
    SLTI t1, t0, .commonPageTotal
    BEQ t1, r0, .pageMax
    NOP
    ADDIU t0, t0, 1
    SAW t0, $currentPageNumber
    SH r0, 0002 (s3) %set Y to 0
    BEQ r0, r0, .buttonPressedExit
    NOP

    .leftPressed
    LAW t0, $currentPageNumber
    ORI t1, r0, .commonPageTotal %last page
    BEQ t0, t1, .buttonPressedExit
    NOP
    LH t0, 0000 (s3) %load x array pos
    XORI t0, t0, 0001 %swap x axis
    SH t0, 0000 (s3) %set new x axis
    BEQ r0, r0, .buttonPressedExit
    NOP

    .rightPressed
    LAW t0, $currentPageNumber
    ORI t1, r0, .commonPageTotal %last page
    BEQ t0, t1, .buttonPressedExit
    NOP
    LH t0, 0000 (s3) %load x array pos
    XORI t0, t0, 0001 %swap x axis
    SH t0, 0000 (s3) %set new x axis
    BEQ r0, r0, .buttonPressedExit
    NOP

    .BPressed
    SAW r0, $subMenuInMapTab
    BEQ r0, r0, .buttonPressedExit
    NOP

    .zPressed
    LAW t0, $currentPageNumber
    BEQ t0, r0, .exit
    NOP
    ADDIU t0, t0, FFFF
    SAW t0, $currentPageNumber
    BEQ r0, r0, .buttonPressedExit
    NOP

    .rPressed
    LAW t0, $currentPageNumber
    ORI t1, r0, .commonPageTotal %last page
    ADDIU t1, t1, FFFF
    BEQ t0, t1, .setCursorTo00_2
    NOP
    .afterCursor00Check_2
    LAW t0, $currentPageNumber
    SLTI t1, t0, .commonPageTotal %page limit
    BEQ t1, r0, .exit
    NOP
    ADDIU t0, t0, 1
    SAW t0, $currentPageNumber
    BEQ r0, r0, .buttonPressedExit
    NOP

    .setCursorTo00
    SH r0, 0000 (s3)
    BEQ r0, r0, .afterCursor00Check
    SH r0, 0002 (s3)

    .preventCursorFromGoingToEmptyEntry
    LH t0, 0002 (s3) %load y array pos
    SLTI t1, t0, 0007 %8 columns
    BEQ t1, r0, .preventCursorMovingDown
    NOP
    LAW t0, $currentPageNumber
    SLL t1, t0, 2 %multiply by 4
    LIO t2, $PageStructs
    ADDU t1, t1, t2 %now points to current page pointer
    LW t3, 0000 (t1) %load current page pointer
    LH t4, 0002 (s3) %load cursor Y pos
    SLL t4, t4, 2 %multiply by sizeof s32
    ADDU t5, t4, t3
    LW t6, 0000 (t5) %load actor name
    BEQ t6, r0, .preventCursorMovingDown
    NOP
    %isn't null actor pointer name
    BEQ r0, r0, .afterCursorDownCheck
    NOP

    .setCursorTo00_2
    SH r0, 0000 (s3)
    BEQ r0, r0, .afterCursor00Check_2
    SH r0, 0002 (s3)
}